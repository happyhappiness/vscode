<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_794.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_merge<pos:position pos:line="1" pos:column="14"/></name><parameter_list pos:line="1" pos:column="14">(<parameter><decl><type><name pos:line="1" pos:column="15">int<pos:position pos:line="1" pos:column="18"/></name></type> <name pos:line="1" pos:column="19">argc<pos:position pos:line="1" pos:column="23"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier><modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">argv<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="44">const<pos:position pos:line="1" pos:column="49"/></specifier> <name pos:line="1" pos:column="50">char<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">prefix<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="63"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">unsigned<pos:position pos:line="3" pos:column="17"/></name> <name pos:line="3" pos:column="18">char<pos:position pos:line="3" pos:column="22"/></name></type> <name><name pos:line="3" pos:column="23">result_tree<pos:position pos:line="3" pos:column="34"/></name><index pos:line="3" pos:column="34">[<expr><literal type="number" pos:line="3" pos:column="35">20<pos:position pos:line="3" pos:column="37"/></literal></expr>]<pos:position pos:line="3" pos:column="38"/></index></name></decl>;<pos:position pos:line="3" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">unsigned<pos:position pos:line="4" pos:column="17"/></name> <name pos:line="4" pos:column="18">char<pos:position pos:line="4" pos:column="22"/></name></type> <name><name pos:line="4" pos:column="23">stash<pos:position pos:line="4" pos:column="28"/></name><index pos:line="4" pos:column="28">[<expr><literal type="number" pos:line="4" pos:column="29">20<pos:position pos:line="4" pos:column="31"/></literal></expr>]<pos:position pos:line="4" pos:column="32"/></index></name></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">unsigned<pos:position pos:line="5" pos:column="17"/></name> <name pos:line="5" pos:column="18">char<pos:position pos:line="5" pos:column="22"/></name></type> <name><name pos:line="5" pos:column="23">head_sha1<pos:position pos:line="5" pos:column="32"/></name><index pos:line="5" pos:column="32">[<expr><literal type="number" pos:line="5" pos:column="33">20<pos:position pos:line="5" pos:column="35"/></literal></expr>]<pos:position pos:line="5" pos:column="36"/></index></name></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">commit<pos:position pos:line="6" pos:column="22"/></name></name> <modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier></type><name pos:line="6" pos:column="24">head_commit<pos:position pos:line="6" pos:column="35"/></name></decl>;<pos:position pos:line="6" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">strbuf<pos:position pos:line="7" pos:column="22"/></name></name></type> <name pos:line="7" pos:column="23">buf<pos:position pos:line="7" pos:column="26"/></name> <init pos:line="7" pos:column="27">= <expr><name pos:line="7" pos:column="29">STRBUF_INIT<pos:position pos:line="7" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="8" pos:column="9">const<pos:position pos:line="8" pos:column="14"/></specifier> <name pos:line="8" pos:column="15">char<pos:position pos:line="8" pos:column="19"/></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">head_arg<pos:position pos:line="8" pos:column="29"/></name></decl>;<pos:position pos:line="8" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">i<pos:position pos:line="9" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="16">ret<pos:position pos:line="9" pos:column="19"/></name> <init pos:line="9" pos:column="20">= <expr><literal type="number" pos:line="9" pos:column="22">0<pos:position pos:line="9" pos:column="23"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="25">head_subsumed<pos:position pos:line="9" pos:column="38"/></name></decl>;<pos:position pos:line="9" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">best_cnt<pos:position pos:line="10" pos:column="21"/></name> <init pos:line="10" pos:column="22">= <expr><operator pos:line="10" pos:column="24">-<pos:position pos:line="10" pos:column="25"/></operator><literal type="number" pos:line="10" pos:column="25">1<pos:position pos:line="10" pos:column="26"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="28">merge_was_ok<pos:position pos:line="10" pos:column="40"/></name> <init pos:line="10" pos:column="41">= <expr><literal type="number" pos:line="10" pos:column="43">0<pos:position pos:line="10" pos:column="44"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="46">automerge_was_ok<pos:position pos:line="10" pos:column="62"/></name> <init pos:line="10" pos:column="63">= <expr><literal type="number" pos:line="10" pos:column="65">0<pos:position pos:line="10" pos:column="66"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="67"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="11" pos:column="9">struct<pos:position pos:line="11" pos:column="15"/></name> <name pos:line="11" pos:column="16">commit_list<pos:position pos:line="11" pos:column="27"/></name></name> <modifier pos:line="11" pos:column="28">*<pos:position pos:line="11" pos:column="29"/></modifier></type><name pos:line="11" pos:column="29">common<pos:position pos:line="11" pos:column="35"/></name> <init pos:line="11" pos:column="36">= <expr><name pos:line="11" pos:column="38">NULL<pos:position pos:line="11" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="43"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="12" pos:column="9">const<pos:position pos:line="12" pos:column="14"/></specifier> <name pos:line="12" pos:column="15">char<pos:position pos:line="12" pos:column="19"/></name> <modifier pos:line="12" pos:column="20">*<pos:position pos:line="12" pos:column="21"/></modifier></type><name pos:line="12" pos:column="21">best_strategy<pos:position pos:line="12" pos:column="34"/></name> <init pos:line="12" pos:column="35">= <expr><name pos:line="12" pos:column="37">NULL<pos:position pos:line="12" pos:column="41"/></name></expr></init></decl>, <modifier pos:line="12" pos:column="43">*<pos:position pos:line="12" pos:column="44"/></modifier><decl><type ref="prev"/><name pos:line="12" pos:column="44">wt_strategy<pos:position pos:line="12" pos:column="55"/></name> <init pos:line="12" pos:column="56">= <expr><name pos:line="12" pos:column="58">NULL<pos:position pos:line="12" pos:column="62"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="63"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="13" pos:column="9">struct<pos:position pos:line="13" pos:column="15"/></name> <name pos:line="13" pos:column="16">commit_list<pos:position pos:line="13" pos:column="27"/></name></name> <modifier pos:line="13" pos:column="28">*<pos:position pos:line="13" pos:column="29"/></modifier></type><name pos:line="13" pos:column="29">remoteheads<pos:position pos:line="13" pos:column="40"/></name></decl>, <modifier pos:line="13" pos:column="42">*<pos:position pos:line="13" pos:column="43"/></modifier><decl><type ref="prev"/><name pos:line="13" pos:column="43">p<pos:position pos:line="13" pos:column="44"/></name></decl>;<pos:position pos:line="13" pos:column="45"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="14" pos:column="9">void<pos:position pos:line="14" pos:column="13"/></name> <modifier pos:line="14" pos:column="14">*<pos:position pos:line="14" pos:column="15"/></modifier></type><name pos:line="14" pos:column="15">branch_to_free<pos:position pos:line="14" pos:column="29"/></name></decl>;<pos:position pos:line="14" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="15" pos:column="9">int<pos:position pos:line="15" pos:column="12"/></name></type> <name pos:line="15" pos:column="13">orig_argc<pos:position pos:line="15" pos:column="22"/></name> <init pos:line="15" pos:column="23">= <expr><name pos:line="15" pos:column="25">argc<pos:position pos:line="15" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="30"/></decl_stmt>

	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">argc<pos:position pos:line="17" pos:column="17"/></name> <operator pos:line="17" pos:column="18">==<pos:position pos:line="17" pos:column="20"/></operator> <literal type="number" pos:line="17" pos:column="21">2<pos:position pos:line="17" pos:column="22"/></literal> <operator pos:line="17" pos:column="23">&amp;&amp;<pos:position pos:line="17" pos:column="33"/></operator> <operator pos:line="17" pos:column="26">!<pos:position pos:line="17" pos:column="27"/></operator><call><name pos:line="17" pos:column="27">strcmp<pos:position pos:line="17" pos:column="33"/></name><argument_list pos:line="17" pos:column="33">(<argument><expr><name><name pos:line="17" pos:column="34">argv<pos:position pos:line="17" pos:column="38"/></name><index pos:line="17" pos:column="38">[<expr><literal type="number" pos:line="17" pos:column="39">1<pos:position pos:line="17" pos:column="40"/></literal></expr>]<pos:position pos:line="17" pos:column="41"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="43">"-h"<pos:position pos:line="17" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="49"/></condition><then pos:line="17" pos:column="49">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="17">usage_with_options<pos:position pos:line="18" pos:column="35"/></name><argument_list pos:line="18" pos:column="35">(<argument><expr><name pos:line="18" pos:column="36">builtin_merge_usage<pos:position pos:line="18" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="57">builtin_merge_options<pos:position pos:line="18" pos:column="78"/></name></expr></argument>)<pos:position pos:line="18" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="80"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="20" pos:column="9">/*
	 * Check if we are _not_ on a detached HEAD, i.e. if there is a
	 * current branch.
	 */</comment>
	<expr_stmt><expr><name pos:line="24" pos:column="9">branch<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">=<pos:position pos:line="24" pos:column="17"/></operator> <name pos:line="24" pos:column="18">branch_to_free<pos:position pos:line="24" pos:column="32"/></name> <operator pos:line="24" pos:column="33">=<pos:position pos:line="24" pos:column="34"/></operator> <call><name pos:line="24" pos:column="35">resolve_refdup<pos:position pos:line="24" pos:column="49"/></name><argument_list pos:line="24" pos:column="49">(<argument><expr><literal type="string" pos:line="24" pos:column="50">"HEAD"<pos:position pos:line="24" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="58">0<pos:position pos:line="24" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="61">head_sha1<pos:position pos:line="24" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="72">NULL<pos:position pos:line="24" pos:column="76"/></name></expr></argument>)<pos:position pos:line="24" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="78"/></expr_stmt>
	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">branch<pos:position pos:line="25" pos:column="19"/></name> <operator pos:line="25" pos:column="20">&amp;&amp;<pos:position pos:line="25" pos:column="30"/></operator> <call><name pos:line="25" pos:column="23">starts_with<pos:position pos:line="25" pos:column="34"/></name><argument_list pos:line="25" pos:column="34">(<argument><expr><name pos:line="25" pos:column="35">branch<pos:position pos:line="25" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="43">"refs/heads/"<pos:position pos:line="25" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="58"/></condition><then pos:line="25" pos:column="58">
		<block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="17">branch<pos:position pos:line="26" pos:column="23"/></name> <operator pos:line="26" pos:column="24">+=<pos:position pos:line="26" pos:column="26"/></operator> <literal type="number" pos:line="26" pos:column="27">11<pos:position pos:line="26" pos:column="29"/></literal></expr>;<pos:position pos:line="26" pos:column="30"/></expr_stmt></block></then></if>
	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><operator pos:line="27" pos:column="13">!<pos:position pos:line="27" pos:column="14"/></operator><name pos:line="27" pos:column="14">branch<pos:position pos:line="27" pos:column="20"/></name> <operator pos:line="27" pos:column="21">||<pos:position pos:line="27" pos:column="23"/></operator> <call><name pos:line="27" pos:column="24">is_null_sha1<pos:position pos:line="27" pos:column="36"/></name><argument_list pos:line="27" pos:column="36">(<argument><expr><name pos:line="27" pos:column="37">head_sha1<pos:position pos:line="27" pos:column="46"/></name></expr></argument>)<pos:position pos:line="27" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="48"/></condition><then pos:line="27" pos:column="48">
		<block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="17">head_commit<pos:position pos:line="28" pos:column="28"/></name> <operator pos:line="28" pos:column="29">=<pos:position pos:line="28" pos:column="30"/></operator> <name pos:line="28" pos:column="31">NULL<pos:position pos:line="28" pos:column="35"/></name></expr>;<pos:position pos:line="28" pos:column="36"/></expr_stmt></block></then>
	<else pos:line="29" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="17">head_commit<pos:position pos:line="30" pos:column="28"/></name> <operator pos:line="30" pos:column="29">=<pos:position pos:line="30" pos:column="30"/></operator> <call><name pos:line="30" pos:column="31">lookup_commit_or_die<pos:position pos:line="30" pos:column="51"/></name><argument_list pos:line="30" pos:column="51">(<argument><expr><name pos:line="30" pos:column="52">head_sha1<pos:position pos:line="30" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="63">"HEAD"<pos:position pos:line="30" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="71"/></expr_stmt></block></else></if>

	<expr_stmt><expr><call><name pos:line="32" pos:column="9">init_diff_ui_defaults<pos:position pos:line="32" pos:column="30"/></name><argument_list pos:line="32" pos:column="30">()<pos:position pos:line="32" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="33" pos:column="9">git_config<pos:position pos:line="33" pos:column="19"/></name><argument_list pos:line="33" pos:column="19">(<argument><expr><name pos:line="33" pos:column="20">git_merge_config<pos:position pos:line="33" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="38">NULL<pos:position pos:line="33" pos:column="42"/></name></expr></argument>)<pos:position pos:line="33" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="44"/></expr_stmt>

	<if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><name pos:line="35" pos:column="13">branch_mergeoptions<pos:position pos:line="35" pos:column="32"/></name></expr>)<pos:position pos:line="35" pos:column="33"/></condition><then pos:line="35" pos:column="33">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="17">parse_branch_merge_options<pos:position pos:line="36" pos:column="43"/></name><argument_list pos:line="36" pos:column="43">(<argument><expr><name pos:line="36" pos:column="44">branch_mergeoptions<pos:position pos:line="36" pos:column="63"/></name></expr></argument>)<pos:position pos:line="36" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="65"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="37" pos:column="9">argc<pos:position pos:line="37" pos:column="13"/></name> <operator pos:line="37" pos:column="14">=<pos:position pos:line="37" pos:column="15"/></operator> <call><name pos:line="37" pos:column="16">parse_options<pos:position pos:line="37" pos:column="29"/></name><argument_list pos:line="37" pos:column="29">(<argument><expr><name pos:line="37" pos:column="30">argc<pos:position pos:line="37" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="36">argv<pos:position pos:line="37" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="42">prefix<pos:position pos:line="37" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="50">builtin_merge_options<pos:position pos:line="37" pos:column="71"/></name></expr></argument>,
			<argument><expr><name pos:line="38" pos:column="25">builtin_merge_usage<pos:position pos:line="38" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="46">0<pos:position pos:line="38" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="49"/></expr_stmt>
	<if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><name pos:line="39" pos:column="13">shortlog_len<pos:position pos:line="39" pos:column="25"/></name> <operator pos:line="39" pos:column="26">&lt;<pos:position pos:line="39" pos:column="30"/></operator> <literal type="number" pos:line="39" pos:column="28">0<pos:position pos:line="39" pos:column="29"/></literal></expr>)<pos:position pos:line="39" pos:column="30"/></condition><then pos:line="39" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><name pos:line="40" pos:column="17">shortlog_len<pos:position pos:line="40" pos:column="29"/></name> <operator pos:line="40" pos:column="30">=<pos:position pos:line="40" pos:column="31"/></operator> <ternary><condition><expr><operator pos:line="40" pos:column="32">(<pos:position pos:line="40" pos:column="33"/></operator><name pos:line="40" pos:column="33">merge_log_config<pos:position pos:line="40" pos:column="49"/></name> <operator pos:line="40" pos:column="50">&gt;<pos:position pos:line="40" pos:column="54"/></operator> <literal type="number" pos:line="40" pos:column="52">0<pos:position pos:line="40" pos:column="53"/></literal><operator pos:line="40" pos:column="53">)<pos:position pos:line="40" pos:column="54"/></operator></expr> ?<pos:position pos:line="40" pos:column="56"/></condition><then pos:line="40" pos:column="56"> <expr><name pos:line="40" pos:column="57">merge_log_config<pos:position pos:line="40" pos:column="73"/></name></expr> <pos:position pos:line="40" pos:column="74"/></then><else pos:line="40" pos:column="74">: <expr><literal type="number" pos:line="40" pos:column="76">0<pos:position pos:line="40" pos:column="77"/></literal></expr></else></ternary></expr>;<pos:position pos:line="40" pos:column="78"/></expr_stmt></block></then></if>

	<if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><name pos:line="42" pos:column="13">verbosity<pos:position pos:line="42" pos:column="22"/></name> <operator pos:line="42" pos:column="23">&lt;<pos:position pos:line="42" pos:column="27"/></operator> <literal type="number" pos:line="42" pos:column="25">0<pos:position pos:line="42" pos:column="26"/></literal> <operator pos:line="42" pos:column="27">&amp;&amp;<pos:position pos:line="42" pos:column="37"/></operator> <name pos:line="42" pos:column="30">show_progress<pos:position pos:line="42" pos:column="43"/></name> <operator pos:line="42" pos:column="44">==<pos:position pos:line="42" pos:column="46"/></operator> <operator pos:line="42" pos:column="47">-<pos:position pos:line="42" pos:column="48"/></operator><literal type="number" pos:line="42" pos:column="48">1<pos:position pos:line="42" pos:column="49"/></literal></expr>)<pos:position pos:line="42" pos:column="50"/></condition><then pos:line="42" pos:column="50">
		<block type="pseudo"><expr_stmt><expr><name pos:line="43" pos:column="17">show_progress<pos:position pos:line="43" pos:column="30"/></name> <operator pos:line="43" pos:column="31">=<pos:position pos:line="43" pos:column="32"/></operator> <literal type="number" pos:line="43" pos:column="33">0<pos:position pos:line="43" pos:column="34"/></literal></expr>;<pos:position pos:line="43" pos:column="35"/></expr_stmt></block></then></if>

	<if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><name pos:line="45" pos:column="13">abort_current_merge<pos:position pos:line="45" pos:column="32"/></name></expr>)<pos:position pos:line="45" pos:column="33"/></condition><then pos:line="45" pos:column="33"> <block pos:line="45" pos:column="34">{
		<decl_stmt><decl><type><name pos:line="46" pos:column="17">int<pos:position pos:line="46" pos:column="20"/></name></type> <name pos:line="46" pos:column="21">nargc<pos:position pos:line="46" pos:column="26"/></name> <init pos:line="46" pos:column="27">= <expr><literal type="number" pos:line="46" pos:column="29">2<pos:position pos:line="46" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="46" pos:column="31"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="47" pos:column="17">const<pos:position pos:line="47" pos:column="22"/></specifier> <name pos:line="47" pos:column="23">char<pos:position pos:line="47" pos:column="27"/></name> <modifier pos:line="47" pos:column="28">*<pos:position pos:line="47" pos:column="29"/></modifier></type><name><name pos:line="47" pos:column="29">nargv<pos:position pos:line="47" pos:column="34"/></name><index pos:line="47" pos:column="34">[]<pos:position pos:line="47" pos:column="36"/></index></name> <init pos:line="47" pos:column="37">= <expr><block pos:line="47" pos:column="39">{<expr><literal type="string" pos:line="47" pos:column="40">"reset"<pos:position pos:line="47" pos:column="47"/></literal></expr>, <expr><literal type="string" pos:line="47" pos:column="49">"--merge"<pos:position pos:line="47" pos:column="58"/></literal></expr>, <expr><name pos:line="47" pos:column="60">NULL<pos:position pos:line="47" pos:column="64"/></name></expr>}<pos:position pos:line="47" pos:column="65"/></block></expr></init></decl>;<pos:position pos:line="47" pos:column="66"/></decl_stmt>

		<if pos:line="49" pos:column="17">if <condition pos:line="49" pos:column="20">(<expr><name pos:line="49" pos:column="21">orig_argc<pos:position pos:line="49" pos:column="30"/></name> <operator pos:line="49" pos:column="31">!=<pos:position pos:line="49" pos:column="33"/></operator> <literal type="number" pos:line="49" pos:column="34">2<pos:position pos:line="49" pos:column="35"/></literal></expr>)<pos:position pos:line="49" pos:column="36"/></condition><then pos:line="49" pos:column="36">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="50" pos:column="25">usage_msg_opt<pos:position pos:line="50" pos:column="38"/></name><argument_list pos:line="50" pos:column="38">(<argument><expr><call><name pos:line="50" pos:column="39">_<pos:position pos:line="50" pos:column="40"/></name><argument_list pos:line="50" pos:column="40">(<argument><expr><literal type="string" pos:line="50" pos:column="41">"--abort expects no arguments"<pos:position pos:line="50" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="72"/></argument_list></call></expr></argument>,
			      <argument><expr><name pos:line="51" pos:column="31">builtin_merge_usage<pos:position pos:line="51" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="52">builtin_merge_options<pos:position pos:line="51" pos:column="73"/></name></expr></argument>)<pos:position pos:line="51" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="75"/></expr_stmt></block></then></if>

		<if pos:line="53" pos:column="17">if <condition pos:line="53" pos:column="20">(<expr><operator pos:line="53" pos:column="21">!<pos:position pos:line="53" pos:column="22"/></operator><call><name pos:line="53" pos:column="22">file_exists<pos:position pos:line="53" pos:column="33"/></name><argument_list pos:line="53" pos:column="33">(<argument><expr><call><name pos:line="53" pos:column="34">git_path_merge_head<pos:position pos:line="53" pos:column="53"/></name><argument_list pos:line="53" pos:column="53">()<pos:position pos:line="53" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="53" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="53" pos:column="57"/></condition><then pos:line="53" pos:column="57">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="54" pos:column="25">die<pos:position pos:line="54" pos:column="28"/></name><argument_list pos:line="54" pos:column="28">(<argument><expr><call><name pos:line="54" pos:column="29">_<pos:position pos:line="54" pos:column="30"/></name><argument_list pos:line="54" pos:column="30">(<argument><expr><literal type="string" pos:line="54" pos:column="31">"There is no merge to abort (MERGE_HEAD missing)."<pos:position pos:line="54" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="82"/></argument_list></call></expr></argument>)<pos:position pos:line="54" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="84"/></expr_stmt></block></then></if>

		<comment type="block" pos:line="56" pos:column="17">/* Invoke 'git reset --merge' */</comment>
		<expr_stmt><expr><name pos:line="57" pos:column="17">ret<pos:position pos:line="57" pos:column="20"/></name> <operator pos:line="57" pos:column="21">=<pos:position pos:line="57" pos:column="22"/></operator> <call><name pos:line="57" pos:column="23">cmd_reset<pos:position pos:line="57" pos:column="32"/></name><argument_list pos:line="57" pos:column="32">(<argument><expr><name pos:line="57" pos:column="33">nargc<pos:position pos:line="57" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="40">nargv<pos:position pos:line="57" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="47">prefix<pos:position pos:line="57" pos:column="53"/></name></expr></argument>)<pos:position pos:line="57" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="55"/></expr_stmt>
		<goto pos:line="58" pos:column="17">goto <name pos:line="58" pos:column="22">done<pos:position pos:line="58" pos:column="26"/></name>;<pos:position pos:line="58" pos:column="27"/></goto>
	}<pos:position pos:line="59" pos:column="10"/></block></then></if>

	<if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><name pos:line="61" pos:column="13">continue_current_merge<pos:position pos:line="61" pos:column="35"/></name></expr>)<pos:position pos:line="61" pos:column="36"/></condition><then pos:line="61" pos:column="36"> <block pos:line="61" pos:column="37">{
		<decl_stmt><decl><type><name pos:line="62" pos:column="17">int<pos:position pos:line="62" pos:column="20"/></name></type> <name pos:line="62" pos:column="21">nargc<pos:position pos:line="62" pos:column="26"/></name> <init pos:line="62" pos:column="27">= <expr><literal type="number" pos:line="62" pos:column="29">1<pos:position pos:line="62" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="62" pos:column="31"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="63" pos:column="17">const<pos:position pos:line="63" pos:column="22"/></specifier> <name pos:line="63" pos:column="23">char<pos:position pos:line="63" pos:column="27"/></name> <modifier pos:line="63" pos:column="28">*<pos:position pos:line="63" pos:column="29"/></modifier></type><name><name pos:line="63" pos:column="29">nargv<pos:position pos:line="63" pos:column="34"/></name><index pos:line="63" pos:column="34">[]<pos:position pos:line="63" pos:column="36"/></index></name> <init pos:line="63" pos:column="37">= <expr><block pos:line="63" pos:column="39">{<expr><literal type="string" pos:line="63" pos:column="40">"commit"<pos:position pos:line="63" pos:column="48"/></literal></expr>, <expr><name pos:line="63" pos:column="50">NULL<pos:position pos:line="63" pos:column="54"/></name></expr>}<pos:position pos:line="63" pos:column="55"/></block></expr></init></decl>;<pos:position pos:line="63" pos:column="56"/></decl_stmt>

		<if pos:line="65" pos:column="17">if <condition pos:line="65" pos:column="20">(<expr><name pos:line="65" pos:column="21">orig_argc<pos:position pos:line="65" pos:column="30"/></name> <operator pos:line="65" pos:column="31">!=<pos:position pos:line="65" pos:column="33"/></operator> <literal type="number" pos:line="65" pos:column="34">2<pos:position pos:line="65" pos:column="35"/></literal></expr>)<pos:position pos:line="65" pos:column="36"/></condition><then pos:line="65" pos:column="36">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="66" pos:column="25">usage_msg_opt<pos:position pos:line="66" pos:column="38"/></name><argument_list pos:line="66" pos:column="38">(<argument><expr><call><name pos:line="66" pos:column="39">_<pos:position pos:line="66" pos:column="40"/></name><argument_list pos:line="66" pos:column="40">(<argument><expr><literal type="string" pos:line="66" pos:column="41">"--continue expects no arguments"<pos:position pos:line="66" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="75"/></argument_list></call></expr></argument>,
			      <argument><expr><name pos:line="67" pos:column="31">builtin_merge_usage<pos:position pos:line="67" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="52">builtin_merge_options<pos:position pos:line="67" pos:column="73"/></name></expr></argument>)<pos:position pos:line="67" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="75"/></expr_stmt></block></then></if>

		<if pos:line="69" pos:column="17">if <condition pos:line="69" pos:column="20">(<expr><operator pos:line="69" pos:column="21">!<pos:position pos:line="69" pos:column="22"/></operator><call><name pos:line="69" pos:column="22">file_exists<pos:position pos:line="69" pos:column="33"/></name><argument_list pos:line="69" pos:column="33">(<argument><expr><call><name pos:line="69" pos:column="34">git_path_merge_head<pos:position pos:line="69" pos:column="53"/></name><argument_list pos:line="69" pos:column="53">()<pos:position pos:line="69" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="69" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="69" pos:column="57"/></condition><then pos:line="69" pos:column="57">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="70" pos:column="25">die<pos:position pos:line="70" pos:column="28"/></name><argument_list pos:line="70" pos:column="28">(<argument><expr><call><name pos:line="70" pos:column="29">_<pos:position pos:line="70" pos:column="30"/></name><argument_list pos:line="70" pos:column="30">(<argument><expr><literal type="string" pos:line="70" pos:column="31">"There is no merge in progress (MERGE_HEAD missing)."<pos:position pos:line="70" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="85"/></argument_list></call></expr></argument>)<pos:position pos:line="70" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="87"/></expr_stmt></block></then></if>

		<comment type="block" pos:line="72" pos:column="17">/* Invoke 'git commit' */</comment>
		<expr_stmt><expr><name pos:line="73" pos:column="17">ret<pos:position pos:line="73" pos:column="20"/></name> <operator pos:line="73" pos:column="21">=<pos:position pos:line="73" pos:column="22"/></operator> <call><name pos:line="73" pos:column="23">cmd_commit<pos:position pos:line="73" pos:column="33"/></name><argument_list pos:line="73" pos:column="33">(<argument><expr><name pos:line="73" pos:column="34">nargc<pos:position pos:line="73" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="41">nargv<pos:position pos:line="73" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="48">prefix<pos:position pos:line="73" pos:column="54"/></name></expr></argument>)<pos:position pos:line="73" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="56"/></expr_stmt>
		<goto pos:line="74" pos:column="17">goto <name pos:line="74" pos:column="22">done<pos:position pos:line="74" pos:column="26"/></name>;<pos:position pos:line="74" pos:column="27"/></goto>
	}<pos:position pos:line="75" pos:column="10"/></block></then></if>

	<if pos:line="77" pos:column="9">if <condition pos:line="77" pos:column="12">(<expr><call><name pos:line="77" pos:column="13">read_cache_unmerged<pos:position pos:line="77" pos:column="32"/></name><argument_list pos:line="77" pos:column="32">()<pos:position pos:line="77" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="77" pos:column="35"/></condition><then pos:line="77" pos:column="35">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="78" pos:column="17">die_resolve_conflict<pos:position pos:line="78" pos:column="37"/></name><argument_list pos:line="78" pos:column="37">(<argument><expr><literal type="string" pos:line="78" pos:column="38">"merge"<pos:position pos:line="78" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="47"/></expr_stmt></block></then></if>

	<if pos:line="80" pos:column="9">if <condition pos:line="80" pos:column="12">(<expr><call><name pos:line="80" pos:column="13">file_exists<pos:position pos:line="80" pos:column="24"/></name><argument_list pos:line="80" pos:column="24">(<argument><expr><call><name pos:line="80" pos:column="25">git_path_merge_head<pos:position pos:line="80" pos:column="44"/></name><argument_list pos:line="80" pos:column="44">()<pos:position pos:line="80" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="80" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="80" pos:column="48"/></condition><then pos:line="80" pos:column="48"> <block pos:line="80" pos:column="49">{
		<comment type="block" pos:line="81" pos:column="17">/*
		 * There is no unmerged entry, don't advise 'git
		 * add/rm &lt;file&gt;', just 'git commit'.
		 */</comment>
		<if pos:line="85" pos:column="17">if <condition pos:line="85" pos:column="20">(<expr><name pos:line="85" pos:column="21">advice_resolve_conflict<pos:position pos:line="85" pos:column="44"/></name></expr>)<pos:position pos:line="85" pos:column="45"/></condition><then pos:line="85" pos:column="45">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="86" pos:column="25">die<pos:position pos:line="86" pos:column="28"/></name><argument_list pos:line="86" pos:column="28">(<argument><expr><call><name pos:line="86" pos:column="29">_<pos:position pos:line="86" pos:column="30"/></name><argument_list pos:line="86" pos:column="30">(<argument><expr><literal type="string" pos:line="86" pos:column="31">"You have not concluded your merge (MERGE_HEAD exists).\n"<pos:position pos:line="86" pos:column="89"/></literal>
				  <literal type="string" pos:line="87" pos:column="35">"Please, commit your changes before you merge."<pos:position pos:line="87" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="87" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="85"/></expr_stmt></block></then>
		<else pos:line="88" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="89" pos:column="25">die<pos:position pos:line="89" pos:column="28"/></name><argument_list pos:line="89" pos:column="28">(<argument><expr><call><name pos:line="89" pos:column="29">_<pos:position pos:line="89" pos:column="30"/></name><argument_list pos:line="89" pos:column="30">(<argument><expr><literal type="string" pos:line="89" pos:column="31">"You have not concluded your merge (MERGE_HEAD exists)."<pos:position pos:line="89" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="88"/></argument_list></call></expr></argument>)<pos:position pos:line="89" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="90"/></expr_stmt></block></else></if>
	}<pos:position pos:line="90" pos:column="10"/></block></then></if>
	<if pos:line="91" pos:column="9">if <condition pos:line="91" pos:column="12">(<expr><call><name pos:line="91" pos:column="13">file_exists<pos:position pos:line="91" pos:column="24"/></name><argument_list pos:line="91" pos:column="24">(<argument><expr><call><name pos:line="91" pos:column="25">git_path_cherry_pick_head<pos:position pos:line="91" pos:column="50"/></name><argument_list pos:line="91" pos:column="50">()<pos:position pos:line="91" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="91" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="91" pos:column="54"/></condition><then pos:line="91" pos:column="54"> <block pos:line="91" pos:column="55">{
		<if pos:line="92" pos:column="17">if <condition pos:line="92" pos:column="20">(<expr><name pos:line="92" pos:column="21">advice_resolve_conflict<pos:position pos:line="92" pos:column="44"/></name></expr>)<pos:position pos:line="92" pos:column="45"/></condition><then pos:line="92" pos:column="45">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="93" pos:column="25">die<pos:position pos:line="93" pos:column="28"/></name><argument_list pos:line="93" pos:column="28">(<argument><expr><call><name pos:line="93" pos:column="29">_<pos:position pos:line="93" pos:column="30"/></name><argument_list pos:line="93" pos:column="30">(<argument><expr><literal type="string" pos:line="93" pos:column="31">"You have not concluded your cherry-pick (CHERRY_PICK_HEAD exists).\n"<pos:position pos:line="93" pos:column="101"/></literal>
			    <literal type="string" pos:line="94" pos:column="29">"Please, commit your changes before you merge."<pos:position pos:line="94" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="94" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="94" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="79"/></expr_stmt></block></then>
		<else pos:line="95" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="96" pos:column="25">die<pos:position pos:line="96" pos:column="28"/></name><argument_list pos:line="96" pos:column="28">(<argument><expr><call><name pos:line="96" pos:column="29">_<pos:position pos:line="96" pos:column="30"/></name><argument_list pos:line="96" pos:column="30">(<argument><expr><literal type="string" pos:line="96" pos:column="31">"You have not concluded your cherry-pick (CHERRY_PICK_HEAD exists)."<pos:position pos:line="96" pos:column="99"/></literal></expr></argument>)<pos:position pos:line="96" pos:column="100"/></argument_list></call></expr></argument>)<pos:position pos:line="96" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="102"/></expr_stmt></block></else></if>
	}<pos:position pos:line="97" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="98" pos:column="9">resolve_undo_clear<pos:position pos:line="98" pos:column="27"/></name><argument_list pos:line="98" pos:column="27">()<pos:position pos:line="98" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="30"/></expr_stmt>

	<if pos:line="100" pos:column="9">if <condition pos:line="100" pos:column="12">(<expr><name pos:line="100" pos:column="13">verbosity<pos:position pos:line="100" pos:column="22"/></name> <operator pos:line="100" pos:column="23">&lt;<pos:position pos:line="100" pos:column="27"/></operator> <literal type="number" pos:line="100" pos:column="25">0<pos:position pos:line="100" pos:column="26"/></literal></expr>)<pos:position pos:line="100" pos:column="27"/></condition><then pos:line="100" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><name pos:line="101" pos:column="17">show_diffstat<pos:position pos:line="101" pos:column="30"/></name> <operator pos:line="101" pos:column="31">=<pos:position pos:line="101" pos:column="32"/></operator> <literal type="number" pos:line="101" pos:column="33">0<pos:position pos:line="101" pos:column="34"/></literal></expr>;<pos:position pos:line="101" pos:column="35"/></expr_stmt></block></then></if>

	<if pos:line="103" pos:column="9">if <condition pos:line="103" pos:column="12">(<expr><name pos:line="103" pos:column="13">squash<pos:position pos:line="103" pos:column="19"/></name></expr>)<pos:position pos:line="103" pos:column="20"/></condition><then pos:line="103" pos:column="20"> <block pos:line="103" pos:column="21">{
		<if pos:line="104" pos:column="17">if <condition pos:line="104" pos:column="20">(<expr><name pos:line="104" pos:column="21">fast_forward<pos:position pos:line="104" pos:column="33"/></name> <operator pos:line="104" pos:column="34">==<pos:position pos:line="104" pos:column="36"/></operator> <name pos:line="104" pos:column="37">FF_NO<pos:position pos:line="104" pos:column="42"/></name></expr>)<pos:position pos:line="104" pos:column="43"/></condition><then pos:line="104" pos:column="43">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="105" pos:column="25">die<pos:position pos:line="105" pos:column="28"/></name><argument_list pos:line="105" pos:column="28">(<argument><expr><call><name pos:line="105" pos:column="29">_<pos:position pos:line="105" pos:column="30"/></name><argument_list pos:line="105" pos:column="30">(<argument><expr><literal type="string" pos:line="105" pos:column="31">"You cannot combine --squash with --no-ff."<pos:position pos:line="105" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="105" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="105" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="77"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="106" pos:column="17">option_commit<pos:position pos:line="106" pos:column="30"/></name> <operator pos:line="106" pos:column="31">=<pos:position pos:line="106" pos:column="32"/></operator> <literal type="number" pos:line="106" pos:column="33">0<pos:position pos:line="106" pos:column="34"/></literal></expr>;<pos:position pos:line="106" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="107" pos:column="10"/></block></then></if>

	<if pos:line="109" pos:column="9">if <condition pos:line="109" pos:column="12">(<expr><operator pos:line="109" pos:column="13">!<pos:position pos:line="109" pos:column="14"/></operator><name pos:line="109" pos:column="14">argc<pos:position pos:line="109" pos:column="18"/></name></expr>)<pos:position pos:line="109" pos:column="19"/></condition><then pos:line="109" pos:column="19"> <block pos:line="109" pos:column="20">{
		<if pos:line="110" pos:column="17">if <condition pos:line="110" pos:column="20">(<expr><name pos:line="110" pos:column="21">default_to_upstream<pos:position pos:line="110" pos:column="40"/></name></expr>)<pos:position pos:line="110" pos:column="41"/></condition><then pos:line="110" pos:column="41">
			<block type="pseudo"><expr_stmt><expr><name pos:line="111" pos:column="25">argc<pos:position pos:line="111" pos:column="29"/></name> <operator pos:line="111" pos:column="30">=<pos:position pos:line="111" pos:column="31"/></operator> <call><name pos:line="111" pos:column="32">setup_with_upstream<pos:position pos:line="111" pos:column="51"/></name><argument_list pos:line="111" pos:column="51">(<argument><expr><operator pos:line="111" pos:column="52">&amp;<pos:position pos:line="111" pos:column="57"/></operator><name pos:line="111" pos:column="53">argv<pos:position pos:line="111" pos:column="57"/></name></expr></argument>)<pos:position pos:line="111" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="59"/></expr_stmt></block></then>
		<else pos:line="112" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="113" pos:column="25">die<pos:position pos:line="113" pos:column="28"/></name><argument_list pos:line="113" pos:column="28">(<argument><expr><call><name pos:line="113" pos:column="29">_<pos:position pos:line="113" pos:column="30"/></name><argument_list pos:line="113" pos:column="30">(<argument><expr><literal type="string" pos:line="113" pos:column="31">"No commit specified and merge.defaultToUpstream not set."<pos:position pos:line="113" pos:column="89"/></literal></expr></argument>)<pos:position pos:line="113" pos:column="90"/></argument_list></call></expr></argument>)<pos:position pos:line="113" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="92"/></expr_stmt></block></else></if>
	}<pos:position pos:line="114" pos:column="10"/></block></then> <elseif pos:line="114" pos:column="11">else <if pos:line="114" pos:column="16">if <condition pos:line="114" pos:column="19">(<expr><name pos:line="114" pos:column="20">argc<pos:position pos:line="114" pos:column="24"/></name> <operator pos:line="114" pos:column="25">==<pos:position pos:line="114" pos:column="27"/></operator> <literal type="number" pos:line="114" pos:column="28">1<pos:position pos:line="114" pos:column="29"/></literal> <operator pos:line="114" pos:column="30">&amp;&amp;<pos:position pos:line="114" pos:column="40"/></operator> <operator pos:line="114" pos:column="33">!<pos:position pos:line="114" pos:column="34"/></operator><call><name pos:line="114" pos:column="34">strcmp<pos:position pos:line="114" pos:column="40"/></name><argument_list pos:line="114" pos:column="40">(<argument><expr><name><name pos:line="114" pos:column="41">argv<pos:position pos:line="114" pos:column="45"/></name><index pos:line="114" pos:column="45">[<expr><literal type="number" pos:line="114" pos:column="46">0<pos:position pos:line="114" pos:column="47"/></literal></expr>]<pos:position pos:line="114" pos:column="48"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="114" pos:column="50">"-"<pos:position pos:line="114" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="114" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="114" pos:column="55"/></condition><then pos:line="114" pos:column="55"> <block pos:line="114" pos:column="56">{
		<expr_stmt><expr><name><name pos:line="115" pos:column="17">argv<pos:position pos:line="115" pos:column="21"/></name><index pos:line="115" pos:column="21">[<expr><literal type="number" pos:line="115" pos:column="22">0<pos:position pos:line="115" pos:column="23"/></literal></expr>]<pos:position pos:line="115" pos:column="24"/></index></name> <operator pos:line="115" pos:column="25">=<pos:position pos:line="115" pos:column="26"/></operator> <literal type="string" pos:line="115" pos:column="27">"@{-1}"<pos:position pos:line="115" pos:column="34"/></literal></expr>;<pos:position pos:line="115" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="116" pos:column="10"/></block></then></if></elseif></if>

	<if pos:line="118" pos:column="9">if <condition pos:line="118" pos:column="12">(<expr><operator pos:line="118" pos:column="13">!<pos:position pos:line="118" pos:column="14"/></operator><name pos:line="118" pos:column="14">argc<pos:position pos:line="118" pos:column="18"/></name></expr>)<pos:position pos:line="118" pos:column="19"/></condition><then pos:line="118" pos:column="19">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="119" pos:column="17">usage_with_options<pos:position pos:line="119" pos:column="35"/></name><argument_list pos:line="119" pos:column="35">(<argument><expr><name pos:line="119" pos:column="36">builtin_merge_usage<pos:position pos:line="119" pos:column="55"/></name></expr></argument>,
			<argument><expr><name pos:line="120" pos:column="25">builtin_merge_options<pos:position pos:line="120" pos:column="46"/></name></expr></argument>)<pos:position pos:line="120" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="48"/></expr_stmt></block></then></if>

	<if pos:line="122" pos:column="9">if <condition pos:line="122" pos:column="12">(<expr><operator pos:line="122" pos:column="13">!<pos:position pos:line="122" pos:column="14"/></operator><name pos:line="122" pos:column="14">head_commit<pos:position pos:line="122" pos:column="25"/></name></expr>)<pos:position pos:line="122" pos:column="26"/></condition><then pos:line="122" pos:column="26"> <block pos:line="122" pos:column="27">{
		<comment type="block" pos:line="123" pos:column="17">/*
		 * If the merged head is a valid one there is no reason
		 * to forbid "git merge" into a branch yet to be born.
		 * We do the same for "git pull".
		 */</comment>
		<decl_stmt><decl><type><name pos:line="128" pos:column="17">unsigned<pos:position pos:line="128" pos:column="25"/></name> <name pos:line="128" pos:column="26">char<pos:position pos:line="128" pos:column="30"/></name> <modifier pos:line="128" pos:column="31">*<pos:position pos:line="128" pos:column="32"/></modifier></type><name pos:line="128" pos:column="32">remote_head_sha1<pos:position pos:line="128" pos:column="48"/></name></decl>;<pos:position pos:line="128" pos:column="49"/></decl_stmt>
		<if pos:line="129" pos:column="17">if <condition pos:line="129" pos:column="20">(<expr><name pos:line="129" pos:column="21">squash<pos:position pos:line="129" pos:column="27"/></name></expr>)<pos:position pos:line="129" pos:column="28"/></condition><then pos:line="129" pos:column="28">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="130" pos:column="25">die<pos:position pos:line="130" pos:column="28"/></name><argument_list pos:line="130" pos:column="28">(<argument><expr><call><name pos:line="130" pos:column="29">_<pos:position pos:line="130" pos:column="30"/></name><argument_list pos:line="130" pos:column="30">(<argument><expr><literal type="string" pos:line="130" pos:column="31">"Squash commit into empty head not supported yet"<pos:position pos:line="130" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="130" pos:column="81"/></argument_list></call></expr></argument>)<pos:position pos:line="130" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="83"/></expr_stmt></block></then></if>
		<if pos:line="131" pos:column="17">if <condition pos:line="131" pos:column="20">(<expr><name pos:line="131" pos:column="21">fast_forward<pos:position pos:line="131" pos:column="33"/></name> <operator pos:line="131" pos:column="34">==<pos:position pos:line="131" pos:column="36"/></operator> <name pos:line="131" pos:column="37">FF_NO<pos:position pos:line="131" pos:column="42"/></name></expr>)<pos:position pos:line="131" pos:column="43"/></condition><then pos:line="131" pos:column="43">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="132" pos:column="25">die<pos:position pos:line="132" pos:column="28"/></name><argument_list pos:line="132" pos:column="28">(<argument><expr><call><name pos:line="132" pos:column="29">_<pos:position pos:line="132" pos:column="30"/></name><argument_list pos:line="132" pos:column="30">(<argument><expr><literal type="string" pos:line="132" pos:column="31">"Non-fast-forward commit does not make sense into "<pos:position pos:line="132" pos:column="82"/></literal>
			    <literal type="string" pos:line="133" pos:column="29">"an empty head"<pos:position pos:line="133" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="133" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="133" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="47"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="134" pos:column="17">remoteheads<pos:position pos:line="134" pos:column="28"/></name> <operator pos:line="134" pos:column="29">=<pos:position pos:line="134" pos:column="30"/></operator> <call><name pos:line="134" pos:column="31">collect_parents<pos:position pos:line="134" pos:column="46"/></name><argument_list pos:line="134" pos:column="46">(<argument><expr><name pos:line="134" pos:column="47">head_commit<pos:position pos:line="134" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="134" pos:column="60">&amp;<pos:position pos:line="134" pos:column="65"/></operator><name pos:line="134" pos:column="61">head_subsumed<pos:position pos:line="134" pos:column="74"/></name></expr></argument>,
					      <argument><expr><name pos:line="135" pos:column="47">argc<pos:position pos:line="135" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="135" pos:column="53">argv<pos:position pos:line="135" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="135" pos:column="59">NULL<pos:position pos:line="135" pos:column="63"/></name></expr></argument>)<pos:position pos:line="135" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="65"/></expr_stmt>
		<if pos:line="136" pos:column="17">if <condition pos:line="136" pos:column="20">(<expr><operator pos:line="136" pos:column="21">!<pos:position pos:line="136" pos:column="22"/></operator><name pos:line="136" pos:column="22">remoteheads<pos:position pos:line="136" pos:column="33"/></name></expr>)<pos:position pos:line="136" pos:column="34"/></condition><then pos:line="136" pos:column="34">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="137" pos:column="25">die<pos:position pos:line="137" pos:column="28"/></name><argument_list pos:line="137" pos:column="28">(<argument><expr><call><name pos:line="137" pos:column="29">_<pos:position pos:line="137" pos:column="30"/></name><argument_list pos:line="137" pos:column="30">(<argument><expr><literal type="string" pos:line="137" pos:column="31">"%s - not something we can merge"<pos:position pos:line="137" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="137" pos:column="65"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="137" pos:column="67">argv<pos:position pos:line="137" pos:column="71"/></name><index pos:line="137" pos:column="71">[<expr><literal type="number" pos:line="137" pos:column="72">0<pos:position pos:line="137" pos:column="73"/></literal></expr>]<pos:position pos:line="137" pos:column="74"/></index></name></expr></argument>)<pos:position pos:line="137" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="76"/></expr_stmt></block></then></if>
		<if pos:line="138" pos:column="17">if <condition pos:line="138" pos:column="20">(<expr><name><name pos:line="138" pos:column="21">remoteheads<pos:position pos:line="138" pos:column="32"/></name><operator pos:line="138" pos:column="32">-&gt;<pos:position pos:line="138" pos:column="37"/></operator><name pos:line="138" pos:column="34">next<pos:position pos:line="138" pos:column="38"/></name></name></expr>)<pos:position pos:line="138" pos:column="39"/></condition><then pos:line="138" pos:column="39">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="139" pos:column="25">die<pos:position pos:line="139" pos:column="28"/></name><argument_list pos:line="139" pos:column="28">(<argument><expr><call><name pos:line="139" pos:column="29">_<pos:position pos:line="139" pos:column="30"/></name><argument_list pos:line="139" pos:column="30">(<argument><expr><literal type="string" pos:line="139" pos:column="31">"Can merge only exactly one commit into empty head"<pos:position pos:line="139" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="139" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="139" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="85"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="140" pos:column="17">remote_head_sha1<pos:position pos:line="140" pos:column="33"/></name> <operator pos:line="140" pos:column="34">=<pos:position pos:line="140" pos:column="35"/></operator> <name><name pos:line="140" pos:column="36">remoteheads<pos:position pos:line="140" pos:column="47"/></name><operator pos:line="140" pos:column="47">-&gt;<pos:position pos:line="140" pos:column="52"/></operator><name pos:line="140" pos:column="49">item<pos:position pos:line="140" pos:column="53"/></name><operator pos:line="140" pos:column="53">-&gt;<pos:position pos:line="140" pos:column="58"/></operator><name pos:line="140" pos:column="55">object<pos:position pos:line="140" pos:column="61"/></name><operator pos:line="140" pos:column="61">.<pos:position pos:line="140" pos:column="62"/></operator><name pos:line="140" pos:column="62">oid<pos:position pos:line="140" pos:column="65"/></name><operator pos:line="140" pos:column="65">.<pos:position pos:line="140" pos:column="66"/></operator><name pos:line="140" pos:column="66">hash<pos:position pos:line="140" pos:column="70"/></name></name></expr>;<pos:position pos:line="140" pos:column="71"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="141" pos:column="17">read_empty<pos:position pos:line="141" pos:column="27"/></name><argument_list pos:line="141" pos:column="27">(<argument><expr><name pos:line="141" pos:column="28">remote_head_sha1<pos:position pos:line="141" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="141" pos:column="46">0<pos:position pos:line="141" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="141" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="142" pos:column="17">update_ref<pos:position pos:line="142" pos:column="27"/></name><argument_list pos:line="142" pos:column="27">(<argument><expr><literal type="string" pos:line="142" pos:column="28">"initial pull"<pos:position pos:line="142" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="142" pos:column="44">"HEAD"<pos:position pos:line="142" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="142" pos:column="52">remote_head_sha1<pos:position pos:line="142" pos:column="68"/></name></expr></argument>,
			   <argument><expr><name pos:line="143" pos:column="28">NULL<pos:position pos:line="143" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="143" pos:column="34">0<pos:position pos:line="143" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="143" pos:column="37">UPDATE_REFS_DIE_ON_ERR<pos:position pos:line="143" pos:column="59"/></name></expr></argument>)<pos:position pos:line="143" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="61"/></expr_stmt>
		<goto pos:line="144" pos:column="17">goto <name pos:line="144" pos:column="22">done<pos:position pos:line="144" pos:column="26"/></name>;<pos:position pos:line="144" pos:column="27"/></goto>
	}<pos:position pos:line="145" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="147" pos:column="9">/*
	 * This could be traditional "merge &lt;msg&gt; HEAD &lt;commit&gt;..."  and
	 * the way we can tell it is to see if the second token is HEAD,
	 * but some people might have misused the interface and used a
	 * commit-ish that is the same as HEAD there instead.
	 * Traditional format never would have "-m" so it is an
	 * additional safety measure to check for it.
	 */</comment>
	<if pos:line="155" pos:column="9">if <condition pos:line="155" pos:column="12">(<expr><operator pos:line="155" pos:column="13">!<pos:position pos:line="155" pos:column="14"/></operator><name pos:line="155" pos:column="14">have_message<pos:position pos:line="155" pos:column="26"/></name> <operator pos:line="155" pos:column="27">&amp;&amp;<pos:position pos:line="155" pos:column="37"/></operator>
	    <call><name pos:line="156" pos:column="13">is_old_style_invocation<pos:position pos:line="156" pos:column="36"/></name><argument_list pos:line="156" pos:column="36">(<argument><expr><name pos:line="156" pos:column="37">argc<pos:position pos:line="156" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="156" pos:column="43">argv<pos:position pos:line="156" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="156" pos:column="49">head_commit<pos:position pos:line="156" pos:column="60"/></name><operator pos:line="156" pos:column="60">-&gt;<pos:position pos:line="156" pos:column="65"/></operator><name pos:line="156" pos:column="62">object<pos:position pos:line="156" pos:column="68"/></name><operator pos:line="156" pos:column="68">.<pos:position pos:line="156" pos:column="69"/></operator><name pos:line="156" pos:column="69">oid<pos:position pos:line="156" pos:column="72"/></name><operator pos:line="156" pos:column="72">.<pos:position pos:line="156" pos:column="73"/></operator><name pos:line="156" pos:column="73">hash<pos:position pos:line="156" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="156" pos:column="78"/></argument_list></call></expr>)<pos:position pos:line="156" pos:column="79"/></condition><then pos:line="156" pos:column="79"> <block pos:line="156" pos:column="80">{
		<expr_stmt><expr><call><name pos:line="157" pos:column="17">warning<pos:position pos:line="157" pos:column="24"/></name><argument_list pos:line="157" pos:column="24">(<argument><expr><literal type="string" pos:line="157" pos:column="25">"old-style 'git merge &lt;msg&gt; HEAD &lt;commit&gt;' is deprecated."<pos:position pos:line="157" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="157" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="85"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="158" pos:column="17">strbuf_addstr<pos:position pos:line="158" pos:column="30"/></name><argument_list pos:line="158" pos:column="30">(<argument><expr><operator pos:line="158" pos:column="31">&amp;<pos:position pos:line="158" pos:column="36"/></operator><name pos:line="158" pos:column="32">merge_msg<pos:position pos:line="158" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="158" pos:column="43">argv<pos:position pos:line="158" pos:column="47"/></name><index pos:line="158" pos:column="47">[<expr><literal type="number" pos:line="158" pos:column="48">0<pos:position pos:line="158" pos:column="49"/></literal></expr>]<pos:position pos:line="158" pos:column="50"/></index></name></expr></argument>)<pos:position pos:line="158" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><name pos:line="159" pos:column="17">head_arg<pos:position pos:line="159" pos:column="25"/></name> <operator pos:line="159" pos:column="26">=<pos:position pos:line="159" pos:column="27"/></operator> <name><name pos:line="159" pos:column="28">argv<pos:position pos:line="159" pos:column="32"/></name><index pos:line="159" pos:column="32">[<expr><literal type="number" pos:line="159" pos:column="33">1<pos:position pos:line="159" pos:column="34"/></literal></expr>]<pos:position pos:line="159" pos:column="35"/></index></name></expr>;<pos:position pos:line="159" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><name pos:line="160" pos:column="17">argv<pos:position pos:line="160" pos:column="21"/></name> <operator pos:line="160" pos:column="22">+=<pos:position pos:line="160" pos:column="24"/></operator> <literal type="number" pos:line="160" pos:column="25">2<pos:position pos:line="160" pos:column="26"/></literal></expr>;<pos:position pos:line="160" pos:column="27"/></expr_stmt>
		<expr_stmt><expr><name pos:line="161" pos:column="17">argc<pos:position pos:line="161" pos:column="21"/></name> <operator pos:line="161" pos:column="22">-=<pos:position pos:line="161" pos:column="24"/></operator> <literal type="number" pos:line="161" pos:column="25">2<pos:position pos:line="161" pos:column="26"/></literal></expr>;<pos:position pos:line="161" pos:column="27"/></expr_stmt>
		<expr_stmt><expr><name pos:line="162" pos:column="17">remoteheads<pos:position pos:line="162" pos:column="28"/></name> <operator pos:line="162" pos:column="29">=<pos:position pos:line="162" pos:column="30"/></operator> <call><name pos:line="162" pos:column="31">collect_parents<pos:position pos:line="162" pos:column="46"/></name><argument_list pos:line="162" pos:column="46">(<argument><expr><name pos:line="162" pos:column="47">head_commit<pos:position pos:line="162" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="162" pos:column="60">&amp;<pos:position pos:line="162" pos:column="65"/></operator><name pos:line="162" pos:column="61">head_subsumed<pos:position pos:line="162" pos:column="74"/></name></expr></argument>,
					      <argument><expr><name pos:line="163" pos:column="47">argc<pos:position pos:line="163" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="163" pos:column="53">argv<pos:position pos:line="163" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="163" pos:column="59">NULL<pos:position pos:line="163" pos:column="63"/></name></expr></argument>)<pos:position pos:line="163" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="65"/></expr_stmt>
	}<pos:position pos:line="164" pos:column="10"/></block></then> <else pos:line="164" pos:column="11">else <block pos:line="164" pos:column="16">{
		<comment type="block" pos:line="165" pos:column="17">/* We are invoked directly as the first-class UI. */</comment>
		<expr_stmt><expr><name pos:line="166" pos:column="17">head_arg<pos:position pos:line="166" pos:column="25"/></name> <operator pos:line="166" pos:column="26">=<pos:position pos:line="166" pos:column="27"/></operator> <literal type="string" pos:line="166" pos:column="28">"HEAD"<pos:position pos:line="166" pos:column="34"/></literal></expr>;<pos:position pos:line="166" pos:column="35"/></expr_stmt>

		<comment type="block" pos:line="168" pos:column="17">/*
		 * All the rest are the commits being merged; prepare
		 * the standard merge summary message to be appended
		 * to the given message.
		 */</comment>
		<expr_stmt><expr><name pos:line="173" pos:column="17">remoteheads<pos:position pos:line="173" pos:column="28"/></name> <operator pos:line="173" pos:column="29">=<pos:position pos:line="173" pos:column="30"/></operator> <call><name pos:line="173" pos:column="31">collect_parents<pos:position pos:line="173" pos:column="46"/></name><argument_list pos:line="173" pos:column="46">(<argument><expr><name pos:line="173" pos:column="47">head_commit<pos:position pos:line="173" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="173" pos:column="60">&amp;<pos:position pos:line="173" pos:column="65"/></operator><name pos:line="173" pos:column="61">head_subsumed<pos:position pos:line="173" pos:column="74"/></name></expr></argument>,
					      <argument><expr><name pos:line="174" pos:column="47">argc<pos:position pos:line="174" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="174" pos:column="53">argv<pos:position pos:line="174" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="174" pos:column="59">&amp;<pos:position pos:line="174" pos:column="64"/></operator><name pos:line="174" pos:column="60">merge_msg<pos:position pos:line="174" pos:column="69"/></name></expr></argument>)<pos:position pos:line="174" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="174" pos:column="71"/></expr_stmt>
	}<pos:position pos:line="175" pos:column="10"/></block></else></if>

	<if pos:line="177" pos:column="9">if <condition pos:line="177" pos:column="12">(<expr><operator pos:line="177" pos:column="13">!<pos:position pos:line="177" pos:column="14"/></operator><name pos:line="177" pos:column="14">head_commit<pos:position pos:line="177" pos:column="25"/></name> <operator pos:line="177" pos:column="26">||<pos:position pos:line="177" pos:column="28"/></operator> <operator pos:line="177" pos:column="29">!<pos:position pos:line="177" pos:column="30"/></operator><name pos:line="177" pos:column="30">argc<pos:position pos:line="177" pos:column="34"/></name></expr>)<pos:position pos:line="177" pos:column="35"/></condition><then pos:line="177" pos:column="35">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="178" pos:column="17">usage_with_options<pos:position pos:line="178" pos:column="35"/></name><argument_list pos:line="178" pos:column="35">(<argument><expr><name pos:line="178" pos:column="36">builtin_merge_usage<pos:position pos:line="178" pos:column="55"/></name></expr></argument>,
			<argument><expr><name pos:line="179" pos:column="25">builtin_merge_options<pos:position pos:line="179" pos:column="46"/></name></expr></argument>)<pos:position pos:line="179" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="179" pos:column="48"/></expr_stmt></block></then></if>

	<if pos:line="181" pos:column="9">if <condition pos:line="181" pos:column="12">(<expr><name pos:line="181" pos:column="13">verify_signatures<pos:position pos:line="181" pos:column="30"/></name></expr>)<pos:position pos:line="181" pos:column="31"/></condition><then pos:line="181" pos:column="31"> <block pos:line="181" pos:column="32">{
		<for pos:line="182" pos:column="17">for <control pos:line="182" pos:column="21">(<init><expr><name pos:line="182" pos:column="22">p<pos:position pos:line="182" pos:column="23"/></name> <operator pos:line="182" pos:column="24">=<pos:position pos:line="182" pos:column="25"/></operator> <name pos:line="182" pos:column="26">remoteheads<pos:position pos:line="182" pos:column="37"/></name></expr>;<pos:position pos:line="182" pos:column="38"/></init> <condition><expr><name pos:line="182" pos:column="39">p<pos:position pos:line="182" pos:column="40"/></name></expr>;<pos:position pos:line="182" pos:column="41"/></condition> <incr><expr><name pos:line="182" pos:column="42">p<pos:position pos:line="182" pos:column="43"/></name> <operator pos:line="182" pos:column="44">=<pos:position pos:line="182" pos:column="45"/></operator> <name><name pos:line="182" pos:column="46">p<pos:position pos:line="182" pos:column="47"/></name><operator pos:line="182" pos:column="47">-&gt;<pos:position pos:line="182" pos:column="52"/></operator><name pos:line="182" pos:column="49">next<pos:position pos:line="182" pos:column="53"/></name></name></expr></incr>)<pos:position pos:line="182" pos:column="54"/></control> <block pos:line="182" pos:column="55">{
			<decl_stmt><decl><type><name><name pos:line="183" pos:column="25">struct<pos:position pos:line="183" pos:column="31"/></name> <name pos:line="183" pos:column="32">commit<pos:position pos:line="183" pos:column="38"/></name></name> <modifier pos:line="183" pos:column="39">*<pos:position pos:line="183" pos:column="40"/></modifier></type><name pos:line="183" pos:column="40">commit<pos:position pos:line="183" pos:column="46"/></name> <init pos:line="183" pos:column="47">= <expr><name><name pos:line="183" pos:column="49">p<pos:position pos:line="183" pos:column="50"/></name><operator pos:line="183" pos:column="50">-&gt;<pos:position pos:line="183" pos:column="55"/></operator><name pos:line="183" pos:column="52">item<pos:position pos:line="183" pos:column="56"/></name></name></expr></init></decl>;<pos:position pos:line="183" pos:column="57"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="184" pos:column="25">char<pos:position pos:line="184" pos:column="29"/></name></type> <name><name pos:line="184" pos:column="30">hex<pos:position pos:line="184" pos:column="33"/></name><index pos:line="184" pos:column="33">[<expr><name pos:line="184" pos:column="34">GIT_SHA1_HEXSZ<pos:position pos:line="184" pos:column="48"/></name> <operator pos:line="184" pos:column="49">+<pos:position pos:line="184" pos:column="50"/></operator> <literal type="number" pos:line="184" pos:column="51">1<pos:position pos:line="184" pos:column="52"/></literal></expr>]<pos:position pos:line="184" pos:column="53"/></index></name></decl>;<pos:position pos:line="184" pos:column="54"/></decl_stmt>
			<decl_stmt><decl><type><name><name pos:line="185" pos:column="25">struct<pos:position pos:line="185" pos:column="31"/></name> <name pos:line="185" pos:column="32">signature_check<pos:position pos:line="185" pos:column="47"/></name></name></type> <name pos:line="185" pos:column="48">signature_check<pos:position pos:line="185" pos:column="63"/></name></decl>;<pos:position pos:line="185" pos:column="64"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="186" pos:column="25">memset<pos:position pos:line="186" pos:column="31"/></name><argument_list pos:line="186" pos:column="31">(<argument><expr><operator pos:line="186" pos:column="32">&amp;<pos:position pos:line="186" pos:column="37"/></operator><name pos:line="186" pos:column="33">signature_check<pos:position pos:line="186" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="186" pos:column="50">0<pos:position pos:line="186" pos:column="51"/></literal></expr></argument>, <argument><expr><sizeof pos:line="186" pos:column="53">sizeof<argument_list pos:line="186" pos:column="59">(<argument><expr><name pos:line="186" pos:column="60">signature_check<pos:position pos:line="186" pos:column="75"/></name></expr></argument>)<pos:position pos:line="186" pos:column="76"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="186" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="186" pos:column="78"/></expr_stmt>

			<expr_stmt><expr><call><name pos:line="188" pos:column="25">check_commit_signature<pos:position pos:line="188" pos:column="47"/></name><argument_list pos:line="188" pos:column="47">(<argument><expr><name pos:line="188" pos:column="48">commit<pos:position pos:line="188" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="188" pos:column="56">&amp;<pos:position pos:line="188" pos:column="61"/></operator><name pos:line="188" pos:column="57">signature_check<pos:position pos:line="188" pos:column="72"/></name></expr></argument>)<pos:position pos:line="188" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="188" pos:column="74"/></expr_stmt>

			<expr_stmt><expr><call><name pos:line="190" pos:column="25">find_unique_abbrev_r<pos:position pos:line="190" pos:column="45"/></name><argument_list pos:line="190" pos:column="45">(<argument><expr><name pos:line="190" pos:column="46">hex<pos:position pos:line="190" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="190" pos:column="51">commit<pos:position pos:line="190" pos:column="57"/></name><operator pos:line="190" pos:column="57">-&gt;<pos:position pos:line="190" pos:column="62"/></operator><name pos:line="190" pos:column="59">object<pos:position pos:line="190" pos:column="65"/></name><operator pos:line="190" pos:column="65">.<pos:position pos:line="190" pos:column="66"/></operator><name pos:line="190" pos:column="66">oid<pos:position pos:line="190" pos:column="69"/></name><operator pos:line="190" pos:column="69">.<pos:position pos:line="190" pos:column="70"/></operator><name pos:line="190" pos:column="70">hash<pos:position pos:line="190" pos:column="74"/></name></name></expr></argument>, <argument><expr><name pos:line="190" pos:column="76">DEFAULT_ABBREV<pos:position pos:line="190" pos:column="90"/></name></expr></argument>)<pos:position pos:line="190" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="190" pos:column="92"/></expr_stmt>
			<switch pos:line="191" pos:column="25">switch <condition pos:line="191" pos:column="32">(<expr><name><name pos:line="191" pos:column="33">signature_check<pos:position pos:line="191" pos:column="48"/></name><operator pos:line="191" pos:column="48">.<pos:position pos:line="191" pos:column="49"/></operator><name pos:line="191" pos:column="49">result<pos:position pos:line="191" pos:column="55"/></name></name></expr>)<pos:position pos:line="191" pos:column="56"/></condition> <block pos:line="191" pos:column="57">{
			<case pos:line="192" pos:column="25">case <expr><literal type="char" pos:line="192" pos:column="30">'G'<pos:position pos:line="192" pos:column="33"/></literal></expr>:<pos:position pos:line="192" pos:column="34"/></case>
				<break pos:line="193" pos:column="33">break;<pos:position pos:line="193" pos:column="39"/></break>
			<case pos:line="194" pos:column="25">case <expr><literal type="char" pos:line="194" pos:column="30">'U'<pos:position pos:line="194" pos:column="33"/></literal></expr>:<pos:position pos:line="194" pos:column="34"/></case>
				<expr_stmt><expr><call><name pos:line="195" pos:column="33">die<pos:position pos:line="195" pos:column="36"/></name><argument_list pos:line="195" pos:column="36">(<argument><expr><call><name pos:line="195" pos:column="37">_<pos:position pos:line="195" pos:column="38"/></name><argument_list pos:line="195" pos:column="38">(<argument><expr><literal type="string" pos:line="195" pos:column="39">"Commit %s has an untrusted GPG signature, "<pos:position pos:line="195" pos:column="83"/></literal>
				      <literal type="string" pos:line="196" pos:column="39">"allegedly by %s."<pos:position pos:line="196" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="196" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="196" pos:column="60">hex<pos:position pos:line="196" pos:column="63"/></name></expr></argument>, <argument><expr><name><name pos:line="196" pos:column="65">signature_check<pos:position pos:line="196" pos:column="80"/></name><operator pos:line="196" pos:column="80">.<pos:position pos:line="196" pos:column="81"/></operator><name pos:line="196" pos:column="81">signer<pos:position pos:line="196" pos:column="87"/></name></name></expr></argument>)<pos:position pos:line="196" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="196" pos:column="89"/></expr_stmt>
			<case pos:line="197" pos:column="25">case <expr><literal type="char" pos:line="197" pos:column="30">'B'<pos:position pos:line="197" pos:column="33"/></literal></expr>:<pos:position pos:line="197" pos:column="34"/></case>
				<expr_stmt><expr><call><name pos:line="198" pos:column="33">die<pos:position pos:line="198" pos:column="36"/></name><argument_list pos:line="198" pos:column="36">(<argument><expr><call><name pos:line="198" pos:column="37">_<pos:position pos:line="198" pos:column="38"/></name><argument_list pos:line="198" pos:column="38">(<argument><expr><literal type="string" pos:line="198" pos:column="39">"Commit %s has a bad GPG signature "<pos:position pos:line="198" pos:column="75"/></literal>
				      <literal type="string" pos:line="199" pos:column="39">"allegedly by %s."<pos:position pos:line="199" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="199" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="199" pos:column="60">hex<pos:position pos:line="199" pos:column="63"/></name></expr></argument>, <argument><expr><name><name pos:line="199" pos:column="65">signature_check<pos:position pos:line="199" pos:column="80"/></name><operator pos:line="199" pos:column="80">.<pos:position pos:line="199" pos:column="81"/></operator><name pos:line="199" pos:column="81">signer<pos:position pos:line="199" pos:column="87"/></name></name></expr></argument>)<pos:position pos:line="199" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="199" pos:column="89"/></expr_stmt>
			<default pos:line="200" pos:column="25">default:<pos:position pos:line="200" pos:column="33"/></default> <comment type="block" pos:line="200" pos:column="34">/* 'N' */</comment>
				<expr_stmt><expr><call><name pos:line="201" pos:column="33">die<pos:position pos:line="201" pos:column="36"/></name><argument_list pos:line="201" pos:column="36">(<argument><expr><call><name pos:line="201" pos:column="37">_<pos:position pos:line="201" pos:column="38"/></name><argument_list pos:line="201" pos:column="38">(<argument><expr><literal type="string" pos:line="201" pos:column="39">"Commit %s does not have a GPG signature."<pos:position pos:line="201" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="201" pos:column="82"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="201" pos:column="84">hex<pos:position pos:line="201" pos:column="87"/></name></expr></argument>)<pos:position pos:line="201" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="201" pos:column="89"/></expr_stmt>
			}<pos:position pos:line="202" pos:column="26"/></block></switch>
			<if pos:line="203" pos:column="25">if <condition pos:line="203" pos:column="28">(<expr><name pos:line="203" pos:column="29">verbosity<pos:position pos:line="203" pos:column="38"/></name> <operator pos:line="203" pos:column="39">&gt;=<pos:position pos:line="203" pos:column="44"/></operator> <literal type="number" pos:line="203" pos:column="42">0<pos:position pos:line="203" pos:column="43"/></literal> <operator pos:line="203" pos:column="44">&amp;&amp;<pos:position pos:line="203" pos:column="54"/></operator> <name><name pos:line="203" pos:column="47">signature_check<pos:position pos:line="203" pos:column="62"/></name><operator pos:line="203" pos:column="62">.<pos:position pos:line="203" pos:column="63"/></operator><name pos:line="203" pos:column="63">result<pos:position pos:line="203" pos:column="69"/></name></name> <operator pos:line="203" pos:column="70">==<pos:position pos:line="203" pos:column="72"/></operator> <literal type="char" pos:line="203" pos:column="73">'G'<pos:position pos:line="203" pos:column="76"/></literal></expr>)<pos:position pos:line="203" pos:column="77"/></condition><then pos:line="203" pos:column="77">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="204" pos:column="33">printf<pos:position pos:line="204" pos:column="39"/></name><argument_list pos:line="204" pos:column="39">(<argument><expr><call><name pos:line="204" pos:column="40">_<pos:position pos:line="204" pos:column="41"/></name><argument_list pos:line="204" pos:column="41">(<argument><expr><literal type="string" pos:line="204" pos:column="42">"Commit %s has a good GPG signature by %s\n"<pos:position pos:line="204" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="204" pos:column="87"/></argument_list></call></expr></argument>,
				       <argument><expr><name pos:line="205" pos:column="40">hex<pos:position pos:line="205" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="205" pos:column="45">signature_check<pos:position pos:line="205" pos:column="60"/></name><operator pos:line="205" pos:column="60">.<pos:position pos:line="205" pos:column="61"/></operator><name pos:line="205" pos:column="61">signer<pos:position pos:line="205" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="205" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="205" pos:column="69"/></expr_stmt></block></then></if>

			<expr_stmt><expr><call><name pos:line="207" pos:column="25">signature_check_clear<pos:position pos:line="207" pos:column="46"/></name><argument_list pos:line="207" pos:column="46">(<argument><expr><operator pos:line="207" pos:column="47">&amp;<pos:position pos:line="207" pos:column="52"/></operator><name pos:line="207" pos:column="48">signature_check<pos:position pos:line="207" pos:column="63"/></name></expr></argument>)<pos:position pos:line="207" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="207" pos:column="65"/></expr_stmt>
		}<pos:position pos:line="208" pos:column="18"/></block></for>
	}<pos:position pos:line="209" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="211" pos:column="9">strbuf_addstr<pos:position pos:line="211" pos:column="22"/></name><argument_list pos:line="211" pos:column="22">(<argument><expr><operator pos:line="211" pos:column="23">&amp;<pos:position pos:line="211" pos:column="28"/></operator><name pos:line="211" pos:column="24">buf<pos:position pos:line="211" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="211" pos:column="29">"merge"<pos:position pos:line="211" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="211" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="211" pos:column="38"/></expr_stmt>
	<for pos:line="212" pos:column="9">for <control pos:line="212" pos:column="13">(<init><expr><name pos:line="212" pos:column="14">p<pos:position pos:line="212" pos:column="15"/></name> <operator pos:line="212" pos:column="16">=<pos:position pos:line="212" pos:column="17"/></operator> <name pos:line="212" pos:column="18">remoteheads<pos:position pos:line="212" pos:column="29"/></name></expr>;<pos:position pos:line="212" pos:column="30"/></init> <condition><expr><name pos:line="212" pos:column="31">p<pos:position pos:line="212" pos:column="32"/></name></expr>;<pos:position pos:line="212" pos:column="33"/></condition> <incr><expr><name pos:line="212" pos:column="34">p<pos:position pos:line="212" pos:column="35"/></name> <operator pos:line="212" pos:column="36">=<pos:position pos:line="212" pos:column="37"/></operator> <name><name pos:line="212" pos:column="38">p<pos:position pos:line="212" pos:column="39"/></name><operator pos:line="212" pos:column="39">-&gt;<pos:position pos:line="212" pos:column="44"/></operator><name pos:line="212" pos:column="41">next<pos:position pos:line="212" pos:column="45"/></name></name></expr></incr>)<pos:position pos:line="212" pos:column="46"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="213" pos:column="17">strbuf_addf<pos:position pos:line="213" pos:column="28"/></name><argument_list pos:line="213" pos:column="28">(<argument><expr><operator pos:line="213" pos:column="29">&amp;<pos:position pos:line="213" pos:column="34"/></operator><name pos:line="213" pos:column="30">buf<pos:position pos:line="213" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="213" pos:column="35">" %s"<pos:position pos:line="213" pos:column="40"/></literal></expr></argument>, <argument><expr><call><name pos:line="213" pos:column="42">merge_remote_util<pos:position pos:line="213" pos:column="59"/></name><argument_list pos:line="213" pos:column="59">(<argument><expr><name><name pos:line="213" pos:column="60">p<pos:position pos:line="213" pos:column="61"/></name><operator pos:line="213" pos:column="61">-&gt;<pos:position pos:line="213" pos:column="66"/></operator><name pos:line="213" pos:column="63">item<pos:position pos:line="213" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="213" pos:column="68"/></argument_list></call><operator pos:line="213" pos:column="68">-&gt;<pos:position pos:line="213" pos:column="73"/></operator><name pos:line="213" pos:column="70">name<pos:position pos:line="213" pos:column="74"/></name></expr></argument>)<pos:position pos:line="213" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="213" pos:column="76"/></expr_stmt></block></for>
	<expr_stmt><expr><call><name pos:line="214" pos:column="9">setenv<pos:position pos:line="214" pos:column="15"/></name><argument_list pos:line="214" pos:column="15">(<argument><expr><literal type="string" pos:line="214" pos:column="16">"GIT_REFLOG_ACTION"<pos:position pos:line="214" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="214" pos:column="37">buf<pos:position pos:line="214" pos:column="40"/></name><operator pos:line="214" pos:column="40">.<pos:position pos:line="214" pos:column="41"/></operator><name pos:line="214" pos:column="41">buf<pos:position pos:line="214" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="214" pos:column="46">0<pos:position pos:line="214" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="214" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="214" pos:column="49"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="215" pos:column="9">strbuf_reset<pos:position pos:line="215" pos:column="21"/></name><argument_list pos:line="215" pos:column="21">(<argument><expr><operator pos:line="215" pos:column="22">&amp;<pos:position pos:line="215" pos:column="27"/></operator><name pos:line="215" pos:column="23">buf<pos:position pos:line="215" pos:column="26"/></name></expr></argument>)<pos:position pos:line="215" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="215" pos:column="28"/></expr_stmt>

	<for pos:line="217" pos:column="9">for <control pos:line="217" pos:column="13">(<init><expr><name pos:line="217" pos:column="14">p<pos:position pos:line="217" pos:column="15"/></name> <operator pos:line="217" pos:column="16">=<pos:position pos:line="217" pos:column="17"/></operator> <name pos:line="217" pos:column="18">remoteheads<pos:position pos:line="217" pos:column="29"/></name></expr>;<pos:position pos:line="217" pos:column="30"/></init> <condition><expr><name pos:line="217" pos:column="31">p<pos:position pos:line="217" pos:column="32"/></name></expr>;<pos:position pos:line="217" pos:column="33"/></condition> <incr><expr><name pos:line="217" pos:column="34">p<pos:position pos:line="217" pos:column="35"/></name> <operator pos:line="217" pos:column="36">=<pos:position pos:line="217" pos:column="37"/></operator> <name><name pos:line="217" pos:column="38">p<pos:position pos:line="217" pos:column="39"/></name><operator pos:line="217" pos:column="39">-&gt;<pos:position pos:line="217" pos:column="44"/></operator><name pos:line="217" pos:column="41">next<pos:position pos:line="217" pos:column="45"/></name></name></expr></incr>)<pos:position pos:line="217" pos:column="46"/></control> <block pos:line="217" pos:column="47">{
		<decl_stmt><decl><type><name><name pos:line="218" pos:column="17">struct<pos:position pos:line="218" pos:column="23"/></name> <name pos:line="218" pos:column="24">commit<pos:position pos:line="218" pos:column="30"/></name></name> <modifier pos:line="218" pos:column="31">*<pos:position pos:line="218" pos:column="32"/></modifier></type><name pos:line="218" pos:column="32">commit<pos:position pos:line="218" pos:column="38"/></name> <init pos:line="218" pos:column="39">= <expr><name><name pos:line="218" pos:column="41">p<pos:position pos:line="218" pos:column="42"/></name><operator pos:line="218" pos:column="42">-&gt;<pos:position pos:line="218" pos:column="47"/></operator><name pos:line="218" pos:column="44">item<pos:position pos:line="218" pos:column="48"/></name></name></expr></init></decl>;<pos:position pos:line="218" pos:column="49"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="219" pos:column="17">strbuf_addf<pos:position pos:line="219" pos:column="28"/></name><argument_list pos:line="219" pos:column="28">(<argument><expr><operator pos:line="219" pos:column="29">&amp;<pos:position pos:line="219" pos:column="34"/></operator><name pos:line="219" pos:column="30">buf<pos:position pos:line="219" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="219" pos:column="35">"GITHEAD_%s"<pos:position pos:line="219" pos:column="47"/></literal></expr></argument>,
			    <argument><expr><call><name pos:line="220" pos:column="29">oid_to_hex<pos:position pos:line="220" pos:column="39"/></name><argument_list pos:line="220" pos:column="39">(<argument><expr><operator pos:line="220" pos:column="40">&amp;<pos:position pos:line="220" pos:column="45"/></operator><name><name pos:line="220" pos:column="41">commit<pos:position pos:line="220" pos:column="47"/></name><operator pos:line="220" pos:column="47">-&gt;<pos:position pos:line="220" pos:column="52"/></operator><name pos:line="220" pos:column="49">object<pos:position pos:line="220" pos:column="55"/></name><operator pos:line="220" pos:column="55">.<pos:position pos:line="220" pos:column="56"/></operator><name pos:line="220" pos:column="56">oid<pos:position pos:line="220" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="220" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="220" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="220" pos:column="62"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="221" pos:column="17">setenv<pos:position pos:line="221" pos:column="23"/></name><argument_list pos:line="221" pos:column="23">(<argument><expr><name><name pos:line="221" pos:column="24">buf<pos:position pos:line="221" pos:column="27"/></name><operator pos:line="221" pos:column="27">.<pos:position pos:line="221" pos:column="28"/></operator><name pos:line="221" pos:column="28">buf<pos:position pos:line="221" pos:column="31"/></name></name></expr></argument>, <argument><expr><call><name pos:line="221" pos:column="33">merge_remote_util<pos:position pos:line="221" pos:column="50"/></name><argument_list pos:line="221" pos:column="50">(<argument><expr><name pos:line="221" pos:column="51">commit<pos:position pos:line="221" pos:column="57"/></name></expr></argument>)<pos:position pos:line="221" pos:column="58"/></argument_list></call><operator pos:line="221" pos:column="58">-&gt;<pos:position pos:line="221" pos:column="63"/></operator><name pos:line="221" pos:column="60">name<pos:position pos:line="221" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="221" pos:column="66">1<pos:position pos:line="221" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="221" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="221" pos:column="69"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="222" pos:column="17">strbuf_reset<pos:position pos:line="222" pos:column="29"/></name><argument_list pos:line="222" pos:column="29">(<argument><expr><operator pos:line="222" pos:column="30">&amp;<pos:position pos:line="222" pos:column="35"/></operator><name pos:line="222" pos:column="31">buf<pos:position pos:line="222" pos:column="34"/></name></expr></argument>)<pos:position pos:line="222" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="222" pos:column="36"/></expr_stmt>
		<if pos:line="223" pos:column="17">if <condition pos:line="223" pos:column="20">(<expr><name pos:line="223" pos:column="21">fast_forward<pos:position pos:line="223" pos:column="33"/></name> <operator pos:line="223" pos:column="34">!=<pos:position pos:line="223" pos:column="36"/></operator> <name pos:line="223" pos:column="37">FF_ONLY<pos:position pos:line="223" pos:column="44"/></name> <operator pos:line="223" pos:column="45">&amp;&amp;<pos:position pos:line="223" pos:column="55"/></operator>
		    <call><name pos:line="224" pos:column="21">merge_remote_util<pos:position pos:line="224" pos:column="38"/></name><argument_list pos:line="224" pos:column="38">(<argument><expr><name pos:line="224" pos:column="39">commit<pos:position pos:line="224" pos:column="45"/></name></expr></argument>)<pos:position pos:line="224" pos:column="46"/></argument_list></call> <operator pos:line="224" pos:column="47">&amp;&amp;<pos:position pos:line="224" pos:column="57"/></operator>
		    <call><name pos:line="225" pos:column="21">merge_remote_util<pos:position pos:line="225" pos:column="38"/></name><argument_list pos:line="225" pos:column="38">(<argument><expr><name pos:line="225" pos:column="39">commit<pos:position pos:line="225" pos:column="45"/></name></expr></argument>)<pos:position pos:line="225" pos:column="46"/></argument_list></call><operator pos:line="225" pos:column="46">-&gt;<pos:position pos:line="225" pos:column="51"/></operator><name pos:line="225" pos:column="48">obj<pos:position pos:line="225" pos:column="51"/></name> <operator pos:line="225" pos:column="52">&amp;&amp;<pos:position pos:line="225" pos:column="62"/></operator>
		    <call><name pos:line="226" pos:column="21">merge_remote_util<pos:position pos:line="226" pos:column="38"/></name><argument_list pos:line="226" pos:column="38">(<argument><expr><name pos:line="226" pos:column="39">commit<pos:position pos:line="226" pos:column="45"/></name></expr></argument>)<pos:position pos:line="226" pos:column="46"/></argument_list></call><operator pos:line="226" pos:column="46">-&gt;<pos:position pos:line="226" pos:column="51"/></operator><name><name pos:line="226" pos:column="48">obj<pos:position pos:line="226" pos:column="51"/></name><operator pos:line="226" pos:column="51">-&gt;<pos:position pos:line="226" pos:column="56"/></operator><name pos:line="226" pos:column="53">type<pos:position pos:line="226" pos:column="57"/></name></name> <operator pos:line="226" pos:column="58">==<pos:position pos:line="226" pos:column="60"/></operator> <name pos:line="226" pos:column="61">OBJ_TAG<pos:position pos:line="226" pos:column="68"/></name></expr>)<pos:position pos:line="226" pos:column="69"/></condition><then pos:line="226" pos:column="69">
			<block type="pseudo"><expr_stmt><expr><name pos:line="227" pos:column="25">fast_forward<pos:position pos:line="227" pos:column="37"/></name> <operator pos:line="227" pos:column="38">=<pos:position pos:line="227" pos:column="39"/></operator> <name pos:line="227" pos:column="40">FF_NO<pos:position pos:line="227" pos:column="45"/></name></expr>;<pos:position pos:line="227" pos:column="46"/></expr_stmt></block></then></if>
	}<pos:position pos:line="228" pos:column="10"/></block></for>

	<if pos:line="230" pos:column="9">if <condition pos:line="230" pos:column="12">(<expr><name pos:line="230" pos:column="13">option_edit<pos:position pos:line="230" pos:column="24"/></name> <operator pos:line="230" pos:column="25">&lt;<pos:position pos:line="230" pos:column="29"/></operator> <literal type="number" pos:line="230" pos:column="27">0<pos:position pos:line="230" pos:column="28"/></literal></expr>)<pos:position pos:line="230" pos:column="29"/></condition><then pos:line="230" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><name pos:line="231" pos:column="17">option_edit<pos:position pos:line="231" pos:column="28"/></name> <operator pos:line="231" pos:column="29">=<pos:position pos:line="231" pos:column="30"/></operator> <call><name pos:line="231" pos:column="31">default_edit_option<pos:position pos:line="231" pos:column="50"/></name><argument_list pos:line="231" pos:column="50">()<pos:position pos:line="231" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="231" pos:column="53"/></expr_stmt></block></then></if>

	<if pos:line="233" pos:column="9">if <condition pos:line="233" pos:column="12">(<expr><operator pos:line="233" pos:column="13">!<pos:position pos:line="233" pos:column="14"/></operator><name pos:line="233" pos:column="14">use_strategies<pos:position pos:line="233" pos:column="28"/></name></expr>)<pos:position pos:line="233" pos:column="29"/></condition><then pos:line="233" pos:column="29"> <block pos:line="233" pos:column="30">{
		<if pos:line="234" pos:column="17">if <condition pos:line="234" pos:column="20">(<expr><operator pos:line="234" pos:column="21">!<pos:position pos:line="234" pos:column="22"/></operator><name pos:line="234" pos:column="22">remoteheads<pos:position pos:line="234" pos:column="33"/></name></expr>)<pos:position pos:line="234" pos:column="34"/></condition><then pos:line="234" pos:column="34">
			<block type="pseudo"><empty_stmt pos:line="235" pos:column="25">;<pos:position pos:line="235" pos:column="26"/></empty_stmt></block></then> <comment type="block" pos:line="235" pos:column="27">/* already up-to-date */</comment>
		<elseif pos:line="236" pos:column="17">else <if pos:line="236" pos:column="22">if <condition pos:line="236" pos:column="25">(<expr><operator pos:line="236" pos:column="26">!<pos:position pos:line="236" pos:column="27"/></operator><name><name pos:line="236" pos:column="27">remoteheads<pos:position pos:line="236" pos:column="38"/></name><operator pos:line="236" pos:column="38">-&gt;<pos:position pos:line="236" pos:column="43"/></operator><name pos:line="236" pos:column="40">next<pos:position pos:line="236" pos:column="44"/></name></name></expr>)<pos:position pos:line="236" pos:column="45"/></condition><then pos:line="236" pos:column="45">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="237" pos:column="25">add_strategies<pos:position pos:line="237" pos:column="39"/></name><argument_list pos:line="237" pos:column="39">(<argument><expr><name pos:line="237" pos:column="40">pull_twohead<pos:position pos:line="237" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="237" pos:column="54">DEFAULT_TWOHEAD<pos:position pos:line="237" pos:column="69"/></name></expr></argument>)<pos:position pos:line="237" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="237" pos:column="71"/></expr_stmt></block></then></if></elseif>
		<else pos:line="238" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="239" pos:column="25">add_strategies<pos:position pos:line="239" pos:column="39"/></name><argument_list pos:line="239" pos:column="39">(<argument><expr><name pos:line="239" pos:column="40">pull_octopus<pos:position pos:line="239" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="239" pos:column="54">DEFAULT_OCTOPUS<pos:position pos:line="239" pos:column="69"/></name></expr></argument>)<pos:position pos:line="239" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="239" pos:column="71"/></expr_stmt></block></else></if>
	}<pos:position pos:line="240" pos:column="10"/></block></then></if>

	<for pos:line="242" pos:column="9">for <control pos:line="242" pos:column="13">(<init><expr><name pos:line="242" pos:column="14">i<pos:position pos:line="242" pos:column="15"/></name> <operator pos:line="242" pos:column="16">=<pos:position pos:line="242" pos:column="17"/></operator> <literal type="number" pos:line="242" pos:column="18">0<pos:position pos:line="242" pos:column="19"/></literal></expr>;<pos:position pos:line="242" pos:column="20"/></init> <condition><expr><name pos:line="242" pos:column="21">i<pos:position pos:line="242" pos:column="22"/></name> <operator pos:line="242" pos:column="23">&lt;<pos:position pos:line="242" pos:column="27"/></operator> <name pos:line="242" pos:column="25">use_strategies_nr<pos:position pos:line="242" pos:column="42"/></name></expr>;<pos:position pos:line="242" pos:column="43"/></condition> <incr><expr><name pos:line="242" pos:column="44">i<pos:position pos:line="242" pos:column="45"/></name><operator pos:line="242" pos:column="45">++<pos:position pos:line="242" pos:column="47"/></operator></expr></incr>)<pos:position pos:line="242" pos:column="48"/></control> <block pos:line="242" pos:column="49">{
		<if pos:line="243" pos:column="17">if <condition pos:line="243" pos:column="20">(<expr><name><name pos:line="243" pos:column="21">use_strategies<pos:position pos:line="243" pos:column="35"/></name><index pos:line="243" pos:column="35">[<expr><name pos:line="243" pos:column="36">i<pos:position pos:line="243" pos:column="37"/></name></expr>]<pos:position pos:line="243" pos:column="38"/></index></name><operator pos:line="243" pos:column="38">-&gt;<pos:position pos:line="243" pos:column="43"/></operator><name pos:line="243" pos:column="40">attr<pos:position pos:line="243" pos:column="44"/></name> <operator pos:line="243" pos:column="45">&amp;<pos:position pos:line="243" pos:column="50"/></operator> <name pos:line="243" pos:column="47">NO_FAST_FORWARD<pos:position pos:line="243" pos:column="62"/></name></expr>)<pos:position pos:line="243" pos:column="63"/></condition><then pos:line="243" pos:column="63">
			<block type="pseudo"><expr_stmt><expr><name pos:line="244" pos:column="25">fast_forward<pos:position pos:line="244" pos:column="37"/></name> <operator pos:line="244" pos:column="38">=<pos:position pos:line="244" pos:column="39"/></operator> <name pos:line="244" pos:column="40">FF_NO<pos:position pos:line="244" pos:column="45"/></name></expr>;<pos:position pos:line="244" pos:column="46"/></expr_stmt></block></then></if>
		<if pos:line="245" pos:column="17">if <condition pos:line="245" pos:column="20">(<expr><name><name pos:line="245" pos:column="21">use_strategies<pos:position pos:line="245" pos:column="35"/></name><index pos:line="245" pos:column="35">[<expr><name pos:line="245" pos:column="36">i<pos:position pos:line="245" pos:column="37"/></name></expr>]<pos:position pos:line="245" pos:column="38"/></index></name><operator pos:line="245" pos:column="38">-&gt;<pos:position pos:line="245" pos:column="43"/></operator><name pos:line="245" pos:column="40">attr<pos:position pos:line="245" pos:column="44"/></name> <operator pos:line="245" pos:column="45">&amp;<pos:position pos:line="245" pos:column="50"/></operator> <name pos:line="245" pos:column="47">NO_TRIVIAL<pos:position pos:line="245" pos:column="57"/></name></expr>)<pos:position pos:line="245" pos:column="58"/></condition><then pos:line="245" pos:column="58">
			<block type="pseudo"><expr_stmt><expr><name pos:line="246" pos:column="25">allow_trivial<pos:position pos:line="246" pos:column="38"/></name> <operator pos:line="246" pos:column="39">=<pos:position pos:line="246" pos:column="40"/></operator> <literal type="number" pos:line="246" pos:column="41">0<pos:position pos:line="246" pos:column="42"/></literal></expr>;<pos:position pos:line="246" pos:column="43"/></expr_stmt></block></then></if>
	}<pos:position pos:line="247" pos:column="10"/></block></for>

	<if pos:line="249" pos:column="9">if <condition pos:line="249" pos:column="12">(<expr><operator pos:line="249" pos:column="13">!<pos:position pos:line="249" pos:column="14"/></operator><name pos:line="249" pos:column="14">remoteheads<pos:position pos:line="249" pos:column="25"/></name></expr>)<pos:position pos:line="249" pos:column="26"/></condition><then pos:line="249" pos:column="26">
		<block type="pseudo"><empty_stmt pos:line="250" pos:column="17">;<pos:position pos:line="250" pos:column="18"/></empty_stmt></block></then> <comment type="block" pos:line="250" pos:column="19">/* already up-to-date */</comment>
	<elseif pos:line="251" pos:column="9">else <if pos:line="251" pos:column="14">if <condition pos:line="251" pos:column="17">(<expr><operator pos:line="251" pos:column="18">!<pos:position pos:line="251" pos:column="19"/></operator><name><name pos:line="251" pos:column="19">remoteheads<pos:position pos:line="251" pos:column="30"/></name><operator pos:line="251" pos:column="30">-&gt;<pos:position pos:line="251" pos:column="35"/></operator><name pos:line="251" pos:column="32">next<pos:position pos:line="251" pos:column="36"/></name></name></expr>)<pos:position pos:line="251" pos:column="37"/></condition><then pos:line="251" pos:column="37">
		<block type="pseudo"><expr_stmt><expr><name pos:line="252" pos:column="17">common<pos:position pos:line="252" pos:column="23"/></name> <operator pos:line="252" pos:column="24">=<pos:position pos:line="252" pos:column="25"/></operator> <call><name pos:line="252" pos:column="26">get_merge_bases<pos:position pos:line="252" pos:column="41"/></name><argument_list pos:line="252" pos:column="41">(<argument><expr><name pos:line="252" pos:column="42">head_commit<pos:position pos:line="252" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="252" pos:column="55">remoteheads<pos:position pos:line="252" pos:column="66"/></name><operator pos:line="252" pos:column="66">-&gt;<pos:position pos:line="252" pos:column="71"/></operator><name pos:line="252" pos:column="68">item<pos:position pos:line="252" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="252" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="252" pos:column="74"/></expr_stmt></block></then></if></elseif>
	<else pos:line="253" pos:column="9">else <block pos:line="253" pos:column="14">{
		<decl_stmt><decl><type><name><name pos:line="254" pos:column="17">struct<pos:position pos:line="254" pos:column="23"/></name> <name pos:line="254" pos:column="24">commit_list<pos:position pos:line="254" pos:column="35"/></name></name> <modifier pos:line="254" pos:column="36">*<pos:position pos:line="254" pos:column="37"/></modifier></type><name pos:line="254" pos:column="37">list<pos:position pos:line="254" pos:column="41"/></name> <init pos:line="254" pos:column="42">= <expr><name pos:line="254" pos:column="44">remoteheads<pos:position pos:line="254" pos:column="55"/></name></expr></init></decl>;<pos:position pos:line="254" pos:column="56"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="255" pos:column="17">commit_list_insert<pos:position pos:line="255" pos:column="35"/></name><argument_list pos:line="255" pos:column="35">(<argument><expr><name pos:line="255" pos:column="36">head_commit<pos:position pos:line="255" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="255" pos:column="49">&amp;<pos:position pos:line="255" pos:column="54"/></operator><name pos:line="255" pos:column="50">list<pos:position pos:line="255" pos:column="54"/></name></expr></argument>)<pos:position pos:line="255" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="255" pos:column="56"/></expr_stmt>
		<expr_stmt><expr><name pos:line="256" pos:column="17">common<pos:position pos:line="256" pos:column="23"/></name> <operator pos:line="256" pos:column="24">=<pos:position pos:line="256" pos:column="25"/></operator> <call><name pos:line="256" pos:column="26">get_octopus_merge_bases<pos:position pos:line="256" pos:column="49"/></name><argument_list pos:line="256" pos:column="49">(<argument><expr><name pos:line="256" pos:column="50">list<pos:position pos:line="256" pos:column="54"/></name></expr></argument>)<pos:position pos:line="256" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="256" pos:column="56"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="257" pos:column="17">free<pos:position pos:line="257" pos:column="21"/></name><argument_list pos:line="257" pos:column="21">(<argument><expr><name pos:line="257" pos:column="22">list<pos:position pos:line="257" pos:column="26"/></name></expr></argument>)<pos:position pos:line="257" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="257" pos:column="28"/></expr_stmt>
	}<pos:position pos:line="258" pos:column="10"/></block></else></if>

	<expr_stmt><expr><call><name pos:line="260" pos:column="9">update_ref<pos:position pos:line="260" pos:column="19"/></name><argument_list pos:line="260" pos:column="19">(<argument><expr><literal type="string" pos:line="260" pos:column="20">"updating ORIG_HEAD"<pos:position pos:line="260" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="260" pos:column="42">"ORIG_HEAD"<pos:position pos:line="260" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="260" pos:column="55">head_commit<pos:position pos:line="260" pos:column="66"/></name><operator pos:line="260" pos:column="66">-&gt;<pos:position pos:line="260" pos:column="71"/></operator><name pos:line="260" pos:column="68">object<pos:position pos:line="260" pos:column="74"/></name><operator pos:line="260" pos:column="74">.<pos:position pos:line="260" pos:column="75"/></operator><name pos:line="260" pos:column="75">oid<pos:position pos:line="260" pos:column="78"/></name><operator pos:line="260" pos:column="78">.<pos:position pos:line="260" pos:column="79"/></operator><name pos:line="260" pos:column="79">hash<pos:position pos:line="260" pos:column="83"/></name></name></expr></argument>,
		   <argument><expr><name pos:line="261" pos:column="20">NULL<pos:position pos:line="261" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="261" pos:column="26">0<pos:position pos:line="261" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="261" pos:column="29">UPDATE_REFS_DIE_ON_ERR<pos:position pos:line="261" pos:column="51"/></name></expr></argument>)<pos:position pos:line="261" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="261" pos:column="53"/></expr_stmt>

	<if pos:line="263" pos:column="9">if <condition pos:line="263" pos:column="12">(<expr><name pos:line="263" pos:column="13">remoteheads<pos:position pos:line="263" pos:column="24"/></name> <operator pos:line="263" pos:column="25">&amp;&amp;<pos:position pos:line="263" pos:column="35"/></operator> <operator pos:line="263" pos:column="28">!<pos:position pos:line="263" pos:column="29"/></operator><name pos:line="263" pos:column="29">common<pos:position pos:line="263" pos:column="35"/></name></expr>)<pos:position pos:line="263" pos:column="36"/></condition><then pos:line="263" pos:column="36"> <block pos:line="263" pos:column="37">{
		<comment type="block" pos:line="264" pos:column="17">/* No common ancestors found. */</comment>
		<if pos:line="265" pos:column="17">if <condition pos:line="265" pos:column="20">(<expr><operator pos:line="265" pos:column="21">!<pos:position pos:line="265" pos:column="22"/></operator><name pos:line="265" pos:column="22">allow_unrelated_histories<pos:position pos:line="265" pos:column="47"/></name></expr>)<pos:position pos:line="265" pos:column="48"/></condition><then pos:line="265" pos:column="48">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="266" pos:column="25">die<pos:position pos:line="266" pos:column="28"/></name><argument_list pos:line="266" pos:column="28">(<argument><expr><call><name pos:line="266" pos:column="29">_<pos:position pos:line="266" pos:column="30"/></name><argument_list pos:line="266" pos:column="30">(<argument><expr><literal type="string" pos:line="266" pos:column="31">"refusing to merge unrelated histories"<pos:position pos:line="266" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="266" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="266" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="266" pos:column="73"/></expr_stmt></block></then></if>
		<comment type="block" pos:line="267" pos:column="17">/* otherwise, we need a real merge. */</comment>
	}<pos:position pos:line="268" pos:column="10"/></block></then> <elseif pos:line="268" pos:column="11">else <if pos:line="268" pos:column="16">if <condition pos:line="268" pos:column="19">(<expr><operator pos:line="268" pos:column="20">!<pos:position pos:line="268" pos:column="21"/></operator><name pos:line="268" pos:column="21">remoteheads<pos:position pos:line="268" pos:column="32"/></name> <operator pos:line="268" pos:column="33">||<pos:position pos:line="268" pos:column="35"/></operator>
		 <operator pos:line="269" pos:column="18">(<pos:position pos:line="269" pos:column="19"/></operator><operator pos:line="269" pos:column="19">!<pos:position pos:line="269" pos:column="20"/></operator><name><name pos:line="269" pos:column="20">remoteheads<pos:position pos:line="269" pos:column="31"/></name><operator pos:line="269" pos:column="31">-&gt;<pos:position pos:line="269" pos:column="36"/></operator><name pos:line="269" pos:column="33">next<pos:position pos:line="269" pos:column="37"/></name></name> <operator pos:line="269" pos:column="38">&amp;&amp;<pos:position pos:line="269" pos:column="48"/></operator> <operator pos:line="269" pos:column="41">!<pos:position pos:line="269" pos:column="42"/></operator><name><name pos:line="269" pos:column="42">common<pos:position pos:line="269" pos:column="48"/></name><operator pos:line="269" pos:column="48">-&gt;<pos:position pos:line="269" pos:column="53"/></operator><name pos:line="269" pos:column="50">next<pos:position pos:line="269" pos:column="54"/></name></name> <operator pos:line="269" pos:column="55">&amp;&amp;<pos:position pos:line="269" pos:column="65"/></operator>
		  <name><name pos:line="270" pos:column="19">common<pos:position pos:line="270" pos:column="25"/></name><operator pos:line="270" pos:column="25">-&gt;<pos:position pos:line="270" pos:column="30"/></operator><name pos:line="270" pos:column="27">item<pos:position pos:line="270" pos:column="31"/></name></name> <operator pos:line="270" pos:column="32">==<pos:position pos:line="270" pos:column="34"/></operator> <name><name pos:line="270" pos:column="35">remoteheads<pos:position pos:line="270" pos:column="46"/></name><operator pos:line="270" pos:column="46">-&gt;<pos:position pos:line="270" pos:column="51"/></operator><name pos:line="270" pos:column="48">item<pos:position pos:line="270" pos:column="52"/></name></name><operator pos:line="270" pos:column="52">)<pos:position pos:line="270" pos:column="53"/></operator></expr>)<pos:position pos:line="270" pos:column="54"/></condition><then pos:line="270" pos:column="54"> <block pos:line="270" pos:column="55">{
		<comment type="block" pos:line="271" pos:column="17">/*
		 * If head can reach all the merge then we are up to date.
		 * but first the most common case of merging one remote.
		 */</comment>
		<expr_stmt><expr><call><name pos:line="275" pos:column="17">finish_up_to_date<pos:position pos:line="275" pos:column="34"/></name><argument_list pos:line="275" pos:column="34">(<argument><expr><call><name pos:line="275" pos:column="35">_<pos:position pos:line="275" pos:column="36"/></name><argument_list pos:line="275" pos:column="36">(<argument><expr><literal type="string" pos:line="275" pos:column="37">"Already up-to-date."<pos:position pos:line="275" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="275" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="275" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="275" pos:column="61"/></expr_stmt>
		<goto pos:line="276" pos:column="17">goto <name pos:line="276" pos:column="22">done<pos:position pos:line="276" pos:column="26"/></name>;<pos:position pos:line="276" pos:column="27"/></goto>
	}<pos:position pos:line="277" pos:column="10"/></block></then></if></elseif> <elseif pos:line="277" pos:column="11">else <if pos:line="277" pos:column="16">if <condition pos:line="277" pos:column="19">(<expr><name pos:line="277" pos:column="20">fast_forward<pos:position pos:line="277" pos:column="32"/></name> <operator pos:line="277" pos:column="33">!=<pos:position pos:line="277" pos:column="35"/></operator> <name pos:line="277" pos:column="36">FF_NO<pos:position pos:line="277" pos:column="41"/></name> <operator pos:line="277" pos:column="42">&amp;&amp;<pos:position pos:line="277" pos:column="52"/></operator> <operator pos:line="277" pos:column="45">!<pos:position pos:line="277" pos:column="46"/></operator><name><name pos:line="277" pos:column="46">remoteheads<pos:position pos:line="277" pos:column="57"/></name><operator pos:line="277" pos:column="57">-&gt;<pos:position pos:line="277" pos:column="62"/></operator><name pos:line="277" pos:column="59">next<pos:position pos:line="277" pos:column="63"/></name></name> <operator pos:line="277" pos:column="64">&amp;&amp;<pos:position pos:line="277" pos:column="74"/></operator>
			<operator pos:line="278" pos:column="25">!<pos:position pos:line="278" pos:column="26"/></operator><name><name pos:line="278" pos:column="26">common<pos:position pos:line="278" pos:column="32"/></name><operator pos:line="278" pos:column="32">-&gt;<pos:position pos:line="278" pos:column="37"/></operator><name pos:line="278" pos:column="34">next<pos:position pos:line="278" pos:column="38"/></name></name> <operator pos:line="278" pos:column="39">&amp;&amp;<pos:position pos:line="278" pos:column="49"/></operator>
			<operator pos:line="279" pos:column="25">!<pos:position pos:line="279" pos:column="26"/></operator><call><name pos:line="279" pos:column="26">oidcmp<pos:position pos:line="279" pos:column="32"/></name><argument_list pos:line="279" pos:column="32">(<argument><expr><operator pos:line="279" pos:column="33">&amp;<pos:position pos:line="279" pos:column="38"/></operator><name><name pos:line="279" pos:column="34">common<pos:position pos:line="279" pos:column="40"/></name><operator pos:line="279" pos:column="40">-&gt;<pos:position pos:line="279" pos:column="45"/></operator><name pos:line="279" pos:column="42">item<pos:position pos:line="279" pos:column="46"/></name><operator pos:line="279" pos:column="46">-&gt;<pos:position pos:line="279" pos:column="51"/></operator><name pos:line="279" pos:column="48">object<pos:position pos:line="279" pos:column="54"/></name><operator pos:line="279" pos:column="54">.<pos:position pos:line="279" pos:column="55"/></operator><name pos:line="279" pos:column="55">oid<pos:position pos:line="279" pos:column="58"/></name></name></expr></argument>, <argument><expr><operator pos:line="279" pos:column="60">&amp;<pos:position pos:line="279" pos:column="65"/></operator><name><name pos:line="279" pos:column="61">head_commit<pos:position pos:line="279" pos:column="72"/></name><operator pos:line="279" pos:column="72">-&gt;<pos:position pos:line="279" pos:column="77"/></operator><name pos:line="279" pos:column="74">object<pos:position pos:line="279" pos:column="80"/></name><operator pos:line="279" pos:column="80">.<pos:position pos:line="279" pos:column="81"/></operator><name pos:line="279" pos:column="81">oid<pos:position pos:line="279" pos:column="84"/></name></name></expr></argument>)<pos:position pos:line="279" pos:column="85"/></argument_list></call></expr>)<pos:position pos:line="279" pos:column="86"/></condition><then pos:line="279" pos:column="86"> <block pos:line="279" pos:column="87">{
		<comment type="block" pos:line="280" pos:column="17">/* Again the most common case of merging one remote. */</comment>
		<decl_stmt><decl><type><name><name pos:line="281" pos:column="17">struct<pos:position pos:line="281" pos:column="23"/></name> <name pos:line="281" pos:column="24">strbuf<pos:position pos:line="281" pos:column="30"/></name></name></type> <name pos:line="281" pos:column="31">msg<pos:position pos:line="281" pos:column="34"/></name> <init pos:line="281" pos:column="35">= <expr><name pos:line="281" pos:column="37">STRBUF_INIT<pos:position pos:line="281" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="281" pos:column="49"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="282" pos:column="17">struct<pos:position pos:line="282" pos:column="23"/></name> <name pos:line="282" pos:column="24">commit<pos:position pos:line="282" pos:column="30"/></name></name> <modifier pos:line="282" pos:column="31">*<pos:position pos:line="282" pos:column="32"/></modifier></type><name pos:line="282" pos:column="32">commit<pos:position pos:line="282" pos:column="38"/></name></decl>;<pos:position pos:line="282" pos:column="39"/></decl_stmt>

		<if pos:line="284" pos:column="17">if <condition pos:line="284" pos:column="20">(<expr><name pos:line="284" pos:column="21">verbosity<pos:position pos:line="284" pos:column="30"/></name> <operator pos:line="284" pos:column="31">&gt;=<pos:position pos:line="284" pos:column="36"/></operator> <literal type="number" pos:line="284" pos:column="34">0<pos:position pos:line="284" pos:column="35"/></literal></expr>)<pos:position pos:line="284" pos:column="36"/></condition><then pos:line="284" pos:column="36"> <block pos:line="284" pos:column="37">{
			<expr_stmt><expr><call><name pos:line="285" pos:column="25">printf<pos:position pos:line="285" pos:column="31"/></name><argument_list pos:line="285" pos:column="31">(<argument><expr><call><name pos:line="285" pos:column="32">_<pos:position pos:line="285" pos:column="33"/></name><argument_list pos:line="285" pos:column="33">(<argument><expr><literal type="string" pos:line="285" pos:column="34">"Updating %s..%s\n"<pos:position pos:line="285" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="285" pos:column="54"/></argument_list></call></expr></argument>,
			       <argument><expr><call><name pos:line="286" pos:column="32">find_unique_abbrev<pos:position pos:line="286" pos:column="50"/></name><argument_list pos:line="286" pos:column="50">(<argument><expr><name><name pos:line="286" pos:column="51">head_commit<pos:position pos:line="286" pos:column="62"/></name><operator pos:line="286" pos:column="62">-&gt;<pos:position pos:line="286" pos:column="67"/></operator><name pos:line="286" pos:column="64">object<pos:position pos:line="286" pos:column="70"/></name><operator pos:line="286" pos:column="70">.<pos:position pos:line="286" pos:column="71"/></operator><name pos:line="286" pos:column="71">oid<pos:position pos:line="286" pos:column="74"/></name><operator pos:line="286" pos:column="74">.<pos:position pos:line="286" pos:column="75"/></operator><name pos:line="286" pos:column="75">hash<pos:position pos:line="286" pos:column="79"/></name></name></expr></argument>,
						  <argument><expr><name pos:line="287" pos:column="51">DEFAULT_ABBREV<pos:position pos:line="287" pos:column="65"/></name></expr></argument>)<pos:position pos:line="287" pos:column="66"/></argument_list></call></expr></argument>,
			       <argument><expr><call><name pos:line="288" pos:column="32">find_unique_abbrev<pos:position pos:line="288" pos:column="50"/></name><argument_list pos:line="288" pos:column="50">(<argument><expr><name><name pos:line="288" pos:column="51">remoteheads<pos:position pos:line="288" pos:column="62"/></name><operator pos:line="288" pos:column="62">-&gt;<pos:position pos:line="288" pos:column="67"/></operator><name pos:line="288" pos:column="64">item<pos:position pos:line="288" pos:column="68"/></name><operator pos:line="288" pos:column="68">-&gt;<pos:position pos:line="288" pos:column="73"/></operator><name pos:line="288" pos:column="70">object<pos:position pos:line="288" pos:column="76"/></name><operator pos:line="288" pos:column="76">.<pos:position pos:line="288" pos:column="77"/></operator><name pos:line="288" pos:column="77">oid<pos:position pos:line="288" pos:column="80"/></name><operator pos:line="288" pos:column="80">.<pos:position pos:line="288" pos:column="81"/></operator><name pos:line="288" pos:column="81">hash<pos:position pos:line="288" pos:column="85"/></name></name></expr></argument>,
						  <argument><expr><name pos:line="289" pos:column="51">DEFAULT_ABBREV<pos:position pos:line="289" pos:column="65"/></name></expr></argument>)<pos:position pos:line="289" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="289" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="289" pos:column="68"/></expr_stmt>
		}<pos:position pos:line="290" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="291" pos:column="17">strbuf_addstr<pos:position pos:line="291" pos:column="30"/></name><argument_list pos:line="291" pos:column="30">(<argument><expr><operator pos:line="291" pos:column="31">&amp;<pos:position pos:line="291" pos:column="36"/></operator><name pos:line="291" pos:column="32">msg<pos:position pos:line="291" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="291" pos:column="37">"Fast-forward"<pos:position pos:line="291" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="291" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="291" pos:column="53"/></expr_stmt>
		<if pos:line="292" pos:column="17">if <condition pos:line="292" pos:column="20">(<expr><name pos:line="292" pos:column="21">have_message<pos:position pos:line="292" pos:column="33"/></name></expr>)<pos:position pos:line="292" pos:column="34"/></condition><then pos:line="292" pos:column="34">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="293" pos:column="25">strbuf_addstr<pos:position pos:line="293" pos:column="38"/></name><argument_list pos:line="293" pos:column="38">(<argument><expr><operator pos:line="293" pos:column="39">&amp;<pos:position pos:line="293" pos:column="44"/></operator><name pos:line="293" pos:column="40">msg<pos:position pos:line="293" pos:column="43"/></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="294" pos:column="33">" (no commit created; -m option ignored)"<pos:position pos:line="294" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="294" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="294" pos:column="76"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="295" pos:column="17">commit<pos:position pos:line="295" pos:column="23"/></name> <operator pos:line="295" pos:column="24">=<pos:position pos:line="295" pos:column="25"/></operator> <name><name pos:line="295" pos:column="26">remoteheads<pos:position pos:line="295" pos:column="37"/></name><operator pos:line="295" pos:column="37">-&gt;<pos:position pos:line="295" pos:column="42"/></operator><name pos:line="295" pos:column="39">item<pos:position pos:line="295" pos:column="43"/></name></name></expr>;<pos:position pos:line="295" pos:column="44"/></expr_stmt>
		<if pos:line="296" pos:column="17">if <condition pos:line="296" pos:column="20">(<expr><operator pos:line="296" pos:column="21">!<pos:position pos:line="296" pos:column="22"/></operator><name pos:line="296" pos:column="22">commit<pos:position pos:line="296" pos:column="28"/></name></expr>)<pos:position pos:line="296" pos:column="29"/></condition><then pos:line="296" pos:column="29"> <block pos:line="296" pos:column="30">{
			<expr_stmt><expr><name pos:line="297" pos:column="25">ret<pos:position pos:line="297" pos:column="28"/></name> <operator pos:line="297" pos:column="29">=<pos:position pos:line="297" pos:column="30"/></operator> <literal type="number" pos:line="297" pos:column="31">1<pos:position pos:line="297" pos:column="32"/></literal></expr>;<pos:position pos:line="297" pos:column="33"/></expr_stmt>
			<goto pos:line="298" pos:column="25">goto <name pos:line="298" pos:column="30">done<pos:position pos:line="298" pos:column="34"/></name>;<pos:position pos:line="298" pos:column="35"/></goto>
		}<pos:position pos:line="299" pos:column="18"/></block></then></if>

		<if pos:line="301" pos:column="17">if <condition pos:line="301" pos:column="20">(<expr><call><name pos:line="301" pos:column="21">checkout_fast_forward<pos:position pos:line="301" pos:column="42"/></name><argument_list pos:line="301" pos:column="42">(<argument><expr><name><name pos:line="301" pos:column="43">head_commit<pos:position pos:line="301" pos:column="54"/></name><operator pos:line="301" pos:column="54">-&gt;<pos:position pos:line="301" pos:column="59"/></operator><name pos:line="301" pos:column="56">object<pos:position pos:line="301" pos:column="62"/></name><operator pos:line="301" pos:column="62">.<pos:position pos:line="301" pos:column="63"/></operator><name pos:line="301" pos:column="63">oid<pos:position pos:line="301" pos:column="66"/></name><operator pos:line="301" pos:column="66">.<pos:position pos:line="301" pos:column="67"/></operator><name pos:line="301" pos:column="67">hash<pos:position pos:line="301" pos:column="71"/></name></name></expr></argument>,
					  <argument><expr><name><name pos:line="302" pos:column="43">commit<pos:position pos:line="302" pos:column="49"/></name><operator pos:line="302" pos:column="49">-&gt;<pos:position pos:line="302" pos:column="54"/></operator><name pos:line="302" pos:column="51">object<pos:position pos:line="302" pos:column="57"/></name><operator pos:line="302" pos:column="57">.<pos:position pos:line="302" pos:column="58"/></operator><name pos:line="302" pos:column="58">oid<pos:position pos:line="302" pos:column="61"/></name><operator pos:line="302" pos:column="61">.<pos:position pos:line="302" pos:column="62"/></operator><name pos:line="302" pos:column="62">hash<pos:position pos:line="302" pos:column="66"/></name></name></expr></argument>,
					  <argument><expr><name pos:line="303" pos:column="43">overwrite_ignore<pos:position pos:line="303" pos:column="59"/></name></expr></argument>)<pos:position pos:line="303" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="303" pos:column="61"/></condition><then pos:line="303" pos:column="61"> <block pos:line="303" pos:column="62">{
			<expr_stmt><expr><name pos:line="304" pos:column="25">ret<pos:position pos:line="304" pos:column="28"/></name> <operator pos:line="304" pos:column="29">=<pos:position pos:line="304" pos:column="30"/></operator> <literal type="number" pos:line="304" pos:column="31">1<pos:position pos:line="304" pos:column="32"/></literal></expr>;<pos:position pos:line="304" pos:column="33"/></expr_stmt>
			<goto pos:line="305" pos:column="25">goto <name pos:line="305" pos:column="30">done<pos:position pos:line="305" pos:column="34"/></name>;<pos:position pos:line="305" pos:column="35"/></goto>
		}<pos:position pos:line="306" pos:column="18"/></block></then></if>

		<expr_stmt><expr><call><name pos:line="308" pos:column="17">finish<pos:position pos:line="308" pos:column="23"/></name><argument_list pos:line="308" pos:column="23">(<argument><expr><name pos:line="308" pos:column="24">head_commit<pos:position pos:line="308" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="308" pos:column="37">remoteheads<pos:position pos:line="308" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="308" pos:column="50">commit<pos:position pos:line="308" pos:column="56"/></name><operator pos:line="308" pos:column="56">-&gt;<pos:position pos:line="308" pos:column="61"/></operator><name pos:line="308" pos:column="58">object<pos:position pos:line="308" pos:column="64"/></name><operator pos:line="308" pos:column="64">.<pos:position pos:line="308" pos:column="65"/></operator><name pos:line="308" pos:column="65">oid<pos:position pos:line="308" pos:column="68"/></name><operator pos:line="308" pos:column="68">.<pos:position pos:line="308" pos:column="69"/></operator><name pos:line="308" pos:column="69">hash<pos:position pos:line="308" pos:column="73"/></name></name></expr></argument>, <argument><expr><name><name pos:line="308" pos:column="75">msg<pos:position pos:line="308" pos:column="78"/></name><operator pos:line="308" pos:column="78">.<pos:position pos:line="308" pos:column="79"/></operator><name pos:line="308" pos:column="79">buf<pos:position pos:line="308" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="308" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="308" pos:column="84"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="309" pos:column="17">drop_save<pos:position pos:line="309" pos:column="26"/></name><argument_list pos:line="309" pos:column="26">()<pos:position pos:line="309" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="309" pos:column="29"/></expr_stmt>
		<goto pos:line="310" pos:column="17">goto <name pos:line="310" pos:column="22">done<pos:position pos:line="310" pos:column="26"/></name>;<pos:position pos:line="310" pos:column="27"/></goto>
	}<pos:position pos:line="311" pos:column="10"/></block></then></if></elseif> <elseif pos:line="311" pos:column="11">else <if pos:line="311" pos:column="16">if <condition pos:line="311" pos:column="19">(<expr><operator pos:line="311" pos:column="20">!<pos:position pos:line="311" pos:column="21"/></operator><name><name pos:line="311" pos:column="21">remoteheads<pos:position pos:line="311" pos:column="32"/></name><operator pos:line="311" pos:column="32">-&gt;<pos:position pos:line="311" pos:column="37"/></operator><name pos:line="311" pos:column="34">next<pos:position pos:line="311" pos:column="38"/></name></name> <operator pos:line="311" pos:column="39">&amp;&amp;<pos:position pos:line="311" pos:column="49"/></operator> <name><name pos:line="311" pos:column="42">common<pos:position pos:line="311" pos:column="48"/></name><operator pos:line="311" pos:column="48">-&gt;<pos:position pos:line="311" pos:column="53"/></operator><name pos:line="311" pos:column="50">next<pos:position pos:line="311" pos:column="54"/></name></name></expr>)<pos:position pos:line="311" pos:column="55"/></condition><then pos:line="311" pos:column="55">
		<block type="pseudo"><empty_stmt pos:line="312" pos:column="17">;<pos:position pos:line="312" pos:column="18"/></empty_stmt></block></then></if></elseif>
		<comment type="block" pos:line="313" pos:column="17">/*
		 * We are not doing octopus and not fast-forward.  Need
		 * a real merge.
		 */</comment>
	<elseif pos:line="317" pos:column="9">else <if pos:line="317" pos:column="14">if <condition pos:line="317" pos:column="17">(<expr><operator pos:line="317" pos:column="18">!<pos:position pos:line="317" pos:column="19"/></operator><name><name pos:line="317" pos:column="19">remoteheads<pos:position pos:line="317" pos:column="30"/></name><operator pos:line="317" pos:column="30">-&gt;<pos:position pos:line="317" pos:column="35"/></operator><name pos:line="317" pos:column="32">next<pos:position pos:line="317" pos:column="36"/></name></name> <operator pos:line="317" pos:column="37">&amp;&amp;<pos:position pos:line="317" pos:column="47"/></operator> <operator pos:line="317" pos:column="40">!<pos:position pos:line="317" pos:column="41"/></operator><name><name pos:line="317" pos:column="41">common<pos:position pos:line="317" pos:column="47"/></name><operator pos:line="317" pos:column="47">-&gt;<pos:position pos:line="317" pos:column="52"/></operator><name pos:line="317" pos:column="49">next<pos:position pos:line="317" pos:column="53"/></name></name> <operator pos:line="317" pos:column="54">&amp;&amp;<pos:position pos:line="317" pos:column="64"/></operator> <name pos:line="317" pos:column="57">option_commit<pos:position pos:line="317" pos:column="70"/></name></expr>)<pos:position pos:line="317" pos:column="71"/></condition><then pos:line="317" pos:column="71"> <block pos:line="317" pos:column="72">{
		<comment type="block" pos:line="318" pos:column="17">/*
		 * We are not doing octopus, not fast-forward, and have
		 * only one common.
		 */</comment>
		<expr_stmt><expr><call><name pos:line="322" pos:column="17">refresh_cache<pos:position pos:line="322" pos:column="30"/></name><argument_list pos:line="322" pos:column="30">(<argument><expr><name pos:line="322" pos:column="31">REFRESH_QUIET<pos:position pos:line="322" pos:column="44"/></name></expr></argument>)<pos:position pos:line="322" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="322" pos:column="46"/></expr_stmt>
		<if pos:line="323" pos:column="17">if <condition pos:line="323" pos:column="20">(<expr><name pos:line="323" pos:column="21">allow_trivial<pos:position pos:line="323" pos:column="34"/></name> <operator pos:line="323" pos:column="35">&amp;&amp;<pos:position pos:line="323" pos:column="45"/></operator> <name pos:line="323" pos:column="38">fast_forward<pos:position pos:line="323" pos:column="50"/></name> <operator pos:line="323" pos:column="51">!=<pos:position pos:line="323" pos:column="53"/></operator> <name pos:line="323" pos:column="54">FF_ONLY<pos:position pos:line="323" pos:column="61"/></name></expr>)<pos:position pos:line="323" pos:column="62"/></condition><then pos:line="323" pos:column="62"> <block pos:line="323" pos:column="63">{
			<comment type="block" pos:line="324" pos:column="25">/* See if it is really trivial. */</comment>
			<expr_stmt><expr><call><name pos:line="325" pos:column="25">git_committer_info<pos:position pos:line="325" pos:column="43"/></name><argument_list pos:line="325" pos:column="43">(<argument><expr><name pos:line="325" pos:column="44">IDENT_STRICT<pos:position pos:line="325" pos:column="56"/></name></expr></argument>)<pos:position pos:line="325" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="325" pos:column="58"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="326" pos:column="25">printf<pos:position pos:line="326" pos:column="31"/></name><argument_list pos:line="326" pos:column="31">(<argument><expr><call><name pos:line="326" pos:column="32">_<pos:position pos:line="326" pos:column="33"/></name><argument_list pos:line="326" pos:column="33">(<argument><expr><literal type="string" pos:line="326" pos:column="34">"Trying really trivial in-index merge...\n"<pos:position pos:line="326" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="326" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="326" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="326" pos:column="80"/></expr_stmt>
			<if pos:line="327" pos:column="25">if <condition pos:line="327" pos:column="28">(<expr><operator pos:line="327" pos:column="29">!<pos:position pos:line="327" pos:column="30"/></operator><call><name pos:line="327" pos:column="30">read_tree_trivial<pos:position pos:line="327" pos:column="47"/></name><argument_list pos:line="327" pos:column="47">(<argument><expr><name><name pos:line="327" pos:column="48">common<pos:position pos:line="327" pos:column="54"/></name><operator pos:line="327" pos:column="54">-&gt;<pos:position pos:line="327" pos:column="59"/></operator><name pos:line="327" pos:column="56">item<pos:position pos:line="327" pos:column="60"/></name><operator pos:line="327" pos:column="60">-&gt;<pos:position pos:line="327" pos:column="65"/></operator><name pos:line="327" pos:column="62">object<pos:position pos:line="327" pos:column="68"/></name><operator pos:line="327" pos:column="68">.<pos:position pos:line="327" pos:column="69"/></operator><name pos:line="327" pos:column="69">oid<pos:position pos:line="327" pos:column="72"/></name><operator pos:line="327" pos:column="72">.<pos:position pos:line="327" pos:column="73"/></operator><name pos:line="327" pos:column="73">hash<pos:position pos:line="327" pos:column="77"/></name></name></expr></argument>,
					       <argument><expr><name><name pos:line="328" pos:column="48">head_commit<pos:position pos:line="328" pos:column="59"/></name><operator pos:line="328" pos:column="59">-&gt;<pos:position pos:line="328" pos:column="64"/></operator><name pos:line="328" pos:column="61">object<pos:position pos:line="328" pos:column="67"/></name><operator pos:line="328" pos:column="67">.<pos:position pos:line="328" pos:column="68"/></operator><name pos:line="328" pos:column="68">oid<pos:position pos:line="328" pos:column="71"/></name><operator pos:line="328" pos:column="71">.<pos:position pos:line="328" pos:column="72"/></operator><name pos:line="328" pos:column="72">hash<pos:position pos:line="328" pos:column="76"/></name></name></expr></argument>,
					       <argument><expr><name><name pos:line="329" pos:column="48">remoteheads<pos:position pos:line="329" pos:column="59"/></name><operator pos:line="329" pos:column="59">-&gt;<pos:position pos:line="329" pos:column="64"/></operator><name pos:line="329" pos:column="61">item<pos:position pos:line="329" pos:column="65"/></name><operator pos:line="329" pos:column="65">-&gt;<pos:position pos:line="329" pos:column="70"/></operator><name pos:line="329" pos:column="67">object<pos:position pos:line="329" pos:column="73"/></name><operator pos:line="329" pos:column="73">.<pos:position pos:line="329" pos:column="74"/></operator><name pos:line="329" pos:column="74">oid<pos:position pos:line="329" pos:column="77"/></name><operator pos:line="329" pos:column="77">.<pos:position pos:line="329" pos:column="78"/></operator><name pos:line="329" pos:column="78">hash<pos:position pos:line="329" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="329" pos:column="83"/></argument_list></call></expr>)<pos:position pos:line="329" pos:column="84"/></condition><then pos:line="329" pos:column="84"> <block pos:line="329" pos:column="85">{
				<expr_stmt><expr><name pos:line="330" pos:column="33">ret<pos:position pos:line="330" pos:column="36"/></name> <operator pos:line="330" pos:column="37">=<pos:position pos:line="330" pos:column="38"/></operator> <call><name pos:line="330" pos:column="39">merge_trivial<pos:position pos:line="330" pos:column="52"/></name><argument_list pos:line="330" pos:column="52">(<argument><expr><name pos:line="330" pos:column="53">head_commit<pos:position pos:line="330" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="330" pos:column="66">remoteheads<pos:position pos:line="330" pos:column="77"/></name></expr></argument>)<pos:position pos:line="330" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="330" pos:column="79"/></expr_stmt>
				<goto pos:line="331" pos:column="33">goto <name pos:line="331" pos:column="38">done<pos:position pos:line="331" pos:column="42"/></name>;<pos:position pos:line="331" pos:column="43"/></goto>
			}<pos:position pos:line="332" pos:column="26"/></block></then></if>
			<expr_stmt><expr><call><name pos:line="333" pos:column="25">printf<pos:position pos:line="333" pos:column="31"/></name><argument_list pos:line="333" pos:column="31">(<argument><expr><call><name pos:line="333" pos:column="32">_<pos:position pos:line="333" pos:column="33"/></name><argument_list pos:line="333" pos:column="33">(<argument><expr><literal type="string" pos:line="333" pos:column="34">"Nope.\n"<pos:position pos:line="333" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="333" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="333" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="333" pos:column="46"/></expr_stmt>
		}<pos:position pos:line="334" pos:column="18"/></block></then></if>
	}<pos:position pos:line="335" pos:column="10"/></block></then></if></elseif> <else pos:line="335" pos:column="11">else <block pos:line="335" pos:column="16">{
		<comment type="block" pos:line="336" pos:column="17">/*
		 * An octopus.  If we can reach all the remote we are up
		 * to date.
		 */</comment>
		<decl_stmt><decl><type><name pos:line="340" pos:column="17">int<pos:position pos:line="340" pos:column="20"/></name></type> <name pos:line="340" pos:column="21">up_to_date<pos:position pos:line="340" pos:column="31"/></name> <init pos:line="340" pos:column="32">= <expr><literal type="number" pos:line="340" pos:column="34">1<pos:position pos:line="340" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="340" pos:column="36"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="341" pos:column="17">struct<pos:position pos:line="341" pos:column="23"/></name> <name pos:line="341" pos:column="24">commit_list<pos:position pos:line="341" pos:column="35"/></name></name> <modifier pos:line="341" pos:column="36">*<pos:position pos:line="341" pos:column="37"/></modifier></type><name pos:line="341" pos:column="37">j<pos:position pos:line="341" pos:column="38"/></name></decl>;<pos:position pos:line="341" pos:column="39"/></decl_stmt>

		<for pos:line="343" pos:column="17">for <control pos:line="343" pos:column="21">(<init><expr><name pos:line="343" pos:column="22">j<pos:position pos:line="343" pos:column="23"/></name> <operator pos:line="343" pos:column="24">=<pos:position pos:line="343" pos:column="25"/></operator> <name pos:line="343" pos:column="26">remoteheads<pos:position pos:line="343" pos:column="37"/></name></expr>;<pos:position pos:line="343" pos:column="38"/></init> <condition><expr><name pos:line="343" pos:column="39">j<pos:position pos:line="343" pos:column="40"/></name></expr>;<pos:position pos:line="343" pos:column="41"/></condition> <incr><expr><name pos:line="343" pos:column="42">j<pos:position pos:line="343" pos:column="43"/></name> <operator pos:line="343" pos:column="44">=<pos:position pos:line="343" pos:column="45"/></operator> <name><name pos:line="343" pos:column="46">j<pos:position pos:line="343" pos:column="47"/></name><operator pos:line="343" pos:column="47">-&gt;<pos:position pos:line="343" pos:column="52"/></operator><name pos:line="343" pos:column="49">next<pos:position pos:line="343" pos:column="53"/></name></name></expr></incr>)<pos:position pos:line="343" pos:column="54"/></control> <block pos:line="343" pos:column="55">{
			<decl_stmt><decl><type><name><name pos:line="344" pos:column="25">struct<pos:position pos:line="344" pos:column="31"/></name> <name pos:line="344" pos:column="32">commit_list<pos:position pos:line="344" pos:column="43"/></name></name> <modifier pos:line="344" pos:column="44">*<pos:position pos:line="344" pos:column="45"/></modifier></type><name pos:line="344" pos:column="45">common_one<pos:position pos:line="344" pos:column="55"/></name></decl>;<pos:position pos:line="344" pos:column="56"/></decl_stmt>

			<comment type="block" pos:line="346" pos:column="25">/*
			 * Here we *have* to calculate the individual
			 * merge_bases again, otherwise "git merge HEAD^
			 * HEAD^^" would be missed.
			 */</comment>
			<expr_stmt><expr><name pos:line="351" pos:column="25">common_one<pos:position pos:line="351" pos:column="35"/></name> <operator pos:line="351" pos:column="36">=<pos:position pos:line="351" pos:column="37"/></operator> <call><name pos:line="351" pos:column="38">get_merge_bases<pos:position pos:line="351" pos:column="53"/></name><argument_list pos:line="351" pos:column="53">(<argument><expr><name pos:line="351" pos:column="54">head_commit<pos:position pos:line="351" pos:column="65"/></name></expr></argument>, <argument><expr><name><name pos:line="351" pos:column="67">j<pos:position pos:line="351" pos:column="68"/></name><operator pos:line="351" pos:column="68">-&gt;<pos:position pos:line="351" pos:column="73"/></operator><name pos:line="351" pos:column="70">item<pos:position pos:line="351" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="351" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="351" pos:column="76"/></expr_stmt>
			<if pos:line="352" pos:column="25">if <condition pos:line="352" pos:column="28">(<expr><call><name pos:line="352" pos:column="29">oidcmp<pos:position pos:line="352" pos:column="35"/></name><argument_list pos:line="352" pos:column="35">(<argument><expr><operator pos:line="352" pos:column="36">&amp;<pos:position pos:line="352" pos:column="41"/></operator><name><name pos:line="352" pos:column="37">common_one<pos:position pos:line="352" pos:column="47"/></name><operator pos:line="352" pos:column="47">-&gt;<pos:position pos:line="352" pos:column="52"/></operator><name pos:line="352" pos:column="49">item<pos:position pos:line="352" pos:column="53"/></name><operator pos:line="352" pos:column="53">-&gt;<pos:position pos:line="352" pos:column="58"/></operator><name pos:line="352" pos:column="55">object<pos:position pos:line="352" pos:column="61"/></name><operator pos:line="352" pos:column="61">.<pos:position pos:line="352" pos:column="62"/></operator><name pos:line="352" pos:column="62">oid<pos:position pos:line="352" pos:column="65"/></name></name></expr></argument>, <argument><expr><operator pos:line="352" pos:column="67">&amp;<pos:position pos:line="352" pos:column="72"/></operator><name><name pos:line="352" pos:column="68">j<pos:position pos:line="352" pos:column="69"/></name><operator pos:line="352" pos:column="69">-&gt;<pos:position pos:line="352" pos:column="74"/></operator><name pos:line="352" pos:column="71">item<pos:position pos:line="352" pos:column="75"/></name><operator pos:line="352" pos:column="75">-&gt;<pos:position pos:line="352" pos:column="80"/></operator><name pos:line="352" pos:column="77">object<pos:position pos:line="352" pos:column="83"/></name><operator pos:line="352" pos:column="83">.<pos:position pos:line="352" pos:column="84"/></operator><name pos:line="352" pos:column="84">oid<pos:position pos:line="352" pos:column="87"/></name></name></expr></argument>)<pos:position pos:line="352" pos:column="88"/></argument_list></call></expr>)<pos:position pos:line="352" pos:column="89"/></condition><then pos:line="352" pos:column="89"> <block pos:line="352" pos:column="90">{
				<expr_stmt><expr><name pos:line="353" pos:column="33">up_to_date<pos:position pos:line="353" pos:column="43"/></name> <operator pos:line="353" pos:column="44">=<pos:position pos:line="353" pos:column="45"/></operator> <literal type="number" pos:line="353" pos:column="46">0<pos:position pos:line="353" pos:column="47"/></literal></expr>;<pos:position pos:line="353" pos:column="48"/></expr_stmt>
				<break pos:line="354" pos:column="33">break;<pos:position pos:line="354" pos:column="39"/></break>
			}<pos:position pos:line="355" pos:column="26"/></block></then></if>
		}<pos:position pos:line="356" pos:column="18"/></block></for>
		<if pos:line="357" pos:column="17">if <condition pos:line="357" pos:column="20">(<expr><name pos:line="357" pos:column="21">up_to_date<pos:position pos:line="357" pos:column="31"/></name></expr>)<pos:position pos:line="357" pos:column="32"/></condition><then pos:line="357" pos:column="32"> <block pos:line="357" pos:column="33">{
			<expr_stmt><expr><call><name pos:line="358" pos:column="25">finish_up_to_date<pos:position pos:line="358" pos:column="42"/></name><argument_list pos:line="358" pos:column="42">(<argument><expr><call><name pos:line="358" pos:column="43">_<pos:position pos:line="358" pos:column="44"/></name><argument_list pos:line="358" pos:column="44">(<argument><expr><literal type="string" pos:line="358" pos:column="45">"Already up-to-date. Yeeah!"<pos:position pos:line="358" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="358" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="358" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="358" pos:column="76"/></expr_stmt>
			<goto pos:line="359" pos:column="25">goto <name pos:line="359" pos:column="30">done<pos:position pos:line="359" pos:column="34"/></name>;<pos:position pos:line="359" pos:column="35"/></goto>
		}<pos:position pos:line="360" pos:column="18"/></block></then></if>
	}<pos:position pos:line="361" pos:column="10"/></block></else></if>

	<if pos:line="363" pos:column="9">if <condition pos:line="363" pos:column="12">(<expr><name pos:line="363" pos:column="13">fast_forward<pos:position pos:line="363" pos:column="25"/></name> <operator pos:line="363" pos:column="26">==<pos:position pos:line="363" pos:column="28"/></operator> <name pos:line="363" pos:column="29">FF_ONLY<pos:position pos:line="363" pos:column="36"/></name></expr>)<pos:position pos:line="363" pos:column="37"/></condition><then pos:line="363" pos:column="37">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="364" pos:column="17">die<pos:position pos:line="364" pos:column="20"/></name><argument_list pos:line="364" pos:column="20">(<argument><expr><call><name pos:line="364" pos:column="21">_<pos:position pos:line="364" pos:column="22"/></name><argument_list pos:line="364" pos:column="22">(<argument><expr><literal type="string" pos:line="364" pos:column="23">"Not possible to fast-forward, aborting."<pos:position pos:line="364" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="364" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="364" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="364" pos:column="67"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="366" pos:column="9">/* We are going to make a new commit. */</comment>
	<expr_stmt><expr><call><name pos:line="367" pos:column="9">git_committer_info<pos:position pos:line="367" pos:column="27"/></name><argument_list pos:line="367" pos:column="27">(<argument><expr><name pos:line="367" pos:column="28">IDENT_STRICT<pos:position pos:line="367" pos:column="40"/></name></expr></argument>)<pos:position pos:line="367" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="367" pos:column="42"/></expr_stmt>

	<comment type="block" pos:line="369" pos:column="9">/*
	 * At this point, we need a real merge.  No matter what strategy
	 * we use, it would operate on the index, possibly affecting the
	 * working tree, and when resolved cleanly, have the desired
	 * tree in the index -- this means that the index must be in
	 * sync with the head commit.  The strategies are responsible
	 * to ensure this.
	 */</comment>
	<if pos:line="377" pos:column="9">if <condition pos:line="377" pos:column="12">(<expr><name pos:line="377" pos:column="13">use_strategies_nr<pos:position pos:line="377" pos:column="30"/></name> <operator pos:line="377" pos:column="31">==<pos:position pos:line="377" pos:column="33"/></operator> <literal type="number" pos:line="377" pos:column="34">1<pos:position pos:line="377" pos:column="35"/></literal> <operator pos:line="377" pos:column="36">||<pos:position pos:line="377" pos:column="38"/></operator>
	    <comment type="block" pos:line="378" pos:column="13">/*
	     * Stash away the local changes so that we can try more than one.
	     */</comment>
	    <call><name pos:line="381" pos:column="13">save_state<pos:position pos:line="381" pos:column="23"/></name><argument_list pos:line="381" pos:column="23">(<argument><expr><name pos:line="381" pos:column="24">stash<pos:position pos:line="381" pos:column="29"/></name></expr></argument>)<pos:position pos:line="381" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="381" pos:column="31"/></condition><then pos:line="381" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="382" pos:column="17">hashclr<pos:position pos:line="382" pos:column="24"/></name><argument_list pos:line="382" pos:column="24">(<argument><expr><name pos:line="382" pos:column="25">stash<pos:position pos:line="382" pos:column="30"/></name></expr></argument>)<pos:position pos:line="382" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="382" pos:column="32"/></expr_stmt></block></then></if>

	<for pos:line="384" pos:column="9">for <control pos:line="384" pos:column="13">(<init><expr><name pos:line="384" pos:column="14">i<pos:position pos:line="384" pos:column="15"/></name> <operator pos:line="384" pos:column="16">=<pos:position pos:line="384" pos:column="17"/></operator> <literal type="number" pos:line="384" pos:column="18">0<pos:position pos:line="384" pos:column="19"/></literal></expr>;<pos:position pos:line="384" pos:column="20"/></init> <condition><expr><name pos:line="384" pos:column="21">i<pos:position pos:line="384" pos:column="22"/></name> <operator pos:line="384" pos:column="23">&lt;<pos:position pos:line="384" pos:column="27"/></operator> <name pos:line="384" pos:column="25">use_strategies_nr<pos:position pos:line="384" pos:column="42"/></name></expr>;<pos:position pos:line="384" pos:column="43"/></condition> <incr><expr><name pos:line="384" pos:column="44">i<pos:position pos:line="384" pos:column="45"/></name><operator pos:line="384" pos:column="45">++<pos:position pos:line="384" pos:column="47"/></operator></expr></incr>)<pos:position pos:line="384" pos:column="48"/></control> <block pos:line="384" pos:column="49">{
		<decl_stmt><decl><type><name pos:line="385" pos:column="17">int<pos:position pos:line="385" pos:column="20"/></name></type> <name pos:line="385" pos:column="21">ret<pos:position pos:line="385" pos:column="24"/></name></decl>;<pos:position pos:line="385" pos:column="25"/></decl_stmt>
		<if pos:line="386" pos:column="17">if <condition pos:line="386" pos:column="20">(<expr><name pos:line="386" pos:column="21">i<pos:position pos:line="386" pos:column="22"/></name></expr>)<pos:position pos:line="386" pos:column="23"/></condition><then pos:line="386" pos:column="23"> <block pos:line="386" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="387" pos:column="25">printf<pos:position pos:line="387" pos:column="31"/></name><argument_list pos:line="387" pos:column="31">(<argument><expr><call><name pos:line="387" pos:column="32">_<pos:position pos:line="387" pos:column="33"/></name><argument_list pos:line="387" pos:column="33">(<argument><expr><literal type="string" pos:line="387" pos:column="34">"Rewinding the tree to pristine...\n"<pos:position pos:line="387" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="387" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="387" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="387" pos:column="74"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="388" pos:column="25">restore_state<pos:position pos:line="388" pos:column="38"/></name><argument_list pos:line="388" pos:column="38">(<argument><expr><name><name pos:line="388" pos:column="39">head_commit<pos:position pos:line="388" pos:column="50"/></name><operator pos:line="388" pos:column="50">-&gt;<pos:position pos:line="388" pos:column="55"/></operator><name pos:line="388" pos:column="52">object<pos:position pos:line="388" pos:column="58"/></name><operator pos:line="388" pos:column="58">.<pos:position pos:line="388" pos:column="59"/></operator><name pos:line="388" pos:column="59">oid<pos:position pos:line="388" pos:column="62"/></name><operator pos:line="388" pos:column="62">.<pos:position pos:line="388" pos:column="63"/></operator><name pos:line="388" pos:column="63">hash<pos:position pos:line="388" pos:column="67"/></name></name></expr></argument>, <argument><expr><name pos:line="388" pos:column="69">stash<pos:position pos:line="388" pos:column="74"/></name></expr></argument>)<pos:position pos:line="388" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="388" pos:column="76"/></expr_stmt>
		}<pos:position pos:line="389" pos:column="18"/></block></then></if>
		<if pos:line="390" pos:column="17">if <condition pos:line="390" pos:column="20">(<expr><name pos:line="390" pos:column="21">use_strategies_nr<pos:position pos:line="390" pos:column="38"/></name> <operator pos:line="390" pos:column="39">!=<pos:position pos:line="390" pos:column="41"/></operator> <literal type="number" pos:line="390" pos:column="42">1<pos:position pos:line="390" pos:column="43"/></literal></expr>)<pos:position pos:line="390" pos:column="44"/></condition><then pos:line="390" pos:column="44">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="391" pos:column="25">printf<pos:position pos:line="391" pos:column="31"/></name><argument_list pos:line="391" pos:column="31">(<argument><expr><call><name pos:line="391" pos:column="32">_<pos:position pos:line="391" pos:column="33"/></name><argument_list pos:line="391" pos:column="33">(<argument><expr><literal type="string" pos:line="391" pos:column="34">"Trying merge strategy %s...\n"<pos:position pos:line="391" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="391" pos:column="66"/></argument_list></call></expr></argument>,
				<argument><expr><name><name pos:line="392" pos:column="33">use_strategies<pos:position pos:line="392" pos:column="47"/></name><index pos:line="392" pos:column="47">[<expr><name pos:line="392" pos:column="48">i<pos:position pos:line="392" pos:column="49"/></name></expr>]<pos:position pos:line="392" pos:column="50"/></index></name><operator pos:line="392" pos:column="50">-&gt;<pos:position pos:line="392" pos:column="55"/></operator><name pos:line="392" pos:column="52">name<pos:position pos:line="392" pos:column="56"/></name></expr></argument>)<pos:position pos:line="392" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="392" pos:column="58"/></expr_stmt></block></then></if>
		<comment type="block" pos:line="393" pos:column="17">/*
		 * Remember which strategy left the state in the working
		 * tree.
		 */</comment>
		<expr_stmt><expr><name pos:line="397" pos:column="17">wt_strategy<pos:position pos:line="397" pos:column="28"/></name> <operator pos:line="397" pos:column="29">=<pos:position pos:line="397" pos:column="30"/></operator> <name><name pos:line="397" pos:column="31">use_strategies<pos:position pos:line="397" pos:column="45"/></name><index pos:line="397" pos:column="45">[<expr><name pos:line="397" pos:column="46">i<pos:position pos:line="397" pos:column="47"/></name></expr>]<pos:position pos:line="397" pos:column="48"/></index></name><operator pos:line="397" pos:column="48">-&gt;<pos:position pos:line="397" pos:column="53"/></operator><name pos:line="397" pos:column="50">name<pos:position pos:line="397" pos:column="54"/></name></expr>;<pos:position pos:line="397" pos:column="55"/></expr_stmt>

		<expr_stmt><expr><name pos:line="399" pos:column="17">ret<pos:position pos:line="399" pos:column="20"/></name> <operator pos:line="399" pos:column="21">=<pos:position pos:line="399" pos:column="22"/></operator> <call><name pos:line="399" pos:column="23">try_merge_strategy<pos:position pos:line="399" pos:column="41"/></name><argument_list pos:line="399" pos:column="41">(<argument><expr><name><name pos:line="399" pos:column="42">use_strategies<pos:position pos:line="399" pos:column="56"/></name><index pos:line="399" pos:column="56">[<expr><name pos:line="399" pos:column="57">i<pos:position pos:line="399" pos:column="58"/></name></expr>]<pos:position pos:line="399" pos:column="59"/></index></name><operator pos:line="399" pos:column="59">-&gt;<pos:position pos:line="399" pos:column="64"/></operator><name pos:line="399" pos:column="61">name<pos:position pos:line="399" pos:column="65"/></name></expr></argument>,
					 <argument><expr><name pos:line="400" pos:column="42">common<pos:position pos:line="400" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="400" pos:column="50">remoteheads<pos:position pos:line="400" pos:column="61"/></name></expr></argument>,
					 <argument><expr><name pos:line="401" pos:column="42">head_commit<pos:position pos:line="401" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="401" pos:column="55">head_arg<pos:position pos:line="401" pos:column="63"/></name></expr></argument>)<pos:position pos:line="401" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="401" pos:column="65"/></expr_stmt>
		<if pos:line="402" pos:column="17">if <condition pos:line="402" pos:column="20">(<expr><operator pos:line="402" pos:column="21">!<pos:position pos:line="402" pos:column="22"/></operator><name pos:line="402" pos:column="22">option_commit<pos:position pos:line="402" pos:column="35"/></name> <operator pos:line="402" pos:column="36">&amp;&amp;<pos:position pos:line="402" pos:column="46"/></operator> <operator pos:line="402" pos:column="39">!<pos:position pos:line="402" pos:column="40"/></operator><name pos:line="402" pos:column="40">ret<pos:position pos:line="402" pos:column="43"/></name></expr>)<pos:position pos:line="402" pos:column="44"/></condition><then pos:line="402" pos:column="44"> <block pos:line="402" pos:column="45">{
			<expr_stmt><expr><name pos:line="403" pos:column="25">merge_was_ok<pos:position pos:line="403" pos:column="37"/></name> <operator pos:line="403" pos:column="38">=<pos:position pos:line="403" pos:column="39"/></operator> <literal type="number" pos:line="403" pos:column="40">1<pos:position pos:line="403" pos:column="41"/></literal></expr>;<pos:position pos:line="403" pos:column="42"/></expr_stmt>
			<comment type="block" pos:line="404" pos:column="25">/*
			 * This is necessary here just to avoid writing
			 * the tree, but later we will *not* exit with
			 * status code 1 because merge_was_ok is set.
			 */</comment>
			<expr_stmt><expr><name pos:line="409" pos:column="25">ret<pos:position pos:line="409" pos:column="28"/></name> <operator pos:line="409" pos:column="29">=<pos:position pos:line="409" pos:column="30"/></operator> <literal type="number" pos:line="409" pos:column="31">1<pos:position pos:line="409" pos:column="32"/></literal></expr>;<pos:position pos:line="409" pos:column="33"/></expr_stmt>
		}<pos:position pos:line="410" pos:column="18"/></block></then></if>

		<if pos:line="412" pos:column="17">if <condition pos:line="412" pos:column="20">(<expr><name pos:line="412" pos:column="21">ret<pos:position pos:line="412" pos:column="24"/></name></expr>)<pos:position pos:line="412" pos:column="25"/></condition><then pos:line="412" pos:column="25"> <block pos:line="412" pos:column="26">{
			<comment type="block" pos:line="413" pos:column="25">/*
			 * The backend exits with 1 when conflicts are
			 * left to be resolved, with 2 when it does not
			 * handle the given merge at all.
			 */</comment>
			<if pos:line="418" pos:column="25">if <condition pos:line="418" pos:column="28">(<expr><name pos:line="418" pos:column="29">ret<pos:position pos:line="418" pos:column="32"/></name> <operator pos:line="418" pos:column="33">==<pos:position pos:line="418" pos:column="35"/></operator> <literal type="number" pos:line="418" pos:column="36">1<pos:position pos:line="418" pos:column="37"/></literal></expr>)<pos:position pos:line="418" pos:column="38"/></condition><then pos:line="418" pos:column="38"> <block pos:line="418" pos:column="39">{
				<decl_stmt><decl><type><name pos:line="419" pos:column="33">int<pos:position pos:line="419" pos:column="36"/></name></type> <name pos:line="419" pos:column="37">cnt<pos:position pos:line="419" pos:column="40"/></name> <init pos:line="419" pos:column="41">= <expr><call><name pos:line="419" pos:column="43">evaluate_result<pos:position pos:line="419" pos:column="58"/></name><argument_list pos:line="419" pos:column="58">()<pos:position pos:line="419" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="419" pos:column="61"/></decl_stmt>

				<if pos:line="421" pos:column="33">if <condition pos:line="421" pos:column="36">(<expr><name pos:line="421" pos:column="37">best_cnt<pos:position pos:line="421" pos:column="45"/></name> <operator pos:line="421" pos:column="46">&lt;=<pos:position pos:line="421" pos:column="51"/></operator> <literal type="number" pos:line="421" pos:column="49">0<pos:position pos:line="421" pos:column="50"/></literal> <operator pos:line="421" pos:column="51">||<pos:position pos:line="421" pos:column="53"/></operator> <name pos:line="421" pos:column="54">cnt<pos:position pos:line="421" pos:column="57"/></name> <operator pos:line="421" pos:column="58">&lt;=<pos:position pos:line="421" pos:column="63"/></operator> <name pos:line="421" pos:column="61">best_cnt<pos:position pos:line="421" pos:column="69"/></name></expr>)<pos:position pos:line="421" pos:column="70"/></condition><then pos:line="421" pos:column="70"> <block pos:line="421" pos:column="71">{
					<expr_stmt><expr><name pos:line="422" pos:column="41">best_strategy<pos:position pos:line="422" pos:column="54"/></name> <operator pos:line="422" pos:column="55">=<pos:position pos:line="422" pos:column="56"/></operator> <name><name pos:line="422" pos:column="57">use_strategies<pos:position pos:line="422" pos:column="71"/></name><index pos:line="422" pos:column="71">[<expr><name pos:line="422" pos:column="72">i<pos:position pos:line="422" pos:column="73"/></name></expr>]<pos:position pos:line="422" pos:column="74"/></index></name><operator pos:line="422" pos:column="74">-&gt;<pos:position pos:line="422" pos:column="79"/></operator><name pos:line="422" pos:column="76">name<pos:position pos:line="422" pos:column="80"/></name></expr>;<pos:position pos:line="422" pos:column="81"/></expr_stmt>
					<expr_stmt><expr><name pos:line="423" pos:column="41">best_cnt<pos:position pos:line="423" pos:column="49"/></name> <operator pos:line="423" pos:column="50">=<pos:position pos:line="423" pos:column="51"/></operator> <name pos:line="423" pos:column="52">cnt<pos:position pos:line="423" pos:column="55"/></name></expr>;<pos:position pos:line="423" pos:column="56"/></expr_stmt>
				}<pos:position pos:line="424" pos:column="34"/></block></then></if>
			}<pos:position pos:line="425" pos:column="26"/></block></then></if>
			<if pos:line="426" pos:column="25">if <condition pos:line="426" pos:column="28">(<expr><name pos:line="426" pos:column="29">merge_was_ok<pos:position pos:line="426" pos:column="41"/></name></expr>)<pos:position pos:line="426" pos:column="42"/></condition><then pos:line="426" pos:column="42">
				<block type="pseudo"><break pos:line="427" pos:column="33">break;<pos:position pos:line="427" pos:column="39"/></break></block></then>
			<else pos:line="428" pos:column="25">else
				<block type="pseudo"><continue pos:line="429" pos:column="33">continue;<pos:position pos:line="429" pos:column="42"/></continue></block></else></if>
		}<pos:position pos:line="430" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="432" pos:column="17">/* Automerge succeeded. */</comment>
		<expr_stmt><expr><call><name pos:line="433" pos:column="17">write_tree_trivial<pos:position pos:line="433" pos:column="35"/></name><argument_list pos:line="433" pos:column="35">(<argument><expr><name pos:line="433" pos:column="36">result_tree<pos:position pos:line="433" pos:column="47"/></name></expr></argument>)<pos:position pos:line="433" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="433" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><name pos:line="434" pos:column="17">automerge_was_ok<pos:position pos:line="434" pos:column="33"/></name> <operator pos:line="434" pos:column="34">=<pos:position pos:line="434" pos:column="35"/></operator> <literal type="number" pos:line="434" pos:column="36">1<pos:position pos:line="434" pos:column="37"/></literal></expr>;<pos:position pos:line="434" pos:column="38"/></expr_stmt>
		<break pos:line="435" pos:column="17">break;<pos:position pos:line="435" pos:column="23"/></break>
	}<pos:position pos:line="436" pos:column="10"/></block></for>

	<comment type="block" pos:line="438" pos:column="9">/*
	 * If we have a resulting tree, that means the strategy module
	 * auto resolved the merge cleanly.
	 */</comment>
	<if pos:line="442" pos:column="9">if <condition pos:line="442" pos:column="12">(<expr><name pos:line="442" pos:column="13">automerge_was_ok<pos:position pos:line="442" pos:column="29"/></name></expr>)<pos:position pos:line="442" pos:column="30"/></condition><then pos:line="442" pos:column="30"> <block pos:line="442" pos:column="31">{
		<expr_stmt><expr><name pos:line="443" pos:column="17">ret<pos:position pos:line="443" pos:column="20"/></name> <operator pos:line="443" pos:column="21">=<pos:position pos:line="443" pos:column="22"/></operator> <call><name pos:line="443" pos:column="23">finish_automerge<pos:position pos:line="443" pos:column="39"/></name><argument_list pos:line="443" pos:column="39">(<argument><expr><name pos:line="443" pos:column="40">head_commit<pos:position pos:line="443" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="443" pos:column="53">head_subsumed<pos:position pos:line="443" pos:column="66"/></name></expr></argument>,
				       <argument><expr><name pos:line="444" pos:column="40">common<pos:position pos:line="444" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="444" pos:column="48">remoteheads<pos:position pos:line="444" pos:column="59"/></name></expr></argument>,
				       <argument><expr><name pos:line="445" pos:column="40">result_tree<pos:position pos:line="445" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="445" pos:column="53">wt_strategy<pos:position pos:line="445" pos:column="64"/></name></expr></argument>)<pos:position pos:line="445" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="445" pos:column="66"/></expr_stmt>
		<goto pos:line="446" pos:column="17">goto <name pos:line="446" pos:column="22">done<pos:position pos:line="446" pos:column="26"/></name>;<pos:position pos:line="446" pos:column="27"/></goto>
	}<pos:position pos:line="447" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="449" pos:column="9">/*
	 * Pick the result from the best strategy and have the user fix
	 * it up.
	 */</comment>
	<if pos:line="453" pos:column="9">if <condition pos:line="453" pos:column="12">(<expr><operator pos:line="453" pos:column="13">!<pos:position pos:line="453" pos:column="14"/></operator><name pos:line="453" pos:column="14">best_strategy<pos:position pos:line="453" pos:column="27"/></name></expr>)<pos:position pos:line="453" pos:column="28"/></condition><then pos:line="453" pos:column="28"> <block pos:line="453" pos:column="29">{
		<expr_stmt><expr><call><name pos:line="454" pos:column="17">restore_state<pos:position pos:line="454" pos:column="30"/></name><argument_list pos:line="454" pos:column="30">(<argument><expr><name><name pos:line="454" pos:column="31">head_commit<pos:position pos:line="454" pos:column="42"/></name><operator pos:line="454" pos:column="42">-&gt;<pos:position pos:line="454" pos:column="47"/></operator><name pos:line="454" pos:column="44">object<pos:position pos:line="454" pos:column="50"/></name><operator pos:line="454" pos:column="50">.<pos:position pos:line="454" pos:column="51"/></operator><name pos:line="454" pos:column="51">oid<pos:position pos:line="454" pos:column="54"/></name><operator pos:line="454" pos:column="54">.<pos:position pos:line="454" pos:column="55"/></operator><name pos:line="454" pos:column="55">hash<pos:position pos:line="454" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="454" pos:column="61">stash<pos:position pos:line="454" pos:column="66"/></name></expr></argument>)<pos:position pos:line="454" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="454" pos:column="68"/></expr_stmt>
		<if pos:line="455" pos:column="17">if <condition pos:line="455" pos:column="20">(<expr><name pos:line="455" pos:column="21">use_strategies_nr<pos:position pos:line="455" pos:column="38"/></name> <operator pos:line="455" pos:column="39">&gt;<pos:position pos:line="455" pos:column="43"/></operator> <literal type="number" pos:line="455" pos:column="41">1<pos:position pos:line="455" pos:column="42"/></literal></expr>)<pos:position pos:line="455" pos:column="43"/></condition><then pos:line="455" pos:column="43">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="456" pos:column="25">fprintf<pos:position pos:line="456" pos:column="32"/></name><argument_list pos:line="456" pos:column="32">(<argument><expr><name pos:line="456" pos:column="33">stderr<pos:position pos:line="456" pos:column="39"/></name></expr></argument>,
				<argument><expr><call><name pos:line="457" pos:column="33">_<pos:position pos:line="457" pos:column="34"/></name><argument_list pos:line="457" pos:column="34">(<argument><expr><literal type="string" pos:line="457" pos:column="35">"No merge strategy handled the merge.\n"<pos:position pos:line="457" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="457" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="457" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="457" pos:column="78"/></expr_stmt></block></then>
		<else pos:line="458" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="459" pos:column="25">fprintf<pos:position pos:line="459" pos:column="32"/></name><argument_list pos:line="459" pos:column="32">(<argument><expr><name pos:line="459" pos:column="33">stderr<pos:position pos:line="459" pos:column="39"/></name></expr></argument>, <argument><expr><call><name pos:line="459" pos:column="41">_<pos:position pos:line="459" pos:column="42"/></name><argument_list pos:line="459" pos:column="42">(<argument><expr><literal type="string" pos:line="459" pos:column="43">"Merge with strategy %s failed.\n"<pos:position pos:line="459" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="459" pos:column="78"/></argument_list></call></expr></argument>,
				<argument><expr><name><name pos:line="460" pos:column="33">use_strategies<pos:position pos:line="460" pos:column="47"/></name><index pos:line="460" pos:column="47">[<expr><literal type="number" pos:line="460" pos:column="48">0<pos:position pos:line="460" pos:column="49"/></literal></expr>]<pos:position pos:line="460" pos:column="50"/></index></name><operator pos:line="460" pos:column="50">-&gt;<pos:position pos:line="460" pos:column="55"/></operator><name pos:line="460" pos:column="52">name<pos:position pos:line="460" pos:column="56"/></name></expr></argument>)<pos:position pos:line="460" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="460" pos:column="58"/></expr_stmt></block></else></if>
		<expr_stmt><expr><name pos:line="461" pos:column="17">ret<pos:position pos:line="461" pos:column="20"/></name> <operator pos:line="461" pos:column="21">=<pos:position pos:line="461" pos:column="22"/></operator> <literal type="number" pos:line="461" pos:column="23">2<pos:position pos:line="461" pos:column="24"/></literal></expr>;<pos:position pos:line="461" pos:column="25"/></expr_stmt>
		<goto pos:line="462" pos:column="17">goto <name pos:line="462" pos:column="22">done<pos:position pos:line="462" pos:column="26"/></name>;<pos:position pos:line="462" pos:column="27"/></goto>
	}<pos:position pos:line="463" pos:column="10"/></block></then> <elseif pos:line="463" pos:column="11">else <if pos:line="463" pos:column="16">if <condition pos:line="463" pos:column="19">(<expr><name pos:line="463" pos:column="20">best_strategy<pos:position pos:line="463" pos:column="33"/></name> <operator pos:line="463" pos:column="34">==<pos:position pos:line="463" pos:column="36"/></operator> <name pos:line="463" pos:column="37">wt_strategy<pos:position pos:line="463" pos:column="48"/></name></expr>)<pos:position pos:line="463" pos:column="49"/></condition><then pos:line="463" pos:column="49">
		<block type="pseudo"><empty_stmt pos:line="464" pos:column="17">;<pos:position pos:line="464" pos:column="18"/></empty_stmt></block></then></if></elseif> <comment type="block" pos:line="464" pos:column="19">/* We already have its result in the working tree. */</comment>
	<else pos:line="465" pos:column="9">else <block pos:line="465" pos:column="14">{
		<expr_stmt><expr><call><name pos:line="466" pos:column="17">printf<pos:position pos:line="466" pos:column="23"/></name><argument_list pos:line="466" pos:column="23">(<argument><expr><call><name pos:line="466" pos:column="24">_<pos:position pos:line="466" pos:column="25"/></name><argument_list pos:line="466" pos:column="25">(<argument><expr><literal type="string" pos:line="466" pos:column="26">"Rewinding the tree to pristine...\n"<pos:position pos:line="466" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="466" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="466" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="466" pos:column="66"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="467" pos:column="17">restore_state<pos:position pos:line="467" pos:column="30"/></name><argument_list pos:line="467" pos:column="30">(<argument><expr><name><name pos:line="467" pos:column="31">head_commit<pos:position pos:line="467" pos:column="42"/></name><operator pos:line="467" pos:column="42">-&gt;<pos:position pos:line="467" pos:column="47"/></operator><name pos:line="467" pos:column="44">object<pos:position pos:line="467" pos:column="50"/></name><operator pos:line="467" pos:column="50">.<pos:position pos:line="467" pos:column="51"/></operator><name pos:line="467" pos:column="51">oid<pos:position pos:line="467" pos:column="54"/></name><operator pos:line="467" pos:column="54">.<pos:position pos:line="467" pos:column="55"/></operator><name pos:line="467" pos:column="55">hash<pos:position pos:line="467" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="467" pos:column="61">stash<pos:position pos:line="467" pos:column="66"/></name></expr></argument>)<pos:position pos:line="467" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="467" pos:column="68"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="468" pos:column="17">printf<pos:position pos:line="468" pos:column="23"/></name><argument_list pos:line="468" pos:column="23">(<argument><expr><call><name pos:line="468" pos:column="24">_<pos:position pos:line="468" pos:column="25"/></name><argument_list pos:line="468" pos:column="25">(<argument><expr><literal type="string" pos:line="468" pos:column="26">"Using the %s to prepare resolving by hand.\n"<pos:position pos:line="468" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="468" pos:column="73"/></argument_list></call></expr></argument>,
			<argument><expr><name pos:line="469" pos:column="25">best_strategy<pos:position pos:line="469" pos:column="38"/></name></expr></argument>)<pos:position pos:line="469" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="469" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="470" pos:column="17">try_merge_strategy<pos:position pos:line="470" pos:column="35"/></name><argument_list pos:line="470" pos:column="35">(<argument><expr><name pos:line="470" pos:column="36">best_strategy<pos:position pos:line="470" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="470" pos:column="51">common<pos:position pos:line="470" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="470" pos:column="59">remoteheads<pos:position pos:line="470" pos:column="70"/></name></expr></argument>,
				   <argument><expr><name pos:line="471" pos:column="36">head_commit<pos:position pos:line="471" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="471" pos:column="49">head_arg<pos:position pos:line="471" pos:column="57"/></name></expr></argument>)<pos:position pos:line="471" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="471" pos:column="59"/></expr_stmt>
	}<pos:position pos:line="472" pos:column="10"/></block></else></if>

	<if pos:line="474" pos:column="9">if <condition pos:line="474" pos:column="12">(<expr><name pos:line="474" pos:column="13">squash<pos:position pos:line="474" pos:column="19"/></name></expr>)<pos:position pos:line="474" pos:column="20"/></condition><then pos:line="474" pos:column="20">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="475" pos:column="17">finish<pos:position pos:line="475" pos:column="23"/></name><argument_list pos:line="475" pos:column="23">(<argument><expr><name pos:line="475" pos:column="24">head_commit<pos:position pos:line="475" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="475" pos:column="37">remoteheads<pos:position pos:line="475" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="475" pos:column="50">NULL<pos:position pos:line="475" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="475" pos:column="56">NULL<pos:position pos:line="475" pos:column="60"/></name></expr></argument>)<pos:position pos:line="475" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="475" pos:column="62"/></expr_stmt></block></then>
	<else pos:line="476" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="477" pos:column="17">write_merge_state<pos:position pos:line="477" pos:column="34"/></name><argument_list pos:line="477" pos:column="34">(<argument><expr><name pos:line="477" pos:column="35">remoteheads<pos:position pos:line="477" pos:column="46"/></name></expr></argument>)<pos:position pos:line="477" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="477" pos:column="48"/></expr_stmt></block></else></if>

	<if pos:line="479" pos:column="9">if <condition pos:line="479" pos:column="12">(<expr><name pos:line="479" pos:column="13">merge_was_ok<pos:position pos:line="479" pos:column="25"/></name></expr>)<pos:position pos:line="479" pos:column="26"/></condition><then pos:line="479" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="480" pos:column="17">fprintf<pos:position pos:line="480" pos:column="24"/></name><argument_list pos:line="480" pos:column="24">(<argument><expr><name pos:line="480" pos:column="25">stderr<pos:position pos:line="480" pos:column="31"/></name></expr></argument>, <argument><expr><call><name pos:line="480" pos:column="33">_<pos:position pos:line="480" pos:column="34"/></name><argument_list pos:line="480" pos:column="34">(<argument><expr><literal type="string" pos:line="480" pos:column="35">"Automatic merge went well; "<pos:position pos:line="480" pos:column="64"/></literal>
			<literal type="string" pos:line="481" pos:column="25">"stopped before committing as requested\n"<pos:position pos:line="481" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="481" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="481" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="481" pos:column="70"/></expr_stmt></block></then>
	<else pos:line="482" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="483" pos:column="17">ret<pos:position pos:line="483" pos:column="20"/></name> <operator pos:line="483" pos:column="21">=<pos:position pos:line="483" pos:column="22"/></operator> <call><name pos:line="483" pos:column="23">suggest_conflicts<pos:position pos:line="483" pos:column="40"/></name><argument_list pos:line="483" pos:column="40">()<pos:position pos:line="483" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="483" pos:column="43"/></expr_stmt></block></else></if>

<label><name pos:line="485" pos:column="1">done<pos:position pos:line="485" pos:column="5"/></name>:<pos:position pos:line="485" pos:column="6"/></label>
	<expr_stmt><expr><call><name pos:line="486" pos:column="9">free<pos:position pos:line="486" pos:column="13"/></name><argument_list pos:line="486" pos:column="13">(<argument><expr><name pos:line="486" pos:column="14">branch_to_free<pos:position pos:line="486" pos:column="28"/></name></expr></argument>)<pos:position pos:line="486" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="486" pos:column="30"/></expr_stmt>
	<return pos:line="487" pos:column="9">return <expr><name pos:line="487" pos:column="16">ret<pos:position pos:line="487" pos:column="19"/></name></expr>;<pos:position pos:line="487" pos:column="20"/></return>
}<pos:position pos:line="488" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6886_git-2.12.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">fetch_native_store<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">FILE<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">fp<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>,
			      <parameter><decl><type><specifier pos:line="2" pos:column="31">const<pos:position pos:line="2" pos:column="36"/></specifier> <name pos:line="2" pos:column="37">char<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">remote<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>,
			      <parameter><decl><type><specifier pos:line="3" pos:column="31">const<pos:position pos:line="3" pos:column="36"/></specifier> <name pos:line="3" pos:column="37">char<pos:position pos:line="3" pos:column="41"/></name> <modifier pos:line="3" pos:column="42">*<pos:position pos:line="3" pos:column="43"/></modifier></type><name pos:line="3" pos:column="43">remote_nick<pos:position pos:line="3" pos:column="54"/></name></decl></parameter>,
			      <parameter><decl><type><specifier pos:line="4" pos:column="31">const<pos:position pos:line="4" pos:column="36"/></specifier> <name pos:line="4" pos:column="37">char<pos:position pos:line="4" pos:column="41"/></name> <modifier pos:line="4" pos:column="42">*<pos:position pos:line="4" pos:column="43"/></modifier></type><name pos:line="4" pos:column="43">refs<pos:position pos:line="4" pos:column="47"/></name></decl></parameter>,
			      <parameter><decl><type><name pos:line="5" pos:column="31">int<pos:position pos:line="5" pos:column="34"/></name></type> <name pos:line="5" pos:column="35">verbose<pos:position pos:line="5" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="5" pos:column="44">int<pos:position pos:line="5" pos:column="47"/></name></type> <name pos:line="5" pos:column="48">force<pos:position pos:line="5" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="54"/></parameter_list>
<block pos:line="6" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name></type> <name><name pos:line="7" pos:column="14">buffer<pos:position pos:line="7" pos:column="20"/></name><index pos:line="7" pos:column="20">[<expr><literal type="number" pos:line="7" pos:column="21">1024<pos:position pos:line="7" pos:column="25"/></literal></expr>]<pos:position pos:line="7" pos:column="26"/></index></name></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">err<pos:position pos:line="8" pos:column="16"/></name> <init pos:line="8" pos:column="17">= <expr><literal type="number" pos:line="8" pos:column="19">0<pos:position pos:line="8" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="10" pos:column="9">sigchain_push_common<pos:position pos:line="10" pos:column="29"/></name><argument_list pos:line="10" pos:column="29">(<argument><expr><name pos:line="10" pos:column="30">remove_keep_on_signal<pos:position pos:line="10" pos:column="51"/></name></expr></argument>)<pos:position pos:line="10" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="53"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="11" pos:column="9">atexit<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><name pos:line="11" pos:column="16">remove_keep<pos:position pos:line="11" pos:column="27"/></name></expr></argument>)<pos:position pos:line="11" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="29"/></expr_stmt>

	<while pos:line="13" pos:column="9">while <condition pos:line="13" pos:column="15">(<expr><call><name pos:line="13" pos:column="16">fgets<pos:position pos:line="13" pos:column="21"/></name><argument_list pos:line="13" pos:column="21">(<argument><expr><name pos:line="13" pos:column="22">buffer<pos:position pos:line="13" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="30">sizeof<argument_list pos:line="13" pos:column="36">(<argument><expr><name pos:line="13" pos:column="37">buffer<pos:position pos:line="13" pos:column="43"/></name></expr></argument>)<pos:position pos:line="13" pos:column="44"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="13" pos:column="46">stdin<pos:position pos:line="13" pos:column="51"/></name></expr></argument>)<pos:position pos:line="13" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="53"/></condition> <block pos:line="13" pos:column="54">{
		<decl_stmt><decl><type><name pos:line="14" pos:column="17">int<pos:position pos:line="14" pos:column="20"/></name></type> <name pos:line="14" pos:column="21">len<pos:position pos:line="14" pos:column="24"/></name></decl>;<pos:position pos:line="14" pos:column="25"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="15" pos:column="17">char<pos:position pos:line="15" pos:column="21"/></name> <modifier pos:line="15" pos:column="22">*<pos:position pos:line="15" pos:column="23"/></modifier></type><name pos:line="15" pos:column="23">cp<pos:position pos:line="15" pos:column="25"/></name></decl>;<pos:position pos:line="15" pos:column="26"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="16" pos:column="17">char<pos:position pos:line="16" pos:column="21"/></name> <modifier pos:line="16" pos:column="22">*<pos:position pos:line="16" pos:column="23"/></modifier></type><name pos:line="16" pos:column="23">local_name<pos:position pos:line="16" pos:column="33"/></name></decl>;<pos:position pos:line="16" pos:column="34"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="17" pos:column="17">int<pos:position pos:line="17" pos:column="20"/></name></type> <name pos:line="17" pos:column="21">single_force<pos:position pos:line="17" pos:column="33"/></name></decl>, <decl><type ref="prev"/><name pos:line="17" pos:column="35">not_for_merge<pos:position pos:line="17" pos:column="48"/></name></decl>;<pos:position pos:line="17" pos:column="49"/></decl_stmt>

		<for pos:line="19" pos:column="17">for <control pos:line="19" pos:column="21">(<init><expr><name pos:line="19" pos:column="22">cp<pos:position pos:line="19" pos:column="24"/></name> <operator pos:line="19" pos:column="25">=<pos:position pos:line="19" pos:column="26"/></operator> <name pos:line="19" pos:column="27">buffer<pos:position pos:line="19" pos:column="33"/></name></expr>;<pos:position pos:line="19" pos:column="34"/></init> <condition><expr><operator pos:line="19" pos:column="35">*<pos:position pos:line="19" pos:column="36"/></operator><name pos:line="19" pos:column="36">cp<pos:position pos:line="19" pos:column="38"/></name> <operator pos:line="19" pos:column="39">&amp;&amp;<pos:position pos:line="19" pos:column="49"/></operator> <operator pos:line="19" pos:column="42">!<pos:position pos:line="19" pos:column="43"/></operator><call><name pos:line="19" pos:column="43">isspace<pos:position pos:line="19" pos:column="50"/></name><argument_list pos:line="19" pos:column="50">(<argument><expr><operator pos:line="19" pos:column="51">*<pos:position pos:line="19" pos:column="52"/></operator><name pos:line="19" pos:column="52">cp<pos:position pos:line="19" pos:column="54"/></name></expr></argument>)<pos:position pos:line="19" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="56"/></condition> <incr><expr><name pos:line="19" pos:column="57">cp<pos:position pos:line="19" pos:column="59"/></name><operator pos:line="19" pos:column="59">++<pos:position pos:line="19" pos:column="61"/></operator></expr></incr>)<pos:position pos:line="19" pos:column="62"/></control>
			<block type="pseudo"><empty_stmt pos:line="20" pos:column="25">;<pos:position pos:line="20" pos:column="26"/></empty_stmt></block></for>
		<if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><operator pos:line="21" pos:column="21">*<pos:position pos:line="21" pos:column="22"/></operator><name pos:line="21" pos:column="22">cp<pos:position pos:line="21" pos:column="24"/></name></expr>)<pos:position pos:line="21" pos:column="25"/></condition><then pos:line="21" pos:column="25">
			<block type="pseudo"><expr_stmt><expr><operator pos:line="22" pos:column="25">*<pos:position pos:line="22" pos:column="26"/></operator><name pos:line="22" pos:column="26">cp<pos:position pos:line="22" pos:column="28"/></name><operator pos:line="22" pos:column="28">++<pos:position pos:line="22" pos:column="30"/></operator> <operator pos:line="22" pos:column="31">=<pos:position pos:line="22" pos:column="32"/></operator> <literal type="number" pos:line="22" pos:column="33">0<pos:position pos:line="22" pos:column="34"/></literal></expr>;<pos:position pos:line="22" pos:column="35"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="23" pos:column="17">len<pos:position pos:line="23" pos:column="20"/></name> <operator pos:line="23" pos:column="21">=<pos:position pos:line="23" pos:column="22"/></operator> <call><name pos:line="23" pos:column="23">strlen<pos:position pos:line="23" pos:column="29"/></name><argument_list pos:line="23" pos:column="29">(<argument><expr><name pos:line="23" pos:column="30">cp<pos:position pos:line="23" pos:column="32"/></name></expr></argument>)<pos:position pos:line="23" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="34"/></expr_stmt>
		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><name pos:line="24" pos:column="21">len<pos:position pos:line="24" pos:column="24"/></name> <operator pos:line="24" pos:column="25">&amp;&amp;<pos:position pos:line="24" pos:column="35"/></operator> <name><name pos:line="24" pos:column="28">cp<pos:position pos:line="24" pos:column="30"/></name><index pos:line="24" pos:column="30">[<expr><name pos:line="24" pos:column="31">len<pos:position pos:line="24" pos:column="34"/></name><operator pos:line="24" pos:column="34">-<pos:position pos:line="24" pos:column="35"/></operator><literal type="number" pos:line="24" pos:column="35">1<pos:position pos:line="24" pos:column="36"/></literal></expr>]<pos:position pos:line="24" pos:column="37"/></index></name> <operator pos:line="24" pos:column="38">==<pos:position pos:line="24" pos:column="40"/></operator> <literal type="char" pos:line="24" pos:column="41">'\n'<pos:position pos:line="24" pos:column="45"/></literal></expr>)<pos:position pos:line="24" pos:column="46"/></condition><then pos:line="24" pos:column="46">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="25" pos:column="25">cp<pos:position pos:line="25" pos:column="27"/></name><index pos:line="25" pos:column="27">[<expr><operator pos:line="25" pos:column="28">--<pos:position pos:line="25" pos:column="30"/></operator><name pos:line="25" pos:column="30">len<pos:position pos:line="25" pos:column="33"/></name></expr>]<pos:position pos:line="25" pos:column="34"/></index></name> <operator pos:line="25" pos:column="35">=<pos:position pos:line="25" pos:column="36"/></operator> <literal type="number" pos:line="25" pos:column="37">0<pos:position pos:line="25" pos:column="38"/></literal></expr>;<pos:position pos:line="25" pos:column="39"/></expr_stmt></block></then></if>
		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><operator pos:line="26" pos:column="21">!<pos:position pos:line="26" pos:column="22"/></operator><call><name pos:line="26" pos:column="22">strcmp<pos:position pos:line="26" pos:column="28"/></name><argument_list pos:line="26" pos:column="28">(<argument><expr><name pos:line="26" pos:column="29">buffer<pos:position pos:line="26" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="37">"failed"<pos:position pos:line="26" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="47"/></condition><then pos:line="26" pos:column="47">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="25">die<pos:position pos:line="27" pos:column="28"/></name><argument_list pos:line="27" pos:column="28">(<argument><expr><literal type="string" pos:line="27" pos:column="29">"Fetch failure: %s"<pos:position pos:line="27" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="50">remote<pos:position pos:line="27" pos:column="56"/></name></expr></argument>)<pos:position pos:line="27" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="58"/></expr_stmt></block></then></if>
		<if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><operator pos:line="28" pos:column="21">!<pos:position pos:line="28" pos:column="22"/></operator><call><name pos:line="28" pos:column="22">strcmp<pos:position pos:line="28" pos:column="28"/></name><argument_list pos:line="28" pos:column="28">(<argument><expr><name pos:line="28" pos:column="29">buffer<pos:position pos:line="28" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="37">"pack"<pos:position pos:line="28" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="45"/></condition><then pos:line="28" pos:column="45">
			<block type="pseudo"><continue pos:line="29" pos:column="25">continue;<pos:position pos:line="29" pos:column="34"/></continue></block></then></if>
		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><operator pos:line="30" pos:column="21">!<pos:position pos:line="30" pos:column="22"/></operator><call><name pos:line="30" pos:column="22">strcmp<pos:position pos:line="30" pos:column="28"/></name><argument_list pos:line="30" pos:column="28">(<argument><expr><name pos:line="30" pos:column="29">buffer<pos:position pos:line="30" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="37">"keep"<pos:position pos:line="30" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="45"/></condition><then pos:line="30" pos:column="45"> <block pos:line="30" pos:column="46">{
			<decl_stmt><decl><type><name pos:line="31" pos:column="25">char<pos:position pos:line="31" pos:column="29"/></name> <modifier pos:line="31" pos:column="30">*<pos:position pos:line="31" pos:column="31"/></modifier></type><name pos:line="31" pos:column="31">od<pos:position pos:line="31" pos:column="33"/></name> <init pos:line="31" pos:column="34">= <expr><call><name pos:line="31" pos:column="36">get_object_directory<pos:position pos:line="31" pos:column="56"/></name><argument_list pos:line="31" pos:column="56">()<pos:position pos:line="31" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="31" pos:column="59"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="32" pos:column="25">int<pos:position pos:line="32" pos:column="28"/></name></type> <name pos:line="32" pos:column="29">len<pos:position pos:line="32" pos:column="32"/></name> <init pos:line="32" pos:column="33">= <expr><call><name pos:line="32" pos:column="35">strlen<pos:position pos:line="32" pos:column="41"/></name><argument_list pos:line="32" pos:column="41">(<argument><expr><name pos:line="32" pos:column="42">od<pos:position pos:line="32" pos:column="44"/></name></expr></argument>)<pos:position pos:line="32" pos:column="45"/></argument_list></call> <operator pos:line="32" pos:column="46">+<pos:position pos:line="32" pos:column="47"/></operator> <call><name pos:line="32" pos:column="48">strlen<pos:position pos:line="32" pos:column="54"/></name><argument_list pos:line="32" pos:column="54">(<argument><expr><name pos:line="32" pos:column="55">cp<pos:position pos:line="32" pos:column="57"/></name></expr></argument>)<pos:position pos:line="32" pos:column="58"/></argument_list></call> <operator pos:line="32" pos:column="59">+<pos:position pos:line="32" pos:column="60"/></operator> <literal type="number" pos:line="32" pos:column="61">50<pos:position pos:line="32" pos:column="63"/></literal></expr></init></decl>;<pos:position pos:line="32" pos:column="64"/></decl_stmt>
			<expr_stmt><expr><name pos:line="33" pos:column="25">keep<pos:position pos:line="33" pos:column="29"/></name> <operator pos:line="33" pos:column="30">=<pos:position pos:line="33" pos:column="31"/></operator> <call><name pos:line="33" pos:column="32">xmalloc<pos:position pos:line="33" pos:column="39"/></name><argument_list pos:line="33" pos:column="39">(<argument><expr><name pos:line="33" pos:column="40">len<pos:position pos:line="33" pos:column="43"/></name></expr></argument>)<pos:position pos:line="33" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="45"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="34" pos:column="25">sprintf<pos:position pos:line="34" pos:column="32"/></name><argument_list pos:line="34" pos:column="32">(<argument><expr><name pos:line="34" pos:column="33">keep<pos:position pos:line="34" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="39">"%s/pack/pack-%s.keep"<pos:position pos:line="34" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="63">od<pos:position pos:line="34" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="67">cp<pos:position pos:line="34" pos:column="69"/></name></expr></argument>)<pos:position pos:line="34" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="71"/></expr_stmt>
			<continue pos:line="35" pos:column="25">continue;<pos:position pos:line="35" pos:column="34"/></continue>
		}<pos:position pos:line="36" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="38" pos:column="17">local_name<pos:position pos:line="38" pos:column="27"/></name> <operator pos:line="38" pos:column="28">=<pos:position pos:line="38" pos:column="29"/></operator> <call><name pos:line="38" pos:column="30">find_local_name<pos:position pos:line="38" pos:column="45"/></name><argument_list pos:line="38" pos:column="45">(<argument><expr><name pos:line="38" pos:column="46">cp<pos:position pos:line="38" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="50">refs<pos:position pos:line="38" pos:column="54"/></name></expr></argument>,
					     <argument><expr><operator pos:line="39" pos:column="46">&amp;<pos:position pos:line="39" pos:column="51"/></operator><name pos:line="39" pos:column="47">single_force<pos:position pos:line="39" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="61">&amp;<pos:position pos:line="39" pos:column="66"/></operator><name pos:line="39" pos:column="62">not_for_merge<pos:position pos:line="39" pos:column="75"/></name></expr></argument>)<pos:position pos:line="39" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="77"/></expr_stmt>
		<if pos:line="40" pos:column="17">if <condition pos:line="40" pos:column="20">(<expr><operator pos:line="40" pos:column="21">!<pos:position pos:line="40" pos:column="22"/></operator><name pos:line="40" pos:column="22">local_name<pos:position pos:line="40" pos:column="32"/></name></expr>)<pos:position pos:line="40" pos:column="33"/></condition><then pos:line="40" pos:column="33">
			<block type="pseudo"><continue pos:line="41" pos:column="25">continue;<pos:position pos:line="41" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><name pos:line="42" pos:column="17">err<pos:position pos:line="42" pos:column="20"/></name> <operator pos:line="42" pos:column="21">|=<pos:position pos:line="42" pos:column="23"/></operator> <call><name pos:line="42" pos:column="24">append_fetch_head<pos:position pos:line="42" pos:column="41"/></name><argument_list pos:line="42" pos:column="41">(<argument><expr><name pos:line="42" pos:column="42">fp<pos:position pos:line="42" pos:column="44"/></name></expr></argument>,
					 <argument><expr><name pos:line="43" pos:column="42">buffer<pos:position pos:line="43" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="50">remote<pos:position pos:line="43" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="58">cp<pos:position pos:line="43" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="62">remote_nick<pos:position pos:line="43" pos:column="73"/></name></expr></argument>,
					 <argument><expr><name pos:line="44" pos:column="42">local_name<pos:position pos:line="44" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="54">not_for_merge<pos:position pos:line="44" pos:column="67"/></name></expr></argument>,
					 <argument><expr><name pos:line="45" pos:column="42">verbose<pos:position pos:line="45" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="51">force<pos:position pos:line="45" pos:column="56"/></name> <operator pos:line="45" pos:column="57">||<pos:position pos:line="45" pos:column="59"/></operator> <name pos:line="45" pos:column="60">single_force<pos:position pos:line="45" pos:column="72"/></name></expr></argument>)<pos:position pos:line="45" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="74"/></expr_stmt>
	}<pos:position pos:line="46" pos:column="10"/></block></while>
	<return pos:line="47" pos:column="9">return <expr><name pos:line="47" pos:column="16">err<pos:position pos:line="47" pos:column="19"/></name></expr>;<pos:position pos:line="47" pos:column="20"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2171_git-2.0.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">renormalize_buffer<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">path<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="42">const<pos:position pos:line="1" pos:column="47"/></specifier> <name pos:line="1" pos:column="48">char<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">src<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="59">size_t<pos:position pos:line="1" pos:column="65"/></name></type> <name pos:line="1" pos:column="66">len<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="71">struct<pos:position pos:line="1" pos:column="77"/></name> <name pos:line="1" pos:column="78">strbuf<pos:position pos:line="1" pos:column="84"/></name></name> <modifier pos:line="1" pos:column="85">*<pos:position pos:line="1" pos:column="86"/></modifier></type><name pos:line="1" pos:column="86">dst<pos:position pos:line="1" pos:column="89"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="90"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">ret<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><call><name pos:line="3" pos:column="19">convert_to_working_tree_internal<pos:position pos:line="3" pos:column="51"/></name><argument_list pos:line="3" pos:column="51">(<argument><expr><name pos:line="3" pos:column="52">path<pos:position pos:line="3" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="58">src<pos:position pos:line="3" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="63">len<pos:position pos:line="3" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="68">dst<pos:position pos:line="3" pos:column="71"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="3" pos:column="73">1<pos:position pos:line="3" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="76"/></decl_stmt>
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><name pos:line="4" pos:column="13">ret<pos:position pos:line="4" pos:column="16"/></name></expr>)<pos:position pos:line="4" pos:column="17"/></condition><then pos:line="4" pos:column="17"> <block pos:line="4" pos:column="18">{
		<expr_stmt><expr><name pos:line="5" pos:column="17">src<pos:position pos:line="5" pos:column="20"/></name> <operator pos:line="5" pos:column="21">=<pos:position pos:line="5" pos:column="22"/></operator> <name><name pos:line="5" pos:column="23">dst<pos:position pos:line="5" pos:column="26"/></name><operator pos:line="5" pos:column="26">-&gt;<pos:position pos:line="5" pos:column="31"/></operator><name pos:line="5" pos:column="28">buf<pos:position pos:line="5" pos:column="31"/></name></name></expr>;<pos:position pos:line="5" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><name pos:line="6" pos:column="17">len<pos:position pos:line="6" pos:column="20"/></name> <operator pos:line="6" pos:column="21">=<pos:position pos:line="6" pos:column="22"/></operator> <name><name pos:line="6" pos:column="23">dst<pos:position pos:line="6" pos:column="26"/></name><operator pos:line="6" pos:column="26">-&gt;<pos:position pos:line="6" pos:column="31"/></operator><name pos:line="6" pos:column="28">len<pos:position pos:line="6" pos:column="31"/></name></name></expr>;<pos:position pos:line="6" pos:column="32"/></expr_stmt>
	}<pos:position pos:line="7" pos:column="10"/></block></then></if>
	<return pos:line="8" pos:column="9">return <expr><name pos:line="8" pos:column="16">ret<pos:position pos:line="8" pos:column="19"/></name> <operator pos:line="8" pos:column="20">|<pos:position pos:line="8" pos:column="21"/></operator> <call><name pos:line="8" pos:column="22">convert_to_git<pos:position pos:line="8" pos:column="36"/></name><argument_list pos:line="8" pos:column="36">(<argument><expr><name pos:line="8" pos:column="37">path<pos:position pos:line="8" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="43">src<pos:position pos:line="8" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="48">len<pos:position pos:line="8" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="53">dst<pos:position pos:line="8" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="58">SAFE_CRLF_FALSE<pos:position pos:line="8" pos:column="73"/></name></expr></argument>)<pos:position pos:line="8" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="75"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1372.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">notes_merge<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name><name pos:line="1" pos:column="17">struct<pos:position pos:line="1" pos:column="23"/></name> <name pos:line="1" pos:column="24">notes_merge_options<pos:position pos:line="1" pos:column="43"/></name></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">o<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>,
		<parameter><decl><type><name><name pos:line="2" pos:column="17">struct<pos:position pos:line="2" pos:column="23"/></name> <name pos:line="2" pos:column="24">notes_tree<pos:position pos:line="2" pos:column="34"/></name></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">local_tree<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="3" pos:column="17">unsigned<pos:position pos:line="3" pos:column="25"/></name> <name pos:line="3" pos:column="26">char<pos:position pos:line="3" pos:column="30"/></name> <modifier pos:line="3" pos:column="31">*<pos:position pos:line="3" pos:column="32"/></modifier></type><name pos:line="3" pos:column="32">result_sha1<pos:position pos:line="3" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="44"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">unsigned<pos:position pos:line="5" pos:column="17"/></name> <name pos:line="5" pos:column="18">char<pos:position pos:line="5" pos:column="22"/></name></type> <name><name pos:line="5" pos:column="23">local_sha1<pos:position pos:line="5" pos:column="33"/></name><index pos:line="5" pos:column="33">[<expr><literal type="number" pos:line="5" pos:column="34">20<pos:position pos:line="5" pos:column="36"/></literal></expr>]<pos:position pos:line="5" pos:column="37"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="5" pos:column="39">remote_sha1<pos:position pos:line="5" pos:column="50"/></name><index pos:line="5" pos:column="50">[<expr><literal type="number" pos:line="5" pos:column="51">20<pos:position pos:line="5" pos:column="53"/></literal></expr>]<pos:position pos:line="5" pos:column="54"/></index></name></decl>;<pos:position pos:line="5" pos:column="55"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">commit<pos:position pos:line="6" pos:column="22"/></name></name> <modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier></type><name pos:line="6" pos:column="24">local<pos:position pos:line="6" pos:column="29"/></name></decl>, <modifier pos:line="6" pos:column="31">*<pos:position pos:line="6" pos:column="32"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="32">remote<pos:position pos:line="6" pos:column="38"/></name></decl>;<pos:position pos:line="6" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">commit_list<pos:position pos:line="7" pos:column="27"/></name></name> <modifier pos:line="7" pos:column="28">*<pos:position pos:line="7" pos:column="29"/></modifier></type><name pos:line="7" pos:column="29">bases<pos:position pos:line="7" pos:column="34"/></name> <init pos:line="7" pos:column="35">= <expr><name pos:line="7" pos:column="37">NULL<pos:position pos:line="7" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="8" pos:column="9">const<pos:position pos:line="8" pos:column="14"/></specifier> <name pos:line="8" pos:column="15">unsigned<pos:position pos:line="8" pos:column="23"/></name> <name pos:line="8" pos:column="24">char<pos:position pos:line="8" pos:column="28"/></name> <modifier pos:line="8" pos:column="29">*<pos:position pos:line="8" pos:column="30"/></modifier></type><name pos:line="8" pos:column="30">base_sha1<pos:position pos:line="8" pos:column="39"/></name></decl>, <modifier pos:line="8" pos:column="41">*<pos:position pos:line="8" pos:column="42"/></modifier><decl><type ref="prev"/><name pos:line="8" pos:column="42">base_tree_sha1<pos:position pos:line="8" pos:column="56"/></name></decl>;<pos:position pos:line="8" pos:column="57"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">result<pos:position pos:line="9" pos:column="19"/></name> <init pos:line="9" pos:column="20">= <expr><literal type="number" pos:line="9" pos:column="22">0<pos:position pos:line="9" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="24"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="11" pos:column="9">assert<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><name><name pos:line="11" pos:column="16">o<pos:position pos:line="11" pos:column="17"/></name><operator pos:line="11" pos:column="17">-&gt;<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="19">local_ref<pos:position pos:line="11" pos:column="28"/></name></name> <operator pos:line="11" pos:column="29">&amp;&amp;<pos:position pos:line="11" pos:column="39"/></operator> <name><name pos:line="11" pos:column="32">o<pos:position pos:line="11" pos:column="33"/></name><operator pos:line="11" pos:column="33">-&gt;<pos:position pos:line="11" pos:column="38"/></operator><name pos:line="11" pos:column="35">remote_ref<pos:position pos:line="11" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="47"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="12" pos:column="9">assert<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><operator pos:line="12" pos:column="16">!<pos:position pos:line="12" pos:column="17"/></operator><call><name pos:line="12" pos:column="17">strcmp<pos:position pos:line="12" pos:column="23"/></name><argument_list pos:line="12" pos:column="23">(<argument><expr><name><name pos:line="12" pos:column="24">o<pos:position pos:line="12" pos:column="25"/></name><operator pos:line="12" pos:column="25">-&gt;<pos:position pos:line="12" pos:column="30"/></operator><name pos:line="12" pos:column="27">local_ref<pos:position pos:line="12" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="38">local_tree<pos:position pos:line="12" pos:column="48"/></name><operator pos:line="12" pos:column="48">-&gt;<pos:position pos:line="12" pos:column="53"/></operator><name pos:line="12" pos:column="50">ref<pos:position pos:line="12" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="56"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="13" pos:column="9">hashclr<pos:position pos:line="13" pos:column="16"/></name><argument_list pos:line="13" pos:column="16">(<argument><expr><name pos:line="13" pos:column="17">result_sha1<pos:position pos:line="13" pos:column="28"/></name></expr></argument>)<pos:position pos:line="13" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="30"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="15" pos:column="9">trace_printf<pos:position pos:line="15" pos:column="21"/></name><argument_list pos:line="15" pos:column="21">(<argument><expr><literal type="string" pos:line="15" pos:column="22">"notes_merge(o-&gt;local_ref = %s, o-&gt;remote_ref = %s)\n"<pos:position pos:line="15" pos:column="82"/></literal></expr></argument>,
	       <argument><expr><name><name pos:line="16" pos:column="16">o<pos:position pos:line="16" pos:column="17"/></name><operator pos:line="16" pos:column="17">-&gt;<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="19">local_ref<pos:position pos:line="16" pos:column="28"/></name></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="30">o<pos:position pos:line="16" pos:column="31"/></name><operator pos:line="16" pos:column="31">-&gt;<pos:position pos:line="16" pos:column="36"/></operator><name pos:line="16" pos:column="33">remote_ref<pos:position pos:line="16" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="45"/></expr_stmt>

	<comment type="block" pos:line="18" pos:column="9">/* Dereference o-&gt;local_ref into local_sha1 */</comment>
	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><call><name pos:line="19" pos:column="13">read_ref_full<pos:position pos:line="19" pos:column="26"/></name><argument_list pos:line="19" pos:column="26">(<argument><expr><name><name pos:line="19" pos:column="27">o<pos:position pos:line="19" pos:column="28"/></name><operator pos:line="19" pos:column="28">-&gt;<pos:position pos:line="19" pos:column="33"/></operator><name pos:line="19" pos:column="30">local_ref<pos:position pos:line="19" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="41">0<pos:position pos:line="19" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="44">local_sha1<pos:position pos:line="19" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="56">NULL<pos:position pos:line="19" pos:column="60"/></name></expr></argument>)<pos:position pos:line="19" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="62"/></condition><then pos:line="19" pos:column="62">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="17">die<pos:position pos:line="20" pos:column="20"/></name><argument_list pos:line="20" pos:column="20">(<argument><expr><literal type="string" pos:line="20" pos:column="21">"Failed to resolve local notes ref '%s'"<pos:position pos:line="20" pos:column="61"/></literal></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="63">o<pos:position pos:line="20" pos:column="64"/></name><operator pos:line="20" pos:column="64">-&gt;<pos:position pos:line="20" pos:column="69"/></operator><name pos:line="20" pos:column="66">local_ref<pos:position pos:line="20" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="77"/></expr_stmt></block></then>
	<elseif pos:line="21" pos:column="9">else <if pos:line="21" pos:column="14">if <condition pos:line="21" pos:column="17">(<expr><operator pos:line="21" pos:column="18">!<pos:position pos:line="21" pos:column="19"/></operator><call><name pos:line="21" pos:column="19">check_refname_format<pos:position pos:line="21" pos:column="39"/></name><argument_list pos:line="21" pos:column="39">(<argument><expr><name><name pos:line="21" pos:column="40">o<pos:position pos:line="21" pos:column="41"/></name><operator pos:line="21" pos:column="41">-&gt;<pos:position pos:line="21" pos:column="46"/></operator><name pos:line="21" pos:column="43">local_ref<pos:position pos:line="21" pos:column="52"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="54">0<pos:position pos:line="21" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="56"/></argument_list></call> <operator pos:line="21" pos:column="57">&amp;&amp;<pos:position pos:line="21" pos:column="67"/></operator>
		<call><name pos:line="22" pos:column="17">is_null_sha1<pos:position pos:line="22" pos:column="29"/></name><argument_list pos:line="22" pos:column="29">(<argument><expr><name pos:line="22" pos:column="30">local_sha1<pos:position pos:line="22" pos:column="40"/></name></expr></argument>)<pos:position pos:line="22" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="42"/></condition><then pos:line="22" pos:column="42">
		<block type="pseudo"><expr_stmt><expr><name pos:line="23" pos:column="17">local<pos:position pos:line="23" pos:column="22"/></name> <operator pos:line="23" pos:column="23">=<pos:position pos:line="23" pos:column="24"/></operator> <name pos:line="23" pos:column="25">NULL<pos:position pos:line="23" pos:column="29"/></name></expr>;<pos:position pos:line="23" pos:column="30"/></expr_stmt></block></then></if></elseif> <comment type="block" pos:line="23" pos:column="31">/* local_sha1 == null_sha1 indicates unborn ref */</comment>
	<elseif pos:line="24" pos:column="9">else <if pos:line="24" pos:column="14">if <condition pos:line="24" pos:column="17">(<expr><operator pos:line="24" pos:column="18">!<pos:position pos:line="24" pos:column="19"/></operator><operator pos:line="24" pos:column="19">(<pos:position pos:line="24" pos:column="20"/></operator><name pos:line="24" pos:column="20">local<pos:position pos:line="24" pos:column="25"/></name> <operator pos:line="24" pos:column="26">=<pos:position pos:line="24" pos:column="27"/></operator> <call><name pos:line="24" pos:column="28">lookup_commit_reference<pos:position pos:line="24" pos:column="51"/></name><argument_list pos:line="24" pos:column="51">(<argument><expr><name pos:line="24" pos:column="52">local_sha1<pos:position pos:line="24" pos:column="62"/></name></expr></argument>)<pos:position pos:line="24" pos:column="63"/></argument_list></call><operator pos:line="24" pos:column="63">)<pos:position pos:line="24" pos:column="64"/></operator></expr>)<pos:position pos:line="24" pos:column="65"/></condition><then pos:line="24" pos:column="65">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="17">die<pos:position pos:line="25" pos:column="20"/></name><argument_list pos:line="25" pos:column="20">(<argument><expr><literal type="string" pos:line="25" pos:column="21">"Could not parse local commit %s (%s)"<pos:position pos:line="25" pos:column="59"/></literal></expr></argument>,
		    <argument><expr><call><name pos:line="26" pos:column="21">sha1_to_hex<pos:position pos:line="26" pos:column="32"/></name><argument_list pos:line="26" pos:column="32">(<argument><expr><name pos:line="26" pos:column="33">local_sha1<pos:position pos:line="26" pos:column="43"/></name></expr></argument>)<pos:position pos:line="26" pos:column="44"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="46">o<pos:position pos:line="26" pos:column="47"/></name><operator pos:line="26" pos:column="47">-&gt;<pos:position pos:line="26" pos:column="52"/></operator><name pos:line="26" pos:column="49">local_ref<pos:position pos:line="26" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="60"/></expr_stmt></block></then></if></elseif></if>
	<expr_stmt><expr><call><name pos:line="27" pos:column="9">trace_printf<pos:position pos:line="27" pos:column="21"/></name><argument_list pos:line="27" pos:column="21">(<argument><expr><literal type="string" pos:line="27" pos:column="22">"\tlocal commit: %.7s\n"<pos:position pos:line="27" pos:column="46"/></literal></expr></argument>, <argument><expr><call><name pos:line="27" pos:column="48">sha1_to_hex<pos:position pos:line="27" pos:column="59"/></name><argument_list pos:line="27" pos:column="59">(<argument><expr><name pos:line="27" pos:column="60">local_sha1<pos:position pos:line="27" pos:column="70"/></name></expr></argument>)<pos:position pos:line="27" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="73"/></expr_stmt>

	<comment type="block" pos:line="29" pos:column="9">/* Dereference o-&gt;remote_ref into remote_sha1 */</comment>
	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><call><name pos:line="30" pos:column="13">get_sha1<pos:position pos:line="30" pos:column="21"/></name><argument_list pos:line="30" pos:column="21">(<argument><expr><name><name pos:line="30" pos:column="22">o<pos:position pos:line="30" pos:column="23"/></name><operator pos:line="30" pos:column="23">-&gt;<pos:position pos:line="30" pos:column="28"/></operator><name pos:line="30" pos:column="25">remote_ref<pos:position pos:line="30" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="37">remote_sha1<pos:position pos:line="30" pos:column="48"/></name></expr></argument>)<pos:position pos:line="30" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="50"/></condition><then pos:line="30" pos:column="50"> <block pos:line="30" pos:column="51">{
		<comment type="block" pos:line="31" pos:column="17">/*
		 * Failed to get remote_sha1. If o-&gt;remote_ref looks like an
		 * unborn ref, perform the merge using an empty notes tree.
		 */</comment>
		<if pos:line="35" pos:column="17">if <condition pos:line="35" pos:column="20">(<expr><operator pos:line="35" pos:column="21">!<pos:position pos:line="35" pos:column="22"/></operator><call><name pos:line="35" pos:column="22">check_refname_format<pos:position pos:line="35" pos:column="42"/></name><argument_list pos:line="35" pos:column="42">(<argument><expr><name><name pos:line="35" pos:column="43">o<pos:position pos:line="35" pos:column="44"/></name><operator pos:line="35" pos:column="44">-&gt;<pos:position pos:line="35" pos:column="49"/></operator><name pos:line="35" pos:column="46">remote_ref<pos:position pos:line="35" pos:column="56"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="58">0<pos:position pos:line="35" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="61"/></condition><then pos:line="35" pos:column="61"> <block pos:line="35" pos:column="62">{
			<expr_stmt><expr><call><name pos:line="36" pos:column="25">hashclr<pos:position pos:line="36" pos:column="32"/></name><argument_list pos:line="36" pos:column="32">(<argument><expr><name pos:line="36" pos:column="33">remote_sha1<pos:position pos:line="36" pos:column="44"/></name></expr></argument>)<pos:position pos:line="36" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="46"/></expr_stmt>
			<expr_stmt><expr><name pos:line="37" pos:column="25">remote<pos:position pos:line="37" pos:column="31"/></name> <operator pos:line="37" pos:column="32">=<pos:position pos:line="37" pos:column="33"/></operator> <name pos:line="37" pos:column="34">NULL<pos:position pos:line="37" pos:column="38"/></name></expr>;<pos:position pos:line="37" pos:column="39"/></expr_stmt>
		}<pos:position pos:line="38" pos:column="18"/></block></then> <else pos:line="38" pos:column="19">else <block pos:line="38" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="39" pos:column="25">die<pos:position pos:line="39" pos:column="28"/></name><argument_list pos:line="39" pos:column="28">(<argument><expr><literal type="string" pos:line="39" pos:column="29">"Failed to resolve remote notes ref '%s'"<pos:position pos:line="39" pos:column="70"/></literal></expr></argument>,
			    <argument><expr><name><name pos:line="40" pos:column="29">o<pos:position pos:line="40" pos:column="30"/></name><operator pos:line="40" pos:column="30">-&gt;<pos:position pos:line="40" pos:column="35"/></operator><name pos:line="40" pos:column="32">remote_ref<pos:position pos:line="40" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="44"/></expr_stmt>
		}<pos:position pos:line="41" pos:column="18"/></block></else></if>
	}<pos:position pos:line="42" pos:column="10"/></block></then> <elseif pos:line="42" pos:column="11">else <if pos:line="42" pos:column="16">if <condition pos:line="42" pos:column="19">(<expr><operator pos:line="42" pos:column="20">!<pos:position pos:line="42" pos:column="21"/></operator><operator pos:line="42" pos:column="21">(<pos:position pos:line="42" pos:column="22"/></operator><name pos:line="42" pos:column="22">remote<pos:position pos:line="42" pos:column="28"/></name> <operator pos:line="42" pos:column="29">=<pos:position pos:line="42" pos:column="30"/></operator> <call><name pos:line="42" pos:column="31">lookup_commit_reference<pos:position pos:line="42" pos:column="54"/></name><argument_list pos:line="42" pos:column="54">(<argument><expr><name pos:line="42" pos:column="55">remote_sha1<pos:position pos:line="42" pos:column="66"/></name></expr></argument>)<pos:position pos:line="42" pos:column="67"/></argument_list></call><operator pos:line="42" pos:column="67">)<pos:position pos:line="42" pos:column="68"/></operator></expr>)<pos:position pos:line="42" pos:column="69"/></condition><then pos:line="42" pos:column="69"> <block pos:line="42" pos:column="70">{
		<expr_stmt><expr><call><name pos:line="43" pos:column="17">die<pos:position pos:line="43" pos:column="20"/></name><argument_list pos:line="43" pos:column="20">(<argument><expr><literal type="string" pos:line="43" pos:column="21">"Could not parse remote commit %s (%s)"<pos:position pos:line="43" pos:column="60"/></literal></expr></argument>,
		    <argument><expr><call><name pos:line="44" pos:column="21">sha1_to_hex<pos:position pos:line="44" pos:column="32"/></name><argument_list pos:line="44" pos:column="32">(<argument><expr><name pos:line="44" pos:column="33">remote_sha1<pos:position pos:line="44" pos:column="44"/></name></expr></argument>)<pos:position pos:line="44" pos:column="45"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="47">o<pos:position pos:line="44" pos:column="48"/></name><operator pos:line="44" pos:column="48">-&gt;<pos:position pos:line="44" pos:column="53"/></operator><name pos:line="44" pos:column="50">remote_ref<pos:position pos:line="44" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="62"/></expr_stmt>
	}<pos:position pos:line="45" pos:column="10"/></block></then></if></elseif></if>
	<expr_stmt><expr><call><name pos:line="46" pos:column="9">trace_printf<pos:position pos:line="46" pos:column="21"/></name><argument_list pos:line="46" pos:column="21">(<argument><expr><literal type="string" pos:line="46" pos:column="22">"\tremote commit: %.7s\n"<pos:position pos:line="46" pos:column="47"/></literal></expr></argument>, <argument><expr><call><name pos:line="46" pos:column="49">sha1_to_hex<pos:position pos:line="46" pos:column="60"/></name><argument_list pos:line="46" pos:column="60">(<argument><expr><name pos:line="46" pos:column="61">remote_sha1<pos:position pos:line="46" pos:column="72"/></name></expr></argument>)<pos:position pos:line="46" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="46" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="75"/></expr_stmt>

	<if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><operator pos:line="48" pos:column="13">!<pos:position pos:line="48" pos:column="14"/></operator><name pos:line="48" pos:column="14">local<pos:position pos:line="48" pos:column="19"/></name> <operator pos:line="48" pos:column="20">&amp;&amp;<pos:position pos:line="48" pos:column="30"/></operator> <operator pos:line="48" pos:column="23">!<pos:position pos:line="48" pos:column="24"/></operator><name pos:line="48" pos:column="24">remote<pos:position pos:line="48" pos:column="30"/></name></expr>)<pos:position pos:line="48" pos:column="31"/></condition><then pos:line="48" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="49" pos:column="17">die<pos:position pos:line="49" pos:column="20"/></name><argument_list pos:line="49" pos:column="20">(<argument><expr><literal type="string" pos:line="49" pos:column="21">"Cannot merge empty notes ref (%s) into empty notes ref "<pos:position pos:line="49" pos:column="78"/></literal>
		    <literal type="string" pos:line="50" pos:column="21">"(%s)"<pos:position pos:line="50" pos:column="27"/></literal></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="29">o<pos:position pos:line="50" pos:column="30"/></name><operator pos:line="50" pos:column="30">-&gt;<pos:position pos:line="50" pos:column="35"/></operator><name pos:line="50" pos:column="32">remote_ref<pos:position pos:line="50" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="44">o<pos:position pos:line="50" pos:column="45"/></name><operator pos:line="50" pos:column="45">-&gt;<pos:position pos:line="50" pos:column="50"/></operator><name pos:line="50" pos:column="47">local_ref<pos:position pos:line="50" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="58"/></expr_stmt></block></then></if>
	<if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><operator pos:line="51" pos:column="13">!<pos:position pos:line="51" pos:column="14"/></operator><name pos:line="51" pos:column="14">local<pos:position pos:line="51" pos:column="19"/></name></expr>)<pos:position pos:line="51" pos:column="20"/></condition><then pos:line="51" pos:column="20"> <block pos:line="51" pos:column="21">{
		<comment type="block" pos:line="52" pos:column="17">/* result == remote commit */</comment>
		<expr_stmt><expr><call><name pos:line="53" pos:column="17">hashcpy<pos:position pos:line="53" pos:column="24"/></name><argument_list pos:line="53" pos:column="24">(<argument><expr><name pos:line="53" pos:column="25">result_sha1<pos:position pos:line="53" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="38">remote_sha1<pos:position pos:line="53" pos:column="49"/></name></expr></argument>)<pos:position pos:line="53" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="51"/></expr_stmt>
		<goto pos:line="54" pos:column="17">goto <name pos:line="54" pos:column="22">found_result<pos:position pos:line="54" pos:column="34"/></name>;<pos:position pos:line="54" pos:column="35"/></goto>
	}<pos:position pos:line="55" pos:column="10"/></block></then></if>
	<if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><operator pos:line="56" pos:column="13">!<pos:position pos:line="56" pos:column="14"/></operator><name pos:line="56" pos:column="14">remote<pos:position pos:line="56" pos:column="20"/></name></expr>)<pos:position pos:line="56" pos:column="21"/></condition><then pos:line="56" pos:column="21"> <block pos:line="56" pos:column="22">{
		<comment type="block" pos:line="57" pos:column="17">/* result == local commit */</comment>
		<expr_stmt><expr><call><name pos:line="58" pos:column="17">hashcpy<pos:position pos:line="58" pos:column="24"/></name><argument_list pos:line="58" pos:column="24">(<argument><expr><name pos:line="58" pos:column="25">result_sha1<pos:position pos:line="58" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="38">local_sha1<pos:position pos:line="58" pos:column="48"/></name></expr></argument>)<pos:position pos:line="58" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="50"/></expr_stmt>
		<goto pos:line="59" pos:column="17">goto <name pos:line="59" pos:column="22">found_result<pos:position pos:line="59" pos:column="34"/></name>;<pos:position pos:line="59" pos:column="35"/></goto>
	}<pos:position pos:line="60" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="61" pos:column="9">assert<pos:position pos:line="61" pos:column="15"/></name><argument_list pos:line="61" pos:column="15">(<argument><expr><name pos:line="61" pos:column="16">local<pos:position pos:line="61" pos:column="21"/></name> <operator pos:line="61" pos:column="22">&amp;&amp;<pos:position pos:line="61" pos:column="32"/></operator> <name pos:line="61" pos:column="25">remote<pos:position pos:line="61" pos:column="31"/></name></expr></argument>)<pos:position pos:line="61" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="33"/></expr_stmt>

	<comment type="block" pos:line="63" pos:column="9">/* Find merge bases */</comment>
	<expr_stmt><expr><name pos:line="64" pos:column="9">bases<pos:position pos:line="64" pos:column="14"/></name> <operator pos:line="64" pos:column="15">=<pos:position pos:line="64" pos:column="16"/></operator> <call><name pos:line="64" pos:column="17">get_merge_bases<pos:position pos:line="64" pos:column="32"/></name><argument_list pos:line="64" pos:column="32">(<argument><expr><name pos:line="64" pos:column="33">local<pos:position pos:line="64" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="40">remote<pos:position pos:line="64" pos:column="46"/></name></expr></argument>)<pos:position pos:line="64" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="48"/></expr_stmt>
	<if pos:line="65" pos:column="9">if <condition pos:line="65" pos:column="12">(<expr><operator pos:line="65" pos:column="13">!<pos:position pos:line="65" pos:column="14"/></operator><name pos:line="65" pos:column="14">bases<pos:position pos:line="65" pos:column="19"/></name></expr>)<pos:position pos:line="65" pos:column="20"/></condition><then pos:line="65" pos:column="20"> <block pos:line="65" pos:column="21">{
		<expr_stmt><expr><name pos:line="66" pos:column="17">base_sha1<pos:position pos:line="66" pos:column="26"/></name> <operator pos:line="66" pos:column="27">=<pos:position pos:line="66" pos:column="28"/></operator> <name pos:line="66" pos:column="29">null_sha1<pos:position pos:line="66" pos:column="38"/></name></expr>;<pos:position pos:line="66" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><name pos:line="67" pos:column="17">base_tree_sha1<pos:position pos:line="67" pos:column="31"/></name> <operator pos:line="67" pos:column="32">=<pos:position pos:line="67" pos:column="33"/></operator> <name pos:line="67" pos:column="34">EMPTY_TREE_SHA1_BIN<pos:position pos:line="67" pos:column="53"/></name></expr>;<pos:position pos:line="67" pos:column="54"/></expr_stmt>
		<if pos:line="68" pos:column="17">if <condition pos:line="68" pos:column="20">(<expr><name><name pos:line="68" pos:column="21">o<pos:position pos:line="68" pos:column="22"/></name><operator pos:line="68" pos:column="22">-&gt;<pos:position pos:line="68" pos:column="27"/></operator><name pos:line="68" pos:column="24">verbosity<pos:position pos:line="68" pos:column="33"/></name></name> <operator pos:line="68" pos:column="34">&gt;=<pos:position pos:line="68" pos:column="39"/></operator> <literal type="number" pos:line="68" pos:column="37">4<pos:position pos:line="68" pos:column="38"/></literal></expr>)<pos:position pos:line="68" pos:column="39"/></condition><then pos:line="68" pos:column="39">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="69" pos:column="25">printf<pos:position pos:line="69" pos:column="31"/></name><argument_list pos:line="69" pos:column="31">(<argument><expr><literal type="string" pos:line="69" pos:column="32">"No merge base found; doing history-less merge\n"<pos:position pos:line="69" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="83"/></expr_stmt></block></then></if>
	}<pos:position pos:line="70" pos:column="10"/></block></then> <elseif pos:line="70" pos:column="11">else <if pos:line="70" pos:column="16">if <condition pos:line="70" pos:column="19">(<expr><operator pos:line="70" pos:column="20">!<pos:position pos:line="70" pos:column="21"/></operator><name><name pos:line="70" pos:column="21">bases<pos:position pos:line="70" pos:column="26"/></name><operator pos:line="70" pos:column="26">-&gt;<pos:position pos:line="70" pos:column="31"/></operator><name pos:line="70" pos:column="28">next<pos:position pos:line="70" pos:column="32"/></name></name></expr>)<pos:position pos:line="70" pos:column="33"/></condition><then pos:line="70" pos:column="33"> <block pos:line="70" pos:column="34">{
		<expr_stmt><expr><name pos:line="71" pos:column="17">base_sha1<pos:position pos:line="71" pos:column="26"/></name> <operator pos:line="71" pos:column="27">=<pos:position pos:line="71" pos:column="28"/></operator> <name><name pos:line="71" pos:column="29">bases<pos:position pos:line="71" pos:column="34"/></name><operator pos:line="71" pos:column="34">-&gt;<pos:position pos:line="71" pos:column="39"/></operator><name pos:line="71" pos:column="36">item<pos:position pos:line="71" pos:column="40"/></name><operator pos:line="71" pos:column="40">-&gt;<pos:position pos:line="71" pos:column="45"/></operator><name pos:line="71" pos:column="42">object<pos:position pos:line="71" pos:column="48"/></name><operator pos:line="71" pos:column="48">.<pos:position pos:line="71" pos:column="49"/></operator><name pos:line="71" pos:column="49">oid<pos:position pos:line="71" pos:column="52"/></name><operator pos:line="71" pos:column="52">.<pos:position pos:line="71" pos:column="53"/></operator><name pos:line="71" pos:column="53">hash<pos:position pos:line="71" pos:column="57"/></name></name></expr>;<pos:position pos:line="71" pos:column="58"/></expr_stmt>
		<expr_stmt><expr><name pos:line="72" pos:column="17">base_tree_sha1<pos:position pos:line="72" pos:column="31"/></name> <operator pos:line="72" pos:column="32">=<pos:position pos:line="72" pos:column="33"/></operator> <name><name pos:line="72" pos:column="34">bases<pos:position pos:line="72" pos:column="39"/></name><operator pos:line="72" pos:column="39">-&gt;<pos:position pos:line="72" pos:column="44"/></operator><name pos:line="72" pos:column="41">item<pos:position pos:line="72" pos:column="45"/></name><operator pos:line="72" pos:column="45">-&gt;<pos:position pos:line="72" pos:column="50"/></operator><name pos:line="72" pos:column="47">tree<pos:position pos:line="72" pos:column="51"/></name><operator pos:line="72" pos:column="51">-&gt;<pos:position pos:line="72" pos:column="56"/></operator><name pos:line="72" pos:column="53">object<pos:position pos:line="72" pos:column="59"/></name><operator pos:line="72" pos:column="59">.<pos:position pos:line="72" pos:column="60"/></operator><name pos:line="72" pos:column="60">oid<pos:position pos:line="72" pos:column="63"/></name><operator pos:line="72" pos:column="63">.<pos:position pos:line="72" pos:column="64"/></operator><name pos:line="72" pos:column="64">hash<pos:position pos:line="72" pos:column="68"/></name></name></expr>;<pos:position pos:line="72" pos:column="69"/></expr_stmt>
		<if pos:line="73" pos:column="17">if <condition pos:line="73" pos:column="20">(<expr><name><name pos:line="73" pos:column="21">o<pos:position pos:line="73" pos:column="22"/></name><operator pos:line="73" pos:column="22">-&gt;<pos:position pos:line="73" pos:column="27"/></operator><name pos:line="73" pos:column="24">verbosity<pos:position pos:line="73" pos:column="33"/></name></name> <operator pos:line="73" pos:column="34">&gt;=<pos:position pos:line="73" pos:column="39"/></operator> <literal type="number" pos:line="73" pos:column="37">4<pos:position pos:line="73" pos:column="38"/></literal></expr>)<pos:position pos:line="73" pos:column="39"/></condition><then pos:line="73" pos:column="39">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="74" pos:column="25">printf<pos:position pos:line="74" pos:column="31"/></name><argument_list pos:line="74" pos:column="31">(<argument><expr><literal type="string" pos:line="74" pos:column="32">"One merge base found (%.7s)\n"<pos:position pos:line="74" pos:column="63"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="75" pos:column="33">sha1_to_hex<pos:position pos:line="75" pos:column="44"/></name><argument_list pos:line="75" pos:column="44">(<argument><expr><name pos:line="75" pos:column="45">base_sha1<pos:position pos:line="75" pos:column="54"/></name></expr></argument>)<pos:position pos:line="75" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="75" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="57"/></expr_stmt></block></then></if>
	}<pos:position pos:line="76" pos:column="10"/></block></then></if></elseif> <else pos:line="76" pos:column="11">else <block pos:line="76" pos:column="16">{
		<comment type="block" pos:line="77" pos:column="17">/* TODO: How to handle multiple merge-bases? */</comment>
		<expr_stmt><expr><name pos:line="78" pos:column="17">base_sha1<pos:position pos:line="78" pos:column="26"/></name> <operator pos:line="78" pos:column="27">=<pos:position pos:line="78" pos:column="28"/></operator> <name><name pos:line="78" pos:column="29">bases<pos:position pos:line="78" pos:column="34"/></name><operator pos:line="78" pos:column="34">-&gt;<pos:position pos:line="78" pos:column="39"/></operator><name pos:line="78" pos:column="36">item<pos:position pos:line="78" pos:column="40"/></name><operator pos:line="78" pos:column="40">-&gt;<pos:position pos:line="78" pos:column="45"/></operator><name pos:line="78" pos:column="42">object<pos:position pos:line="78" pos:column="48"/></name><operator pos:line="78" pos:column="48">.<pos:position pos:line="78" pos:column="49"/></operator><name pos:line="78" pos:column="49">oid<pos:position pos:line="78" pos:column="52"/></name><operator pos:line="78" pos:column="52">.<pos:position pos:line="78" pos:column="53"/></operator><name pos:line="78" pos:column="53">hash<pos:position pos:line="78" pos:column="57"/></name></name></expr>;<pos:position pos:line="78" pos:column="58"/></expr_stmt>
		<expr_stmt><expr><name pos:line="79" pos:column="17">base_tree_sha1<pos:position pos:line="79" pos:column="31"/></name> <operator pos:line="79" pos:column="32">=<pos:position pos:line="79" pos:column="33"/></operator> <name><name pos:line="79" pos:column="34">bases<pos:position pos:line="79" pos:column="39"/></name><operator pos:line="79" pos:column="39">-&gt;<pos:position pos:line="79" pos:column="44"/></operator><name pos:line="79" pos:column="41">item<pos:position pos:line="79" pos:column="45"/></name><operator pos:line="79" pos:column="45">-&gt;<pos:position pos:line="79" pos:column="50"/></operator><name pos:line="79" pos:column="47">tree<pos:position pos:line="79" pos:column="51"/></name><operator pos:line="79" pos:column="51">-&gt;<pos:position pos:line="79" pos:column="56"/></operator><name pos:line="79" pos:column="53">object<pos:position pos:line="79" pos:column="59"/></name><operator pos:line="79" pos:column="59">.<pos:position pos:line="79" pos:column="60"/></operator><name pos:line="79" pos:column="60">oid<pos:position pos:line="79" pos:column="63"/></name><operator pos:line="79" pos:column="63">.<pos:position pos:line="79" pos:column="64"/></operator><name pos:line="79" pos:column="64">hash<pos:position pos:line="79" pos:column="68"/></name></name></expr>;<pos:position pos:line="79" pos:column="69"/></expr_stmt>
		<if pos:line="80" pos:column="17">if <condition pos:line="80" pos:column="20">(<expr><name><name pos:line="80" pos:column="21">o<pos:position pos:line="80" pos:column="22"/></name><operator pos:line="80" pos:column="22">-&gt;<pos:position pos:line="80" pos:column="27"/></operator><name pos:line="80" pos:column="24">verbosity<pos:position pos:line="80" pos:column="33"/></name></name> <operator pos:line="80" pos:column="34">&gt;=<pos:position pos:line="80" pos:column="39"/></operator> <literal type="number" pos:line="80" pos:column="37">3<pos:position pos:line="80" pos:column="38"/></literal></expr>)<pos:position pos:line="80" pos:column="39"/></condition><then pos:line="80" pos:column="39">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="81" pos:column="25">printf<pos:position pos:line="81" pos:column="31"/></name><argument_list pos:line="81" pos:column="31">(<argument><expr><literal type="string" pos:line="81" pos:column="32">"Multiple merge bases found. Using the first "<pos:position pos:line="81" pos:column="78"/></literal>
				<literal type="string" pos:line="82" pos:column="33">"(%.7s)\n"<pos:position pos:line="82" pos:column="43"/></literal></expr></argument>, <argument><expr><call><name pos:line="82" pos:column="45">sha1_to_hex<pos:position pos:line="82" pos:column="56"/></name><argument_list pos:line="82" pos:column="56">(<argument><expr><name pos:line="82" pos:column="57">base_sha1<pos:position pos:line="82" pos:column="66"/></name></expr></argument>)<pos:position pos:line="82" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="82" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="69"/></expr_stmt></block></then></if>
	}<pos:position pos:line="83" pos:column="10"/></block></else></if>

	<if pos:line="85" pos:column="9">if <condition pos:line="85" pos:column="12">(<expr><name><name pos:line="85" pos:column="13">o<pos:position pos:line="85" pos:column="14"/></name><operator pos:line="85" pos:column="14">-&gt;<pos:position pos:line="85" pos:column="19"/></operator><name pos:line="85" pos:column="16">verbosity<pos:position pos:line="85" pos:column="25"/></name></name> <operator pos:line="85" pos:column="26">&gt;=<pos:position pos:line="85" pos:column="31"/></operator> <literal type="number" pos:line="85" pos:column="29">4<pos:position pos:line="85" pos:column="30"/></literal></expr>)<pos:position pos:line="85" pos:column="31"/></condition><then pos:line="85" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="86" pos:column="17">printf<pos:position pos:line="86" pos:column="23"/></name><argument_list pos:line="86" pos:column="23">(<argument><expr><literal type="string" pos:line="86" pos:column="24">"Merging remote commit %.7s into local commit %.7s with "<pos:position pos:line="86" pos:column="81"/></literal>
			<literal type="string" pos:line="87" pos:column="25">"merge-base %.7s\n"<pos:position pos:line="87" pos:column="44"/></literal></expr></argument>, <argument><expr><call><name pos:line="87" pos:column="46">oid_to_hex<pos:position pos:line="87" pos:column="56"/></name><argument_list pos:line="87" pos:column="56">(<argument><expr><operator pos:line="87" pos:column="57">&amp;<pos:position pos:line="87" pos:column="62"/></operator><name><name pos:line="87" pos:column="58">remote<pos:position pos:line="87" pos:column="64"/></name><operator pos:line="87" pos:column="64">-&gt;<pos:position pos:line="87" pos:column="69"/></operator><name pos:line="87" pos:column="66">object<pos:position pos:line="87" pos:column="72"/></name><operator pos:line="87" pos:column="72">.<pos:position pos:line="87" pos:column="73"/></operator><name pos:line="87" pos:column="73">oid<pos:position pos:line="87" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="87" pos:column="77"/></argument_list></call></expr></argument>,
			<argument><expr><call><name pos:line="88" pos:column="25">oid_to_hex<pos:position pos:line="88" pos:column="35"/></name><argument_list pos:line="88" pos:column="35">(<argument><expr><operator pos:line="88" pos:column="36">&amp;<pos:position pos:line="88" pos:column="41"/></operator><name><name pos:line="88" pos:column="37">local<pos:position pos:line="88" pos:column="42"/></name><operator pos:line="88" pos:column="42">-&gt;<pos:position pos:line="88" pos:column="47"/></operator><name pos:line="88" pos:column="44">object<pos:position pos:line="88" pos:column="50"/></name><operator pos:line="88" pos:column="50">.<pos:position pos:line="88" pos:column="51"/></operator><name pos:line="88" pos:column="51">oid<pos:position pos:line="88" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="88" pos:column="55"/></argument_list></call></expr></argument>,
			<argument><expr><call><name pos:line="89" pos:column="25">sha1_to_hex<pos:position pos:line="89" pos:column="36"/></name><argument_list pos:line="89" pos:column="36">(<argument><expr><name pos:line="89" pos:column="37">base_sha1<pos:position pos:line="89" pos:column="46"/></name></expr></argument>)<pos:position pos:line="89" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="89" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="49"/></expr_stmt></block></then></if>

	<if pos:line="91" pos:column="9">if <condition pos:line="91" pos:column="12">(<expr><operator pos:line="91" pos:column="13">!<pos:position pos:line="91" pos:column="14"/></operator><call><name pos:line="91" pos:column="14">hashcmp<pos:position pos:line="91" pos:column="21"/></name><argument_list pos:line="91" pos:column="21">(<argument><expr><name><name pos:line="91" pos:column="22">remote<pos:position pos:line="91" pos:column="28"/></name><operator pos:line="91" pos:column="28">-&gt;<pos:position pos:line="91" pos:column="33"/></operator><name pos:line="91" pos:column="30">object<pos:position pos:line="91" pos:column="36"/></name><operator pos:line="91" pos:column="36">.<pos:position pos:line="91" pos:column="37"/></operator><name pos:line="91" pos:column="37">oid<pos:position pos:line="91" pos:column="40"/></name><operator pos:line="91" pos:column="40">.<pos:position pos:line="91" pos:column="41"/></operator><name pos:line="91" pos:column="41">hash<pos:position pos:line="91" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="47">base_sha1<pos:position pos:line="91" pos:column="56"/></name></expr></argument>)<pos:position pos:line="91" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="91" pos:column="58"/></condition><then pos:line="91" pos:column="58"> <block pos:line="91" pos:column="59">{
		<comment type="block" pos:line="92" pos:column="17">/* Already merged; result == local commit */</comment>
		<if pos:line="93" pos:column="17">if <condition pos:line="93" pos:column="20">(<expr><name><name pos:line="93" pos:column="21">o<pos:position pos:line="93" pos:column="22"/></name><operator pos:line="93" pos:column="22">-&gt;<pos:position pos:line="93" pos:column="27"/></operator><name pos:line="93" pos:column="24">verbosity<pos:position pos:line="93" pos:column="33"/></name></name> <operator pos:line="93" pos:column="34">&gt;=<pos:position pos:line="93" pos:column="39"/></operator> <literal type="number" pos:line="93" pos:column="37">2<pos:position pos:line="93" pos:column="38"/></literal></expr>)<pos:position pos:line="93" pos:column="39"/></condition><then pos:line="93" pos:column="39">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="94" pos:column="25">printf<pos:position pos:line="94" pos:column="31"/></name><argument_list pos:line="94" pos:column="31">(<argument><expr><literal type="string" pos:line="94" pos:column="32">"Already up-to-date!\n"<pos:position pos:line="94" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="94" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="57"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="95" pos:column="17">hashcpy<pos:position pos:line="95" pos:column="24"/></name><argument_list pos:line="95" pos:column="24">(<argument><expr><name pos:line="95" pos:column="25">result_sha1<pos:position pos:line="95" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="95" pos:column="38">local<pos:position pos:line="95" pos:column="43"/></name><operator pos:line="95" pos:column="43">-&gt;<pos:position pos:line="95" pos:column="48"/></operator><name pos:line="95" pos:column="45">object<pos:position pos:line="95" pos:column="51"/></name><operator pos:line="95" pos:column="51">.<pos:position pos:line="95" pos:column="52"/></operator><name pos:line="95" pos:column="52">oid<pos:position pos:line="95" pos:column="55"/></name><operator pos:line="95" pos:column="55">.<pos:position pos:line="95" pos:column="56"/></operator><name pos:line="95" pos:column="56">hash<pos:position pos:line="95" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="95" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="62"/></expr_stmt>
		<goto pos:line="96" pos:column="17">goto <name pos:line="96" pos:column="22">found_result<pos:position pos:line="96" pos:column="34"/></name>;<pos:position pos:line="96" pos:column="35"/></goto>
	}<pos:position pos:line="97" pos:column="10"/></block></then></if>
	<if pos:line="98" pos:column="9">if <condition pos:line="98" pos:column="12">(<expr><operator pos:line="98" pos:column="13">!<pos:position pos:line="98" pos:column="14"/></operator><call><name pos:line="98" pos:column="14">hashcmp<pos:position pos:line="98" pos:column="21"/></name><argument_list pos:line="98" pos:column="21">(<argument><expr><name><name pos:line="98" pos:column="22">local<pos:position pos:line="98" pos:column="27"/></name><operator pos:line="98" pos:column="27">-&gt;<pos:position pos:line="98" pos:column="32"/></operator><name pos:line="98" pos:column="29">object<pos:position pos:line="98" pos:column="35"/></name><operator pos:line="98" pos:column="35">.<pos:position pos:line="98" pos:column="36"/></operator><name pos:line="98" pos:column="36">oid<pos:position pos:line="98" pos:column="39"/></name><operator pos:line="98" pos:column="39">.<pos:position pos:line="98" pos:column="40"/></operator><name pos:line="98" pos:column="40">hash<pos:position pos:line="98" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="46">base_sha1<pos:position pos:line="98" pos:column="55"/></name></expr></argument>)<pos:position pos:line="98" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="98" pos:column="57"/></condition><then pos:line="98" pos:column="57"> <block pos:line="98" pos:column="58">{
		<comment type="block" pos:line="99" pos:column="17">/* Fast-forward; result == remote commit */</comment>
		<if pos:line="100" pos:column="17">if <condition pos:line="100" pos:column="20">(<expr><name><name pos:line="100" pos:column="21">o<pos:position pos:line="100" pos:column="22"/></name><operator pos:line="100" pos:column="22">-&gt;<pos:position pos:line="100" pos:column="27"/></operator><name pos:line="100" pos:column="24">verbosity<pos:position pos:line="100" pos:column="33"/></name></name> <operator pos:line="100" pos:column="34">&gt;=<pos:position pos:line="100" pos:column="39"/></operator> <literal type="number" pos:line="100" pos:column="37">2<pos:position pos:line="100" pos:column="38"/></literal></expr>)<pos:position pos:line="100" pos:column="39"/></condition><then pos:line="100" pos:column="39">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="101" pos:column="25">printf<pos:position pos:line="101" pos:column="31"/></name><argument_list pos:line="101" pos:column="31">(<argument><expr><literal type="string" pos:line="101" pos:column="32">"Fast-forward\n"<pos:position pos:line="101" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="101" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="50"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="102" pos:column="17">hashcpy<pos:position pos:line="102" pos:column="24"/></name><argument_list pos:line="102" pos:column="24">(<argument><expr><name pos:line="102" pos:column="25">result_sha1<pos:position pos:line="102" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="102" pos:column="38">remote<pos:position pos:line="102" pos:column="44"/></name><operator pos:line="102" pos:column="44">-&gt;<pos:position pos:line="102" pos:column="49"/></operator><name pos:line="102" pos:column="46">object<pos:position pos:line="102" pos:column="52"/></name><operator pos:line="102" pos:column="52">.<pos:position pos:line="102" pos:column="53"/></operator><name pos:line="102" pos:column="53">oid<pos:position pos:line="102" pos:column="56"/></name><operator pos:line="102" pos:column="56">.<pos:position pos:line="102" pos:column="57"/></operator><name pos:line="102" pos:column="57">hash<pos:position pos:line="102" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="102" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="63"/></expr_stmt>
		<goto pos:line="103" pos:column="17">goto <name pos:line="103" pos:column="22">found_result<pos:position pos:line="103" pos:column="34"/></name>;<pos:position pos:line="103" pos:column="35"/></goto>
	}<pos:position pos:line="104" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="106" pos:column="9">result<pos:position pos:line="106" pos:column="15"/></name> <operator pos:line="106" pos:column="16">=<pos:position pos:line="106" pos:column="17"/></operator> <call><name pos:line="106" pos:column="18">merge_from_diffs<pos:position pos:line="106" pos:column="34"/></name><argument_list pos:line="106" pos:column="34">(<argument><expr><name pos:line="106" pos:column="35">o<pos:position pos:line="106" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="38">base_tree_sha1<pos:position pos:line="106" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="106" pos:column="54">local<pos:position pos:line="106" pos:column="59"/></name><operator pos:line="106" pos:column="59">-&gt;<pos:position pos:line="106" pos:column="64"/></operator><name pos:line="106" pos:column="61">tree<pos:position pos:line="106" pos:column="65"/></name><operator pos:line="106" pos:column="65">-&gt;<pos:position pos:line="106" pos:column="70"/></operator><name pos:line="106" pos:column="67">object<pos:position pos:line="106" pos:column="73"/></name><operator pos:line="106" pos:column="73">.<pos:position pos:line="106" pos:column="74"/></operator><name pos:line="106" pos:column="74">oid<pos:position pos:line="106" pos:column="77"/></name><operator pos:line="106" pos:column="77">.<pos:position pos:line="106" pos:column="78"/></operator><name pos:line="106" pos:column="78">hash<pos:position pos:line="106" pos:column="82"/></name></name></expr></argument>,
				  <argument><expr><name><name pos:line="107" pos:column="35">remote<pos:position pos:line="107" pos:column="41"/></name><operator pos:line="107" pos:column="41">-&gt;<pos:position pos:line="107" pos:column="46"/></operator><name pos:line="107" pos:column="43">tree<pos:position pos:line="107" pos:column="47"/></name><operator pos:line="107" pos:column="47">-&gt;<pos:position pos:line="107" pos:column="52"/></operator><name pos:line="107" pos:column="49">object<pos:position pos:line="107" pos:column="55"/></name><operator pos:line="107" pos:column="55">.<pos:position pos:line="107" pos:column="56"/></operator><name pos:line="107" pos:column="56">oid<pos:position pos:line="107" pos:column="59"/></name><operator pos:line="107" pos:column="59">.<pos:position pos:line="107" pos:column="60"/></operator><name pos:line="107" pos:column="60">hash<pos:position pos:line="107" pos:column="64"/></name></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="66">local_tree<pos:position pos:line="107" pos:column="76"/></name></expr></argument>)<pos:position pos:line="107" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="78"/></expr_stmt>

	<if pos:line="109" pos:column="9">if <condition pos:line="109" pos:column="12">(<expr><name pos:line="109" pos:column="13">result<pos:position pos:line="109" pos:column="19"/></name> <operator pos:line="109" pos:column="20">!=<pos:position pos:line="109" pos:column="22"/></operator> <literal type="number" pos:line="109" pos:column="23">0<pos:position pos:line="109" pos:column="24"/></literal></expr>)<pos:position pos:line="109" pos:column="25"/></condition><then pos:line="109" pos:column="25"> <block pos:line="109" pos:column="26">{ <comment type="block" pos:line="109" pos:column="28">/* non-trivial merge (with or without conflicts) */</comment>
		<comment type="block" pos:line="110" pos:column="17">/* Commit (partial) result */</comment>
		<decl_stmt><decl><type><name><name pos:line="111" pos:column="17">struct<pos:position pos:line="111" pos:column="23"/></name> <name pos:line="111" pos:column="24">commit_list<pos:position pos:line="111" pos:column="35"/></name></name> <modifier pos:line="111" pos:column="36">*<pos:position pos:line="111" pos:column="37"/></modifier></type><name pos:line="111" pos:column="37">parents<pos:position pos:line="111" pos:column="44"/></name> <init pos:line="111" pos:column="45">= <expr><name pos:line="111" pos:column="47">NULL<pos:position pos:line="111" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="111" pos:column="52"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="112" pos:column="17">commit_list_insert<pos:position pos:line="112" pos:column="35"/></name><argument_list pos:line="112" pos:column="35">(<argument><expr><name pos:line="112" pos:column="36">remote<pos:position pos:line="112" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="112" pos:column="44">&amp;<pos:position pos:line="112" pos:column="49"/></operator><name pos:line="112" pos:column="45">parents<pos:position pos:line="112" pos:column="52"/></name></expr></argument>)<pos:position pos:line="112" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="54"/></expr_stmt> <comment type="block" pos:line="112" pos:column="55">/* LIFO order */</comment>
		<expr_stmt><expr><call><name pos:line="113" pos:column="17">commit_list_insert<pos:position pos:line="113" pos:column="35"/></name><argument_list pos:line="113" pos:column="35">(<argument><expr><name pos:line="113" pos:column="36">local<pos:position pos:line="113" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="113" pos:column="43">&amp;<pos:position pos:line="113" pos:column="48"/></operator><name pos:line="113" pos:column="44">parents<pos:position pos:line="113" pos:column="51"/></name></expr></argument>)<pos:position pos:line="113" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="53"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="114" pos:column="17">create_notes_commit<pos:position pos:line="114" pos:column="36"/></name><argument_list pos:line="114" pos:column="36">(<argument><expr><name pos:line="114" pos:column="37">local_tree<pos:position pos:line="114" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="49">parents<pos:position pos:line="114" pos:column="56"/></name></expr></argument>,
				    <argument><expr><name><name pos:line="115" pos:column="37">o<pos:position pos:line="115" pos:column="38"/></name><operator pos:line="115" pos:column="38">-&gt;<pos:position pos:line="115" pos:column="43"/></operator><name pos:line="115" pos:column="40">commit_msg<pos:position pos:line="115" pos:column="50"/></name><operator pos:line="115" pos:column="50">.<pos:position pos:line="115" pos:column="51"/></operator><name pos:line="115" pos:column="51">buf<pos:position pos:line="115" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="115" pos:column="56">o<pos:position pos:line="115" pos:column="57"/></name><operator pos:line="115" pos:column="57">-&gt;<pos:position pos:line="115" pos:column="62"/></operator><name pos:line="115" pos:column="59">commit_msg<pos:position pos:line="115" pos:column="69"/></name><operator pos:line="115" pos:column="69">.<pos:position pos:line="115" pos:column="70"/></operator><name pos:line="115" pos:column="70">len<pos:position pos:line="115" pos:column="73"/></name></name></expr></argument>,
				    <argument><expr><name pos:line="116" pos:column="37">result_sha1<pos:position pos:line="116" pos:column="48"/></name></expr></argument>)<pos:position pos:line="116" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="50"/></expr_stmt>
	}<pos:position pos:line="117" pos:column="10"/></block></then></if>

<label><name pos:line="119" pos:column="1">found_result<pos:position pos:line="119" pos:column="13"/></name>:<pos:position pos:line="119" pos:column="14"/></label>
	<expr_stmt><expr><call><name pos:line="120" pos:column="9">free_commit_list<pos:position pos:line="120" pos:column="25"/></name><argument_list pos:line="120" pos:column="25">(<argument><expr><name pos:line="120" pos:column="26">bases<pos:position pos:line="120" pos:column="31"/></name></expr></argument>)<pos:position pos:line="120" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="121" pos:column="9">strbuf_release<pos:position pos:line="121" pos:column="23"/></name><argument_list pos:line="121" pos:column="23">(<argument><expr><operator pos:line="121" pos:column="24">&amp;<pos:position pos:line="121" pos:column="29"/></operator><operator pos:line="121" pos:column="25">(<pos:position pos:line="121" pos:column="26"/></operator><name><name pos:line="121" pos:column="26">o<pos:position pos:line="121" pos:column="27"/></name><operator pos:line="121" pos:column="27">-&gt;<pos:position pos:line="121" pos:column="32"/></operator><name pos:line="121" pos:column="29">commit_msg<pos:position pos:line="121" pos:column="39"/></name></name><operator pos:line="121" pos:column="39">)<pos:position pos:line="121" pos:column="40"/></operator></expr></argument>)<pos:position pos:line="121" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="122" pos:column="9">trace_printf<pos:position pos:line="122" pos:column="21"/></name><argument_list pos:line="122" pos:column="21">(<argument><expr><literal type="string" pos:line="122" pos:column="22">"notes_merge(): result = %i, result_sha1 = %.7s\n"<pos:position pos:line="122" pos:column="72"/></literal></expr></argument>,
	       <argument><expr><name pos:line="123" pos:column="16">result<pos:position pos:line="123" pos:column="22"/></name></expr></argument>, <argument><expr><call><name pos:line="123" pos:column="24">sha1_to_hex<pos:position pos:line="123" pos:column="35"/></name><argument_list pos:line="123" pos:column="35">(<argument><expr><name pos:line="123" pos:column="36">result_sha1<pos:position pos:line="123" pos:column="47"/></name></expr></argument>)<pos:position pos:line="123" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="123" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="50"/></expr_stmt>
	<return pos:line="124" pos:column="9">return <expr><name pos:line="124" pos:column="16">result<pos:position pos:line="124" pos:column="22"/></name></expr>;<pos:position pos:line="124" pos:column="23"/></return>
}<pos:position pos:line="125" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1033_git-2.12.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">preload_thread<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">void<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">_data<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="41"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">nr<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">thread_data<pos:position pos:line="4" pos:column="27"/></name></name> <modifier pos:line="4" pos:column="28">*<pos:position pos:line="4" pos:column="29"/></modifier></type><name pos:line="4" pos:column="29">p<pos:position pos:line="4" pos:column="30"/></name> <init pos:line="4" pos:column="31">= <expr><name pos:line="4" pos:column="33">_data<pos:position pos:line="4" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">index_state<pos:position pos:line="5" pos:column="27"/></name></name> <modifier pos:line="5" pos:column="28">*<pos:position pos:line="5" pos:column="29"/></modifier></type><name pos:line="5" pos:column="29">index<pos:position pos:line="5" pos:column="34"/></name> <init pos:line="5" pos:column="35">= <expr><name><name pos:line="5" pos:column="37">p<pos:position pos:line="5" pos:column="38"/></name><operator pos:line="5" pos:column="38">-&gt;<pos:position pos:line="5" pos:column="43"/></operator><name pos:line="5" pos:column="40">index<pos:position pos:line="5" pos:column="45"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">cache_entry<pos:position pos:line="6" pos:column="27"/></name></name> <modifier pos:line="6" pos:column="28">*<pos:position pos:line="6" pos:column="29"/></modifier><modifier pos:line="6" pos:column="29">*<pos:position pos:line="6" pos:column="30"/></modifier></type><name pos:line="6" pos:column="30">cep<pos:position pos:line="6" pos:column="33"/></name> <init pos:line="6" pos:column="34">= <expr><name><name pos:line="6" pos:column="36">index<pos:position pos:line="6" pos:column="41"/></name><operator pos:line="6" pos:column="41">-&gt;<pos:position pos:line="6" pos:column="46"/></operator><name pos:line="6" pos:column="43">cache<pos:position pos:line="6" pos:column="48"/></name></name> <operator pos:line="6" pos:column="49">+<pos:position pos:line="6" pos:column="50"/></operator> <name><name pos:line="6" pos:column="51">p<pos:position pos:line="6" pos:column="52"/></name><operator pos:line="6" pos:column="52">-&gt;<pos:position pos:line="6" pos:column="57"/></operator><name pos:line="6" pos:column="54">offset<pos:position pos:line="6" pos:column="60"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="61"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">cache_def<pos:position pos:line="7" pos:column="25"/></name></name></type> <name pos:line="7" pos:column="26">cache<pos:position pos:line="7" pos:column="31"/></name> <init pos:line="7" pos:column="32">= <expr><name pos:line="7" pos:column="34">CACHE_DEF_INIT<pos:position pos:line="7" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="49"/></decl_stmt>

	<expr_stmt><expr><name pos:line="9" pos:column="9">nr<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">=<pos:position pos:line="9" pos:column="13"/></operator> <name><name pos:line="9" pos:column="14">p<pos:position pos:line="9" pos:column="15"/></name><operator pos:line="9" pos:column="15">-&gt;<pos:position pos:line="9" pos:column="20"/></operator><name pos:line="9" pos:column="17">nr<pos:position pos:line="9" pos:column="19"/></name></name></expr>;<pos:position pos:line="9" pos:column="20"/></expr_stmt>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">nr<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">+<pos:position pos:line="10" pos:column="17"/></operator> <name><name pos:line="10" pos:column="18">p<pos:position pos:line="10" pos:column="19"/></name><operator pos:line="10" pos:column="19">-&gt;<pos:position pos:line="10" pos:column="24"/></operator><name pos:line="10" pos:column="21">offset<pos:position pos:line="10" pos:column="27"/></name></name> <operator pos:line="10" pos:column="28">&gt;<pos:position pos:line="10" pos:column="32"/></operator> <name><name pos:line="10" pos:column="30">index<pos:position pos:line="10" pos:column="35"/></name><operator pos:line="10" pos:column="35">-&gt;<pos:position pos:line="10" pos:column="40"/></operator><name pos:line="10" pos:column="37">cache_nr<pos:position pos:line="10" pos:column="45"/></name></name></expr>)<pos:position pos:line="10" pos:column="46"/></condition><then pos:line="10" pos:column="46">
		<block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="17">nr<pos:position pos:line="11" pos:column="19"/></name> <operator pos:line="11" pos:column="20">=<pos:position pos:line="11" pos:column="21"/></operator> <name><name pos:line="11" pos:column="22">index<pos:position pos:line="11" pos:column="27"/></name><operator pos:line="11" pos:column="27">-&gt;<pos:position pos:line="11" pos:column="32"/></operator><name pos:line="11" pos:column="29">cache_nr<pos:position pos:line="11" pos:column="37"/></name></name> <operator pos:line="11" pos:column="38">-<pos:position pos:line="11" pos:column="39"/></operator> <name><name pos:line="11" pos:column="40">p<pos:position pos:line="11" pos:column="41"/></name><operator pos:line="11" pos:column="41">-&gt;<pos:position pos:line="11" pos:column="46"/></operator><name pos:line="11" pos:column="43">offset<pos:position pos:line="11" pos:column="49"/></name></name></expr>;<pos:position pos:line="11" pos:column="50"/></expr_stmt></block></then></if>

	<do pos:line="13" pos:column="9">do <block pos:line="13" pos:column="12">{
		<decl_stmt><decl><type><name><name pos:line="14" pos:column="17">struct<pos:position pos:line="14" pos:column="23"/></name> <name pos:line="14" pos:column="24">cache_entry<pos:position pos:line="14" pos:column="35"/></name></name> <modifier pos:line="14" pos:column="36">*<pos:position pos:line="14" pos:column="37"/></modifier></type><name pos:line="14" pos:column="37">ce<pos:position pos:line="14" pos:column="39"/></name> <init pos:line="14" pos:column="40">= <expr><operator pos:line="14" pos:column="42">*<pos:position pos:line="14" pos:column="43"/></operator><name pos:line="14" pos:column="43">cep<pos:position pos:line="14" pos:column="46"/></name><operator pos:line="14" pos:column="46">++<pos:position pos:line="14" pos:column="48"/></operator></expr></init></decl>;<pos:position pos:line="14" pos:column="49"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="15" pos:column="17">struct<pos:position pos:line="15" pos:column="23"/></name> <name pos:line="15" pos:column="24">stat<pos:position pos:line="15" pos:column="28"/></name></name></type> <name pos:line="15" pos:column="29">st<pos:position pos:line="15" pos:column="31"/></name></decl>;<pos:position pos:line="15" pos:column="32"/></decl_stmt>

		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><call><name pos:line="17" pos:column="21">ce_stage<pos:position pos:line="17" pos:column="29"/></name><argument_list pos:line="17" pos:column="29">(<argument><expr><name pos:line="17" pos:column="30">ce<pos:position pos:line="17" pos:column="32"/></name></expr></argument>)<pos:position pos:line="17" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="34"/></condition><then pos:line="17" pos:column="34">
			<block type="pseudo"><continue pos:line="18" pos:column="25">continue;<pos:position pos:line="18" pos:column="34"/></continue></block></then></if>
		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><call><name pos:line="19" pos:column="21">S_ISGITLINK<pos:position pos:line="19" pos:column="32"/></name><argument_list pos:line="19" pos:column="32">(<argument><expr><name><name pos:line="19" pos:column="33">ce<pos:position pos:line="19" pos:column="35"/></name><operator pos:line="19" pos:column="35">-&gt;<pos:position pos:line="19" pos:column="40"/></operator><name pos:line="19" pos:column="37">ce_mode<pos:position pos:line="19" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="46"/></condition><then pos:line="19" pos:column="46">
			<block type="pseudo"><continue pos:line="20" pos:column="25">continue;<pos:position pos:line="20" pos:column="34"/></continue></block></then></if>
		<if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><call><name pos:line="21" pos:column="21">ce_uptodate<pos:position pos:line="21" pos:column="32"/></name><argument_list pos:line="21" pos:column="32">(<argument><expr><name pos:line="21" pos:column="33">ce<pos:position pos:line="21" pos:column="35"/></name></expr></argument>)<pos:position pos:line="21" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="37"/></condition><then pos:line="21" pos:column="37">
			<block type="pseudo"><continue pos:line="22" pos:column="25">continue;<pos:position pos:line="22" pos:column="34"/></continue></block></then></if>
		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><operator pos:line="23" pos:column="21">!<pos:position pos:line="23" pos:column="22"/></operator><call><name pos:line="23" pos:column="22">ce_path_match<pos:position pos:line="23" pos:column="35"/></name><argument_list pos:line="23" pos:column="35">(<argument><expr><name pos:line="23" pos:column="36">ce<pos:position pos:line="23" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="40">&amp;<pos:position pos:line="23" pos:column="45"/></operator><name><name pos:line="23" pos:column="41">p<pos:position pos:line="23" pos:column="42"/></name><operator pos:line="23" pos:column="42">-&gt;<pos:position pos:line="23" pos:column="47"/></operator><name pos:line="23" pos:column="44">pathspec<pos:position pos:line="23" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="54">NULL<pos:position pos:line="23" pos:column="58"/></name></expr></argument>)<pos:position pos:line="23" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="60"/></condition><then pos:line="23" pos:column="60">
			<block type="pseudo"><continue pos:line="24" pos:column="25">continue;<pos:position pos:line="24" pos:column="34"/></continue></block></then></if>
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><call><name pos:line="25" pos:column="21">threaded_has_symlink_leading_path<pos:position pos:line="25" pos:column="54"/></name><argument_list pos:line="25" pos:column="54">(<argument><expr><operator pos:line="25" pos:column="55">&amp;<pos:position pos:line="25" pos:column="60"/></operator><name pos:line="25" pos:column="56">cache<pos:position pos:line="25" pos:column="61"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="63">ce<pos:position pos:line="25" pos:column="65"/></name><operator pos:line="25" pos:column="65">-&gt;<pos:position pos:line="25" pos:column="70"/></operator><name pos:line="25" pos:column="67">name<pos:position pos:line="25" pos:column="71"/></name></name></expr></argument>, <argument><expr><call><name pos:line="25" pos:column="73">ce_namelen<pos:position pos:line="25" pos:column="83"/></name><argument_list pos:line="25" pos:column="83">(<argument><expr><name pos:line="25" pos:column="84">ce<pos:position pos:line="25" pos:column="86"/></name></expr></argument>)<pos:position pos:line="25" pos:column="87"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="88"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="89"/></condition><then pos:line="25" pos:column="89">
			<block type="pseudo"><continue pos:line="26" pos:column="25">continue;<pos:position pos:line="26" pos:column="34"/></continue></block></then></if>
		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><call><name pos:line="27" pos:column="21">lstat<pos:position pos:line="27" pos:column="26"/></name><argument_list pos:line="27" pos:column="26">(<argument><expr><name><name pos:line="27" pos:column="27">ce<pos:position pos:line="27" pos:column="29"/></name><operator pos:line="27" pos:column="29">-&gt;<pos:position pos:line="27" pos:column="34"/></operator><name pos:line="27" pos:column="31">name<pos:position pos:line="27" pos:column="35"/></name></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="37">&amp;<pos:position pos:line="27" pos:column="42"/></operator><name pos:line="27" pos:column="38">st<pos:position pos:line="27" pos:column="40"/></name></expr></argument>)<pos:position pos:line="27" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="42"/></condition><then pos:line="27" pos:column="42">
			<block type="pseudo"><continue pos:line="28" pos:column="25">continue;<pos:position pos:line="28" pos:column="34"/></continue></block></then></if>
		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><call><name pos:line="29" pos:column="21">ie_match_stat<pos:position pos:line="29" pos:column="34"/></name><argument_list pos:line="29" pos:column="34">(<argument><expr><name pos:line="29" pos:column="35">index<pos:position pos:line="29" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="42">ce<pos:position pos:line="29" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="46">&amp;<pos:position pos:line="29" pos:column="51"/></operator><name pos:line="29" pos:column="47">st<pos:position pos:line="29" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="51">CE_MATCH_RACY_IS_DIRTY<pos:position pos:line="29" pos:column="73"/></name></expr></argument>)<pos:position pos:line="29" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="75"/></condition><then pos:line="29" pos:column="75">
			<block type="pseudo"><continue pos:line="30" pos:column="25">continue;<pos:position pos:line="30" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><call><name pos:line="31" pos:column="17">ce_mark_uptodate<pos:position pos:line="31" pos:column="33"/></name><argument_list pos:line="31" pos:column="33">(<argument><expr><name pos:line="31" pos:column="34">ce<pos:position pos:line="31" pos:column="36"/></name></expr></argument>)<pos:position pos:line="31" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="32" pos:column="10"/></block> while <condition pos:line="32" pos:column="17">(<expr><operator pos:line="32" pos:column="18">--<pos:position pos:line="32" pos:column="20"/></operator><name pos:line="32" pos:column="20">nr<pos:position pos:line="32" pos:column="22"/></name> <operator pos:line="32" pos:column="23">&gt;<pos:position pos:line="32" pos:column="27"/></operator> <literal type="number" pos:line="32" pos:column="25">0<pos:position pos:line="32" pos:column="26"/></literal></expr>)<pos:position pos:line="32" pos:column="27"/></condition>;<pos:position pos:line="32" pos:column="28"/></do>
	<expr_stmt><expr><call><name pos:line="33" pos:column="9">cache_def_clear<pos:position pos:line="33" pos:column="24"/></name><argument_list pos:line="33" pos:column="24">(<argument><expr><operator pos:line="33" pos:column="25">&amp;<pos:position pos:line="33" pos:column="30"/></operator><name pos:line="33" pos:column="26">cache<pos:position pos:line="33" pos:column="31"/></name></expr></argument>)<pos:position pos:line="33" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="33"/></expr_stmt>
	<return pos:line="34" pos:column="9">return <expr><name pos:line="34" pos:column="16">NULL<pos:position pos:line="34" pos:column="20"/></name></expr>;<pos:position pos:line="34" pos:column="21"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

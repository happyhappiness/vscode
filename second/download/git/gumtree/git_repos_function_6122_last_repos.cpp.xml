<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6122_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">work_done<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name><name pos:line="1" pos:column="23">struct<pos:position pos:line="1" pos:column="29"/></name> <name pos:line="1" pos:column="30">work_item<pos:position pos:line="1" pos:column="39"/></name></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">w<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">old_done<pos:position pos:line="3" pos:column="21"/></name></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="5" pos:column="9">grep_lock<pos:position pos:line="5" pos:column="18"/></name><argument_list pos:line="5" pos:column="18">()<pos:position pos:line="5" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="6" pos:column="9">w<pos:position pos:line="6" pos:column="10"/></name><operator pos:line="6" pos:column="10">-&gt;<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="12">done<pos:position pos:line="6" pos:column="16"/></name></name> <operator pos:line="6" pos:column="17">=<pos:position pos:line="6" pos:column="18"/></operator> <literal type="number" pos:line="6" pos:column="19">1<pos:position pos:line="6" pos:column="20"/></literal></expr>;<pos:position pos:line="6" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><name pos:line="7" pos:column="9">old_done<pos:position pos:line="7" pos:column="17"/></name> <operator pos:line="7" pos:column="18">=<pos:position pos:line="7" pos:column="19"/></operator> <name pos:line="7" pos:column="20">todo_done<pos:position pos:line="7" pos:column="29"/></name></expr>;<pos:position pos:line="7" pos:column="30"/></expr_stmt>
	<for pos:line="8" pos:column="9">for<control pos:line="8" pos:column="12">(<init pos:line="8" pos:column="13">;<pos:position pos:line="8" pos:column="14"/></init> <condition><expr><name><name pos:line="8" pos:column="15">todo<pos:position pos:line="8" pos:column="19"/></name><index pos:line="8" pos:column="19">[<expr><name pos:line="8" pos:column="20">todo_done<pos:position pos:line="8" pos:column="29"/></name></expr>]<pos:position pos:line="8" pos:column="30"/></index></name><operator pos:line="8" pos:column="30">.<pos:position pos:line="8" pos:column="31"/></operator><name pos:line="8" pos:column="31">done<pos:position pos:line="8" pos:column="35"/></name> <operator pos:line="8" pos:column="36">&amp;&amp;<pos:position pos:line="8" pos:column="46"/></operator> <name pos:line="8" pos:column="39">todo_done<pos:position pos:line="8" pos:column="48"/></name> <operator pos:line="8" pos:column="49">!=<pos:position pos:line="8" pos:column="51"/></operator> <name pos:line="8" pos:column="52">todo_start<pos:position pos:line="8" pos:column="62"/></name></expr>;<pos:position pos:line="8" pos:column="63"/></condition>
	    <incr><expr><name pos:line="9" pos:column="13">todo_done<pos:position pos:line="9" pos:column="22"/></name> <operator pos:line="9" pos:column="23">=<pos:position pos:line="9" pos:column="24"/></operator> <operator pos:line="9" pos:column="25">(<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="26">todo_done<pos:position pos:line="9" pos:column="35"/></name><operator pos:line="9" pos:column="35">+<pos:position pos:line="9" pos:column="36"/></operator><literal type="number" pos:line="9" pos:column="36">1<pos:position pos:line="9" pos:column="37"/></literal><operator pos:line="9" pos:column="37">)<pos:position pos:line="9" pos:column="38"/></operator> <operator pos:line="9" pos:column="39">%<pos:position pos:line="9" pos:column="40"/></operator> <call><name pos:line="9" pos:column="41">ARRAY_SIZE<pos:position pos:line="9" pos:column="51"/></name><argument_list pos:line="9" pos:column="51">(<argument><expr><name pos:line="9" pos:column="52">todo<pos:position pos:line="9" pos:column="56"/></name></expr></argument>)<pos:position pos:line="9" pos:column="57"/></argument_list></call></expr></incr>)<pos:position pos:line="9" pos:column="58"/></control> <block pos:line="9" pos:column="59">{
		<expr_stmt><expr><name pos:line="10" pos:column="17">w<pos:position pos:line="10" pos:column="18"/></name> <operator pos:line="10" pos:column="19">=<pos:position pos:line="10" pos:column="20"/></operator> <operator pos:line="10" pos:column="21">&amp;<pos:position pos:line="10" pos:column="26"/></operator><name><name pos:line="10" pos:column="22">todo<pos:position pos:line="10" pos:column="26"/></name><index pos:line="10" pos:column="26">[<expr><name pos:line="10" pos:column="27">todo_done<pos:position pos:line="10" pos:column="36"/></name></expr>]<pos:position pos:line="10" pos:column="37"/></index></name></expr>;<pos:position pos:line="10" pos:column="38"/></expr_stmt>
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><name><name pos:line="11" pos:column="21">w<pos:position pos:line="11" pos:column="22"/></name><operator pos:line="11" pos:column="22">-&gt;<pos:position pos:line="11" pos:column="27"/></operator><name pos:line="11" pos:column="24">out<pos:position pos:line="11" pos:column="27"/></name><operator pos:line="11" pos:column="27">.<pos:position pos:line="11" pos:column="28"/></operator><name pos:line="11" pos:column="28">len<pos:position pos:line="11" pos:column="31"/></name></name></expr>)<pos:position pos:line="11" pos:column="32"/></condition><then pos:line="11" pos:column="32"> <block pos:line="11" pos:column="33">{
			<decl_stmt><decl><type><specifier pos:line="12" pos:column="25">const<pos:position pos:line="12" pos:column="30"/></specifier> <name pos:line="12" pos:column="31">char<pos:position pos:line="12" pos:column="35"/></name> <modifier pos:line="12" pos:column="36">*<pos:position pos:line="12" pos:column="37"/></modifier></type><name pos:line="12" pos:column="37">p<pos:position pos:line="12" pos:column="38"/></name> <init pos:line="12" pos:column="39">= <expr><name><name pos:line="12" pos:column="41">w<pos:position pos:line="12" pos:column="42"/></name><operator pos:line="12" pos:column="42">-&gt;<pos:position pos:line="12" pos:column="47"/></operator><name pos:line="12" pos:column="44">out<pos:position pos:line="12" pos:column="47"/></name><operator pos:line="12" pos:column="47">.<pos:position pos:line="12" pos:column="48"/></operator><name pos:line="12" pos:column="48">buf<pos:position pos:line="12" pos:column="51"/></name></name></expr></init></decl>;<pos:position pos:line="12" pos:column="52"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="13" pos:column="25">size_t<pos:position pos:line="13" pos:column="31"/></name></type> <name pos:line="13" pos:column="32">len<pos:position pos:line="13" pos:column="35"/></name> <init pos:line="13" pos:column="36">= <expr><name><name pos:line="13" pos:column="38">w<pos:position pos:line="13" pos:column="39"/></name><operator pos:line="13" pos:column="39">-&gt;<pos:position pos:line="13" pos:column="44"/></operator><name pos:line="13" pos:column="41">out<pos:position pos:line="13" pos:column="44"/></name><operator pos:line="13" pos:column="44">.<pos:position pos:line="13" pos:column="45"/></operator><name pos:line="13" pos:column="45">len<pos:position pos:line="13" pos:column="48"/></name></name></expr></init></decl>;<pos:position pos:line="13" pos:column="49"/></decl_stmt>

			<comment type="block" pos:line="15" pos:column="25">/* Skip the leading hunk mark of the first file. */</comment>
			<if pos:line="16" pos:column="25">if <condition pos:line="16" pos:column="28">(<expr><name pos:line="16" pos:column="29">skip_first_line<pos:position pos:line="16" pos:column="44"/></name></expr>)<pos:position pos:line="16" pos:column="45"/></condition><then pos:line="16" pos:column="45"> <block pos:line="16" pos:column="46">{
				<while pos:line="17" pos:column="33">while <condition pos:line="17" pos:column="39">(<expr><name pos:line="17" pos:column="40">len<pos:position pos:line="17" pos:column="43"/></name></expr>)<pos:position pos:line="17" pos:column="44"/></condition> <block pos:line="17" pos:column="45">{
					<expr_stmt><expr><name pos:line="18" pos:column="41">len<pos:position pos:line="18" pos:column="44"/></name><operator pos:line="18" pos:column="44">--<pos:position pos:line="18" pos:column="46"/></operator></expr>;<pos:position pos:line="18" pos:column="47"/></expr_stmt>
					<if pos:line="19" pos:column="41">if <condition pos:line="19" pos:column="44">(<expr><operator pos:line="19" pos:column="45">*<pos:position pos:line="19" pos:column="46"/></operator><name pos:line="19" pos:column="46">p<pos:position pos:line="19" pos:column="47"/></name><operator pos:line="19" pos:column="47">++<pos:position pos:line="19" pos:column="49"/></operator> <operator pos:line="19" pos:column="50">==<pos:position pos:line="19" pos:column="52"/></operator> <literal type="char" pos:line="19" pos:column="53">'\n'<pos:position pos:line="19" pos:column="57"/></literal></expr>)<pos:position pos:line="19" pos:column="58"/></condition><then pos:line="19" pos:column="58">
						<block type="pseudo"><break pos:line="20" pos:column="49">break;<pos:position pos:line="20" pos:column="55"/></break></block></then></if>
				}<pos:position pos:line="21" pos:column="34"/></block></while>
				<expr_stmt><expr><name pos:line="22" pos:column="33">skip_first_line<pos:position pos:line="22" pos:column="48"/></name> <operator pos:line="22" pos:column="49">=<pos:position pos:line="22" pos:column="50"/></operator> <literal type="number" pos:line="22" pos:column="51">0<pos:position pos:line="22" pos:column="52"/></literal></expr>;<pos:position pos:line="22" pos:column="53"/></expr_stmt>
			}<pos:position pos:line="23" pos:column="26"/></block></then></if>

			<expr_stmt><expr><call><name pos:line="25" pos:column="25">write_or_die<pos:position pos:line="25" pos:column="37"/></name><argument_list pos:line="25" pos:column="37">(<argument><expr><literal type="number" pos:line="25" pos:column="38">1<pos:position pos:line="25" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="41">p<pos:position pos:line="25" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="44">len<pos:position pos:line="25" pos:column="47"/></name></expr></argument>)<pos:position pos:line="25" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="49"/></expr_stmt>
		}<pos:position pos:line="26" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="27" pos:column="17">grep_source_clear<pos:position pos:line="27" pos:column="34"/></name><argument_list pos:line="27" pos:column="34">(<argument><expr><operator pos:line="27" pos:column="35">&amp;<pos:position pos:line="27" pos:column="40"/></operator><name><name pos:line="27" pos:column="36">w<pos:position pos:line="27" pos:column="37"/></name><operator pos:line="27" pos:column="37">-&gt;<pos:position pos:line="27" pos:column="42"/></operator><name pos:line="27" pos:column="39">source<pos:position pos:line="27" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="47"/></expr_stmt>
	}<pos:position pos:line="28" pos:column="10"/></block></for>

	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name pos:line="30" pos:column="13">old_done<pos:position pos:line="30" pos:column="21"/></name> <operator pos:line="30" pos:column="22">!=<pos:position pos:line="30" pos:column="24"/></operator> <name pos:line="30" pos:column="25">todo_done<pos:position pos:line="30" pos:column="34"/></name></expr>)<pos:position pos:line="30" pos:column="35"/></condition><then pos:line="30" pos:column="35">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="17">pthread_cond_signal<pos:position pos:line="31" pos:column="36"/></name><argument_list pos:line="31" pos:column="36">(<argument><expr><operator pos:line="31" pos:column="37">&amp;<pos:position pos:line="31" pos:column="42"/></operator><name pos:line="31" pos:column="38">cond_write<pos:position pos:line="31" pos:column="48"/></name></expr></argument>)<pos:position pos:line="31" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="50"/></expr_stmt></block></then></if>

	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name pos:line="33" pos:column="13">all_work_added<pos:position pos:line="33" pos:column="27"/></name> <operator pos:line="33" pos:column="28">&amp;&amp;<pos:position pos:line="33" pos:column="38"/></operator> <name pos:line="33" pos:column="31">todo_done<pos:position pos:line="33" pos:column="40"/></name> <operator pos:line="33" pos:column="41">==<pos:position pos:line="33" pos:column="43"/></operator> <name pos:line="33" pos:column="44">todo_end<pos:position pos:line="33" pos:column="52"/></name></expr>)<pos:position pos:line="33" pos:column="53"/></condition><then pos:line="33" pos:column="53">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="17">pthread_cond_signal<pos:position pos:line="34" pos:column="36"/></name><argument_list pos:line="34" pos:column="36">(<argument><expr><operator pos:line="34" pos:column="37">&amp;<pos:position pos:line="34" pos:column="42"/></operator><name pos:line="34" pos:column="38">cond_result<pos:position pos:line="34" pos:column="49"/></name></expr></argument>)<pos:position pos:line="34" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="51"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="36" pos:column="9">grep_unlock<pos:position pos:line="36" pos:column="20"/></name><argument_list pos:line="36" pos:column="20">()<pos:position pos:line="36" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="23"/></expr_stmt>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

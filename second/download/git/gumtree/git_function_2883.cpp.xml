<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2883.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">chop_last_dir<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">char<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier><modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">remoteurl<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">int<pos:position pos:line="1" pos:column="47"/></name></type> <name pos:line="1" pos:column="48">is_relative<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">rfind<pos:position pos:line="3" pos:column="20"/></name> <init pos:line="3" pos:column="21">= <expr><call><name pos:line="3" pos:column="23">find_last_dir_sep<pos:position pos:line="3" pos:column="40"/></name><argument_list pos:line="3" pos:column="40">(<argument><expr><operator pos:line="3" pos:column="41">*<pos:position pos:line="3" pos:column="42"/></operator><name pos:line="3" pos:column="42">remoteurl<pos:position pos:line="3" pos:column="51"/></name></expr></argument>)<pos:position pos:line="3" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="53"/></decl_stmt>
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><name pos:line="4" pos:column="13">rfind<pos:position pos:line="4" pos:column="18"/></name></expr>)<pos:position pos:line="4" pos:column="19"/></condition><then pos:line="4" pos:column="19"> <block pos:line="4" pos:column="20">{
		<expr_stmt><expr><operator pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></operator><name pos:line="5" pos:column="18">rfind<pos:position pos:line="5" pos:column="23"/></name> <operator pos:line="5" pos:column="24">=<pos:position pos:line="5" pos:column="25"/></operator> <literal type="char" pos:line="5" pos:column="26">'\0'<pos:position pos:line="5" pos:column="30"/></literal></expr>;<pos:position pos:line="5" pos:column="31"/></expr_stmt>
		<return pos:line="6" pos:column="17">return <expr><literal type="number" pos:line="6" pos:column="24">0<pos:position pos:line="6" pos:column="25"/></literal></expr>;<pos:position pos:line="6" pos:column="26"/></return>
	}<pos:position pos:line="7" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="9" pos:column="9">rfind<pos:position pos:line="9" pos:column="14"/></name> <operator pos:line="9" pos:column="15">=<pos:position pos:line="9" pos:column="16"/></operator> <call><name pos:line="9" pos:column="17">strrchr<pos:position pos:line="9" pos:column="24"/></name><argument_list pos:line="9" pos:column="24">(<argument><expr><operator pos:line="9" pos:column="25">*<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="26">remoteurl<pos:position pos:line="9" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="9" pos:column="37">':'<pos:position pos:line="9" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="42"/></expr_stmt>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">rfind<pos:position pos:line="10" pos:column="18"/></name></expr>)<pos:position pos:line="10" pos:column="19"/></condition><then pos:line="10" pos:column="19"> <block pos:line="10" pos:column="20">{
		<expr_stmt><expr><operator pos:line="11" pos:column="17">*<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="18">rfind<pos:position pos:line="11" pos:column="23"/></name> <operator pos:line="11" pos:column="24">=<pos:position pos:line="11" pos:column="25"/></operator> <literal type="char" pos:line="11" pos:column="26">'\0'<pos:position pos:line="11" pos:column="30"/></literal></expr>;<pos:position pos:line="11" pos:column="31"/></expr_stmt>
		<return pos:line="12" pos:column="17">return <expr><literal type="number" pos:line="12" pos:column="24">1<pos:position pos:line="12" pos:column="25"/></literal></expr>;<pos:position pos:line="12" pos:column="26"/></return>
	}<pos:position pos:line="13" pos:column="10"/></block></then></if>

	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">is_relative<pos:position pos:line="15" pos:column="24"/></name> <operator pos:line="15" pos:column="25">||<pos:position pos:line="15" pos:column="27"/></operator> <operator pos:line="15" pos:column="28">!<pos:position pos:line="15" pos:column="29"/></operator><call><name pos:line="15" pos:column="29">strcmp<pos:position pos:line="15" pos:column="35"/></name><argument_list pos:line="15" pos:column="35">(<argument><expr><literal type="string" pos:line="15" pos:column="36">"."<pos:position pos:line="15" pos:column="39"/></literal></expr></argument>, <argument><expr><operator pos:line="15" pos:column="41">*<pos:position pos:line="15" pos:column="42"/></operator><name pos:line="15" pos:column="42">remoteurl<pos:position pos:line="15" pos:column="51"/></name></expr></argument>)<pos:position pos:line="15" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="53"/></condition><then pos:line="15" pos:column="53">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="17">die<pos:position pos:line="16" pos:column="20"/></name><argument_list pos:line="16" pos:column="20">(<argument><expr><call><name pos:line="16" pos:column="21">_<pos:position pos:line="16" pos:column="22"/></name><argument_list pos:line="16" pos:column="22">(<argument><expr><literal type="string" pos:line="16" pos:column="23">"cannot strip one component off url '%s'"<pos:position pos:line="16" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="65"/></argument_list></call></expr></argument>,
			<argument><expr><operator pos:line="17" pos:column="25">*<pos:position pos:line="17" pos:column="26"/></operator><name pos:line="17" pos:column="26">remoteurl<pos:position pos:line="17" pos:column="35"/></name></expr></argument>)<pos:position pos:line="17" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="37"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="19" pos:column="9">free<pos:position pos:line="19" pos:column="13"/></name><argument_list pos:line="19" pos:column="13">(<argument><expr><operator pos:line="19" pos:column="14">*<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="15">remoteurl<pos:position pos:line="19" pos:column="24"/></name></expr></argument>)<pos:position pos:line="19" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="20" pos:column="9">*<pos:position pos:line="20" pos:column="10"/></operator><name pos:line="20" pos:column="10">remoteurl<pos:position pos:line="20" pos:column="19"/></name> <operator pos:line="20" pos:column="20">=<pos:position pos:line="20" pos:column="21"/></operator> <call><name pos:line="20" pos:column="22">xstrdup<pos:position pos:line="20" pos:column="29"/></name><argument_list pos:line="20" pos:column="29">(<argument><expr><literal type="string" pos:line="20" pos:column="30">"."<pos:position pos:line="20" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="35"/></expr_stmt>
	<return pos:line="21" pos:column="9">return <expr><literal type="number" pos:line="21" pos:column="16">0<pos:position pos:line="21" pos:column="17"/></literal></expr>;<pos:position pos:line="21" pos:column="18"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3649_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">check_good_are_ancestors_of_bad<pos:position pos:line="1" pos:column="44"/></name><parameter_list pos:line="1" pos:column="44">(<parameter><decl><type><specifier pos:line="1" pos:column="45">const<pos:position pos:line="1" pos:column="50"/></specifier> <name pos:line="1" pos:column="51">char<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">prefix<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="65">int<pos:position pos:line="1" pos:column="68"/></name></type> <name pos:line="1" pos:column="69">no_checkout<pos:position pos:line="1" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="81"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">filename<pos:position pos:line="3" pos:column="23"/></name> <init pos:line="3" pos:column="24">= <expr><call><name pos:line="3" pos:column="26">git_pathdup<pos:position pos:line="3" pos:column="37"/></name><argument_list pos:line="3" pos:column="37">(<argument><expr><literal type="string" pos:line="3" pos:column="38">"BISECT_ANCESTORS_OK"<pos:position pos:line="3" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="61"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">stat<pos:position pos:line="4" pos:column="20"/></name></name></type> <name pos:line="4" pos:column="21">st<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">fd<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">current_bad_oid<pos:position pos:line="7" pos:column="29"/></name></expr>)<pos:position pos:line="7" pos:column="30"/></condition><then pos:line="7" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="17">die<pos:position pos:line="8" pos:column="20"/></name><argument_list pos:line="8" pos:column="20">(<argument><expr><call><name pos:line="8" pos:column="21">_<pos:position pos:line="8" pos:column="22"/></name><argument_list pos:line="8" pos:column="22">(<argument><expr><literal type="string" pos:line="8" pos:column="23">"a %s revision is needed"<pos:position pos:line="8" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="49"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="8" pos:column="51">term_bad<pos:position pos:line="8" pos:column="59"/></name></expr></argument>)<pos:position pos:line="8" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="61"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="10" pos:column="9">/* Check if file BISECT_ANCESTORS_OK exists. */</comment>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><call><name pos:line="11" pos:column="14">stat<pos:position pos:line="11" pos:column="18"/></name><argument_list pos:line="11" pos:column="18">(<argument><expr><name pos:line="11" pos:column="19">filename<pos:position pos:line="11" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="29">&amp;<pos:position pos:line="11" pos:column="34"/></operator><name pos:line="11" pos:column="30">st<pos:position pos:line="11" pos:column="32"/></name></expr></argument>)<pos:position pos:line="11" pos:column="33"/></argument_list></call> <operator pos:line="11" pos:column="34">&amp;&amp;<pos:position pos:line="11" pos:column="44"/></operator> <call><name pos:line="11" pos:column="37">S_ISREG<pos:position pos:line="11" pos:column="44"/></name><argument_list pos:line="11" pos:column="44">(<argument><expr><name><name pos:line="11" pos:column="45">st<pos:position pos:line="11" pos:column="47"/></name><operator pos:line="11" pos:column="47">.<pos:position pos:line="11" pos:column="48"/></operator><name pos:line="11" pos:column="48">st_mode<pos:position pos:line="11" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="57"/></condition><then pos:line="11" pos:column="57">
		<block type="pseudo"><goto pos:line="12" pos:column="17">goto <name pos:line="12" pos:column="22">done<pos:position pos:line="12" pos:column="26"/></name>;<pos:position pos:line="12" pos:column="27"/></goto></block></then></if>

	<comment type="block" pos:line="14" pos:column="9">/* Bisecting with no good rev is ok. */</comment>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name><name pos:line="15" pos:column="13">good_revs<pos:position pos:line="15" pos:column="22"/></name><operator pos:line="15" pos:column="22">.<pos:position pos:line="15" pos:column="23"/></operator><name pos:line="15" pos:column="23">nr<pos:position pos:line="15" pos:column="25"/></name></name> <operator pos:line="15" pos:column="26">==<pos:position pos:line="15" pos:column="28"/></operator> <literal type="number" pos:line="15" pos:column="29">0<pos:position pos:line="15" pos:column="30"/></literal></expr>)<pos:position pos:line="15" pos:column="31"/></condition><then pos:line="15" pos:column="31">
		<block type="pseudo"><goto pos:line="16" pos:column="17">goto <name pos:line="16" pos:column="22">done<pos:position pos:line="16" pos:column="26"/></name>;<pos:position pos:line="16" pos:column="27"/></goto></block></then></if>

	<comment type="block" pos:line="18" pos:column="9">/* Check if all good revs are ancestor of the bad rev. */</comment>
	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><call><name pos:line="19" pos:column="13">check_ancestors<pos:position pos:line="19" pos:column="28"/></name><argument_list pos:line="19" pos:column="28">(<argument><expr><name pos:line="19" pos:column="29">prefix<pos:position pos:line="19" pos:column="35"/></name></expr></argument>)<pos:position pos:line="19" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="37"/></condition><then pos:line="19" pos:column="37">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="17">check_merge_bases<pos:position pos:line="20" pos:column="34"/></name><argument_list pos:line="20" pos:column="34">(<argument><expr><name pos:line="20" pos:column="35">no_checkout<pos:position pos:line="20" pos:column="46"/></name></expr></argument>)<pos:position pos:line="20" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="48"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="22" pos:column="9">/* Create file BISECT_ANCESTORS_OK. */</comment>
	<expr_stmt><expr><name pos:line="23" pos:column="9">fd<pos:position pos:line="23" pos:column="11"/></name> <operator pos:line="23" pos:column="12">=<pos:position pos:line="23" pos:column="13"/></operator> <call><name pos:line="23" pos:column="14">open<pos:position pos:line="23" pos:column="18"/></name><argument_list pos:line="23" pos:column="18">(<argument><expr><name pos:line="23" pos:column="19">filename<pos:position pos:line="23" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="29">O_CREAT<pos:position pos:line="23" pos:column="36"/></name> <operator pos:line="23" pos:column="37">|<pos:position pos:line="23" pos:column="38"/></operator> <name pos:line="23" pos:column="39">O_TRUNC<pos:position pos:line="23" pos:column="46"/></name> <operator pos:line="23" pos:column="47">|<pos:position pos:line="23" pos:column="48"/></operator> <name pos:line="23" pos:column="49">O_WRONLY<pos:position pos:line="23" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="59">0600<pos:position pos:line="23" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="65"/></expr_stmt>
	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name pos:line="24" pos:column="13">fd<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">&lt;<pos:position pos:line="24" pos:column="20"/></operator> <literal type="number" pos:line="24" pos:column="18">0<pos:position pos:line="24" pos:column="19"/></literal></expr>)<pos:position pos:line="24" pos:column="20"/></condition><then pos:line="24" pos:column="20">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="17">warning_errno<pos:position pos:line="25" pos:column="30"/></name><argument_list pos:line="25" pos:column="30">(<argument><expr><call><name pos:line="25" pos:column="31">_<pos:position pos:line="25" pos:column="32"/></name><argument_list pos:line="25" pos:column="32">(<argument><expr><literal type="string" pos:line="25" pos:column="33">"could not create file '%s'"<pos:position pos:line="25" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="62"/></argument_list></call></expr></argument>,
			      <argument><expr><name pos:line="26" pos:column="31">filename<pos:position pos:line="26" pos:column="39"/></name></expr></argument>)<pos:position pos:line="26" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="41"/></expr_stmt></block></then>
	<else pos:line="27" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="17">close<pos:position pos:line="28" pos:column="22"/></name><argument_list pos:line="28" pos:column="22">(<argument><expr><name pos:line="28" pos:column="23">fd<pos:position pos:line="28" pos:column="25"/></name></expr></argument>)<pos:position pos:line="28" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="27"/></expr_stmt></block></else></if>
 <label><name pos:line="29" pos:column="2">done<pos:position pos:line="29" pos:column="6"/></name>:<pos:position pos:line="29" pos:column="7"/></label>
	<expr_stmt><expr><call><name pos:line="30" pos:column="9">free<pos:position pos:line="30" pos:column="13"/></name><argument_list pos:line="30" pos:column="13">(<argument><expr><name pos:line="30" pos:column="14">filename<pos:position pos:line="30" pos:column="22"/></name></expr></argument>)<pos:position pos:line="30" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="24"/></expr_stmt>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

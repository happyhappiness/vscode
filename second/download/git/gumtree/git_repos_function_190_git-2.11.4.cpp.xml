<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_190_git-2.11.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name><name pos:line="1" pos:column="14">struct<pos:position pos:line="1" pos:column="20"/></name> <name pos:line="1" pos:column="21">submodule<pos:position pos:line="1" pos:column="30"/></name></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">config_from<pos:position pos:line="1" pos:column="43"/></name><parameter_list pos:line="1" pos:column="43">(<parameter><decl><type><name><name pos:line="1" pos:column="44">struct<pos:position pos:line="1" pos:column="50"/></name> <name pos:line="1" pos:column="51">submodule_cache<pos:position pos:line="1" pos:column="66"/></name></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">cache<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>,
		<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name pos:line="2" pos:column="23">unsigned<pos:position pos:line="2" pos:column="31"/></name> <name pos:line="2" pos:column="32">char<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="38">commit_sha1<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="51">const<pos:position pos:line="2" pos:column="56"/></specifier> <name pos:line="2" pos:column="57">char<pos:position pos:line="2" pos:column="61"/></name> <modifier pos:line="2" pos:column="62">*<pos:position pos:line="2" pos:column="63"/></modifier></type><name pos:line="2" pos:column="63">key<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>,
		<parameter><decl><type><name><name pos:line="3" pos:column="17">enum<pos:position pos:line="3" pos:column="21"/></name> <name pos:line="3" pos:column="22">lookup_type<pos:position pos:line="3" pos:column="33"/></name></name></type> <name pos:line="3" pos:column="34">lookup_type<pos:position pos:line="3" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="46"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">strbuf<pos:position pos:line="5" pos:column="22"/></name></name></type> <name pos:line="5" pos:column="23">rev<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><name pos:line="5" pos:column="29">STRBUF_INIT<pos:position pos:line="5" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">unsigned<pos:position pos:line="6" pos:column="17"/></name> <name pos:line="6" pos:column="18">long<pos:position pos:line="6" pos:column="22"/></name></type> <name pos:line="6" pos:column="23">config_size<pos:position pos:line="6" pos:column="34"/></name></decl>;<pos:position pos:line="6" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">config<pos:position pos:line="7" pos:column="21"/></name> <init pos:line="7" pos:column="22">= <expr><name pos:line="7" pos:column="24">NULL<pos:position pos:line="7" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">unsigned<pos:position pos:line="8" pos:column="17"/></name> <name pos:line="8" pos:column="18">char<pos:position pos:line="8" pos:column="22"/></name></type> <name><name pos:line="8" pos:column="23">sha1<pos:position pos:line="8" pos:column="27"/></name><index pos:line="8" pos:column="27">[<expr><literal type="number" pos:line="8" pos:column="28">20<pos:position pos:line="8" pos:column="30"/></literal></expr>]<pos:position pos:line="8" pos:column="31"/></index></name></decl>;<pos:position pos:line="8" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">enum<pos:position pos:line="9" pos:column="13"/></name> <name pos:line="9" pos:column="14">object_type<pos:position pos:line="9" pos:column="25"/></name></name></type> <name pos:line="9" pos:column="26">type<pos:position pos:line="9" pos:column="30"/></name></decl>;<pos:position pos:line="9" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="10" pos:column="9">const<pos:position pos:line="10" pos:column="14"/></specifier> <name><name pos:line="10" pos:column="15">struct<pos:position pos:line="10" pos:column="21"/></name> <name pos:line="10" pos:column="22">submodule<pos:position pos:line="10" pos:column="31"/></name></name> <modifier pos:line="10" pos:column="32">*<pos:position pos:line="10" pos:column="33"/></modifier></type><name pos:line="10" pos:column="33">submodule<pos:position pos:line="10" pos:column="42"/></name> <init pos:line="10" pos:column="43">= <expr><name pos:line="10" pos:column="45">NULL<pos:position pos:line="10" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="50"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="11" pos:column="9">struct<pos:position pos:line="11" pos:column="15"/></name> <name pos:line="11" pos:column="16">parse_config_parameter<pos:position pos:line="11" pos:column="38"/></name></name></type> <name pos:line="11" pos:column="39">parameter<pos:position pos:line="11" pos:column="48"/></name></decl>;<pos:position pos:line="11" pos:column="49"/></decl_stmt>

	<comment type="block" pos:line="13" pos:column="9">/*
	 * If any parameter except the cache is a NULL pointer just
	 * return the first submodule. Can be used to check whether
	 * there are any submodules parsed.
	 */</comment>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><operator pos:line="18" pos:column="13">!<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="14">commit_sha1<pos:position pos:line="18" pos:column="25"/></name> <operator pos:line="18" pos:column="26">||<pos:position pos:line="18" pos:column="28"/></operator> <operator pos:line="18" pos:column="29">!<pos:position pos:line="18" pos:column="30"/></operator><name pos:line="18" pos:column="30">key<pos:position pos:line="18" pos:column="33"/></name></expr>)<pos:position pos:line="18" pos:column="34"/></condition><then pos:line="18" pos:column="34"> <block pos:line="18" pos:column="35">{
		<decl_stmt><decl><type><name><name pos:line="19" pos:column="17">struct<pos:position pos:line="19" pos:column="23"/></name> <name pos:line="19" pos:column="24">hashmap_iter<pos:position pos:line="19" pos:column="36"/></name></name></type> <name pos:line="19" pos:column="37">iter<pos:position pos:line="19" pos:column="41"/></name></decl>;<pos:position pos:line="19" pos:column="42"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="20" pos:column="17">struct<pos:position pos:line="20" pos:column="23"/></name> <name pos:line="20" pos:column="24">submodule_entry<pos:position pos:line="20" pos:column="39"/></name></name> <modifier pos:line="20" pos:column="40">*<pos:position pos:line="20" pos:column="41"/></modifier></type><name pos:line="20" pos:column="41">entry<pos:position pos:line="20" pos:column="46"/></name></decl>;<pos:position pos:line="20" pos:column="47"/></decl_stmt>

		<expr_stmt><expr><name pos:line="22" pos:column="17">entry<pos:position pos:line="22" pos:column="22"/></name> <operator pos:line="22" pos:column="23">=<pos:position pos:line="22" pos:column="24"/></operator> <call><name pos:line="22" pos:column="25">hashmap_iter_first<pos:position pos:line="22" pos:column="43"/></name><argument_list pos:line="22" pos:column="43">(<argument><expr><operator pos:line="22" pos:column="44">&amp;<pos:position pos:line="22" pos:column="49"/></operator><name><name pos:line="22" pos:column="45">cache<pos:position pos:line="22" pos:column="50"/></name><operator pos:line="22" pos:column="50">-&gt;<pos:position pos:line="22" pos:column="55"/></operator><name pos:line="22" pos:column="52">for_name<pos:position pos:line="22" pos:column="60"/></name></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="62">&amp;<pos:position pos:line="22" pos:column="67"/></operator><name pos:line="22" pos:column="63">iter<pos:position pos:line="22" pos:column="67"/></name></expr></argument>)<pos:position pos:line="22" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="69"/></expr_stmt>
		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><operator pos:line="23" pos:column="21">!<pos:position pos:line="23" pos:column="22"/></operator><name pos:line="23" pos:column="22">entry<pos:position pos:line="23" pos:column="27"/></name></expr>)<pos:position pos:line="23" pos:column="28"/></condition><then pos:line="23" pos:column="28">
			<block type="pseudo"><return pos:line="24" pos:column="25">return <expr><name pos:line="24" pos:column="32">NULL<pos:position pos:line="24" pos:column="36"/></name></expr>;<pos:position pos:line="24" pos:column="37"/></return></block></then></if>
		<return pos:line="25" pos:column="17">return <expr><name><name pos:line="25" pos:column="24">entry<pos:position pos:line="25" pos:column="29"/></name><operator pos:line="25" pos:column="29">-&gt;<pos:position pos:line="25" pos:column="34"/></operator><name pos:line="25" pos:column="31">config<pos:position pos:line="25" pos:column="37"/></name></name></expr>;<pos:position pos:line="25" pos:column="38"/></return>
	}<pos:position pos:line="26" pos:column="10"/></block></then></if>

	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><operator pos:line="28" pos:column="13">!<pos:position pos:line="28" pos:column="14"/></operator><call><name pos:line="28" pos:column="14">gitmodule_sha1_from_commit<pos:position pos:line="28" pos:column="40"/></name><argument_list pos:line="28" pos:column="40">(<argument><expr><name pos:line="28" pos:column="41">commit_sha1<pos:position pos:line="28" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="54">sha1<pos:position pos:line="28" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="60">&amp;<pos:position pos:line="28" pos:column="65"/></operator><name pos:line="28" pos:column="61">rev<pos:position pos:line="28" pos:column="64"/></name></expr></argument>)<pos:position pos:line="28" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="66"/></condition><then pos:line="28" pos:column="66">
		<block type="pseudo"><goto pos:line="29" pos:column="17">goto <name pos:line="29" pos:column="22">out<pos:position pos:line="29" pos:column="25"/></name>;<pos:position pos:line="29" pos:column="26"/></goto></block></then></if>

	<switch pos:line="31" pos:column="9">switch <condition pos:line="31" pos:column="16">(<expr><name pos:line="31" pos:column="17">lookup_type<pos:position pos:line="31" pos:column="28"/></name></expr>)<pos:position pos:line="31" pos:column="29"/></condition> <block pos:line="31" pos:column="30">{
	<case pos:line="32" pos:column="9">case <expr><name pos:line="32" pos:column="14">lookup_name<pos:position pos:line="32" pos:column="25"/></name></expr>:<pos:position pos:line="32" pos:column="26"/></case>
		<expr_stmt><expr><name pos:line="33" pos:column="17">submodule<pos:position pos:line="33" pos:column="26"/></name> <operator pos:line="33" pos:column="27">=<pos:position pos:line="33" pos:column="28"/></operator> <call><name pos:line="33" pos:column="29">cache_lookup_name<pos:position pos:line="33" pos:column="46"/></name><argument_list pos:line="33" pos:column="46">(<argument><expr><name pos:line="33" pos:column="47">cache<pos:position pos:line="33" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="54">sha1<pos:position pos:line="33" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="60">key<pos:position pos:line="33" pos:column="63"/></name></expr></argument>)<pos:position pos:line="33" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="65"/></expr_stmt>
		<break pos:line="34" pos:column="17">break;<pos:position pos:line="34" pos:column="23"/></break>
	<case pos:line="35" pos:column="9">case <expr><name pos:line="35" pos:column="14">lookup_path<pos:position pos:line="35" pos:column="25"/></name></expr>:<pos:position pos:line="35" pos:column="26"/></case>
		<expr_stmt><expr><name pos:line="36" pos:column="17">submodule<pos:position pos:line="36" pos:column="26"/></name> <operator pos:line="36" pos:column="27">=<pos:position pos:line="36" pos:column="28"/></operator> <call><name pos:line="36" pos:column="29">cache_lookup_path<pos:position pos:line="36" pos:column="46"/></name><argument_list pos:line="36" pos:column="46">(<argument><expr><name pos:line="36" pos:column="47">cache<pos:position pos:line="36" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="54">sha1<pos:position pos:line="36" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="60">key<pos:position pos:line="36" pos:column="63"/></name></expr></argument>)<pos:position pos:line="36" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="65"/></expr_stmt>
		<break pos:line="37" pos:column="17">break;<pos:position pos:line="37" pos:column="23"/></break>
	}<pos:position pos:line="38" pos:column="10"/></block></switch>
	<if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><name pos:line="39" pos:column="13">submodule<pos:position pos:line="39" pos:column="22"/></name></expr>)<pos:position pos:line="39" pos:column="23"/></condition><then pos:line="39" pos:column="23">
		<block type="pseudo"><goto pos:line="40" pos:column="17">goto <name pos:line="40" pos:column="22">out<pos:position pos:line="40" pos:column="25"/></name>;<pos:position pos:line="40" pos:column="26"/></goto></block></then></if>

	<expr_stmt><expr><name pos:line="42" pos:column="9">config<pos:position pos:line="42" pos:column="15"/></name> <operator pos:line="42" pos:column="16">=<pos:position pos:line="42" pos:column="17"/></operator> <call><name pos:line="42" pos:column="18">read_sha1_file<pos:position pos:line="42" pos:column="32"/></name><argument_list pos:line="42" pos:column="32">(<argument><expr><name pos:line="42" pos:column="33">sha1<pos:position pos:line="42" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="39">&amp;<pos:position pos:line="42" pos:column="44"/></operator><name pos:line="42" pos:column="40">type<pos:position pos:line="42" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="46">&amp;<pos:position pos:line="42" pos:column="51"/></operator><name pos:line="42" pos:column="47">config_size<pos:position pos:line="42" pos:column="58"/></name></expr></argument>)<pos:position pos:line="42" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="60"/></expr_stmt>
	<if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><operator pos:line="43" pos:column="13">!<pos:position pos:line="43" pos:column="14"/></operator><name pos:line="43" pos:column="14">config<pos:position pos:line="43" pos:column="20"/></name> <operator pos:line="43" pos:column="21">||<pos:position pos:line="43" pos:column="23"/></operator> <name pos:line="43" pos:column="24">type<pos:position pos:line="43" pos:column="28"/></name> <operator pos:line="43" pos:column="29">!=<pos:position pos:line="43" pos:column="31"/></operator> <name pos:line="43" pos:column="32">OBJ_BLOB<pos:position pos:line="43" pos:column="40"/></name></expr>)<pos:position pos:line="43" pos:column="41"/></condition><then pos:line="43" pos:column="41">
		<block type="pseudo"><goto pos:line="44" pos:column="17">goto <name pos:line="44" pos:column="22">out<pos:position pos:line="44" pos:column="25"/></name>;<pos:position pos:line="44" pos:column="26"/></goto></block></then></if>

	<comment type="block" pos:line="46" pos:column="9">/* fill the submodule config into the cache */</comment>
	<expr_stmt><expr><name><name pos:line="47" pos:column="9">parameter<pos:position pos:line="47" pos:column="18"/></name><operator pos:line="47" pos:column="18">.<pos:position pos:line="47" pos:column="19"/></operator><name pos:line="47" pos:column="19">cache<pos:position pos:line="47" pos:column="24"/></name></name> <operator pos:line="47" pos:column="25">=<pos:position pos:line="47" pos:column="26"/></operator> <name pos:line="47" pos:column="27">cache<pos:position pos:line="47" pos:column="32"/></name></expr>;<pos:position pos:line="47" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="48" pos:column="9">parameter<pos:position pos:line="48" pos:column="18"/></name><operator pos:line="48" pos:column="18">.<pos:position pos:line="48" pos:column="19"/></operator><name pos:line="48" pos:column="19">commit_sha1<pos:position pos:line="48" pos:column="30"/></name></name> <operator pos:line="48" pos:column="31">=<pos:position pos:line="48" pos:column="32"/></operator> <name pos:line="48" pos:column="33">commit_sha1<pos:position pos:line="48" pos:column="44"/></name></expr>;<pos:position pos:line="48" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="49" pos:column="9">parameter<pos:position pos:line="49" pos:column="18"/></name><operator pos:line="49" pos:column="18">.<pos:position pos:line="49" pos:column="19"/></operator><name pos:line="49" pos:column="19">gitmodules_sha1<pos:position pos:line="49" pos:column="34"/></name></name> <operator pos:line="49" pos:column="35">=<pos:position pos:line="49" pos:column="36"/></operator> <name pos:line="49" pos:column="37">sha1<pos:position pos:line="49" pos:column="41"/></name></expr>;<pos:position pos:line="49" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="50" pos:column="9">parameter<pos:position pos:line="50" pos:column="18"/></name><operator pos:line="50" pos:column="18">.<pos:position pos:line="50" pos:column="19"/></operator><name pos:line="50" pos:column="19">overwrite<pos:position pos:line="50" pos:column="28"/></name></name> <operator pos:line="50" pos:column="29">=<pos:position pos:line="50" pos:column="30"/></operator> <literal type="number" pos:line="50" pos:column="31">0<pos:position pos:line="50" pos:column="32"/></literal></expr>;<pos:position pos:line="50" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="51" pos:column="9">git_config_from_mem<pos:position pos:line="51" pos:column="28"/></name><argument_list pos:line="51" pos:column="28">(<argument><expr><name pos:line="51" pos:column="29">parse_config<pos:position pos:line="51" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="43">CONFIG_ORIGIN_SUBMODULE_BLOB<pos:position pos:line="51" pos:column="71"/></name></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="73">rev<pos:position pos:line="51" pos:column="76"/></name><operator pos:line="51" pos:column="76">.<pos:position pos:line="51" pos:column="77"/></operator><name pos:line="51" pos:column="77">buf<pos:position pos:line="51" pos:column="80"/></name></name></expr></argument>,
			<argument><expr><name pos:line="52" pos:column="25">config<pos:position pos:line="52" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="33">config_size<pos:position pos:line="52" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="52" pos:column="46">&amp;<pos:position pos:line="52" pos:column="51"/></operator><name pos:line="52" pos:column="47">parameter<pos:position pos:line="52" pos:column="56"/></name></expr></argument>)<pos:position pos:line="52" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="58"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="53" pos:column="9">strbuf_release<pos:position pos:line="53" pos:column="23"/></name><argument_list pos:line="53" pos:column="23">(<argument><expr><operator pos:line="53" pos:column="24">&amp;<pos:position pos:line="53" pos:column="29"/></operator><name pos:line="53" pos:column="25">rev<pos:position pos:line="53" pos:column="28"/></name></expr></argument>)<pos:position pos:line="53" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="54" pos:column="9">free<pos:position pos:line="54" pos:column="13"/></name><argument_list pos:line="54" pos:column="13">(<argument><expr><name pos:line="54" pos:column="14">config<pos:position pos:line="54" pos:column="20"/></name></expr></argument>)<pos:position pos:line="54" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="22"/></expr_stmt>

	<switch pos:line="56" pos:column="9">switch <condition pos:line="56" pos:column="16">(<expr><name pos:line="56" pos:column="17">lookup_type<pos:position pos:line="56" pos:column="28"/></name></expr>)<pos:position pos:line="56" pos:column="29"/></condition> <block pos:line="56" pos:column="30">{
	<case pos:line="57" pos:column="9">case <expr><name pos:line="57" pos:column="14">lookup_name<pos:position pos:line="57" pos:column="25"/></name></expr>:<pos:position pos:line="57" pos:column="26"/></case>
		<return pos:line="58" pos:column="17">return <expr><call><name pos:line="58" pos:column="24">cache_lookup_name<pos:position pos:line="58" pos:column="41"/></name><argument_list pos:line="58" pos:column="41">(<argument><expr><name pos:line="58" pos:column="42">cache<pos:position pos:line="58" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="49">sha1<pos:position pos:line="58" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="55">key<pos:position pos:line="58" pos:column="58"/></name></expr></argument>)<pos:position pos:line="58" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="60"/></return>
	<case pos:line="59" pos:column="9">case <expr><name pos:line="59" pos:column="14">lookup_path<pos:position pos:line="59" pos:column="25"/></name></expr>:<pos:position pos:line="59" pos:column="26"/></case>
		<return pos:line="60" pos:column="17">return <expr><call><name pos:line="60" pos:column="24">cache_lookup_path<pos:position pos:line="60" pos:column="41"/></name><argument_list pos:line="60" pos:column="41">(<argument><expr><name pos:line="60" pos:column="42">cache<pos:position pos:line="60" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="49">sha1<pos:position pos:line="60" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="55">key<pos:position pos:line="60" pos:column="58"/></name></expr></argument>)<pos:position pos:line="60" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="60"/></return>
	<default pos:line="61" pos:column="9">default:<pos:position pos:line="61" pos:column="17"/></default>
		<return pos:line="62" pos:column="17">return <expr><name pos:line="62" pos:column="24">NULL<pos:position pos:line="62" pos:column="28"/></name></expr>;<pos:position pos:line="62" pos:column="29"/></return>
	}<pos:position pos:line="63" pos:column="10"/></block></switch>

<label><name pos:line="65" pos:column="1">out<pos:position pos:line="65" pos:column="4"/></name>:<pos:position pos:line="65" pos:column="5"/></label>
	<expr_stmt><expr><call><name pos:line="66" pos:column="9">strbuf_release<pos:position pos:line="66" pos:column="23"/></name><argument_list pos:line="66" pos:column="23">(<argument><expr><operator pos:line="66" pos:column="24">&amp;<pos:position pos:line="66" pos:column="29"/></operator><name pos:line="66" pos:column="25">rev<pos:position pos:line="66" pos:column="28"/></name></expr></argument>)<pos:position pos:line="66" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="67" pos:column="9">free<pos:position pos:line="67" pos:column="13"/></name><argument_list pos:line="67" pos:column="13">(<argument><expr><name pos:line="67" pos:column="14">config<pos:position pos:line="67" pos:column="20"/></name></expr></argument>)<pos:position pos:line="67" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="22"/></expr_stmt>
	<return pos:line="68" pos:column="9">return <expr><name pos:line="68" pos:column="16">submodule<pos:position pos:line="68" pos:column="25"/></name></expr>;<pos:position pos:line="68" pos:column="26"/></return>
}<pos:position pos:line="69" pos:column="2"/></block></function></unit>

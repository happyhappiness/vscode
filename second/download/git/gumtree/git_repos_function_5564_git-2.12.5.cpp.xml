<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5564_git-2.12.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">measure_widths<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name><name pos:line="1" pos:column="28">struct<pos:position pos:line="1" pos:column="34"/></name> <name pos:line="1" pos:column="35">worktree<pos:position pos:line="1" pos:column="43"/></name></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier><modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">wt<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">int<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">abbrev<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="63">int<pos:position pos:line="1" pos:column="66"/></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">maxlen<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>

	<for pos:line="5" pos:column="9">for <control pos:line="5" pos:column="13">(<init><expr><name pos:line="5" pos:column="14">i<pos:position pos:line="5" pos:column="15"/></name> <operator pos:line="5" pos:column="16">=<pos:position pos:line="5" pos:column="17"/></operator> <literal type="number" pos:line="5" pos:column="18">0<pos:position pos:line="5" pos:column="19"/></literal></expr>;<pos:position pos:line="5" pos:column="20"/></init> <condition><expr><name><name pos:line="5" pos:column="21">wt<pos:position pos:line="5" pos:column="23"/></name><index pos:line="5" pos:column="23">[<expr><name pos:line="5" pos:column="24">i<pos:position pos:line="5" pos:column="25"/></name></expr>]<pos:position pos:line="5" pos:column="26"/></index></name></expr>;<pos:position pos:line="5" pos:column="27"/></condition> <incr><expr><name pos:line="5" pos:column="28">i<pos:position pos:line="5" pos:column="29"/></name><operator pos:line="5" pos:column="29">++<pos:position pos:line="5" pos:column="31"/></operator></expr></incr>)<pos:position pos:line="5" pos:column="32"/></control> <block pos:line="5" pos:column="33">{
		<decl_stmt><decl><type><name pos:line="6" pos:column="17">int<pos:position pos:line="6" pos:column="20"/></name></type> <name pos:line="6" pos:column="21">sha1_len<pos:position pos:line="6" pos:column="29"/></name></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="7" pos:column="17">int<pos:position pos:line="7" pos:column="20"/></name></type> <name pos:line="7" pos:column="21">path_len<pos:position pos:line="7" pos:column="29"/></name> <init pos:line="7" pos:column="30">= <expr><call><name pos:line="7" pos:column="32">strlen<pos:position pos:line="7" pos:column="38"/></name><argument_list pos:line="7" pos:column="38">(<argument><expr><name><name pos:line="7" pos:column="39">wt<pos:position pos:line="7" pos:column="41"/></name><index pos:line="7" pos:column="41">[<expr><name pos:line="7" pos:column="42">i<pos:position pos:line="7" pos:column="43"/></name></expr>]<pos:position pos:line="7" pos:column="44"/></index></name><operator pos:line="7" pos:column="44">-&gt;<pos:position pos:line="7" pos:column="49"/></operator><name pos:line="7" pos:column="46">path<pos:position pos:line="7" pos:column="50"/></name></expr></argument>)<pos:position pos:line="7" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="52"/></decl_stmt>

		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><name pos:line="9" pos:column="21">path_len<pos:position pos:line="9" pos:column="29"/></name> <operator pos:line="9" pos:column="30">&gt;<pos:position pos:line="9" pos:column="34"/></operator> <operator pos:line="9" pos:column="32">*<pos:position pos:line="9" pos:column="33"/></operator><name pos:line="9" pos:column="33">maxlen<pos:position pos:line="9" pos:column="39"/></name></expr>)<pos:position pos:line="9" pos:column="40"/></condition><then pos:line="9" pos:column="40">
			<block type="pseudo"><expr_stmt><expr><operator pos:line="10" pos:column="25">*<pos:position pos:line="10" pos:column="26"/></operator><name pos:line="10" pos:column="26">maxlen<pos:position pos:line="10" pos:column="32"/></name> <operator pos:line="10" pos:column="33">=<pos:position pos:line="10" pos:column="34"/></operator> <name pos:line="10" pos:column="35">path_len<pos:position pos:line="10" pos:column="43"/></name></expr>;<pos:position pos:line="10" pos:column="44"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="11" pos:column="17">sha1_len<pos:position pos:line="11" pos:column="25"/></name> <operator pos:line="11" pos:column="26">=<pos:position pos:line="11" pos:column="27"/></operator> <call><name pos:line="11" pos:column="28">strlen<pos:position pos:line="11" pos:column="34"/></name><argument_list pos:line="11" pos:column="34">(<argument><expr><call><name pos:line="11" pos:column="35">find_unique_abbrev<pos:position pos:line="11" pos:column="53"/></name><argument_list pos:line="11" pos:column="53">(<argument><expr><name><name pos:line="11" pos:column="54">wt<pos:position pos:line="11" pos:column="56"/></name><index pos:line="11" pos:column="56">[<expr><name pos:line="11" pos:column="57">i<pos:position pos:line="11" pos:column="58"/></name></expr>]<pos:position pos:line="11" pos:column="59"/></index></name><operator pos:line="11" pos:column="59">-&gt;<pos:position pos:line="11" pos:column="64"/></operator><name pos:line="11" pos:column="61">head_sha1<pos:position pos:line="11" pos:column="70"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="72">*<pos:position pos:line="11" pos:column="73"/></operator><name pos:line="11" pos:column="73">abbrev<pos:position pos:line="11" pos:column="79"/></name></expr></argument>)<pos:position pos:line="11" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="82"/></expr_stmt>
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><name pos:line="12" pos:column="21">sha1_len<pos:position pos:line="12" pos:column="29"/></name> <operator pos:line="12" pos:column="30">&gt;<pos:position pos:line="12" pos:column="34"/></operator> <operator pos:line="12" pos:column="32">*<pos:position pos:line="12" pos:column="33"/></operator><name pos:line="12" pos:column="33">abbrev<pos:position pos:line="12" pos:column="39"/></name></expr>)<pos:position pos:line="12" pos:column="40"/></condition><then pos:line="12" pos:column="40">
			<block type="pseudo"><expr_stmt><expr><operator pos:line="13" pos:column="25">*<pos:position pos:line="13" pos:column="26"/></operator><name pos:line="13" pos:column="26">abbrev<pos:position pos:line="13" pos:column="32"/></name> <operator pos:line="13" pos:column="33">=<pos:position pos:line="13" pos:column="34"/></operator> <name pos:line="13" pos:column="35">sha1_len<pos:position pos:line="13" pos:column="43"/></name></expr>;<pos:position pos:line="13" pos:column="44"/></expr_stmt></block></then></if>
	}<pos:position pos:line="14" pos:column="10"/></block></for>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

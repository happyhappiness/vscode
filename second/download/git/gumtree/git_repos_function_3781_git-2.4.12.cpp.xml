<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3781_git-2.4.12.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">merge_one_change_manual<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name><name pos:line="1" pos:column="36">struct<pos:position pos:line="1" pos:column="42"/></name> <name pos:line="1" pos:column="43">notes_merge_options<pos:position pos:line="1" pos:column="62"/></name></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">o<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>,
				   <parameter><decl><type><name><name pos:line="2" pos:column="36">struct<pos:position pos:line="2" pos:column="42"/></name> <name pos:line="2" pos:column="43">notes_merge_pair<pos:position pos:line="2" pos:column="59"/></name></name> <modifier pos:line="2" pos:column="60">*<pos:position pos:line="2" pos:column="61"/></modifier></type><name pos:line="2" pos:column="61">p<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>,
				   <parameter><decl><type><name><name pos:line="3" pos:column="36">struct<pos:position pos:line="3" pos:column="42"/></name> <name pos:line="3" pos:column="43">notes_tree<pos:position pos:line="3" pos:column="53"/></name></name> <modifier pos:line="3" pos:column="54">*<pos:position pos:line="3" pos:column="55"/></modifier></type><name pos:line="3" pos:column="55">t<pos:position pos:line="3" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="57"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">lref<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><ternary><condition><expr><name><name pos:line="5" pos:column="28">o<pos:position pos:line="5" pos:column="29"/></name><operator pos:line="5" pos:column="29">-&gt;<pos:position pos:line="5" pos:column="34"/></operator><name pos:line="5" pos:column="31">local_ref<pos:position pos:line="5" pos:column="40"/></name></name></expr> ?<pos:position pos:line="5" pos:column="42"/></condition><then pos:line="5" pos:column="42"> <expr><name><name pos:line="5" pos:column="43">o<pos:position pos:line="5" pos:column="44"/></name><operator pos:line="5" pos:column="44">-&gt;<pos:position pos:line="5" pos:column="49"/></operator><name pos:line="5" pos:column="46">local_ref<pos:position pos:line="5" pos:column="55"/></name></name></expr> <pos:position pos:line="5" pos:column="56"/></then><else pos:line="5" pos:column="56">: <expr><literal type="string" pos:line="5" pos:column="58">"local version"<pos:position pos:line="5" pos:column="73"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="5" pos:column="74"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">rref<pos:position pos:line="6" pos:column="25"/></name> <init pos:line="6" pos:column="26">= <expr><ternary><condition><expr><name><name pos:line="6" pos:column="28">o<pos:position pos:line="6" pos:column="29"/></name><operator pos:line="6" pos:column="29">-&gt;<pos:position pos:line="6" pos:column="34"/></operator><name pos:line="6" pos:column="31">remote_ref<pos:position pos:line="6" pos:column="41"/></name></name></expr> ?<pos:position pos:line="6" pos:column="43"/></condition><then pos:line="6" pos:column="43"> <expr><name><name pos:line="6" pos:column="44">o<pos:position pos:line="6" pos:column="45"/></name><operator pos:line="6" pos:column="45">-&gt;<pos:position pos:line="6" pos:column="50"/></operator><name pos:line="6" pos:column="47">remote_ref<pos:position pos:line="6" pos:column="57"/></name></name></expr> <pos:position pos:line="6" pos:column="58"/></then><else pos:line="6" pos:column="58">: <expr><literal type="string" pos:line="6" pos:column="60">"remote version"<pos:position pos:line="6" pos:column="76"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="6" pos:column="77"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="8" pos:column="9">trace_printf<pos:position pos:line="8" pos:column="21"/></name><argument_list pos:line="8" pos:column="21">(<argument><expr><literal type="string" pos:line="8" pos:column="22">"\t\t\tmerge_one_change_manual(obj = %.7s, base = %.7s, "<pos:position pos:line="8" pos:column="79"/></literal>
	       <literal type="string" pos:line="9" pos:column="16">"local = %.7s, remote = %.7s)\n"<pos:position pos:line="9" pos:column="48"/></literal></expr></argument>,
	       <argument><expr><call><name pos:line="10" pos:column="16">sha1_to_hex<pos:position pos:line="10" pos:column="27"/></name><argument_list pos:line="10" pos:column="27">(<argument><expr><name><name pos:line="10" pos:column="28">p<pos:position pos:line="10" pos:column="29"/></name><operator pos:line="10" pos:column="29">-&gt;<pos:position pos:line="10" pos:column="34"/></operator><name pos:line="10" pos:column="31">obj<pos:position pos:line="10" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="35"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="10" pos:column="37">sha1_to_hex<pos:position pos:line="10" pos:column="48"/></name><argument_list pos:line="10" pos:column="48">(<argument><expr><name><name pos:line="10" pos:column="49">p<pos:position pos:line="10" pos:column="50"/></name><operator pos:line="10" pos:column="50">-&gt;<pos:position pos:line="10" pos:column="55"/></operator><name pos:line="10" pos:column="52">base<pos:position pos:line="10" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="57"/></argument_list></call></expr></argument>,
	       <argument><expr><call><name pos:line="11" pos:column="16">sha1_to_hex<pos:position pos:line="11" pos:column="27"/></name><argument_list pos:line="11" pos:column="27">(<argument><expr><name><name pos:line="11" pos:column="28">p<pos:position pos:line="11" pos:column="29"/></name><operator pos:line="11" pos:column="29">-&gt;<pos:position pos:line="11" pos:column="34"/></operator><name pos:line="11" pos:column="31">local<pos:position pos:line="11" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="37"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="11" pos:column="39">sha1_to_hex<pos:position pos:line="11" pos:column="50"/></name><argument_list pos:line="11" pos:column="50">(<argument><expr><name><name pos:line="11" pos:column="51">p<pos:position pos:line="11" pos:column="52"/></name><operator pos:line="11" pos:column="52">-&gt;<pos:position pos:line="11" pos:column="57"/></operator><name pos:line="11" pos:column="54">remote<pos:position pos:line="11" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="63"/></expr_stmt>

	<comment type="block" pos:line="13" pos:column="9">/* add "Conflicts:" section to commit message first time through */</comment>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">!<pos:position pos:line="14" pos:column="14"/></operator><name><name pos:line="14" pos:column="14">o<pos:position pos:line="14" pos:column="15"/></name><operator pos:line="14" pos:column="15">-&gt;<pos:position pos:line="14" pos:column="20"/></operator><name pos:line="14" pos:column="17">has_worktree<pos:position pos:line="14" pos:column="29"/></name></name></expr>)<pos:position pos:line="14" pos:column="30"/></condition><then pos:line="14" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="17">strbuf_addstr<pos:position pos:line="15" pos:column="30"/></name><argument_list pos:line="15" pos:column="30">(<argument><expr><operator pos:line="15" pos:column="31">&amp;<pos:position pos:line="15" pos:column="36"/></operator><operator pos:line="15" pos:column="32">(<pos:position pos:line="15" pos:column="33"/></operator><name><name pos:line="15" pos:column="33">o<pos:position pos:line="15" pos:column="34"/></name><operator pos:line="15" pos:column="34">-&gt;<pos:position pos:line="15" pos:column="39"/></operator><name pos:line="15" pos:column="36">commit_msg<pos:position pos:line="15" pos:column="46"/></name></name><operator pos:line="15" pos:column="46">)<pos:position pos:line="15" pos:column="47"/></operator></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="49">"\n\nConflicts:\n"<pos:position pos:line="15" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="69"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="17" pos:column="9">strbuf_addf<pos:position pos:line="17" pos:column="20"/></name><argument_list pos:line="17" pos:column="20">(<argument><expr><operator pos:line="17" pos:column="21">&amp;<pos:position pos:line="17" pos:column="26"/></operator><operator pos:line="17" pos:column="22">(<pos:position pos:line="17" pos:column="23"/></operator><name><name pos:line="17" pos:column="23">o<pos:position pos:line="17" pos:column="24"/></name><operator pos:line="17" pos:column="24">-&gt;<pos:position pos:line="17" pos:column="29"/></operator><name pos:line="17" pos:column="26">commit_msg<pos:position pos:line="17" pos:column="36"/></name></name><operator pos:line="17" pos:column="36">)<pos:position pos:line="17" pos:column="37"/></operator></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="39">"\t%s\n"<pos:position pos:line="17" pos:column="47"/></literal></expr></argument>, <argument><expr><call><name pos:line="17" pos:column="49">sha1_to_hex<pos:position pos:line="17" pos:column="60"/></name><argument_list pos:line="17" pos:column="60">(<argument><expr><name><name pos:line="17" pos:column="61">p<pos:position pos:line="17" pos:column="62"/></name><operator pos:line="17" pos:column="62">-&gt;<pos:position pos:line="17" pos:column="67"/></operator><name pos:line="17" pos:column="64">obj<pos:position pos:line="17" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="70"/></expr_stmt>

	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name><name pos:line="19" pos:column="13">o<pos:position pos:line="19" pos:column="14"/></name><operator pos:line="19" pos:column="14">-&gt;<pos:position pos:line="19" pos:column="19"/></operator><name pos:line="19" pos:column="16">verbosity<pos:position pos:line="19" pos:column="25"/></name></name> <operator pos:line="19" pos:column="26">&gt;=<pos:position pos:line="19" pos:column="31"/></operator> <literal type="number" pos:line="19" pos:column="29">2<pos:position pos:line="19" pos:column="30"/></literal></expr>)<pos:position pos:line="19" pos:column="31"/></condition><then pos:line="19" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="17">printf<pos:position pos:line="20" pos:column="23"/></name><argument_list pos:line="20" pos:column="23">(<argument><expr><literal type="string" pos:line="20" pos:column="24">"Auto-merging notes for %s\n"<pos:position pos:line="20" pos:column="53"/></literal></expr></argument>, <argument><expr><call><name pos:line="20" pos:column="55">sha1_to_hex<pos:position pos:line="20" pos:column="66"/></name><argument_list pos:line="20" pos:column="66">(<argument><expr><name><name pos:line="20" pos:column="67">p<pos:position pos:line="20" pos:column="68"/></name><operator pos:line="20" pos:column="68">-&gt;<pos:position pos:line="20" pos:column="73"/></operator><name pos:line="20" pos:column="70">obj<pos:position pos:line="20" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="76"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="21" pos:column="9">check_notes_merge_worktree<pos:position pos:line="21" pos:column="35"/></name><argument_list pos:line="21" pos:column="35">(<argument><expr><name pos:line="21" pos:column="36">o<pos:position pos:line="21" pos:column="37"/></name></expr></argument>)<pos:position pos:line="21" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="39"/></expr_stmt>
	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><call><name pos:line="22" pos:column="13">is_null_sha1<pos:position pos:line="22" pos:column="25"/></name><argument_list pos:line="22" pos:column="25">(<argument><expr><name><name pos:line="22" pos:column="26">p<pos:position pos:line="22" pos:column="27"/></name><operator pos:line="22" pos:column="27">-&gt;<pos:position pos:line="22" pos:column="32"/></operator><name pos:line="22" pos:column="29">local<pos:position pos:line="22" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="36"/></condition><then pos:line="22" pos:column="36"> <block pos:line="22" pos:column="37">{
		<comment type="block" pos:line="23" pos:column="17">/* D/F conflict, checkout p-&gt;remote */</comment>
		<expr_stmt><expr><call><name pos:line="24" pos:column="17">assert<pos:position pos:line="24" pos:column="23"/></name><argument_list pos:line="24" pos:column="23">(<argument><expr><operator pos:line="24" pos:column="24">!<pos:position pos:line="24" pos:column="25"/></operator><call><name pos:line="24" pos:column="25">is_null_sha1<pos:position pos:line="24" pos:column="37"/></name><argument_list pos:line="24" pos:column="37">(<argument><expr><name><name pos:line="24" pos:column="38">p<pos:position pos:line="24" pos:column="39"/></name><operator pos:line="24" pos:column="39">-&gt;<pos:position pos:line="24" pos:column="44"/></operator><name pos:line="24" pos:column="41">remote<pos:position pos:line="24" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="50"/></expr_stmt>
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><name><name pos:line="25" pos:column="21">o<pos:position pos:line="25" pos:column="22"/></name><operator pos:line="25" pos:column="22">-&gt;<pos:position pos:line="25" pos:column="27"/></operator><name pos:line="25" pos:column="24">verbosity<pos:position pos:line="25" pos:column="33"/></name></name> <operator pos:line="25" pos:column="34">&gt;=<pos:position pos:line="25" pos:column="39"/></operator> <literal type="number" pos:line="25" pos:column="37">1<pos:position pos:line="25" pos:column="38"/></literal></expr>)<pos:position pos:line="25" pos:column="39"/></condition><then pos:line="25" pos:column="39">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="25">printf<pos:position pos:line="26" pos:column="31"/></name><argument_list pos:line="26" pos:column="31">(<argument><expr><literal type="string" pos:line="26" pos:column="32">"CONFLICT (delete/modify): Notes for object %s "<pos:position pos:line="26" pos:column="80"/></literal>
				<literal type="string" pos:line="27" pos:column="33">"deleted in %s and modified in %s. Version from %s "<pos:position pos:line="27" pos:column="85"/></literal>
				<literal type="string" pos:line="28" pos:column="33">"left in tree.\n"<pos:position pos:line="28" pos:column="50"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="29" pos:column="33">sha1_to_hex<pos:position pos:line="29" pos:column="44"/></name><argument_list pos:line="29" pos:column="44">(<argument><expr><name><name pos:line="29" pos:column="45">p<pos:position pos:line="29" pos:column="46"/></name><operator pos:line="29" pos:column="46">-&gt;<pos:position pos:line="29" pos:column="51"/></operator><name pos:line="29" pos:column="48">obj<pos:position pos:line="29" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="29" pos:column="54">lref<pos:position pos:line="29" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="60">rref<pos:position pos:line="29" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="66">rref<pos:position pos:line="29" pos:column="70"/></name></expr></argument>)<pos:position pos:line="29" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="72"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="30" pos:column="17">write_note_to_worktree<pos:position pos:line="30" pos:column="39"/></name><argument_list pos:line="30" pos:column="39">(<argument><expr><name><name pos:line="30" pos:column="40">p<pos:position pos:line="30" pos:column="41"/></name><operator pos:line="30" pos:column="41">-&gt;<pos:position pos:line="30" pos:column="46"/></operator><name pos:line="30" pos:column="43">obj<pos:position pos:line="30" pos:column="46"/></name></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="48">p<pos:position pos:line="30" pos:column="49"/></name><operator pos:line="30" pos:column="49">-&gt;<pos:position pos:line="30" pos:column="54"/></operator><name pos:line="30" pos:column="51">remote<pos:position pos:line="30" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="59"/></expr_stmt>
	}<pos:position pos:line="31" pos:column="10"/></block></then> <elseif pos:line="31" pos:column="11">else <if pos:line="31" pos:column="16">if <condition pos:line="31" pos:column="19">(<expr><call><name pos:line="31" pos:column="20">is_null_sha1<pos:position pos:line="31" pos:column="32"/></name><argument_list pos:line="31" pos:column="32">(<argument><expr><name><name pos:line="31" pos:column="33">p<pos:position pos:line="31" pos:column="34"/></name><operator pos:line="31" pos:column="34">-&gt;<pos:position pos:line="31" pos:column="39"/></operator><name pos:line="31" pos:column="36">remote<pos:position pos:line="31" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="44"/></condition><then pos:line="31" pos:column="44"> <block pos:line="31" pos:column="45">{
		<comment type="block" pos:line="32" pos:column="17">/* D/F conflict, checkout p-&gt;local */</comment>
		<expr_stmt><expr><call><name pos:line="33" pos:column="17">assert<pos:position pos:line="33" pos:column="23"/></name><argument_list pos:line="33" pos:column="23">(<argument><expr><operator pos:line="33" pos:column="24">!<pos:position pos:line="33" pos:column="25"/></operator><call><name pos:line="33" pos:column="25">is_null_sha1<pos:position pos:line="33" pos:column="37"/></name><argument_list pos:line="33" pos:column="37">(<argument><expr><name><name pos:line="33" pos:column="38">p<pos:position pos:line="33" pos:column="39"/></name><operator pos:line="33" pos:column="39">-&gt;<pos:position pos:line="33" pos:column="44"/></operator><name pos:line="33" pos:column="41">local<pos:position pos:line="33" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="33" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="49"/></expr_stmt>
		<if pos:line="34" pos:column="17">if <condition pos:line="34" pos:column="20">(<expr><name><name pos:line="34" pos:column="21">o<pos:position pos:line="34" pos:column="22"/></name><operator pos:line="34" pos:column="22">-&gt;<pos:position pos:line="34" pos:column="27"/></operator><name pos:line="34" pos:column="24">verbosity<pos:position pos:line="34" pos:column="33"/></name></name> <operator pos:line="34" pos:column="34">&gt;=<pos:position pos:line="34" pos:column="39"/></operator> <literal type="number" pos:line="34" pos:column="37">1<pos:position pos:line="34" pos:column="38"/></literal></expr>)<pos:position pos:line="34" pos:column="39"/></condition><then pos:line="34" pos:column="39">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="35" pos:column="25">printf<pos:position pos:line="35" pos:column="31"/></name><argument_list pos:line="35" pos:column="31">(<argument><expr><literal type="string" pos:line="35" pos:column="32">"CONFLICT (delete/modify): Notes for object %s "<pos:position pos:line="35" pos:column="80"/></literal>
				<literal type="string" pos:line="36" pos:column="33">"deleted in %s and modified in %s. Version from %s "<pos:position pos:line="36" pos:column="85"/></literal>
				<literal type="string" pos:line="37" pos:column="33">"left in tree.\n"<pos:position pos:line="37" pos:column="50"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="38" pos:column="33">sha1_to_hex<pos:position pos:line="38" pos:column="44"/></name><argument_list pos:line="38" pos:column="44">(<argument><expr><name><name pos:line="38" pos:column="45">p<pos:position pos:line="38" pos:column="46"/></name><operator pos:line="38" pos:column="46">-&gt;<pos:position pos:line="38" pos:column="51"/></operator><name pos:line="38" pos:column="48">obj<pos:position pos:line="38" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="38" pos:column="54">rref<pos:position pos:line="38" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="60">lref<pos:position pos:line="38" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="66">lref<pos:position pos:line="38" pos:column="70"/></name></expr></argument>)<pos:position pos:line="38" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="72"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="39" pos:column="17">write_note_to_worktree<pos:position pos:line="39" pos:column="39"/></name><argument_list pos:line="39" pos:column="39">(<argument><expr><name><name pos:line="39" pos:column="40">p<pos:position pos:line="39" pos:column="41"/></name><operator pos:line="39" pos:column="41">-&gt;<pos:position pos:line="39" pos:column="46"/></operator><name pos:line="39" pos:column="43">obj<pos:position pos:line="39" pos:column="46"/></name></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="48">p<pos:position pos:line="39" pos:column="49"/></name><operator pos:line="39" pos:column="49">-&gt;<pos:position pos:line="39" pos:column="54"/></operator><name pos:line="39" pos:column="51">local<pos:position pos:line="39" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="58"/></expr_stmt>
	}<pos:position pos:line="40" pos:column="10"/></block></then></if></elseif> <else pos:line="40" pos:column="11">else <block pos:line="40" pos:column="16">{
		<comment type="block" pos:line="41" pos:column="17">/* "regular" conflict, checkout result of ll_merge() */</comment>
		<decl_stmt><decl><type><specifier pos:line="42" pos:column="17">const<pos:position pos:line="42" pos:column="22"/></specifier> <name pos:line="42" pos:column="23">char<pos:position pos:line="42" pos:column="27"/></name> <modifier pos:line="42" pos:column="28">*<pos:position pos:line="42" pos:column="29"/></modifier></type><name pos:line="42" pos:column="29">reason<pos:position pos:line="42" pos:column="35"/></name> <init pos:line="42" pos:column="36">= <expr><literal type="string" pos:line="42" pos:column="38">"content"<pos:position pos:line="42" pos:column="47"/></literal></expr></init></decl>;<pos:position pos:line="42" pos:column="48"/></decl_stmt>
		<if pos:line="43" pos:column="17">if <condition pos:line="43" pos:column="20">(<expr><call><name pos:line="43" pos:column="21">is_null_sha1<pos:position pos:line="43" pos:column="33"/></name><argument_list pos:line="43" pos:column="33">(<argument><expr><name><name pos:line="43" pos:column="34">p<pos:position pos:line="43" pos:column="35"/></name><operator pos:line="43" pos:column="35">-&gt;<pos:position pos:line="43" pos:column="40"/></operator><name pos:line="43" pos:column="37">base<pos:position pos:line="43" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="43"/></condition><then pos:line="43" pos:column="43">
			<block type="pseudo"><expr_stmt><expr><name pos:line="44" pos:column="25">reason<pos:position pos:line="44" pos:column="31"/></name> <operator pos:line="44" pos:column="32">=<pos:position pos:line="44" pos:column="33"/></operator> <literal type="string" pos:line="44" pos:column="34">"add/add"<pos:position pos:line="44" pos:column="43"/></literal></expr>;<pos:position pos:line="44" pos:column="44"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="45" pos:column="17">assert<pos:position pos:line="45" pos:column="23"/></name><argument_list pos:line="45" pos:column="23">(<argument><expr><operator pos:line="45" pos:column="24">!<pos:position pos:line="45" pos:column="25"/></operator><call><name pos:line="45" pos:column="25">is_null_sha1<pos:position pos:line="45" pos:column="37"/></name><argument_list pos:line="45" pos:column="37">(<argument><expr><name><name pos:line="45" pos:column="38">p<pos:position pos:line="45" pos:column="39"/></name><operator pos:line="45" pos:column="39">-&gt;<pos:position pos:line="45" pos:column="44"/></operator><name pos:line="45" pos:column="41">local<pos:position pos:line="45" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="45" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="46" pos:column="17">assert<pos:position pos:line="46" pos:column="23"/></name><argument_list pos:line="46" pos:column="23">(<argument><expr><operator pos:line="46" pos:column="24">!<pos:position pos:line="46" pos:column="25"/></operator><call><name pos:line="46" pos:column="25">is_null_sha1<pos:position pos:line="46" pos:column="37"/></name><argument_list pos:line="46" pos:column="37">(<argument><expr><name><name pos:line="46" pos:column="38">p<pos:position pos:line="46" pos:column="39"/></name><operator pos:line="46" pos:column="39">-&gt;<pos:position pos:line="46" pos:column="44"/></operator><name pos:line="46" pos:column="41">remote<pos:position pos:line="46" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="46" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="50"/></expr_stmt>
		<if pos:line="47" pos:column="17">if <condition pos:line="47" pos:column="20">(<expr><name><name pos:line="47" pos:column="21">o<pos:position pos:line="47" pos:column="22"/></name><operator pos:line="47" pos:column="22">-&gt;<pos:position pos:line="47" pos:column="27"/></operator><name pos:line="47" pos:column="24">verbosity<pos:position pos:line="47" pos:column="33"/></name></name> <operator pos:line="47" pos:column="34">&gt;=<pos:position pos:line="47" pos:column="39"/></operator> <literal type="number" pos:line="47" pos:column="37">1<pos:position pos:line="47" pos:column="38"/></literal></expr>)<pos:position pos:line="47" pos:column="39"/></condition><then pos:line="47" pos:column="39">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="48" pos:column="25">printf<pos:position pos:line="48" pos:column="31"/></name><argument_list pos:line="48" pos:column="31">(<argument><expr><literal type="string" pos:line="48" pos:column="32">"CONFLICT (%s): Merge conflict in notes for "<pos:position pos:line="48" pos:column="77"/></literal>
				<literal type="string" pos:line="49" pos:column="33">"object %s\n"<pos:position pos:line="49" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="49" pos:column="48">reason<pos:position pos:line="49" pos:column="54"/></name></expr></argument>, <argument><expr><call><name pos:line="49" pos:column="56">sha1_to_hex<pos:position pos:line="49" pos:column="67"/></name><argument_list pos:line="49" pos:column="67">(<argument><expr><name><name pos:line="49" pos:column="68">p<pos:position pos:line="49" pos:column="69"/></name><operator pos:line="49" pos:column="69">-&gt;<pos:position pos:line="49" pos:column="74"/></operator><name pos:line="49" pos:column="71">obj<pos:position pos:line="49" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="49" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="77"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="50" pos:column="17">ll_merge_in_worktree<pos:position pos:line="50" pos:column="37"/></name><argument_list pos:line="50" pos:column="37">(<argument><expr><name pos:line="50" pos:column="38">o<pos:position pos:line="50" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="41">p<pos:position pos:line="50" pos:column="42"/></name></expr></argument>)<pos:position pos:line="50" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="44"/></expr_stmt>
	}<pos:position pos:line="51" pos:column="10"/></block></else></if>

	<expr_stmt><expr><call><name pos:line="53" pos:column="9">trace_printf<pos:position pos:line="53" pos:column="21"/></name><argument_list pos:line="53" pos:column="21">(<argument><expr><literal type="string" pos:line="53" pos:column="22">"\t\t\tremoving from partial merge result\n"<pos:position pos:line="53" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="68"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="54" pos:column="9">remove_note<pos:position pos:line="54" pos:column="20"/></name><argument_list pos:line="54" pos:column="20">(<argument><expr><name pos:line="54" pos:column="21">t<pos:position pos:line="54" pos:column="22"/></name></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="24">p<pos:position pos:line="54" pos:column="25"/></name><operator pos:line="54" pos:column="25">-&gt;<pos:position pos:line="54" pos:column="30"/></operator><name pos:line="54" pos:column="27">obj<pos:position pos:line="54" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="32"/></expr_stmt>

	<return pos:line="56" pos:column="9">return <expr><literal type="number" pos:line="56" pos:column="16">1<pos:position pos:line="56" pos:column="17"/></literal></expr>;<pos:position pos:line="56" pos:column="18"/></return>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

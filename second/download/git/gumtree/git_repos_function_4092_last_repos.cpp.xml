<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4092_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">udt_close_if_finished<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name><name pos:line="1" pos:column="35">struct<pos:position pos:line="1" pos:column="41"/></name> <name pos:line="1" pos:column="42">unidirectional_transfer<pos:position pos:line="1" pos:column="65"/></name></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">t<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><call><name pos:line="3" pos:column="13">STATE_NEEDS_CLOSING<pos:position pos:line="3" pos:column="32"/></name><argument_list pos:line="3" pos:column="32">(<argument><expr><name><name pos:line="3" pos:column="33">t<pos:position pos:line="3" pos:column="34"/></name><operator pos:line="3" pos:column="34">-&gt;<pos:position pos:line="3" pos:column="39"/></operator><name pos:line="3" pos:column="36">state<pos:position pos:line="3" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="3" pos:column="42"/></argument_list></call> <operator pos:line="3" pos:column="43">&amp;&amp;<pos:position pos:line="3" pos:column="53"/></operator> <operator pos:line="3" pos:column="46">!<pos:position pos:line="3" pos:column="47"/></operator><name><name pos:line="3" pos:column="47">t<pos:position pos:line="3" pos:column="48"/></name><operator pos:line="3" pos:column="48">-&gt;<pos:position pos:line="3" pos:column="53"/></operator><name pos:line="3" pos:column="50">bufuse<pos:position pos:line="3" pos:column="56"/></name></name></expr>)<pos:position pos:line="3" pos:column="57"/></condition><then pos:line="3" pos:column="57"> <block pos:line="3" pos:column="58">{
		<expr_stmt><expr><name><name pos:line="4" pos:column="17">t<pos:position pos:line="4" pos:column="18"/></name><operator pos:line="4" pos:column="18">-&gt;<pos:position pos:line="4" pos:column="23"/></operator><name pos:line="4" pos:column="20">state<pos:position pos:line="4" pos:column="25"/></name></name> <operator pos:line="4" pos:column="26">=<pos:position pos:line="4" pos:column="27"/></operator> <name pos:line="4" pos:column="28">SSTATE_FINISHED<pos:position pos:line="4" pos:column="43"/></name></expr>;<pos:position pos:line="4" pos:column="44"/></expr_stmt>
		<if pos:line="5" pos:column="17">if <condition pos:line="5" pos:column="20">(<expr><name><name pos:line="5" pos:column="21">t<pos:position pos:line="5" pos:column="22"/></name><operator pos:line="5" pos:column="22">-&gt;<pos:position pos:line="5" pos:column="27"/></operator><name pos:line="5" pos:column="24">dest_is_sock<pos:position pos:line="5" pos:column="36"/></name></name></expr>)<pos:position pos:line="5" pos:column="37"/></condition><then pos:line="5" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="25">shutdown<pos:position pos:line="6" pos:column="33"/></name><argument_list pos:line="6" pos:column="33">(<argument><expr><name><name pos:line="6" pos:column="34">t<pos:position pos:line="6" pos:column="35"/></name><operator pos:line="6" pos:column="35">-&gt;<pos:position pos:line="6" pos:column="40"/></operator><name pos:line="6" pos:column="37">dest<pos:position pos:line="6" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="43">SHUT_WR<pos:position pos:line="6" pos:column="50"/></name></expr></argument>)<pos:position pos:line="6" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="52"/></expr_stmt></block></then>
		<else pos:line="7" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="25">close<pos:position pos:line="8" pos:column="30"/></name><argument_list pos:line="8" pos:column="30">(<argument><expr><name><name pos:line="8" pos:column="31">t<pos:position pos:line="8" pos:column="32"/></name><operator pos:line="8" pos:column="32">-&gt;<pos:position pos:line="8" pos:column="37"/></operator><name pos:line="8" pos:column="34">dest<pos:position pos:line="8" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="40"/></expr_stmt></block></else></if>
		<expr_stmt><expr><call><name pos:line="9" pos:column="17">transfer_debug<pos:position pos:line="9" pos:column="31"/></name><argument_list pos:line="9" pos:column="31">(<argument><expr><literal type="string" pos:line="9" pos:column="32">"Closed %s."<pos:position pos:line="9" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="46">t<pos:position pos:line="9" pos:column="47"/></name><operator pos:line="9" pos:column="47">-&gt;<pos:position pos:line="9" pos:column="52"/></operator><name pos:line="9" pos:column="49">dest_name<pos:position pos:line="9" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="60"/></expr_stmt>
	}<pos:position pos:line="10" pos:column="10"/></block></then></if>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2538_git-2.13.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name><name pos:line="1" pos:column="14">struct<pos:position pos:line="1" pos:column="20"/></name> <name pos:line="1" pos:column="21">string_list<pos:position pos:line="1" pos:column="32"/></name></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">protocol_whitelist<pos:position pos:line="1" pos:column="52"/></name><parameter_list pos:line="1" pos:column="52">(<parameter><decl><type><name pos:line="1" pos:column="53">void<pos:position pos:line="1" pos:column="57"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="58"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><name pos:line="3" pos:column="16">int<pos:position pos:line="3" pos:column="19"/></name></type> <name pos:line="3" pos:column="20">enabled<pos:position pos:line="3" pos:column="27"/></name> <init pos:line="3" pos:column="28">= <expr><operator pos:line="3" pos:column="30">-<pos:position pos:line="3" pos:column="31"/></operator><literal type="number" pos:line="3" pos:column="31">1<pos:position pos:line="3" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="4" pos:column="9">static<pos:position pos:line="4" pos:column="15"/></specifier> <type><name><name pos:line="4" pos:column="16">struct<pos:position pos:line="4" pos:column="22"/></name> <name pos:line="4" pos:column="23">string_list<pos:position pos:line="4" pos:column="34"/></name></name></type> <name pos:line="4" pos:column="35">allowed<pos:position pos:line="4" pos:column="42"/></name> <init pos:line="4" pos:column="43">= <expr><name pos:line="4" pos:column="45">STRING_LIST_INIT_DUP<pos:position pos:line="4" pos:column="65"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="66"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name pos:line="6" pos:column="13">enabled<pos:position pos:line="6" pos:column="20"/></name> <operator pos:line="6" pos:column="21">&lt;<pos:position pos:line="6" pos:column="25"/></operator> <literal type="number" pos:line="6" pos:column="23">0<pos:position pos:line="6" pos:column="24"/></literal></expr>)<pos:position pos:line="6" pos:column="25"/></condition><then pos:line="6" pos:column="25"> <block pos:line="6" pos:column="26">{
		<decl_stmt><decl><type><specifier pos:line="7" pos:column="17">const<pos:position pos:line="7" pos:column="22"/></specifier> <name pos:line="7" pos:column="23">char<pos:position pos:line="7" pos:column="27"/></name> <modifier pos:line="7" pos:column="28">*<pos:position pos:line="7" pos:column="29"/></modifier></type><name pos:line="7" pos:column="29">v<pos:position pos:line="7" pos:column="30"/></name> <init pos:line="7" pos:column="31">= <expr><call><name pos:line="7" pos:column="33">getenv<pos:position pos:line="7" pos:column="39"/></name><argument_list pos:line="7" pos:column="39">(<argument><expr><literal type="string" pos:line="7" pos:column="40">"GIT_ALLOW_PROTOCOL"<pos:position pos:line="7" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="62"/></decl_stmt>
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><name pos:line="8" pos:column="21">v<pos:position pos:line="8" pos:column="22"/></name></expr>)<pos:position pos:line="8" pos:column="23"/></condition><then pos:line="8" pos:column="23"> <block pos:line="8" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="9" pos:column="25">string_list_split<pos:position pos:line="9" pos:column="42"/></name><argument_list pos:line="9" pos:column="42">(<argument><expr><operator pos:line="9" pos:column="43">&amp;<pos:position pos:line="9" pos:column="48"/></operator><name pos:line="9" pos:column="44">allowed<pos:position pos:line="9" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="53">v<pos:position pos:line="9" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="9" pos:column="56">':'<pos:position pos:line="9" pos:column="59"/></literal></expr></argument>, <argument><expr><operator pos:line="9" pos:column="61">-<pos:position pos:line="9" pos:column="62"/></operator><literal type="number" pos:line="9" pos:column="62">1<pos:position pos:line="9" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="65"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="10" pos:column="25">string_list_sort<pos:position pos:line="10" pos:column="41"/></name><argument_list pos:line="10" pos:column="41">(<argument><expr><operator pos:line="10" pos:column="42">&amp;<pos:position pos:line="10" pos:column="47"/></operator><name pos:line="10" pos:column="43">allowed<pos:position pos:line="10" pos:column="50"/></name></expr></argument>)<pos:position pos:line="10" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="52"/></expr_stmt>
			<expr_stmt><expr><name pos:line="11" pos:column="25">enabled<pos:position pos:line="11" pos:column="32"/></name> <operator pos:line="11" pos:column="33">=<pos:position pos:line="11" pos:column="34"/></operator> <literal type="number" pos:line="11" pos:column="35">1<pos:position pos:line="11" pos:column="36"/></literal></expr>;<pos:position pos:line="11" pos:column="37"/></expr_stmt>
		}<pos:position pos:line="12" pos:column="18"/></block></then> <else pos:line="12" pos:column="19">else <block pos:line="12" pos:column="24">{
			<expr_stmt><expr><name pos:line="13" pos:column="25">enabled<pos:position pos:line="13" pos:column="32"/></name> <operator pos:line="13" pos:column="33">=<pos:position pos:line="13" pos:column="34"/></operator> <literal type="number" pos:line="13" pos:column="35">0<pos:position pos:line="13" pos:column="36"/></literal></expr>;<pos:position pos:line="13" pos:column="37"/></expr_stmt>
		}<pos:position pos:line="14" pos:column="18"/></block></else></if>
	}<pos:position pos:line="15" pos:column="10"/></block></then></if>

	<return pos:line="17" pos:column="9">return <expr><ternary><condition><expr><name pos:line="17" pos:column="16">enabled<pos:position pos:line="17" pos:column="23"/></name></expr> ?<pos:position pos:line="17" pos:column="25"/></condition><then pos:line="17" pos:column="25"> <expr><operator pos:line="17" pos:column="26">&amp;<pos:position pos:line="17" pos:column="31"/></operator><name pos:line="17" pos:column="27">allowed<pos:position pos:line="17" pos:column="34"/></name></expr> <pos:position pos:line="17" pos:column="35"/></then><else pos:line="17" pos:column="35">: <expr><name pos:line="17" pos:column="37">NULL<pos:position pos:line="17" pos:column="41"/></name></expr></else></ternary></expr>;<pos:position pos:line="17" pos:column="42"/></return>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

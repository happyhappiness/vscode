<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2508.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">print_value<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">atom_value<pos:position pos:line="1" pos:column="42"/></name></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">v<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">int<pos:position pos:line="1" pos:column="50"/></name></type> <name pos:line="1" pos:column="51">quote_style<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="63"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">strbuf<pos:position pos:line="3" pos:column="22"/></name></name></type> <name pos:line="3" pos:column="23">sb<pos:position pos:line="3" pos:column="25"/></name> <init pos:line="3" pos:column="26">= <expr><name pos:line="3" pos:column="28">STRBUF_INIT<pos:position pos:line="3" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="40"/></decl_stmt>
	<switch pos:line="4" pos:column="9">switch <condition pos:line="4" pos:column="16">(<expr><name pos:line="4" pos:column="17">quote_style<pos:position pos:line="4" pos:column="28"/></name></expr>)<pos:position pos:line="4" pos:column="29"/></condition> <block pos:line="4" pos:column="30">{
	<case pos:line="5" pos:column="9">case <expr><name pos:line="5" pos:column="14">QUOTE_NONE<pos:position pos:line="5" pos:column="24"/></name></expr>:<pos:position pos:line="5" pos:column="25"/></case>
		<expr_stmt><expr><call><name pos:line="6" pos:column="17">fputs<pos:position pos:line="6" pos:column="22"/></name><argument_list pos:line="6" pos:column="22">(<argument><expr><name><name pos:line="6" pos:column="23">v<pos:position pos:line="6" pos:column="24"/></name><operator pos:line="6" pos:column="24">-&gt;<pos:position pos:line="6" pos:column="29"/></operator><name pos:line="6" pos:column="26">s<pos:position pos:line="6" pos:column="27"/></name></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="29">stdout<pos:position pos:line="6" pos:column="35"/></name></expr></argument>)<pos:position pos:line="6" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="37"/></expr_stmt>
		<break pos:line="7" pos:column="17">break;<pos:position pos:line="7" pos:column="23"/></break>
	<case pos:line="8" pos:column="9">case <expr><name pos:line="8" pos:column="14">QUOTE_SHELL<pos:position pos:line="8" pos:column="25"/></name></expr>:<pos:position pos:line="8" pos:column="26"/></case>
		<expr_stmt><expr><call><name pos:line="9" pos:column="17">sq_quote_buf<pos:position pos:line="9" pos:column="29"/></name><argument_list pos:line="9" pos:column="29">(<argument><expr><operator pos:line="9" pos:column="30">&amp;<pos:position pos:line="9" pos:column="35"/></operator><name pos:line="9" pos:column="31">sb<pos:position pos:line="9" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="35">v<pos:position pos:line="9" pos:column="36"/></name><operator pos:line="9" pos:column="36">-&gt;<pos:position pos:line="9" pos:column="41"/></operator><name pos:line="9" pos:column="38">s<pos:position pos:line="9" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="41"/></expr_stmt>
		<break pos:line="10" pos:column="17">break;<pos:position pos:line="10" pos:column="23"/></break>
	<case pos:line="11" pos:column="9">case <expr><name pos:line="11" pos:column="14">QUOTE_PERL<pos:position pos:line="11" pos:column="24"/></name></expr>:<pos:position pos:line="11" pos:column="25"/></case>
		<expr_stmt><expr><call><name pos:line="12" pos:column="17">perl_quote_buf<pos:position pos:line="12" pos:column="31"/></name><argument_list pos:line="12" pos:column="31">(<argument><expr><operator pos:line="12" pos:column="32">&amp;<pos:position pos:line="12" pos:column="37"/></operator><name pos:line="12" pos:column="33">sb<pos:position pos:line="12" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="37">v<pos:position pos:line="12" pos:column="38"/></name><operator pos:line="12" pos:column="38">-&gt;<pos:position pos:line="12" pos:column="43"/></operator><name pos:line="12" pos:column="40">s<pos:position pos:line="12" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="43"/></expr_stmt>
		<break pos:line="13" pos:column="17">break;<pos:position pos:line="13" pos:column="23"/></break>
	<case pos:line="14" pos:column="9">case <expr><name pos:line="14" pos:column="14">QUOTE_PYTHON<pos:position pos:line="14" pos:column="26"/></name></expr>:<pos:position pos:line="14" pos:column="27"/></case>
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">python_quote_buf<pos:position pos:line="15" pos:column="33"/></name><argument_list pos:line="15" pos:column="33">(<argument><expr><operator pos:line="15" pos:column="34">&amp;<pos:position pos:line="15" pos:column="39"/></operator><name pos:line="15" pos:column="35">sb<pos:position pos:line="15" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="39">v<pos:position pos:line="15" pos:column="40"/></name><operator pos:line="15" pos:column="40">-&gt;<pos:position pos:line="15" pos:column="45"/></operator><name pos:line="15" pos:column="42">s<pos:position pos:line="15" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="45"/></expr_stmt>
		<break pos:line="16" pos:column="17">break;<pos:position pos:line="16" pos:column="23"/></break>
	<case pos:line="17" pos:column="9">case <expr><name pos:line="17" pos:column="14">QUOTE_TCL<pos:position pos:line="17" pos:column="23"/></name></expr>:<pos:position pos:line="17" pos:column="24"/></case>
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">tcl_quote_buf<pos:position pos:line="18" pos:column="30"/></name><argument_list pos:line="18" pos:column="30">(<argument><expr><operator pos:line="18" pos:column="31">&amp;<pos:position pos:line="18" pos:column="36"/></operator><name pos:line="18" pos:column="32">sb<pos:position pos:line="18" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="36">v<pos:position pos:line="18" pos:column="37"/></name><operator pos:line="18" pos:column="37">-&gt;<pos:position pos:line="18" pos:column="42"/></operator><name pos:line="18" pos:column="39">s<pos:position pos:line="18" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="42"/></expr_stmt>
		<break pos:line="19" pos:column="17">break;<pos:position pos:line="19" pos:column="23"/></break>
	}<pos:position pos:line="20" pos:column="10"/></block></switch>
	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name pos:line="21" pos:column="13">quote_style<pos:position pos:line="21" pos:column="24"/></name> <operator pos:line="21" pos:column="25">!=<pos:position pos:line="21" pos:column="27"/></operator> <name pos:line="21" pos:column="28">QUOTE_NONE<pos:position pos:line="21" pos:column="38"/></name></expr>)<pos:position pos:line="21" pos:column="39"/></condition><then pos:line="21" pos:column="39"> <block pos:line="21" pos:column="40">{
		<expr_stmt><expr><call><name pos:line="22" pos:column="17">fputs<pos:position pos:line="22" pos:column="22"/></name><argument_list pos:line="22" pos:column="22">(<argument><expr><name><name pos:line="22" pos:column="23">sb<pos:position pos:line="22" pos:column="25"/></name><operator pos:line="22" pos:column="25">.<pos:position pos:line="22" pos:column="26"/></operator><name pos:line="22" pos:column="26">buf<pos:position pos:line="22" pos:column="29"/></name></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="31">stdout<pos:position pos:line="22" pos:column="37"/></name></expr></argument>)<pos:position pos:line="22" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="23" pos:column="17">strbuf_release<pos:position pos:line="23" pos:column="31"/></name><argument_list pos:line="23" pos:column="31">(<argument><expr><operator pos:line="23" pos:column="32">&amp;<pos:position pos:line="23" pos:column="37"/></operator><name pos:line="23" pos:column="33">sb<pos:position pos:line="23" pos:column="35"/></name></expr></argument>)<pos:position pos:line="23" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="24" pos:column="10"/></block></then></if>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_7059_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name>
<name pos:line="2" pos:column="1">internal_function<pos:position pos:line="2" pos:column="18"/></name></type>
<name pos:line="3" pos:column="1">build_upper_buffer<pos:position pos:line="3" pos:column="19"/></name> <parameter_list pos:line="3" pos:column="20">(<parameter><decl><type><name pos:line="3" pos:column="21">re_string_t<pos:position pos:line="3" pos:column="32"/></name> <modifier pos:line="3" pos:column="33">*<pos:position pos:line="3" pos:column="34"/></modifier></type><name pos:line="3" pos:column="34">pstr<pos:position pos:line="3" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="39"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">char_idx<pos:position pos:line="5" pos:column="15"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="17">end_idx<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
  <expr_stmt><expr><name pos:line="6" pos:column="3">end_idx<pos:position pos:line="6" pos:column="10"/></name> <operator pos:line="6" pos:column="11">=<pos:position pos:line="6" pos:column="12"/></operator> <ternary><condition><expr><operator pos:line="6" pos:column="13">(<pos:position pos:line="6" pos:column="14"/></operator><name><name pos:line="6" pos:column="14">pstr<pos:position pos:line="6" pos:column="18"/></name><operator pos:line="6" pos:column="18">-&gt;<pos:position pos:line="6" pos:column="23"/></operator><name pos:line="6" pos:column="20">bufs_len<pos:position pos:line="6" pos:column="28"/></name></name> <operator pos:line="6" pos:column="29">&gt;<pos:position pos:line="6" pos:column="33"/></operator> <name><name pos:line="6" pos:column="31">pstr<pos:position pos:line="6" pos:column="35"/></name><operator pos:line="6" pos:column="35">-&gt;<pos:position pos:line="6" pos:column="40"/></operator><name pos:line="6" pos:column="37">len<pos:position pos:line="6" pos:column="40"/></name></name><operator pos:line="6" pos:column="40">)<pos:position pos:line="6" pos:column="41"/></operator></expr> ?<pos:position pos:line="6" pos:column="43"/></condition><then pos:line="6" pos:column="43"> <expr><name><name pos:line="6" pos:column="44">pstr<pos:position pos:line="6" pos:column="48"/></name><operator pos:line="6" pos:column="48">-&gt;<pos:position pos:line="6" pos:column="53"/></operator><name pos:line="6" pos:column="50">len<pos:position pos:line="6" pos:column="53"/></name></name></expr> <pos:position pos:line="6" pos:column="54"/></then><else pos:line="6" pos:column="54">: <expr><name><name pos:line="6" pos:column="56">pstr<pos:position pos:line="6" pos:column="60"/></name><operator pos:line="6" pos:column="60">-&gt;<pos:position pos:line="6" pos:column="65"/></operator><name pos:line="6" pos:column="62">bufs_len<pos:position pos:line="6" pos:column="70"/></name></name></expr></else></ternary></expr>;<pos:position pos:line="6" pos:column="71"/></expr_stmt>

  <for pos:line="8" pos:column="3">for <control pos:line="8" pos:column="7">(<init><expr><name pos:line="8" pos:column="8">char_idx<pos:position pos:line="8" pos:column="16"/></name> <operator pos:line="8" pos:column="17">=<pos:position pos:line="8" pos:column="18"/></operator> <name><name pos:line="8" pos:column="19">pstr<pos:position pos:line="8" pos:column="23"/></name><operator pos:line="8" pos:column="23">-&gt;<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="25">valid_len<pos:position pos:line="8" pos:column="34"/></name></name></expr>;<pos:position pos:line="8" pos:column="35"/></init> <condition><expr><name pos:line="8" pos:column="36">char_idx<pos:position pos:line="8" pos:column="44"/></name> <operator pos:line="8" pos:column="45">&lt;<pos:position pos:line="8" pos:column="49"/></operator> <name pos:line="8" pos:column="47">end_idx<pos:position pos:line="8" pos:column="54"/></name></expr>;<pos:position pos:line="8" pos:column="55"/></condition> <incr><expr><operator pos:line="8" pos:column="56">++<pos:position pos:line="8" pos:column="58"/></operator><name pos:line="8" pos:column="58">char_idx<pos:position pos:line="8" pos:column="66"/></name></expr></incr>)<pos:position pos:line="8" pos:column="67"/></control>
    <block pos:line="9" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="10" pos:column="7">int<pos:position pos:line="10" pos:column="10"/></name></type> <name pos:line="10" pos:column="11">ch<pos:position pos:line="10" pos:column="13"/></name> <init pos:line="10" pos:column="14">= <expr><name><name pos:line="10" pos:column="16">pstr<pos:position pos:line="10" pos:column="20"/></name><operator pos:line="10" pos:column="20">-&gt;<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="22">raw_mbs<pos:position pos:line="10" pos:column="29"/></name><index pos:line="10" pos:column="29">[<expr><name><name pos:line="10" pos:column="30">pstr<pos:position pos:line="10" pos:column="34"/></name><operator pos:line="10" pos:column="34">-&gt;<pos:position pos:line="10" pos:column="39"/></operator><name pos:line="10" pos:column="36">raw_mbs_idx<pos:position pos:line="10" pos:column="47"/></name></name> <operator pos:line="10" pos:column="48">+<pos:position pos:line="10" pos:column="49"/></operator> <name pos:line="10" pos:column="50">char_idx<pos:position pos:line="10" pos:column="58"/></name></expr>]<pos:position pos:line="10" pos:column="59"/></index></name></expr></init></decl>;<pos:position pos:line="10" pos:column="60"/></decl_stmt>
      <if pos:line="11" pos:column="7">if <condition pos:line="11" pos:column="10">(<expr><call><name pos:line="11" pos:column="11">BE<pos:position pos:line="11" pos:column="13"/></name> <argument_list pos:line="11" pos:column="14">(<argument><expr><name><name pos:line="11" pos:column="15">pstr<pos:position pos:line="11" pos:column="19"/></name><operator pos:line="11" pos:column="19">-&gt;<pos:position pos:line="11" pos:column="24"/></operator><name pos:line="11" pos:column="21">trans<pos:position pos:line="11" pos:column="26"/></name></name> <operator pos:line="11" pos:column="27">!=<pos:position pos:line="11" pos:column="29"/></operator> <name pos:line="11" pos:column="30">NULL<pos:position pos:line="11" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="36">0<pos:position pos:line="11" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="39"/></condition><then pos:line="11" pos:column="39">
	<block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="9">ch<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">=<pos:position pos:line="12" pos:column="13"/></operator> <name><name pos:line="12" pos:column="14">pstr<pos:position pos:line="12" pos:column="18"/></name><operator pos:line="12" pos:column="18">-&gt;<pos:position pos:line="12" pos:column="23"/></operator><name pos:line="12" pos:column="20">trans<pos:position pos:line="12" pos:column="25"/></name><index pos:line="12" pos:column="25">[<expr><name pos:line="12" pos:column="26">ch<pos:position pos:line="12" pos:column="28"/></name></expr>]<pos:position pos:line="12" pos:column="29"/></index></name></expr>;<pos:position pos:line="12" pos:column="30"/></expr_stmt></block></then></if>
      <if pos:line="13" pos:column="7">if <condition pos:line="13" pos:column="10">(<expr><call><name pos:line="13" pos:column="11">islower<pos:position pos:line="13" pos:column="18"/></name> <argument_list pos:line="13" pos:column="19">(<argument><expr><name pos:line="13" pos:column="20">ch<pos:position pos:line="13" pos:column="22"/></name></expr></argument>)<pos:position pos:line="13" pos:column="23"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="24"/></condition><then pos:line="13" pos:column="24">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="14" pos:column="9">pstr<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">-&gt;<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="15">mbs<pos:position pos:line="14" pos:column="18"/></name><index pos:line="14" pos:column="18">[<expr><name pos:line="14" pos:column="19">char_idx<pos:position pos:line="14" pos:column="27"/></name></expr>]<pos:position pos:line="14" pos:column="28"/></index></name> <operator pos:line="14" pos:column="29">=<pos:position pos:line="14" pos:column="30"/></operator> <call><name pos:line="14" pos:column="31">toupper<pos:position pos:line="14" pos:column="38"/></name> <argument_list pos:line="14" pos:column="39">(<argument><expr><name pos:line="14" pos:column="40">ch<pos:position pos:line="14" pos:column="42"/></name></expr></argument>)<pos:position pos:line="14" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="44"/></expr_stmt></block></then>
      <else pos:line="15" pos:column="7">else
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="16" pos:column="9">pstr<pos:position pos:line="16" pos:column="13"/></name><operator pos:line="16" pos:column="13">-&gt;<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="15">mbs<pos:position pos:line="16" pos:column="18"/></name><index pos:line="16" pos:column="18">[<expr><name pos:line="16" pos:column="19">char_idx<pos:position pos:line="16" pos:column="27"/></name></expr>]<pos:position pos:line="16" pos:column="28"/></index></name> <operator pos:line="16" pos:column="29">=<pos:position pos:line="16" pos:column="30"/></operator> <name pos:line="16" pos:column="31">ch<pos:position pos:line="16" pos:column="33"/></name></expr>;<pos:position pos:line="16" pos:column="34"/></expr_stmt></block></else></if>
    }<pos:position pos:line="17" pos:column="6"/></block></for>
  <expr_stmt><expr><name><name pos:line="18" pos:column="3">pstr<pos:position pos:line="18" pos:column="7"/></name><operator pos:line="18" pos:column="7">-&gt;<pos:position pos:line="18" pos:column="12"/></operator><name pos:line="18" pos:column="9">valid_len<pos:position pos:line="18" pos:column="18"/></name></name> <operator pos:line="18" pos:column="19">=<pos:position pos:line="18" pos:column="20"/></operator> <name pos:line="18" pos:column="21">char_idx<pos:position pos:line="18" pos:column="29"/></name></expr>;<pos:position pos:line="18" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="19" pos:column="3">pstr<pos:position pos:line="19" pos:column="7"/></name><operator pos:line="19" pos:column="7">-&gt;<pos:position pos:line="19" pos:column="12"/></operator><name pos:line="19" pos:column="9">valid_raw_len<pos:position pos:line="19" pos:column="22"/></name></name> <operator pos:line="19" pos:column="23">=<pos:position pos:line="19" pos:column="24"/></operator> <name pos:line="19" pos:column="25">char_idx<pos:position pos:line="19" pos:column="33"/></name></expr>;<pos:position pos:line="19" pos:column="34"/></expr_stmt>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

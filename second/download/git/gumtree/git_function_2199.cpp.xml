<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2199.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">write_cherry_pick_head<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name><name pos:line="1" pos:column="36">struct<pos:position pos:line="1" pos:column="42"/></name> <name pos:line="1" pos:column="43">commit<pos:position pos:line="1" pos:column="49"/></name></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">commit<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="59">const<pos:position pos:line="1" pos:column="64"/></specifier> <name pos:line="1" pos:column="65">char<pos:position pos:line="1" pos:column="69"/></name> <modifier pos:line="1" pos:column="70">*<pos:position pos:line="1" pos:column="71"/></modifier></type><name pos:line="1" pos:column="71">pseudoref<pos:position pos:line="1" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="81"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">filename<pos:position pos:line="3" pos:column="29"/></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">fd<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">strbuf<pos:position pos:line="5" pos:column="22"/></name></name></type> <name pos:line="5" pos:column="23">buf<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><name pos:line="5" pos:column="29">STRBUF_INIT<pos:position pos:line="5" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="41"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="7" pos:column="9">strbuf_addf<pos:position pos:line="7" pos:column="20"/></name><argument_list pos:line="7" pos:column="20">(<argument><expr><operator pos:line="7" pos:column="21">&amp;<pos:position pos:line="7" pos:column="26"/></operator><name pos:line="7" pos:column="22">buf<pos:position pos:line="7" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="27">"%s\n"<pos:position pos:line="7" pos:column="33"/></literal></expr></argument>, <argument><expr><call><name pos:line="7" pos:column="35">sha1_to_hex<pos:position pos:line="7" pos:column="46"/></name><argument_list pos:line="7" pos:column="46">(<argument><expr><name><name pos:line="7" pos:column="47">commit<pos:position pos:line="7" pos:column="53"/></name><operator pos:line="7" pos:column="53">-&gt;<pos:position pos:line="7" pos:column="58"/></operator><name pos:line="7" pos:column="55">object<pos:position pos:line="7" pos:column="61"/></name><operator pos:line="7" pos:column="61">.<pos:position pos:line="7" pos:column="62"/></operator><name pos:line="7" pos:column="62">sha1<pos:position pos:line="7" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="69"/></expr_stmt>

	<expr_stmt><expr><name pos:line="9" pos:column="9">filename<pos:position pos:line="9" pos:column="17"/></name> <operator pos:line="9" pos:column="18">=<pos:position pos:line="9" pos:column="19"/></operator> <call><name pos:line="9" pos:column="20">git_path<pos:position pos:line="9" pos:column="28"/></name><argument_list pos:line="9" pos:column="28">(<argument><expr><literal type="string" pos:line="9" pos:column="29">"%s"<pos:position pos:line="9" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="35">pseudoref<pos:position pos:line="9" pos:column="44"/></name></expr></argument>)<pos:position pos:line="9" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><name pos:line="10" pos:column="9">fd<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">=<pos:position pos:line="10" pos:column="13"/></operator> <call><name pos:line="10" pos:column="14">open<pos:position pos:line="10" pos:column="18"/></name><argument_list pos:line="10" pos:column="18">(<argument><expr><name pos:line="10" pos:column="19">filename<pos:position pos:line="10" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="29">O_WRONLY<pos:position pos:line="10" pos:column="37"/></name> <operator pos:line="10" pos:column="38">|<pos:position pos:line="10" pos:column="39"/></operator> <name pos:line="10" pos:column="40">O_CREAT<pos:position pos:line="10" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="49">0666<pos:position pos:line="10" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="55"/></expr_stmt>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">fd<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">&lt;<pos:position pos:line="11" pos:column="20"/></operator> <literal type="number" pos:line="11" pos:column="18">0<pos:position pos:line="11" pos:column="19"/></literal></expr>)<pos:position pos:line="11" pos:column="20"/></condition><then pos:line="11" pos:column="20">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="17">die_errno<pos:position pos:line="12" pos:column="26"/></name><argument_list pos:line="12" pos:column="26">(<argument><expr><call><name pos:line="12" pos:column="27">_<pos:position pos:line="12" pos:column="28"/></name><argument_list pos:line="12" pos:column="28">(<argument><expr><literal type="string" pos:line="12" pos:column="29">"Could not open '%s' for writing"<pos:position pos:line="12" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="63"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="12" pos:column="65">filename<pos:position pos:line="12" pos:column="73"/></name></expr></argument>)<pos:position pos:line="12" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="75"/></expr_stmt></block></then></if>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><call><name pos:line="13" pos:column="13">write_in_full<pos:position pos:line="13" pos:column="26"/></name><argument_list pos:line="13" pos:column="26">(<argument><expr><name pos:line="13" pos:column="27">fd<pos:position pos:line="13" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="31">buf<pos:position pos:line="13" pos:column="34"/></name><operator pos:line="13" pos:column="34">.<pos:position pos:line="13" pos:column="35"/></operator><name pos:line="13" pos:column="35">buf<pos:position pos:line="13" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="40">buf<pos:position pos:line="13" pos:column="43"/></name><operator pos:line="13" pos:column="43">.<pos:position pos:line="13" pos:column="44"/></operator><name pos:line="13" pos:column="44">len<pos:position pos:line="13" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="48"/></argument_list></call> <operator pos:line="13" pos:column="49">!=<pos:position pos:line="13" pos:column="51"/></operator> <name><name pos:line="13" pos:column="52">buf<pos:position pos:line="13" pos:column="55"/></name><operator pos:line="13" pos:column="55">.<pos:position pos:line="13" pos:column="56"/></operator><name pos:line="13" pos:column="56">len<pos:position pos:line="13" pos:column="59"/></name></name> <operator pos:line="13" pos:column="60">||<pos:position pos:line="13" pos:column="62"/></operator> <call><name pos:line="13" pos:column="63">close<pos:position pos:line="13" pos:column="68"/></name><argument_list pos:line="13" pos:column="68">(<argument><expr><name pos:line="13" pos:column="69">fd<pos:position pos:line="13" pos:column="71"/></name></expr></argument>)<pos:position pos:line="13" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="73"/></condition><then pos:line="13" pos:column="73">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="17">die_errno<pos:position pos:line="14" pos:column="26"/></name><argument_list pos:line="14" pos:column="26">(<argument><expr><call><name pos:line="14" pos:column="27">_<pos:position pos:line="14" pos:column="28"/></name><argument_list pos:line="14" pos:column="28">(<argument><expr><literal type="string" pos:line="14" pos:column="29">"Could not write to '%s'"<pos:position pos:line="14" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="55"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="14" pos:column="57">filename<pos:position pos:line="14" pos:column="65"/></name></expr></argument>)<pos:position pos:line="14" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="67"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="15" pos:column="9">strbuf_release<pos:position pos:line="15" pos:column="23"/></name><argument_list pos:line="15" pos:column="23">(<argument><expr><operator pos:line="15" pos:column="24">&amp;<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="25">buf<pos:position pos:line="15" pos:column="28"/></name></expr></argument>)<pos:position pos:line="15" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="30"/></expr_stmt>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

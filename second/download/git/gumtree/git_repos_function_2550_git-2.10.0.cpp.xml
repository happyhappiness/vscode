<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2550_git-2.10.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">append_signoff<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name><name pos:line="1" pos:column="21">struct<pos:position pos:line="1" pos:column="27"/></name> <name pos:line="1" pos:column="28">strbuf<pos:position pos:line="1" pos:column="34"/></name></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">msgbuf<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">int<pos:position pos:line="1" pos:column="47"/></name></type> <name pos:line="1" pos:column="48">ignore_footer<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="63">unsigned<pos:position pos:line="1" pos:column="71"/></name></type> <name pos:line="1" pos:column="72">flag<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="77"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">unsigned<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">no_dup_sob<pos:position pos:line="3" pos:column="28"/></name> <init pos:line="3" pos:column="29">= <expr><name pos:line="3" pos:column="31">flag<pos:position pos:line="3" pos:column="35"/></name> <operator pos:line="3" pos:column="36">&amp;<pos:position pos:line="3" pos:column="41"/></operator> <name pos:line="3" pos:column="38">APPEND_SIGNOFF_DEDUP<pos:position pos:line="3" pos:column="58"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="59"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">strbuf<pos:position pos:line="4" pos:column="22"/></name></name></type> <name pos:line="4" pos:column="23">sob<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><name pos:line="4" pos:column="29">STRBUF_INIT<pos:position pos:line="4" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">has_footer<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="7" pos:column="9">strbuf_addstr<pos:position pos:line="7" pos:column="22"/></name><argument_list pos:line="7" pos:column="22">(<argument><expr><operator pos:line="7" pos:column="23">&amp;<pos:position pos:line="7" pos:column="28"/></operator><name pos:line="7" pos:column="24">sob<pos:position pos:line="7" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="29">sign_off_header<pos:position pos:line="7" pos:column="44"/></name></expr></argument>)<pos:position pos:line="7" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="8" pos:column="9">strbuf_addstr<pos:position pos:line="8" pos:column="22"/></name><argument_list pos:line="8" pos:column="22">(<argument><expr><operator pos:line="8" pos:column="23">&amp;<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="24">sob<pos:position pos:line="8" pos:column="27"/></name></expr></argument>, <argument><expr><call><name pos:line="8" pos:column="29">fmt_name<pos:position pos:line="8" pos:column="37"/></name><argument_list pos:line="8" pos:column="37">(<argument><expr><call><name pos:line="8" pos:column="38">getenv<pos:position pos:line="8" pos:column="44"/></name><argument_list pos:line="8" pos:column="44">(<argument><expr><literal type="string" pos:line="8" pos:column="45">"GIT_COMMITTER_NAME"<pos:position pos:line="8" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="66"/></argument_list></call></expr></argument>,
				<argument><expr><call><name pos:line="9" pos:column="33">getenv<pos:position pos:line="9" pos:column="39"/></name><argument_list pos:line="9" pos:column="39">(<argument><expr><literal type="string" pos:line="9" pos:column="40">"GIT_COMMITTER_EMAIL"<pos:position pos:line="9" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="65"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="10" pos:column="9">strbuf_addch<pos:position pos:line="10" pos:column="21"/></name><argument_list pos:line="10" pos:column="21">(<argument><expr><operator pos:line="10" pos:column="22">&amp;<pos:position pos:line="10" pos:column="27"/></operator><name pos:line="10" pos:column="23">sob<pos:position pos:line="10" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="10" pos:column="28">'\n'<pos:position pos:line="10" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="34"/></expr_stmt>

	<comment type="block" pos:line="12" pos:column="9">/*
	 * If the whole message buffer is equal to the sob, pretend that we
	 * found a conforming footer with a matching sob
	 */</comment>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name><name pos:line="16" pos:column="13">msgbuf<pos:position pos:line="16" pos:column="19"/></name><operator pos:line="16" pos:column="19">-&gt;<pos:position pos:line="16" pos:column="24"/></operator><name pos:line="16" pos:column="21">len<pos:position pos:line="16" pos:column="24"/></name></name> <operator pos:line="16" pos:column="25">-<pos:position pos:line="16" pos:column="26"/></operator> <name pos:line="16" pos:column="27">ignore_footer<pos:position pos:line="16" pos:column="40"/></name> <operator pos:line="16" pos:column="41">==<pos:position pos:line="16" pos:column="43"/></operator> <name><name pos:line="16" pos:column="44">sob<pos:position pos:line="16" pos:column="47"/></name><operator pos:line="16" pos:column="47">.<pos:position pos:line="16" pos:column="48"/></operator><name pos:line="16" pos:column="48">len<pos:position pos:line="16" pos:column="51"/></name></name> <operator pos:line="16" pos:column="52">&amp;&amp;<pos:position pos:line="16" pos:column="62"/></operator>
	    <operator pos:line="17" pos:column="13">!<pos:position pos:line="17" pos:column="14"/></operator><call><name pos:line="17" pos:column="14">strncmp<pos:position pos:line="17" pos:column="21"/></name><argument_list pos:line="17" pos:column="21">(<argument><expr><name><name pos:line="17" pos:column="22">msgbuf<pos:position pos:line="17" pos:column="28"/></name><operator pos:line="17" pos:column="28">-&gt;<pos:position pos:line="17" pos:column="33"/></operator><name pos:line="17" pos:column="30">buf<pos:position pos:line="17" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="35">sob<pos:position pos:line="17" pos:column="38"/></name><operator pos:line="17" pos:column="38">.<pos:position pos:line="17" pos:column="39"/></operator><name pos:line="17" pos:column="39">buf<pos:position pos:line="17" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="44">sob<pos:position pos:line="17" pos:column="47"/></name><operator pos:line="17" pos:column="47">.<pos:position pos:line="17" pos:column="48"/></operator><name pos:line="17" pos:column="48">len<pos:position pos:line="17" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="53"/></condition><then pos:line="17" pos:column="53">
		<block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="17">has_footer<pos:position pos:line="18" pos:column="27"/></name> <operator pos:line="18" pos:column="28">=<pos:position pos:line="18" pos:column="29"/></operator> <literal type="number" pos:line="18" pos:column="30">3<pos:position pos:line="18" pos:column="31"/></literal></expr>;<pos:position pos:line="18" pos:column="32"/></expr_stmt></block></then>
	<else pos:line="19" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="17">has_footer<pos:position pos:line="20" pos:column="27"/></name> <operator pos:line="20" pos:column="28">=<pos:position pos:line="20" pos:column="29"/></operator> <call><name pos:line="20" pos:column="30">has_conforming_footer<pos:position pos:line="20" pos:column="51"/></name><argument_list pos:line="20" pos:column="51">(<argument><expr><name pos:line="20" pos:column="52">msgbuf<pos:position pos:line="20" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="60">&amp;<pos:position pos:line="20" pos:column="65"/></operator><name pos:line="20" pos:column="61">sob<pos:position pos:line="20" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="66">ignore_footer<pos:position pos:line="20" pos:column="79"/></name></expr></argument>)<pos:position pos:line="20" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="81"/></expr_stmt></block></else></if>

	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><operator pos:line="22" pos:column="13">!<pos:position pos:line="22" pos:column="14"/></operator><name pos:line="22" pos:column="14">has_footer<pos:position pos:line="22" pos:column="24"/></name></expr>)<pos:position pos:line="22" pos:column="25"/></condition><then pos:line="22" pos:column="25"> <block pos:line="22" pos:column="26">{
		<decl_stmt><decl><type><specifier pos:line="23" pos:column="17">const<pos:position pos:line="23" pos:column="22"/></specifier> <name pos:line="23" pos:column="23">char<pos:position pos:line="23" pos:column="27"/></name> <modifier pos:line="23" pos:column="28">*<pos:position pos:line="23" pos:column="29"/></modifier></type><name pos:line="23" pos:column="29">append_newlines<pos:position pos:line="23" pos:column="44"/></name> <init pos:line="23" pos:column="45">= <expr><name pos:line="23" pos:column="47">NULL<pos:position pos:line="23" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="23" pos:column="52"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="24" pos:column="17">size_t<pos:position pos:line="24" pos:column="23"/></name></type> <name pos:line="24" pos:column="24">len<pos:position pos:line="24" pos:column="27"/></name> <init pos:line="24" pos:column="28">= <expr><name><name pos:line="24" pos:column="30">msgbuf<pos:position pos:line="24" pos:column="36"/></name><operator pos:line="24" pos:column="36">-&gt;<pos:position pos:line="24" pos:column="41"/></operator><name pos:line="24" pos:column="38">len<pos:position pos:line="24" pos:column="41"/></name></name> <operator pos:line="24" pos:column="42">-<pos:position pos:line="24" pos:column="43"/></operator> <name pos:line="24" pos:column="44">ignore_footer<pos:position pos:line="24" pos:column="57"/></name></expr></init></decl>;<pos:position pos:line="24" pos:column="58"/></decl_stmt>

		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><operator pos:line="26" pos:column="21">!<pos:position pos:line="26" pos:column="22"/></operator><name pos:line="26" pos:column="22">len<pos:position pos:line="26" pos:column="25"/></name></expr>)<pos:position pos:line="26" pos:column="26"/></condition><then pos:line="26" pos:column="26"> <block pos:line="26" pos:column="27">{
			<comment type="block" pos:line="27" pos:column="25">/*
			 * The buffer is completely empty.  Leave foom for
			 * the title and body to be filled in by the user.
			 */</comment>
			<expr_stmt><expr><name pos:line="31" pos:column="25">append_newlines<pos:position pos:line="31" pos:column="40"/></name> <operator pos:line="31" pos:column="41">=<pos:position pos:line="31" pos:column="42"/></operator> <literal type="string" pos:line="31" pos:column="43">"\n\n"<pos:position pos:line="31" pos:column="49"/></literal></expr>;<pos:position pos:line="31" pos:column="50"/></expr_stmt>
		}<pos:position pos:line="32" pos:column="18"/></block></then> <elseif pos:line="32" pos:column="19">else <if pos:line="32" pos:column="24">if <condition pos:line="32" pos:column="27">(<expr><name><name pos:line="32" pos:column="28">msgbuf<pos:position pos:line="32" pos:column="34"/></name><operator pos:line="32" pos:column="34">-&gt;<pos:position pos:line="32" pos:column="39"/></operator><name pos:line="32" pos:column="36">buf<pos:position pos:line="32" pos:column="39"/></name><index pos:line="32" pos:column="39">[<expr><name pos:line="32" pos:column="40">len<pos:position pos:line="32" pos:column="43"/></name> <operator pos:line="32" pos:column="44">-<pos:position pos:line="32" pos:column="45"/></operator> <literal type="number" pos:line="32" pos:column="46">1<pos:position pos:line="32" pos:column="47"/></literal></expr>]<pos:position pos:line="32" pos:column="48"/></index></name> <operator pos:line="32" pos:column="49">!=<pos:position pos:line="32" pos:column="51"/></operator> <literal type="char" pos:line="32" pos:column="52">'\n'<pos:position pos:line="32" pos:column="56"/></literal></expr>)<pos:position pos:line="32" pos:column="57"/></condition><then pos:line="32" pos:column="57"> <block pos:line="32" pos:column="58">{
			<comment type="block" pos:line="33" pos:column="25">/*
			 * Incomplete line.  Complete the line and add a
			 * blank one so that there is an empty line between
			 * the message body and the sob.
			 */</comment>
			<expr_stmt><expr><name pos:line="38" pos:column="25">append_newlines<pos:position pos:line="38" pos:column="40"/></name> <operator pos:line="38" pos:column="41">=<pos:position pos:line="38" pos:column="42"/></operator> <literal type="string" pos:line="38" pos:column="43">"\n\n"<pos:position pos:line="38" pos:column="49"/></literal></expr>;<pos:position pos:line="38" pos:column="50"/></expr_stmt>
		}<pos:position pos:line="39" pos:column="18"/></block></then></if></elseif> <elseif pos:line="39" pos:column="19">else <if pos:line="39" pos:column="24">if <condition pos:line="39" pos:column="27">(<expr><name pos:line="39" pos:column="28">len<pos:position pos:line="39" pos:column="31"/></name> <operator pos:line="39" pos:column="32">==<pos:position pos:line="39" pos:column="34"/></operator> <literal type="number" pos:line="39" pos:column="35">1<pos:position pos:line="39" pos:column="36"/></literal></expr>)<pos:position pos:line="39" pos:column="37"/></condition><then pos:line="39" pos:column="37"> <block pos:line="39" pos:column="38">{
			<comment type="block" pos:line="40" pos:column="25">/*
			 * Buffer contains a single newline.  Add another
			 * so that we leave room for the title and body.
			 */</comment>
			<expr_stmt><expr><name pos:line="44" pos:column="25">append_newlines<pos:position pos:line="44" pos:column="40"/></name> <operator pos:line="44" pos:column="41">=<pos:position pos:line="44" pos:column="42"/></operator> <literal type="string" pos:line="44" pos:column="43">"\n"<pos:position pos:line="44" pos:column="47"/></literal></expr>;<pos:position pos:line="44" pos:column="48"/></expr_stmt>
		}<pos:position pos:line="45" pos:column="18"/></block></then></if></elseif> <elseif pos:line="45" pos:column="19">else <if pos:line="45" pos:column="24">if <condition pos:line="45" pos:column="27">(<expr><name><name pos:line="45" pos:column="28">msgbuf<pos:position pos:line="45" pos:column="34"/></name><operator pos:line="45" pos:column="34">-&gt;<pos:position pos:line="45" pos:column="39"/></operator><name pos:line="45" pos:column="36">buf<pos:position pos:line="45" pos:column="39"/></name><index pos:line="45" pos:column="39">[<expr><name pos:line="45" pos:column="40">len<pos:position pos:line="45" pos:column="43"/></name> <operator pos:line="45" pos:column="44">-<pos:position pos:line="45" pos:column="45"/></operator> <literal type="number" pos:line="45" pos:column="46">2<pos:position pos:line="45" pos:column="47"/></literal></expr>]<pos:position pos:line="45" pos:column="48"/></index></name> <operator pos:line="45" pos:column="49">!=<pos:position pos:line="45" pos:column="51"/></operator> <literal type="char" pos:line="45" pos:column="52">'\n'<pos:position pos:line="45" pos:column="56"/></literal></expr>)<pos:position pos:line="45" pos:column="57"/></condition><then pos:line="45" pos:column="57"> <block pos:line="45" pos:column="58">{
			<comment type="block" pos:line="46" pos:column="25">/*
			 * Buffer ends with a single newline.  Add another
			 * so that there is an empty line between the message
			 * body and the sob.
			 */</comment>
			<expr_stmt><expr><name pos:line="51" pos:column="25">append_newlines<pos:position pos:line="51" pos:column="40"/></name> <operator pos:line="51" pos:column="41">=<pos:position pos:line="51" pos:column="42"/></operator> <literal type="string" pos:line="51" pos:column="43">"\n"<pos:position pos:line="51" pos:column="47"/></literal></expr>;<pos:position pos:line="51" pos:column="48"/></expr_stmt>
		}<pos:position pos:line="52" pos:column="18"/></block></then></if></elseif></if> <comment type="block" pos:line="52" pos:column="19">/* else, the buffer already ends with two newlines. */</comment>

		<if pos:line="54" pos:column="17">if <condition pos:line="54" pos:column="20">(<expr><name pos:line="54" pos:column="21">append_newlines<pos:position pos:line="54" pos:column="36"/></name></expr>)<pos:position pos:line="54" pos:column="37"/></condition><then pos:line="54" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="55" pos:column="25">strbuf_splice<pos:position pos:line="55" pos:column="38"/></name><argument_list pos:line="55" pos:column="38">(<argument><expr><name pos:line="55" pos:column="39">msgbuf<pos:position pos:line="55" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="47">msgbuf<pos:position pos:line="55" pos:column="53"/></name><operator pos:line="55" pos:column="53">-&gt;<pos:position pos:line="55" pos:column="58"/></operator><name pos:line="55" pos:column="55">len<pos:position pos:line="55" pos:column="58"/></name></name> <operator pos:line="55" pos:column="59">-<pos:position pos:line="55" pos:column="60"/></operator> <name pos:line="55" pos:column="61">ignore_footer<pos:position pos:line="55" pos:column="74"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="76">0<pos:position pos:line="55" pos:column="77"/></literal></expr></argument>,
				<argument><expr><name pos:line="56" pos:column="33">append_newlines<pos:position pos:line="56" pos:column="48"/></name></expr></argument>, <argument><expr><call><name pos:line="56" pos:column="50">strlen<pos:position pos:line="56" pos:column="56"/></name><argument_list pos:line="56" pos:column="56">(<argument><expr><name pos:line="56" pos:column="57">append_newlines<pos:position pos:line="56" pos:column="72"/></name></expr></argument>)<pos:position pos:line="56" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="56" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="75"/></expr_stmt></block></then></if>
	}<pos:position pos:line="57" pos:column="10"/></block></then></if>

	<if pos:line="59" pos:column="9">if <condition pos:line="59" pos:column="12">(<expr><name pos:line="59" pos:column="13">has_footer<pos:position pos:line="59" pos:column="23"/></name> <operator pos:line="59" pos:column="24">!=<pos:position pos:line="59" pos:column="26"/></operator> <literal type="number" pos:line="59" pos:column="27">3<pos:position pos:line="59" pos:column="28"/></literal> <operator pos:line="59" pos:column="29">&amp;&amp;<pos:position pos:line="59" pos:column="39"/></operator> <operator pos:line="59" pos:column="32">(<pos:position pos:line="59" pos:column="33"/></operator><operator pos:line="59" pos:column="33">!<pos:position pos:line="59" pos:column="34"/></operator><name pos:line="59" pos:column="34">no_dup_sob<pos:position pos:line="59" pos:column="44"/></name> <operator pos:line="59" pos:column="45">||<pos:position pos:line="59" pos:column="47"/></operator> <name pos:line="59" pos:column="48">has_footer<pos:position pos:line="59" pos:column="58"/></name> <operator pos:line="59" pos:column="59">!=<pos:position pos:line="59" pos:column="61"/></operator> <literal type="number" pos:line="59" pos:column="62">2<pos:position pos:line="59" pos:column="63"/></literal><operator pos:line="59" pos:column="63">)<pos:position pos:line="59" pos:column="64"/></operator></expr>)<pos:position pos:line="59" pos:column="65"/></condition><then pos:line="59" pos:column="65">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="60" pos:column="17">strbuf_splice<pos:position pos:line="60" pos:column="30"/></name><argument_list pos:line="60" pos:column="30">(<argument><expr><name pos:line="60" pos:column="31">msgbuf<pos:position pos:line="60" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="39">msgbuf<pos:position pos:line="60" pos:column="45"/></name><operator pos:line="60" pos:column="45">-&gt;<pos:position pos:line="60" pos:column="50"/></operator><name pos:line="60" pos:column="47">len<pos:position pos:line="60" pos:column="50"/></name></name> <operator pos:line="60" pos:column="51">-<pos:position pos:line="60" pos:column="52"/></operator> <name pos:line="60" pos:column="53">ignore_footer<pos:position pos:line="60" pos:column="66"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="60" pos:column="68">0<pos:position pos:line="60" pos:column="69"/></literal></expr></argument>,
				<argument><expr><name><name pos:line="61" pos:column="33">sob<pos:position pos:line="61" pos:column="36"/></name><operator pos:line="61" pos:column="36">.<pos:position pos:line="61" pos:column="37"/></operator><name pos:line="61" pos:column="37">buf<pos:position pos:line="61" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="42">sob<pos:position pos:line="61" pos:column="45"/></name><operator pos:line="61" pos:column="45">.<pos:position pos:line="61" pos:column="46"/></operator><name pos:line="61" pos:column="46">len<pos:position pos:line="61" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="51"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="63" pos:column="9">strbuf_release<pos:position pos:line="63" pos:column="23"/></name><argument_list pos:line="63" pos:column="23">(<argument><expr><operator pos:line="63" pos:column="24">&amp;<pos:position pos:line="63" pos:column="29"/></operator><name pos:line="63" pos:column="25">sob<pos:position pos:line="63" pos:column="28"/></name></expr></argument>)<pos:position pos:line="63" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="30"/></expr_stmt>
}<pos:position pos:line="64" pos:column="2"/></block></function></unit>

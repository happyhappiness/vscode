<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_7008_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">optimize_utf8<pos:position pos:line="2" pos:column="14"/></name> <parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name pos:line="2" pos:column="16">re_dfa_t<pos:position pos:line="2" pos:column="24"/></name> <modifier pos:line="2" pos:column="25">*<pos:position pos:line="2" pos:column="26"/></modifier></type><name pos:line="2" pos:column="26">dfa<pos:position pos:line="2" pos:column="29"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="30"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">node<pos:position pos:line="4" pos:column="11"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="13">i<pos:position pos:line="4" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="16">mb_chars<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><literal type="number" pos:line="4" pos:column="27">0<pos:position pos:line="4" pos:column="28"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="30">has_period<pos:position pos:line="4" pos:column="40"/></name> <init pos:line="4" pos:column="41">= <expr><literal type="number" pos:line="4" pos:column="43">0<pos:position pos:line="4" pos:column="44"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="45"/></decl_stmt>

  <for pos:line="6" pos:column="3">for <control pos:line="6" pos:column="7">(<init><expr><name pos:line="6" pos:column="8">node<pos:position pos:line="6" pos:column="12"/></name> <operator pos:line="6" pos:column="13">=<pos:position pos:line="6" pos:column="14"/></operator> <literal type="number" pos:line="6" pos:column="15">0<pos:position pos:line="6" pos:column="16"/></literal></expr>;<pos:position pos:line="6" pos:column="17"/></init> <condition><expr><name pos:line="6" pos:column="18">node<pos:position pos:line="6" pos:column="22"/></name> <operator pos:line="6" pos:column="23">&lt;<pos:position pos:line="6" pos:column="27"/></operator> <name><name pos:line="6" pos:column="25">dfa<pos:position pos:line="6" pos:column="28"/></name><operator pos:line="6" pos:column="28">-&gt;<pos:position pos:line="6" pos:column="33"/></operator><name pos:line="6" pos:column="30">nodes_len<pos:position pos:line="6" pos:column="39"/></name></name></expr>;<pos:position pos:line="6" pos:column="40"/></condition> <incr><expr><operator pos:line="6" pos:column="41">++<pos:position pos:line="6" pos:column="43"/></operator><name pos:line="6" pos:column="43">node<pos:position pos:line="6" pos:column="47"/></name></expr></incr>)<pos:position pos:line="6" pos:column="48"/></control>
    <block type="pseudo"><switch pos:line="7" pos:column="5">switch <condition pos:line="7" pos:column="12">(<expr><name><name pos:line="7" pos:column="13">dfa<pos:position pos:line="7" pos:column="16"/></name><operator pos:line="7" pos:column="16">-&gt;<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="18">nodes<pos:position pos:line="7" pos:column="23"/></name><index pos:line="7" pos:column="23">[<expr><name pos:line="7" pos:column="24">node<pos:position pos:line="7" pos:column="28"/></name></expr>]<pos:position pos:line="7" pos:column="29"/></index></name><operator pos:line="7" pos:column="29">.<pos:position pos:line="7" pos:column="30"/></operator><name pos:line="7" pos:column="30">type<pos:position pos:line="7" pos:column="34"/></name></expr>)<pos:position pos:line="7" pos:column="35"/></condition>
      <block pos:line="8" pos:column="7">{
      <case pos:line="9" pos:column="7">case <expr><name pos:line="9" pos:column="12">CHARACTER<pos:position pos:line="9" pos:column="21"/></name></expr>:<pos:position pos:line="9" pos:column="22"/></case>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name><name pos:line="10" pos:column="13">dfa<pos:position pos:line="10" pos:column="16"/></name><operator pos:line="10" pos:column="16">-&gt;<pos:position pos:line="10" pos:column="21"/></operator><name pos:line="10" pos:column="18">nodes<pos:position pos:line="10" pos:column="23"/></name><index pos:line="10" pos:column="23">[<expr><name pos:line="10" pos:column="24">node<pos:position pos:line="10" pos:column="28"/></name></expr>]<pos:position pos:line="10" pos:column="29"/></index></name><operator pos:line="10" pos:column="29">.<pos:position pos:line="10" pos:column="30"/></operator><name><name pos:line="10" pos:column="30">opr<pos:position pos:line="10" pos:column="33"/></name><operator pos:line="10" pos:column="33">.<pos:position pos:line="10" pos:column="34"/></operator><name pos:line="10" pos:column="34">c<pos:position pos:line="10" pos:column="35"/></name></name> <operator pos:line="10" pos:column="36">&gt;=<pos:position pos:line="10" pos:column="41"/></operator> <literal type="number" pos:line="10" pos:column="39">0x80<pos:position pos:line="10" pos:column="43"/></literal></expr>)<pos:position pos:line="10" pos:column="44"/></condition><then pos:line="10" pos:column="44">
	  <block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="11">mb_chars<pos:position pos:line="11" pos:column="19"/></name> <operator pos:line="11" pos:column="20">=<pos:position pos:line="11" pos:column="21"/></operator> <literal type="number" pos:line="11" pos:column="22">1<pos:position pos:line="11" pos:column="23"/></literal></expr>;<pos:position pos:line="11" pos:column="24"/></expr_stmt></block></then></if>
	<break pos:line="12" pos:column="9">break;<pos:position pos:line="12" pos:column="15"/></break>
      <case pos:line="13" pos:column="7">case <expr><name pos:line="13" pos:column="12">ANCHOR<pos:position pos:line="13" pos:column="18"/></name></expr>:<pos:position pos:line="13" pos:column="19"/></case>
	<switch pos:line="14" pos:column="9">switch <condition pos:line="14" pos:column="16">(<expr><name><name pos:line="14" pos:column="17">dfa<pos:position pos:line="14" pos:column="20"/></name><operator pos:line="14" pos:column="20">-&gt;<pos:position pos:line="14" pos:column="25"/></operator><name pos:line="14" pos:column="22">nodes<pos:position pos:line="14" pos:column="27"/></name><index pos:line="14" pos:column="27">[<expr><name pos:line="14" pos:column="28">node<pos:position pos:line="14" pos:column="32"/></name></expr>]<pos:position pos:line="14" pos:column="33"/></index></name><operator pos:line="14" pos:column="33">.<pos:position pos:line="14" pos:column="34"/></operator><name><name pos:line="14" pos:column="34">opr<pos:position pos:line="14" pos:column="37"/></name><operator pos:line="14" pos:column="37">.<pos:position pos:line="14" pos:column="38"/></operator><name pos:line="14" pos:column="38">ctx_type<pos:position pos:line="14" pos:column="46"/></name></name></expr>)<pos:position pos:line="14" pos:column="47"/></condition>
	  <block pos:line="15" pos:column="11">{
	  <case pos:line="16" pos:column="11">case <expr><name pos:line="16" pos:column="16">LINE_FIRST<pos:position pos:line="16" pos:column="26"/></name></expr>:<pos:position pos:line="16" pos:column="27"/></case>
	  <case pos:line="17" pos:column="11">case <expr><name pos:line="17" pos:column="16">LINE_LAST<pos:position pos:line="17" pos:column="25"/></name></expr>:<pos:position pos:line="17" pos:column="26"/></case>
	  <case pos:line="18" pos:column="11">case <expr><name pos:line="18" pos:column="16">BUF_FIRST<pos:position pos:line="18" pos:column="25"/></name></expr>:<pos:position pos:line="18" pos:column="26"/></case>
	  <case pos:line="19" pos:column="11">case <expr><name pos:line="19" pos:column="16">BUF_LAST<pos:position pos:line="19" pos:column="24"/></name></expr>:<pos:position pos:line="19" pos:column="25"/></case>
	    <break pos:line="20" pos:column="13">break;<pos:position pos:line="20" pos:column="19"/></break>
	  <default pos:line="21" pos:column="11">default:<pos:position pos:line="21" pos:column="19"/></default>
	    <comment type="block" pos:line="22" pos:column="13">/* Word anchors etc. cannot be handled.  It's okay to test
	       opr.ctx_type since constraints (for all DFA nodes) are
	       created by ORing one or more opr.ctx_type values.  */</comment>
	    <return pos:line="25" pos:column="13">return;<pos:position pos:line="25" pos:column="20"/></return>
	  }<pos:position pos:line="26" pos:column="12"/></block></switch>
	<break pos:line="27" pos:column="9">break;<pos:position pos:line="27" pos:column="15"/></break>
      <case pos:line="28" pos:column="7">case <expr><name pos:line="28" pos:column="12">OP_PERIOD<pos:position pos:line="28" pos:column="21"/></name></expr>:<pos:position pos:line="28" pos:column="22"/></case>
	<expr_stmt><expr><name pos:line="29" pos:column="9">has_period<pos:position pos:line="29" pos:column="19"/></name> <operator pos:line="29" pos:column="20">=<pos:position pos:line="29" pos:column="21"/></operator> <literal type="number" pos:line="29" pos:column="22">1<pos:position pos:line="29" pos:column="23"/></literal></expr>;<pos:position pos:line="29" pos:column="24"/></expr_stmt>
	<break pos:line="30" pos:column="9">break;<pos:position pos:line="30" pos:column="15"/></break>
      <case pos:line="31" pos:column="7">case <expr><name pos:line="31" pos:column="12">OP_BACK_REF<pos:position pos:line="31" pos:column="23"/></name></expr>:<pos:position pos:line="31" pos:column="24"/></case>
      <case pos:line="32" pos:column="7">case <expr><name pos:line="32" pos:column="12">OP_ALT<pos:position pos:line="32" pos:column="18"/></name></expr>:<pos:position pos:line="32" pos:column="19"/></case>
      <case pos:line="33" pos:column="7">case <expr><name pos:line="33" pos:column="12">END_OF_RE<pos:position pos:line="33" pos:column="21"/></name></expr>:<pos:position pos:line="33" pos:column="22"/></case>
      <case pos:line="34" pos:column="7">case <expr><name pos:line="34" pos:column="12">OP_DUP_ASTERISK<pos:position pos:line="34" pos:column="27"/></name></expr>:<pos:position pos:line="34" pos:column="28"/></case>
      <case pos:line="35" pos:column="7">case <expr><name pos:line="35" pos:column="12">OP_OPEN_SUBEXP<pos:position pos:line="35" pos:column="26"/></name></expr>:<pos:position pos:line="35" pos:column="27"/></case>
      <case pos:line="36" pos:column="7">case <expr><name pos:line="36" pos:column="12">OP_CLOSE_SUBEXP<pos:position pos:line="36" pos:column="27"/></name></expr>:<pos:position pos:line="36" pos:column="28"/></case>
	<break pos:line="37" pos:column="9">break;<pos:position pos:line="37" pos:column="15"/></break>
      <case pos:line="38" pos:column="7">case <expr><name pos:line="38" pos:column="12">COMPLEX_BRACKET<pos:position pos:line="38" pos:column="27"/></name></expr>:<pos:position pos:line="38" pos:column="28"/></case>
	<return pos:line="39" pos:column="9">return;<pos:position pos:line="39" pos:column="16"/></return>
      <case pos:line="40" pos:column="7">case <expr><name pos:line="40" pos:column="12">SIMPLE_BRACKET<pos:position pos:line="40" pos:column="26"/></name></expr>:<pos:position pos:line="40" pos:column="27"/></case>
	<comment type="block" pos:line="41" pos:column="9">/* Just double check.  The non-ASCII range starts at 0x80.  */</comment>
	<expr_stmt><expr><call><name pos:line="42" pos:column="9">assert<pos:position pos:line="42" pos:column="15"/></name> <argument_list pos:line="42" pos:column="16">(<argument><expr><literal type="number" pos:line="42" pos:column="17">0x80<pos:position pos:line="42" pos:column="21"/></literal> <operator pos:line="42" pos:column="22">%<pos:position pos:line="42" pos:column="23"/></operator> <name pos:line="42" pos:column="24">BITSET_WORD_BITS<pos:position pos:line="42" pos:column="40"/></name> <operator pos:line="42" pos:column="41">==<pos:position pos:line="42" pos:column="43"/></operator> <literal type="number" pos:line="42" pos:column="44">0<pos:position pos:line="42" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="47"/></expr_stmt>
	<for pos:line="43" pos:column="9">for <control pos:line="43" pos:column="13">(<init><expr><name pos:line="43" pos:column="14">i<pos:position pos:line="43" pos:column="15"/></name> <operator pos:line="43" pos:column="16">=<pos:position pos:line="43" pos:column="17"/></operator> <literal type="number" pos:line="43" pos:column="18">0x80<pos:position pos:line="43" pos:column="22"/></literal> <operator pos:line="43" pos:column="23">/<pos:position pos:line="43" pos:column="24"/></operator> <name pos:line="43" pos:column="25">BITSET_WORD_BITS<pos:position pos:line="43" pos:column="41"/></name></expr>;<pos:position pos:line="43" pos:column="42"/></init> <condition><expr><name pos:line="43" pos:column="43">i<pos:position pos:line="43" pos:column="44"/></name> <operator pos:line="43" pos:column="45">&lt;<pos:position pos:line="43" pos:column="49"/></operator> <name pos:line="43" pos:column="47">BITSET_WORDS<pos:position pos:line="43" pos:column="59"/></name></expr>;<pos:position pos:line="43" pos:column="60"/></condition> <incr><expr><operator pos:line="43" pos:column="61">++<pos:position pos:line="43" pos:column="63"/></operator><name pos:line="43" pos:column="63">i<pos:position pos:line="43" pos:column="64"/></name></expr></incr>)<pos:position pos:line="43" pos:column="65"/></control>
	  <block type="pseudo"><if pos:line="44" pos:column="11">if <condition pos:line="44" pos:column="14">(<expr><name><name pos:line="44" pos:column="15">dfa<pos:position pos:line="44" pos:column="18"/></name><operator pos:line="44" pos:column="18">-&gt;<pos:position pos:line="44" pos:column="23"/></operator><name pos:line="44" pos:column="20">nodes<pos:position pos:line="44" pos:column="25"/></name><index pos:line="44" pos:column="25">[<expr><name pos:line="44" pos:column="26">node<pos:position pos:line="44" pos:column="30"/></name></expr>]<pos:position pos:line="44" pos:column="31"/></index></name><operator pos:line="44" pos:column="31">.<pos:position pos:line="44" pos:column="32"/></operator><name><name pos:line="44" pos:column="32">opr<pos:position pos:line="44" pos:column="35"/></name><operator pos:line="44" pos:column="35">.<pos:position pos:line="44" pos:column="36"/></operator><name pos:line="44" pos:column="36">sbcset<pos:position pos:line="44" pos:column="42"/></name><index pos:line="44" pos:column="42">[<expr><name pos:line="44" pos:column="43">i<pos:position pos:line="44" pos:column="44"/></name></expr>]<pos:position pos:line="44" pos:column="45"/></index></name></expr>)<pos:position pos:line="44" pos:column="46"/></condition><then pos:line="44" pos:column="46">
	    <block type="pseudo"><return pos:line="45" pos:column="13">return;<pos:position pos:line="45" pos:column="20"/></return></block></then></if></block></for>
	<break pos:line="46" pos:column="9">break;<pos:position pos:line="46" pos:column="15"/></break>
      <default pos:line="47" pos:column="7">default:<pos:position pos:line="47" pos:column="15"/></default>
	<expr_stmt><expr><call><name pos:line="48" pos:column="9">abort<pos:position pos:line="48" pos:column="14"/></name> <argument_list pos:line="48" pos:column="15">()<pos:position pos:line="48" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="18"/></expr_stmt>
      }<pos:position pos:line="49" pos:column="8"/></block></switch></block></for>

  <if pos:line="51" pos:column="3">if <condition pos:line="51" pos:column="6">(<expr><name pos:line="51" pos:column="7">mb_chars<pos:position pos:line="51" pos:column="15"/></name> <operator pos:line="51" pos:column="16">||<pos:position pos:line="51" pos:column="18"/></operator> <name pos:line="51" pos:column="19">has_period<pos:position pos:line="51" pos:column="29"/></name></expr>)<pos:position pos:line="51" pos:column="30"/></condition><then pos:line="51" pos:column="30">
    <block type="pseudo"><for pos:line="52" pos:column="5">for <control pos:line="52" pos:column="9">(<init><expr><name pos:line="52" pos:column="10">node<pos:position pos:line="52" pos:column="14"/></name> <operator pos:line="52" pos:column="15">=<pos:position pos:line="52" pos:column="16"/></operator> <literal type="number" pos:line="52" pos:column="17">0<pos:position pos:line="52" pos:column="18"/></literal></expr>;<pos:position pos:line="52" pos:column="19"/></init> <condition><expr><name pos:line="52" pos:column="20">node<pos:position pos:line="52" pos:column="24"/></name> <operator pos:line="52" pos:column="25">&lt;<pos:position pos:line="52" pos:column="29"/></operator> <name><name pos:line="52" pos:column="27">dfa<pos:position pos:line="52" pos:column="30"/></name><operator pos:line="52" pos:column="30">-&gt;<pos:position pos:line="52" pos:column="35"/></operator><name pos:line="52" pos:column="32">nodes_len<pos:position pos:line="52" pos:column="41"/></name></name></expr>;<pos:position pos:line="52" pos:column="42"/></condition> <incr><expr><operator pos:line="52" pos:column="43">++<pos:position pos:line="52" pos:column="45"/></operator><name pos:line="52" pos:column="45">node<pos:position pos:line="52" pos:column="49"/></name></expr></incr>)<pos:position pos:line="52" pos:column="50"/></control>
      <block pos:line="53" pos:column="7">{
	<if pos:line="54" pos:column="9">if <condition pos:line="54" pos:column="12">(<expr><name><name pos:line="54" pos:column="13">dfa<pos:position pos:line="54" pos:column="16"/></name><operator pos:line="54" pos:column="16">-&gt;<pos:position pos:line="54" pos:column="21"/></operator><name pos:line="54" pos:column="18">nodes<pos:position pos:line="54" pos:column="23"/></name><index pos:line="54" pos:column="23">[<expr><name pos:line="54" pos:column="24">node<pos:position pos:line="54" pos:column="28"/></name></expr>]<pos:position pos:line="54" pos:column="29"/></index></name><operator pos:line="54" pos:column="29">.<pos:position pos:line="54" pos:column="30"/></operator><name pos:line="54" pos:column="30">type<pos:position pos:line="54" pos:column="34"/></name> <operator pos:line="54" pos:column="35">==<pos:position pos:line="54" pos:column="37"/></operator> <name pos:line="54" pos:column="38">CHARACTER<pos:position pos:line="54" pos:column="47"/></name>
	    <operator pos:line="55" pos:column="13">&amp;&amp;<pos:position pos:line="55" pos:column="23"/></operator> <name><name pos:line="55" pos:column="16">dfa<pos:position pos:line="55" pos:column="19"/></name><operator pos:line="55" pos:column="19">-&gt;<pos:position pos:line="55" pos:column="24"/></operator><name pos:line="55" pos:column="21">nodes<pos:position pos:line="55" pos:column="26"/></name><index pos:line="55" pos:column="26">[<expr><name pos:line="55" pos:column="27">node<pos:position pos:line="55" pos:column="31"/></name></expr>]<pos:position pos:line="55" pos:column="32"/></index></name><operator pos:line="55" pos:column="32">.<pos:position pos:line="55" pos:column="33"/></operator><name><name pos:line="55" pos:column="33">opr<pos:position pos:line="55" pos:column="36"/></name><operator pos:line="55" pos:column="36">.<pos:position pos:line="55" pos:column="37"/></operator><name pos:line="55" pos:column="37">c<pos:position pos:line="55" pos:column="38"/></name></name> <operator pos:line="55" pos:column="39">&gt;=<pos:position pos:line="55" pos:column="44"/></operator> <literal type="number" pos:line="55" pos:column="42">0x80<pos:position pos:line="55" pos:column="46"/></literal></expr>)<pos:position pos:line="55" pos:column="47"/></condition><then pos:line="55" pos:column="47">
	  <block type="pseudo"><expr_stmt><expr><name><name pos:line="56" pos:column="11">dfa<pos:position pos:line="56" pos:column="14"/></name><operator pos:line="56" pos:column="14">-&gt;<pos:position pos:line="56" pos:column="19"/></operator><name pos:line="56" pos:column="16">nodes<pos:position pos:line="56" pos:column="21"/></name><index pos:line="56" pos:column="21">[<expr><name pos:line="56" pos:column="22">node<pos:position pos:line="56" pos:column="26"/></name></expr>]<pos:position pos:line="56" pos:column="27"/></index></name><operator pos:line="56" pos:column="27">.<pos:position pos:line="56" pos:column="28"/></operator><name pos:line="56" pos:column="28">mb_partial<pos:position pos:line="56" pos:column="38"/></name> <operator pos:line="56" pos:column="39">=<pos:position pos:line="56" pos:column="40"/></operator> <literal type="number" pos:line="56" pos:column="41">0<pos:position pos:line="56" pos:column="42"/></literal></expr>;<pos:position pos:line="56" pos:column="43"/></expr_stmt></block></then>
	<elseif pos:line="57" pos:column="9">else <if pos:line="57" pos:column="14">if <condition pos:line="57" pos:column="17">(<expr><name><name pos:line="57" pos:column="18">dfa<pos:position pos:line="57" pos:column="21"/></name><operator pos:line="57" pos:column="21">-&gt;<pos:position pos:line="57" pos:column="26"/></operator><name pos:line="57" pos:column="23">nodes<pos:position pos:line="57" pos:column="28"/></name><index pos:line="57" pos:column="28">[<expr><name pos:line="57" pos:column="29">node<pos:position pos:line="57" pos:column="33"/></name></expr>]<pos:position pos:line="57" pos:column="34"/></index></name><operator pos:line="57" pos:column="34">.<pos:position pos:line="57" pos:column="35"/></operator><name pos:line="57" pos:column="35">type<pos:position pos:line="57" pos:column="39"/></name> <operator pos:line="57" pos:column="40">==<pos:position pos:line="57" pos:column="42"/></operator> <name pos:line="57" pos:column="43">OP_PERIOD<pos:position pos:line="57" pos:column="52"/></name></expr>)<pos:position pos:line="57" pos:column="53"/></condition><then pos:line="57" pos:column="53">
	  <block type="pseudo"><expr_stmt><expr><name><name pos:line="58" pos:column="11">dfa<pos:position pos:line="58" pos:column="14"/></name><operator pos:line="58" pos:column="14">-&gt;<pos:position pos:line="58" pos:column="19"/></operator><name pos:line="58" pos:column="16">nodes<pos:position pos:line="58" pos:column="21"/></name><index pos:line="58" pos:column="21">[<expr><name pos:line="58" pos:column="22">node<pos:position pos:line="58" pos:column="26"/></name></expr>]<pos:position pos:line="58" pos:column="27"/></index></name><operator pos:line="58" pos:column="27">.<pos:position pos:line="58" pos:column="28"/></operator><name pos:line="58" pos:column="28">type<pos:position pos:line="58" pos:column="32"/></name> <operator pos:line="58" pos:column="33">=<pos:position pos:line="58" pos:column="34"/></operator> <name pos:line="58" pos:column="35">OP_UTF8_PERIOD<pos:position pos:line="58" pos:column="49"/></name></expr>;<pos:position pos:line="58" pos:column="50"/></expr_stmt></block></then></if></elseif></if>
      }<pos:position pos:line="59" pos:column="8"/></block></for></block></then></if>

  <comment type="block" pos:line="61" pos:column="3">/* The search can be in single byte locale.  */</comment>
  <expr_stmt><expr><name><name pos:line="62" pos:column="3">dfa<pos:position pos:line="62" pos:column="6"/></name><operator pos:line="62" pos:column="6">-&gt;<pos:position pos:line="62" pos:column="11"/></operator><name pos:line="62" pos:column="8">mb_cur_max<pos:position pos:line="62" pos:column="18"/></name></name> <operator pos:line="62" pos:column="19">=<pos:position pos:line="62" pos:column="20"/></operator> <literal type="number" pos:line="62" pos:column="21">1<pos:position pos:line="62" pos:column="22"/></literal></expr>;<pos:position pos:line="62" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="63" pos:column="3">dfa<pos:position pos:line="63" pos:column="6"/></name><operator pos:line="63" pos:column="6">-&gt;<pos:position pos:line="63" pos:column="11"/></operator><name pos:line="63" pos:column="8">is_utf8<pos:position pos:line="63" pos:column="15"/></name></name> <operator pos:line="63" pos:column="16">=<pos:position pos:line="63" pos:column="17"/></operator> <literal type="number" pos:line="63" pos:column="18">0<pos:position pos:line="63" pos:column="19"/></literal></expr>;<pos:position pos:line="63" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="64" pos:column="3">dfa<pos:position pos:line="64" pos:column="6"/></name><operator pos:line="64" pos:column="6">-&gt;<pos:position pos:line="64" pos:column="11"/></operator><name pos:line="64" pos:column="8">has_mb_node<pos:position pos:line="64" pos:column="19"/></name></name> <operator pos:line="64" pos:column="20">=<pos:position pos:line="64" pos:column="21"/></operator> <name><name pos:line="64" pos:column="22">dfa<pos:position pos:line="64" pos:column="25"/></name><operator pos:line="64" pos:column="25">-&gt;<pos:position pos:line="64" pos:column="30"/></operator><name pos:line="64" pos:column="27">nbackref<pos:position pos:line="64" pos:column="35"/></name></name> <operator pos:line="64" pos:column="36">&gt;<pos:position pos:line="64" pos:column="40"/></operator> <literal type="number" pos:line="64" pos:column="38">0<pos:position pos:line="64" pos:column="39"/></literal> <operator pos:line="64" pos:column="40">||<pos:position pos:line="64" pos:column="42"/></operator> <name pos:line="64" pos:column="43">has_period<pos:position pos:line="64" pos:column="53"/></name></expr>;<pos:position pos:line="64" pos:column="54"/></expr_stmt>
}<pos:position pos:line="65" pos:column="2"/></block></function></unit>

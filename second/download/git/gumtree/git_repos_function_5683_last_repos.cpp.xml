<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5683_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">git_log_config<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">var<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="44">const<pos:position pos:line="1" pos:column="49"/></specifier> <name pos:line="1" pos:column="50">char<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">value<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="63">void<pos:position pos:line="1" pos:column="67"/></name> <modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier></type><name pos:line="1" pos:column="69">cb<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="72"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">slot_name<pos:position pos:line="3" pos:column="30"/></name></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><call><name pos:line="5" pos:column="14">strcmp<pos:position pos:line="5" pos:column="20"/></name><argument_list pos:line="5" pos:column="20">(<argument><expr><name pos:line="5" pos:column="21">var<pos:position pos:line="5" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="26">"format.pretty"<pos:position pos:line="5" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="43"/></condition><then pos:line="5" pos:column="43">
		<block type="pseudo"><return pos:line="6" pos:column="17">return <expr><call><name pos:line="6" pos:column="24">git_config_string<pos:position pos:line="6" pos:column="41"/></name><argument_list pos:line="6" pos:column="41">(<argument><expr><operator pos:line="6" pos:column="42">&amp;<pos:position pos:line="6" pos:column="47"/></operator><name pos:line="6" pos:column="43">fmt_pretty<pos:position pos:line="6" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="55">var<pos:position pos:line="6" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="60">value<pos:position pos:line="6" pos:column="65"/></name></expr></argument>)<pos:position pos:line="6" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="67"/></return></block></then></if>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><call><name pos:line="7" pos:column="14">strcmp<pos:position pos:line="7" pos:column="20"/></name><argument_list pos:line="7" pos:column="20">(<argument><expr><name pos:line="7" pos:column="21">var<pos:position pos:line="7" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="26">"format.subjectprefix"<pos:position pos:line="7" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="50"/></condition><then pos:line="7" pos:column="50">
		<block type="pseudo"><return pos:line="8" pos:column="17">return <expr><call><name pos:line="8" pos:column="24">git_config_string<pos:position pos:line="8" pos:column="41"/></name><argument_list pos:line="8" pos:column="41">(<argument><expr><operator pos:line="8" pos:column="42">&amp;<pos:position pos:line="8" pos:column="47"/></operator><name pos:line="8" pos:column="43">fmt_patch_subject_prefix<pos:position pos:line="8" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="69">var<pos:position pos:line="8" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="74">value<pos:position pos:line="8" pos:column="79"/></name></expr></argument>)<pos:position pos:line="8" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="81"/></return></block></then></if>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">!<pos:position pos:line="9" pos:column="14"/></operator><call><name pos:line="9" pos:column="14">strcmp<pos:position pos:line="9" pos:column="20"/></name><argument_list pos:line="9" pos:column="20">(<argument><expr><name pos:line="9" pos:column="21">var<pos:position pos:line="9" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="26">"log.abbrevcommit"<pos:position pos:line="9" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="46"/></condition><then pos:line="9" pos:column="46"> <block pos:line="9" pos:column="47">{
		<expr_stmt><expr><name pos:line="10" pos:column="17">default_abbrev_commit<pos:position pos:line="10" pos:column="38"/></name> <operator pos:line="10" pos:column="39">=<pos:position pos:line="10" pos:column="40"/></operator> <call><name pos:line="10" pos:column="41">git_config_bool<pos:position pos:line="10" pos:column="56"/></name><argument_list pos:line="10" pos:column="56">(<argument><expr><name pos:line="10" pos:column="57">var<pos:position pos:line="10" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="62">value<pos:position pos:line="10" pos:column="67"/></name></expr></argument>)<pos:position pos:line="10" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="69"/></expr_stmt>
		<return pos:line="11" pos:column="17">return <expr><literal type="number" pos:line="11" pos:column="24">0<pos:position pos:line="11" pos:column="25"/></literal></expr>;<pos:position pos:line="11" pos:column="26"/></return>
	}<pos:position pos:line="12" pos:column="10"/></block></then></if>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><call><name pos:line="13" pos:column="14">strcmp<pos:position pos:line="13" pos:column="20"/></name><argument_list pos:line="13" pos:column="20">(<argument><expr><name pos:line="13" pos:column="21">var<pos:position pos:line="13" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="26">"log.date"<pos:position pos:line="13" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="38"/></condition><then pos:line="13" pos:column="38">
		<block type="pseudo"><return pos:line="14" pos:column="17">return <expr><call><name pos:line="14" pos:column="24">git_config_string<pos:position pos:line="14" pos:column="41"/></name><argument_list pos:line="14" pos:column="41">(<argument><expr><operator pos:line="14" pos:column="42">&amp;<pos:position pos:line="14" pos:column="47"/></operator><name pos:line="14" pos:column="43">default_date_mode<pos:position pos:line="14" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="62">var<pos:position pos:line="14" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="67">value<pos:position pos:line="14" pos:column="72"/></name></expr></argument>)<pos:position pos:line="14" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="74"/></return></block></then></if>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">!<pos:position pos:line="15" pos:column="14"/></operator><call><name pos:line="15" pos:column="14">strcmp<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">(<argument><expr><name pos:line="15" pos:column="21">var<pos:position pos:line="15" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="26">"log.decorate"<pos:position pos:line="15" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="42"/></condition><then pos:line="15" pos:column="42"> <block pos:line="15" pos:column="43">{
		<expr_stmt><expr><name pos:line="16" pos:column="17">decoration_style<pos:position pos:line="16" pos:column="33"/></name> <operator pos:line="16" pos:column="34">=<pos:position pos:line="16" pos:column="35"/></operator> <call><name pos:line="16" pos:column="36">parse_decoration_style<pos:position pos:line="16" pos:column="58"/></name><argument_list pos:line="16" pos:column="58">(<argument><expr><name pos:line="16" pos:column="59">var<pos:position pos:line="16" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="64">value<pos:position pos:line="16" pos:column="69"/></name></expr></argument>)<pos:position pos:line="16" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="71"/></expr_stmt>
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><name pos:line="17" pos:column="21">decoration_style<pos:position pos:line="17" pos:column="37"/></name> <operator pos:line="17" pos:column="38">&lt;<pos:position pos:line="17" pos:column="42"/></operator> <literal type="number" pos:line="17" pos:column="40">0<pos:position pos:line="17" pos:column="41"/></literal></expr>)<pos:position pos:line="17" pos:column="42"/></condition><then pos:line="17" pos:column="42">
			<block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="25">decoration_style<pos:position pos:line="18" pos:column="41"/></name> <operator pos:line="18" pos:column="42">=<pos:position pos:line="18" pos:column="43"/></operator> <literal type="number" pos:line="18" pos:column="44">0<pos:position pos:line="18" pos:column="45"/></literal></expr>;<pos:position pos:line="18" pos:column="46"/></expr_stmt></block></then></if> <comment type="block" pos:line="18" pos:column="47">/* maybe warn? */</comment>
		<return pos:line="19" pos:column="17">return <expr><literal type="number" pos:line="19" pos:column="24">0<pos:position pos:line="19" pos:column="25"/></literal></expr>;<pos:position pos:line="19" pos:column="26"/></return>
	}<pos:position pos:line="20" pos:column="10"/></block></then></if>
	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><operator pos:line="21" pos:column="13">!<pos:position pos:line="21" pos:column="14"/></operator><call><name pos:line="21" pos:column="14">strcmp<pos:position pos:line="21" pos:column="20"/></name><argument_list pos:line="21" pos:column="20">(<argument><expr><name pos:line="21" pos:column="21">var<pos:position pos:line="21" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="26">"log.showroot"<pos:position pos:line="21" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="42"/></condition><then pos:line="21" pos:column="42"> <block pos:line="21" pos:column="43">{
		<expr_stmt><expr><name pos:line="22" pos:column="17">default_show_root<pos:position pos:line="22" pos:column="34"/></name> <operator pos:line="22" pos:column="35">=<pos:position pos:line="22" pos:column="36"/></operator> <call><name pos:line="22" pos:column="37">git_config_bool<pos:position pos:line="22" pos:column="52"/></name><argument_list pos:line="22" pos:column="52">(<argument><expr><name pos:line="22" pos:column="53">var<pos:position pos:line="22" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="58">value<pos:position pos:line="22" pos:column="63"/></name></expr></argument>)<pos:position pos:line="22" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="65"/></expr_stmt>
		<return pos:line="23" pos:column="17">return <expr><literal type="number" pos:line="23" pos:column="24">0<pos:position pos:line="23" pos:column="25"/></literal></expr>;<pos:position pos:line="23" pos:column="26"/></return>
	}<pos:position pos:line="24" pos:column="10"/></block></then></if>
	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><operator pos:line="25" pos:column="13">!<pos:position pos:line="25" pos:column="14"/></operator><call><name pos:line="25" pos:column="14">strcmp<pos:position pos:line="25" pos:column="20"/></name><argument_list pos:line="25" pos:column="20">(<argument><expr><name pos:line="25" pos:column="21">var<pos:position pos:line="25" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="26">"log.follow"<pos:position pos:line="25" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="40"/></condition><then pos:line="25" pos:column="40"> <block pos:line="25" pos:column="41">{
		<expr_stmt><expr><name pos:line="26" pos:column="17">default_follow<pos:position pos:line="26" pos:column="31"/></name> <operator pos:line="26" pos:column="32">=<pos:position pos:line="26" pos:column="33"/></operator> <call><name pos:line="26" pos:column="34">git_config_bool<pos:position pos:line="26" pos:column="49"/></name><argument_list pos:line="26" pos:column="49">(<argument><expr><name pos:line="26" pos:column="50">var<pos:position pos:line="26" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="55">value<pos:position pos:line="26" pos:column="60"/></name></expr></argument>)<pos:position pos:line="26" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="62"/></expr_stmt>
		<return pos:line="27" pos:column="17">return <expr><literal type="number" pos:line="27" pos:column="24">0<pos:position pos:line="27" pos:column="25"/></literal></expr>;<pos:position pos:line="27" pos:column="26"/></return>
	}<pos:position pos:line="28" pos:column="10"/></block></then></if>
	<if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><call><name pos:line="29" pos:column="13">skip_prefix<pos:position pos:line="29" pos:column="24"/></name><argument_list pos:line="29" pos:column="24">(<argument><expr><name pos:line="29" pos:column="25">var<pos:position pos:line="29" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="30">"color.decorate."<pos:position pos:line="29" pos:column="47"/></literal></expr></argument>, <argument><expr><operator pos:line="29" pos:column="49">&amp;<pos:position pos:line="29" pos:column="54"/></operator><name pos:line="29" pos:column="50">slot_name<pos:position pos:line="29" pos:column="59"/></name></expr></argument>)<pos:position pos:line="29" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="61"/></condition><then pos:line="29" pos:column="61">
		<block type="pseudo"><return pos:line="30" pos:column="17">return <expr><call><name pos:line="30" pos:column="24">parse_decorate_color_config<pos:position pos:line="30" pos:column="51"/></name><argument_list pos:line="30" pos:column="51">(<argument><expr><name pos:line="30" pos:column="52">var<pos:position pos:line="30" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="57">slot_name<pos:position pos:line="30" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="68">value<pos:position pos:line="30" pos:column="73"/></name></expr></argument>)<pos:position pos:line="30" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="75"/></return></block></then></if>
	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><operator pos:line="31" pos:column="13">!<pos:position pos:line="31" pos:column="14"/></operator><call><name pos:line="31" pos:column="14">strcmp<pos:position pos:line="31" pos:column="20"/></name><argument_list pos:line="31" pos:column="20">(<argument><expr><name pos:line="31" pos:column="21">var<pos:position pos:line="31" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="26">"log.mailmap"<pos:position pos:line="31" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="41"/></condition><then pos:line="31" pos:column="41"> <block pos:line="31" pos:column="42">{
		<expr_stmt><expr><name pos:line="32" pos:column="17">use_mailmap_config<pos:position pos:line="32" pos:column="35"/></name> <operator pos:line="32" pos:column="36">=<pos:position pos:line="32" pos:column="37"/></operator> <call><name pos:line="32" pos:column="38">git_config_bool<pos:position pos:line="32" pos:column="53"/></name><argument_list pos:line="32" pos:column="53">(<argument><expr><name pos:line="32" pos:column="54">var<pos:position pos:line="32" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="59">value<pos:position pos:line="32" pos:column="64"/></name></expr></argument>)<pos:position pos:line="32" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="66"/></expr_stmt>
		<return pos:line="33" pos:column="17">return <expr><literal type="number" pos:line="33" pos:column="24">0<pos:position pos:line="33" pos:column="25"/></literal></expr>;<pos:position pos:line="33" pos:column="26"/></return>
	}<pos:position pos:line="34" pos:column="10"/></block></then></if>
	<if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><operator pos:line="35" pos:column="13">!<pos:position pos:line="35" pos:column="14"/></operator><call><name pos:line="35" pos:column="14">strcmp<pos:position pos:line="35" pos:column="20"/></name><argument_list pos:line="35" pos:column="20">(<argument><expr><name pos:line="35" pos:column="21">var<pos:position pos:line="35" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="26">"log.showsignature"<pos:position pos:line="35" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="47"/></condition><then pos:line="35" pos:column="47"> <block pos:line="35" pos:column="48">{
		<expr_stmt><expr><name pos:line="36" pos:column="17">default_show_signature<pos:position pos:line="36" pos:column="39"/></name> <operator pos:line="36" pos:column="40">=<pos:position pos:line="36" pos:column="41"/></operator> <call><name pos:line="36" pos:column="42">git_config_bool<pos:position pos:line="36" pos:column="57"/></name><argument_list pos:line="36" pos:column="57">(<argument><expr><name pos:line="36" pos:column="58">var<pos:position pos:line="36" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="63">value<pos:position pos:line="36" pos:column="68"/></name></expr></argument>)<pos:position pos:line="36" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="70"/></expr_stmt>
		<return pos:line="37" pos:column="17">return <expr><literal type="number" pos:line="37" pos:column="24">0<pos:position pos:line="37" pos:column="25"/></literal></expr>;<pos:position pos:line="37" pos:column="26"/></return>
	}<pos:position pos:line="38" pos:column="10"/></block></then></if>

	<if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><call><name pos:line="40" pos:column="13">grep_config<pos:position pos:line="40" pos:column="24"/></name><argument_list pos:line="40" pos:column="24">(<argument><expr><name pos:line="40" pos:column="25">var<pos:position pos:line="40" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="30">value<pos:position pos:line="40" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="37">cb<pos:position pos:line="40" pos:column="39"/></name></expr></argument>)<pos:position pos:line="40" pos:column="40"/></argument_list></call> <operator pos:line="40" pos:column="41">&lt;<pos:position pos:line="40" pos:column="45"/></operator> <literal type="number" pos:line="40" pos:column="43">0<pos:position pos:line="40" pos:column="44"/></literal></expr>)<pos:position pos:line="40" pos:column="45"/></condition><then pos:line="40" pos:column="45">
		<block type="pseudo"><return pos:line="41" pos:column="17">return <expr><operator pos:line="41" pos:column="24">-<pos:position pos:line="41" pos:column="25"/></operator><literal type="number" pos:line="41" pos:column="25">1<pos:position pos:line="41" pos:column="26"/></literal></expr>;<pos:position pos:line="41" pos:column="27"/></return></block></then></if>
	<if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><call><name pos:line="42" pos:column="13">git_gpg_config<pos:position pos:line="42" pos:column="27"/></name><argument_list pos:line="42" pos:column="27">(<argument><expr><name pos:line="42" pos:column="28">var<pos:position pos:line="42" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="33">value<pos:position pos:line="42" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="40">cb<pos:position pos:line="42" pos:column="42"/></name></expr></argument>)<pos:position pos:line="42" pos:column="43"/></argument_list></call> <operator pos:line="42" pos:column="44">&lt;<pos:position pos:line="42" pos:column="48"/></operator> <literal type="number" pos:line="42" pos:column="46">0<pos:position pos:line="42" pos:column="47"/></literal></expr>)<pos:position pos:line="42" pos:column="48"/></condition><then pos:line="42" pos:column="48">
		<block type="pseudo"><return pos:line="43" pos:column="17">return <expr><operator pos:line="43" pos:column="24">-<pos:position pos:line="43" pos:column="25"/></operator><literal type="number" pos:line="43" pos:column="25">1<pos:position pos:line="43" pos:column="26"/></literal></expr>;<pos:position pos:line="43" pos:column="27"/></return></block></then></if>
	<return pos:line="44" pos:column="9">return <expr><call><name pos:line="44" pos:column="16">git_diff_ui_config<pos:position pos:line="44" pos:column="34"/></name><argument_list pos:line="44" pos:column="34">(<argument><expr><name pos:line="44" pos:column="35">var<pos:position pos:line="44" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="40">value<pos:position pos:line="44" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="47">cb<pos:position pos:line="44" pos:column="49"/></name></expr></argument>)<pos:position pos:line="44" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="51"/></return>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

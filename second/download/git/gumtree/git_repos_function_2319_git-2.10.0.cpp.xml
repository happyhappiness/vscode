<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2319_git-2.10.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">parse_long_opt<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">parse_opt_ctx_t<pos:position pos:line="1" pos:column="49"/></name></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">p<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="54">const<pos:position pos:line="1" pos:column="59"/></specifier> <name pos:line="1" pos:column="60">char<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">arg<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>,
                          <parameter><decl><type><specifier pos:line="2" pos:column="27">const<pos:position pos:line="2" pos:column="32"/></specifier> <name><name pos:line="2" pos:column="33">struct<pos:position pos:line="2" pos:column="39"/></name> <name pos:line="2" pos:column="40">option<pos:position pos:line="2" pos:column="46"/></name></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">options<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="56"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name><name pos:line="4" pos:column="15">struct<pos:position pos:line="4" pos:column="21"/></name> <name pos:line="4" pos:column="22">option<pos:position pos:line="4" pos:column="28"/></name></name> <modifier pos:line="4" pos:column="29">*<pos:position pos:line="4" pos:column="30"/></modifier></type><name pos:line="4" pos:column="30">all_opts<pos:position pos:line="4" pos:column="38"/></name> <init pos:line="4" pos:column="39">= <expr><name pos:line="4" pos:column="41">options<pos:position pos:line="4" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="49"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">arg_end<pos:position pos:line="5" pos:column="28"/></name> <init pos:line="5" pos:column="29">= <expr><call><name pos:line="5" pos:column="31">strchrnul<pos:position pos:line="5" pos:column="40"/></name><argument_list pos:line="5" pos:column="40">(<argument><expr><name pos:line="5" pos:column="41">arg<pos:position pos:line="5" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="5" pos:column="46">'='<pos:position pos:line="5" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="51"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name><name pos:line="6" pos:column="15">struct<pos:position pos:line="6" pos:column="21"/></name> <name pos:line="6" pos:column="22">option<pos:position pos:line="6" pos:column="28"/></name></name> <modifier pos:line="6" pos:column="29">*<pos:position pos:line="6" pos:column="30"/></modifier></type><name pos:line="6" pos:column="30">abbrev_option<pos:position pos:line="6" pos:column="43"/></name> <init pos:line="6" pos:column="44">= <expr><name pos:line="6" pos:column="46">NULL<pos:position pos:line="6" pos:column="50"/></name></expr></init></decl>, <modifier pos:line="6" pos:column="52">*<pos:position pos:line="6" pos:column="53"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="53">ambiguous_option<pos:position pos:line="6" pos:column="69"/></name> <init pos:line="6" pos:column="70">= <expr><name pos:line="6" pos:column="72">NULL<pos:position pos:line="6" pos:column="76"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="77"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">abbrev_flags<pos:position pos:line="7" pos:column="25"/></name> <init pos:line="7" pos:column="26">= <expr><literal type="number" pos:line="7" pos:column="28">0<pos:position pos:line="7" pos:column="29"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="31">ambiguous_flags<pos:position pos:line="7" pos:column="46"/></name> <init pos:line="7" pos:column="47">= <expr><literal type="number" pos:line="7" pos:column="49">0<pos:position pos:line="7" pos:column="50"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="51"/></decl_stmt>

	<for pos:line="9" pos:column="9">for <control pos:line="9" pos:column="13">(<init pos:line="9" pos:column="14">;<pos:position pos:line="9" pos:column="15"/></init> <condition><expr><name><name pos:line="9" pos:column="16">options<pos:position pos:line="9" pos:column="23"/></name><operator pos:line="9" pos:column="23">-&gt;<pos:position pos:line="9" pos:column="28"/></operator><name pos:line="9" pos:column="25">type<pos:position pos:line="9" pos:column="29"/></name></name> <operator pos:line="9" pos:column="30">!=<pos:position pos:line="9" pos:column="32"/></operator> <name pos:line="9" pos:column="33">OPTION_END<pos:position pos:line="9" pos:column="43"/></name></expr>;<pos:position pos:line="9" pos:column="44"/></condition> <incr><expr><name pos:line="9" pos:column="45">options<pos:position pos:line="9" pos:column="52"/></name><operator pos:line="9" pos:column="52">++<pos:position pos:line="9" pos:column="54"/></operator></expr></incr>)<pos:position pos:line="9" pos:column="55"/></control> <block pos:line="9" pos:column="56">{
		<decl_stmt><decl><type><specifier pos:line="10" pos:column="17">const<pos:position pos:line="10" pos:column="22"/></specifier> <name pos:line="10" pos:column="23">char<pos:position pos:line="10" pos:column="27"/></name> <modifier pos:line="10" pos:column="28">*<pos:position pos:line="10" pos:column="29"/></modifier></type><name pos:line="10" pos:column="29">rest<pos:position pos:line="10" pos:column="33"/></name></decl>, <modifier pos:line="10" pos:column="35">*<pos:position pos:line="10" pos:column="36"/></modifier><decl><type ref="prev"/><name pos:line="10" pos:column="36">long_name<pos:position pos:line="10" pos:column="45"/></name> <init pos:line="10" pos:column="46">= <expr><name><name pos:line="10" pos:column="48">options<pos:position pos:line="10" pos:column="55"/></name><operator pos:line="10" pos:column="55">-&gt;<pos:position pos:line="10" pos:column="60"/></operator><name pos:line="10" pos:column="57">long_name<pos:position pos:line="10" pos:column="66"/></name></name></expr></init></decl>;<pos:position pos:line="10" pos:column="67"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="11" pos:column="17">int<pos:position pos:line="11" pos:column="20"/></name></type> <name pos:line="11" pos:column="21">flags<pos:position pos:line="11" pos:column="26"/></name> <init pos:line="11" pos:column="27">= <expr><literal type="number" pos:line="11" pos:column="29">0<pos:position pos:line="11" pos:column="30"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="11" pos:column="32">opt_flags<pos:position pos:line="11" pos:column="41"/></name> <init pos:line="11" pos:column="42">= <expr><literal type="number" pos:line="11" pos:column="44">0<pos:position pos:line="11" pos:column="45"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="46"/></decl_stmt>

		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><operator pos:line="13" pos:column="21">!<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="22">long_name<pos:position pos:line="13" pos:column="31"/></name></expr>)<pos:position pos:line="13" pos:column="32"/></condition><then pos:line="13" pos:column="32">
			<block type="pseudo"><continue pos:line="14" pos:column="25">continue;<pos:position pos:line="14" pos:column="34"/></continue></block></then></if>

<label><name pos:line="16" pos:column="1">again<pos:position pos:line="16" pos:column="6"/></name>:<pos:position pos:line="16" pos:column="7"/></label>
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><operator pos:line="17" pos:column="21">!<pos:position pos:line="17" pos:column="22"/></operator><call><name pos:line="17" pos:column="22">skip_prefix<pos:position pos:line="17" pos:column="33"/></name><argument_list pos:line="17" pos:column="33">(<argument><expr><name pos:line="17" pos:column="34">arg<pos:position pos:line="17" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="39">long_name<pos:position pos:line="17" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="50">&amp;<pos:position pos:line="17" pos:column="55"/></operator><name pos:line="17" pos:column="51">rest<pos:position pos:line="17" pos:column="55"/></name></expr></argument>)<pos:position pos:line="17" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="57"/></condition><then pos:line="17" pos:column="57">
			<block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="25">rest<pos:position pos:line="18" pos:column="29"/></name> <operator pos:line="18" pos:column="30">=<pos:position pos:line="18" pos:column="31"/></operator> <name pos:line="18" pos:column="32">NULL<pos:position pos:line="18" pos:column="36"/></name></expr>;<pos:position pos:line="18" pos:column="37"/></expr_stmt></block></then></if>
		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><name><name pos:line="19" pos:column="21">options<pos:position pos:line="19" pos:column="28"/></name><operator pos:line="19" pos:column="28">-&gt;<pos:position pos:line="19" pos:column="33"/></operator><name pos:line="19" pos:column="30">type<pos:position pos:line="19" pos:column="34"/></name></name> <operator pos:line="19" pos:column="35">==<pos:position pos:line="19" pos:column="37"/></operator> <name pos:line="19" pos:column="38">OPTION_ARGUMENT<pos:position pos:line="19" pos:column="53"/></name></expr>)<pos:position pos:line="19" pos:column="54"/></condition><then pos:line="19" pos:column="54"> <block pos:line="19" pos:column="55">{
			<if pos:line="20" pos:column="25">if <condition pos:line="20" pos:column="28">(<expr><operator pos:line="20" pos:column="29">!<pos:position pos:line="20" pos:column="30"/></operator><name pos:line="20" pos:column="30">rest<pos:position pos:line="20" pos:column="34"/></name></expr>)<pos:position pos:line="20" pos:column="35"/></condition><then pos:line="20" pos:column="35">
				<block type="pseudo"><continue pos:line="21" pos:column="33">continue;<pos:position pos:line="21" pos:column="42"/></continue></block></then></if>
			<if pos:line="22" pos:column="25">if <condition pos:line="22" pos:column="28">(<expr><operator pos:line="22" pos:column="29">*<pos:position pos:line="22" pos:column="30"/></operator><name pos:line="22" pos:column="30">rest<pos:position pos:line="22" pos:column="34"/></name> <operator pos:line="22" pos:column="35">==<pos:position pos:line="22" pos:column="37"/></operator> <literal type="char" pos:line="22" pos:column="38">'='<pos:position pos:line="22" pos:column="41"/></literal></expr>)<pos:position pos:line="22" pos:column="42"/></condition><then pos:line="22" pos:column="42">
				<block type="pseudo"><return pos:line="23" pos:column="33">return <expr><call><name pos:line="23" pos:column="40">opterror<pos:position pos:line="23" pos:column="48"/></name><argument_list pos:line="23" pos:column="48">(<argument><expr><name pos:line="23" pos:column="49">options<pos:position pos:line="23" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="58">"takes no value"<pos:position pos:line="23" pos:column="74"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="76">flags<pos:position pos:line="23" pos:column="81"/></name></expr></argument>)<pos:position pos:line="23" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="83"/></return></block></then></if>
			<if pos:line="24" pos:column="25">if <condition pos:line="24" pos:column="28">(<expr><operator pos:line="24" pos:column="29">*<pos:position pos:line="24" pos:column="30"/></operator><name pos:line="24" pos:column="30">rest<pos:position pos:line="24" pos:column="34"/></name></expr>)<pos:position pos:line="24" pos:column="35"/></condition><then pos:line="24" pos:column="35">
				<block type="pseudo"><continue pos:line="25" pos:column="33">continue;<pos:position pos:line="25" pos:column="42"/></continue></block></then></if>
			<expr_stmt><expr><name><name pos:line="26" pos:column="25">p<pos:position pos:line="26" pos:column="26"/></name><operator pos:line="26" pos:column="26">-&gt;<pos:position pos:line="26" pos:column="31"/></operator><name pos:line="26" pos:column="28">out<pos:position pos:line="26" pos:column="31"/></name><index pos:line="26" pos:column="31">[<expr><name><name pos:line="26" pos:column="32">p<pos:position pos:line="26" pos:column="33"/></name><operator pos:line="26" pos:column="33">-&gt;<pos:position pos:line="26" pos:column="38"/></operator><name pos:line="26" pos:column="35">cpidx<pos:position pos:line="26" pos:column="40"/></name></name><operator pos:line="26" pos:column="40">++<pos:position pos:line="26" pos:column="42"/></operator></expr>]<pos:position pos:line="26" pos:column="43"/></index></name> <operator pos:line="26" pos:column="44">=<pos:position pos:line="26" pos:column="45"/></operator> <name pos:line="26" pos:column="46">arg<pos:position pos:line="26" pos:column="49"/></name> <operator pos:line="26" pos:column="50">-<pos:position pos:line="26" pos:column="51"/></operator> <literal type="number" pos:line="26" pos:column="52">2<pos:position pos:line="26" pos:column="53"/></literal></expr>;<pos:position pos:line="26" pos:column="54"/></expr_stmt>
			<return pos:line="27" pos:column="25">return <expr><literal type="number" pos:line="27" pos:column="32">0<pos:position pos:line="27" pos:column="33"/></literal></expr>;<pos:position pos:line="27" pos:column="34"/></return>
		}<pos:position pos:line="28" pos:column="18"/></block></then></if>
		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><operator pos:line="29" pos:column="21">!<pos:position pos:line="29" pos:column="22"/></operator><name pos:line="29" pos:column="22">rest<pos:position pos:line="29" pos:column="26"/></name></expr>)<pos:position pos:line="29" pos:column="27"/></condition><then pos:line="29" pos:column="27"> <block pos:line="29" pos:column="28">{
			<comment type="block" pos:line="30" pos:column="25">/* abbreviated? */</comment>
			<if pos:line="31" pos:column="25">if <condition pos:line="31" pos:column="28">(<expr><operator pos:line="31" pos:column="29">!<pos:position pos:line="31" pos:column="30"/></operator><call><name pos:line="31" pos:column="30">strncmp<pos:position pos:line="31" pos:column="37"/></name><argument_list pos:line="31" pos:column="37">(<argument><expr><name pos:line="31" pos:column="38">long_name<pos:position pos:line="31" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="49">arg<pos:position pos:line="31" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="54">arg_end<pos:position pos:line="31" pos:column="61"/></name> <operator pos:line="31" pos:column="62">-<pos:position pos:line="31" pos:column="63"/></operator> <name pos:line="31" pos:column="64">arg<pos:position pos:line="31" pos:column="67"/></name></expr></argument>)<pos:position pos:line="31" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="69"/></condition><then pos:line="31" pos:column="69"> <block pos:line="31" pos:column="70">{
<label><name pos:line="32" pos:column="1">is_abbreviated<pos:position pos:line="32" pos:column="15"/></name>:<pos:position pos:line="32" pos:column="16"/></label>
				<if pos:line="33" pos:column="33">if <condition pos:line="33" pos:column="36">(<expr><name pos:line="33" pos:column="37">abbrev_option<pos:position pos:line="33" pos:column="50"/></name></expr>)<pos:position pos:line="33" pos:column="51"/></condition><then pos:line="33" pos:column="51"> <block pos:line="33" pos:column="52">{
					<comment type="block" pos:line="34" pos:column="41">/*
					 * If this is abbreviated, it is
					 * ambiguous. So when there is no
					 * exact match later, we need to
					 * error out.
					 */</comment>
					<expr_stmt><expr><name pos:line="40" pos:column="41">ambiguous_option<pos:position pos:line="40" pos:column="57"/></name> <operator pos:line="40" pos:column="58">=<pos:position pos:line="40" pos:column="59"/></operator> <name pos:line="40" pos:column="60">abbrev_option<pos:position pos:line="40" pos:column="73"/></name></expr>;<pos:position pos:line="40" pos:column="74"/></expr_stmt>
					<expr_stmt><expr><name pos:line="41" pos:column="41">ambiguous_flags<pos:position pos:line="41" pos:column="56"/></name> <operator pos:line="41" pos:column="57">=<pos:position pos:line="41" pos:column="58"/></operator> <name pos:line="41" pos:column="59">abbrev_flags<pos:position pos:line="41" pos:column="71"/></name></expr>;<pos:position pos:line="41" pos:column="72"/></expr_stmt>
				}<pos:position pos:line="42" pos:column="34"/></block></then></if>
				<if pos:line="43" pos:column="33">if <condition pos:line="43" pos:column="36">(<expr><operator pos:line="43" pos:column="37">!<pos:position pos:line="43" pos:column="38"/></operator><operator pos:line="43" pos:column="38">(<pos:position pos:line="43" pos:column="39"/></operator><name pos:line="43" pos:column="39">flags<pos:position pos:line="43" pos:column="44"/></name> <operator pos:line="43" pos:column="45">&amp;<pos:position pos:line="43" pos:column="50"/></operator> <name pos:line="43" pos:column="47">OPT_UNSET<pos:position pos:line="43" pos:column="56"/></name><operator pos:line="43" pos:column="56">)<pos:position pos:line="43" pos:column="57"/></operator> <operator pos:line="43" pos:column="58">&amp;&amp;<pos:position pos:line="43" pos:column="68"/></operator> <operator pos:line="43" pos:column="61">*<pos:position pos:line="43" pos:column="62"/></operator><name pos:line="43" pos:column="62">arg_end<pos:position pos:line="43" pos:column="69"/></name></expr>)<pos:position pos:line="43" pos:column="70"/></condition><then pos:line="43" pos:column="70">
					<block type="pseudo"><expr_stmt><expr><name><name pos:line="44" pos:column="41">p<pos:position pos:line="44" pos:column="42"/></name><operator pos:line="44" pos:column="42">-&gt;<pos:position pos:line="44" pos:column="47"/></operator><name pos:line="44" pos:column="44">opt<pos:position pos:line="44" pos:column="47"/></name></name> <operator pos:line="44" pos:column="48">=<pos:position pos:line="44" pos:column="49"/></operator> <name pos:line="44" pos:column="50">arg_end<pos:position pos:line="44" pos:column="57"/></name> <operator pos:line="44" pos:column="58">+<pos:position pos:line="44" pos:column="59"/></operator> <literal type="number" pos:line="44" pos:column="60">1<pos:position pos:line="44" pos:column="61"/></literal></expr>;<pos:position pos:line="44" pos:column="62"/></expr_stmt></block></then></if>
				<expr_stmt><expr><name pos:line="45" pos:column="33">abbrev_option<pos:position pos:line="45" pos:column="46"/></name> <operator pos:line="45" pos:column="47">=<pos:position pos:line="45" pos:column="48"/></operator> <name pos:line="45" pos:column="49">options<pos:position pos:line="45" pos:column="56"/></name></expr>;<pos:position pos:line="45" pos:column="57"/></expr_stmt>
				<expr_stmt><expr><name pos:line="46" pos:column="33">abbrev_flags<pos:position pos:line="46" pos:column="45"/></name> <operator pos:line="46" pos:column="46">=<pos:position pos:line="46" pos:column="47"/></operator> <name pos:line="46" pos:column="48">flags<pos:position pos:line="46" pos:column="53"/></name> <operator pos:line="46" pos:column="54">^<pos:position pos:line="46" pos:column="55"/></operator> <name pos:line="46" pos:column="56">opt_flags<pos:position pos:line="46" pos:column="65"/></name></expr>;<pos:position pos:line="46" pos:column="66"/></expr_stmt>
				<continue pos:line="47" pos:column="33">continue;<pos:position pos:line="47" pos:column="42"/></continue>
			}<pos:position pos:line="48" pos:column="26"/></block></then></if>
			<comment type="block" pos:line="49" pos:column="25">/* negation allowed? */</comment>
			<if pos:line="50" pos:column="25">if <condition pos:line="50" pos:column="28">(<expr><name><name pos:line="50" pos:column="29">options<pos:position pos:line="50" pos:column="36"/></name><operator pos:line="50" pos:column="36">-&gt;<pos:position pos:line="50" pos:column="41"/></operator><name pos:line="50" pos:column="38">flags<pos:position pos:line="50" pos:column="43"/></name></name> <operator pos:line="50" pos:column="44">&amp;<pos:position pos:line="50" pos:column="49"/></operator> <name pos:line="50" pos:column="46">PARSE_OPT_NONEG<pos:position pos:line="50" pos:column="61"/></name></expr>)<pos:position pos:line="50" pos:column="62"/></condition><then pos:line="50" pos:column="62">
				<block type="pseudo"><continue pos:line="51" pos:column="33">continue;<pos:position pos:line="51" pos:column="42"/></continue></block></then></if>
			<comment type="block" pos:line="52" pos:column="25">/* negated and abbreviated very much? */</comment>
			<if pos:line="53" pos:column="25">if <condition pos:line="53" pos:column="28">(<expr><call><name pos:line="53" pos:column="29">starts_with<pos:position pos:line="53" pos:column="40"/></name><argument_list pos:line="53" pos:column="40">(<argument><expr><literal type="string" pos:line="53" pos:column="41">"no-"<pos:position pos:line="53" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="53" pos:column="48">arg<pos:position pos:line="53" pos:column="51"/></name></expr></argument>)<pos:position pos:line="53" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="53" pos:column="53"/></condition><then pos:line="53" pos:column="53"> <block pos:line="53" pos:column="54">{
				<expr_stmt><expr><name pos:line="54" pos:column="33">flags<pos:position pos:line="54" pos:column="38"/></name> <operator pos:line="54" pos:column="39">|=<pos:position pos:line="54" pos:column="41"/></operator> <name pos:line="54" pos:column="42">OPT_UNSET<pos:position pos:line="54" pos:column="51"/></name></expr>;<pos:position pos:line="54" pos:column="52"/></expr_stmt>
				<goto pos:line="55" pos:column="33">goto <name pos:line="55" pos:column="38">is_abbreviated<pos:position pos:line="55" pos:column="52"/></name>;<pos:position pos:line="55" pos:column="53"/></goto>
			}<pos:position pos:line="56" pos:column="26"/></block></then></if>
			<comment type="block" pos:line="57" pos:column="25">/* negated? */</comment>
			<if pos:line="58" pos:column="25">if <condition pos:line="58" pos:column="28">(<expr><operator pos:line="58" pos:column="29">!<pos:position pos:line="58" pos:column="30"/></operator><call><name pos:line="58" pos:column="30">starts_with<pos:position pos:line="58" pos:column="41"/></name><argument_list pos:line="58" pos:column="41">(<argument><expr><name pos:line="58" pos:column="42">arg<pos:position pos:line="58" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="47">"no-"<pos:position pos:line="58" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="58" pos:column="54"/></condition><then pos:line="58" pos:column="54"> <block pos:line="58" pos:column="55">{
				<if pos:line="59" pos:column="33">if <condition pos:line="59" pos:column="36">(<expr><call><name pos:line="59" pos:column="37">starts_with<pos:position pos:line="59" pos:column="48"/></name><argument_list pos:line="59" pos:column="48">(<argument><expr><name pos:line="59" pos:column="49">long_name<pos:position pos:line="59" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="60">"no-"<pos:position pos:line="59" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="59" pos:column="67"/></condition><then pos:line="59" pos:column="67"> <block pos:line="59" pos:column="68">{
					<expr_stmt><expr><name pos:line="60" pos:column="41">long_name<pos:position pos:line="60" pos:column="50"/></name> <operator pos:line="60" pos:column="51">+=<pos:position pos:line="60" pos:column="53"/></operator> <literal type="number" pos:line="60" pos:column="54">3<pos:position pos:line="60" pos:column="55"/></literal></expr>;<pos:position pos:line="60" pos:column="56"/></expr_stmt>
					<expr_stmt><expr><name pos:line="61" pos:column="41">opt_flags<pos:position pos:line="61" pos:column="50"/></name> <operator pos:line="61" pos:column="51">|=<pos:position pos:line="61" pos:column="53"/></operator> <name pos:line="61" pos:column="54">OPT_UNSET<pos:position pos:line="61" pos:column="63"/></name></expr>;<pos:position pos:line="61" pos:column="64"/></expr_stmt>
					<goto pos:line="62" pos:column="41">goto <name pos:line="62" pos:column="46">again<pos:position pos:line="62" pos:column="51"/></name>;<pos:position pos:line="62" pos:column="52"/></goto>
				}<pos:position pos:line="63" pos:column="34"/></block></then></if>
				<continue pos:line="64" pos:column="33">continue;<pos:position pos:line="64" pos:column="42"/></continue>
			}<pos:position pos:line="65" pos:column="26"/></block></then></if>
			<expr_stmt><expr><name pos:line="66" pos:column="25">flags<pos:position pos:line="66" pos:column="30"/></name> <operator pos:line="66" pos:column="31">|=<pos:position pos:line="66" pos:column="33"/></operator> <name pos:line="66" pos:column="34">OPT_UNSET<pos:position pos:line="66" pos:column="43"/></name></expr>;<pos:position pos:line="66" pos:column="44"/></expr_stmt>
			<if pos:line="67" pos:column="25">if <condition pos:line="67" pos:column="28">(<expr><operator pos:line="67" pos:column="29">!<pos:position pos:line="67" pos:column="30"/></operator><call><name pos:line="67" pos:column="30">skip_prefix<pos:position pos:line="67" pos:column="41"/></name><argument_list pos:line="67" pos:column="41">(<argument><expr><name pos:line="67" pos:column="42">arg<pos:position pos:line="67" pos:column="45"/></name> <operator pos:line="67" pos:column="46">+<pos:position pos:line="67" pos:column="47"/></operator> <literal type="number" pos:line="67" pos:column="48">3<pos:position pos:line="67" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="67" pos:column="51">long_name<pos:position pos:line="67" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="67" pos:column="62">&amp;<pos:position pos:line="67" pos:column="67"/></operator><name pos:line="67" pos:column="63">rest<pos:position pos:line="67" pos:column="67"/></name></expr></argument>)<pos:position pos:line="67" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="67" pos:column="69"/></condition><then pos:line="67" pos:column="69"> <block pos:line="67" pos:column="70">{
				<comment type="block" pos:line="68" pos:column="33">/* abbreviated and negated? */</comment>
				<if pos:line="69" pos:column="33">if <condition pos:line="69" pos:column="36">(<expr><call><name pos:line="69" pos:column="37">starts_with<pos:position pos:line="69" pos:column="48"/></name><argument_list pos:line="69" pos:column="48">(<argument><expr><name pos:line="69" pos:column="49">long_name<pos:position pos:line="69" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="60">arg<pos:position pos:line="69" pos:column="63"/></name> <operator pos:line="69" pos:column="64">+<pos:position pos:line="69" pos:column="65"/></operator> <literal type="number" pos:line="69" pos:column="66">3<pos:position pos:line="69" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="69" pos:column="69"/></condition><then pos:line="69" pos:column="69">
					<block type="pseudo"><goto pos:line="70" pos:column="41">goto <name pos:line="70" pos:column="46">is_abbreviated<pos:position pos:line="70" pos:column="60"/></name>;<pos:position pos:line="70" pos:column="61"/></goto></block></then>
				<else pos:line="71" pos:column="33">else
					<block type="pseudo"><continue pos:line="72" pos:column="41">continue;<pos:position pos:line="72" pos:column="50"/></continue></block></else></if>
			}<pos:position pos:line="73" pos:column="26"/></block></then></if>
		}<pos:position pos:line="74" pos:column="18"/></block></then></if>
		<if pos:line="75" pos:column="17">if <condition pos:line="75" pos:column="20">(<expr><operator pos:line="75" pos:column="21">*<pos:position pos:line="75" pos:column="22"/></operator><name pos:line="75" pos:column="22">rest<pos:position pos:line="75" pos:column="26"/></name></expr>)<pos:position pos:line="75" pos:column="27"/></condition><then pos:line="75" pos:column="27"> <block pos:line="75" pos:column="28">{
			<if pos:line="76" pos:column="25">if <condition pos:line="76" pos:column="28">(<expr><operator pos:line="76" pos:column="29">*<pos:position pos:line="76" pos:column="30"/></operator><name pos:line="76" pos:column="30">rest<pos:position pos:line="76" pos:column="34"/></name> <operator pos:line="76" pos:column="35">!=<pos:position pos:line="76" pos:column="37"/></operator> <literal type="char" pos:line="76" pos:column="38">'='<pos:position pos:line="76" pos:column="41"/></literal></expr>)<pos:position pos:line="76" pos:column="42"/></condition><then pos:line="76" pos:column="42">
				<block type="pseudo"><continue pos:line="77" pos:column="33">continue;<pos:position pos:line="77" pos:column="42"/></continue></block></then></if>
			<expr_stmt><expr><name><name pos:line="78" pos:column="25">p<pos:position pos:line="78" pos:column="26"/></name><operator pos:line="78" pos:column="26">-&gt;<pos:position pos:line="78" pos:column="31"/></operator><name pos:line="78" pos:column="28">opt<pos:position pos:line="78" pos:column="31"/></name></name> <operator pos:line="78" pos:column="32">=<pos:position pos:line="78" pos:column="33"/></operator> <name pos:line="78" pos:column="34">rest<pos:position pos:line="78" pos:column="38"/></name> <operator pos:line="78" pos:column="39">+<pos:position pos:line="78" pos:column="40"/></operator> <literal type="number" pos:line="78" pos:column="41">1<pos:position pos:line="78" pos:column="42"/></literal></expr>;<pos:position pos:line="78" pos:column="43"/></expr_stmt>
		}<pos:position pos:line="79" pos:column="18"/></block></then></if>
		<return pos:line="80" pos:column="17">return <expr><call><name pos:line="80" pos:column="24">get_value<pos:position pos:line="80" pos:column="33"/></name><argument_list pos:line="80" pos:column="33">(<argument><expr><name pos:line="80" pos:column="34">p<pos:position pos:line="80" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="37">options<pos:position pos:line="80" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="46">all_opts<pos:position pos:line="80" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="56">flags<pos:position pos:line="80" pos:column="61"/></name> <operator pos:line="80" pos:column="62">^<pos:position pos:line="80" pos:column="63"/></operator> <name pos:line="80" pos:column="64">opt_flags<pos:position pos:line="80" pos:column="73"/></name></expr></argument>)<pos:position pos:line="80" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="75"/></return>
	}<pos:position pos:line="81" pos:column="10"/></block></for>

	<if pos:line="83" pos:column="9">if <condition pos:line="83" pos:column="12">(<expr><name pos:line="83" pos:column="13">ambiguous_option<pos:position pos:line="83" pos:column="29"/></name></expr>)<pos:position pos:line="83" pos:column="30"/></condition><then pos:line="83" pos:column="30">
		<block type="pseudo"><return pos:line="84" pos:column="17">return <expr><call><name pos:line="84" pos:column="24">error<pos:position pos:line="84" pos:column="29"/></name><argument_list pos:line="84" pos:column="29">(<argument><expr><literal type="string" pos:line="84" pos:column="30">"Ambiguous option: %s "<pos:position pos:line="84" pos:column="53"/></literal>
			<literal type="string" pos:line="85" pos:column="25">"(could be --%s%s or --%s%s)"<pos:position pos:line="85" pos:column="54"/></literal></expr></argument>,
			<argument><expr><name pos:line="86" pos:column="25">arg<pos:position pos:line="86" pos:column="28"/></name></expr></argument>,
			<argument><expr><ternary><condition><expr><operator pos:line="87" pos:column="25">(<pos:position pos:line="87" pos:column="26"/></operator><name pos:line="87" pos:column="26">ambiguous_flags<pos:position pos:line="87" pos:column="41"/></name> <operator pos:line="87" pos:column="42">&amp;<pos:position pos:line="87" pos:column="47"/></operator> <name pos:line="87" pos:column="44">OPT_UNSET<pos:position pos:line="87" pos:column="53"/></name><operator pos:line="87" pos:column="53">)<pos:position pos:line="87" pos:column="54"/></operator></expr> ?<pos:position pos:line="87" pos:column="56"/></condition><then pos:line="87" pos:column="56">  <expr><literal type="string" pos:line="87" pos:column="58">"no-"<pos:position pos:line="87" pos:column="63"/></literal></expr> <pos:position pos:line="87" pos:column="64"/></then><else pos:line="87" pos:column="64">: <expr><literal type="string" pos:line="87" pos:column="66">""<pos:position pos:line="87" pos:column="68"/></literal></expr></else></ternary></expr></argument>,
			<argument><expr><name><name pos:line="88" pos:column="25">ambiguous_option<pos:position pos:line="88" pos:column="41"/></name><operator pos:line="88" pos:column="41">-&gt;<pos:position pos:line="88" pos:column="46"/></operator><name pos:line="88" pos:column="43">long_name<pos:position pos:line="88" pos:column="52"/></name></name></expr></argument>,
			<argument><expr><ternary><condition><expr><operator pos:line="89" pos:column="25">(<pos:position pos:line="89" pos:column="26"/></operator><name pos:line="89" pos:column="26">abbrev_flags<pos:position pos:line="89" pos:column="38"/></name> <operator pos:line="89" pos:column="39">&amp;<pos:position pos:line="89" pos:column="44"/></operator> <name pos:line="89" pos:column="41">OPT_UNSET<pos:position pos:line="89" pos:column="50"/></name><operator pos:line="89" pos:column="50">)<pos:position pos:line="89" pos:column="51"/></operator></expr> ?<pos:position pos:line="89" pos:column="53"/></condition><then pos:line="89" pos:column="53">  <expr><literal type="string" pos:line="89" pos:column="55">"no-"<pos:position pos:line="89" pos:column="60"/></literal></expr> <pos:position pos:line="89" pos:column="61"/></then><else pos:line="89" pos:column="61">: <expr><literal type="string" pos:line="89" pos:column="63">""<pos:position pos:line="89" pos:column="65"/></literal></expr></else></ternary></expr></argument>,
			<argument><expr><name><name pos:line="90" pos:column="25">abbrev_option<pos:position pos:line="90" pos:column="38"/></name><operator pos:line="90" pos:column="38">-&gt;<pos:position pos:line="90" pos:column="43"/></operator><name pos:line="90" pos:column="40">long_name<pos:position pos:line="90" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="90" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="51"/></return></block></then></if>
	<if pos:line="91" pos:column="9">if <condition pos:line="91" pos:column="12">(<expr><name pos:line="91" pos:column="13">abbrev_option<pos:position pos:line="91" pos:column="26"/></name></expr>)<pos:position pos:line="91" pos:column="27"/></condition><then pos:line="91" pos:column="27">
		<block type="pseudo"><return pos:line="92" pos:column="17">return <expr><call><name pos:line="92" pos:column="24">get_value<pos:position pos:line="92" pos:column="33"/></name><argument_list pos:line="92" pos:column="33">(<argument><expr><name pos:line="92" pos:column="34">p<pos:position pos:line="92" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="37">abbrev_option<pos:position pos:line="92" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="52">all_opts<pos:position pos:line="92" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="62">abbrev_flags<pos:position pos:line="92" pos:column="74"/></name></expr></argument>)<pos:position pos:line="92" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="76"/></return></block></then></if>
	<return pos:line="93" pos:column="9">return <expr><operator pos:line="93" pos:column="16">-<pos:position pos:line="93" pos:column="17"/></operator><literal type="number" pos:line="93" pos:column="17">2<pos:position pos:line="93" pos:column="18"/></literal></expr>;<pos:position pos:line="93" pos:column="19"/></return>
}<pos:position pos:line="94" pos:column="2"/></block></function></unit>

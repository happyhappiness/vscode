<function xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position"><type><name><name pos:line="48" pos:column="1">struct<pos:position pos:line="48" pos:column="7"/></name> <name pos:line="48" pos:column="8">commit<pos:position pos:line="48" pos:column="14"/></name></name> <modifier pos:line="48" pos:column="15">*<pos:position pos:line="48" pos:column="16"/></modifier></type><name pos:line="48" pos:column="16">lookup_commit<pos:position pos:line="48" pos:column="29"/></name><parameter_list pos:line="48" pos:column="29">(<parameter><decl><type><specifier pos:line="48" pos:column="30">const<pos:position pos:line="48" pos:column="35"/></specifier> <name pos:line="48" pos:column="36">unsigned<pos:position pos:line="48" pos:column="44"/></name> <name pos:line="48" pos:column="45">char<pos:position pos:line="48" pos:column="49"/></name> <modifier pos:line="48" pos:column="50">*<pos:position pos:line="48" pos:column="51"/></modifier></type><name pos:line="48" pos:column="51">sha1<pos:position pos:line="48" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="48" pos:column="56"/></parameter_list>
<block pos:line="49" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="50" pos:column="9">struct<pos:position pos:line="50" pos:column="15"/></name> <name pos:line="50" pos:column="16">object<pos:position pos:line="50" pos:column="22"/></name></name> <modifier pos:line="50" pos:column="23">*<pos:position pos:line="50" pos:column="24"/></modifier></type><name pos:line="50" pos:column="24">obj<pos:position pos:line="50" pos:column="27"/></name> <init pos:line="50" pos:column="28">= <expr><call><name pos:line="50" pos:column="30">lookup_object<pos:position pos:line="50" pos:column="43"/></name><argument_list pos:line="50" pos:column="43">(<argument><expr><name pos:line="50" pos:column="44">sha1<pos:position pos:line="50" pos:column="48"/></name></expr></argument>)<pos:position pos:line="50" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="50" pos:column="50"/></decl_stmt>
	<if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><operator pos:line="51" pos:column="13">!<pos:position pos:line="51" pos:column="14"/></operator><name pos:line="51" pos:column="14">obj<pos:position pos:line="51" pos:column="17"/></name></expr>)<pos:position pos:line="51" pos:column="18"/></condition><then pos:line="51" pos:column="18">
		<block type="pseudo"><return pos:line="52" pos:column="17">return <expr><call><name pos:line="52" pos:column="24">create_object<pos:position pos:line="52" pos:column="37"/></name><argument_list pos:line="52" pos:column="37">(<argument><expr><name pos:line="52" pos:column="38">sha1<pos:position pos:line="52" pos:column="42"/></name></expr></argument>, <argument><expr><call><name pos:line="52" pos:column="44">alloc_commit_node<pos:position pos:line="52" pos:column="61"/></name><argument_list pos:line="52" pos:column="61">()<pos:position pos:line="52" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="52" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="65"/></return></block></then></if>
	<return pos:line="53" pos:column="9">return <expr><call><name pos:line="53" pos:column="16">object_as_type<pos:position pos:line="53" pos:column="30"/></name><argument_list pos:line="53" pos:column="30">(<argument><expr><name pos:line="53" pos:column="31">obj<pos:position pos:line="53" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="36">OBJ_COMMIT<pos:position pos:line="53" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="53" pos:column="48">0<pos:position pos:line="53" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="51"/></return>
}<pos:position pos:line="54" pos:column="2"/></block></function>


<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4936_git-2.7.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">prune_base_data<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name><name pos:line="1" pos:column="29">struct<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">base_data<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">retain<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">base_data<pos:position pos:line="3" pos:column="25"/></name></name> <modifier pos:line="3" pos:column="26">*<pos:position pos:line="3" pos:column="27"/></modifier></type><name pos:line="3" pos:column="27">b<pos:position pos:line="3" pos:column="28"/></name></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
	<struct_decl pos:line="4" pos:column="9">struct <specifier pos:line="4" pos:column="16">thread_local<pos:position pos:line="4" pos:column="28"/></specifier> *data = get_thread_data(<pos:position pos:line="4" pos:column="53"/></struct_decl>)<pos:position pos:line="4" pos:column="54"/></block>;<pos:position pos:line="4" pos:column="55"/></function>
	<for pos:line="5" pos:column="9">for <control pos:line="5" pos:column="13">(<init><expr><name pos:line="5" pos:column="14">b<pos:position pos:line="5" pos:column="15"/></name> <operator pos:line="5" pos:column="16">=<pos:position pos:line="5" pos:column="17"/></operator> <name><name pos:line="5" pos:column="18">data<pos:position pos:line="5" pos:column="22"/></name><operator pos:line="5" pos:column="22">-&gt;<pos:position pos:line="5" pos:column="27"/></operator><name pos:line="5" pos:column="24">base_cache<pos:position pos:line="5" pos:column="34"/></name></name></expr>;<pos:position pos:line="5" pos:column="35"/></init>
	     <condition><expr><name><name pos:line="6" pos:column="14">data<pos:position pos:line="6" pos:column="18"/></name><operator pos:line="6" pos:column="18">-&gt;<pos:position pos:line="6" pos:column="23"/></operator><name pos:line="6" pos:column="20">base_cache_used<pos:position pos:line="6" pos:column="35"/></name></name> <operator pos:line="6" pos:column="36">&gt;<pos:position pos:line="6" pos:column="40"/></operator> <name pos:line="6" pos:column="38">delta_base_cache_limit<pos:position pos:line="6" pos:column="60"/></name> <operator pos:line="6" pos:column="61">&amp;&amp;<pos:position pos:line="6" pos:column="71"/></operator> <name pos:line="6" pos:column="64">b<pos:position pos:line="6" pos:column="65"/></name></expr>;<pos:position pos:line="6" pos:column="66"/></condition>
	     <incr><expr><name pos:line="7" pos:column="14">b<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">=<pos:position pos:line="7" pos:column="17"/></operator> <name><name pos:line="7" pos:column="18">b<pos:position pos:line="7" pos:column="19"/></name><operator pos:line="7" pos:column="19">-&gt;<pos:position pos:line="7" pos:column="24"/></operator><name pos:line="7" pos:column="21">child<pos:position pos:line="7" pos:column="26"/></name></name></expr></incr>)<pos:position pos:line="7" pos:column="27"/></control> <block pos:line="7" pos:column="28">{
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><name><name pos:line="8" pos:column="21">b<pos:position pos:line="8" pos:column="22"/></name><operator pos:line="8" pos:column="22">-&gt;<pos:position pos:line="8" pos:column="27"/></operator><name pos:line="8" pos:column="24">data<pos:position pos:line="8" pos:column="28"/></name></name> <operator pos:line="8" pos:column="29">&amp;&amp;<pos:position pos:line="8" pos:column="39"/></operator> <name pos:line="8" pos:column="32">b<pos:position pos:line="8" pos:column="33"/></name> <operator pos:line="8" pos:column="34">!=<pos:position pos:line="8" pos:column="36"/></operator> <name pos:line="8" pos:column="37">retain<pos:position pos:line="8" pos:column="43"/></name></expr>)<pos:position pos:line="8" pos:column="44"/></condition><then pos:line="8" pos:column="44">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="25">free_base_data<pos:position pos:line="9" pos:column="39"/></name><argument_list pos:line="9" pos:column="39">(<argument><expr><name pos:line="9" pos:column="40">b<pos:position pos:line="9" pos:column="41"/></name></expr></argument>)<pos:position pos:line="9" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="43"/></expr_stmt></block></then></if>
	}<pos:position pos:line="10" pos:column="10"/></block></for>
}</unit>

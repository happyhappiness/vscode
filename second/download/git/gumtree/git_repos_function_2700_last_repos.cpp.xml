<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2700_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">strbuf_commented_addf<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name><name pos:line="1" pos:column="28">struct<pos:position pos:line="1" pos:column="34"/></name> <name pos:line="1" pos:column="35">strbuf<pos:position pos:line="1" pos:column="41"/></name></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">sb<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="47">const<pos:position pos:line="1" pos:column="52"/></specifier> <name pos:line="1" pos:column="53">char<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">fmt<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><modifier pos:line="1" pos:column="64">...<pos:position pos:line="1" pos:column="67"/></modifier></type></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">va_list<pos:position pos:line="3" pos:column="16"/></name></type> <name pos:line="3" pos:column="17">params<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">strbuf<pos:position pos:line="4" pos:column="22"/></name></name></type> <name pos:line="4" pos:column="23">buf<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><name pos:line="4" pos:column="29">STRBUF_INIT<pos:position pos:line="4" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">incomplete_line<pos:position pos:line="5" pos:column="28"/></name> <init pos:line="5" pos:column="29">= <expr><name><name pos:line="5" pos:column="31">sb<pos:position pos:line="5" pos:column="33"/></name><operator pos:line="5" pos:column="33">-&gt;<pos:position pos:line="5" pos:column="38"/></operator><name pos:line="5" pos:column="35">len<pos:position pos:line="5" pos:column="38"/></name></name> <operator pos:line="5" pos:column="39">&amp;&amp;<pos:position pos:line="5" pos:column="49"/></operator> <name><name pos:line="5" pos:column="42">sb<pos:position pos:line="5" pos:column="44"/></name><operator pos:line="5" pos:column="44">-&gt;<pos:position pos:line="5" pos:column="49"/></operator><name pos:line="5" pos:column="46">buf<pos:position pos:line="5" pos:column="49"/></name><index pos:line="5" pos:column="49">[<expr><name><name pos:line="5" pos:column="50">sb<pos:position pos:line="5" pos:column="52"/></name><operator pos:line="5" pos:column="52">-&gt;<pos:position pos:line="5" pos:column="57"/></operator><name pos:line="5" pos:column="54">len<pos:position pos:line="5" pos:column="57"/></name></name> <operator pos:line="5" pos:column="58">-<pos:position pos:line="5" pos:column="59"/></operator> <literal type="number" pos:line="5" pos:column="60">1<pos:position pos:line="5" pos:column="61"/></literal></expr>]<pos:position pos:line="5" pos:column="62"/></index></name> <operator pos:line="5" pos:column="63">!=<pos:position pos:line="5" pos:column="65"/></operator> <literal type="char" pos:line="5" pos:column="66">'\n'<pos:position pos:line="5" pos:column="70"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="71"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="7" pos:column="9">va_start<pos:position pos:line="7" pos:column="17"/></name><argument_list pos:line="7" pos:column="17">(<argument><expr><name pos:line="7" pos:column="18">params<pos:position pos:line="7" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="26">fmt<pos:position pos:line="7" pos:column="29"/></name></expr></argument>)<pos:position pos:line="7" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="8" pos:column="9">strbuf_vaddf<pos:position pos:line="8" pos:column="21"/></name><argument_list pos:line="8" pos:column="21">(<argument><expr><operator pos:line="8" pos:column="22">&amp;<pos:position pos:line="8" pos:column="27"/></operator><name pos:line="8" pos:column="23">buf<pos:position pos:line="8" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="28">fmt<pos:position pos:line="8" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="33">params<pos:position pos:line="8" pos:column="39"/></name></expr></argument>)<pos:position pos:line="8" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="9" pos:column="9">va_end<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><name pos:line="9" pos:column="16">params<pos:position pos:line="9" pos:column="22"/></name></expr></argument>)<pos:position pos:line="9" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="24"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="11" pos:column="9">strbuf_add_commented_lines<pos:position pos:line="11" pos:column="35"/></name><argument_list pos:line="11" pos:column="35">(<argument><expr><name pos:line="11" pos:column="36">sb<pos:position pos:line="11" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="40">buf<pos:position pos:line="11" pos:column="43"/></name><operator pos:line="11" pos:column="43">.<pos:position pos:line="11" pos:column="44"/></operator><name pos:line="11" pos:column="44">buf<pos:position pos:line="11" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="49">buf<pos:position pos:line="11" pos:column="52"/></name><operator pos:line="11" pos:column="52">.<pos:position pos:line="11" pos:column="53"/></operator><name pos:line="11" pos:column="53">len<pos:position pos:line="11" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="58"/></expr_stmt>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">incomplete_line<pos:position pos:line="12" pos:column="28"/></name></expr>)<pos:position pos:line="12" pos:column="29"/></condition><then pos:line="12" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="13" pos:column="17">sb<pos:position pos:line="13" pos:column="19"/></name><operator pos:line="13" pos:column="19">-&gt;<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="21">buf<pos:position pos:line="13" pos:column="24"/></name><index pos:line="13" pos:column="24">[<expr><operator pos:line="13" pos:column="25">--<pos:position pos:line="13" pos:column="27"/></operator><name><name pos:line="13" pos:column="27">sb<pos:position pos:line="13" pos:column="29"/></name><operator pos:line="13" pos:column="29">-&gt;<pos:position pos:line="13" pos:column="34"/></operator><name pos:line="13" pos:column="31">len<pos:position pos:line="13" pos:column="34"/></name></name></expr>]<pos:position pos:line="13" pos:column="35"/></index></name> <operator pos:line="13" pos:column="36">=<pos:position pos:line="13" pos:column="37"/></operator> <literal type="char" pos:line="13" pos:column="38">'\0'<pos:position pos:line="13" pos:column="42"/></literal></expr>;<pos:position pos:line="13" pos:column="43"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="15" pos:column="9">strbuf_release<pos:position pos:line="15" pos:column="23"/></name><argument_list pos:line="15" pos:column="23">(<argument><expr><operator pos:line="15" pos:column="24">&amp;<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="25">buf<pos:position pos:line="15" pos:column="28"/></name></expr></argument>)<pos:position pos:line="15" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="30"/></expr_stmt>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

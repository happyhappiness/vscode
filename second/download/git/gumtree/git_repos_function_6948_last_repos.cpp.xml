<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6948_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name>
<name pos:line="2" pos:column="1">internal_function<pos:position pos:line="2" pos:column="18"/></name></type>
<name pos:line="3" pos:column="1">pop_fail_stack<pos:position pos:line="3" pos:column="15"/></name> <parameter_list pos:line="3" pos:column="16">(<parameter><decl><type><name><name pos:line="3" pos:column="17">struct<pos:position pos:line="3" pos:column="23"/></name> <name pos:line="3" pos:column="24">re_fail_stack_t<pos:position pos:line="3" pos:column="39"/></name></name> <modifier pos:line="3" pos:column="40">*<pos:position pos:line="3" pos:column="41"/></modifier></type><name pos:line="3" pos:column="41">fs<pos:position pos:line="3" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="45">int<pos:position pos:line="3" pos:column="48"/></name> <modifier pos:line="3" pos:column="49">*<pos:position pos:line="3" pos:column="50"/></modifier></type><name pos:line="3" pos:column="50">pidx<pos:position pos:line="3" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="56">int<pos:position pos:line="3" pos:column="59"/></name></type> <name pos:line="3" pos:column="60">nregs<pos:position pos:line="3" pos:column="65"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="4" pos:column="17">regmatch_t<pos:position pos:line="4" pos:column="27"/></name> <modifier pos:line="4" pos:column="28">*<pos:position pos:line="4" pos:column="29"/></modifier></type><name pos:line="4" pos:column="29">regs<pos:position pos:line="4" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="4" pos:column="35">re_node_set<pos:position pos:line="4" pos:column="46"/></name> <modifier pos:line="4" pos:column="47">*<pos:position pos:line="4" pos:column="48"/></modifier></type><name pos:line="4" pos:column="48">eps_via_nodes<pos:position pos:line="4" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="62"/></parameter_list>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">num<pos:position pos:line="6" pos:column="10"/></name> <init pos:line="6" pos:column="11">= <expr><operator pos:line="6" pos:column="13">--<pos:position pos:line="6" pos:column="15"/></operator><name><name pos:line="6" pos:column="15">fs<pos:position pos:line="6" pos:column="17"/></name><operator pos:line="6" pos:column="17">-&gt;<pos:position pos:line="6" pos:column="22"/></operator><name pos:line="6" pos:column="19">num<pos:position pos:line="6" pos:column="22"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="7" pos:column="3">assert<pos:position pos:line="7" pos:column="9"/></name> <argument_list pos:line="7" pos:column="10">(<argument><expr><name pos:line="7" pos:column="11">num<pos:position pos:line="7" pos:column="14"/></name> <operator pos:line="7" pos:column="15">&gt;=<pos:position pos:line="7" pos:column="20"/></operator> <literal type="number" pos:line="7" pos:column="18">0<pos:position pos:line="7" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="8" pos:column="3">*<pos:position pos:line="8" pos:column="4"/></operator><name pos:line="8" pos:column="4">pidx<pos:position pos:line="8" pos:column="8"/></name> <operator pos:line="8" pos:column="9">=<pos:position pos:line="8" pos:column="10"/></operator> <name><name pos:line="8" pos:column="11">fs<pos:position pos:line="8" pos:column="13"/></name><operator pos:line="8" pos:column="13">-&gt;<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="15">stack<pos:position pos:line="8" pos:column="20"/></name><index pos:line="8" pos:column="20">[<expr><name pos:line="8" pos:column="21">num<pos:position pos:line="8" pos:column="24"/></name></expr>]<pos:position pos:line="8" pos:column="25"/></index></name><operator pos:line="8" pos:column="25">.<pos:position pos:line="8" pos:column="26"/></operator><name pos:line="8" pos:column="26">idx<pos:position pos:line="8" pos:column="29"/></name></expr>;<pos:position pos:line="8" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="9" pos:column="3">memcpy<pos:position pos:line="9" pos:column="9"/></name> <argument_list pos:line="9" pos:column="10">(<argument><expr><name pos:line="9" pos:column="11">regs<pos:position pos:line="9" pos:column="15"/></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="17">fs<pos:position pos:line="9" pos:column="19"/></name><operator pos:line="9" pos:column="19">-&gt;<pos:position pos:line="9" pos:column="24"/></operator><name pos:line="9" pos:column="21">stack<pos:position pos:line="9" pos:column="26"/></name><index pos:line="9" pos:column="26">[<expr><name pos:line="9" pos:column="27">num<pos:position pos:line="9" pos:column="30"/></name></expr>]<pos:position pos:line="9" pos:column="31"/></index></name><operator pos:line="9" pos:column="31">.<pos:position pos:line="9" pos:column="32"/></operator><name pos:line="9" pos:column="32">regs<pos:position pos:line="9" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="38">sizeof <argument_list pos:line="9" pos:column="45">(<argument><expr><name pos:line="9" pos:column="46">regmatch_t<pos:position pos:line="9" pos:column="56"/></name></expr></argument>)<pos:position pos:line="9" pos:column="57"/></argument_list></sizeof> <operator pos:line="9" pos:column="58">*<pos:position pos:line="9" pos:column="59"/></operator> <name pos:line="9" pos:column="60">nregs<pos:position pos:line="9" pos:column="65"/></name></expr></argument>)<pos:position pos:line="9" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="67"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="10" pos:column="3">re_node_set_free<pos:position pos:line="10" pos:column="19"/></name> <argument_list pos:line="10" pos:column="20">(<argument><expr><name pos:line="10" pos:column="21">eps_via_nodes<pos:position pos:line="10" pos:column="34"/></name></expr></argument>)<pos:position pos:line="10" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="11" pos:column="3">re_free<pos:position pos:line="11" pos:column="10"/></name> <argument_list pos:line="11" pos:column="11">(<argument><expr><name><name pos:line="11" pos:column="12">fs<pos:position pos:line="11" pos:column="14"/></name><operator pos:line="11" pos:column="14">-&gt;<pos:position pos:line="11" pos:column="19"/></operator><name pos:line="11" pos:column="16">stack<pos:position pos:line="11" pos:column="21"/></name><index pos:line="11" pos:column="21">[<expr><name pos:line="11" pos:column="22">num<pos:position pos:line="11" pos:column="25"/></name></expr>]<pos:position pos:line="11" pos:column="26"/></index></name><operator pos:line="11" pos:column="26">.<pos:position pos:line="11" pos:column="27"/></operator><name pos:line="11" pos:column="27">regs<pos:position pos:line="11" pos:column="31"/></name></expr></argument>)<pos:position pos:line="11" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="12" pos:column="3">*<pos:position pos:line="12" pos:column="4"/></operator><name pos:line="12" pos:column="4">eps_via_nodes<pos:position pos:line="12" pos:column="17"/></name> <operator pos:line="12" pos:column="18">=<pos:position pos:line="12" pos:column="19"/></operator> <name><name pos:line="12" pos:column="20">fs<pos:position pos:line="12" pos:column="22"/></name><operator pos:line="12" pos:column="22">-&gt;<pos:position pos:line="12" pos:column="27"/></operator><name pos:line="12" pos:column="24">stack<pos:position pos:line="12" pos:column="29"/></name><index pos:line="12" pos:column="29">[<expr><name pos:line="12" pos:column="30">num<pos:position pos:line="12" pos:column="33"/></name></expr>]<pos:position pos:line="12" pos:column="34"/></index></name><operator pos:line="12" pos:column="34">.<pos:position pos:line="12" pos:column="35"/></operator><name pos:line="12" pos:column="35">eps_via_nodes<pos:position pos:line="12" pos:column="48"/></name></expr>;<pos:position pos:line="12" pos:column="49"/></expr_stmt>
  <return pos:line="13" pos:column="3">return <expr><name><name pos:line="13" pos:column="10">fs<pos:position pos:line="13" pos:column="12"/></name><operator pos:line="13" pos:column="12">-&gt;<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="14">stack<pos:position pos:line="13" pos:column="19"/></name><index pos:line="13" pos:column="19">[<expr><name pos:line="13" pos:column="20">num<pos:position pos:line="13" pos:column="23"/></name></expr>]<pos:position pos:line="13" pos:column="24"/></index></name><operator pos:line="13" pos:column="24">.<pos:position pos:line="13" pos:column="25"/></operator><name pos:line="13" pos:column="25">node<pos:position pos:line="13" pos:column="29"/></name></expr>;<pos:position pos:line="13" pos:column="30"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2391.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">show_result_list<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name><name pos:line="1" pos:column="30">struct<pos:position pos:line="1" pos:column="36"/></name> <name pos:line="1" pos:column="37">merge_list<pos:position pos:line="1" pos:column="47"/></name></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">entry<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="3" pos:column="9">printf<pos:position pos:line="3" pos:column="15"/></name><argument_list pos:line="3" pos:column="15">(<argument><expr><literal type="string" pos:line="3" pos:column="16">"%s\n"<pos:position pos:line="3" pos:column="22"/></literal></expr></argument>, <argument><expr><call><name pos:line="3" pos:column="24">explanation<pos:position pos:line="3" pos:column="35"/></name><argument_list pos:line="3" pos:column="35">(<argument><expr><name pos:line="3" pos:column="36">entry<pos:position pos:line="3" pos:column="41"/></name></expr></argument>)<pos:position pos:line="3" pos:column="42"/></argument_list></call></expr></argument>)<pos:position pos:line="3" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="44"/></expr_stmt>
	<do pos:line="4" pos:column="9">do <block pos:line="4" pos:column="12">{
		<decl_stmt><decl><type><name><name pos:line="5" pos:column="17">struct<pos:position pos:line="5" pos:column="23"/></name> <name pos:line="5" pos:column="24">merge_list<pos:position pos:line="5" pos:column="34"/></name></name> <modifier pos:line="5" pos:column="35">*<pos:position pos:line="5" pos:column="36"/></modifier></type><name pos:line="5" pos:column="36">link<pos:position pos:line="5" pos:column="40"/></name> <init pos:line="5" pos:column="41">= <expr><name><name pos:line="5" pos:column="43">entry<pos:position pos:line="5" pos:column="48"/></name><operator pos:line="5" pos:column="48">-&gt;<pos:position pos:line="5" pos:column="53"/></operator><name pos:line="5" pos:column="50">link<pos:position pos:line="5" pos:column="54"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="55"/></decl_stmt>
		<decl_stmt><decl><specifier pos:line="6" pos:column="17">static<pos:position pos:line="6" pos:column="23"/></specifier> <type><specifier pos:line="6" pos:column="24">const<pos:position pos:line="6" pos:column="29"/></specifier> <name pos:line="6" pos:column="30">char<pos:position pos:line="6" pos:column="34"/></name> <modifier pos:line="6" pos:column="35">*<pos:position pos:line="6" pos:column="36"/></modifier></type><name><name pos:line="6" pos:column="36">desc<pos:position pos:line="6" pos:column="40"/></name><index pos:line="6" pos:column="40">[<expr><literal type="number" pos:line="6" pos:column="41">4<pos:position pos:line="6" pos:column="42"/></literal></expr>]<pos:position pos:line="6" pos:column="43"/></index></name> <init pos:line="6" pos:column="44">= <expr><block pos:line="6" pos:column="46">{ <expr><literal type="string" pos:line="6" pos:column="48">"result"<pos:position pos:line="6" pos:column="56"/></literal></expr>, <expr><literal type="string" pos:line="6" pos:column="58">"base"<pos:position pos:line="6" pos:column="64"/></literal></expr>, <expr><literal type="string" pos:line="6" pos:column="66">"our"<pos:position pos:line="6" pos:column="71"/></literal></expr>, <expr><literal type="string" pos:line="6" pos:column="73">"their"<pos:position pos:line="6" pos:column="80"/></literal></expr> }<pos:position pos:line="6" pos:column="82"/></block></expr></init></decl>;<pos:position pos:line="6" pos:column="83"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="7" pos:column="17">printf<pos:position pos:line="7" pos:column="23"/></name><argument_list pos:line="7" pos:column="23">(<argument><expr><literal type="string" pos:line="7" pos:column="24">"  %-6s %o %s %s\n"<pos:position pos:line="7" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="45">desc<pos:position pos:line="7" pos:column="49"/></name><index pos:line="7" pos:column="49">[<expr><name><name pos:line="7" pos:column="50">entry<pos:position pos:line="7" pos:column="55"/></name><operator pos:line="7" pos:column="55">-&gt;<pos:position pos:line="7" pos:column="60"/></operator><name pos:line="7" pos:column="57">stage<pos:position pos:line="7" pos:column="62"/></name></name></expr>]<pos:position pos:line="7" pos:column="63"/></index></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="65">entry<pos:position pos:line="7" pos:column="70"/></name><operator pos:line="7" pos:column="70">-&gt;<pos:position pos:line="7" pos:column="75"/></operator><name pos:line="7" pos:column="72">mode<pos:position pos:line="7" pos:column="76"/></name></name></expr></argument>, <argument><expr><call><name pos:line="7" pos:column="78">sha1_to_hex<pos:position pos:line="7" pos:column="89"/></name><argument_list pos:line="7" pos:column="89">(<argument><expr><name><name pos:line="7" pos:column="90">entry<pos:position pos:line="7" pos:column="95"/></name><operator pos:line="7" pos:column="95">-&gt;<pos:position pos:line="7" pos:column="100"/></operator><name pos:line="7" pos:column="97">blob<pos:position pos:line="7" pos:column="101"/></name><operator pos:line="7" pos:column="101">-&gt;<pos:position pos:line="7" pos:column="106"/></operator><name pos:line="7" pos:column="103">object<pos:position pos:line="7" pos:column="109"/></name><operator pos:line="7" pos:column="109">.<pos:position pos:line="7" pos:column="110"/></operator><name pos:line="7" pos:column="110">sha1<pos:position pos:line="7" pos:column="114"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="115"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="117">entry<pos:position pos:line="7" pos:column="122"/></name><operator pos:line="7" pos:column="122">-&gt;<pos:position pos:line="7" pos:column="127"/></operator><name pos:line="7" pos:column="124">path<pos:position pos:line="7" pos:column="128"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="129"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="130"/></expr_stmt>
		<expr_stmt><expr><name pos:line="8" pos:column="17">entry<pos:position pos:line="8" pos:column="22"/></name> <operator pos:line="8" pos:column="23">=<pos:position pos:line="8" pos:column="24"/></operator> <name pos:line="8" pos:column="25">link<pos:position pos:line="8" pos:column="29"/></name></expr>;<pos:position pos:line="8" pos:column="30"/></expr_stmt>
	}<pos:position pos:line="9" pos:column="10"/></block> while <condition pos:line="9" pos:column="17">(<expr><name pos:line="9" pos:column="18">entry<pos:position pos:line="9" pos:column="23"/></name></expr>)<pos:position pos:line="9" pos:column="24"/></condition>;<pos:position pos:line="9" pos:column="25"/></do>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

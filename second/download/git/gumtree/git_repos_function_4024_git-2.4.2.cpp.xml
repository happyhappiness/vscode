<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4024_git-2.4.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">do_push<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><specifier pos:line="1" pos:column="20">const<pos:position pos:line="1" pos:column="25"/></specifier> <name pos:line="1" pos:column="26">char<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">repo<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">int<pos:position pos:line="1" pos:column="41"/></name></type> <name pos:line="1" pos:column="42">flags<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="16">errs<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">remote<pos:position pos:line="4" pos:column="22"/></name></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">remote<pos:position pos:line="4" pos:column="30"/></name> <init pos:line="4" pos:column="31">= <expr><call><name pos:line="4" pos:column="33">pushremote_get<pos:position pos:line="4" pos:column="47"/></name><argument_list pos:line="4" pos:column="47">(<argument><expr><name pos:line="4" pos:column="48">repo<pos:position pos:line="4" pos:column="52"/></name></expr></argument>)<pos:position pos:line="4" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="54"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier><modifier pos:line="5" pos:column="21">*<pos:position pos:line="5" pos:column="22"/></modifier></type><name pos:line="5" pos:column="22">url<pos:position pos:line="5" pos:column="25"/></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">url_nr<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">!<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">remote<pos:position pos:line="8" pos:column="20"/></name></expr>)<pos:position pos:line="8" pos:column="21"/></condition><then pos:line="8" pos:column="21"> <block pos:line="8" pos:column="22">{
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><name pos:line="9" pos:column="21">repo<pos:position pos:line="9" pos:column="25"/></name></expr>)<pos:position pos:line="9" pos:column="26"/></condition><then pos:line="9" pos:column="26">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="25">die<pos:position pos:line="10" pos:column="28"/></name><argument_list pos:line="10" pos:column="28">(<argument><expr><call><name pos:line="10" pos:column="29">_<pos:position pos:line="10" pos:column="30"/></name><argument_list pos:line="10" pos:column="30">(<argument><expr><literal type="string" pos:line="10" pos:column="31">"bad repository '%s'"<pos:position pos:line="10" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="10" pos:column="55">repo<pos:position pos:line="10" pos:column="59"/></name></expr></argument>)<pos:position pos:line="10" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="61"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="11" pos:column="17">die<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">(<argument><expr><call><name pos:line="11" pos:column="21">_<pos:position pos:line="11" pos:column="22"/></name><argument_list pos:line="11" pos:column="22">(<argument><expr><literal type="string" pos:line="11" pos:column="23">"No configured push destination.\n"<pos:position pos:line="11" pos:column="58"/></literal>
		    <literal type="string" pos:line="12" pos:column="21">"Either specify the URL from the command-line or configure a remote repository using\n"<pos:position pos:line="12" pos:column="108"/></literal>
		    <literal type="string" pos:line="13" pos:column="21">"\n"<pos:position pos:line="13" pos:column="25"/></literal>
		    <literal type="string" pos:line="14" pos:column="21">"    git remote add &lt;name&gt; &lt;url&gt;\n"<pos:position pos:line="14" pos:column="68"/></literal>
		    <literal type="string" pos:line="15" pos:column="21">"\n"<pos:position pos:line="15" pos:column="25"/></literal>
		    <literal type="string" pos:line="16" pos:column="21">"and then push using the remote name\n"<pos:position pos:line="16" pos:column="60"/></literal>
		    <literal type="string" pos:line="17" pos:column="21">"\n"<pos:position pos:line="17" pos:column="25"/></literal>
		    <literal type="string" pos:line="18" pos:column="21">"    git push &lt;name&gt;\n"<pos:position pos:line="18" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="47"/></expr_stmt>
	}<pos:position pos:line="19" pos:column="10"/></block></then></if>

	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name><name pos:line="21" pos:column="13">remote<pos:position pos:line="21" pos:column="19"/></name><operator pos:line="21" pos:column="19">-&gt;<pos:position pos:line="21" pos:column="24"/></operator><name pos:line="21" pos:column="21">mirror<pos:position pos:line="21" pos:column="27"/></name></name></expr>)<pos:position pos:line="21" pos:column="28"/></condition><then pos:line="21" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="17">flags<pos:position pos:line="22" pos:column="22"/></name> <operator pos:line="22" pos:column="23">|=<pos:position pos:line="22" pos:column="25"/></operator> <operator pos:line="22" pos:column="26">(<pos:position pos:line="22" pos:column="27"/></operator><name pos:line="22" pos:column="27">TRANSPORT_PUSH_MIRROR<pos:position pos:line="22" pos:column="48"/></name><operator pos:line="22" pos:column="48">|<pos:position pos:line="22" pos:column="49"/></operator><name pos:line="22" pos:column="49">TRANSPORT_PUSH_FORCE<pos:position pos:line="22" pos:column="69"/></name><operator pos:line="22" pos:column="69">)<pos:position pos:line="22" pos:column="70"/></operator></expr>;<pos:position pos:line="22" pos:column="71"/></expr_stmt></block></then></if>

	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><operator pos:line="24" pos:column="13">(<pos:position pos:line="24" pos:column="14"/></operator><name pos:line="24" pos:column="14">flags<pos:position pos:line="24" pos:column="19"/></name> <operator pos:line="24" pos:column="20">&amp;<pos:position pos:line="24" pos:column="25"/></operator> <name pos:line="24" pos:column="22">TRANSPORT_PUSH_ALL<pos:position pos:line="24" pos:column="40"/></name><operator pos:line="24" pos:column="40">)<pos:position pos:line="24" pos:column="41"/></operator> <operator pos:line="24" pos:column="42">&amp;&amp;<pos:position pos:line="24" pos:column="52"/></operator> <name pos:line="24" pos:column="45">refspec<pos:position pos:line="24" pos:column="52"/></name></expr>)<pos:position pos:line="24" pos:column="53"/></condition><then pos:line="24" pos:column="53"> <block pos:line="24" pos:column="54">{
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><operator pos:line="25" pos:column="21">!<pos:position pos:line="25" pos:column="22"/></operator><call><name pos:line="25" pos:column="22">strcmp<pos:position pos:line="25" pos:column="28"/></name><argument_list pos:line="25" pos:column="28">(<argument><expr><operator pos:line="25" pos:column="29">*<pos:position pos:line="25" pos:column="30"/></operator><name pos:line="25" pos:column="30">refspec<pos:position pos:line="25" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="39">"refs/tags/*"<pos:position pos:line="25" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="54"/></condition><then pos:line="25" pos:column="54">
			<block type="pseudo"><return pos:line="26" pos:column="25">return <expr><call><name pos:line="26" pos:column="32">error<pos:position pos:line="26" pos:column="37"/></name><argument_list pos:line="26" pos:column="37">(<argument><expr><call><name pos:line="26" pos:column="38">_<pos:position pos:line="26" pos:column="39"/></name><argument_list pos:line="26" pos:column="39">(<argument><expr><literal type="string" pos:line="26" pos:column="40">"--all and --tags are incompatible"<pos:position pos:line="26" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="78"/></return></block></then></if>
		<return pos:line="27" pos:column="17">return <expr><call><name pos:line="27" pos:column="24">error<pos:position pos:line="27" pos:column="29"/></name><argument_list pos:line="27" pos:column="29">(<argument><expr><call><name pos:line="27" pos:column="30">_<pos:position pos:line="27" pos:column="31"/></name><argument_list pos:line="27" pos:column="31">(<argument><expr><literal type="string" pos:line="27" pos:column="32">"--all can't be combined with refspecs"<pos:position pos:line="27" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="74"/></return>
	}<pos:position pos:line="28" pos:column="10"/></block></then></if>

	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><operator pos:line="30" pos:column="13">(<pos:position pos:line="30" pos:column="14"/></operator><name pos:line="30" pos:column="14">flags<pos:position pos:line="30" pos:column="19"/></name> <operator pos:line="30" pos:column="20">&amp;<pos:position pos:line="30" pos:column="25"/></operator> <name pos:line="30" pos:column="22">TRANSPORT_PUSH_MIRROR<pos:position pos:line="30" pos:column="43"/></name><operator pos:line="30" pos:column="43">)<pos:position pos:line="30" pos:column="44"/></operator> <operator pos:line="30" pos:column="45">&amp;&amp;<pos:position pos:line="30" pos:column="55"/></operator> <name pos:line="30" pos:column="48">refspec<pos:position pos:line="30" pos:column="55"/></name></expr>)<pos:position pos:line="30" pos:column="56"/></condition><then pos:line="30" pos:column="56"> <block pos:line="30" pos:column="57">{
		<if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><operator pos:line="31" pos:column="21">!<pos:position pos:line="31" pos:column="22"/></operator><call><name pos:line="31" pos:column="22">strcmp<pos:position pos:line="31" pos:column="28"/></name><argument_list pos:line="31" pos:column="28">(<argument><expr><operator pos:line="31" pos:column="29">*<pos:position pos:line="31" pos:column="30"/></operator><name pos:line="31" pos:column="30">refspec<pos:position pos:line="31" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="39">"refs/tags/*"<pos:position pos:line="31" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="54"/></condition><then pos:line="31" pos:column="54">
			<block type="pseudo"><return pos:line="32" pos:column="25">return <expr><call><name pos:line="32" pos:column="32">error<pos:position pos:line="32" pos:column="37"/></name><argument_list pos:line="32" pos:column="37">(<argument><expr><call><name pos:line="32" pos:column="38">_<pos:position pos:line="32" pos:column="39"/></name><argument_list pos:line="32" pos:column="39">(<argument><expr><literal type="string" pos:line="32" pos:column="40">"--mirror and --tags are incompatible"<pos:position pos:line="32" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="81"/></return></block></then></if>
		<return pos:line="33" pos:column="17">return <expr><call><name pos:line="33" pos:column="24">error<pos:position pos:line="33" pos:column="29"/></name><argument_list pos:line="33" pos:column="29">(<argument><expr><call><name pos:line="33" pos:column="30">_<pos:position pos:line="33" pos:column="31"/></name><argument_list pos:line="33" pos:column="31">(<argument><expr><literal type="string" pos:line="33" pos:column="32">"--mirror can't be combined with refspecs"<pos:position pos:line="33" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="33" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="77"/></return>
	}<pos:position pos:line="34" pos:column="10"/></block></then></if>

	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><operator pos:line="36" pos:column="13">(<pos:position pos:line="36" pos:column="14"/></operator><name pos:line="36" pos:column="14">flags<pos:position pos:line="36" pos:column="19"/></name> <operator pos:line="36" pos:column="20">&amp;<pos:position pos:line="36" pos:column="25"/></operator> <operator pos:line="36" pos:column="22">(<pos:position pos:line="36" pos:column="23"/></operator><name pos:line="36" pos:column="23">TRANSPORT_PUSH_ALL<pos:position pos:line="36" pos:column="41"/></name><operator pos:line="36" pos:column="41">|<pos:position pos:line="36" pos:column="42"/></operator><name pos:line="36" pos:column="42">TRANSPORT_PUSH_MIRROR<pos:position pos:line="36" pos:column="63"/></name><operator pos:line="36" pos:column="63">)<pos:position pos:line="36" pos:column="64"/></operator><operator pos:line="36" pos:column="64">)<pos:position pos:line="36" pos:column="65"/></operator> <operator pos:line="36" pos:column="66">==<pos:position pos:line="36" pos:column="68"/></operator>
				<operator pos:line="37" pos:column="33">(<pos:position pos:line="37" pos:column="34"/></operator><name pos:line="37" pos:column="34">TRANSPORT_PUSH_ALL<pos:position pos:line="37" pos:column="52"/></name><operator pos:line="37" pos:column="52">|<pos:position pos:line="37" pos:column="53"/></operator><name pos:line="37" pos:column="53">TRANSPORT_PUSH_MIRROR<pos:position pos:line="37" pos:column="74"/></name><operator pos:line="37" pos:column="74">)<pos:position pos:line="37" pos:column="75"/></operator></expr>)<pos:position pos:line="37" pos:column="76"/></condition><then pos:line="37" pos:column="76"> <block pos:line="37" pos:column="77">{
		<return pos:line="38" pos:column="17">return <expr><call><name pos:line="38" pos:column="24">error<pos:position pos:line="38" pos:column="29"/></name><argument_list pos:line="38" pos:column="29">(<argument><expr><call><name pos:line="38" pos:column="30">_<pos:position pos:line="38" pos:column="31"/></name><argument_list pos:line="38" pos:column="31">(<argument><expr><literal type="string" pos:line="38" pos:column="32">"--all and --mirror are incompatible"<pos:position pos:line="38" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="72"/></return>
	}<pos:position pos:line="39" pos:column="10"/></block></then></if>

	<if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><operator pos:line="41" pos:column="13">!<pos:position pos:line="41" pos:column="14"/></operator><name pos:line="41" pos:column="14">refspec<pos:position pos:line="41" pos:column="21"/></name> <operator pos:line="41" pos:column="22">&amp;&amp;<pos:position pos:line="41" pos:column="32"/></operator> <operator pos:line="41" pos:column="25">!<pos:position pos:line="41" pos:column="26"/></operator><operator pos:line="41" pos:column="26">(<pos:position pos:line="41" pos:column="27"/></operator><name pos:line="41" pos:column="27">flags<pos:position pos:line="41" pos:column="32"/></name> <operator pos:line="41" pos:column="33">&amp;<pos:position pos:line="41" pos:column="38"/></operator> <name pos:line="41" pos:column="35">TRANSPORT_PUSH_ALL<pos:position pos:line="41" pos:column="53"/></name><operator pos:line="41" pos:column="53">)<pos:position pos:line="41" pos:column="54"/></operator></expr>)<pos:position pos:line="41" pos:column="55"/></condition><then pos:line="41" pos:column="55"> <block pos:line="41" pos:column="56">{
		<if pos:line="42" pos:column="17">if <condition pos:line="42" pos:column="20">(<expr><name><name pos:line="42" pos:column="21">remote<pos:position pos:line="42" pos:column="27"/></name><operator pos:line="42" pos:column="27">-&gt;<pos:position pos:line="42" pos:column="32"/></operator><name pos:line="42" pos:column="29">push_refspec_nr<pos:position pos:line="42" pos:column="44"/></name></name></expr>)<pos:position pos:line="42" pos:column="45"/></condition><then pos:line="42" pos:column="45"> <block pos:line="42" pos:column="46">{
			<expr_stmt><expr><name pos:line="43" pos:column="25">refspec<pos:position pos:line="43" pos:column="32"/></name> <operator pos:line="43" pos:column="33">=<pos:position pos:line="43" pos:column="34"/></operator> <name><name pos:line="43" pos:column="35">remote<pos:position pos:line="43" pos:column="41"/></name><operator pos:line="43" pos:column="41">-&gt;<pos:position pos:line="43" pos:column="46"/></operator><name pos:line="43" pos:column="43">push_refspec<pos:position pos:line="43" pos:column="55"/></name></name></expr>;<pos:position pos:line="43" pos:column="56"/></expr_stmt>
			<expr_stmt><expr><name pos:line="44" pos:column="25">refspec_nr<pos:position pos:line="44" pos:column="35"/></name> <operator pos:line="44" pos:column="36">=<pos:position pos:line="44" pos:column="37"/></operator> <name><name pos:line="44" pos:column="38">remote<pos:position pos:line="44" pos:column="44"/></name><operator pos:line="44" pos:column="44">-&gt;<pos:position pos:line="44" pos:column="49"/></operator><name pos:line="44" pos:column="46">push_refspec_nr<pos:position pos:line="44" pos:column="61"/></name></name></expr>;<pos:position pos:line="44" pos:column="62"/></expr_stmt>
		}<pos:position pos:line="45" pos:column="18"/></block></then> <elseif pos:line="45" pos:column="19">else <if pos:line="45" pos:column="24">if <condition pos:line="45" pos:column="27">(<expr><operator pos:line="45" pos:column="28">!<pos:position pos:line="45" pos:column="29"/></operator><operator pos:line="45" pos:column="29">(<pos:position pos:line="45" pos:column="30"/></operator><name pos:line="45" pos:column="30">flags<pos:position pos:line="45" pos:column="35"/></name> <operator pos:line="45" pos:column="36">&amp;<pos:position pos:line="45" pos:column="41"/></operator> <name pos:line="45" pos:column="38">TRANSPORT_PUSH_MIRROR<pos:position pos:line="45" pos:column="59"/></name><operator pos:line="45" pos:column="59">)<pos:position pos:line="45" pos:column="60"/></operator></expr>)<pos:position pos:line="45" pos:column="61"/></condition><then pos:line="45" pos:column="61">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="46" pos:column="25">setup_default_push_refspecs<pos:position pos:line="46" pos:column="52"/></name><argument_list pos:line="46" pos:column="52">(<argument><expr><name pos:line="46" pos:column="53">remote<pos:position pos:line="46" pos:column="59"/></name></expr></argument>)<pos:position pos:line="46" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="61"/></expr_stmt></block></then></if></elseif></if>
	}<pos:position pos:line="47" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="48" pos:column="9">errs<pos:position pos:line="48" pos:column="13"/></name> <operator pos:line="48" pos:column="14">=<pos:position pos:line="48" pos:column="15"/></operator> <literal type="number" pos:line="48" pos:column="16">0<pos:position pos:line="48" pos:column="17"/></literal></expr>;<pos:position pos:line="48" pos:column="18"/></expr_stmt>
	<expr_stmt><expr><name pos:line="49" pos:column="9">url_nr<pos:position pos:line="49" pos:column="15"/></name> <operator pos:line="49" pos:column="16">=<pos:position pos:line="49" pos:column="17"/></operator> <call><name pos:line="49" pos:column="18">push_url_of_remote<pos:position pos:line="49" pos:column="36"/></name><argument_list pos:line="49" pos:column="36">(<argument><expr><name pos:line="49" pos:column="37">remote<pos:position pos:line="49" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="49" pos:column="45">&amp;<pos:position pos:line="49" pos:column="50"/></operator><name pos:line="49" pos:column="46">url<pos:position pos:line="49" pos:column="49"/></name></expr></argument>)<pos:position pos:line="49" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="51"/></expr_stmt>
	<if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><name pos:line="50" pos:column="13">url_nr<pos:position pos:line="50" pos:column="19"/></name></expr>)<pos:position pos:line="50" pos:column="20"/></condition><then pos:line="50" pos:column="20"> <block pos:line="50" pos:column="21">{
		<for pos:line="51" pos:column="17">for <control pos:line="51" pos:column="21">(<init><expr><name pos:line="51" pos:column="22">i<pos:position pos:line="51" pos:column="23"/></name> <operator pos:line="51" pos:column="24">=<pos:position pos:line="51" pos:column="25"/></operator> <literal type="number" pos:line="51" pos:column="26">0<pos:position pos:line="51" pos:column="27"/></literal></expr>;<pos:position pos:line="51" pos:column="28"/></init> <condition><expr><name pos:line="51" pos:column="29">i<pos:position pos:line="51" pos:column="30"/></name> <operator pos:line="51" pos:column="31">&lt;<pos:position pos:line="51" pos:column="35"/></operator> <name pos:line="51" pos:column="33">url_nr<pos:position pos:line="51" pos:column="39"/></name></expr>;<pos:position pos:line="51" pos:column="40"/></condition> <incr><expr><name pos:line="51" pos:column="41">i<pos:position pos:line="51" pos:column="42"/></name><operator pos:line="51" pos:column="42">++<pos:position pos:line="51" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="51" pos:column="45"/></control> <block pos:line="51" pos:column="46">{
			<decl_stmt><decl><type><name><name pos:line="52" pos:column="25">struct<pos:position pos:line="52" pos:column="31"/></name> <name pos:line="52" pos:column="32">transport<pos:position pos:line="52" pos:column="41"/></name></name> <modifier pos:line="52" pos:column="42">*<pos:position pos:line="52" pos:column="43"/></modifier></type><name pos:line="52" pos:column="43">transport<pos:position pos:line="52" pos:column="52"/></name> <init pos:line="52" pos:column="53">=
				<expr><call><name pos:line="53" pos:column="33">transport_get<pos:position pos:line="53" pos:column="46"/></name><argument_list pos:line="53" pos:column="46">(<argument><expr><name pos:line="53" pos:column="47">remote<pos:position pos:line="53" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="55">url<pos:position pos:line="53" pos:column="58"/></name><index pos:line="53" pos:column="58">[<expr><name pos:line="53" pos:column="59">i<pos:position pos:line="53" pos:column="60"/></name></expr>]<pos:position pos:line="53" pos:column="61"/></index></name></expr></argument>)<pos:position pos:line="53" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="53" pos:column="63"/></decl_stmt>
			<if pos:line="54" pos:column="25">if <condition pos:line="54" pos:column="28">(<expr><call><name pos:line="54" pos:column="29">push_with_options<pos:position pos:line="54" pos:column="46"/></name><argument_list pos:line="54" pos:column="46">(<argument><expr><name pos:line="54" pos:column="47">transport<pos:position pos:line="54" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="58">flags<pos:position pos:line="54" pos:column="63"/></name></expr></argument>)<pos:position pos:line="54" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="54" pos:column="65"/></condition><then pos:line="54" pos:column="65">
				<block type="pseudo"><expr_stmt><expr><name pos:line="55" pos:column="33">errs<pos:position pos:line="55" pos:column="37"/></name><operator pos:line="55" pos:column="37">++<pos:position pos:line="55" pos:column="39"/></operator></expr>;<pos:position pos:line="55" pos:column="40"/></expr_stmt></block></then></if>
		}<pos:position pos:line="56" pos:column="18"/></block></for>
	}<pos:position pos:line="57" pos:column="10"/></block></then> <else pos:line="57" pos:column="11">else <block pos:line="57" pos:column="16">{
		<decl_stmt><decl><type><name><name pos:line="58" pos:column="17">struct<pos:position pos:line="58" pos:column="23"/></name> <name pos:line="58" pos:column="24">transport<pos:position pos:line="58" pos:column="33"/></name></name> <modifier pos:line="58" pos:column="34">*<pos:position pos:line="58" pos:column="35"/></modifier></type><name pos:line="58" pos:column="35">transport<pos:position pos:line="58" pos:column="44"/></name> <init pos:line="58" pos:column="45">=
			<expr><call><name pos:line="59" pos:column="25">transport_get<pos:position pos:line="59" pos:column="38"/></name><argument_list pos:line="59" pos:column="38">(<argument><expr><name pos:line="59" pos:column="39">remote<pos:position pos:line="59" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="47">NULL<pos:position pos:line="59" pos:column="51"/></name></expr></argument>)<pos:position pos:line="59" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="59" pos:column="53"/></decl_stmt>

		<if pos:line="61" pos:column="17">if <condition pos:line="61" pos:column="20">(<expr><call><name pos:line="61" pos:column="21">push_with_options<pos:position pos:line="61" pos:column="38"/></name><argument_list pos:line="61" pos:column="38">(<argument><expr><name pos:line="61" pos:column="39">transport<pos:position pos:line="61" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="50">flags<pos:position pos:line="61" pos:column="55"/></name></expr></argument>)<pos:position pos:line="61" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="61" pos:column="57"/></condition><then pos:line="61" pos:column="57">
			<block type="pseudo"><expr_stmt><expr><name pos:line="62" pos:column="25">errs<pos:position pos:line="62" pos:column="29"/></name><operator pos:line="62" pos:column="29">++<pos:position pos:line="62" pos:column="31"/></operator></expr>;<pos:position pos:line="62" pos:column="32"/></expr_stmt></block></then></if>
	}<pos:position pos:line="63" pos:column="10"/></block></else></if>
	<return pos:line="64" pos:column="9">return <expr><operator pos:line="64" pos:column="16">!<pos:position pos:line="64" pos:column="17"/></operator><operator pos:line="64" pos:column="17">!<pos:position pos:line="64" pos:column="18"/></operator><name pos:line="64" pos:column="18">errs<pos:position pos:line="64" pos:column="22"/></name></expr>;<pos:position pos:line="64" pos:column="23"/></return>
}<pos:position pos:line="65" pos:column="2"/></block></function></unit>

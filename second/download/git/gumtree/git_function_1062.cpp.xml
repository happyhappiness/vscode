<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1062.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">threaded_lazy_init_name_hash<pos:position pos:line="1" pos:column="41"/></name><parameter_list pos:line="1" pos:column="41">(
	<parameter><decl><type><name><name pos:line="2" pos:column="9">struct<pos:position pos:line="2" pos:column="15"/></name> <name pos:line="2" pos:column="16">index_state<pos:position pos:line="2" pos:column="27"/></name></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">istate<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="36"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">nr_each<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">k_start<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">t<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">lazy_entry<pos:position pos:line="7" pos:column="26"/></name></name> <modifier pos:line="7" pos:column="27">*<pos:position pos:line="7" pos:column="28"/></modifier></type><name pos:line="7" pos:column="28">lazy_entries<pos:position pos:line="7" pos:column="40"/></name></decl>;<pos:position pos:line="7" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">lazy_dir_thread_data<pos:position pos:line="8" pos:column="36"/></name></name> <modifier pos:line="8" pos:column="37">*<pos:position pos:line="8" pos:column="38"/></modifier></type><name pos:line="8" pos:column="38">td_dir<pos:position pos:line="8" pos:column="44"/></name></decl>;<pos:position pos:line="8" pos:column="45"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">lazy_name_thread_data<pos:position pos:line="9" pos:column="37"/></name></name> <modifier pos:line="9" pos:column="38">*<pos:position pos:line="9" pos:column="39"/></modifier></type><name pos:line="9" pos:column="39">td_name<pos:position pos:line="9" pos:column="46"/></name></decl>;<pos:position pos:line="9" pos:column="47"/></decl_stmt>

	<expr_stmt><expr><name pos:line="11" pos:column="9">k_start<pos:position pos:line="11" pos:column="16"/></name> <operator pos:line="11" pos:column="17">=<pos:position pos:line="11" pos:column="18"/></operator> <literal type="number" pos:line="11" pos:column="19">0<pos:position pos:line="11" pos:column="20"/></literal></expr>;<pos:position pos:line="11" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><name pos:line="12" pos:column="9">nr_each<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">=<pos:position pos:line="12" pos:column="18"/></operator> <call><name pos:line="12" pos:column="19">DIV_ROUND_UP<pos:position pos:line="12" pos:column="31"/></name><argument_list pos:line="12" pos:column="31">(<argument><expr><name><name pos:line="12" pos:column="32">istate<pos:position pos:line="12" pos:column="38"/></name><operator pos:line="12" pos:column="38">-&gt;<pos:position pos:line="12" pos:column="43"/></operator><name pos:line="12" pos:column="40">cache_nr<pos:position pos:line="12" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="50">lazy_nr_dir_threads<pos:position pos:line="12" pos:column="69"/></name></expr></argument>)<pos:position pos:line="12" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="71"/></expr_stmt>

	<expr_stmt><expr><name pos:line="14" pos:column="9">lazy_entries<pos:position pos:line="14" pos:column="21"/></name> <operator pos:line="14" pos:column="22">=<pos:position pos:line="14" pos:column="23"/></operator> <call><name pos:line="14" pos:column="24">xcalloc<pos:position pos:line="14" pos:column="31"/></name><argument_list pos:line="14" pos:column="31">(<argument><expr><name><name pos:line="14" pos:column="32">istate<pos:position pos:line="14" pos:column="38"/></name><operator pos:line="14" pos:column="38">-&gt;<pos:position pos:line="14" pos:column="43"/></operator><name pos:line="14" pos:column="40">cache_nr<pos:position pos:line="14" pos:column="48"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="50">sizeof<argument_list pos:line="14" pos:column="56">(<argument><expr pos:line="14" pos:column="57">struct <name pos:line="14" pos:column="64">lazy_entry<pos:position pos:line="14" pos:column="74"/></name></expr></argument>)<pos:position pos:line="14" pos:column="75"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="77"/></expr_stmt>
	<expr_stmt><expr><name pos:line="15" pos:column="9">td_dir<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <call><name pos:line="15" pos:column="18">xcalloc<pos:position pos:line="15" pos:column="25"/></name><argument_list pos:line="15" pos:column="25">(<argument><expr><name pos:line="15" pos:column="26">lazy_nr_dir_threads<pos:position pos:line="15" pos:column="45"/></name></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="47">sizeof<argument_list pos:line="15" pos:column="53">(<argument><expr pos:line="15" pos:column="54">struct <name pos:line="15" pos:column="61">lazy_dir_thread_data<pos:position pos:line="15" pos:column="81"/></name></expr></argument>)<pos:position pos:line="15" pos:column="82"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="84"/></expr_stmt>
	<expr_stmt><expr><name pos:line="16" pos:column="9">td_name<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">=<pos:position pos:line="16" pos:column="18"/></operator> <call><name pos:line="16" pos:column="19">xcalloc<pos:position pos:line="16" pos:column="26"/></name><argument_list pos:line="16" pos:column="26">(<argument><expr><literal type="number" pos:line="16" pos:column="27">1<pos:position pos:line="16" pos:column="28"/></literal></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="30">sizeof<argument_list pos:line="16" pos:column="36">(<argument><expr pos:line="16" pos:column="37">struct <name pos:line="16" pos:column="44">lazy_name_thread_data<pos:position pos:line="16" pos:column="65"/></name></expr></argument>)<pos:position pos:line="16" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="68"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="18" pos:column="9">init_dir_mutex<pos:position pos:line="18" pos:column="23"/></name><argument_list pos:line="18" pos:column="23">()<pos:position pos:line="18" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="26"/></expr_stmt>

	<comment type="block" pos:line="20" pos:column="9">/*
	 * Phase 1:
	 * Build "istate-&gt;dir_hash" using n "dir" threads (and a read-only index).
	 */</comment>
	<for pos:line="24" pos:column="9">for <control pos:line="24" pos:column="13">(<init><expr><name pos:line="24" pos:column="14">t<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">=<pos:position pos:line="24" pos:column="17"/></operator> <literal type="number" pos:line="24" pos:column="18">0<pos:position pos:line="24" pos:column="19"/></literal></expr>;<pos:position pos:line="24" pos:column="20"/></init> <condition><expr><name pos:line="24" pos:column="21">t<pos:position pos:line="24" pos:column="22"/></name> <operator pos:line="24" pos:column="23">&lt;<pos:position pos:line="24" pos:column="27"/></operator> <name pos:line="24" pos:column="25">lazy_nr_dir_threads<pos:position pos:line="24" pos:column="44"/></name></expr>;<pos:position pos:line="24" pos:column="45"/></condition> <incr><expr><name pos:line="24" pos:column="46">t<pos:position pos:line="24" pos:column="47"/></name><operator pos:line="24" pos:column="47">++<pos:position pos:line="24" pos:column="49"/></operator></expr></incr>)<pos:position pos:line="24" pos:column="50"/></control> <block pos:line="24" pos:column="51">{
		<decl_stmt><decl><type><name><name pos:line="25" pos:column="17">struct<pos:position pos:line="25" pos:column="23"/></name> <name pos:line="25" pos:column="24">lazy_dir_thread_data<pos:position pos:line="25" pos:column="44"/></name></name> <modifier pos:line="25" pos:column="45">*<pos:position pos:line="25" pos:column="46"/></modifier></type><name pos:line="25" pos:column="46">td_dir_t<pos:position pos:line="25" pos:column="54"/></name> <init pos:line="25" pos:column="55">= <expr><name pos:line="25" pos:column="57">td_dir<pos:position pos:line="25" pos:column="63"/></name> <operator pos:line="25" pos:column="64">+<pos:position pos:line="25" pos:column="65"/></operator> <name pos:line="25" pos:column="66">t<pos:position pos:line="25" pos:column="67"/></name></expr></init></decl>;<pos:position pos:line="25" pos:column="68"/></decl_stmt>
		<expr_stmt><expr><name><name pos:line="26" pos:column="17">td_dir_t<pos:position pos:line="26" pos:column="25"/></name><operator pos:line="26" pos:column="25">-&gt;<pos:position pos:line="26" pos:column="30"/></operator><name pos:line="26" pos:column="27">istate<pos:position pos:line="26" pos:column="33"/></name></name> <operator pos:line="26" pos:column="34">=<pos:position pos:line="26" pos:column="35"/></operator> <name pos:line="26" pos:column="36">istate<pos:position pos:line="26" pos:column="42"/></name></expr>;<pos:position pos:line="26" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="27" pos:column="17">td_dir_t<pos:position pos:line="27" pos:column="25"/></name><operator pos:line="27" pos:column="25">-&gt;<pos:position pos:line="27" pos:column="30"/></operator><name pos:line="27" pos:column="27">lazy_entries<pos:position pos:line="27" pos:column="39"/></name></name> <operator pos:line="27" pos:column="40">=<pos:position pos:line="27" pos:column="41"/></operator> <name pos:line="27" pos:column="42">lazy_entries<pos:position pos:line="27" pos:column="54"/></name></expr>;<pos:position pos:line="27" pos:column="55"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="28" pos:column="17">td_dir_t<pos:position pos:line="28" pos:column="25"/></name><operator pos:line="28" pos:column="25">-&gt;<pos:position pos:line="28" pos:column="30"/></operator><name pos:line="28" pos:column="27">k_start<pos:position pos:line="28" pos:column="34"/></name></name> <operator pos:line="28" pos:column="35">=<pos:position pos:line="28" pos:column="36"/></operator> <name pos:line="28" pos:column="37">k_start<pos:position pos:line="28" pos:column="44"/></name></expr>;<pos:position pos:line="28" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><name pos:line="29" pos:column="17">k_start<pos:position pos:line="29" pos:column="24"/></name> <operator pos:line="29" pos:column="25">+=<pos:position pos:line="29" pos:column="27"/></operator> <name pos:line="29" pos:column="28">nr_each<pos:position pos:line="29" pos:column="35"/></name></expr>;<pos:position pos:line="29" pos:column="36"/></expr_stmt>
		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><name pos:line="30" pos:column="21">k_start<pos:position pos:line="30" pos:column="28"/></name> <operator pos:line="30" pos:column="29">&gt;<pos:position pos:line="30" pos:column="33"/></operator> <name><name pos:line="30" pos:column="31">istate<pos:position pos:line="30" pos:column="37"/></name><operator pos:line="30" pos:column="37">-&gt;<pos:position pos:line="30" pos:column="42"/></operator><name pos:line="30" pos:column="39">cache_nr<pos:position pos:line="30" pos:column="47"/></name></name></expr>)<pos:position pos:line="30" pos:column="48"/></condition><then pos:line="30" pos:column="48">
			<block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="25">k_start<pos:position pos:line="31" pos:column="32"/></name> <operator pos:line="31" pos:column="33">=<pos:position pos:line="31" pos:column="34"/></operator> <name><name pos:line="31" pos:column="35">istate<pos:position pos:line="31" pos:column="41"/></name><operator pos:line="31" pos:column="41">-&gt;<pos:position pos:line="31" pos:column="46"/></operator><name pos:line="31" pos:column="43">cache_nr<pos:position pos:line="31" pos:column="51"/></name></name></expr>;<pos:position pos:line="31" pos:column="52"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name><name pos:line="32" pos:column="17">td_dir_t<pos:position pos:line="32" pos:column="25"/></name><operator pos:line="32" pos:column="25">-&gt;<pos:position pos:line="32" pos:column="30"/></operator><name pos:line="32" pos:column="27">k_end<pos:position pos:line="32" pos:column="32"/></name></name> <operator pos:line="32" pos:column="33">=<pos:position pos:line="32" pos:column="34"/></operator> <name pos:line="32" pos:column="35">k_start<pos:position pos:line="32" pos:column="42"/></name></expr>;<pos:position pos:line="32" pos:column="43"/></expr_stmt>
		<if pos:line="33" pos:column="17">if <condition pos:line="33" pos:column="20">(<expr><call><name pos:line="33" pos:column="21">pthread_create<pos:position pos:line="33" pos:column="35"/></name><argument_list pos:line="33" pos:column="35">(<argument><expr><operator pos:line="33" pos:column="36">&amp;<pos:position pos:line="33" pos:column="41"/></operator><name><name pos:line="33" pos:column="37">td_dir_t<pos:position pos:line="33" pos:column="45"/></name><operator pos:line="33" pos:column="45">-&gt;<pos:position pos:line="33" pos:column="50"/></operator><name pos:line="33" pos:column="47">pthread<pos:position pos:line="33" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="56">NULL<pos:position pos:line="33" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="62">lazy_dir_thread_proc<pos:position pos:line="33" pos:column="82"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="84">td_dir_t<pos:position pos:line="33" pos:column="92"/></name></expr></argument>)<pos:position pos:line="33" pos:column="93"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="94"/></condition><then pos:line="33" pos:column="94">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="25">die<pos:position pos:line="34" pos:column="28"/></name><argument_list pos:line="34" pos:column="28">(<argument><expr><literal type="string" pos:line="34" pos:column="29">"unable to create lazy_dir_thread"<pos:position pos:line="34" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="65"/></expr_stmt></block></then></if>
	}<pos:position pos:line="35" pos:column="10"/></block></for>
	<for pos:line="36" pos:column="9">for <control pos:line="36" pos:column="13">(<init><expr><name pos:line="36" pos:column="14">t<pos:position pos:line="36" pos:column="15"/></name> <operator pos:line="36" pos:column="16">=<pos:position pos:line="36" pos:column="17"/></operator> <literal type="number" pos:line="36" pos:column="18">0<pos:position pos:line="36" pos:column="19"/></literal></expr>;<pos:position pos:line="36" pos:column="20"/></init> <condition><expr><name pos:line="36" pos:column="21">t<pos:position pos:line="36" pos:column="22"/></name> <operator pos:line="36" pos:column="23">&lt;<pos:position pos:line="36" pos:column="27"/></operator> <name pos:line="36" pos:column="25">lazy_nr_dir_threads<pos:position pos:line="36" pos:column="44"/></name></expr>;<pos:position pos:line="36" pos:column="45"/></condition> <incr><expr><name pos:line="36" pos:column="46">t<pos:position pos:line="36" pos:column="47"/></name><operator pos:line="36" pos:column="47">++<pos:position pos:line="36" pos:column="49"/></operator></expr></incr>)<pos:position pos:line="36" pos:column="50"/></control> <block pos:line="36" pos:column="51">{
		<decl_stmt><decl><type><name><name pos:line="37" pos:column="17">struct<pos:position pos:line="37" pos:column="23"/></name> <name pos:line="37" pos:column="24">lazy_dir_thread_data<pos:position pos:line="37" pos:column="44"/></name></name> <modifier pos:line="37" pos:column="45">*<pos:position pos:line="37" pos:column="46"/></modifier></type><name pos:line="37" pos:column="46">td_dir_t<pos:position pos:line="37" pos:column="54"/></name> <init pos:line="37" pos:column="55">= <expr><name pos:line="37" pos:column="57">td_dir<pos:position pos:line="37" pos:column="63"/></name> <operator pos:line="37" pos:column="64">+<pos:position pos:line="37" pos:column="65"/></operator> <name pos:line="37" pos:column="66">t<pos:position pos:line="37" pos:column="67"/></name></expr></init></decl>;<pos:position pos:line="37" pos:column="68"/></decl_stmt>
		<if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><call><name pos:line="38" pos:column="21">pthread_join<pos:position pos:line="38" pos:column="33"/></name><argument_list pos:line="38" pos:column="33">(<argument><expr><name><name pos:line="38" pos:column="34">td_dir_t<pos:position pos:line="38" pos:column="42"/></name><operator pos:line="38" pos:column="42">-&gt;<pos:position pos:line="38" pos:column="47"/></operator><name pos:line="38" pos:column="44">pthread<pos:position pos:line="38" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="53">NULL<pos:position pos:line="38" pos:column="57"/></name></expr></argument>)<pos:position pos:line="38" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="59"/></condition><then pos:line="38" pos:column="59">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="39" pos:column="25">die<pos:position pos:line="39" pos:column="28"/></name><argument_list pos:line="39" pos:column="28">(<argument><expr><literal type="string" pos:line="39" pos:column="29">"unable to join lazy_dir_thread"<pos:position pos:line="39" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="63"/></expr_stmt></block></then></if>
	}<pos:position pos:line="40" pos:column="10"/></block></for>

	<comment type="block" pos:line="42" pos:column="9">/*
	 * Phase 2:
	 * Iterate over all index entries and add them to the "istate-&gt;name_hash"
	 * using a single "name" background thread.
	 * (Testing showed it wasn't worth running more than 1 thread for this.)
	 *
	 * Meanwhile, finish updating the parent directory ref-counts for each
	 * index entry using the current thread.  (This step is very fast and
	 * doesn't need threading.)
	 */</comment>
	<expr_stmt><expr><name><name pos:line="52" pos:column="9">td_name<pos:position pos:line="52" pos:column="16"/></name><operator pos:line="52" pos:column="16">-&gt;<pos:position pos:line="52" pos:column="21"/></operator><name pos:line="52" pos:column="18">istate<pos:position pos:line="52" pos:column="24"/></name></name> <operator pos:line="52" pos:column="25">=<pos:position pos:line="52" pos:column="26"/></operator> <name pos:line="52" pos:column="27">istate<pos:position pos:line="52" pos:column="33"/></name></expr>;<pos:position pos:line="52" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="53" pos:column="9">td_name<pos:position pos:line="53" pos:column="16"/></name><operator pos:line="53" pos:column="16">-&gt;<pos:position pos:line="53" pos:column="21"/></operator><name pos:line="53" pos:column="18">lazy_entries<pos:position pos:line="53" pos:column="30"/></name></name> <operator pos:line="53" pos:column="31">=<pos:position pos:line="53" pos:column="32"/></operator> <name pos:line="53" pos:column="33">lazy_entries<pos:position pos:line="53" pos:column="45"/></name></expr>;<pos:position pos:line="53" pos:column="46"/></expr_stmt>
	<if pos:line="54" pos:column="9">if <condition pos:line="54" pos:column="12">(<expr><call><name pos:line="54" pos:column="13">pthread_create<pos:position pos:line="54" pos:column="27"/></name><argument_list pos:line="54" pos:column="27">(<argument><expr><operator pos:line="54" pos:column="28">&amp;<pos:position pos:line="54" pos:column="33"/></operator><name><name pos:line="54" pos:column="29">td_name<pos:position pos:line="54" pos:column="36"/></name><operator pos:line="54" pos:column="36">-&gt;<pos:position pos:line="54" pos:column="41"/></operator><name pos:line="54" pos:column="38">pthread<pos:position pos:line="54" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="47">NULL<pos:position pos:line="54" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="53">lazy_name_thread_proc<pos:position pos:line="54" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="76">td_name<pos:position pos:line="54" pos:column="83"/></name></expr></argument>)<pos:position pos:line="54" pos:column="84"/></argument_list></call></expr>)<pos:position pos:line="54" pos:column="85"/></condition><then pos:line="54" pos:column="85">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="55" pos:column="17">die<pos:position pos:line="55" pos:column="20"/></name><argument_list pos:line="55" pos:column="20">(<argument><expr><literal type="string" pos:line="55" pos:column="21">"unable to create lazy_name_thread"<pos:position pos:line="55" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="58"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="57" pos:column="9">lazy_update_dir_ref_counts<pos:position pos:line="57" pos:column="35"/></name><argument_list pos:line="57" pos:column="35">(<argument><expr><name pos:line="57" pos:column="36">istate<pos:position pos:line="57" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="44">lazy_entries<pos:position pos:line="57" pos:column="56"/></name></expr></argument>)<pos:position pos:line="57" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="58"/></expr_stmt>

	<if pos:line="59" pos:column="9">if <condition pos:line="59" pos:column="12">(<expr><call><name pos:line="59" pos:column="13">pthread_join<pos:position pos:line="59" pos:column="25"/></name><argument_list pos:line="59" pos:column="25">(<argument><expr><name><name pos:line="59" pos:column="26">td_name<pos:position pos:line="59" pos:column="33"/></name><operator pos:line="59" pos:column="33">-&gt;<pos:position pos:line="59" pos:column="38"/></operator><name pos:line="59" pos:column="35">pthread<pos:position pos:line="59" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="44">NULL<pos:position pos:line="59" pos:column="48"/></name></expr></argument>)<pos:position pos:line="59" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="59" pos:column="50"/></condition><then pos:line="59" pos:column="50">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="60" pos:column="17">die<pos:position pos:line="60" pos:column="20"/></name><argument_list pos:line="60" pos:column="20">(<argument><expr><literal type="string" pos:line="60" pos:column="21">"unable to join lazy_name_thread"<pos:position pos:line="60" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="56"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="62" pos:column="9">cleanup_dir_mutex<pos:position pos:line="62" pos:column="26"/></name><argument_list pos:line="62" pos:column="26">()<pos:position pos:line="62" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="29"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="64" pos:column="9">free<pos:position pos:line="64" pos:column="13"/></name><argument_list pos:line="64" pos:column="13">(<argument><expr><name pos:line="64" pos:column="14">td_name<pos:position pos:line="64" pos:column="21"/></name></expr></argument>)<pos:position pos:line="64" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="23"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="65" pos:column="9">free<pos:position pos:line="65" pos:column="13"/></name><argument_list pos:line="65" pos:column="13">(<argument><expr><name pos:line="65" pos:column="14">td_dir<pos:position pos:line="65" pos:column="20"/></name></expr></argument>)<pos:position pos:line="65" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="22"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="66" pos:column="9">free<pos:position pos:line="66" pos:column="13"/></name><argument_list pos:line="66" pos:column="13">(<argument><expr><name pos:line="66" pos:column="14">lazy_entries<pos:position pos:line="66" pos:column="26"/></name></expr></argument>)<pos:position pos:line="66" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="28"/></expr_stmt>
}<pos:position pos:line="67" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5661_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">prepare_shallow_update<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name><name pos:line="1" pos:column="36">struct<pos:position pos:line="1" pos:column="42"/></name> <name pos:line="1" pos:column="43">command<pos:position pos:line="1" pos:column="50"/></name></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">commands<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>,
				   <parameter><decl><type><name><name pos:line="2" pos:column="36">struct<pos:position pos:line="2" pos:column="42"/></name> <name pos:line="2" pos:column="43">shallow_info<pos:position pos:line="2" pos:column="55"/></name></name> <modifier pos:line="2" pos:column="56">*<pos:position pos:line="2" pos:column="57"/></modifier></type><name pos:line="2" pos:column="57">si<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="60"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">i<pos:position pos:line="4" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="16">j<pos:position pos:line="4" pos:column="17"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="19">k<pos:position pos:line="4" pos:column="20"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="22">bitmap_size<pos:position pos:line="4" pos:column="33"/></name> <init pos:line="4" pos:column="34">= <expr><call><name pos:line="4" pos:column="36">DIV_ROUND_UP<pos:position pos:line="4" pos:column="48"/></name><argument_list pos:line="4" pos:column="48">(<argument><expr><name><name pos:line="4" pos:column="49">si<pos:position pos:line="4" pos:column="51"/></name><operator pos:line="4" pos:column="51">-&gt;<pos:position pos:line="4" pos:column="56"/></operator><name pos:line="4" pos:column="53">ref<pos:position pos:line="4" pos:column="56"/></name><operator pos:line="4" pos:column="56">-&gt;<pos:position pos:line="4" pos:column="61"/></operator><name pos:line="4" pos:column="58">nr<pos:position pos:line="4" pos:column="60"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="62">32<pos:position pos:line="4" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="66"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="6" pos:column="9">ALLOC_ARRAY<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><name><name pos:line="6" pos:column="21">si<pos:position pos:line="6" pos:column="23"/></name><operator pos:line="6" pos:column="23">-&gt;<pos:position pos:line="6" pos:column="28"/></operator><name pos:line="6" pos:column="25">used_shallow<pos:position pos:line="6" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="39">si<pos:position pos:line="6" pos:column="41"/></name><operator pos:line="6" pos:column="41">-&gt;<pos:position pos:line="6" pos:column="46"/></operator><name pos:line="6" pos:column="43">shallow<pos:position pos:line="6" pos:column="50"/></name><operator pos:line="6" pos:column="50">-&gt;<pos:position pos:line="6" pos:column="55"/></operator><name pos:line="6" pos:column="52">nr<pos:position pos:line="6" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="56"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="7" pos:column="9">assign_shallow_commits_to_refs<pos:position pos:line="7" pos:column="39"/></name><argument_list pos:line="7" pos:column="39">(<argument><expr><name pos:line="7" pos:column="40">si<pos:position pos:line="7" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="44">si<pos:position pos:line="7" pos:column="46"/></name><operator pos:line="7" pos:column="46">-&gt;<pos:position pos:line="7" pos:column="51"/></operator><name pos:line="7" pos:column="48">used_shallow<pos:position pos:line="7" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="62">NULL<pos:position pos:line="7" pos:column="66"/></name></expr></argument>)<pos:position pos:line="7" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="68"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="9" pos:column="9">si<pos:position pos:line="9" pos:column="11"/></name><operator pos:line="9" pos:column="11">-&gt;<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="13">need_reachability_test<pos:position pos:line="9" pos:column="35"/></name></name> <operator pos:line="9" pos:column="36">=<pos:position pos:line="9" pos:column="37"/></operator>
		<call><name pos:line="10" pos:column="17">xcalloc<pos:position pos:line="10" pos:column="24"/></name><argument_list pos:line="10" pos:column="24">(<argument><expr><name><name pos:line="10" pos:column="25">si<pos:position pos:line="10" pos:column="27"/></name><operator pos:line="10" pos:column="27">-&gt;<pos:position pos:line="10" pos:column="32"/></operator><name pos:line="10" pos:column="29">shallow<pos:position pos:line="10" pos:column="36"/></name><operator pos:line="10" pos:column="36">-&gt;<pos:position pos:line="10" pos:column="41"/></operator><name pos:line="10" pos:column="38">nr<pos:position pos:line="10" pos:column="40"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="42">sizeof<argument_list pos:line="10" pos:column="48">(<argument><expr><operator pos:line="10" pos:column="49">*<pos:position pos:line="10" pos:column="50"/></operator><name><name pos:line="10" pos:column="50">si<pos:position pos:line="10" pos:column="52"/></name><operator pos:line="10" pos:column="52">-&gt;<pos:position pos:line="10" pos:column="57"/></operator><name pos:line="10" pos:column="54">need_reachability_test<pos:position pos:line="10" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="77"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="79"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="11" pos:column="9">si<pos:position pos:line="11" pos:column="11"/></name><operator pos:line="11" pos:column="11">-&gt;<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="13">reachable<pos:position pos:line="11" pos:column="22"/></name></name> <operator pos:line="11" pos:column="23">=<pos:position pos:line="11" pos:column="24"/></operator>
		<call><name pos:line="12" pos:column="17">xcalloc<pos:position pos:line="12" pos:column="24"/></name><argument_list pos:line="12" pos:column="24">(<argument><expr><name><name pos:line="12" pos:column="25">si<pos:position pos:line="12" pos:column="27"/></name><operator pos:line="12" pos:column="27">-&gt;<pos:position pos:line="12" pos:column="32"/></operator><name pos:line="12" pos:column="29">shallow<pos:position pos:line="12" pos:column="36"/></name><operator pos:line="12" pos:column="36">-&gt;<pos:position pos:line="12" pos:column="41"/></operator><name pos:line="12" pos:column="38">nr<pos:position pos:line="12" pos:column="40"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="42">sizeof<argument_list pos:line="12" pos:column="48">(<argument><expr><operator pos:line="12" pos:column="49">*<pos:position pos:line="12" pos:column="50"/></operator><name><name pos:line="12" pos:column="50">si<pos:position pos:line="12" pos:column="52"/></name><operator pos:line="12" pos:column="52">-&gt;<pos:position pos:line="12" pos:column="57"/></operator><name pos:line="12" pos:column="54">reachable<pos:position pos:line="12" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="66"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="13" pos:column="9">si<pos:position pos:line="13" pos:column="11"/></name><operator pos:line="13" pos:column="11">-&gt;<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="13">shallow_ref<pos:position pos:line="13" pos:column="24"/></name></name> <operator pos:line="13" pos:column="25">=<pos:position pos:line="13" pos:column="26"/></operator> <call><name pos:line="13" pos:column="27">xcalloc<pos:position pos:line="13" pos:column="34"/></name><argument_list pos:line="13" pos:column="34">(<argument><expr><name><name pos:line="13" pos:column="35">si<pos:position pos:line="13" pos:column="37"/></name><operator pos:line="13" pos:column="37">-&gt;<pos:position pos:line="13" pos:column="42"/></operator><name pos:line="13" pos:column="39">ref<pos:position pos:line="13" pos:column="42"/></name><operator pos:line="13" pos:column="42">-&gt;<pos:position pos:line="13" pos:column="47"/></operator><name pos:line="13" pos:column="44">nr<pos:position pos:line="13" pos:column="46"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="48">sizeof<argument_list pos:line="13" pos:column="54">(<argument><expr><operator pos:line="13" pos:column="55">*<pos:position pos:line="13" pos:column="56"/></operator><name><name pos:line="13" pos:column="56">si<pos:position pos:line="13" pos:column="58"/></name><operator pos:line="13" pos:column="58">-&gt;<pos:position pos:line="13" pos:column="63"/></operator><name pos:line="13" pos:column="60">shallow_ref<pos:position pos:line="13" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="74"/></expr_stmt>

	<for pos:line="15" pos:column="9">for <control pos:line="15" pos:column="13">(<init><expr><name pos:line="15" pos:column="14">i<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <literal type="number" pos:line="15" pos:column="18">0<pos:position pos:line="15" pos:column="19"/></literal></expr>;<pos:position pos:line="15" pos:column="20"/></init> <condition><expr><name pos:line="15" pos:column="21">i<pos:position pos:line="15" pos:column="22"/></name> <operator pos:line="15" pos:column="23">&lt;<pos:position pos:line="15" pos:column="27"/></operator> <name><name pos:line="15" pos:column="25">si<pos:position pos:line="15" pos:column="27"/></name><operator pos:line="15" pos:column="27">-&gt;<pos:position pos:line="15" pos:column="32"/></operator><name pos:line="15" pos:column="29">nr_ours<pos:position pos:line="15" pos:column="36"/></name></name></expr>;<pos:position pos:line="15" pos:column="37"/></condition> <incr><expr><name pos:line="15" pos:column="38">i<pos:position pos:line="15" pos:column="39"/></name><operator pos:line="15" pos:column="39">++<pos:position pos:line="15" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="15" pos:column="42"/></control>
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="16" pos:column="17">si<pos:position pos:line="16" pos:column="19"/></name><operator pos:line="16" pos:column="19">-&gt;<pos:position pos:line="16" pos:column="24"/></operator><name pos:line="16" pos:column="21">need_reachability_test<pos:position pos:line="16" pos:column="43"/></name><index pos:line="16" pos:column="43">[<expr><name><name pos:line="16" pos:column="44">si<pos:position pos:line="16" pos:column="46"/></name><operator pos:line="16" pos:column="46">-&gt;<pos:position pos:line="16" pos:column="51"/></operator><name pos:line="16" pos:column="48">ours<pos:position pos:line="16" pos:column="52"/></name><index pos:line="16" pos:column="52">[<expr><name pos:line="16" pos:column="53">i<pos:position pos:line="16" pos:column="54"/></name></expr>]<pos:position pos:line="16" pos:column="55"/></index></name></expr>]<pos:position pos:line="16" pos:column="56"/></index></name> <operator pos:line="16" pos:column="57">=<pos:position pos:line="16" pos:column="58"/></operator> <literal type="number" pos:line="16" pos:column="59">1<pos:position pos:line="16" pos:column="60"/></literal></expr>;<pos:position pos:line="16" pos:column="61"/></expr_stmt></block></for>

	<for pos:line="18" pos:column="9">for <control pos:line="18" pos:column="13">(<init><expr><name pos:line="18" pos:column="14">i<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">=<pos:position pos:line="18" pos:column="17"/></operator> <literal type="number" pos:line="18" pos:column="18">0<pos:position pos:line="18" pos:column="19"/></literal></expr>;<pos:position pos:line="18" pos:column="20"/></init> <condition><expr><name pos:line="18" pos:column="21">i<pos:position pos:line="18" pos:column="22"/></name> <operator pos:line="18" pos:column="23">&lt;<pos:position pos:line="18" pos:column="27"/></operator> <name><name pos:line="18" pos:column="25">si<pos:position pos:line="18" pos:column="27"/></name><operator pos:line="18" pos:column="27">-&gt;<pos:position pos:line="18" pos:column="32"/></operator><name pos:line="18" pos:column="29">shallow<pos:position pos:line="18" pos:column="36"/></name><operator pos:line="18" pos:column="36">-&gt;<pos:position pos:line="18" pos:column="41"/></operator><name pos:line="18" pos:column="38">nr<pos:position pos:line="18" pos:column="40"/></name></name></expr>;<pos:position pos:line="18" pos:column="41"/></condition> <incr><expr><name pos:line="18" pos:column="42">i<pos:position pos:line="18" pos:column="43"/></name><operator pos:line="18" pos:column="43">++<pos:position pos:line="18" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="18" pos:column="46"/></control> <block pos:line="18" pos:column="47">{
		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><operator pos:line="19" pos:column="21">!<pos:position pos:line="19" pos:column="22"/></operator><name><name pos:line="19" pos:column="22">si<pos:position pos:line="19" pos:column="24"/></name><operator pos:line="19" pos:column="24">-&gt;<pos:position pos:line="19" pos:column="29"/></operator><name pos:line="19" pos:column="26">used_shallow<pos:position pos:line="19" pos:column="38"/></name><index pos:line="19" pos:column="38">[<expr><name pos:line="19" pos:column="39">i<pos:position pos:line="19" pos:column="40"/></name></expr>]<pos:position pos:line="19" pos:column="41"/></index></name></expr>)<pos:position pos:line="19" pos:column="42"/></condition><then pos:line="19" pos:column="42">
			<block type="pseudo"><continue pos:line="20" pos:column="25">continue;<pos:position pos:line="20" pos:column="34"/></continue></block></then></if>
		<for pos:line="21" pos:column="17">for <control pos:line="21" pos:column="21">(<init><expr><name pos:line="21" pos:column="22">j<pos:position pos:line="21" pos:column="23"/></name> <operator pos:line="21" pos:column="24">=<pos:position pos:line="21" pos:column="25"/></operator> <literal type="number" pos:line="21" pos:column="26">0<pos:position pos:line="21" pos:column="27"/></literal></expr>;<pos:position pos:line="21" pos:column="28"/></init> <condition><expr><name pos:line="21" pos:column="29">j<pos:position pos:line="21" pos:column="30"/></name> <operator pos:line="21" pos:column="31">&lt;<pos:position pos:line="21" pos:column="35"/></operator> <name pos:line="21" pos:column="33">bitmap_size<pos:position pos:line="21" pos:column="44"/></name></expr>;<pos:position pos:line="21" pos:column="45"/></condition> <incr><expr><name pos:line="21" pos:column="46">j<pos:position pos:line="21" pos:column="47"/></name><operator pos:line="21" pos:column="47">++<pos:position pos:line="21" pos:column="49"/></operator></expr></incr>)<pos:position pos:line="21" pos:column="50"/></control> <block pos:line="21" pos:column="51">{
			<if pos:line="22" pos:column="25">if <condition pos:line="22" pos:column="28">(<expr><operator pos:line="22" pos:column="29">!<pos:position pos:line="22" pos:column="30"/></operator><name><name pos:line="22" pos:column="30">si<pos:position pos:line="22" pos:column="32"/></name><operator pos:line="22" pos:column="32">-&gt;<pos:position pos:line="22" pos:column="37"/></operator><name pos:line="22" pos:column="34">used_shallow<pos:position pos:line="22" pos:column="46"/></name><index pos:line="22" pos:column="46">[<expr><name pos:line="22" pos:column="47">i<pos:position pos:line="22" pos:column="48"/></name></expr>]<pos:position pos:line="22" pos:column="49"/></index><index pos:line="22" pos:column="49">[<expr><name pos:line="22" pos:column="50">j<pos:position pos:line="22" pos:column="51"/></name></expr>]<pos:position pos:line="22" pos:column="52"/></index></name></expr>)<pos:position pos:line="22" pos:column="53"/></condition><then pos:line="22" pos:column="53">
				<block type="pseudo"><continue pos:line="23" pos:column="33">continue;<pos:position pos:line="23" pos:column="42"/></continue></block></then></if>
			<expr_stmt><expr><name><name pos:line="24" pos:column="25">si<pos:position pos:line="24" pos:column="27"/></name><operator pos:line="24" pos:column="27">-&gt;<pos:position pos:line="24" pos:column="32"/></operator><name pos:line="24" pos:column="29">need_reachability_test<pos:position pos:line="24" pos:column="51"/></name><index pos:line="24" pos:column="51">[<expr><name pos:line="24" pos:column="52">i<pos:position pos:line="24" pos:column="53"/></name></expr>]<pos:position pos:line="24" pos:column="54"/></index></name><operator pos:line="24" pos:column="54">++<pos:position pos:line="24" pos:column="56"/></operator></expr>;<pos:position pos:line="24" pos:column="57"/></expr_stmt>
			<for pos:line="25" pos:column="25">for <control pos:line="25" pos:column="29">(<init><expr><name pos:line="25" pos:column="30">k<pos:position pos:line="25" pos:column="31"/></name> <operator pos:line="25" pos:column="32">=<pos:position pos:line="25" pos:column="33"/></operator> <literal type="number" pos:line="25" pos:column="34">0<pos:position pos:line="25" pos:column="35"/></literal></expr>;<pos:position pos:line="25" pos:column="36"/></init> <condition><expr><name pos:line="25" pos:column="37">k<pos:position pos:line="25" pos:column="38"/></name> <operator pos:line="25" pos:column="39">&lt;<pos:position pos:line="25" pos:column="43"/></operator> <literal type="number" pos:line="25" pos:column="41">32<pos:position pos:line="25" pos:column="43"/></literal></expr>;<pos:position pos:line="25" pos:column="44"/></condition> <incr><expr><name pos:line="25" pos:column="45">k<pos:position pos:line="25" pos:column="46"/></name><operator pos:line="25" pos:column="46">++<pos:position pos:line="25" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="25" pos:column="49"/></control>
				<block type="pseudo"><if pos:line="26" pos:column="33">if <condition pos:line="26" pos:column="36">(<expr><name><name pos:line="26" pos:column="37">si<pos:position pos:line="26" pos:column="39"/></name><operator pos:line="26" pos:column="39">-&gt;<pos:position pos:line="26" pos:column="44"/></operator><name pos:line="26" pos:column="41">used_shallow<pos:position pos:line="26" pos:column="53"/></name><index pos:line="26" pos:column="53">[<expr><name pos:line="26" pos:column="54">i<pos:position pos:line="26" pos:column="55"/></name></expr>]<pos:position pos:line="26" pos:column="56"/></index><index pos:line="26" pos:column="56">[<expr><name pos:line="26" pos:column="57">j<pos:position pos:line="26" pos:column="58"/></name></expr>]<pos:position pos:line="26" pos:column="59"/></index></name> <operator pos:line="26" pos:column="60">&amp;<pos:position pos:line="26" pos:column="65"/></operator> <operator pos:line="26" pos:column="62">(<pos:position pos:line="26" pos:column="63"/></operator><literal type="number" pos:line="26" pos:column="63">1U<pos:position pos:line="26" pos:column="65"/></literal> <operator pos:line="26" pos:column="66">&lt;&lt;<pos:position pos:line="26" pos:column="74"/></operator> <name pos:line="26" pos:column="69">k<pos:position pos:line="26" pos:column="70"/></name><operator pos:line="26" pos:column="70">)<pos:position pos:line="26" pos:column="71"/></operator></expr>)<pos:position pos:line="26" pos:column="72"/></condition><then pos:line="26" pos:column="72">
					<block type="pseudo"><expr_stmt><expr><name><name pos:line="27" pos:column="41">si<pos:position pos:line="27" pos:column="43"/></name><operator pos:line="27" pos:column="43">-&gt;<pos:position pos:line="27" pos:column="48"/></operator><name pos:line="27" pos:column="45">shallow_ref<pos:position pos:line="27" pos:column="56"/></name><index pos:line="27" pos:column="56">[<expr><name pos:line="27" pos:column="57">j<pos:position pos:line="27" pos:column="58"/></name> <operator pos:line="27" pos:column="59">*<pos:position pos:line="27" pos:column="60"/></operator> <literal type="number" pos:line="27" pos:column="61">32<pos:position pos:line="27" pos:column="63"/></literal> <operator pos:line="27" pos:column="64">+<pos:position pos:line="27" pos:column="65"/></operator> <name pos:line="27" pos:column="66">k<pos:position pos:line="27" pos:column="67"/></name></expr>]<pos:position pos:line="27" pos:column="68"/></index></name><operator pos:line="27" pos:column="68">++<pos:position pos:line="27" pos:column="70"/></operator></expr>;<pos:position pos:line="27" pos:column="71"/></expr_stmt></block></then></if></block></for>
		}<pos:position pos:line="28" pos:column="18"/></block></for>

		<comment type="block" pos:line="30" pos:column="17">/*
		 * true for those associated with some refs and belong
		 * in "ours" list aka "step 7 not done yet"
		 */</comment>
		<expr_stmt><expr><name><name pos:line="34" pos:column="17">si<pos:position pos:line="34" pos:column="19"/></name><operator pos:line="34" pos:column="19">-&gt;<pos:position pos:line="34" pos:column="24"/></operator><name pos:line="34" pos:column="21">need_reachability_test<pos:position pos:line="34" pos:column="43"/></name><index pos:line="34" pos:column="43">[<expr><name pos:line="34" pos:column="44">i<pos:position pos:line="34" pos:column="45"/></name></expr>]<pos:position pos:line="34" pos:column="46"/></index></name> <operator pos:line="34" pos:column="47">=<pos:position pos:line="34" pos:column="48"/></operator>
			<name><name pos:line="35" pos:column="25">si<pos:position pos:line="35" pos:column="27"/></name><operator pos:line="35" pos:column="27">-&gt;<pos:position pos:line="35" pos:column="32"/></operator><name pos:line="35" pos:column="29">need_reachability_test<pos:position pos:line="35" pos:column="51"/></name><index pos:line="35" pos:column="51">[<expr><name pos:line="35" pos:column="52">i<pos:position pos:line="35" pos:column="53"/></name></expr>]<pos:position pos:line="35" pos:column="54"/></index></name> <operator pos:line="35" pos:column="55">&gt;<pos:position pos:line="35" pos:column="59"/></operator> <literal type="number" pos:line="35" pos:column="57">1<pos:position pos:line="35" pos:column="58"/></literal></expr>;<pos:position pos:line="35" pos:column="59"/></expr_stmt>
	}<pos:position pos:line="36" pos:column="10"/></block></for>

	<comment type="block" pos:line="38" pos:column="9">/*
	 * keep hooks happy by forcing a temporary shallow file via
	 * env variable because we can't add --shallow-file to every
	 * command. check_everything_connected() will be done with
	 * true .git/shallow though.
	 */</comment>
	<expr_stmt><expr><call><name pos:line="44" pos:column="9">setenv<pos:position pos:line="44" pos:column="15"/></name><argument_list pos:line="44" pos:column="15">(<argument><expr><name pos:line="44" pos:column="16">GIT_SHALLOW_FILE_ENVIRONMENT<pos:position pos:line="44" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="46">alt_shallow_file<pos:position pos:line="44" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="64">1<pos:position pos:line="44" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="67"/></expr_stmt>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6397_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">packed_ref_cache<pos:position pos:line="1" pos:column="31"/></name></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">get_packed_ref_cache<pos:position pos:line="1" pos:column="53"/></name><parameter_list pos:line="1" pos:column="53">(<parameter><decl><type><name><name pos:line="1" pos:column="54">struct<pos:position pos:line="1" pos:column="60"/></name> <name pos:line="1" pos:column="61">files_ref_store<pos:position pos:line="1" pos:column="76"/></name></name> <modifier pos:line="1" pos:column="77">*<pos:position pos:line="1" pos:column="78"/></modifier></type><name pos:line="1" pos:column="78">refs<pos:position pos:line="1" pos:column="82"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="83"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">packed_refs_file<pos:position pos:line="3" pos:column="37"/></name> <init pos:line="3" pos:column="38">= <expr><call><name pos:line="3" pos:column="40">files_packed_refs_path<pos:position pos:line="3" pos:column="62"/></name><argument_list pos:line="3" pos:column="62">(<argument><expr><name pos:line="3" pos:column="63">refs<pos:position pos:line="3" pos:column="67"/></name></expr></argument>)<pos:position pos:line="3" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="69"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><call><name pos:line="5" pos:column="14">is_lock_file_locked<pos:position pos:line="5" pos:column="33"/></name><argument_list pos:line="5" pos:column="33">(<argument><expr><operator pos:line="5" pos:column="34">&amp;<pos:position pos:line="5" pos:column="39"/></operator><name><name pos:line="5" pos:column="35">refs<pos:position pos:line="5" pos:column="39"/></name><operator pos:line="5" pos:column="39">-&gt;<pos:position pos:line="5" pos:column="44"/></operator><name pos:line="5" pos:column="41">packed_refs_lock<pos:position pos:line="5" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="59"/></condition><then pos:line="5" pos:column="59">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="17">validate_packed_ref_cache<pos:position pos:line="6" pos:column="42"/></name><argument_list pos:line="6" pos:column="42">(<argument><expr><name pos:line="6" pos:column="43">refs<pos:position pos:line="6" pos:column="47"/></name></expr></argument>)<pos:position pos:line="6" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="49"/></expr_stmt></block></then></if>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">!<pos:position pos:line="8" pos:column="14"/></operator><name><name pos:line="8" pos:column="14">refs<pos:position pos:line="8" pos:column="18"/></name><operator pos:line="8" pos:column="18">-&gt;<pos:position pos:line="8" pos:column="23"/></operator><name pos:line="8" pos:column="20">packed<pos:position pos:line="8" pos:column="26"/></name></name></expr>)<pos:position pos:line="8" pos:column="27"/></condition><then pos:line="8" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="9" pos:column="17">refs<pos:position pos:line="9" pos:column="21"/></name><operator pos:line="9" pos:column="21">-&gt;<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="23">packed<pos:position pos:line="9" pos:column="29"/></name></name> <operator pos:line="9" pos:column="30">=<pos:position pos:line="9" pos:column="31"/></operator> <call><name pos:line="9" pos:column="32">read_packed_refs<pos:position pos:line="9" pos:column="48"/></name><argument_list pos:line="9" pos:column="48">(<argument><expr><name pos:line="9" pos:column="49">packed_refs_file<pos:position pos:line="9" pos:column="65"/></name></expr></argument>)<pos:position pos:line="9" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="67"/></expr_stmt></block></then></if>

	<return pos:line="11" pos:column="9">return <expr><name><name pos:line="11" pos:column="16">refs<pos:position pos:line="11" pos:column="20"/></name><operator pos:line="11" pos:column="20">-&gt;<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="22">packed<pos:position pos:line="11" pos:column="28"/></name></name></expr>;<pos:position pos:line="11" pos:column="29"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6659_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">detect_msys_tty<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">int<pos:position pos:line="1" pos:column="32"/></name></type> <name pos:line="1" pos:column="33">fd<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="36"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">ULONG<pos:position pos:line="3" pos:column="14"/></name></type> <name pos:line="3" pos:column="15">result<pos:position pos:line="3" pos:column="21"/></name></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">BYTE<pos:position pos:line="4" pos:column="13"/></name></type> <name><name pos:line="4" pos:column="14">buffer<pos:position pos:line="4" pos:column="20"/></name><index pos:line="4" pos:column="20">[<expr><literal type="number" pos:line="4" pos:column="21">1024<pos:position pos:line="4" pos:column="25"/></literal></expr>]<pos:position pos:line="4" pos:column="26"/></index></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">POBJECT_NAME_INFORMATION<pos:position pos:line="5" pos:column="33"/></name></type> <name pos:line="5" pos:column="34">nameinfo<pos:position pos:line="5" pos:column="42"/></name> <init pos:line="5" pos:column="43">= <expr><operator pos:line="5" pos:column="45">(<pos:position pos:line="5" pos:column="46"/></operator><name pos:line="5" pos:column="46">POBJECT_NAME_INFORMATION<pos:position pos:line="5" pos:column="70"/></name><operator pos:line="5" pos:column="70">)<pos:position pos:line="5" pos:column="71"/></operator> <name pos:line="5" pos:column="72">buffer<pos:position pos:line="5" pos:column="78"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="79"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">PWSTR<pos:position pos:line="6" pos:column="14"/></name></type> <name pos:line="6" pos:column="15">name<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>

	<comment type="block" pos:line="8" pos:column="9">/* check if fd is a pipe */</comment>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">HANDLE<pos:position pos:line="9" pos:column="15"/></name></type> <name pos:line="9" pos:column="16">h<pos:position pos:line="9" pos:column="17"/></name> <init pos:line="9" pos:column="18">= <expr><operator pos:line="9" pos:column="20">(<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="21">HANDLE<pos:position pos:line="9" pos:column="27"/></name><operator pos:line="9" pos:column="27">)<pos:position pos:line="9" pos:column="28"/></operator> <call><name pos:line="9" pos:column="29">_get_osfhandle<pos:position pos:line="9" pos:column="43"/></name><argument_list pos:line="9" pos:column="43">(<argument><expr><name pos:line="9" pos:column="44">fd<pos:position pos:line="9" pos:column="46"/></name></expr></argument>)<pos:position pos:line="9" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="48"/></decl_stmt>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><call><name pos:line="10" pos:column="13">GetFileType<pos:position pos:line="10" pos:column="24"/></name><argument_list pos:line="10" pos:column="24">(<argument><expr><name pos:line="10" pos:column="25">h<pos:position pos:line="10" pos:column="26"/></name></expr></argument>)<pos:position pos:line="10" pos:column="27"/></argument_list></call> <operator pos:line="10" pos:column="28">!=<pos:position pos:line="10" pos:column="30"/></operator> <name pos:line="10" pos:column="31">FILE_TYPE_PIPE<pos:position pos:line="10" pos:column="45"/></name></expr>)<pos:position pos:line="10" pos:column="46"/></condition><then pos:line="10" pos:column="46">
		<block type="pseudo"><return pos:line="11" pos:column="17">return;<pos:position pos:line="11" pos:column="24"/></return></block></then></if>

	<comment type="block" pos:line="13" pos:column="9">/* get pipe name */</comment>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">!<pos:position pos:line="14" pos:column="14"/></operator><call><name pos:line="14" pos:column="14">NT_SUCCESS<pos:position pos:line="14" pos:column="24"/></name><argument_list pos:line="14" pos:column="24">(<argument><expr><call><name pos:line="14" pos:column="25">NtQueryObject<pos:position pos:line="14" pos:column="38"/></name><argument_list pos:line="14" pos:column="38">(<argument><expr><name pos:line="14" pos:column="39">h<pos:position pos:line="14" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="42">ObjectNameInformation<pos:position pos:line="14" pos:column="63"/></name></expr></argument>,
			<argument><expr><name pos:line="15" pos:column="25">buffer<pos:position pos:line="15" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="33">sizeof<argument_list pos:line="15" pos:column="39">(<argument><expr><name pos:line="15" pos:column="40">buffer<pos:position pos:line="15" pos:column="46"/></name></expr></argument>)<pos:position pos:line="15" pos:column="47"/></argument_list></sizeof> <operator pos:line="15" pos:column="48">-<pos:position pos:line="15" pos:column="49"/></operator> <literal type="number" pos:line="15" pos:column="50">2<pos:position pos:line="15" pos:column="51"/></literal></expr></argument>, <argument><expr><operator pos:line="15" pos:column="53">&amp;<pos:position pos:line="15" pos:column="58"/></operator><name pos:line="15" pos:column="54">result<pos:position pos:line="15" pos:column="60"/></name></expr></argument>)<pos:position pos:line="15" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="63"/></condition><then pos:line="15" pos:column="63">
		<block type="pseudo"><return pos:line="16" pos:column="17">return;<pos:position pos:line="16" pos:column="24"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="17" pos:column="9">name<pos:position pos:line="17" pos:column="13"/></name> <operator pos:line="17" pos:column="14">=<pos:position pos:line="17" pos:column="15"/></operator> <name><name pos:line="17" pos:column="16">nameinfo<pos:position pos:line="17" pos:column="24"/></name><operator pos:line="17" pos:column="24">-&gt;<pos:position pos:line="17" pos:column="29"/></operator><name pos:line="17" pos:column="26">Name<pos:position pos:line="17" pos:column="30"/></name><operator pos:line="17" pos:column="30">.<pos:position pos:line="17" pos:column="31"/></operator><name pos:line="17" pos:column="31">Buffer<pos:position pos:line="17" pos:column="37"/></name></name></expr>;<pos:position pos:line="17" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="18" pos:column="9">name<pos:position pos:line="18" pos:column="13"/></name><index pos:line="18" pos:column="13">[<expr><name><name pos:line="18" pos:column="14">nameinfo<pos:position pos:line="18" pos:column="22"/></name><operator pos:line="18" pos:column="22">-&gt;<pos:position pos:line="18" pos:column="27"/></operator><name pos:line="18" pos:column="24">Name<pos:position pos:line="18" pos:column="28"/></name><operator pos:line="18" pos:column="28">.<pos:position pos:line="18" pos:column="29"/></operator><name pos:line="18" pos:column="29">Length<pos:position pos:line="18" pos:column="35"/></name></name> <operator pos:line="18" pos:column="36">/<pos:position pos:line="18" pos:column="37"/></operator> <sizeof pos:line="18" pos:column="38">sizeof<argument_list pos:line="18" pos:column="44">(<argument><expr><operator pos:line="18" pos:column="45">*<pos:position pos:line="18" pos:column="46"/></operator><name pos:line="18" pos:column="46">name<pos:position pos:line="18" pos:column="50"/></name></expr></argument>)<pos:position pos:line="18" pos:column="51"/></argument_list></sizeof></expr>]<pos:position pos:line="18" pos:column="52"/></index></name> <operator pos:line="18" pos:column="53">=<pos:position pos:line="18" pos:column="54"/></operator> <literal type="number" pos:line="18" pos:column="55">0<pos:position pos:line="18" pos:column="56"/></literal></expr>;<pos:position pos:line="18" pos:column="57"/></expr_stmt>

	<comment type="block" pos:line="20" pos:column="9">/*
	 * Check if this could be a MSYS2 pty pipe ('msys-XXXX-ptyN-XX')
	 * or a cygwin pty pipe ('cygwin-XXXX-ptyN-XX')
	 */</comment>
	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><operator pos:line="24" pos:column="13">(<pos:position pos:line="24" pos:column="14"/></operator><operator pos:line="24" pos:column="14">!<pos:position pos:line="24" pos:column="15"/></operator><call><name pos:line="24" pos:column="15">wcsstr<pos:position pos:line="24" pos:column="21"/></name><argument_list pos:line="24" pos:column="21">(<argument><expr><name pos:line="24" pos:column="22">name<pos:position pos:line="24" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="28">L"msys-"<pos:position pos:line="24" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="37"/></argument_list></call> <operator pos:line="24" pos:column="38">&amp;&amp;<pos:position pos:line="24" pos:column="48"/></operator> <operator pos:line="24" pos:column="41">!<pos:position pos:line="24" pos:column="42"/></operator><call><name pos:line="24" pos:column="42">wcsstr<pos:position pos:line="24" pos:column="48"/></name><argument_list pos:line="24" pos:column="48">(<argument><expr><name pos:line="24" pos:column="49">name<pos:position pos:line="24" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="55">L"cygwin-"<pos:position pos:line="24" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="66"/></argument_list></call><operator pos:line="24" pos:column="66">)<pos:position pos:line="24" pos:column="67"/></operator> <operator pos:line="24" pos:column="68">||<pos:position pos:line="24" pos:column="70"/></operator>
			<operator pos:line="25" pos:column="25">!<pos:position pos:line="25" pos:column="26"/></operator><call><name pos:line="25" pos:column="26">wcsstr<pos:position pos:line="25" pos:column="32"/></name><argument_list pos:line="25" pos:column="32">(<argument><expr><name pos:line="25" pos:column="33">name<pos:position pos:line="25" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="39">L"-pty"<pos:position pos:line="25" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="48"/></condition><then pos:line="25" pos:column="48">
		<block type="pseudo"><return pos:line="26" pos:column="17">return;<pos:position pos:line="26" pos:column="24"/></return></block></then></if>

	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name pos:line="28" pos:column="13">fd<pos:position pos:line="28" pos:column="15"/></name> <operator pos:line="28" pos:column="16">==<pos:position pos:line="28" pos:column="18"/></operator> <literal type="number" pos:line="28" pos:column="19">2<pos:position pos:line="28" pos:column="20"/></literal></expr>)<pos:position pos:line="28" pos:column="21"/></condition><then pos:line="28" pos:column="21">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="17">setvbuf<pos:position pos:line="29" pos:column="24"/></name><argument_list pos:line="29" pos:column="24">(<argument><expr><name pos:line="29" pos:column="25">stderr<pos:position pos:line="29" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="33">NULL<pos:position pos:line="29" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="39">_IONBF<pos:position pos:line="29" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="47">BUFSIZ<pos:position pos:line="29" pos:column="53"/></name></expr></argument>)<pos:position pos:line="29" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="55"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name><name pos:line="30" pos:column="9">fd_is_interactive<pos:position pos:line="30" pos:column="26"/></name><index pos:line="30" pos:column="26">[<expr><name pos:line="30" pos:column="27">fd<pos:position pos:line="30" pos:column="29"/></name></expr>]<pos:position pos:line="30" pos:column="30"/></index></name> <operator pos:line="30" pos:column="31">|=<pos:position pos:line="30" pos:column="33"/></operator> <name pos:line="30" pos:column="34">FD_MSYS<pos:position pos:line="30" pos:column="41"/></name></expr>;<pos:position pos:line="30" pos:column="42"/></expr_stmt>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3419_git-2.10.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_main<pos:position pos:line="1" pos:column="13"/></name><parameter_list pos:line="1" pos:column="13">(<parameter><decl><type><name pos:line="1" pos:column="14">int<pos:position pos:line="1" pos:column="17"/></name></type> <name pos:line="1" pos:column="18">argc<pos:position pos:line="1" pos:column="22"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier><modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">argv<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">transfer_request<pos:position pos:line="3" pos:column="32"/></name></name> <modifier pos:line="3" pos:column="33">*<pos:position pos:line="3" pos:column="34"/></modifier></type><name pos:line="3" pos:column="34">request<pos:position pos:line="3" pos:column="41"/></name></decl>;<pos:position pos:line="3" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">transfer_request<pos:position pos:line="4" pos:column="32"/></name></name> <modifier pos:line="4" pos:column="33">*<pos:position pos:line="4" pos:column="34"/></modifier></type><name pos:line="4" pos:column="34">next_request<pos:position pos:line="4" pos:column="46"/></name></decl>;<pos:position pos:line="4" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">nr_refspec<pos:position pos:line="5" pos:column="23"/></name> <init pos:line="5" pos:column="24">= <expr><literal type="number" pos:line="5" pos:column="26">0<pos:position pos:line="5" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier><modifier pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></modifier></type><name pos:line="6" pos:column="22">refspec<pos:position pos:line="6" pos:column="29"/></name> <init pos:line="6" pos:column="30">= <expr><name pos:line="6" pos:column="32">NULL<pos:position pos:line="6" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">remote_lock<pos:position pos:line="7" pos:column="27"/></name></name> <modifier pos:line="7" pos:column="28">*<pos:position pos:line="7" pos:column="29"/></modifier></type><name pos:line="7" pos:column="29">ref_lock<pos:position pos:line="7" pos:column="37"/></name> <init pos:line="7" pos:column="38">= <expr><name pos:line="7" pos:column="40">NULL<pos:position pos:line="7" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="45"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">remote_lock<pos:position pos:line="8" pos:column="27"/></name></name> <modifier pos:line="8" pos:column="28">*<pos:position pos:line="8" pos:column="29"/></modifier></type><name pos:line="8" pos:column="29">info_ref_lock<pos:position pos:line="8" pos:column="42"/></name> <init pos:line="8" pos:column="43">= <expr><name pos:line="8" pos:column="45">NULL<pos:position pos:line="8" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="50"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">rev_info<pos:position pos:line="9" pos:column="24"/></name></name></type> <name pos:line="9" pos:column="25">revs<pos:position pos:line="9" pos:column="29"/></name></decl>;<pos:position pos:line="9" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">delete_branch<pos:position pos:line="10" pos:column="26"/></name> <init pos:line="10" pos:column="27">= <expr><literal type="number" pos:line="10" pos:column="29">0<pos:position pos:line="10" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">int<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">force_delete<pos:position pos:line="11" pos:column="25"/></name> <init pos:line="11" pos:column="26">= <expr><literal type="number" pos:line="11" pos:column="28">0<pos:position pos:line="11" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">int<pos:position pos:line="12" pos:column="12"/></name></type> <name pos:line="12" pos:column="13">objects_to_send<pos:position pos:line="12" pos:column="28"/></name></decl>;<pos:position pos:line="12" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="13" pos:column="9">int<pos:position pos:line="13" pos:column="12"/></name></type> <name pos:line="13" pos:column="13">rc<pos:position pos:line="13" pos:column="15"/></name> <init pos:line="13" pos:column="16">= <expr><literal type="number" pos:line="13" pos:column="18">0<pos:position pos:line="13" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="14" pos:column="9">int<pos:position pos:line="14" pos:column="12"/></name></type> <name pos:line="14" pos:column="13">i<pos:position pos:line="14" pos:column="14"/></name></decl>;<pos:position pos:line="14" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="15" pos:column="9">int<pos:position pos:line="15" pos:column="12"/></name></type> <name pos:line="15" pos:column="13">new_refs<pos:position pos:line="15" pos:column="21"/></name></decl>;<pos:position pos:line="15" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="16" pos:column="9">struct<pos:position pos:line="16" pos:column="15"/></name> <name pos:line="16" pos:column="16">ref<pos:position pos:line="16" pos:column="19"/></name></name> <modifier pos:line="16" pos:column="20">*<pos:position pos:line="16" pos:column="21"/></modifier></type><name pos:line="16" pos:column="21">ref<pos:position pos:line="16" pos:column="24"/></name></decl>, <modifier pos:line="16" pos:column="26">*<pos:position pos:line="16" pos:column="27"/></modifier><decl><type ref="prev"/><name pos:line="16" pos:column="27">local_refs<pos:position pos:line="16" pos:column="37"/></name></decl>;<pos:position pos:line="16" pos:column="38"/></decl_stmt>

	<expr_stmt><expr><name pos:line="18" pos:column="9">repo<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">=<pos:position pos:line="18" pos:column="15"/></operator> <call><name pos:line="18" pos:column="16">xcalloc<pos:position pos:line="18" pos:column="23"/></name><argument_list pos:line="18" pos:column="23">(<argument><expr><literal type="number" pos:line="18" pos:column="24">1<pos:position pos:line="18" pos:column="25"/></literal></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="27">sizeof<argument_list pos:line="18" pos:column="33">(<argument><expr><operator pos:line="18" pos:column="34">*<pos:position pos:line="18" pos:column="35"/></operator><name pos:line="18" pos:column="35">repo<pos:position pos:line="18" pos:column="39"/></name></expr></argument>)<pos:position pos:line="18" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="18" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="42"/></expr_stmt>

	<expr_stmt><expr><name pos:line="20" pos:column="9">argv<pos:position pos:line="20" pos:column="13"/></name><operator pos:line="20" pos:column="13">++<pos:position pos:line="20" pos:column="15"/></operator></expr>;<pos:position pos:line="20" pos:column="16"/></expr_stmt>
	<for pos:line="21" pos:column="9">for <control pos:line="21" pos:column="13">(<init><expr><name pos:line="21" pos:column="14">i<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <literal type="number" pos:line="21" pos:column="18">1<pos:position pos:line="21" pos:column="19"/></literal></expr>;<pos:position pos:line="21" pos:column="20"/></init> <condition><expr><name pos:line="21" pos:column="21">i<pos:position pos:line="21" pos:column="22"/></name> <operator pos:line="21" pos:column="23">&lt;<pos:position pos:line="21" pos:column="27"/></operator> <name pos:line="21" pos:column="25">argc<pos:position pos:line="21" pos:column="29"/></name></expr>;<pos:position pos:line="21" pos:column="30"/></condition> <incr><expr><name pos:line="21" pos:column="31">i<pos:position pos:line="21" pos:column="32"/></name><operator pos:line="21" pos:column="32">++<pos:position pos:line="21" pos:column="34"/></operator></expr><operator pos:line="21" pos:column="34">,<pos:position pos:line="21" pos:column="35"/></operator> <expr><name pos:line="21" pos:column="36">argv<pos:position pos:line="21" pos:column="40"/></name><operator pos:line="21" pos:column="40">++<pos:position pos:line="21" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="21" pos:column="43"/></control> <block pos:line="21" pos:column="44">{
		<decl_stmt><decl><type><specifier pos:line="22" pos:column="17">const<pos:position pos:line="22" pos:column="22"/></specifier> <name pos:line="22" pos:column="23">char<pos:position pos:line="22" pos:column="27"/></name> <modifier pos:line="22" pos:column="28">*<pos:position pos:line="22" pos:column="29"/></modifier></type><name pos:line="22" pos:column="29">arg<pos:position pos:line="22" pos:column="32"/></name> <init pos:line="22" pos:column="33">= <expr><operator pos:line="22" pos:column="35">*<pos:position pos:line="22" pos:column="36"/></operator><name pos:line="22" pos:column="36">argv<pos:position pos:line="22" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="22" pos:column="41"/></decl_stmt>

		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><operator pos:line="24" pos:column="21">*<pos:position pos:line="24" pos:column="22"/></operator><name pos:line="24" pos:column="22">arg<pos:position pos:line="24" pos:column="25"/></name> <operator pos:line="24" pos:column="26">==<pos:position pos:line="24" pos:column="28"/></operator> <literal type="char" pos:line="24" pos:column="29">'-'<pos:position pos:line="24" pos:column="32"/></literal></expr>)<pos:position pos:line="24" pos:column="33"/></condition><then pos:line="24" pos:column="33"> <block pos:line="24" pos:column="34">{
			<if pos:line="25" pos:column="25">if <condition pos:line="25" pos:column="28">(<expr><operator pos:line="25" pos:column="29">!<pos:position pos:line="25" pos:column="30"/></operator><call><name pos:line="25" pos:column="30">strcmp<pos:position pos:line="25" pos:column="36"/></name><argument_list pos:line="25" pos:column="36">(<argument><expr><name pos:line="25" pos:column="37">arg<pos:position pos:line="25" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="42">"--all"<pos:position pos:line="25" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="51"/></condition><then pos:line="25" pos:column="51"> <block pos:line="25" pos:column="52">{
				<expr_stmt><expr><name pos:line="26" pos:column="33">push_all<pos:position pos:line="26" pos:column="41"/></name> <operator pos:line="26" pos:column="42">=<pos:position pos:line="26" pos:column="43"/></operator> <name pos:line="26" pos:column="44">MATCH_REFS_ALL<pos:position pos:line="26" pos:column="58"/></name></expr>;<pos:position pos:line="26" pos:column="59"/></expr_stmt>
				<continue pos:line="27" pos:column="33">continue;<pos:position pos:line="27" pos:column="42"/></continue>
			}<pos:position pos:line="28" pos:column="26"/></block></then></if>
			<if pos:line="29" pos:column="25">if <condition pos:line="29" pos:column="28">(<expr><operator pos:line="29" pos:column="29">!<pos:position pos:line="29" pos:column="30"/></operator><call><name pos:line="29" pos:column="30">strcmp<pos:position pos:line="29" pos:column="36"/></name><argument_list pos:line="29" pos:column="36">(<argument><expr><name pos:line="29" pos:column="37">arg<pos:position pos:line="29" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="42">"--force"<pos:position pos:line="29" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="53"/></condition><then pos:line="29" pos:column="53"> <block pos:line="29" pos:column="54">{
				<expr_stmt><expr><name pos:line="30" pos:column="33">force_all<pos:position pos:line="30" pos:column="42"/></name> <operator pos:line="30" pos:column="43">=<pos:position pos:line="30" pos:column="44"/></operator> <literal type="number" pos:line="30" pos:column="45">1<pos:position pos:line="30" pos:column="46"/></literal></expr>;<pos:position pos:line="30" pos:column="47"/></expr_stmt>
				<continue pos:line="31" pos:column="33">continue;<pos:position pos:line="31" pos:column="42"/></continue>
			}<pos:position pos:line="32" pos:column="26"/></block></then></if>
			<if pos:line="33" pos:column="25">if <condition pos:line="33" pos:column="28">(<expr><operator pos:line="33" pos:column="29">!<pos:position pos:line="33" pos:column="30"/></operator><call><name pos:line="33" pos:column="30">strcmp<pos:position pos:line="33" pos:column="36"/></name><argument_list pos:line="33" pos:column="36">(<argument><expr><name pos:line="33" pos:column="37">arg<pos:position pos:line="33" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="42">"--dry-run"<pos:position pos:line="33" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="55"/></condition><then pos:line="33" pos:column="55"> <block pos:line="33" pos:column="56">{
				<expr_stmt><expr><name pos:line="34" pos:column="33">dry_run<pos:position pos:line="34" pos:column="40"/></name> <operator pos:line="34" pos:column="41">=<pos:position pos:line="34" pos:column="42"/></operator> <literal type="number" pos:line="34" pos:column="43">1<pos:position pos:line="34" pos:column="44"/></literal></expr>;<pos:position pos:line="34" pos:column="45"/></expr_stmt>
				<continue pos:line="35" pos:column="33">continue;<pos:position pos:line="35" pos:column="42"/></continue>
			}<pos:position pos:line="36" pos:column="26"/></block></then></if>
			<if pos:line="37" pos:column="25">if <condition pos:line="37" pos:column="28">(<expr><operator pos:line="37" pos:column="29">!<pos:position pos:line="37" pos:column="30"/></operator><call><name pos:line="37" pos:column="30">strcmp<pos:position pos:line="37" pos:column="36"/></name><argument_list pos:line="37" pos:column="36">(<argument><expr><name pos:line="37" pos:column="37">arg<pos:position pos:line="37" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="42">"--helper-status"<pos:position pos:line="37" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="61"/></condition><then pos:line="37" pos:column="61"> <block pos:line="37" pos:column="62">{
				<expr_stmt><expr><name pos:line="38" pos:column="33">helper_status<pos:position pos:line="38" pos:column="46"/></name> <operator pos:line="38" pos:column="47">=<pos:position pos:line="38" pos:column="48"/></operator> <literal type="number" pos:line="38" pos:column="49">1<pos:position pos:line="38" pos:column="50"/></literal></expr>;<pos:position pos:line="38" pos:column="51"/></expr_stmt>
				<continue pos:line="39" pos:column="33">continue;<pos:position pos:line="39" pos:column="42"/></continue>
			}<pos:position pos:line="40" pos:column="26"/></block></then></if>
			<if pos:line="41" pos:column="25">if <condition pos:line="41" pos:column="28">(<expr><operator pos:line="41" pos:column="29">!<pos:position pos:line="41" pos:column="30"/></operator><call><name pos:line="41" pos:column="30">strcmp<pos:position pos:line="41" pos:column="36"/></name><argument_list pos:line="41" pos:column="36">(<argument><expr><name pos:line="41" pos:column="37">arg<pos:position pos:line="41" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="42">"--verbose"<pos:position pos:line="41" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="55"/></condition><then pos:line="41" pos:column="55"> <block pos:line="41" pos:column="56">{
				<expr_stmt><expr><name pos:line="42" pos:column="33">push_verbosely<pos:position pos:line="42" pos:column="47"/></name> <operator pos:line="42" pos:column="48">=<pos:position pos:line="42" pos:column="49"/></operator> <literal type="number" pos:line="42" pos:column="50">1<pos:position pos:line="42" pos:column="51"/></literal></expr>;<pos:position pos:line="42" pos:column="52"/></expr_stmt>
				<expr_stmt><expr><name pos:line="43" pos:column="33">http_is_verbose<pos:position pos:line="43" pos:column="48"/></name> <operator pos:line="43" pos:column="49">=<pos:position pos:line="43" pos:column="50"/></operator> <literal type="number" pos:line="43" pos:column="51">1<pos:position pos:line="43" pos:column="52"/></literal></expr>;<pos:position pos:line="43" pos:column="53"/></expr_stmt>
				<continue pos:line="44" pos:column="33">continue;<pos:position pos:line="44" pos:column="42"/></continue>
			}<pos:position pos:line="45" pos:column="26"/></block></then></if>
			<if pos:line="46" pos:column="25">if <condition pos:line="46" pos:column="28">(<expr><operator pos:line="46" pos:column="29">!<pos:position pos:line="46" pos:column="30"/></operator><call><name pos:line="46" pos:column="30">strcmp<pos:position pos:line="46" pos:column="36"/></name><argument_list pos:line="46" pos:column="36">(<argument><expr><name pos:line="46" pos:column="37">arg<pos:position pos:line="46" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="42">"-d"<pos:position pos:line="46" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="48"/></condition><then pos:line="46" pos:column="48"> <block pos:line="46" pos:column="49">{
				<expr_stmt><expr><name pos:line="47" pos:column="33">delete_branch<pos:position pos:line="47" pos:column="46"/></name> <operator pos:line="47" pos:column="47">=<pos:position pos:line="47" pos:column="48"/></operator> <literal type="number" pos:line="47" pos:column="49">1<pos:position pos:line="47" pos:column="50"/></literal></expr>;<pos:position pos:line="47" pos:column="51"/></expr_stmt>
				<continue pos:line="48" pos:column="33">continue;<pos:position pos:line="48" pos:column="42"/></continue>
			}<pos:position pos:line="49" pos:column="26"/></block></then></if>
			<if pos:line="50" pos:column="25">if <condition pos:line="50" pos:column="28">(<expr><operator pos:line="50" pos:column="29">!<pos:position pos:line="50" pos:column="30"/></operator><call><name pos:line="50" pos:column="30">strcmp<pos:position pos:line="50" pos:column="36"/></name><argument_list pos:line="50" pos:column="36">(<argument><expr><name pos:line="50" pos:column="37">arg<pos:position pos:line="50" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="42">"-D"<pos:position pos:line="50" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="50" pos:column="48"/></condition><then pos:line="50" pos:column="48"> <block pos:line="50" pos:column="49">{
				<expr_stmt><expr><name pos:line="51" pos:column="33">delete_branch<pos:position pos:line="51" pos:column="46"/></name> <operator pos:line="51" pos:column="47">=<pos:position pos:line="51" pos:column="48"/></operator> <literal type="number" pos:line="51" pos:column="49">1<pos:position pos:line="51" pos:column="50"/></literal></expr>;<pos:position pos:line="51" pos:column="51"/></expr_stmt>
				<expr_stmt><expr><name pos:line="52" pos:column="33">force_delete<pos:position pos:line="52" pos:column="45"/></name> <operator pos:line="52" pos:column="46">=<pos:position pos:line="52" pos:column="47"/></operator> <literal type="number" pos:line="52" pos:column="48">1<pos:position pos:line="52" pos:column="49"/></literal></expr>;<pos:position pos:line="52" pos:column="50"/></expr_stmt>
				<continue pos:line="53" pos:column="33">continue;<pos:position pos:line="53" pos:column="42"/></continue>
			}<pos:position pos:line="54" pos:column="26"/></block></then></if>
			<if pos:line="55" pos:column="25">if <condition pos:line="55" pos:column="28">(<expr><operator pos:line="55" pos:column="29">!<pos:position pos:line="55" pos:column="30"/></operator><call><name pos:line="55" pos:column="30">strcmp<pos:position pos:line="55" pos:column="36"/></name><argument_list pos:line="55" pos:column="36">(<argument><expr><name pos:line="55" pos:column="37">arg<pos:position pos:line="55" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="42">"-h"<pos:position pos:line="55" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="55" pos:column="48"/></condition><then pos:line="55" pos:column="48">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="56" pos:column="33">usage<pos:position pos:line="56" pos:column="38"/></name><argument_list pos:line="56" pos:column="38">(<argument><expr><name pos:line="56" pos:column="39">http_push_usage<pos:position pos:line="56" pos:column="54"/></name></expr></argument>)<pos:position pos:line="56" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="56"/></expr_stmt></block></then></if>
		}<pos:position pos:line="57" pos:column="18"/></block></then></if>
		<if pos:line="58" pos:column="17">if <condition pos:line="58" pos:column="20">(<expr><operator pos:line="58" pos:column="21">!<pos:position pos:line="58" pos:column="22"/></operator><name><name pos:line="58" pos:column="22">repo<pos:position pos:line="58" pos:column="26"/></name><operator pos:line="58" pos:column="26">-&gt;<pos:position pos:line="58" pos:column="31"/></operator><name pos:line="58" pos:column="28">url<pos:position pos:line="58" pos:column="31"/></name></name></expr>)<pos:position pos:line="58" pos:column="32"/></condition><then pos:line="58" pos:column="32"> <block pos:line="58" pos:column="33">{
			<decl_stmt><decl><type><name pos:line="59" pos:column="25">char<pos:position pos:line="59" pos:column="29"/></name> <modifier pos:line="59" pos:column="30">*<pos:position pos:line="59" pos:column="31"/></modifier></type><name pos:line="59" pos:column="31">path<pos:position pos:line="59" pos:column="35"/></name> <init pos:line="59" pos:column="36">= <expr><call><name pos:line="59" pos:column="38">strstr<pos:position pos:line="59" pos:column="44"/></name><argument_list pos:line="59" pos:column="44">(<argument><expr><name pos:line="59" pos:column="45">arg<pos:position pos:line="59" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="50">"//"<pos:position pos:line="59" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="59" pos:column="56"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="60" pos:column="25">str_end_url_with_slash<pos:position pos:line="60" pos:column="47"/></name><argument_list pos:line="60" pos:column="47">(<argument><expr><name pos:line="60" pos:column="48">arg<pos:position pos:line="60" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="60" pos:column="53">&amp;<pos:position pos:line="60" pos:column="58"/></operator><name><name pos:line="60" pos:column="54">repo<pos:position pos:line="60" pos:column="58"/></name><operator pos:line="60" pos:column="58">-&gt;<pos:position pos:line="60" pos:column="63"/></operator><name pos:line="60" pos:column="60">url<pos:position pos:line="60" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="65"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="61" pos:column="25">repo<pos:position pos:line="61" pos:column="29"/></name><operator pos:line="61" pos:column="29">-&gt;<pos:position pos:line="61" pos:column="34"/></operator><name pos:line="61" pos:column="31">path_len<pos:position pos:line="61" pos:column="39"/></name></name> <operator pos:line="61" pos:column="40">=<pos:position pos:line="61" pos:column="41"/></operator> <call><name pos:line="61" pos:column="42">strlen<pos:position pos:line="61" pos:column="48"/></name><argument_list pos:line="61" pos:column="48">(<argument><expr><name><name pos:line="61" pos:column="49">repo<pos:position pos:line="61" pos:column="53"/></name><operator pos:line="61" pos:column="53">-&gt;<pos:position pos:line="61" pos:column="58"/></operator><name pos:line="61" pos:column="55">url<pos:position pos:line="61" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="60"/></expr_stmt>
			<if pos:line="62" pos:column="25">if <condition pos:line="62" pos:column="28">(<expr><name pos:line="62" pos:column="29">path<pos:position pos:line="62" pos:column="33"/></name></expr>)<pos:position pos:line="62" pos:column="34"/></condition><then pos:line="62" pos:column="34"> <block pos:line="62" pos:column="35">{
				<expr_stmt><expr><name><name pos:line="63" pos:column="33">repo<pos:position pos:line="63" pos:column="37"/></name><operator pos:line="63" pos:column="37">-&gt;<pos:position pos:line="63" pos:column="42"/></operator><name pos:line="63" pos:column="39">path<pos:position pos:line="63" pos:column="43"/></name></name> <operator pos:line="63" pos:column="44">=<pos:position pos:line="63" pos:column="45"/></operator> <call><name pos:line="63" pos:column="46">strchr<pos:position pos:line="63" pos:column="52"/></name><argument_list pos:line="63" pos:column="52">(<argument><expr><name pos:line="63" pos:column="53">path<pos:position pos:line="63" pos:column="57"/></name><operator pos:line="63" pos:column="57">+<pos:position pos:line="63" pos:column="58"/></operator><literal type="number" pos:line="63" pos:column="58">2<pos:position pos:line="63" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="char" pos:line="63" pos:column="61">'/'<pos:position pos:line="63" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="66"/></expr_stmt>
				<if pos:line="64" pos:column="33">if <condition pos:line="64" pos:column="36">(<expr><name><name pos:line="64" pos:column="37">repo<pos:position pos:line="64" pos:column="41"/></name><operator pos:line="64" pos:column="41">-&gt;<pos:position pos:line="64" pos:column="46"/></operator><name pos:line="64" pos:column="43">path<pos:position pos:line="64" pos:column="47"/></name></name></expr>)<pos:position pos:line="64" pos:column="48"/></condition><then pos:line="64" pos:column="48">
					<block type="pseudo"><expr_stmt><expr><name><name pos:line="65" pos:column="41">repo<pos:position pos:line="65" pos:column="45"/></name><operator pos:line="65" pos:column="45">-&gt;<pos:position pos:line="65" pos:column="50"/></operator><name pos:line="65" pos:column="47">path_len<pos:position pos:line="65" pos:column="55"/></name></name> <operator pos:line="65" pos:column="56">=<pos:position pos:line="65" pos:column="57"/></operator> <call><name pos:line="65" pos:column="58">strlen<pos:position pos:line="65" pos:column="64"/></name><argument_list pos:line="65" pos:column="64">(<argument><expr><name><name pos:line="65" pos:column="65">repo<pos:position pos:line="65" pos:column="69"/></name><operator pos:line="65" pos:column="69">-&gt;<pos:position pos:line="65" pos:column="74"/></operator><name pos:line="65" pos:column="71">path<pos:position pos:line="65" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="77"/></expr_stmt></block></then></if>
			}<pos:position pos:line="66" pos:column="26"/></block></then></if>
			<continue pos:line="67" pos:column="25">continue;<pos:position pos:line="67" pos:column="34"/></continue>
		}<pos:position pos:line="68" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="69" pos:column="17">refspec<pos:position pos:line="69" pos:column="24"/></name> <operator pos:line="69" pos:column="25">=<pos:position pos:line="69" pos:column="26"/></operator> <name pos:line="69" pos:column="27">argv<pos:position pos:line="69" pos:column="31"/></name></expr>;<pos:position pos:line="69" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><name pos:line="70" pos:column="17">nr_refspec<pos:position pos:line="70" pos:column="27"/></name> <operator pos:line="70" pos:column="28">=<pos:position pos:line="70" pos:column="29"/></operator> <name pos:line="70" pos:column="30">argc<pos:position pos:line="70" pos:column="34"/></name> <operator pos:line="70" pos:column="35">-<pos:position pos:line="70" pos:column="36"/></operator> <name pos:line="70" pos:column="37">i<pos:position pos:line="70" pos:column="38"/></name></expr>;<pos:position pos:line="70" pos:column="39"/></expr_stmt>
		<break pos:line="71" pos:column="17">break;<pos:position pos:line="71" pos:column="23"/></break>
	}<pos:position pos:line="72" pos:column="10"/></block></for>

<cpp:ifndef pos:line="74" pos:column="1">#<cpp:directive pos:line="74" pos:column="2">ifndef<pos:position pos:line="74" pos:column="8"/></cpp:directive> <name pos:line="74" pos:column="9">USE_CURL_MULTI<pos:position pos:line="74" pos:column="23"/></name></cpp:ifndef>
	<expr_stmt><expr><call><name pos:line="75" pos:column="9">die<pos:position pos:line="75" pos:column="12"/></name><argument_list pos:line="75" pos:column="12">(<argument><expr><literal type="string" pos:line="75" pos:column="13">"git-push is not available for http/https repository when not compiled with USE_CURL_MULTI"<pos:position pos:line="75" pos:column="104"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="106"/></expr_stmt>
<cpp:endif pos:line="76" pos:column="1">#<cpp:directive pos:line="76" pos:column="2">endif<pos:position pos:line="76" pos:column="7"/></cpp:directive></cpp:endif>

	<if pos:line="78" pos:column="9">if <condition pos:line="78" pos:column="12">(<expr><operator pos:line="78" pos:column="13">!<pos:position pos:line="78" pos:column="14"/></operator><name><name pos:line="78" pos:column="14">repo<pos:position pos:line="78" pos:column="18"/></name><operator pos:line="78" pos:column="18">-&gt;<pos:position pos:line="78" pos:column="23"/></operator><name pos:line="78" pos:column="20">url<pos:position pos:line="78" pos:column="23"/></name></name></expr>)<pos:position pos:line="78" pos:column="24"/></condition><then pos:line="78" pos:column="24">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="79" pos:column="17">usage<pos:position pos:line="79" pos:column="22"/></name><argument_list pos:line="79" pos:column="22">(<argument><expr><name pos:line="79" pos:column="23">http_push_usage<pos:position pos:line="79" pos:column="38"/></name></expr></argument>)<pos:position pos:line="79" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="40"/></expr_stmt></block></then></if>

	<if pos:line="81" pos:column="9">if <condition pos:line="81" pos:column="12">(<expr><name pos:line="81" pos:column="13">delete_branch<pos:position pos:line="81" pos:column="26"/></name> <operator pos:line="81" pos:column="27">&amp;&amp;<pos:position pos:line="81" pos:column="37"/></operator> <name pos:line="81" pos:column="30">nr_refspec<pos:position pos:line="81" pos:column="40"/></name> <operator pos:line="81" pos:column="41">!=<pos:position pos:line="81" pos:column="43"/></operator> <literal type="number" pos:line="81" pos:column="44">1<pos:position pos:line="81" pos:column="45"/></literal></expr>)<pos:position pos:line="81" pos:column="46"/></condition><then pos:line="81" pos:column="46">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="82" pos:column="17">die<pos:position pos:line="82" pos:column="20"/></name><argument_list pos:line="82" pos:column="20">(<argument><expr><literal type="string" pos:line="82" pos:column="21">"You must specify only one branch name when deleting a remote branch"<pos:position pos:line="82" pos:column="90"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="92"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="84" pos:column="9">setup_git_directory<pos:position pos:line="84" pos:column="28"/></name><argument_list pos:line="84" pos:column="28">()<pos:position pos:line="84" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="31"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="86" pos:column="9">memset<pos:position pos:line="86" pos:column="15"/></name><argument_list pos:line="86" pos:column="15">(<argument><expr><name pos:line="86" pos:column="16">remote_dir_exists<pos:position pos:line="86" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="86" pos:column="35">-<pos:position pos:line="86" pos:column="36"/></operator><literal type="number" pos:line="86" pos:column="36">1<pos:position pos:line="86" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="86" pos:column="39">256<pos:position pos:line="86" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="44"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="88" pos:column="9">http_init<pos:position pos:line="88" pos:column="18"/></name><argument_list pos:line="88" pos:column="18">(<argument><expr><name pos:line="88" pos:column="19">NULL<pos:position pos:line="88" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="88" pos:column="25">repo<pos:position pos:line="88" pos:column="29"/></name><operator pos:line="88" pos:column="29">-&gt;<pos:position pos:line="88" pos:column="34"/></operator><name pos:line="88" pos:column="31">url<pos:position pos:line="88" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="88" pos:column="36">1<pos:position pos:line="88" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="39"/></expr_stmt>

<cpp:ifdef pos:line="90" pos:column="1">#<cpp:directive pos:line="90" pos:column="2">ifdef<pos:position pos:line="90" pos:column="7"/></cpp:directive> <name pos:line="90" pos:column="8">USE_CURL_MULTI<pos:position pos:line="90" pos:column="22"/></name></cpp:ifdef>
	<expr_stmt><expr><name pos:line="91" pos:column="9">is_running_queue<pos:position pos:line="91" pos:column="25"/></name> <operator pos:line="91" pos:column="26">=<pos:position pos:line="91" pos:column="27"/></operator> <literal type="number" pos:line="91" pos:column="28">0<pos:position pos:line="91" pos:column="29"/></literal></expr>;<pos:position pos:line="91" pos:column="30"/></expr_stmt>
<cpp:endif pos:line="92" pos:column="1">#<cpp:directive pos:line="92" pos:column="2">endif<pos:position pos:line="92" pos:column="7"/></cpp:directive></cpp:endif>

	<comment type="block" pos:line="94" pos:column="9">/* Verify DAV compliance/lock support */</comment>
	<if pos:line="95" pos:column="9">if <condition pos:line="95" pos:column="12">(<expr><operator pos:line="95" pos:column="13">!<pos:position pos:line="95" pos:column="14"/></operator><call><name pos:line="95" pos:column="14">locking_available<pos:position pos:line="95" pos:column="31"/></name><argument_list pos:line="95" pos:column="31">()<pos:position pos:line="95" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="95" pos:column="34"/></condition><then pos:line="95" pos:column="34"> <block pos:line="95" pos:column="35">{
		<expr_stmt><expr><name pos:line="96" pos:column="17">rc<pos:position pos:line="96" pos:column="19"/></name> <operator pos:line="96" pos:column="20">=<pos:position pos:line="96" pos:column="21"/></operator> <literal type="number" pos:line="96" pos:column="22">1<pos:position pos:line="96" pos:column="23"/></literal></expr>;<pos:position pos:line="96" pos:column="24"/></expr_stmt>
		<goto pos:line="97" pos:column="17">goto <name pos:line="97" pos:column="22">cleanup<pos:position pos:line="97" pos:column="29"/></name>;<pos:position pos:line="97" pos:column="30"/></goto>
	}<pos:position pos:line="98" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="100" pos:column="9">sigchain_push_common<pos:position pos:line="100" pos:column="29"/></name><argument_list pos:line="100" pos:column="29">(<argument><expr><name pos:line="100" pos:column="30">remove_locks_on_signal<pos:position pos:line="100" pos:column="52"/></name></expr></argument>)<pos:position pos:line="100" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="54"/></expr_stmt>

	<comment type="block" pos:line="102" pos:column="9">/* Check whether the remote has server info files */</comment>
	<expr_stmt><expr><name><name pos:line="103" pos:column="9">repo<pos:position pos:line="103" pos:column="13"/></name><operator pos:line="103" pos:column="13">-&gt;<pos:position pos:line="103" pos:column="18"/></operator><name pos:line="103" pos:column="15">can_update_info_refs<pos:position pos:line="103" pos:column="35"/></name></name> <operator pos:line="103" pos:column="36">=<pos:position pos:line="103" pos:column="37"/></operator> <literal type="number" pos:line="103" pos:column="38">0<pos:position pos:line="103" pos:column="39"/></literal></expr>;<pos:position pos:line="103" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="104" pos:column="9">repo<pos:position pos:line="104" pos:column="13"/></name><operator pos:line="104" pos:column="13">-&gt;<pos:position pos:line="104" pos:column="18"/></operator><name pos:line="104" pos:column="15">has_info_refs<pos:position pos:line="104" pos:column="28"/></name></name> <operator pos:line="104" pos:column="29">=<pos:position pos:line="104" pos:column="30"/></operator> <call><name pos:line="104" pos:column="31">remote_exists<pos:position pos:line="104" pos:column="44"/></name><argument_list pos:line="104" pos:column="44">(<argument><expr><literal type="string" pos:line="104" pos:column="45">"info/refs"<pos:position pos:line="104" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="104" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="58"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="105" pos:column="9">repo<pos:position pos:line="105" pos:column="13"/></name><operator pos:line="105" pos:column="13">-&gt;<pos:position pos:line="105" pos:column="18"/></operator><name pos:line="105" pos:column="15">has_info_packs<pos:position pos:line="105" pos:column="29"/></name></name> <operator pos:line="105" pos:column="30">=<pos:position pos:line="105" pos:column="31"/></operator> <call><name pos:line="105" pos:column="32">remote_exists<pos:position pos:line="105" pos:column="45"/></name><argument_list pos:line="105" pos:column="45">(<argument><expr><literal type="string" pos:line="105" pos:column="46">"objects/info/packs"<pos:position pos:line="105" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="105" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="68"/></expr_stmt>
	<if pos:line="106" pos:column="9">if <condition pos:line="106" pos:column="12">(<expr><name><name pos:line="106" pos:column="13">repo<pos:position pos:line="106" pos:column="17"/></name><operator pos:line="106" pos:column="17">-&gt;<pos:position pos:line="106" pos:column="22"/></operator><name pos:line="106" pos:column="19">has_info_refs<pos:position pos:line="106" pos:column="32"/></name></name></expr>)<pos:position pos:line="106" pos:column="33"/></condition><then pos:line="106" pos:column="33"> <block pos:line="106" pos:column="34">{
		<expr_stmt><expr><name pos:line="107" pos:column="17">info_ref_lock<pos:position pos:line="107" pos:column="30"/></name> <operator pos:line="107" pos:column="31">=<pos:position pos:line="107" pos:column="32"/></operator> <call><name pos:line="107" pos:column="33">lock_remote<pos:position pos:line="107" pos:column="44"/></name><argument_list pos:line="107" pos:column="44">(<argument><expr><literal type="string" pos:line="107" pos:column="45">"info/refs"<pos:position pos:line="107" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="107" pos:column="58">LOCK_TIME<pos:position pos:line="107" pos:column="67"/></name></expr></argument>)<pos:position pos:line="107" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="69"/></expr_stmt>
		<if pos:line="108" pos:column="17">if <condition pos:line="108" pos:column="20">(<expr><name pos:line="108" pos:column="21">info_ref_lock<pos:position pos:line="108" pos:column="34"/></name></expr>)<pos:position pos:line="108" pos:column="35"/></condition><then pos:line="108" pos:column="35">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="109" pos:column="25">repo<pos:position pos:line="109" pos:column="29"/></name><operator pos:line="109" pos:column="29">-&gt;<pos:position pos:line="109" pos:column="34"/></operator><name pos:line="109" pos:column="31">can_update_info_refs<pos:position pos:line="109" pos:column="51"/></name></name> <operator pos:line="109" pos:column="52">=<pos:position pos:line="109" pos:column="53"/></operator> <literal type="number" pos:line="109" pos:column="54">1<pos:position pos:line="109" pos:column="55"/></literal></expr>;<pos:position pos:line="109" pos:column="56"/></expr_stmt></block></then>
		<else pos:line="110" pos:column="17">else <block pos:line="110" pos:column="22">{
			<expr_stmt><expr><call><name pos:line="111" pos:column="25">error<pos:position pos:line="111" pos:column="30"/></name><argument_list pos:line="111" pos:column="30">(<argument><expr><literal type="string" pos:line="111" pos:column="31">"cannot lock existing info/refs"<pos:position pos:line="111" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="111" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="65"/></expr_stmt>
			<expr_stmt><expr><name pos:line="112" pos:column="25">rc<pos:position pos:line="112" pos:column="27"/></name> <operator pos:line="112" pos:column="28">=<pos:position pos:line="112" pos:column="29"/></operator> <literal type="number" pos:line="112" pos:column="30">1<pos:position pos:line="112" pos:column="31"/></literal></expr>;<pos:position pos:line="112" pos:column="32"/></expr_stmt>
			<goto pos:line="113" pos:column="25">goto <name pos:line="113" pos:column="30">cleanup<pos:position pos:line="113" pos:column="37"/></name>;<pos:position pos:line="113" pos:column="38"/></goto>
		}<pos:position pos:line="114" pos:column="18"/></block></else></if>
	}<pos:position pos:line="115" pos:column="10"/></block></then></if>
	<if pos:line="116" pos:column="9">if <condition pos:line="116" pos:column="12">(<expr><name><name pos:line="116" pos:column="13">repo<pos:position pos:line="116" pos:column="17"/></name><operator pos:line="116" pos:column="17">-&gt;<pos:position pos:line="116" pos:column="22"/></operator><name pos:line="116" pos:column="19">has_info_packs<pos:position pos:line="116" pos:column="33"/></name></name></expr>)<pos:position pos:line="116" pos:column="34"/></condition><then pos:line="116" pos:column="34">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="117" pos:column="17">fetch_indices<pos:position pos:line="117" pos:column="30"/></name><argument_list pos:line="117" pos:column="30">()<pos:position pos:line="117" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="33"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="119" pos:column="9">/* Get a list of all local and remote heads to validate refspecs */</comment>
	<expr_stmt><expr><name pos:line="120" pos:column="9">local_refs<pos:position pos:line="120" pos:column="19"/></name> <operator pos:line="120" pos:column="20">=<pos:position pos:line="120" pos:column="21"/></operator> <call><name pos:line="120" pos:column="22">get_local_heads<pos:position pos:line="120" pos:column="37"/></name><argument_list pos:line="120" pos:column="37">()<pos:position pos:line="120" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="121" pos:column="9">fprintf<pos:position pos:line="121" pos:column="16"/></name><argument_list pos:line="121" pos:column="16">(<argument><expr><name pos:line="121" pos:column="17">stderr<pos:position pos:line="121" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="121" pos:column="25">"Fetching remote heads...\n"<pos:position pos:line="121" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="121" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="122" pos:column="9">get_dav_remote_heads<pos:position pos:line="122" pos:column="29"/></name><argument_list pos:line="122" pos:column="29">()<pos:position pos:line="122" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="123" pos:column="9">run_request_queue<pos:position pos:line="123" pos:column="26"/></name><argument_list pos:line="123" pos:column="26">()<pos:position pos:line="123" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="29"/></expr_stmt>

	<comment type="block" pos:line="125" pos:column="9">/* Remove a remote branch if -d or -D was specified */</comment>
	<if pos:line="126" pos:column="9">if <condition pos:line="126" pos:column="12">(<expr><name pos:line="126" pos:column="13">delete_branch<pos:position pos:line="126" pos:column="26"/></name></expr>)<pos:position pos:line="126" pos:column="27"/></condition><then pos:line="126" pos:column="27"> <block pos:line="126" pos:column="28">{
		<if pos:line="127" pos:column="17">if <condition pos:line="127" pos:column="20">(<expr><call><name pos:line="127" pos:column="21">delete_remote_branch<pos:position pos:line="127" pos:column="41"/></name><argument_list pos:line="127" pos:column="41">(<argument><expr><name><name pos:line="127" pos:column="42">refspec<pos:position pos:line="127" pos:column="49"/></name><index pos:line="127" pos:column="49">[<expr><literal type="number" pos:line="127" pos:column="50">0<pos:position pos:line="127" pos:column="51"/></literal></expr>]<pos:position pos:line="127" pos:column="52"/></index></name></expr></argument>, <argument><expr><name pos:line="127" pos:column="54">force_delete<pos:position pos:line="127" pos:column="66"/></name></expr></argument>)<pos:position pos:line="127" pos:column="67"/></argument_list></call> <operator pos:line="127" pos:column="68">==<pos:position pos:line="127" pos:column="70"/></operator> <operator pos:line="127" pos:column="71">-<pos:position pos:line="127" pos:column="72"/></operator><literal type="number" pos:line="127" pos:column="72">1<pos:position pos:line="127" pos:column="73"/></literal></expr>)<pos:position pos:line="127" pos:column="74"/></condition><then pos:line="127" pos:column="74"> <block pos:line="127" pos:column="75">{
			<expr_stmt><expr><call><name pos:line="128" pos:column="25">fprintf<pos:position pos:line="128" pos:column="32"/></name><argument_list pos:line="128" pos:column="32">(<argument><expr><name pos:line="128" pos:column="33">stderr<pos:position pos:line="128" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="128" pos:column="41">"Unable to delete remote branch %s\n"<pos:position pos:line="128" pos:column="78"/></literal></expr></argument>,
				<argument><expr><name><name pos:line="129" pos:column="33">refspec<pos:position pos:line="129" pos:column="40"/></name><index pos:line="129" pos:column="40">[<expr><literal type="number" pos:line="129" pos:column="41">0<pos:position pos:line="129" pos:column="42"/></literal></expr>]<pos:position pos:line="129" pos:column="43"/></index></name></expr></argument>)<pos:position pos:line="129" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="45"/></expr_stmt>
			<if pos:line="130" pos:column="25">if <condition pos:line="130" pos:column="28">(<expr><name pos:line="130" pos:column="29">helper_status<pos:position pos:line="130" pos:column="42"/></name></expr>)<pos:position pos:line="130" pos:column="43"/></condition><then pos:line="130" pos:column="43">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="131" pos:column="33">printf<pos:position pos:line="131" pos:column="39"/></name><argument_list pos:line="131" pos:column="39">(<argument><expr><literal type="string" pos:line="131" pos:column="40">"error %s cannot remove\n"<pos:position pos:line="131" pos:column="66"/></literal></expr></argument>, <argument><expr><name><name pos:line="131" pos:column="68">refspec<pos:position pos:line="131" pos:column="75"/></name><index pos:line="131" pos:column="75">[<expr><literal type="number" pos:line="131" pos:column="76">0<pos:position pos:line="131" pos:column="77"/></literal></expr>]<pos:position pos:line="131" pos:column="78"/></index></name></expr></argument>)<pos:position pos:line="131" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="80"/></expr_stmt></block></then></if>
		}<pos:position pos:line="132" pos:column="18"/></block></then></if>
		<goto pos:line="133" pos:column="17">goto <name pos:line="133" pos:column="22">cleanup<pos:position pos:line="133" pos:column="29"/></name>;<pos:position pos:line="133" pos:column="30"/></goto>
	}<pos:position pos:line="134" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="136" pos:column="9">/* match them up */</comment>
	<if pos:line="137" pos:column="9">if <condition pos:line="137" pos:column="12">(<expr><call><name pos:line="137" pos:column="13">match_push_refs<pos:position pos:line="137" pos:column="28"/></name><argument_list pos:line="137" pos:column="28">(<argument><expr><name pos:line="137" pos:column="29">local_refs<pos:position pos:line="137" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="137" pos:column="41">&amp;<pos:position pos:line="137" pos:column="46"/></operator><name pos:line="137" pos:column="42">remote_refs<pos:position pos:line="137" pos:column="53"/></name></expr></argument>,
			    <argument><expr><name pos:line="138" pos:column="29">nr_refspec<pos:position pos:line="138" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="138" pos:column="41">(<pos:position pos:line="138" pos:column="42"/></operator><specifier pos:line="138" pos:column="42">const<pos:position pos:line="138" pos:column="47"/></specifier> <name pos:line="138" pos:column="48">char<pos:position pos:line="138" pos:column="52"/></name> <operator pos:line="138" pos:column="53">*<pos:position pos:line="138" pos:column="54"/></operator><operator pos:line="138" pos:column="54">*<pos:position pos:line="138" pos:column="55"/></operator><operator pos:line="138" pos:column="55">)<pos:position pos:line="138" pos:column="56"/></operator> <name pos:line="138" pos:column="57">refspec<pos:position pos:line="138" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="138" pos:column="66">push_all<pos:position pos:line="138" pos:column="74"/></name></expr></argument>)<pos:position pos:line="138" pos:column="75"/></argument_list></call></expr>)<pos:position pos:line="138" pos:column="76"/></condition><then pos:line="138" pos:column="76"> <block pos:line="138" pos:column="77">{
		<expr_stmt><expr><name pos:line="139" pos:column="17">rc<pos:position pos:line="139" pos:column="19"/></name> <operator pos:line="139" pos:column="20">=<pos:position pos:line="139" pos:column="21"/></operator> <operator pos:line="139" pos:column="22">-<pos:position pos:line="139" pos:column="23"/></operator><literal type="number" pos:line="139" pos:column="23">1<pos:position pos:line="139" pos:column="24"/></literal></expr>;<pos:position pos:line="139" pos:column="25"/></expr_stmt>
		<goto pos:line="140" pos:column="17">goto <name pos:line="140" pos:column="22">cleanup<pos:position pos:line="140" pos:column="29"/></name>;<pos:position pos:line="140" pos:column="30"/></goto>
	}<pos:position pos:line="141" pos:column="10"/></block></then></if>
	<if pos:line="142" pos:column="9">if <condition pos:line="142" pos:column="12">(<expr><operator pos:line="142" pos:column="13">!<pos:position pos:line="142" pos:column="14"/></operator><name pos:line="142" pos:column="14">remote_refs<pos:position pos:line="142" pos:column="25"/></name></expr>)<pos:position pos:line="142" pos:column="26"/></condition><then pos:line="142" pos:column="26"> <block pos:line="142" pos:column="27">{
		<expr_stmt><expr><call><name pos:line="143" pos:column="17">fprintf<pos:position pos:line="143" pos:column="24"/></name><argument_list pos:line="143" pos:column="24">(<argument><expr><name pos:line="143" pos:column="25">stderr<pos:position pos:line="143" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="143" pos:column="33">"No refs in common and none specified; doing nothing.\n"<pos:position pos:line="143" pos:column="89"/></literal></expr></argument>)<pos:position pos:line="143" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="91"/></expr_stmt>
		<if pos:line="144" pos:column="17">if <condition pos:line="144" pos:column="20">(<expr><name pos:line="144" pos:column="21">helper_status<pos:position pos:line="144" pos:column="34"/></name></expr>)<pos:position pos:line="144" pos:column="35"/></condition><then pos:line="144" pos:column="35">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="145" pos:column="25">printf<pos:position pos:line="145" pos:column="31"/></name><argument_list pos:line="145" pos:column="31">(<argument><expr><literal type="string" pos:line="145" pos:column="32">"error null no match\n"<pos:position pos:line="145" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="145" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="57"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="146" pos:column="17">rc<pos:position pos:line="146" pos:column="19"/></name> <operator pos:line="146" pos:column="20">=<pos:position pos:line="146" pos:column="21"/></operator> <literal type="number" pos:line="146" pos:column="22">0<pos:position pos:line="146" pos:column="23"/></literal></expr>;<pos:position pos:line="146" pos:column="24"/></expr_stmt>
		<goto pos:line="147" pos:column="17">goto <name pos:line="147" pos:column="22">cleanup<pos:position pos:line="147" pos:column="29"/></name>;<pos:position pos:line="147" pos:column="30"/></goto>
	}<pos:position pos:line="148" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="150" pos:column="9">new_refs<pos:position pos:line="150" pos:column="17"/></name> <operator pos:line="150" pos:column="18">=<pos:position pos:line="150" pos:column="19"/></operator> <literal type="number" pos:line="150" pos:column="20">0<pos:position pos:line="150" pos:column="21"/></literal></expr>;<pos:position pos:line="150" pos:column="22"/></expr_stmt>
	<for pos:line="151" pos:column="9">for <control pos:line="151" pos:column="13">(<init><expr><name pos:line="151" pos:column="14">ref<pos:position pos:line="151" pos:column="17"/></name> <operator pos:line="151" pos:column="18">=<pos:position pos:line="151" pos:column="19"/></operator> <name pos:line="151" pos:column="20">remote_refs<pos:position pos:line="151" pos:column="31"/></name></expr>;<pos:position pos:line="151" pos:column="32"/></init> <condition><expr><name pos:line="151" pos:column="33">ref<pos:position pos:line="151" pos:column="36"/></name></expr>;<pos:position pos:line="151" pos:column="37"/></condition> <incr><expr><name pos:line="151" pos:column="38">ref<pos:position pos:line="151" pos:column="41"/></name> <operator pos:line="151" pos:column="42">=<pos:position pos:line="151" pos:column="43"/></operator> <name><name pos:line="151" pos:column="44">ref<pos:position pos:line="151" pos:column="47"/></name><operator pos:line="151" pos:column="47">-&gt;<pos:position pos:line="151" pos:column="52"/></operator><name pos:line="151" pos:column="49">next<pos:position pos:line="151" pos:column="53"/></name></name></expr></incr>)<pos:position pos:line="151" pos:column="54"/></control> <block pos:line="151" pos:column="55">{
		<decl_stmt><decl><type><name><name pos:line="152" pos:column="17">struct<pos:position pos:line="152" pos:column="23"/></name> <name pos:line="152" pos:column="24">argv_array<pos:position pos:line="152" pos:column="34"/></name></name></type> <name pos:line="152" pos:column="35">commit_argv<pos:position pos:line="152" pos:column="46"/></name> <init pos:line="152" pos:column="47">= <expr><name pos:line="152" pos:column="49">ARGV_ARRAY_INIT<pos:position pos:line="152" pos:column="64"/></name></expr></init></decl>;<pos:position pos:line="152" pos:column="65"/></decl_stmt>

		<if pos:line="154" pos:column="17">if <condition pos:line="154" pos:column="20">(<expr><operator pos:line="154" pos:column="21">!<pos:position pos:line="154" pos:column="22"/></operator><name><name pos:line="154" pos:column="22">ref<pos:position pos:line="154" pos:column="25"/></name><operator pos:line="154" pos:column="25">-&gt;<pos:position pos:line="154" pos:column="30"/></operator><name pos:line="154" pos:column="27">peer_ref<pos:position pos:line="154" pos:column="35"/></name></name></expr>)<pos:position pos:line="154" pos:column="36"/></condition><then pos:line="154" pos:column="36">
			<block type="pseudo"><continue pos:line="155" pos:column="25">continue;<pos:position pos:line="155" pos:column="34"/></continue></block></then></if>

		<if pos:line="157" pos:column="17">if <condition pos:line="157" pos:column="20">(<expr><call><name pos:line="157" pos:column="21">is_null_oid<pos:position pos:line="157" pos:column="32"/></name><argument_list pos:line="157" pos:column="32">(<argument><expr><operator pos:line="157" pos:column="33">&amp;<pos:position pos:line="157" pos:column="38"/></operator><name><name pos:line="157" pos:column="34">ref<pos:position pos:line="157" pos:column="37"/></name><operator pos:line="157" pos:column="37">-&gt;<pos:position pos:line="157" pos:column="42"/></operator><name pos:line="157" pos:column="39">peer_ref<pos:position pos:line="157" pos:column="47"/></name><operator pos:line="157" pos:column="47">-&gt;<pos:position pos:line="157" pos:column="52"/></operator><name pos:line="157" pos:column="49">new_oid<pos:position pos:line="157" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="157" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="157" pos:column="58"/></condition><then pos:line="157" pos:column="58"> <block pos:line="157" pos:column="59">{
			<if pos:line="158" pos:column="25">if <condition pos:line="158" pos:column="28">(<expr><call><name pos:line="158" pos:column="29">delete_remote_branch<pos:position pos:line="158" pos:column="49"/></name><argument_list pos:line="158" pos:column="49">(<argument><expr><name><name pos:line="158" pos:column="50">ref<pos:position pos:line="158" pos:column="53"/></name><operator pos:line="158" pos:column="53">-&gt;<pos:position pos:line="158" pos:column="58"/></operator><name pos:line="158" pos:column="55">name<pos:position pos:line="158" pos:column="59"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="158" pos:column="61">1<pos:position pos:line="158" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="158" pos:column="63"/></argument_list></call> <operator pos:line="158" pos:column="64">==<pos:position pos:line="158" pos:column="66"/></operator> <operator pos:line="158" pos:column="67">-<pos:position pos:line="158" pos:column="68"/></operator><literal type="number" pos:line="158" pos:column="68">1<pos:position pos:line="158" pos:column="69"/></literal></expr>)<pos:position pos:line="158" pos:column="70"/></condition><then pos:line="158" pos:column="70"> <block pos:line="158" pos:column="71">{
				<expr_stmt><expr><call><name pos:line="159" pos:column="33">error<pos:position pos:line="159" pos:column="38"/></name><argument_list pos:line="159" pos:column="38">(<argument><expr><literal type="string" pos:line="159" pos:column="39">"Could not remove %s"<pos:position pos:line="159" pos:column="60"/></literal></expr></argument>, <argument><expr><name><name pos:line="159" pos:column="62">ref<pos:position pos:line="159" pos:column="65"/></name><operator pos:line="159" pos:column="65">-&gt;<pos:position pos:line="159" pos:column="70"/></operator><name pos:line="159" pos:column="67">name<pos:position pos:line="159" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="159" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="73"/></expr_stmt>
				<if pos:line="160" pos:column="33">if <condition pos:line="160" pos:column="36">(<expr><name pos:line="160" pos:column="37">helper_status<pos:position pos:line="160" pos:column="50"/></name></expr>)<pos:position pos:line="160" pos:column="51"/></condition><then pos:line="160" pos:column="51">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="161" pos:column="41">printf<pos:position pos:line="161" pos:column="47"/></name><argument_list pos:line="161" pos:column="47">(<argument><expr><literal type="string" pos:line="161" pos:column="48">"error %s cannot remove\n"<pos:position pos:line="161" pos:column="74"/></literal></expr></argument>, <argument><expr><name><name pos:line="161" pos:column="76">ref<pos:position pos:line="161" pos:column="79"/></name><operator pos:line="161" pos:column="79">-&gt;<pos:position pos:line="161" pos:column="84"/></operator><name pos:line="161" pos:column="81">name<pos:position pos:line="161" pos:column="85"/></name></name></expr></argument>)<pos:position pos:line="161" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="87"/></expr_stmt></block></then></if>
				<expr_stmt><expr><name pos:line="162" pos:column="33">rc<pos:position pos:line="162" pos:column="35"/></name> <operator pos:line="162" pos:column="36">=<pos:position pos:line="162" pos:column="37"/></operator> <operator pos:line="162" pos:column="38">-<pos:position pos:line="162" pos:column="39"/></operator><literal type="number" pos:line="162" pos:column="39">4<pos:position pos:line="162" pos:column="40"/></literal></expr>;<pos:position pos:line="162" pos:column="41"/></expr_stmt>
			}<pos:position pos:line="163" pos:column="26"/></block></then>
			<elseif pos:line="164" pos:column="25">else <if pos:line="164" pos:column="30">if <condition pos:line="164" pos:column="33">(<expr><name pos:line="164" pos:column="34">helper_status<pos:position pos:line="164" pos:column="47"/></name></expr>)<pos:position pos:line="164" pos:column="48"/></condition><then pos:line="164" pos:column="48">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="165" pos:column="33">printf<pos:position pos:line="165" pos:column="39"/></name><argument_list pos:line="165" pos:column="39">(<argument><expr><literal type="string" pos:line="165" pos:column="40">"ok %s\n"<pos:position pos:line="165" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="165" pos:column="51">ref<pos:position pos:line="165" pos:column="54"/></name><operator pos:line="165" pos:column="54">-&gt;<pos:position pos:line="165" pos:column="59"/></operator><name pos:line="165" pos:column="56">name<pos:position pos:line="165" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="165" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="62"/></expr_stmt></block></then></if></elseif></if>
			<expr_stmt><expr><name pos:line="166" pos:column="25">new_refs<pos:position pos:line="166" pos:column="33"/></name><operator pos:line="166" pos:column="33">++<pos:position pos:line="166" pos:column="35"/></operator></expr>;<pos:position pos:line="166" pos:column="36"/></expr_stmt>
			<continue pos:line="167" pos:column="25">continue;<pos:position pos:line="167" pos:column="34"/></continue>
		}<pos:position pos:line="168" pos:column="18"/></block></then></if>

		<if pos:line="170" pos:column="17">if <condition pos:line="170" pos:column="20">(<expr><operator pos:line="170" pos:column="21">!<pos:position pos:line="170" pos:column="22"/></operator><call><name pos:line="170" pos:column="22">oidcmp<pos:position pos:line="170" pos:column="28"/></name><argument_list pos:line="170" pos:column="28">(<argument><expr><operator pos:line="170" pos:column="29">&amp;<pos:position pos:line="170" pos:column="34"/></operator><name><name pos:line="170" pos:column="30">ref<pos:position pos:line="170" pos:column="33"/></name><operator pos:line="170" pos:column="33">-&gt;<pos:position pos:line="170" pos:column="38"/></operator><name pos:line="170" pos:column="35">old_oid<pos:position pos:line="170" pos:column="42"/></name></name></expr></argument>, <argument><expr><operator pos:line="170" pos:column="44">&amp;<pos:position pos:line="170" pos:column="49"/></operator><name><name pos:line="170" pos:column="45">ref<pos:position pos:line="170" pos:column="48"/></name><operator pos:line="170" pos:column="48">-&gt;<pos:position pos:line="170" pos:column="53"/></operator><name pos:line="170" pos:column="50">peer_ref<pos:position pos:line="170" pos:column="58"/></name><operator pos:line="170" pos:column="58">-&gt;<pos:position pos:line="170" pos:column="63"/></operator><name pos:line="170" pos:column="60">new_oid<pos:position pos:line="170" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="170" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="170" pos:column="69"/></condition><then pos:line="170" pos:column="69"> <block pos:line="170" pos:column="70">{
			<if pos:line="171" pos:column="25">if <condition pos:line="171" pos:column="28">(<expr><name pos:line="171" pos:column="29">push_verbosely<pos:position pos:line="171" pos:column="43"/></name></expr>)<pos:position pos:line="171" pos:column="44"/></condition><then pos:line="171" pos:column="44">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="172" pos:column="33">fprintf<pos:position pos:line="172" pos:column="40"/></name><argument_list pos:line="172" pos:column="40">(<argument><expr><name pos:line="172" pos:column="41">stderr<pos:position pos:line="172" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="172" pos:column="49">"'%s': up-to-date\n"<pos:position pos:line="172" pos:column="69"/></literal></expr></argument>, <argument><expr><name><name pos:line="172" pos:column="71">ref<pos:position pos:line="172" pos:column="74"/></name><operator pos:line="172" pos:column="74">-&gt;<pos:position pos:line="172" pos:column="79"/></operator><name pos:line="172" pos:column="76">name<pos:position pos:line="172" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="172" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="82"/></expr_stmt></block></then></if>
			<if pos:line="173" pos:column="25">if <condition pos:line="173" pos:column="28">(<expr><name pos:line="173" pos:column="29">helper_status<pos:position pos:line="173" pos:column="42"/></name></expr>)<pos:position pos:line="173" pos:column="43"/></condition><then pos:line="173" pos:column="43">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="174" pos:column="33">printf<pos:position pos:line="174" pos:column="39"/></name><argument_list pos:line="174" pos:column="39">(<argument><expr><literal type="string" pos:line="174" pos:column="40">"ok %s up to date\n"<pos:position pos:line="174" pos:column="60"/></literal></expr></argument>, <argument><expr><name><name pos:line="174" pos:column="62">ref<pos:position pos:line="174" pos:column="65"/></name><operator pos:line="174" pos:column="65">-&gt;<pos:position pos:line="174" pos:column="70"/></operator><name pos:line="174" pos:column="67">name<pos:position pos:line="174" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="174" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="174" pos:column="73"/></expr_stmt></block></then></if>
			<continue pos:line="175" pos:column="25">continue;<pos:position pos:line="175" pos:column="34"/></continue>
		}<pos:position pos:line="176" pos:column="18"/></block></then></if>

		<if pos:line="178" pos:column="17">if <condition pos:line="178" pos:column="20">(<expr><operator pos:line="178" pos:column="21">!<pos:position pos:line="178" pos:column="22"/></operator><name pos:line="178" pos:column="22">force_all<pos:position pos:line="178" pos:column="31"/></name> <operator pos:line="178" pos:column="32">&amp;&amp;<pos:position pos:line="178" pos:column="42"/></operator>
		    <operator pos:line="179" pos:column="21">!<pos:position pos:line="179" pos:column="22"/></operator><call><name pos:line="179" pos:column="22">is_null_oid<pos:position pos:line="179" pos:column="33"/></name><argument_list pos:line="179" pos:column="33">(<argument><expr><operator pos:line="179" pos:column="34">&amp;<pos:position pos:line="179" pos:column="39"/></operator><name><name pos:line="179" pos:column="35">ref<pos:position pos:line="179" pos:column="38"/></name><operator pos:line="179" pos:column="38">-&gt;<pos:position pos:line="179" pos:column="43"/></operator><name pos:line="179" pos:column="40">old_oid<pos:position pos:line="179" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="179" pos:column="48"/></argument_list></call> <operator pos:line="179" pos:column="49">&amp;&amp;<pos:position pos:line="179" pos:column="59"/></operator>
		    <operator pos:line="180" pos:column="21">!<pos:position pos:line="180" pos:column="22"/></operator><name><name pos:line="180" pos:column="22">ref<pos:position pos:line="180" pos:column="25"/></name><operator pos:line="180" pos:column="25">-&gt;<pos:position pos:line="180" pos:column="30"/></operator><name pos:line="180" pos:column="27">force<pos:position pos:line="180" pos:column="32"/></name></name></expr>)<pos:position pos:line="180" pos:column="33"/></condition><then pos:line="180" pos:column="33"> <block pos:line="180" pos:column="34">{
			<if pos:line="181" pos:column="25">if <condition pos:line="181" pos:column="28">(<expr><operator pos:line="181" pos:column="29">!<pos:position pos:line="181" pos:column="30"/></operator><call><name pos:line="181" pos:column="30">has_object_file<pos:position pos:line="181" pos:column="45"/></name><argument_list pos:line="181" pos:column="45">(<argument><expr><operator pos:line="181" pos:column="46">&amp;<pos:position pos:line="181" pos:column="51"/></operator><name><name pos:line="181" pos:column="47">ref<pos:position pos:line="181" pos:column="50"/></name><operator pos:line="181" pos:column="50">-&gt;<pos:position pos:line="181" pos:column="55"/></operator><name pos:line="181" pos:column="52">old_oid<pos:position pos:line="181" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="181" pos:column="60"/></argument_list></call> <operator pos:line="181" pos:column="61">||<pos:position pos:line="181" pos:column="63"/></operator>
			    <operator pos:line="182" pos:column="29">!<pos:position pos:line="182" pos:column="30"/></operator><call><name pos:line="182" pos:column="30">ref_newer<pos:position pos:line="182" pos:column="39"/></name><argument_list pos:line="182" pos:column="39">(<argument><expr><operator pos:line="182" pos:column="40">&amp;<pos:position pos:line="182" pos:column="45"/></operator><name><name pos:line="182" pos:column="41">ref<pos:position pos:line="182" pos:column="44"/></name><operator pos:line="182" pos:column="44">-&gt;<pos:position pos:line="182" pos:column="49"/></operator><name pos:line="182" pos:column="46">peer_ref<pos:position pos:line="182" pos:column="54"/></name><operator pos:line="182" pos:column="54">-&gt;<pos:position pos:line="182" pos:column="59"/></operator><name pos:line="182" pos:column="56">new_oid<pos:position pos:line="182" pos:column="63"/></name></name></expr></argument>,
				       <argument><expr><operator pos:line="183" pos:column="40">&amp;<pos:position pos:line="183" pos:column="45"/></operator><name><name pos:line="183" pos:column="41">ref<pos:position pos:line="183" pos:column="44"/></name><operator pos:line="183" pos:column="44">-&gt;<pos:position pos:line="183" pos:column="49"/></operator><name pos:line="183" pos:column="46">old_oid<pos:position pos:line="183" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="183" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="183" pos:column="55"/></condition><then pos:line="183" pos:column="55"> <block pos:line="183" pos:column="56">{
				<comment type="block" pos:line="184" pos:column="33">/*
				 * We do not have the remote ref, or
				 * we know that the remote ref is not
				 * an ancestor of what we are trying to
				 * push.  Either way this can be losing
				 * commits at the remote end and likely
				 * we were not up to date to begin with.
				 */</comment>
				<expr_stmt><expr><call><name pos:line="192" pos:column="33">error<pos:position pos:line="192" pos:column="38"/></name><argument_list pos:line="192" pos:column="38">(<argument><expr><literal type="string" pos:line="192" pos:column="39">"remote '%s' is not an ancestor of\n"<pos:position pos:line="192" pos:column="76"/></literal>
				      <literal type="string" pos:line="193" pos:column="39">"local '%s'.\n"<pos:position pos:line="193" pos:column="54"/></literal>
				      <literal type="string" pos:line="194" pos:column="39">"Maybe you are not up-to-date and "<pos:position pos:line="194" pos:column="74"/></literal>
				      <literal type="string" pos:line="195" pos:column="39">"need to pull first?"<pos:position pos:line="195" pos:column="60"/></literal></expr></argument>,
				      <argument><expr><name><name pos:line="196" pos:column="39">ref<pos:position pos:line="196" pos:column="42"/></name><operator pos:line="196" pos:column="42">-&gt;<pos:position pos:line="196" pos:column="47"/></operator><name pos:line="196" pos:column="44">name<pos:position pos:line="196" pos:column="48"/></name></name></expr></argument>,
				      <argument><expr><name><name pos:line="197" pos:column="39">ref<pos:position pos:line="197" pos:column="42"/></name><operator pos:line="197" pos:column="42">-&gt;<pos:position pos:line="197" pos:column="47"/></operator><name pos:line="197" pos:column="44">peer_ref<pos:position pos:line="197" pos:column="52"/></name><operator pos:line="197" pos:column="52">-&gt;<pos:position pos:line="197" pos:column="57"/></operator><name pos:line="197" pos:column="54">name<pos:position pos:line="197" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="197" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="197" pos:column="60"/></expr_stmt>
				<if pos:line="198" pos:column="33">if <condition pos:line="198" pos:column="36">(<expr><name pos:line="198" pos:column="37">helper_status<pos:position pos:line="198" pos:column="50"/></name></expr>)<pos:position pos:line="198" pos:column="51"/></condition><then pos:line="198" pos:column="51">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="199" pos:column="41">printf<pos:position pos:line="199" pos:column="47"/></name><argument_list pos:line="199" pos:column="47">(<argument><expr><literal type="string" pos:line="199" pos:column="48">"error %s non-fast forward\n"<pos:position pos:line="199" pos:column="77"/></literal></expr></argument>, <argument><expr><name><name pos:line="199" pos:column="79">ref<pos:position pos:line="199" pos:column="82"/></name><operator pos:line="199" pos:column="82">-&gt;<pos:position pos:line="199" pos:column="87"/></operator><name pos:line="199" pos:column="84">name<pos:position pos:line="199" pos:column="88"/></name></name></expr></argument>)<pos:position pos:line="199" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="199" pos:column="90"/></expr_stmt></block></then></if>
				<expr_stmt><expr><name pos:line="200" pos:column="33">rc<pos:position pos:line="200" pos:column="35"/></name> <operator pos:line="200" pos:column="36">=<pos:position pos:line="200" pos:column="37"/></operator> <operator pos:line="200" pos:column="38">-<pos:position pos:line="200" pos:column="39"/></operator><literal type="number" pos:line="200" pos:column="39">2<pos:position pos:line="200" pos:column="40"/></literal></expr>;<pos:position pos:line="200" pos:column="41"/></expr_stmt>
				<continue pos:line="201" pos:column="33">continue;<pos:position pos:line="201" pos:column="42"/></continue>
			}<pos:position pos:line="202" pos:column="26"/></block></then></if>
		}<pos:position pos:line="203" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="204" pos:column="17">oidcpy<pos:position pos:line="204" pos:column="23"/></name><argument_list pos:line="204" pos:column="23">(<argument><expr><operator pos:line="204" pos:column="24">&amp;<pos:position pos:line="204" pos:column="29"/></operator><name><name pos:line="204" pos:column="25">ref<pos:position pos:line="204" pos:column="28"/></name><operator pos:line="204" pos:column="28">-&gt;<pos:position pos:line="204" pos:column="33"/></operator><name pos:line="204" pos:column="30">new_oid<pos:position pos:line="204" pos:column="37"/></name></name></expr></argument>, <argument><expr><operator pos:line="204" pos:column="39">&amp;<pos:position pos:line="204" pos:column="44"/></operator><name><name pos:line="204" pos:column="40">ref<pos:position pos:line="204" pos:column="43"/></name><operator pos:line="204" pos:column="43">-&gt;<pos:position pos:line="204" pos:column="48"/></operator><name pos:line="204" pos:column="45">peer_ref<pos:position pos:line="204" pos:column="53"/></name><operator pos:line="204" pos:column="53">-&gt;<pos:position pos:line="204" pos:column="58"/></operator><name pos:line="204" pos:column="55">new_oid<pos:position pos:line="204" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="204" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="204" pos:column="64"/></expr_stmt>
		<expr_stmt><expr><name pos:line="205" pos:column="17">new_refs<pos:position pos:line="205" pos:column="25"/></name><operator pos:line="205" pos:column="25">++<pos:position pos:line="205" pos:column="27"/></operator></expr>;<pos:position pos:line="205" pos:column="28"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="207" pos:column="17">fprintf<pos:position pos:line="207" pos:column="24"/></name><argument_list pos:line="207" pos:column="24">(<argument><expr><name pos:line="207" pos:column="25">stderr<pos:position pos:line="207" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="207" pos:column="33">"updating '%s'"<pos:position pos:line="207" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="207" pos:column="50">ref<pos:position pos:line="207" pos:column="53"/></name><operator pos:line="207" pos:column="53">-&gt;<pos:position pos:line="207" pos:column="58"/></operator><name pos:line="207" pos:column="55">name<pos:position pos:line="207" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="207" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="207" pos:column="61"/></expr_stmt>
		<if pos:line="208" pos:column="17">if <condition pos:line="208" pos:column="20">(<expr><call><name pos:line="208" pos:column="21">strcmp<pos:position pos:line="208" pos:column="27"/></name><argument_list pos:line="208" pos:column="27">(<argument><expr><name><name pos:line="208" pos:column="28">ref<pos:position pos:line="208" pos:column="31"/></name><operator pos:line="208" pos:column="31">-&gt;<pos:position pos:line="208" pos:column="36"/></operator><name pos:line="208" pos:column="33">name<pos:position pos:line="208" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="208" pos:column="39">ref<pos:position pos:line="208" pos:column="42"/></name><operator pos:line="208" pos:column="42">-&gt;<pos:position pos:line="208" pos:column="47"/></operator><name pos:line="208" pos:column="44">peer_ref<pos:position pos:line="208" pos:column="52"/></name><operator pos:line="208" pos:column="52">-&gt;<pos:position pos:line="208" pos:column="57"/></operator><name pos:line="208" pos:column="54">name<pos:position pos:line="208" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="208" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="208" pos:column="60"/></condition><then pos:line="208" pos:column="60">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="209" pos:column="25">fprintf<pos:position pos:line="209" pos:column="32"/></name><argument_list pos:line="209" pos:column="32">(<argument><expr><name pos:line="209" pos:column="33">stderr<pos:position pos:line="209" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="209" pos:column="41">" using '%s'"<pos:position pos:line="209" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="209" pos:column="56">ref<pos:position pos:line="209" pos:column="59"/></name><operator pos:line="209" pos:column="59">-&gt;<pos:position pos:line="209" pos:column="64"/></operator><name pos:line="209" pos:column="61">peer_ref<pos:position pos:line="209" pos:column="69"/></name><operator pos:line="209" pos:column="69">-&gt;<pos:position pos:line="209" pos:column="74"/></operator><name pos:line="209" pos:column="71">name<pos:position pos:line="209" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="209" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="209" pos:column="77"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="210" pos:column="17">fprintf<pos:position pos:line="210" pos:column="24"/></name><argument_list pos:line="210" pos:column="24">(<argument><expr><name pos:line="210" pos:column="25">stderr<pos:position pos:line="210" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="210" pos:column="33">"\n  from %s\n  to   %s\n"<pos:position pos:line="210" pos:column="59"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="211" pos:column="25">oid_to_hex<pos:position pos:line="211" pos:column="35"/></name><argument_list pos:line="211" pos:column="35">(<argument><expr><operator pos:line="211" pos:column="36">&amp;<pos:position pos:line="211" pos:column="41"/></operator><name><name pos:line="211" pos:column="37">ref<pos:position pos:line="211" pos:column="40"/></name><operator pos:line="211" pos:column="40">-&gt;<pos:position pos:line="211" pos:column="45"/></operator><name pos:line="211" pos:column="42">old_oid<pos:position pos:line="211" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="211" pos:column="50"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="211" pos:column="52">oid_to_hex<pos:position pos:line="211" pos:column="62"/></name><argument_list pos:line="211" pos:column="62">(<argument><expr><operator pos:line="211" pos:column="63">&amp;<pos:position pos:line="211" pos:column="68"/></operator><name><name pos:line="211" pos:column="64">ref<pos:position pos:line="211" pos:column="67"/></name><operator pos:line="211" pos:column="67">-&gt;<pos:position pos:line="211" pos:column="72"/></operator><name pos:line="211" pos:column="69">new_oid<pos:position pos:line="211" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="211" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="211" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="211" pos:column="79"/></expr_stmt>
		<if pos:line="212" pos:column="17">if <condition pos:line="212" pos:column="20">(<expr><name pos:line="212" pos:column="21">dry_run<pos:position pos:line="212" pos:column="28"/></name></expr>)<pos:position pos:line="212" pos:column="29"/></condition><then pos:line="212" pos:column="29"> <block pos:line="212" pos:column="30">{
			<if pos:line="213" pos:column="25">if <condition pos:line="213" pos:column="28">(<expr><name pos:line="213" pos:column="29">helper_status<pos:position pos:line="213" pos:column="42"/></name></expr>)<pos:position pos:line="213" pos:column="43"/></condition><then pos:line="213" pos:column="43">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="214" pos:column="33">printf<pos:position pos:line="214" pos:column="39"/></name><argument_list pos:line="214" pos:column="39">(<argument><expr><literal type="string" pos:line="214" pos:column="40">"ok %s\n"<pos:position pos:line="214" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="214" pos:column="51">ref<pos:position pos:line="214" pos:column="54"/></name><operator pos:line="214" pos:column="54">-&gt;<pos:position pos:line="214" pos:column="59"/></operator><name pos:line="214" pos:column="56">name<pos:position pos:line="214" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="214" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="214" pos:column="62"/></expr_stmt></block></then></if>
			<continue pos:line="215" pos:column="25">continue;<pos:position pos:line="215" pos:column="34"/></continue>
		}<pos:position pos:line="216" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="218" pos:column="17">/* Lock remote branch ref */</comment>
		<expr_stmt><expr><name pos:line="219" pos:column="17">ref_lock<pos:position pos:line="219" pos:column="25"/></name> <operator pos:line="219" pos:column="26">=<pos:position pos:line="219" pos:column="27"/></operator> <call><name pos:line="219" pos:column="28">lock_remote<pos:position pos:line="219" pos:column="39"/></name><argument_list pos:line="219" pos:column="39">(<argument><expr><name><name pos:line="219" pos:column="40">ref<pos:position pos:line="219" pos:column="43"/></name><operator pos:line="219" pos:column="43">-&gt;<pos:position pos:line="219" pos:column="48"/></operator><name pos:line="219" pos:column="45">name<pos:position pos:line="219" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="219" pos:column="51">LOCK_TIME<pos:position pos:line="219" pos:column="60"/></name></expr></argument>)<pos:position pos:line="219" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="219" pos:column="62"/></expr_stmt>
		<if pos:line="220" pos:column="17">if <condition pos:line="220" pos:column="20">(<expr><name pos:line="220" pos:column="21">ref_lock<pos:position pos:line="220" pos:column="29"/></name> <operator pos:line="220" pos:column="30">==<pos:position pos:line="220" pos:column="32"/></operator> <name pos:line="220" pos:column="33">NULL<pos:position pos:line="220" pos:column="37"/></name></expr>)<pos:position pos:line="220" pos:column="38"/></condition><then pos:line="220" pos:column="38"> <block pos:line="220" pos:column="39">{
			<expr_stmt><expr><call><name pos:line="221" pos:column="25">fprintf<pos:position pos:line="221" pos:column="32"/></name><argument_list pos:line="221" pos:column="32">(<argument><expr><name pos:line="221" pos:column="33">stderr<pos:position pos:line="221" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="221" pos:column="41">"Unable to lock remote branch %s\n"<pos:position pos:line="221" pos:column="76"/></literal></expr></argument>,
				<argument><expr><name><name pos:line="222" pos:column="33">ref<pos:position pos:line="222" pos:column="36"/></name><operator pos:line="222" pos:column="36">-&gt;<pos:position pos:line="222" pos:column="41"/></operator><name pos:line="222" pos:column="38">name<pos:position pos:line="222" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="222" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="222" pos:column="44"/></expr_stmt>
			<if pos:line="223" pos:column="25">if <condition pos:line="223" pos:column="28">(<expr><name pos:line="223" pos:column="29">helper_status<pos:position pos:line="223" pos:column="42"/></name></expr>)<pos:position pos:line="223" pos:column="43"/></condition><then pos:line="223" pos:column="43">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="224" pos:column="33">printf<pos:position pos:line="224" pos:column="39"/></name><argument_list pos:line="224" pos:column="39">(<argument><expr><literal type="string" pos:line="224" pos:column="40">"error %s lock error\n"<pos:position pos:line="224" pos:column="63"/></literal></expr></argument>, <argument><expr><name><name pos:line="224" pos:column="65">ref<pos:position pos:line="224" pos:column="68"/></name><operator pos:line="224" pos:column="68">-&gt;<pos:position pos:line="224" pos:column="73"/></operator><name pos:line="224" pos:column="70">name<pos:position pos:line="224" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="224" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="224" pos:column="76"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name pos:line="225" pos:column="25">rc<pos:position pos:line="225" pos:column="27"/></name> <operator pos:line="225" pos:column="28">=<pos:position pos:line="225" pos:column="29"/></operator> <literal type="number" pos:line="225" pos:column="30">1<pos:position pos:line="225" pos:column="31"/></literal></expr>;<pos:position pos:line="225" pos:column="32"/></expr_stmt>
			<continue pos:line="226" pos:column="25">continue;<pos:position pos:line="226" pos:column="34"/></continue>
		}<pos:position pos:line="227" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="229" pos:column="17">/* Set up revision info for this refspec */</comment>
		<expr_stmt><expr><call><name pos:line="230" pos:column="17">argv_array_push<pos:position pos:line="230" pos:column="32"/></name><argument_list pos:line="230" pos:column="32">(<argument><expr><operator pos:line="230" pos:column="33">&amp;<pos:position pos:line="230" pos:column="38"/></operator><name pos:line="230" pos:column="34">commit_argv<pos:position pos:line="230" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="230" pos:column="47">""<pos:position pos:line="230" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="230" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="230" pos:column="51"/></expr_stmt> <comment type="block" pos:line="230" pos:column="52">/* ignored */</comment>
		<expr_stmt><expr><call><name pos:line="231" pos:column="17">argv_array_push<pos:position pos:line="231" pos:column="32"/></name><argument_list pos:line="231" pos:column="32">(<argument><expr><operator pos:line="231" pos:column="33">&amp;<pos:position pos:line="231" pos:column="38"/></operator><name pos:line="231" pos:column="34">commit_argv<pos:position pos:line="231" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="231" pos:column="47">"--objects"<pos:position pos:line="231" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="231" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="231" pos:column="60"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="232" pos:column="17">argv_array_push<pos:position pos:line="232" pos:column="32"/></name><argument_list pos:line="232" pos:column="32">(<argument><expr><operator pos:line="232" pos:column="33">&amp;<pos:position pos:line="232" pos:column="38"/></operator><name pos:line="232" pos:column="34">commit_argv<pos:position pos:line="232" pos:column="45"/></name></expr></argument>, <argument><expr><call><name pos:line="232" pos:column="47">oid_to_hex<pos:position pos:line="232" pos:column="57"/></name><argument_list pos:line="232" pos:column="57">(<argument><expr><operator pos:line="232" pos:column="58">&amp;<pos:position pos:line="232" pos:column="63"/></operator><name><name pos:line="232" pos:column="59">ref<pos:position pos:line="232" pos:column="62"/></name><operator pos:line="232" pos:column="62">-&gt;<pos:position pos:line="232" pos:column="67"/></operator><name pos:line="232" pos:column="64">new_oid<pos:position pos:line="232" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="232" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="232" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="232" pos:column="74"/></expr_stmt>
		<if pos:line="233" pos:column="17">if <condition pos:line="233" pos:column="20">(<expr><operator pos:line="233" pos:column="21">!<pos:position pos:line="233" pos:column="22"/></operator><name pos:line="233" pos:column="22">push_all<pos:position pos:line="233" pos:column="30"/></name> <operator pos:line="233" pos:column="31">&amp;&amp;<pos:position pos:line="233" pos:column="41"/></operator> <operator pos:line="233" pos:column="34">!<pos:position pos:line="233" pos:column="35"/></operator><call><name pos:line="233" pos:column="35">is_null_oid<pos:position pos:line="233" pos:column="46"/></name><argument_list pos:line="233" pos:column="46">(<argument><expr><operator pos:line="233" pos:column="47">&amp;<pos:position pos:line="233" pos:column="52"/></operator><name><name pos:line="233" pos:column="48">ref<pos:position pos:line="233" pos:column="51"/></name><operator pos:line="233" pos:column="51">-&gt;<pos:position pos:line="233" pos:column="56"/></operator><name pos:line="233" pos:column="53">old_oid<pos:position pos:line="233" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="233" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="233" pos:column="62"/></condition><then pos:line="233" pos:column="62">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="234" pos:column="25">argv_array_pushf<pos:position pos:line="234" pos:column="41"/></name><argument_list pos:line="234" pos:column="41">(<argument><expr><operator pos:line="234" pos:column="42">&amp;<pos:position pos:line="234" pos:column="47"/></operator><name pos:line="234" pos:column="43">commit_argv<pos:position pos:line="234" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="234" pos:column="56">"^%s"<pos:position pos:line="234" pos:column="61"/></literal></expr></argument>,
					 <argument><expr><call><name pos:line="235" pos:column="42">oid_to_hex<pos:position pos:line="235" pos:column="52"/></name><argument_list pos:line="235" pos:column="52">(<argument><expr><operator pos:line="235" pos:column="53">&amp;<pos:position pos:line="235" pos:column="58"/></operator><name><name pos:line="235" pos:column="54">ref<pos:position pos:line="235" pos:column="57"/></name><operator pos:line="235" pos:column="57">-&gt;<pos:position pos:line="235" pos:column="62"/></operator><name pos:line="235" pos:column="59">old_oid<pos:position pos:line="235" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="235" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="235" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="235" pos:column="69"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="236" pos:column="17">init_revisions<pos:position pos:line="236" pos:column="31"/></name><argument_list pos:line="236" pos:column="31">(<argument><expr><operator pos:line="236" pos:column="32">&amp;<pos:position pos:line="236" pos:column="37"/></operator><name pos:line="236" pos:column="33">revs<pos:position pos:line="236" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="236" pos:column="39">setup_git_directory<pos:position pos:line="236" pos:column="58"/></name><argument_list pos:line="236" pos:column="58">()<pos:position pos:line="236" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="236" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="236" pos:column="62"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="237" pos:column="17">setup_revisions<pos:position pos:line="237" pos:column="32"/></name><argument_list pos:line="237" pos:column="32">(<argument><expr><name><name pos:line="237" pos:column="33">commit_argv<pos:position pos:line="237" pos:column="44"/></name><operator pos:line="237" pos:column="44">.<pos:position pos:line="237" pos:column="45"/></operator><name pos:line="237" pos:column="45">argc<pos:position pos:line="237" pos:column="49"/></name></name></expr></argument>, <argument><expr><name><name pos:line="237" pos:column="51">commit_argv<pos:position pos:line="237" pos:column="62"/></name><operator pos:line="237" pos:column="62">.<pos:position pos:line="237" pos:column="63"/></operator><name pos:line="237" pos:column="63">argv<pos:position pos:line="237" pos:column="67"/></name></name></expr></argument>, <argument><expr><operator pos:line="237" pos:column="69">&amp;<pos:position pos:line="237" pos:column="74"/></operator><name pos:line="237" pos:column="70">revs<pos:position pos:line="237" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="237" pos:column="76">NULL<pos:position pos:line="237" pos:column="80"/></name></expr></argument>)<pos:position pos:line="237" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="237" pos:column="82"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="238" pos:column="17">revs<pos:position pos:line="238" pos:column="21"/></name><operator pos:line="238" pos:column="21">.<pos:position pos:line="238" pos:column="22"/></operator><name pos:line="238" pos:column="22">edge_hint<pos:position pos:line="238" pos:column="31"/></name></name> <operator pos:line="238" pos:column="32">=<pos:position pos:line="238" pos:column="33"/></operator> <literal type="number" pos:line="238" pos:column="34">0<pos:position pos:line="238" pos:column="35"/></literal></expr>;<pos:position pos:line="238" pos:column="36"/></expr_stmt> <comment type="block" pos:line="238" pos:column="37">/* just in case */</comment>

		<comment type="block" pos:line="240" pos:column="17">/* Generate a list of objects that need to be pushed */</comment>
		<expr_stmt><expr><name pos:line="241" pos:column="17">pushing<pos:position pos:line="241" pos:column="24"/></name> <operator pos:line="241" pos:column="25">=<pos:position pos:line="241" pos:column="26"/></operator> <literal type="number" pos:line="241" pos:column="27">0<pos:position pos:line="241" pos:column="28"/></literal></expr>;<pos:position pos:line="241" pos:column="29"/></expr_stmt>
		<if pos:line="242" pos:column="17">if <condition pos:line="242" pos:column="20">(<expr><call><name pos:line="242" pos:column="21">prepare_revision_walk<pos:position pos:line="242" pos:column="42"/></name><argument_list pos:line="242" pos:column="42">(<argument><expr><operator pos:line="242" pos:column="43">&amp;<pos:position pos:line="242" pos:column="48"/></operator><name pos:line="242" pos:column="44">revs<pos:position pos:line="242" pos:column="48"/></name></expr></argument>)<pos:position pos:line="242" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="242" pos:column="50"/></condition><then pos:line="242" pos:column="50">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="243" pos:column="25">die<pos:position pos:line="243" pos:column="28"/></name><argument_list pos:line="243" pos:column="28">(<argument><expr><literal type="string" pos:line="243" pos:column="29">"revision walk setup failed"<pos:position pos:line="243" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="243" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="243" pos:column="59"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="244" pos:column="17">mark_edges_uninteresting<pos:position pos:line="244" pos:column="41"/></name><argument_list pos:line="244" pos:column="41">(<argument><expr><operator pos:line="244" pos:column="42">&amp;<pos:position pos:line="244" pos:column="47"/></operator><name pos:line="244" pos:column="43">revs<pos:position pos:line="244" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="244" pos:column="49">NULL<pos:position pos:line="244" pos:column="53"/></name></expr></argument>)<pos:position pos:line="244" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="244" pos:column="55"/></expr_stmt>
		<expr_stmt><expr><name pos:line="245" pos:column="17">objects_to_send<pos:position pos:line="245" pos:column="32"/></name> <operator pos:line="245" pos:column="33">=<pos:position pos:line="245" pos:column="34"/></operator> <call><name pos:line="245" pos:column="35">get_delta<pos:position pos:line="245" pos:column="44"/></name><argument_list pos:line="245" pos:column="44">(<argument><expr><operator pos:line="245" pos:column="45">&amp;<pos:position pos:line="245" pos:column="50"/></operator><name pos:line="245" pos:column="46">revs<pos:position pos:line="245" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="245" pos:column="52">ref_lock<pos:position pos:line="245" pos:column="60"/></name></expr></argument>)<pos:position pos:line="245" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="245" pos:column="62"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="246" pos:column="17">finish_all_active_slots<pos:position pos:line="246" pos:column="40"/></name><argument_list pos:line="246" pos:column="40">()<pos:position pos:line="246" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="246" pos:column="43"/></expr_stmt>

		<comment type="block" pos:line="248" pos:column="17">/* Push missing objects to remote, this would be a
		   convenient time to pack them first if appropriate. */</comment>
		<expr_stmt><expr><name pos:line="250" pos:column="17">pushing<pos:position pos:line="250" pos:column="24"/></name> <operator pos:line="250" pos:column="25">=<pos:position pos:line="250" pos:column="26"/></operator> <literal type="number" pos:line="250" pos:column="27">1<pos:position pos:line="250" pos:column="28"/></literal></expr>;<pos:position pos:line="250" pos:column="29"/></expr_stmt>
		<if pos:line="251" pos:column="17">if <condition pos:line="251" pos:column="20">(<expr><name pos:line="251" pos:column="21">objects_to_send<pos:position pos:line="251" pos:column="36"/></name></expr>)<pos:position pos:line="251" pos:column="37"/></condition><then pos:line="251" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="252" pos:column="25">fprintf<pos:position pos:line="252" pos:column="32"/></name><argument_list pos:line="252" pos:column="32">(<argument><expr><name pos:line="252" pos:column="33">stderr<pos:position pos:line="252" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="252" pos:column="41">"    sending %d objects\n"<pos:position pos:line="252" pos:column="67"/></literal></expr></argument>,
				<argument><expr><name pos:line="253" pos:column="33">objects_to_send<pos:position pos:line="253" pos:column="48"/></name></expr></argument>)<pos:position pos:line="253" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="253" pos:column="50"/></expr_stmt></block></then></if>

		<expr_stmt><expr><call><name pos:line="255" pos:column="17">run_request_queue<pos:position pos:line="255" pos:column="34"/></name><argument_list pos:line="255" pos:column="34">()<pos:position pos:line="255" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="255" pos:column="37"/></expr_stmt>

		<comment type="block" pos:line="257" pos:column="17">/* Update the remote branch if all went well */</comment>
		<if pos:line="258" pos:column="17">if <condition pos:line="258" pos:column="20">(<expr><name pos:line="258" pos:column="21">aborted<pos:position pos:line="258" pos:column="28"/></name> <operator pos:line="258" pos:column="29">||<pos:position pos:line="258" pos:column="31"/></operator> <operator pos:line="258" pos:column="32">!<pos:position pos:line="258" pos:column="33"/></operator><call><name pos:line="258" pos:column="33">update_remote<pos:position pos:line="258" pos:column="46"/></name><argument_list pos:line="258" pos:column="46">(<argument><expr><name><name pos:line="258" pos:column="47">ref<pos:position pos:line="258" pos:column="50"/></name><operator pos:line="258" pos:column="50">-&gt;<pos:position pos:line="258" pos:column="55"/></operator><name pos:line="258" pos:column="52">new_oid<pos:position pos:line="258" pos:column="59"/></name><operator pos:line="258" pos:column="59">.<pos:position pos:line="258" pos:column="60"/></operator><name pos:line="258" pos:column="60">hash<pos:position pos:line="258" pos:column="64"/></name></name></expr></argument>, <argument><expr><name pos:line="258" pos:column="66">ref_lock<pos:position pos:line="258" pos:column="74"/></name></expr></argument>)<pos:position pos:line="258" pos:column="75"/></argument_list></call></expr>)<pos:position pos:line="258" pos:column="76"/></condition><then pos:line="258" pos:column="76">
			<block type="pseudo"><expr_stmt><expr><name pos:line="259" pos:column="25">rc<pos:position pos:line="259" pos:column="27"/></name> <operator pos:line="259" pos:column="28">=<pos:position pos:line="259" pos:column="29"/></operator> <literal type="number" pos:line="259" pos:column="30">1<pos:position pos:line="259" pos:column="31"/></literal></expr>;<pos:position pos:line="259" pos:column="32"/></expr_stmt></block></then></if>

		<if pos:line="261" pos:column="17">if <condition pos:line="261" pos:column="20">(<expr><operator pos:line="261" pos:column="21">!<pos:position pos:line="261" pos:column="22"/></operator><name pos:line="261" pos:column="22">rc<pos:position pos:line="261" pos:column="24"/></name></expr>)<pos:position pos:line="261" pos:column="25"/></condition><then pos:line="261" pos:column="25">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="262" pos:column="25">fprintf<pos:position pos:line="262" pos:column="32"/></name><argument_list pos:line="262" pos:column="32">(<argument><expr><name pos:line="262" pos:column="33">stderr<pos:position pos:line="262" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="262" pos:column="41">"    done\n"<pos:position pos:line="262" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="262" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="262" pos:column="55"/></expr_stmt></block></then></if>
		<if pos:line="263" pos:column="17">if <condition pos:line="263" pos:column="20">(<expr><name pos:line="263" pos:column="21">helper_status<pos:position pos:line="263" pos:column="34"/></name></expr>)<pos:position pos:line="263" pos:column="35"/></condition><then pos:line="263" pos:column="35">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="264" pos:column="25">printf<pos:position pos:line="264" pos:column="31"/></name><argument_list pos:line="264" pos:column="31">(<argument><expr><literal type="string" pos:line="264" pos:column="32">"%s %s\n"<pos:position pos:line="264" pos:column="41"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="264" pos:column="43">!<pos:position pos:line="264" pos:column="44"/></operator><name pos:line="264" pos:column="44">rc<pos:position pos:line="264" pos:column="46"/></name></expr> ?<pos:position pos:line="264" pos:column="48"/></condition><then pos:line="264" pos:column="48"> <expr><literal type="string" pos:line="264" pos:column="49">"ok"<pos:position pos:line="264" pos:column="53"/></literal></expr> <pos:position pos:line="264" pos:column="54"/></then><else pos:line="264" pos:column="54">: <expr><literal type="string" pos:line="264" pos:column="56">"error"<pos:position pos:line="264" pos:column="63"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name><name pos:line="264" pos:column="65">ref<pos:position pos:line="264" pos:column="68"/></name><operator pos:line="264" pos:column="68">-&gt;<pos:position pos:line="264" pos:column="73"/></operator><name pos:line="264" pos:column="70">name<pos:position pos:line="264" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="264" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="264" pos:column="76"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="265" pos:column="17">unlock_remote<pos:position pos:line="265" pos:column="30"/></name><argument_list pos:line="265" pos:column="30">(<argument><expr><name pos:line="265" pos:column="31">ref_lock<pos:position pos:line="265" pos:column="39"/></name></expr></argument>)<pos:position pos:line="265" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="265" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="266" pos:column="17">check_locks<pos:position pos:line="266" pos:column="28"/></name><argument_list pos:line="266" pos:column="28">()<pos:position pos:line="266" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="266" pos:column="31"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="267" pos:column="17">argv_array_clear<pos:position pos:line="267" pos:column="33"/></name><argument_list pos:line="267" pos:column="33">(<argument><expr><operator pos:line="267" pos:column="34">&amp;<pos:position pos:line="267" pos:column="39"/></operator><name pos:line="267" pos:column="35">commit_argv<pos:position pos:line="267" pos:column="46"/></name></expr></argument>)<pos:position pos:line="267" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="267" pos:column="48"/></expr_stmt>
	}<pos:position pos:line="268" pos:column="10"/></block></for>

	<comment type="block" pos:line="270" pos:column="9">/* Update remote server info if appropriate */</comment>
	<if pos:line="271" pos:column="9">if <condition pos:line="271" pos:column="12">(<expr><name><name pos:line="271" pos:column="13">repo<pos:position pos:line="271" pos:column="17"/></name><operator pos:line="271" pos:column="17">-&gt;<pos:position pos:line="271" pos:column="22"/></operator><name pos:line="271" pos:column="19">has_info_refs<pos:position pos:line="271" pos:column="32"/></name></name> <operator pos:line="271" pos:column="33">&amp;&amp;<pos:position pos:line="271" pos:column="43"/></operator> <name pos:line="271" pos:column="36">new_refs<pos:position pos:line="271" pos:column="44"/></name></expr>)<pos:position pos:line="271" pos:column="45"/></condition><then pos:line="271" pos:column="45"> <block pos:line="271" pos:column="46">{
		<if pos:line="272" pos:column="17">if <condition pos:line="272" pos:column="20">(<expr><name pos:line="272" pos:column="21">info_ref_lock<pos:position pos:line="272" pos:column="34"/></name> <operator pos:line="272" pos:column="35">&amp;&amp;<pos:position pos:line="272" pos:column="45"/></operator> <name><name pos:line="272" pos:column="38">repo<pos:position pos:line="272" pos:column="42"/></name><operator pos:line="272" pos:column="42">-&gt;<pos:position pos:line="272" pos:column="47"/></operator><name pos:line="272" pos:column="44">can_update_info_refs<pos:position pos:line="272" pos:column="64"/></name></name></expr>)<pos:position pos:line="272" pos:column="65"/></condition><then pos:line="272" pos:column="65"> <block pos:line="272" pos:column="66">{
			<expr_stmt><expr><call><name pos:line="273" pos:column="25">fprintf<pos:position pos:line="273" pos:column="32"/></name><argument_list pos:line="273" pos:column="32">(<argument><expr><name pos:line="273" pos:column="33">stderr<pos:position pos:line="273" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="273" pos:column="41">"Updating remote server info\n"<pos:position pos:line="273" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="273" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="273" pos:column="74"/></expr_stmt>
			<if pos:line="274" pos:column="25">if <condition pos:line="274" pos:column="28">(<expr><operator pos:line="274" pos:column="29">!<pos:position pos:line="274" pos:column="30"/></operator><name pos:line="274" pos:column="30">dry_run<pos:position pos:line="274" pos:column="37"/></name></expr>)<pos:position pos:line="274" pos:column="38"/></condition><then pos:line="274" pos:column="38">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="275" pos:column="33">update_remote_info_refs<pos:position pos:line="275" pos:column="56"/></name><argument_list pos:line="275" pos:column="56">(<argument><expr><name pos:line="275" pos:column="57">info_ref_lock<pos:position pos:line="275" pos:column="70"/></name></expr></argument>)<pos:position pos:line="275" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="275" pos:column="72"/></expr_stmt></block></then></if>
		}<pos:position pos:line="276" pos:column="18"/></block></then> <else pos:line="276" pos:column="19">else <block pos:line="276" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="277" pos:column="25">fprintf<pos:position pos:line="277" pos:column="32"/></name><argument_list pos:line="277" pos:column="32">(<argument><expr><name pos:line="277" pos:column="33">stderr<pos:position pos:line="277" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="277" pos:column="41">"Unable to update server info\n"<pos:position pos:line="277" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="277" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="277" pos:column="75"/></expr_stmt>
		}<pos:position pos:line="278" pos:column="18"/></block></else></if>
	}<pos:position pos:line="279" pos:column="10"/></block></then></if>

 <label><name pos:line="281" pos:column="2">cleanup<pos:position pos:line="281" pos:column="9"/></name>:<pos:position pos:line="281" pos:column="10"/></label>
	<if pos:line="282" pos:column="9">if <condition pos:line="282" pos:column="12">(<expr><name pos:line="282" pos:column="13">info_ref_lock<pos:position pos:line="282" pos:column="26"/></name></expr>)<pos:position pos:line="282" pos:column="27"/></condition><then pos:line="282" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="283" pos:column="17">unlock_remote<pos:position pos:line="283" pos:column="30"/></name><argument_list pos:line="283" pos:column="30">(<argument><expr><name pos:line="283" pos:column="31">info_ref_lock<pos:position pos:line="283" pos:column="44"/></name></expr></argument>)<pos:position pos:line="283" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="283" pos:column="46"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="284" pos:column="9">free<pos:position pos:line="284" pos:column="13"/></name><argument_list pos:line="284" pos:column="13">(<argument><expr><name pos:line="284" pos:column="14">repo<pos:position pos:line="284" pos:column="18"/></name></expr></argument>)<pos:position pos:line="284" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="284" pos:column="20"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="286" pos:column="9">http_cleanup<pos:position pos:line="286" pos:column="21"/></name><argument_list pos:line="286" pos:column="21">()<pos:position pos:line="286" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="286" pos:column="24"/></expr_stmt>

	<expr_stmt><expr><name pos:line="288" pos:column="9">request<pos:position pos:line="288" pos:column="16"/></name> <operator pos:line="288" pos:column="17">=<pos:position pos:line="288" pos:column="18"/></operator> <name pos:line="288" pos:column="19">request_queue_head<pos:position pos:line="288" pos:column="37"/></name></expr>;<pos:position pos:line="288" pos:column="38"/></expr_stmt>
	<while pos:line="289" pos:column="9">while <condition pos:line="289" pos:column="15">(<expr><name pos:line="289" pos:column="16">request<pos:position pos:line="289" pos:column="23"/></name> <operator pos:line="289" pos:column="24">!=<pos:position pos:line="289" pos:column="26"/></operator> <name pos:line="289" pos:column="27">NULL<pos:position pos:line="289" pos:column="31"/></name></expr>)<pos:position pos:line="289" pos:column="32"/></condition> <block pos:line="289" pos:column="33">{
		<expr_stmt><expr><name pos:line="290" pos:column="17">next_request<pos:position pos:line="290" pos:column="29"/></name> <operator pos:line="290" pos:column="30">=<pos:position pos:line="290" pos:column="31"/></operator> <name><name pos:line="290" pos:column="32">request<pos:position pos:line="290" pos:column="39"/></name><operator pos:line="290" pos:column="39">-&gt;<pos:position pos:line="290" pos:column="44"/></operator><name pos:line="290" pos:column="41">next<pos:position pos:line="290" pos:column="45"/></name></name></expr>;<pos:position pos:line="290" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="291" pos:column="17">release_request<pos:position pos:line="291" pos:column="32"/></name><argument_list pos:line="291" pos:column="32">(<argument><expr><name pos:line="291" pos:column="33">request<pos:position pos:line="291" pos:column="40"/></name></expr></argument>)<pos:position pos:line="291" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="291" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><name pos:line="292" pos:column="17">request<pos:position pos:line="292" pos:column="24"/></name> <operator pos:line="292" pos:column="25">=<pos:position pos:line="292" pos:column="26"/></operator> <name pos:line="292" pos:column="27">next_request<pos:position pos:line="292" pos:column="39"/></name></expr>;<pos:position pos:line="292" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="293" pos:column="10"/></block></while>

	<return pos:line="295" pos:column="9">return <expr><name pos:line="295" pos:column="16">rc<pos:position pos:line="295" pos:column="18"/></name></expr>;<pos:position pos:line="295" pos:column="19"/></return>
}<pos:position pos:line="296" pos:column="2"/></block></function></unit>

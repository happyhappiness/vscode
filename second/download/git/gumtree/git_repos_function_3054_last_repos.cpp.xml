<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3054_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">check_if_different<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">trailer_item<pos:position pos:line="1" pos:column="50"/></name></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">in_tok<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>,
			      <parameter><decl><type><name><name pos:line="2" pos:column="31">struct<pos:position pos:line="2" pos:column="37"/></name> <name pos:line="2" pos:column="38">arg_item<pos:position pos:line="2" pos:column="46"/></name></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">arg_tok<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>,
			      <parameter><decl><type><name pos:line="3" pos:column="31">int<pos:position pos:line="3" pos:column="34"/></name></type> <name pos:line="3" pos:column="35">check_all<pos:position pos:line="3" pos:column="44"/></name></decl></parameter>,
			      <parameter><decl><type><name><name pos:line="4" pos:column="31">struct<pos:position pos:line="4" pos:column="37"/></name> <name pos:line="4" pos:column="38">list_head<pos:position pos:line="4" pos:column="47"/></name></name> <modifier pos:line="4" pos:column="48">*<pos:position pos:line="4" pos:column="49"/></modifier></type><name pos:line="4" pos:column="49">head<pos:position pos:line="4" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="54"/></parameter_list>
<block pos:line="5" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">enum<pos:position pos:line="6" pos:column="13"/></name> <name pos:line="6" pos:column="14">action_where<pos:position pos:line="6" pos:column="26"/></name></name></type> <name pos:line="6" pos:column="27">where<pos:position pos:line="6" pos:column="32"/></name> <init pos:line="6" pos:column="33">= <expr><name><name pos:line="6" pos:column="35">arg_tok<pos:position pos:line="6" pos:column="42"/></name><operator pos:line="6" pos:column="42">-&gt;<pos:position pos:line="6" pos:column="47"/></operator><name pos:line="6" pos:column="44">conf<pos:position pos:line="6" pos:column="48"/></name><operator pos:line="6" pos:column="48">.<pos:position pos:line="6" pos:column="49"/></operator><name pos:line="6" pos:column="49">where<pos:position pos:line="6" pos:column="54"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="55"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">list_head<pos:position pos:line="7" pos:column="25"/></name></name> <modifier pos:line="7" pos:column="26">*<pos:position pos:line="7" pos:column="27"/></modifier></type><name pos:line="7" pos:column="27">next_head<pos:position pos:line="7" pos:column="36"/></name></decl>;<pos:position pos:line="7" pos:column="37"/></decl_stmt>
	<do pos:line="8" pos:column="9">do <block pos:line="8" pos:column="12">{
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><call><name pos:line="9" pos:column="21">same_trailer<pos:position pos:line="9" pos:column="33"/></name><argument_list pos:line="9" pos:column="33">(<argument><expr><name pos:line="9" pos:column="34">in_tok<pos:position pos:line="9" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="42">arg_tok<pos:position pos:line="9" pos:column="49"/></name></expr></argument>)<pos:position pos:line="9" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="51"/></condition><then pos:line="9" pos:column="51">
			<block type="pseudo"><return pos:line="10" pos:column="25">return <expr><literal type="number" pos:line="10" pos:column="32">0<pos:position pos:line="10" pos:column="33"/></literal></expr>;<pos:position pos:line="10" pos:column="34"/></return></block></then></if>
		<comment type="block" pos:line="11" pos:column="17">/*
		 * if we want to add a trailer after another one,
		 * we have to check those before this one
		 */</comment>
		<expr_stmt><expr><name pos:line="15" pos:column="17">next_head<pos:position pos:line="15" pos:column="26"/></name> <operator pos:line="15" pos:column="27">=<pos:position pos:line="15" pos:column="28"/></operator> <ternary><condition><expr><call><name pos:line="15" pos:column="29">after_or_end<pos:position pos:line="15" pos:column="41"/></name><argument_list pos:line="15" pos:column="41">(<argument><expr><name pos:line="15" pos:column="42">where<pos:position pos:line="15" pos:column="47"/></name></expr></argument>)<pos:position pos:line="15" pos:column="48"/></argument_list></call></expr> ?<pos:position pos:line="15" pos:column="50"/></condition><then pos:line="15" pos:column="50"> <expr><name><name pos:line="15" pos:column="51">in_tok<pos:position pos:line="15" pos:column="57"/></name><operator pos:line="15" pos:column="57">-&gt;<pos:position pos:line="15" pos:column="62"/></operator><name pos:line="15" pos:column="59">list<pos:position pos:line="15" pos:column="63"/></name><operator pos:line="15" pos:column="63">.<pos:position pos:line="15" pos:column="64"/></operator><name pos:line="15" pos:column="64">prev<pos:position pos:line="15" pos:column="68"/></name></name></expr>
						<pos:position pos:line="16" pos:column="7"/></then><else pos:line="16" pos:column="49">: <expr><name><name pos:line="16" pos:column="51">in_tok<pos:position pos:line="16" pos:column="57"/></name><operator pos:line="16" pos:column="57">-&gt;<pos:position pos:line="16" pos:column="62"/></operator><name pos:line="16" pos:column="59">list<pos:position pos:line="16" pos:column="63"/></name><operator pos:line="16" pos:column="63">.<pos:position pos:line="16" pos:column="64"/></operator><name pos:line="16" pos:column="64">next<pos:position pos:line="16" pos:column="68"/></name></name></expr></else></ternary></expr>;<pos:position pos:line="16" pos:column="69"/></expr_stmt>
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><name pos:line="17" pos:column="21">next_head<pos:position pos:line="17" pos:column="30"/></name> <operator pos:line="17" pos:column="31">==<pos:position pos:line="17" pos:column="33"/></operator> <name pos:line="17" pos:column="34">head<pos:position pos:line="17" pos:column="38"/></name></expr>)<pos:position pos:line="17" pos:column="39"/></condition><then pos:line="17" pos:column="39">
			<block type="pseudo"><break pos:line="18" pos:column="25">break;<pos:position pos:line="18" pos:column="31"/></break></block></then></if>
		<expr_stmt><expr><name pos:line="19" pos:column="17">in_tok<pos:position pos:line="19" pos:column="23"/></name> <operator pos:line="19" pos:column="24">=<pos:position pos:line="19" pos:column="25"/></operator> <call><name pos:line="19" pos:column="26">list_entry<pos:position pos:line="19" pos:column="36"/></name><argument_list pos:line="19" pos:column="36">(<argument><expr><name pos:line="19" pos:column="37">next_head<pos:position pos:line="19" pos:column="46"/></name></expr></argument>, <argument><expr pos:line="19" pos:column="48">struct <name pos:line="19" pos:column="55">trailer_item<pos:position pos:line="19" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="69">list<pos:position pos:line="19" pos:column="73"/></name></expr></argument>)<pos:position pos:line="19" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="75"/></expr_stmt>
	}<pos:position pos:line="20" pos:column="10"/></block> while <condition pos:line="20" pos:column="17">(<expr><name pos:line="20" pos:column="18">check_all<pos:position pos:line="20" pos:column="27"/></name></expr>)<pos:position pos:line="20" pos:column="28"/></condition>;<pos:position pos:line="20" pos:column="29"/></do>
	<return pos:line="21" pos:column="9">return <expr><literal type="number" pos:line="21" pos:column="16">1<pos:position pos:line="21" pos:column="17"/></literal></expr>;<pos:position pos:line="21" pos:column="18"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

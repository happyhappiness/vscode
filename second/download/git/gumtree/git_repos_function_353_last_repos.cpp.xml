<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_353_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">add_index_entry<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name><name pos:line="1" pos:column="21">struct<pos:position pos:line="1" pos:column="27"/></name> <name pos:line="1" pos:column="28">index_state<pos:position pos:line="1" pos:column="39"/></name></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">istate<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="49">struct<pos:position pos:line="1" pos:column="55"/></name> <name pos:line="1" pos:column="56">cache_entry<pos:position pos:line="1" pos:column="67"/></name></name> <modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier></type><name pos:line="1" pos:column="69">ce<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="73">int<pos:position pos:line="1" pos:column="76"/></name></type> <name pos:line="1" pos:column="77">option<pos:position pos:line="1" pos:column="83"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="84"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">pos<pos:position pos:line="3" pos:column="16"/></name></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">option<pos:position pos:line="5" pos:column="19"/></name> <operator pos:line="5" pos:column="20">&amp;<pos:position pos:line="5" pos:column="25"/></operator> <name pos:line="5" pos:column="22">ADD_CACHE_JUST_APPEND<pos:position pos:line="5" pos:column="43"/></name></expr>)<pos:position pos:line="5" pos:column="44"/></condition><then pos:line="5" pos:column="44">
		<block type="pseudo"><expr_stmt><expr><name pos:line="6" pos:column="17">pos<pos:position pos:line="6" pos:column="20"/></name> <operator pos:line="6" pos:column="21">=<pos:position pos:line="6" pos:column="22"/></operator> <name><name pos:line="6" pos:column="23">istate<pos:position pos:line="6" pos:column="29"/></name><operator pos:line="6" pos:column="29">-&gt;<pos:position pos:line="6" pos:column="34"/></operator><name pos:line="6" pos:column="31">cache_nr<pos:position pos:line="6" pos:column="39"/></name></name></expr>;<pos:position pos:line="6" pos:column="40"/></expr_stmt></block></then>
	<else pos:line="7" pos:column="9">else <block pos:line="7" pos:column="14">{
		<decl_stmt><decl><type><name pos:line="8" pos:column="17">int<pos:position pos:line="8" pos:column="20"/></name></type> <name pos:line="8" pos:column="21">ret<pos:position pos:line="8" pos:column="24"/></name></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>
		<expr_stmt><expr><name pos:line="9" pos:column="17">ret<pos:position pos:line="9" pos:column="20"/></name> <operator pos:line="9" pos:column="21">=<pos:position pos:line="9" pos:column="22"/></operator> <call><name pos:line="9" pos:column="23">add_index_entry_with_check<pos:position pos:line="9" pos:column="49"/></name><argument_list pos:line="9" pos:column="49">(<argument><expr><name pos:line="9" pos:column="50">istate<pos:position pos:line="9" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="58">ce<pos:position pos:line="9" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="62">option<pos:position pos:line="9" pos:column="68"/></name></expr></argument>)<pos:position pos:line="9" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="70"/></expr_stmt>
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><name pos:line="10" pos:column="21">ret<pos:position pos:line="10" pos:column="24"/></name> <operator pos:line="10" pos:column="25">&lt;=<pos:position pos:line="10" pos:column="30"/></operator> <literal type="number" pos:line="10" pos:column="28">0<pos:position pos:line="10" pos:column="29"/></literal></expr>)<pos:position pos:line="10" pos:column="30"/></condition><then pos:line="10" pos:column="30">
			<block type="pseudo"><return pos:line="11" pos:column="25">return <expr><name pos:line="11" pos:column="32">ret<pos:position pos:line="11" pos:column="35"/></name></expr>;<pos:position pos:line="11" pos:column="36"/></return></block></then></if>
		<expr_stmt><expr><name pos:line="12" pos:column="17">pos<pos:position pos:line="12" pos:column="20"/></name> <operator pos:line="12" pos:column="21">=<pos:position pos:line="12" pos:column="22"/></operator> <name pos:line="12" pos:column="23">ret<pos:position pos:line="12" pos:column="26"/></name> <operator pos:line="12" pos:column="27">-<pos:position pos:line="12" pos:column="28"/></operator> <literal type="number" pos:line="12" pos:column="29">1<pos:position pos:line="12" pos:column="30"/></literal></expr>;<pos:position pos:line="12" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="13" pos:column="10"/></block></else></if>

	<comment type="block" pos:line="15" pos:column="9">/* Make sure the array is big enough .. */</comment>
	<expr_stmt><expr><call><name pos:line="16" pos:column="9">ALLOC_GROW<pos:position pos:line="16" pos:column="19"/></name><argument_list pos:line="16" pos:column="19">(<argument><expr><name><name pos:line="16" pos:column="20">istate<pos:position pos:line="16" pos:column="26"/></name><operator pos:line="16" pos:column="26">-&gt;<pos:position pos:line="16" pos:column="31"/></operator><name pos:line="16" pos:column="28">cache<pos:position pos:line="16" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="35">istate<pos:position pos:line="16" pos:column="41"/></name><operator pos:line="16" pos:column="41">-&gt;<pos:position pos:line="16" pos:column="46"/></operator><name pos:line="16" pos:column="43">cache_nr<pos:position pos:line="16" pos:column="51"/></name></name> <operator pos:line="16" pos:column="52">+<pos:position pos:line="16" pos:column="53"/></operator> <literal type="number" pos:line="16" pos:column="54">1<pos:position pos:line="16" pos:column="55"/></literal></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="57">istate<pos:position pos:line="16" pos:column="63"/></name><operator pos:line="16" pos:column="63">-&gt;<pos:position pos:line="16" pos:column="68"/></operator><name pos:line="16" pos:column="65">cache_alloc<pos:position pos:line="16" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="78"/></expr_stmt>

	<comment type="block" pos:line="18" pos:column="9">/* Add it in.. */</comment>
	<expr_stmt><expr><name><name pos:line="19" pos:column="9">istate<pos:position pos:line="19" pos:column="15"/></name><operator pos:line="19" pos:column="15">-&gt;<pos:position pos:line="19" pos:column="20"/></operator><name pos:line="19" pos:column="17">cache_nr<pos:position pos:line="19" pos:column="25"/></name></name><operator pos:line="19" pos:column="25">++<pos:position pos:line="19" pos:column="27"/></operator></expr>;<pos:position pos:line="19" pos:column="28"/></expr_stmt>
	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name><name pos:line="20" pos:column="13">istate<pos:position pos:line="20" pos:column="19"/></name><operator pos:line="20" pos:column="19">-&gt;<pos:position pos:line="20" pos:column="24"/></operator><name pos:line="20" pos:column="21">cache_nr<pos:position pos:line="20" pos:column="29"/></name></name> <operator pos:line="20" pos:column="30">&gt;<pos:position pos:line="20" pos:column="34"/></operator> <name pos:line="20" pos:column="32">pos<pos:position pos:line="20" pos:column="35"/></name> <operator pos:line="20" pos:column="36">+<pos:position pos:line="20" pos:column="37"/></operator> <literal type="number" pos:line="20" pos:column="38">1<pos:position pos:line="20" pos:column="39"/></literal></expr>)<pos:position pos:line="20" pos:column="40"/></condition><then pos:line="20" pos:column="40">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="17">memmove<pos:position pos:line="21" pos:column="24"/></name><argument_list pos:line="21" pos:column="24">(<argument><expr><name><name pos:line="21" pos:column="25">istate<pos:position pos:line="21" pos:column="31"/></name><operator pos:line="21" pos:column="31">-&gt;<pos:position pos:line="21" pos:column="36"/></operator><name pos:line="21" pos:column="33">cache<pos:position pos:line="21" pos:column="38"/></name></name> <operator pos:line="21" pos:column="39">+<pos:position pos:line="21" pos:column="40"/></operator> <name pos:line="21" pos:column="41">pos<pos:position pos:line="21" pos:column="44"/></name> <operator pos:line="21" pos:column="45">+<pos:position pos:line="21" pos:column="46"/></operator> <literal type="number" pos:line="21" pos:column="47">1<pos:position pos:line="21" pos:column="48"/></literal></expr></argument>,
			<argument><expr><name><name pos:line="22" pos:column="25">istate<pos:position pos:line="22" pos:column="31"/></name><operator pos:line="22" pos:column="31">-&gt;<pos:position pos:line="22" pos:column="36"/></operator><name pos:line="22" pos:column="33">cache<pos:position pos:line="22" pos:column="38"/></name></name> <operator pos:line="22" pos:column="39">+<pos:position pos:line="22" pos:column="40"/></operator> <name pos:line="22" pos:column="41">pos<pos:position pos:line="22" pos:column="44"/></name></expr></argument>,
			<argument><expr><operator pos:line="23" pos:column="25">(<pos:position pos:line="23" pos:column="26"/></operator><name><name pos:line="23" pos:column="26">istate<pos:position pos:line="23" pos:column="32"/></name><operator pos:line="23" pos:column="32">-&gt;<pos:position pos:line="23" pos:column="37"/></operator><name pos:line="23" pos:column="34">cache_nr<pos:position pos:line="23" pos:column="42"/></name></name> <operator pos:line="23" pos:column="43">-<pos:position pos:line="23" pos:column="44"/></operator> <name pos:line="23" pos:column="45">pos<pos:position pos:line="23" pos:column="48"/></name> <operator pos:line="23" pos:column="49">-<pos:position pos:line="23" pos:column="50"/></operator> <literal type="number" pos:line="23" pos:column="51">1<pos:position pos:line="23" pos:column="52"/></literal><operator pos:line="23" pos:column="52">)<pos:position pos:line="23" pos:column="53"/></operator> <operator pos:line="23" pos:column="54">*<pos:position pos:line="23" pos:column="55"/></operator> <sizeof pos:line="23" pos:column="56">sizeof<argument_list pos:line="23" pos:column="62">(<argument><expr><name pos:line="23" pos:column="63">ce<pos:position pos:line="23" pos:column="65"/></name></expr></argument>)<pos:position pos:line="23" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="23" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="68"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="24" pos:column="9">set_index_entry<pos:position pos:line="24" pos:column="24"/></name><argument_list pos:line="24" pos:column="24">(<argument><expr><name pos:line="24" pos:column="25">istate<pos:position pos:line="24" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="33">pos<pos:position pos:line="24" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="38">ce<pos:position pos:line="24" pos:column="40"/></name></expr></argument>)<pos:position pos:line="24" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="25" pos:column="9">istate<pos:position pos:line="25" pos:column="15"/></name><operator pos:line="25" pos:column="15">-&gt;<pos:position pos:line="25" pos:column="20"/></operator><name pos:line="25" pos:column="17">cache_changed<pos:position pos:line="25" pos:column="30"/></name></name> <operator pos:line="25" pos:column="31">|=<pos:position pos:line="25" pos:column="33"/></operator> <name pos:line="25" pos:column="34">CE_ENTRY_ADDED<pos:position pos:line="25" pos:column="48"/></name></expr>;<pos:position pos:line="25" pos:column="49"/></expr_stmt>
	<return pos:line="26" pos:column="9">return <expr><literal type="number" pos:line="26" pos:column="16">0<pos:position pos:line="26" pos:column="17"/></literal></expr>;<pos:position pos:line="26" pos:column="18"/></return>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

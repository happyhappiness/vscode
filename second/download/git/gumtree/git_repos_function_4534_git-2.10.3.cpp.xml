<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4534_git-2.10.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">checkout_all<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">prefix<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">int<pos:position pos:line="1" pos:column="49"/></name></type> <name pos:line="1" pos:column="50">prefix_length<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="16">errs<pos:position pos:line="3" pos:column="20"/></name> <init pos:line="3" pos:column="21">= <expr><literal type="number" pos:line="3" pos:column="23">0<pos:position pos:line="3" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">cache_entry<pos:position pos:line="4" pos:column="27"/></name></name> <modifier pos:line="4" pos:column="28">*<pos:position pos:line="4" pos:column="29"/></modifier></type><name pos:line="4" pos:column="29">last_ce<pos:position pos:line="4" pos:column="36"/></name> <init pos:line="4" pos:column="37">= <expr><name pos:line="4" pos:column="39">NULL<pos:position pos:line="4" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="44"/></decl_stmt>

	<for pos:line="6" pos:column="9">for <control pos:line="6" pos:column="13">(<init><expr><name pos:line="6" pos:column="14">i<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">=<pos:position pos:line="6" pos:column="17"/></operator> <literal type="number" pos:line="6" pos:column="18">0<pos:position pos:line="6" pos:column="19"/></literal></expr>;<pos:position pos:line="6" pos:column="20"/></init> <condition><expr><name pos:line="6" pos:column="21">i<pos:position pos:line="6" pos:column="22"/></name> <operator pos:line="6" pos:column="23">&lt;<pos:position pos:line="6" pos:column="27"/></operator> <name pos:line="6" pos:column="25">active_nr<pos:position pos:line="6" pos:column="34"/></name></expr> ;<pos:position pos:line="6" pos:column="36"/></condition> <incr><expr><name pos:line="6" pos:column="37">i<pos:position pos:line="6" pos:column="38"/></name><operator pos:line="6" pos:column="38">++<pos:position pos:line="6" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="6" pos:column="41"/></control> <block pos:line="6" pos:column="42">{
		<decl_stmt><decl><type><name><name pos:line="7" pos:column="17">struct<pos:position pos:line="7" pos:column="23"/></name> <name pos:line="7" pos:column="24">cache_entry<pos:position pos:line="7" pos:column="35"/></name></name> <modifier pos:line="7" pos:column="36">*<pos:position pos:line="7" pos:column="37"/></modifier></type><name pos:line="7" pos:column="37">ce<pos:position pos:line="7" pos:column="39"/></name> <init pos:line="7" pos:column="40">= <expr><name><name pos:line="7" pos:column="42">active_cache<pos:position pos:line="7" pos:column="54"/></name><index pos:line="7" pos:column="54">[<expr><name pos:line="7" pos:column="55">i<pos:position pos:line="7" pos:column="56"/></name></expr>]<pos:position pos:line="7" pos:column="57"/></index></name></expr></init></decl>;<pos:position pos:line="7" pos:column="58"/></decl_stmt>
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><call><name pos:line="8" pos:column="21">ce_stage<pos:position pos:line="8" pos:column="29"/></name><argument_list pos:line="8" pos:column="29">(<argument><expr><name pos:line="8" pos:column="30">ce<pos:position pos:line="8" pos:column="32"/></name></expr></argument>)<pos:position pos:line="8" pos:column="33"/></argument_list></call> <operator pos:line="8" pos:column="34">!=<pos:position pos:line="8" pos:column="36"/></operator> <name pos:line="8" pos:column="37">checkout_stage<pos:position pos:line="8" pos:column="51"/></name>
		    <operator pos:line="9" pos:column="21">&amp;&amp;<pos:position pos:line="9" pos:column="31"/></operator> <operator pos:line="9" pos:column="24">(<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="25">CHECKOUT_ALL<pos:position pos:line="9" pos:column="37"/></name> <operator pos:line="9" pos:column="38">!=<pos:position pos:line="9" pos:column="40"/></operator> <name pos:line="9" pos:column="41">checkout_stage<pos:position pos:line="9" pos:column="55"/></name> <operator pos:line="9" pos:column="56">||<pos:position pos:line="9" pos:column="58"/></operator> <operator pos:line="9" pos:column="59">!<pos:position pos:line="9" pos:column="60"/></operator><call><name pos:line="9" pos:column="60">ce_stage<pos:position pos:line="9" pos:column="68"/></name><argument_list pos:line="9" pos:column="68">(<argument><expr><name pos:line="9" pos:column="69">ce<pos:position pos:line="9" pos:column="71"/></name></expr></argument>)<pos:position pos:line="9" pos:column="72"/></argument_list></call><operator pos:line="9" pos:column="72">)<pos:position pos:line="9" pos:column="73"/></operator></expr>)<pos:position pos:line="9" pos:column="74"/></condition><then pos:line="9" pos:column="74">
			<block type="pseudo"><continue pos:line="10" pos:column="25">continue;<pos:position pos:line="10" pos:column="34"/></continue></block></then></if>
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><name pos:line="11" pos:column="21">prefix<pos:position pos:line="11" pos:column="27"/></name> <operator pos:line="11" pos:column="28">&amp;&amp;<pos:position pos:line="11" pos:column="38"/></operator> <operator pos:line="11" pos:column="31">*<pos:position pos:line="11" pos:column="32"/></operator><name pos:line="11" pos:column="32">prefix<pos:position pos:line="11" pos:column="38"/></name> <operator pos:line="11" pos:column="39">&amp;&amp;<pos:position pos:line="11" pos:column="49"/></operator>
		    <operator pos:line="12" pos:column="21">(<pos:position pos:line="12" pos:column="22"/></operator><call><name pos:line="12" pos:column="22">ce_namelen<pos:position pos:line="12" pos:column="32"/></name><argument_list pos:line="12" pos:column="32">(<argument><expr><name pos:line="12" pos:column="33">ce<pos:position pos:line="12" pos:column="35"/></name></expr></argument>)<pos:position pos:line="12" pos:column="36"/></argument_list></call> <operator pos:line="12" pos:column="37">&lt;=<pos:position pos:line="12" pos:column="42"/></operator> <name pos:line="12" pos:column="40">prefix_length<pos:position pos:line="12" pos:column="53"/></name> <operator pos:line="12" pos:column="54">||<pos:position pos:line="12" pos:column="56"/></operator>
		     <call><name pos:line="13" pos:column="22">memcmp<pos:position pos:line="13" pos:column="28"/></name><argument_list pos:line="13" pos:column="28">(<argument><expr><name pos:line="13" pos:column="29">prefix<pos:position pos:line="13" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="37">ce<pos:position pos:line="13" pos:column="39"/></name><operator pos:line="13" pos:column="39">-&gt;<pos:position pos:line="13" pos:column="44"/></operator><name pos:line="13" pos:column="41">name<pos:position pos:line="13" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="47">prefix_length<pos:position pos:line="13" pos:column="60"/></name></expr></argument>)<pos:position pos:line="13" pos:column="61"/></argument_list></call><operator pos:line="13" pos:column="61">)<pos:position pos:line="13" pos:column="62"/></operator></expr>)<pos:position pos:line="13" pos:column="63"/></condition><then pos:line="13" pos:column="63">
			<block type="pseudo"><continue pos:line="14" pos:column="25">continue;<pos:position pos:line="14" pos:column="34"/></continue></block></then></if>
		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><name pos:line="15" pos:column="21">last_ce<pos:position pos:line="15" pos:column="28"/></name> <operator pos:line="15" pos:column="29">&amp;&amp;<pos:position pos:line="15" pos:column="39"/></operator> <name pos:line="15" pos:column="32">to_tempfile<pos:position pos:line="15" pos:column="43"/></name></expr>)<pos:position pos:line="15" pos:column="44"/></condition><then pos:line="15" pos:column="44"> <block pos:line="15" pos:column="45">{
			<if pos:line="16" pos:column="25">if <condition pos:line="16" pos:column="28">(<expr><call><name pos:line="16" pos:column="29">ce_namelen<pos:position pos:line="16" pos:column="39"/></name><argument_list pos:line="16" pos:column="39">(<argument><expr><name pos:line="16" pos:column="40">last_ce<pos:position pos:line="16" pos:column="47"/></name></expr></argument>)<pos:position pos:line="16" pos:column="48"/></argument_list></call> <operator pos:line="16" pos:column="49">!=<pos:position pos:line="16" pos:column="51"/></operator> <call><name pos:line="16" pos:column="52">ce_namelen<pos:position pos:line="16" pos:column="62"/></name><argument_list pos:line="16" pos:column="62">(<argument><expr><name pos:line="16" pos:column="63">ce<pos:position pos:line="16" pos:column="65"/></name></expr></argument>)<pos:position pos:line="16" pos:column="66"/></argument_list></call>
			    <operator pos:line="17" pos:column="29">||<pos:position pos:line="17" pos:column="31"/></operator> <call><name pos:line="17" pos:column="32">memcmp<pos:position pos:line="17" pos:column="38"/></name><argument_list pos:line="17" pos:column="38">(<argument><expr><name><name pos:line="17" pos:column="39">last_ce<pos:position pos:line="17" pos:column="46"/></name><operator pos:line="17" pos:column="46">-&gt;<pos:position pos:line="17" pos:column="51"/></operator><name pos:line="17" pos:column="48">name<pos:position pos:line="17" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="54">ce<pos:position pos:line="17" pos:column="56"/></name><operator pos:line="17" pos:column="56">-&gt;<pos:position pos:line="17" pos:column="61"/></operator><name pos:line="17" pos:column="58">name<pos:position pos:line="17" pos:column="62"/></name></name></expr></argument>, <argument><expr><call><name pos:line="17" pos:column="64">ce_namelen<pos:position pos:line="17" pos:column="74"/></name><argument_list pos:line="17" pos:column="74">(<argument><expr><name pos:line="17" pos:column="75">ce<pos:position pos:line="17" pos:column="77"/></name></expr></argument>)<pos:position pos:line="17" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="79"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="80"/></condition><then pos:line="17" pos:column="80">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="33">write_tempfile_record<pos:position pos:line="18" pos:column="54"/></name><argument_list pos:line="18" pos:column="54">(<argument><expr><name><name pos:line="18" pos:column="55">last_ce<pos:position pos:line="18" pos:column="62"/></name><operator pos:line="18" pos:column="62">-&gt;<pos:position pos:line="18" pos:column="67"/></operator><name pos:line="18" pos:column="64">name<pos:position pos:line="18" pos:column="68"/></name></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="70">prefix<pos:position pos:line="18" pos:column="76"/></name></expr></argument>)<pos:position pos:line="18" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="78"/></expr_stmt></block></then></if>
		}<pos:position pos:line="19" pos:column="18"/></block></then></if>
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><call><name pos:line="20" pos:column="21">checkout_entry<pos:position pos:line="20" pos:column="35"/></name><argument_list pos:line="20" pos:column="35">(<argument><expr><name pos:line="20" pos:column="36">ce<pos:position pos:line="20" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="40">&amp;<pos:position pos:line="20" pos:column="45"/></operator><name pos:line="20" pos:column="41">state<pos:position pos:line="20" pos:column="46"/></name></expr></argument>,
		    <argument><expr><ternary><condition><expr><name pos:line="21" pos:column="21">to_tempfile<pos:position pos:line="21" pos:column="32"/></name></expr> ?<pos:position pos:line="21" pos:column="34"/></condition><then pos:line="21" pos:column="34"> <expr><name><name pos:line="21" pos:column="35">topath<pos:position pos:line="21" pos:column="41"/></name><index pos:line="21" pos:column="41">[<expr><call><name pos:line="21" pos:column="42">ce_stage<pos:position pos:line="21" pos:column="50"/></name><argument_list pos:line="21" pos:column="50">(<argument><expr><name pos:line="21" pos:column="51">ce<pos:position pos:line="21" pos:column="53"/></name></expr></argument>)<pos:position pos:line="21" pos:column="54"/></argument_list></call></expr>]<pos:position pos:line="21" pos:column="55"/></index></name></expr> <pos:position pos:line="21" pos:column="56"/></then><else pos:line="21" pos:column="56">: <expr><name pos:line="21" pos:column="58">NULL<pos:position pos:line="21" pos:column="62"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="21" pos:column="63"/></argument_list></call> <operator pos:line="21" pos:column="64">&lt;<pos:position pos:line="21" pos:column="68"/></operator> <literal type="number" pos:line="21" pos:column="66">0<pos:position pos:line="21" pos:column="67"/></literal></expr>)<pos:position pos:line="21" pos:column="68"/></condition><then pos:line="21" pos:column="68">
			<block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="25">errs<pos:position pos:line="22" pos:column="29"/></name><operator pos:line="22" pos:column="29">++<pos:position pos:line="22" pos:column="31"/></operator></expr>;<pos:position pos:line="22" pos:column="32"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="23" pos:column="17">last_ce<pos:position pos:line="23" pos:column="24"/></name> <operator pos:line="23" pos:column="25">=<pos:position pos:line="23" pos:column="26"/></operator> <name pos:line="23" pos:column="27">ce<pos:position pos:line="23" pos:column="29"/></name></expr>;<pos:position pos:line="23" pos:column="30"/></expr_stmt>
	}<pos:position pos:line="24" pos:column="10"/></block></for>
	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">last_ce<pos:position pos:line="25" pos:column="20"/></name> <operator pos:line="25" pos:column="21">&amp;&amp;<pos:position pos:line="25" pos:column="31"/></operator> <name pos:line="25" pos:column="24">to_tempfile<pos:position pos:line="25" pos:column="35"/></name></expr>)<pos:position pos:line="25" pos:column="36"/></condition><then pos:line="25" pos:column="36">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="17">write_tempfile_record<pos:position pos:line="26" pos:column="38"/></name><argument_list pos:line="26" pos:column="38">(<argument><expr><name><name pos:line="26" pos:column="39">last_ce<pos:position pos:line="26" pos:column="46"/></name><operator pos:line="26" pos:column="46">-&gt;<pos:position pos:line="26" pos:column="51"/></operator><name pos:line="26" pos:column="48">name<pos:position pos:line="26" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="54">prefix<pos:position pos:line="26" pos:column="60"/></name></expr></argument>)<pos:position pos:line="26" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="62"/></expr_stmt></block></then></if>
	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><name pos:line="27" pos:column="13">errs<pos:position pos:line="27" pos:column="17"/></name></expr>)<pos:position pos:line="27" pos:column="18"/></condition><then pos:line="27" pos:column="18">
		<comment type="block" pos:line="28" pos:column="17">/* we have already done our error reporting.
		 * exit with the same code as die().
		 */</comment>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="17">exit<pos:position pos:line="31" pos:column="21"/></name><argument_list pos:line="31" pos:column="21">(<argument><expr><literal type="number" pos:line="31" pos:column="22">128<pos:position pos:line="31" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="27"/></expr_stmt></block></then></if>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1620_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">run_external_diff<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><specifier pos:line="1" pos:column="31">const<pos:position pos:line="1" pos:column="36"/></specifier> <name pos:line="1" pos:column="37">char<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">pgm<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>,
			      <parameter><decl><type><specifier pos:line="2" pos:column="31">const<pos:position pos:line="2" pos:column="36"/></specifier> <name pos:line="2" pos:column="37">char<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">name<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>,
			      <parameter><decl><type><specifier pos:line="3" pos:column="31">const<pos:position pos:line="3" pos:column="36"/></specifier> <name pos:line="3" pos:column="37">char<pos:position pos:line="3" pos:column="41"/></name> <modifier pos:line="3" pos:column="42">*<pos:position pos:line="3" pos:column="43"/></modifier></type><name pos:line="3" pos:column="43">other<pos:position pos:line="3" pos:column="48"/></name></decl></parameter>,
			      <parameter><decl><type><name><name pos:line="4" pos:column="31">struct<pos:position pos:line="4" pos:column="37"/></name> <name pos:line="4" pos:column="38">diff_filespec<pos:position pos:line="4" pos:column="51"/></name></name> <modifier pos:line="4" pos:column="52">*<pos:position pos:line="4" pos:column="53"/></modifier></type><name pos:line="4" pos:column="53">one<pos:position pos:line="4" pos:column="56"/></name></decl></parameter>,
			      <parameter><decl><type><name><name pos:line="5" pos:column="31">struct<pos:position pos:line="5" pos:column="37"/></name> <name pos:line="5" pos:column="38">diff_filespec<pos:position pos:line="5" pos:column="51"/></name></name> <modifier pos:line="5" pos:column="52">*<pos:position pos:line="5" pos:column="53"/></modifier></type><name pos:line="5" pos:column="53">two<pos:position pos:line="5" pos:column="56"/></name></decl></parameter>,
			      <parameter><decl><type><specifier pos:line="6" pos:column="31">const<pos:position pos:line="6" pos:column="36"/></specifier> <name pos:line="6" pos:column="37">char<pos:position pos:line="6" pos:column="41"/></name> <modifier pos:line="6" pos:column="42">*<pos:position pos:line="6" pos:column="43"/></modifier></type><name pos:line="6" pos:column="43">xfrm_msg<pos:position pos:line="6" pos:column="51"/></name></decl></parameter>,
			      <parameter><decl><type><name pos:line="7" pos:column="31">int<pos:position pos:line="7" pos:column="34"/></name></type> <name pos:line="7" pos:column="35">complete_rewrite<pos:position pos:line="7" pos:column="51"/></name></decl></parameter>,
			      <parameter><decl><type><name><name pos:line="8" pos:column="31">struct<pos:position pos:line="8" pos:column="37"/></name> <name pos:line="8" pos:column="38">diff_options<pos:position pos:line="8" pos:column="50"/></name></name> <modifier pos:line="8" pos:column="51">*<pos:position pos:line="8" pos:column="52"/></modifier></type><name pos:line="8" pos:column="52">o<pos:position pos:line="8" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="8" pos:column="54"/></parameter_list>
<block pos:line="9" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="10" pos:column="9">struct<pos:position pos:line="10" pos:column="15"/></name> <name pos:line="10" pos:column="16">argv_array<pos:position pos:line="10" pos:column="26"/></name></name></type> <name pos:line="10" pos:column="27">argv<pos:position pos:line="10" pos:column="31"/></name> <init pos:line="10" pos:column="32">= <expr><name pos:line="10" pos:column="34">ARGV_ARRAY_INIT<pos:position pos:line="10" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="50"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="11" pos:column="9">struct<pos:position pos:line="11" pos:column="15"/></name> <name pos:line="11" pos:column="16">argv_array<pos:position pos:line="11" pos:column="26"/></name></name></type> <name pos:line="11" pos:column="27">env<pos:position pos:line="11" pos:column="30"/></name> <init pos:line="11" pos:column="31">= <expr><name pos:line="11" pos:column="33">ARGV_ARRAY_INIT<pos:position pos:line="11" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="49"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="12" pos:column="9">struct<pos:position pos:line="12" pos:column="15"/></name> <name pos:line="12" pos:column="16">diff_queue_struct<pos:position pos:line="12" pos:column="33"/></name></name> <modifier pos:line="12" pos:column="34">*<pos:position pos:line="12" pos:column="35"/></modifier></type><name pos:line="12" pos:column="35">q<pos:position pos:line="12" pos:column="36"/></name> <init pos:line="12" pos:column="37">= <expr><operator pos:line="12" pos:column="39">&amp;<pos:position pos:line="12" pos:column="44"/></operator><name pos:line="12" pos:column="40">diff_queued_diff<pos:position pos:line="12" pos:column="56"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="57"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="14" pos:column="9">argv_array_push<pos:position pos:line="14" pos:column="24"/></name><argument_list pos:line="14" pos:column="24">(<argument><expr><operator pos:line="14" pos:column="25">&amp;<pos:position pos:line="14" pos:column="30"/></operator><name pos:line="14" pos:column="26">argv<pos:position pos:line="14" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="32">pgm<pos:position pos:line="14" pos:column="35"/></name></expr></argument>)<pos:position pos:line="14" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="15" pos:column="9">argv_array_push<pos:position pos:line="15" pos:column="24"/></name><argument_list pos:line="15" pos:column="24">(<argument><expr><operator pos:line="15" pos:column="25">&amp;<pos:position pos:line="15" pos:column="30"/></operator><name pos:line="15" pos:column="26">argv<pos:position pos:line="15" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="32">name<pos:position pos:line="15" pos:column="36"/></name></expr></argument>)<pos:position pos:line="15" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="38"/></expr_stmt>

	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">one<pos:position pos:line="17" pos:column="16"/></name> <operator pos:line="17" pos:column="17">&amp;&amp;<pos:position pos:line="17" pos:column="27"/></operator> <name pos:line="17" pos:column="20">two<pos:position pos:line="17" pos:column="23"/></name></expr>)<pos:position pos:line="17" pos:column="24"/></condition><then pos:line="17" pos:column="24"> <block pos:line="17" pos:column="25">{
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">add_external_diff_name<pos:position pos:line="18" pos:column="39"/></name><argument_list pos:line="18" pos:column="39">(<argument><expr><operator pos:line="18" pos:column="40">&amp;<pos:position pos:line="18" pos:column="45"/></operator><name pos:line="18" pos:column="41">argv<pos:position pos:line="18" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="47">name<pos:position pos:line="18" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="53">one<pos:position pos:line="18" pos:column="56"/></name></expr></argument>)<pos:position pos:line="18" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="58"/></expr_stmt>
		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><operator pos:line="19" pos:column="21">!<pos:position pos:line="19" pos:column="22"/></operator><name pos:line="19" pos:column="22">other<pos:position pos:line="19" pos:column="27"/></name></expr>)<pos:position pos:line="19" pos:column="28"/></condition><then pos:line="19" pos:column="28">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="25">add_external_diff_name<pos:position pos:line="20" pos:column="47"/></name><argument_list pos:line="20" pos:column="47">(<argument><expr><operator pos:line="20" pos:column="48">&amp;<pos:position pos:line="20" pos:column="53"/></operator><name pos:line="20" pos:column="49">argv<pos:position pos:line="20" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="55">name<pos:position pos:line="20" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="61">two<pos:position pos:line="20" pos:column="64"/></name></expr></argument>)<pos:position pos:line="20" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="66"/></expr_stmt></block></then>
		<else pos:line="21" pos:column="17">else <block pos:line="21" pos:column="22">{
			<expr_stmt><expr><call><name pos:line="22" pos:column="25">add_external_diff_name<pos:position pos:line="22" pos:column="47"/></name><argument_list pos:line="22" pos:column="47">(<argument><expr><operator pos:line="22" pos:column="48">&amp;<pos:position pos:line="22" pos:column="53"/></operator><name pos:line="22" pos:column="49">argv<pos:position pos:line="22" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="55">other<pos:position pos:line="22" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="62">two<pos:position pos:line="22" pos:column="65"/></name></expr></argument>)<pos:position pos:line="22" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="67"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="23" pos:column="25">argv_array_push<pos:position pos:line="23" pos:column="40"/></name><argument_list pos:line="23" pos:column="40">(<argument><expr><operator pos:line="23" pos:column="41">&amp;<pos:position pos:line="23" pos:column="46"/></operator><name pos:line="23" pos:column="42">argv<pos:position pos:line="23" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="48">other<pos:position pos:line="23" pos:column="53"/></name></expr></argument>)<pos:position pos:line="23" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="55"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="24" pos:column="25">argv_array_push<pos:position pos:line="24" pos:column="40"/></name><argument_list pos:line="24" pos:column="40">(<argument><expr><operator pos:line="24" pos:column="41">&amp;<pos:position pos:line="24" pos:column="46"/></operator><name pos:line="24" pos:column="42">argv<pos:position pos:line="24" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="48">xfrm_msg<pos:position pos:line="24" pos:column="56"/></name></expr></argument>)<pos:position pos:line="24" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="58"/></expr_stmt>
		}<pos:position pos:line="25" pos:column="18"/></block></else></if>
	}<pos:position pos:line="26" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="28" pos:column="9">argv_array_pushf<pos:position pos:line="28" pos:column="25"/></name><argument_list pos:line="28" pos:column="25">(<argument><expr><operator pos:line="28" pos:column="26">&amp;<pos:position pos:line="28" pos:column="31"/></operator><name pos:line="28" pos:column="27">env<pos:position pos:line="28" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="32">"GIT_DIFF_PATH_COUNTER=%d"<pos:position pos:line="28" pos:column="58"/></literal></expr></argument>, <argument><expr><operator pos:line="28" pos:column="60">++<pos:position pos:line="28" pos:column="62"/></operator><name><name pos:line="28" pos:column="62">o<pos:position pos:line="28" pos:column="63"/></name><operator pos:line="28" pos:column="63">-&gt;<pos:position pos:line="28" pos:column="68"/></operator><name pos:line="28" pos:column="65">diff_path_counter<pos:position pos:line="28" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="84"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="29" pos:column="9">argv_array_pushf<pos:position pos:line="29" pos:column="25"/></name><argument_list pos:line="29" pos:column="25">(<argument><expr><operator pos:line="29" pos:column="26">&amp;<pos:position pos:line="29" pos:column="31"/></operator><name pos:line="29" pos:column="27">env<pos:position pos:line="29" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="32">"GIT_DIFF_PATH_TOTAL=%d"<pos:position pos:line="29" pos:column="56"/></literal></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="58">q<pos:position pos:line="29" pos:column="59"/></name><operator pos:line="29" pos:column="59">-&gt;<pos:position pos:line="29" pos:column="64"/></operator><name pos:line="29" pos:column="61">nr<pos:position pos:line="29" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="65"/></expr_stmt>

	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><call><name pos:line="31" pos:column="13">run_command_v_opt_cd_env<pos:position pos:line="31" pos:column="37"/></name><argument_list pos:line="31" pos:column="37">(<argument><expr><name><name pos:line="31" pos:column="38">argv<pos:position pos:line="31" pos:column="42"/></name><operator pos:line="31" pos:column="42">.<pos:position pos:line="31" pos:column="43"/></operator><name pos:line="31" pos:column="43">argv<pos:position pos:line="31" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="49">RUN_USING_SHELL<pos:position pos:line="31" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="66">NULL<pos:position pos:line="31" pos:column="70"/></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="72">env<pos:position pos:line="31" pos:column="75"/></name><operator pos:line="31" pos:column="75">.<pos:position pos:line="31" pos:column="76"/></operator><name pos:line="31" pos:column="76">argv<pos:position pos:line="31" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="81"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="82"/></condition><then pos:line="31" pos:column="82">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="32" pos:column="17">die<pos:position pos:line="32" pos:column="20"/></name><argument_list pos:line="32" pos:column="20">(<argument><expr><call><name pos:line="32" pos:column="21">_<pos:position pos:line="32" pos:column="22"/></name><argument_list pos:line="32" pos:column="22">(<argument><expr><literal type="string" pos:line="32" pos:column="23">"external diff died, stopping at %s"<pos:position pos:line="32" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="60"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="32" pos:column="62">name<pos:position pos:line="32" pos:column="66"/></name></expr></argument>)<pos:position pos:line="32" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="68"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="34" pos:column="9">remove_tempfile<pos:position pos:line="34" pos:column="24"/></name><argument_list pos:line="34" pos:column="24">()<pos:position pos:line="34" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="35" pos:column="9">argv_array_clear<pos:position pos:line="35" pos:column="25"/></name><argument_list pos:line="35" pos:column="25">(<argument><expr><operator pos:line="35" pos:column="26">&amp;<pos:position pos:line="35" pos:column="31"/></operator><name pos:line="35" pos:column="27">argv<pos:position pos:line="35" pos:column="31"/></name></expr></argument>)<pos:position pos:line="35" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="36" pos:column="9">argv_array_clear<pos:position pos:line="36" pos:column="25"/></name><argument_list pos:line="36" pos:column="25">(<argument><expr><operator pos:line="36" pos:column="26">&amp;<pos:position pos:line="36" pos:column="31"/></operator><name pos:line="36" pos:column="27">env<pos:position pos:line="36" pos:column="30"/></name></expr></argument>)<pos:position pos:line="36" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="32"/></expr_stmt>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5295_git-2.12.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">flush<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><name pos:line="1" pos:column="19">void<pos:position pos:line="1" pos:column="23"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="24"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><name pos:line="3" pos:column="13">input_offset<pos:position pos:line="3" pos:column="25"/></name></expr>)<pos:position pos:line="3" pos:column="26"/></condition><then pos:line="3" pos:column="26"> <block pos:line="3" pos:column="27">{
		<if pos:line="4" pos:column="17">if <condition pos:line="4" pos:column="20">(<expr><name pos:line="4" pos:column="21">output_fd<pos:position pos:line="4" pos:column="30"/></name> <operator pos:line="4" pos:column="31">&gt;=<pos:position pos:line="4" pos:column="36"/></operator> <literal type="number" pos:line="4" pos:column="34">0<pos:position pos:line="4" pos:column="35"/></literal></expr>)<pos:position pos:line="4" pos:column="36"/></condition><then pos:line="4" pos:column="36">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="5" pos:column="25">write_or_die<pos:position pos:line="5" pos:column="37"/></name><argument_list pos:line="5" pos:column="37">(<argument><expr><name pos:line="5" pos:column="38">output_fd<pos:position pos:line="5" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="49">input_buffer<pos:position pos:line="5" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="63">input_offset<pos:position pos:line="5" pos:column="75"/></name></expr></argument>)<pos:position pos:line="5" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="77"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="6" pos:column="17">git_SHA1_Update<pos:position pos:line="6" pos:column="32"/></name><argument_list pos:line="6" pos:column="32">(<argument><expr><operator pos:line="6" pos:column="33">&amp;<pos:position pos:line="6" pos:column="38"/></operator><name pos:line="6" pos:column="34">input_ctx<pos:position pos:line="6" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="45">input_buffer<pos:position pos:line="6" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="59">input_offset<pos:position pos:line="6" pos:column="71"/></name></expr></argument>)<pos:position pos:line="6" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="73"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="7" pos:column="17">memmove<pos:position pos:line="7" pos:column="24"/></name><argument_list pos:line="7" pos:column="24">(<argument><expr><name pos:line="7" pos:column="25">input_buffer<pos:position pos:line="7" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="39">input_buffer<pos:position pos:line="7" pos:column="51"/></name> <operator pos:line="7" pos:column="52">+<pos:position pos:line="7" pos:column="53"/></operator> <name pos:line="7" pos:column="54">input_offset<pos:position pos:line="7" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="68">input_len<pos:position pos:line="7" pos:column="77"/></name></expr></argument>)<pos:position pos:line="7" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="79"/></expr_stmt>
		<expr_stmt><expr><name pos:line="8" pos:column="17">input_offset<pos:position pos:line="8" pos:column="29"/></name> <operator pos:line="8" pos:column="30">=<pos:position pos:line="8" pos:column="31"/></operator> <literal type="number" pos:line="8" pos:column="32">0<pos:position pos:line="8" pos:column="33"/></literal></expr>;<pos:position pos:line="8" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="9" pos:column="10"/></block></then></if>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

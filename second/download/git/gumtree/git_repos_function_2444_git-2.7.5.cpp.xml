<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2444_git-2.7.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">has_conforming_footer<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name><name pos:line="1" pos:column="34">struct<pos:position pos:line="1" pos:column="40"/></name> <name pos:line="1" pos:column="41">strbuf<pos:position pos:line="1" pos:column="47"/></name></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">sb<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="53">struct<pos:position pos:line="1" pos:column="59"/></name> <name pos:line="1" pos:column="60">strbuf<pos:position pos:line="1" pos:column="66"/></name></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">sob<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>,
	<parameter><decl><type><name pos:line="2" pos:column="9">int<pos:position pos:line="2" pos:column="12"/></name></type> <name pos:line="2" pos:column="13">ignore_footer<pos:position pos:line="2" pos:column="26"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="27"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name></type> <name pos:line="4" pos:column="14">prev<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">i<pos:position pos:line="5" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="16">k<pos:position pos:line="5" pos:column="17"/></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">len<pos:position pos:line="6" pos:column="16"/></name> <init pos:line="6" pos:column="17">= <expr><name><name pos:line="6" pos:column="19">sb<pos:position pos:line="6" pos:column="21"/></name><operator pos:line="6" pos:column="21">-&gt;<pos:position pos:line="6" pos:column="26"/></operator><name pos:line="6" pos:column="23">len<pos:position pos:line="6" pos:column="26"/></name></name> <operator pos:line="6" pos:column="27">-<pos:position pos:line="6" pos:column="28"/></operator> <name pos:line="6" pos:column="29">ignore_footer<pos:position pos:line="6" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="43"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name pos:line="7" pos:column="15">char<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">buf<pos:position pos:line="7" pos:column="24"/></name> <init pos:line="7" pos:column="25">= <expr><name><name pos:line="7" pos:column="27">sb<pos:position pos:line="7" pos:column="29"/></name><operator pos:line="7" pos:column="29">-&gt;<pos:position pos:line="7" pos:column="34"/></operator><name pos:line="7" pos:column="31">buf<pos:position pos:line="7" pos:column="34"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">found_sob<pos:position pos:line="8" pos:column="22"/></name> <init pos:line="8" pos:column="23">= <expr><literal type="number" pos:line="8" pos:column="25">0<pos:position pos:line="8" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>

	<comment type="block" pos:line="10" pos:column="9">/* footer must end with newline */</comment>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">len<pos:position pos:line="11" pos:column="17"/></name> <operator pos:line="11" pos:column="18">||<pos:position pos:line="11" pos:column="20"/></operator> <name><name pos:line="11" pos:column="21">buf<pos:position pos:line="11" pos:column="24"/></name><index pos:line="11" pos:column="24">[<expr><name pos:line="11" pos:column="25">len<pos:position pos:line="11" pos:column="28"/></name> <operator pos:line="11" pos:column="29">-<pos:position pos:line="11" pos:column="30"/></operator> <literal type="number" pos:line="11" pos:column="31">1<pos:position pos:line="11" pos:column="32"/></literal></expr>]<pos:position pos:line="11" pos:column="33"/></index></name> <operator pos:line="11" pos:column="34">!=<pos:position pos:line="11" pos:column="36"/></operator> <literal type="char" pos:line="11" pos:column="37">'\n'<pos:position pos:line="11" pos:column="41"/></literal></expr>)<pos:position pos:line="11" pos:column="42"/></condition><then pos:line="11" pos:column="42">
		<block type="pseudo"><return pos:line="12" pos:column="17">return <expr><literal type="number" pos:line="12" pos:column="24">0<pos:position pos:line="12" pos:column="25"/></literal></expr>;<pos:position pos:line="12" pos:column="26"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="14" pos:column="9">prev<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">=<pos:position pos:line="14" pos:column="15"/></operator> <literal type="char" pos:line="14" pos:column="16">'\0'<pos:position pos:line="14" pos:column="20"/></literal></expr>;<pos:position pos:line="14" pos:column="21"/></expr_stmt>
	<for pos:line="15" pos:column="9">for <control pos:line="15" pos:column="13">(<init><expr><name pos:line="15" pos:column="14">i<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <name pos:line="15" pos:column="18">len<pos:position pos:line="15" pos:column="21"/></name> <operator pos:line="15" pos:column="22">-<pos:position pos:line="15" pos:column="23"/></operator> <literal type="number" pos:line="15" pos:column="24">1<pos:position pos:line="15" pos:column="25"/></literal></expr>;<pos:position pos:line="15" pos:column="26"/></init> <condition><expr><name pos:line="15" pos:column="27">i<pos:position pos:line="15" pos:column="28"/></name> <operator pos:line="15" pos:column="29">&gt;<pos:position pos:line="15" pos:column="33"/></operator> <literal type="number" pos:line="15" pos:column="31">0<pos:position pos:line="15" pos:column="32"/></literal></expr>;<pos:position pos:line="15" pos:column="33"/></condition> <incr><expr><name pos:line="15" pos:column="34">i<pos:position pos:line="15" pos:column="35"/></name><operator pos:line="15" pos:column="35">--<pos:position pos:line="15" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="15" pos:column="38"/></control> <block pos:line="15" pos:column="39">{
		<decl_stmt><decl><type><name pos:line="16" pos:column="17">char<pos:position pos:line="16" pos:column="21"/></name></type> <name pos:line="16" pos:column="22">ch<pos:position pos:line="16" pos:column="24"/></name> <init pos:line="16" pos:column="25">= <expr><name><name pos:line="16" pos:column="27">buf<pos:position pos:line="16" pos:column="30"/></name><index pos:line="16" pos:column="30">[<expr><name pos:line="16" pos:column="31">i<pos:position pos:line="16" pos:column="32"/></name></expr>]<pos:position pos:line="16" pos:column="33"/></index></name></expr></init></decl>;<pos:position pos:line="16" pos:column="34"/></decl_stmt>
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><name pos:line="17" pos:column="21">prev<pos:position pos:line="17" pos:column="25"/></name> <operator pos:line="17" pos:column="26">==<pos:position pos:line="17" pos:column="28"/></operator> <literal type="char" pos:line="17" pos:column="29">'\n'<pos:position pos:line="17" pos:column="33"/></literal> <operator pos:line="17" pos:column="34">&amp;&amp;<pos:position pos:line="17" pos:column="44"/></operator> <name pos:line="17" pos:column="37">ch<pos:position pos:line="17" pos:column="39"/></name> <operator pos:line="17" pos:column="40">==<pos:position pos:line="17" pos:column="42"/></operator> <literal type="char" pos:line="17" pos:column="43">'\n'<pos:position pos:line="17" pos:column="47"/></literal></expr>)<pos:position pos:line="17" pos:column="48"/></condition><then pos:line="17" pos:column="48"> <comment type="block" pos:line="17" pos:column="49">/* paragraph break */</comment>
			<block type="pseudo"><break pos:line="18" pos:column="25">break;<pos:position pos:line="18" pos:column="31"/></break></block></then></if>
		<expr_stmt><expr><name pos:line="19" pos:column="17">prev<pos:position pos:line="19" pos:column="21"/></name> <operator pos:line="19" pos:column="22">=<pos:position pos:line="19" pos:column="23"/></operator> <name pos:line="19" pos:column="24">ch<pos:position pos:line="19" pos:column="26"/></name></expr>;<pos:position pos:line="19" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="20" pos:column="10"/></block></for>

	<comment type="block" pos:line="22" pos:column="9">/* require at least one blank line */</comment>
	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name pos:line="23" pos:column="13">prev<pos:position pos:line="23" pos:column="17"/></name> <operator pos:line="23" pos:column="18">!=<pos:position pos:line="23" pos:column="20"/></operator> <literal type="char" pos:line="23" pos:column="21">'\n'<pos:position pos:line="23" pos:column="25"/></literal> <operator pos:line="23" pos:column="26">||<pos:position pos:line="23" pos:column="28"/></operator> <name><name pos:line="23" pos:column="29">buf<pos:position pos:line="23" pos:column="32"/></name><index pos:line="23" pos:column="32">[<expr><name pos:line="23" pos:column="33">i<pos:position pos:line="23" pos:column="34"/></name></expr>]<pos:position pos:line="23" pos:column="35"/></index></name> <operator pos:line="23" pos:column="36">!=<pos:position pos:line="23" pos:column="38"/></operator> <literal type="char" pos:line="23" pos:column="39">'\n'<pos:position pos:line="23" pos:column="43"/></literal></expr>)<pos:position pos:line="23" pos:column="44"/></condition><then pos:line="23" pos:column="44">
		<block type="pseudo"><return pos:line="24" pos:column="17">return <expr><literal type="number" pos:line="24" pos:column="24">0<pos:position pos:line="24" pos:column="25"/></literal></expr>;<pos:position pos:line="24" pos:column="26"/></return></block></then></if>

	<comment type="block" pos:line="26" pos:column="9">/* advance to start of last paragraph */</comment>
	<while pos:line="27" pos:column="9">while <condition pos:line="27" pos:column="15">(<expr><name pos:line="27" pos:column="16">i<pos:position pos:line="27" pos:column="17"/></name> <operator pos:line="27" pos:column="18">&lt;<pos:position pos:line="27" pos:column="22"/></operator> <name pos:line="27" pos:column="20">len<pos:position pos:line="27" pos:column="23"/></name> <operator pos:line="27" pos:column="24">-<pos:position pos:line="27" pos:column="25"/></operator> <literal type="number" pos:line="27" pos:column="26">1<pos:position pos:line="27" pos:column="27"/></literal> <operator pos:line="27" pos:column="28">&amp;&amp;<pos:position pos:line="27" pos:column="38"/></operator> <name><name pos:line="27" pos:column="31">buf<pos:position pos:line="27" pos:column="34"/></name><index pos:line="27" pos:column="34">[<expr><name pos:line="27" pos:column="35">i<pos:position pos:line="27" pos:column="36"/></name></expr>]<pos:position pos:line="27" pos:column="37"/></index></name> <operator pos:line="27" pos:column="38">==<pos:position pos:line="27" pos:column="40"/></operator> <literal type="char" pos:line="27" pos:column="41">'\n'<pos:position pos:line="27" pos:column="45"/></literal></expr>)<pos:position pos:line="27" pos:column="46"/></condition>
		<block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="17">i<pos:position pos:line="28" pos:column="18"/></name><operator pos:line="28" pos:column="18">++<pos:position pos:line="28" pos:column="20"/></operator></expr>;<pos:position pos:line="28" pos:column="21"/></expr_stmt></block></while>

	<for pos:line="30" pos:column="9">for <control pos:line="30" pos:column="13">(<init pos:line="30" pos:column="14">;<pos:position pos:line="30" pos:column="15"/></init> <condition><expr><name pos:line="30" pos:column="16">i<pos:position pos:line="30" pos:column="17"/></name> <operator pos:line="30" pos:column="18">&lt;<pos:position pos:line="30" pos:column="22"/></operator> <name pos:line="30" pos:column="20">len<pos:position pos:line="30" pos:column="23"/></name></expr>;<pos:position pos:line="30" pos:column="24"/></condition> <incr><expr><name pos:line="30" pos:column="25">i<pos:position pos:line="30" pos:column="26"/></name> <operator pos:line="30" pos:column="27">=<pos:position pos:line="30" pos:column="28"/></operator> <name pos:line="30" pos:column="29">k<pos:position pos:line="30" pos:column="30"/></name></expr></incr>)<pos:position pos:line="30" pos:column="31"/></control> <block pos:line="30" pos:column="32">{
		<decl_stmt><decl><type><name pos:line="31" pos:column="17">int<pos:position pos:line="31" pos:column="20"/></name></type> <name pos:line="31" pos:column="21">found_rfc2822<pos:position pos:line="31" pos:column="34"/></name></decl>;<pos:position pos:line="31" pos:column="35"/></decl_stmt>

		<for pos:line="33" pos:column="17">for <control pos:line="33" pos:column="21">(<init><expr><name pos:line="33" pos:column="22">k<pos:position pos:line="33" pos:column="23"/></name> <operator pos:line="33" pos:column="24">=<pos:position pos:line="33" pos:column="25"/></operator> <name pos:line="33" pos:column="26">i<pos:position pos:line="33" pos:column="27"/></name></expr>;<pos:position pos:line="33" pos:column="28"/></init> <condition><expr><name pos:line="33" pos:column="29">k<pos:position pos:line="33" pos:column="30"/></name> <operator pos:line="33" pos:column="31">&lt;<pos:position pos:line="33" pos:column="35"/></operator> <name pos:line="33" pos:column="33">len<pos:position pos:line="33" pos:column="36"/></name> <operator pos:line="33" pos:column="37">&amp;&amp;<pos:position pos:line="33" pos:column="47"/></operator> <name><name pos:line="33" pos:column="40">buf<pos:position pos:line="33" pos:column="43"/></name><index pos:line="33" pos:column="43">[<expr><name pos:line="33" pos:column="44">k<pos:position pos:line="33" pos:column="45"/></name></expr>]<pos:position pos:line="33" pos:column="46"/></index></name> <operator pos:line="33" pos:column="47">!=<pos:position pos:line="33" pos:column="49"/></operator> <literal type="char" pos:line="33" pos:column="50">'\n'<pos:position pos:line="33" pos:column="54"/></literal></expr>;<pos:position pos:line="33" pos:column="55"/></condition> <incr><expr><name pos:line="33" pos:column="56">k<pos:position pos:line="33" pos:column="57"/></name><operator pos:line="33" pos:column="57">++<pos:position pos:line="33" pos:column="59"/></operator></expr></incr>)<pos:position pos:line="33" pos:column="60"/></control>
			<block type="pseudo"><empty_stmt pos:line="34" pos:column="25">;<pos:position pos:line="34" pos:column="26"/></empty_stmt></block></for> <comment type="block" pos:line="34" pos:column="27">/* do nothing */</comment>
		<expr_stmt><expr><name pos:line="35" pos:column="17">k<pos:position pos:line="35" pos:column="18"/></name><operator pos:line="35" pos:column="18">++<pos:position pos:line="35" pos:column="20"/></operator></expr>;<pos:position pos:line="35" pos:column="21"/></expr_stmt>

		<expr_stmt><expr><name pos:line="37" pos:column="17">found_rfc2822<pos:position pos:line="37" pos:column="30"/></name> <operator pos:line="37" pos:column="31">=<pos:position pos:line="37" pos:column="32"/></operator> <call><name pos:line="37" pos:column="33">is_rfc2822_line<pos:position pos:line="37" pos:column="48"/></name><argument_list pos:line="37" pos:column="48">(<argument><expr><name pos:line="37" pos:column="49">buf<pos:position pos:line="37" pos:column="52"/></name> <operator pos:line="37" pos:column="53">+<pos:position pos:line="37" pos:column="54"/></operator> <name pos:line="37" pos:column="55">i<pos:position pos:line="37" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="58">k<pos:position pos:line="37" pos:column="59"/></name> <operator pos:line="37" pos:column="60">-<pos:position pos:line="37" pos:column="61"/></operator> <name pos:line="37" pos:column="62">i<pos:position pos:line="37" pos:column="63"/></name> <operator pos:line="37" pos:column="64">-<pos:position pos:line="37" pos:column="65"/></operator> <literal type="number" pos:line="37" pos:column="66">1<pos:position pos:line="37" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="69"/></expr_stmt>
		<if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><name pos:line="38" pos:column="21">found_rfc2822<pos:position pos:line="38" pos:column="34"/></name> <operator pos:line="38" pos:column="35">&amp;&amp;<pos:position pos:line="38" pos:column="45"/></operator> <name pos:line="38" pos:column="38">sob<pos:position pos:line="38" pos:column="41"/></name> <operator pos:line="38" pos:column="42">&amp;&amp;<pos:position pos:line="38" pos:column="52"/></operator>
		    <operator pos:line="39" pos:column="21">!<pos:position pos:line="39" pos:column="22"/></operator><call><name pos:line="39" pos:column="22">strncmp<pos:position pos:line="39" pos:column="29"/></name><argument_list pos:line="39" pos:column="29">(<argument><expr><name pos:line="39" pos:column="30">buf<pos:position pos:line="39" pos:column="33"/></name> <operator pos:line="39" pos:column="34">+<pos:position pos:line="39" pos:column="35"/></operator> <name pos:line="39" pos:column="36">i<pos:position pos:line="39" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="39">sob<pos:position pos:line="39" pos:column="42"/></name><operator pos:line="39" pos:column="42">-&gt;<pos:position pos:line="39" pos:column="47"/></operator><name pos:line="39" pos:column="44">buf<pos:position pos:line="39" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="49">sob<pos:position pos:line="39" pos:column="52"/></name><operator pos:line="39" pos:column="52">-&gt;<pos:position pos:line="39" pos:column="57"/></operator><name pos:line="39" pos:column="54">len<pos:position pos:line="39" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="59"/></condition><then pos:line="39" pos:column="59">
			<block type="pseudo"><expr_stmt><expr><name pos:line="40" pos:column="25">found_sob<pos:position pos:line="40" pos:column="34"/></name> <operator pos:line="40" pos:column="35">=<pos:position pos:line="40" pos:column="36"/></operator> <name pos:line="40" pos:column="37">k<pos:position pos:line="40" pos:column="38"/></name></expr>;<pos:position pos:line="40" pos:column="39"/></expr_stmt></block></then></if>

		<if pos:line="42" pos:column="17">if <condition pos:line="42" pos:column="20">(<expr><operator pos:line="42" pos:column="21">!<pos:position pos:line="42" pos:column="22"/></operator><operator pos:line="42" pos:column="22">(<pos:position pos:line="42" pos:column="23"/></operator><name pos:line="42" pos:column="23">found_rfc2822<pos:position pos:line="42" pos:column="36"/></name> <operator pos:line="42" pos:column="37">||<pos:position pos:line="42" pos:column="39"/></operator>
		      <call><name pos:line="43" pos:column="23">is_cherry_picked_from_line<pos:position pos:line="43" pos:column="49"/></name><argument_list pos:line="43" pos:column="49">(<argument><expr><name pos:line="43" pos:column="50">buf<pos:position pos:line="43" pos:column="53"/></name> <operator pos:line="43" pos:column="54">+<pos:position pos:line="43" pos:column="55"/></operator> <name pos:line="43" pos:column="56">i<pos:position pos:line="43" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="59">k<pos:position pos:line="43" pos:column="60"/></name> <operator pos:line="43" pos:column="61">-<pos:position pos:line="43" pos:column="62"/></operator> <name pos:line="43" pos:column="63">i<pos:position pos:line="43" pos:column="64"/></name> <operator pos:line="43" pos:column="65">-<pos:position pos:line="43" pos:column="66"/></operator> <literal type="number" pos:line="43" pos:column="67">1<pos:position pos:line="43" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="69"/></argument_list></call><operator pos:line="43" pos:column="69">)<pos:position pos:line="43" pos:column="70"/></operator></expr>)<pos:position pos:line="43" pos:column="71"/></condition><then pos:line="43" pos:column="71">
			<block type="pseudo"><return pos:line="44" pos:column="25">return <expr><literal type="number" pos:line="44" pos:column="32">0<pos:position pos:line="44" pos:column="33"/></literal></expr>;<pos:position pos:line="44" pos:column="34"/></return></block></then></if>
	}<pos:position pos:line="45" pos:column="10"/></block></for>
	<if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><name pos:line="46" pos:column="13">found_sob<pos:position pos:line="46" pos:column="22"/></name> <operator pos:line="46" pos:column="23">==<pos:position pos:line="46" pos:column="25"/></operator> <name pos:line="46" pos:column="26">i<pos:position pos:line="46" pos:column="27"/></name></expr>)<pos:position pos:line="46" pos:column="28"/></condition><then pos:line="46" pos:column="28">
		<block type="pseudo"><return pos:line="47" pos:column="17">return <expr><literal type="number" pos:line="47" pos:column="24">3<pos:position pos:line="47" pos:column="25"/></literal></expr>;<pos:position pos:line="47" pos:column="26"/></return></block></then></if>
	<if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><name pos:line="48" pos:column="13">found_sob<pos:position pos:line="48" pos:column="22"/></name></expr>)<pos:position pos:line="48" pos:column="23"/></condition><then pos:line="48" pos:column="23">
		<block type="pseudo"><return pos:line="49" pos:column="17">return <expr><literal type="number" pos:line="49" pos:column="24">2<pos:position pos:line="49" pos:column="25"/></literal></expr>;<pos:position pos:line="49" pos:column="26"/></return></block></then></if>
	<return pos:line="50" pos:column="9">return <expr><literal type="number" pos:line="50" pos:column="16">1<pos:position pos:line="50" pos:column="17"/></literal></expr>;<pos:position pos:line="50" pos:column="18"/></return>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1238.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_blame<pos:position pos:line="1" pos:column="14"/></name><parameter_list pos:line="1" pos:column="14">(<parameter><decl><type><name pos:line="1" pos:column="15">int<pos:position pos:line="1" pos:column="18"/></name></type> <name pos:line="1" pos:column="19">argc<pos:position pos:line="1" pos:column="23"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier><modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">argv<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="44">const<pos:position pos:line="1" pos:column="49"/></specifier> <name pos:line="1" pos:column="50">char<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">prefix<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="63"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">rev_info<pos:position pos:line="3" pos:column="24"/></name></name></type> <name pos:line="3" pos:column="25">revs<pos:position pos:line="3" pos:column="29"/></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">path<pos:position pos:line="4" pos:column="25"/></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">scoreboard<pos:position pos:line="5" pos:column="26"/></name></name></type> <name pos:line="5" pos:column="27">sb<pos:position pos:line="5" pos:column="29"/></name></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">origin<pos:position pos:line="6" pos:column="22"/></name></name> <modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier></type><name pos:line="6" pos:column="24">o<pos:position pos:line="6" pos:column="25"/></name></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">blame_entry<pos:position pos:line="7" pos:column="27"/></name></name> <modifier pos:line="7" pos:column="28">*<pos:position pos:line="7" pos:column="29"/></modifier></type><name pos:line="7" pos:column="29">ent<pos:position pos:line="7" pos:column="32"/></name> <init pos:line="7" pos:column="33">= <expr><name pos:line="7" pos:column="35">NULL<pos:position pos:line="7" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">long<pos:position pos:line="8" pos:column="13"/></name></type> <name pos:line="8" pos:column="14">dashdash_pos<pos:position pos:line="8" pos:column="26"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="28">lno<pos:position pos:line="8" pos:column="31"/></name></decl>;<pos:position pos:line="8" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">char<pos:position pos:line="9" pos:column="13"/></name> <modifier pos:line="9" pos:column="14">*<pos:position pos:line="9" pos:column="15"/></modifier></type><name pos:line="9" pos:column="15">final_commit_name<pos:position pos:line="9" pos:column="32"/></name> <init pos:line="9" pos:column="33">= <expr><name pos:line="9" pos:column="35">NULL<pos:position pos:line="9" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="10" pos:column="9">enum<pos:position pos:line="10" pos:column="13"/></name> <name pos:line="10" pos:column="14">object_type<pos:position pos:line="10" pos:column="25"/></name></name></type> <name pos:line="10" pos:column="26">type<pos:position pos:line="10" pos:column="30"/></name></decl>;<pos:position pos:line="10" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="11" pos:column="9">struct<pos:position pos:line="11" pos:column="15"/></name> <name pos:line="11" pos:column="16">commit<pos:position pos:line="11" pos:column="22"/></name></name> <modifier pos:line="11" pos:column="23">*<pos:position pos:line="11" pos:column="24"/></modifier></type><name pos:line="11" pos:column="24">final_commit<pos:position pos:line="11" pos:column="36"/></name> <init pos:line="11" pos:column="37">= <expr><name pos:line="11" pos:column="39">NULL<pos:position pos:line="11" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="44"/></decl_stmt>

	<decl_stmt><decl><type><name><name pos:line="13" pos:column="9">struct<pos:position pos:line="13" pos:column="15"/></name> <name pos:line="13" pos:column="16">string_list<pos:position pos:line="13" pos:column="27"/></name></name></type> <name pos:line="13" pos:column="28">range_list<pos:position pos:line="13" pos:column="38"/></name> <init pos:line="13" pos:column="39">= <expr><name pos:line="13" pos:column="41">STRING_LIST_INIT_NODUP<pos:position pos:line="13" pos:column="63"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="64"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="14" pos:column="9">int<pos:position pos:line="14" pos:column="12"/></name></type> <name pos:line="14" pos:column="13">output_option<pos:position pos:line="14" pos:column="26"/></name> <init pos:line="14" pos:column="27">= <expr><literal type="number" pos:line="14" pos:column="29">0<pos:position pos:line="14" pos:column="30"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="14" pos:column="32">opt<pos:position pos:line="14" pos:column="35"/></name> <init pos:line="14" pos:column="36">= <expr><literal type="number" pos:line="14" pos:column="38">0<pos:position pos:line="14" pos:column="39"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="15" pos:column="9">int<pos:position pos:line="15" pos:column="12"/></name></type> <name pos:line="15" pos:column="13">show_stats<pos:position pos:line="15" pos:column="23"/></name> <init pos:line="15" pos:column="24">= <expr><literal type="number" pos:line="15" pos:column="26">0<pos:position pos:line="15" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="16" pos:column="9">const<pos:position pos:line="16" pos:column="14"/></specifier> <name pos:line="16" pos:column="15">char<pos:position pos:line="16" pos:column="19"/></name> <modifier pos:line="16" pos:column="20">*<pos:position pos:line="16" pos:column="21"/></modifier></type><name pos:line="16" pos:column="21">revs_file<pos:position pos:line="16" pos:column="30"/></name> <init pos:line="16" pos:column="31">= <expr><name pos:line="16" pos:column="33">NULL<pos:position pos:line="16" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="16" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="17" pos:column="9">const<pos:position pos:line="17" pos:column="14"/></specifier> <name pos:line="17" pos:column="15">char<pos:position pos:line="17" pos:column="19"/></name> <modifier pos:line="17" pos:column="20">*<pos:position pos:line="17" pos:column="21"/></modifier></type><name pos:line="17" pos:column="21">contents_from<pos:position pos:line="17" pos:column="34"/></name> <init pos:line="17" pos:column="35">= <expr><name pos:line="17" pos:column="37">NULL<pos:position pos:line="17" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="17" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="18" pos:column="9">const<pos:position pos:line="18" pos:column="14"/></specifier> <name><name pos:line="18" pos:column="15">struct<pos:position pos:line="18" pos:column="21"/></name> <name pos:line="18" pos:column="22">option<pos:position pos:line="18" pos:column="28"/></name></name></type> <name><name pos:line="18" pos:column="29">options<pos:position pos:line="18" pos:column="36"/></name><index pos:line="18" pos:column="36">[]<pos:position pos:line="18" pos:column="38"/></index></name> <init pos:line="18" pos:column="39">= <expr><block pos:line="18" pos:column="41">{
		<expr><call><name pos:line="19" pos:column="17">OPT_BOOL<pos:position pos:line="19" pos:column="25"/></name><argument_list pos:line="19" pos:column="25">(<argument><expr><literal type="number" pos:line="19" pos:column="26">0<pos:position pos:line="19" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="29">"incremental"<pos:position pos:line="19" pos:column="42"/></literal></expr></argument>, <argument><expr><operator pos:line="19" pos:column="44">&amp;<pos:position pos:line="19" pos:column="49"/></operator><name pos:line="19" pos:column="45">incremental<pos:position pos:line="19" pos:column="56"/></name></expr></argument>, <argument><expr><call><name pos:line="19" pos:column="58">N_<pos:position pos:line="19" pos:column="60"/></name><argument_list pos:line="19" pos:column="60">(<argument><expr><literal type="string" pos:line="19" pos:column="61">"Show blame entries as we find them, incrementally"<pos:position pos:line="19" pos:column="112"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="113"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="114"/></argument_list></call></expr>,
		<expr><call><name pos:line="20" pos:column="17">OPT_BOOL<pos:position pos:line="20" pos:column="25"/></name><argument_list pos:line="20" pos:column="25">(<argument><expr><literal type="char" pos:line="20" pos:column="26">'b'<pos:position pos:line="20" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="31">NULL<pos:position pos:line="20" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="37">&amp;<pos:position pos:line="20" pos:column="42"/></operator><name pos:line="20" pos:column="38">blank_boundary<pos:position pos:line="20" pos:column="52"/></name></expr></argument>, <argument><expr><call><name pos:line="20" pos:column="54">N_<pos:position pos:line="20" pos:column="56"/></name><argument_list pos:line="20" pos:column="56">(<argument><expr><literal type="string" pos:line="20" pos:column="57">"Show blank SHA-1 for boundary commits (Default: off)"<pos:position pos:line="20" pos:column="111"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="112"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="113"/></argument_list></call></expr>,
		<expr><call><name pos:line="21" pos:column="17">OPT_BOOL<pos:position pos:line="21" pos:column="25"/></name><argument_list pos:line="21" pos:column="25">(<argument><expr><literal type="number" pos:line="21" pos:column="26">0<pos:position pos:line="21" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="29">"root"<pos:position pos:line="21" pos:column="35"/></literal></expr></argument>, <argument><expr><operator pos:line="21" pos:column="37">&amp;<pos:position pos:line="21" pos:column="42"/></operator><name pos:line="21" pos:column="38">show_root<pos:position pos:line="21" pos:column="47"/></name></expr></argument>, <argument><expr><call><name pos:line="21" pos:column="49">N_<pos:position pos:line="21" pos:column="51"/></name><argument_list pos:line="21" pos:column="51">(<argument><expr><literal type="string" pos:line="21" pos:column="52">"Do not treat root commits as boundaries (Default: off)"<pos:position pos:line="21" pos:column="108"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="109"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="110"/></argument_list></call></expr>,
		<expr><call><name pos:line="22" pos:column="17">OPT_BOOL<pos:position pos:line="22" pos:column="25"/></name><argument_list pos:line="22" pos:column="25">(<argument><expr><literal type="number" pos:line="22" pos:column="26">0<pos:position pos:line="22" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="29">"show-stats"<pos:position pos:line="22" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="22" pos:column="43">&amp;<pos:position pos:line="22" pos:column="48"/></operator><name pos:line="22" pos:column="44">show_stats<pos:position pos:line="22" pos:column="54"/></name></expr></argument>, <argument><expr><call><name pos:line="22" pos:column="56">N_<pos:position pos:line="22" pos:column="58"/></name><argument_list pos:line="22" pos:column="58">(<argument><expr><literal type="string" pos:line="22" pos:column="59">"Show work cost statistics"<pos:position pos:line="22" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="87"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="88"/></argument_list></call></expr>,
		<expr><call><name pos:line="23" pos:column="17">OPT_BOOL<pos:position pos:line="23" pos:column="25"/></name><argument_list pos:line="23" pos:column="25">(<argument><expr><literal type="number" pos:line="23" pos:column="26">0<pos:position pos:line="23" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="29">"progress"<pos:position pos:line="23" pos:column="39"/></literal></expr></argument>, <argument><expr><operator pos:line="23" pos:column="41">&amp;<pos:position pos:line="23" pos:column="46"/></operator><name pos:line="23" pos:column="42">show_progress<pos:position pos:line="23" pos:column="55"/></name></expr></argument>, <argument><expr><call><name pos:line="23" pos:column="57">N_<pos:position pos:line="23" pos:column="59"/></name><argument_list pos:line="23" pos:column="59">(<argument><expr><literal type="string" pos:line="23" pos:column="60">"Force progress reporting"<pos:position pos:line="23" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="87"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="88"/></argument_list></call></expr>,
		<expr><call><name pos:line="24" pos:column="17">OPT_BIT<pos:position pos:line="24" pos:column="24"/></name><argument_list pos:line="24" pos:column="24">(<argument><expr><literal type="number" pos:line="24" pos:column="25">0<pos:position pos:line="24" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="28">"score-debug"<pos:position pos:line="24" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="24" pos:column="43">&amp;<pos:position pos:line="24" pos:column="48"/></operator><name pos:line="24" pos:column="44">output_option<pos:position pos:line="24" pos:column="57"/></name></expr></argument>, <argument><expr><call><name pos:line="24" pos:column="59">N_<pos:position pos:line="24" pos:column="61"/></name><argument_list pos:line="24" pos:column="61">(<argument><expr><literal type="string" pos:line="24" pos:column="62">"Show output score for blame entries"<pos:position pos:line="24" pos:column="99"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="100"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="24" pos:column="102">OUTPUT_SHOW_SCORE<pos:position pos:line="24" pos:column="119"/></name></expr></argument>)<pos:position pos:line="24" pos:column="120"/></argument_list></call></expr>,
		<expr><call><name pos:line="25" pos:column="17">OPT_BIT<pos:position pos:line="25" pos:column="24"/></name><argument_list pos:line="25" pos:column="24">(<argument><expr><literal type="char" pos:line="25" pos:column="25">'f'<pos:position pos:line="25" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="30">"show-name"<pos:position pos:line="25" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="25" pos:column="43">&amp;<pos:position pos:line="25" pos:column="48"/></operator><name pos:line="25" pos:column="44">output_option<pos:position pos:line="25" pos:column="57"/></name></expr></argument>, <argument><expr><call><name pos:line="25" pos:column="59">N_<pos:position pos:line="25" pos:column="61"/></name><argument_list pos:line="25" pos:column="61">(<argument><expr><literal type="string" pos:line="25" pos:column="62">"Show original filename (Default: auto)"<pos:position pos:line="25" pos:column="102"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="103"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="25" pos:column="105">OUTPUT_SHOW_NAME<pos:position pos:line="25" pos:column="121"/></name></expr></argument>)<pos:position pos:line="25" pos:column="122"/></argument_list></call></expr>,
		<expr><call><name pos:line="26" pos:column="17">OPT_BIT<pos:position pos:line="26" pos:column="24"/></name><argument_list pos:line="26" pos:column="24">(<argument><expr><literal type="char" pos:line="26" pos:column="25">'n'<pos:position pos:line="26" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="30">"show-number"<pos:position pos:line="26" pos:column="43"/></literal></expr></argument>, <argument><expr><operator pos:line="26" pos:column="45">&amp;<pos:position pos:line="26" pos:column="50"/></operator><name pos:line="26" pos:column="46">output_option<pos:position pos:line="26" pos:column="59"/></name></expr></argument>, <argument><expr><call><name pos:line="26" pos:column="61">N_<pos:position pos:line="26" pos:column="63"/></name><argument_list pos:line="26" pos:column="63">(<argument><expr><literal type="string" pos:line="26" pos:column="64">"Show original linenumber (Default: off)"<pos:position pos:line="26" pos:column="105"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="106"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="26" pos:column="108">OUTPUT_SHOW_NUMBER<pos:position pos:line="26" pos:column="126"/></name></expr></argument>)<pos:position pos:line="26" pos:column="127"/></argument_list></call></expr>,
		<expr><call><name pos:line="27" pos:column="17">OPT_BIT<pos:position pos:line="27" pos:column="24"/></name><argument_list pos:line="27" pos:column="24">(<argument><expr><literal type="char" pos:line="27" pos:column="25">'p'<pos:position pos:line="27" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="30">"porcelain"<pos:position pos:line="27" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="27" pos:column="43">&amp;<pos:position pos:line="27" pos:column="48"/></operator><name pos:line="27" pos:column="44">output_option<pos:position pos:line="27" pos:column="57"/></name></expr></argument>, <argument><expr><call><name pos:line="27" pos:column="59">N_<pos:position pos:line="27" pos:column="61"/></name><argument_list pos:line="27" pos:column="61">(<argument><expr><literal type="string" pos:line="27" pos:column="62">"Show in a format designed for machine consumption"<pos:position pos:line="27" pos:column="113"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="114"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="27" pos:column="116">OUTPUT_PORCELAIN<pos:position pos:line="27" pos:column="132"/></name></expr></argument>)<pos:position pos:line="27" pos:column="133"/></argument_list></call></expr>,
		<expr><call><name pos:line="28" pos:column="17">OPT_BIT<pos:position pos:line="28" pos:column="24"/></name><argument_list pos:line="28" pos:column="24">(<argument><expr><literal type="number" pos:line="28" pos:column="25">0<pos:position pos:line="28" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="28">"line-porcelain"<pos:position pos:line="28" pos:column="44"/></literal></expr></argument>, <argument><expr><operator pos:line="28" pos:column="46">&amp;<pos:position pos:line="28" pos:column="51"/></operator><name pos:line="28" pos:column="47">output_option<pos:position pos:line="28" pos:column="60"/></name></expr></argument>, <argument><expr><call><name pos:line="28" pos:column="62">N_<pos:position pos:line="28" pos:column="64"/></name><argument_list pos:line="28" pos:column="64">(<argument><expr><literal type="string" pos:line="28" pos:column="65">"Show porcelain format with per-line commit information"<pos:position pos:line="28" pos:column="121"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="122"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="28" pos:column="124">OUTPUT_PORCELAIN<pos:position pos:line="28" pos:column="140"/></name><operator pos:line="28" pos:column="140">|<pos:position pos:line="28" pos:column="141"/></operator><name pos:line="28" pos:column="141">OUTPUT_LINE_PORCELAIN<pos:position pos:line="28" pos:column="162"/></name></expr></argument>)<pos:position pos:line="28" pos:column="163"/></argument_list></call></expr>,
		<expr><call><name pos:line="29" pos:column="17">OPT_BIT<pos:position pos:line="29" pos:column="24"/></name><argument_list pos:line="29" pos:column="24">(<argument><expr><literal type="char" pos:line="29" pos:column="25">'c'<pos:position pos:line="29" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="30">NULL<pos:position pos:line="29" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="36">&amp;<pos:position pos:line="29" pos:column="41"/></operator><name pos:line="29" pos:column="37">output_option<pos:position pos:line="29" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="29" pos:column="52">N_<pos:position pos:line="29" pos:column="54"/></name><argument_list pos:line="29" pos:column="54">(<argument><expr><literal type="string" pos:line="29" pos:column="55">"Use the same output mode as git-annotate (Default: off)"<pos:position pos:line="29" pos:column="112"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="113"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="29" pos:column="115">OUTPUT_ANNOTATE_COMPAT<pos:position pos:line="29" pos:column="137"/></name></expr></argument>)<pos:position pos:line="29" pos:column="138"/></argument_list></call></expr>,
		<expr><call><name pos:line="30" pos:column="17">OPT_BIT<pos:position pos:line="30" pos:column="24"/></name><argument_list pos:line="30" pos:column="24">(<argument><expr><literal type="char" pos:line="30" pos:column="25">'t'<pos:position pos:line="30" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="30">NULL<pos:position pos:line="30" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="36">&amp;<pos:position pos:line="30" pos:column="41"/></operator><name pos:line="30" pos:column="37">output_option<pos:position pos:line="30" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="30" pos:column="52">N_<pos:position pos:line="30" pos:column="54"/></name><argument_list pos:line="30" pos:column="54">(<argument><expr><literal type="string" pos:line="30" pos:column="55">"Show raw timestamp (Default: off)"<pos:position pos:line="30" pos:column="90"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="91"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="30" pos:column="93">OUTPUT_RAW_TIMESTAMP<pos:position pos:line="30" pos:column="113"/></name></expr></argument>)<pos:position pos:line="30" pos:column="114"/></argument_list></call></expr>,
		<expr><call><name pos:line="31" pos:column="17">OPT_BIT<pos:position pos:line="31" pos:column="24"/></name><argument_list pos:line="31" pos:column="24">(<argument><expr><literal type="char" pos:line="31" pos:column="25">'l'<pos:position pos:line="31" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="30">NULL<pos:position pos:line="31" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="36">&amp;<pos:position pos:line="31" pos:column="41"/></operator><name pos:line="31" pos:column="37">output_option<pos:position pos:line="31" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="31" pos:column="52">N_<pos:position pos:line="31" pos:column="54"/></name><argument_list pos:line="31" pos:column="54">(<argument><expr><literal type="string" pos:line="31" pos:column="55">"Show long commit SHA1 (Default: off)"<pos:position pos:line="31" pos:column="93"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="94"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="31" pos:column="96">OUTPUT_LONG_OBJECT_NAME<pos:position pos:line="31" pos:column="119"/></name></expr></argument>)<pos:position pos:line="31" pos:column="120"/></argument_list></call></expr>,
		<expr><call><name pos:line="32" pos:column="17">OPT_BIT<pos:position pos:line="32" pos:column="24"/></name><argument_list pos:line="32" pos:column="24">(<argument><expr><literal type="char" pos:line="32" pos:column="25">'s'<pos:position pos:line="32" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="30">NULL<pos:position pos:line="32" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="36">&amp;<pos:position pos:line="32" pos:column="41"/></operator><name pos:line="32" pos:column="37">output_option<pos:position pos:line="32" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="32" pos:column="52">N_<pos:position pos:line="32" pos:column="54"/></name><argument_list pos:line="32" pos:column="54">(<argument><expr><literal type="string" pos:line="32" pos:column="55">"Suppress author name and timestamp (Default: off)"<pos:position pos:line="32" pos:column="106"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="107"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="32" pos:column="109">OUTPUT_NO_AUTHOR<pos:position pos:line="32" pos:column="125"/></name></expr></argument>)<pos:position pos:line="32" pos:column="126"/></argument_list></call></expr>,
		<expr><call><name pos:line="33" pos:column="17">OPT_BIT<pos:position pos:line="33" pos:column="24"/></name><argument_list pos:line="33" pos:column="24">(<argument><expr><literal type="char" pos:line="33" pos:column="25">'e'<pos:position pos:line="33" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="30">"show-email"<pos:position pos:line="33" pos:column="42"/></literal></expr></argument>, <argument><expr><operator pos:line="33" pos:column="44">&amp;<pos:position pos:line="33" pos:column="49"/></operator><name pos:line="33" pos:column="45">output_option<pos:position pos:line="33" pos:column="58"/></name></expr></argument>, <argument><expr><call><name pos:line="33" pos:column="60">N_<pos:position pos:line="33" pos:column="62"/></name><argument_list pos:line="33" pos:column="62">(<argument><expr><literal type="string" pos:line="33" pos:column="63">"Show author email instead of name (Default: off)"<pos:position pos:line="33" pos:column="113"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="114"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="33" pos:column="116">OUTPUT_SHOW_EMAIL<pos:position pos:line="33" pos:column="133"/></name></expr></argument>)<pos:position pos:line="33" pos:column="134"/></argument_list></call></expr>,
		<expr><call><name pos:line="34" pos:column="17">OPT_BIT<pos:position pos:line="34" pos:column="24"/></name><argument_list pos:line="34" pos:column="24">(<argument><expr><literal type="char" pos:line="34" pos:column="25">'w'<pos:position pos:line="34" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="30">NULL<pos:position pos:line="34" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="36">&amp;<pos:position pos:line="34" pos:column="41"/></operator><name pos:line="34" pos:column="37">xdl_opts<pos:position pos:line="34" pos:column="45"/></name></expr></argument>, <argument><expr><call><name pos:line="34" pos:column="47">N_<pos:position pos:line="34" pos:column="49"/></name><argument_list pos:line="34" pos:column="49">(<argument><expr><literal type="string" pos:line="34" pos:column="50">"Ignore whitespace differences"<pos:position pos:line="34" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="82"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="34" pos:column="84">XDF_IGNORE_WHITESPACE<pos:position pos:line="34" pos:column="105"/></name></expr></argument>)<pos:position pos:line="34" pos:column="106"/></argument_list></call></expr>,

		<comment type="block" pos:line="36" pos:column="17">/*
		 * The following two options are parsed by parse_revision_opt()
		 * and are only included here to get included in the "-h"
		 * output:
		 */</comment>
		<expr><block pos:line="41" pos:column="17">{ <expr><name pos:line="41" pos:column="19">OPTION_LOWLEVEL_CALLBACK<pos:position pos:line="41" pos:column="43"/></name></expr>, <expr><literal type="number" pos:line="41" pos:column="45">0<pos:position pos:line="41" pos:column="46"/></literal></expr>, <expr><literal type="string" pos:line="41" pos:column="48">"indent-heuristic"<pos:position pos:line="41" pos:column="66"/></literal></expr>, <expr><name pos:line="41" pos:column="68">NULL<pos:position pos:line="41" pos:column="72"/></name></expr>, <expr><name pos:line="41" pos:column="74">NULL<pos:position pos:line="41" pos:column="78"/></name></expr>, <expr><call><name pos:line="41" pos:column="80">N_<pos:position pos:line="41" pos:column="82"/></name><argument_list pos:line="41" pos:column="82">(<argument><expr><literal type="string" pos:line="41" pos:column="83">"Use an experimental heuristic to improve diffs"<pos:position pos:line="41" pos:column="131"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="132"/></argument_list></call></expr>, <expr><name pos:line="41" pos:column="134">PARSE_OPT_NOARG<pos:position pos:line="41" pos:column="149"/></name></expr>, <expr><name pos:line="41" pos:column="151">parse_opt_unknown_cb<pos:position pos:line="41" pos:column="171"/></name></expr> }<pos:position pos:line="41" pos:column="173"/></block></expr>,

		<expr><call><name pos:line="43" pos:column="17">OPT_BIT<pos:position pos:line="43" pos:column="24"/></name><argument_list pos:line="43" pos:column="24">(<argument><expr><literal type="number" pos:line="43" pos:column="25">0<pos:position pos:line="43" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="28">"minimal"<pos:position pos:line="43" pos:column="37"/></literal></expr></argument>, <argument><expr><operator pos:line="43" pos:column="39">&amp;<pos:position pos:line="43" pos:column="44"/></operator><name pos:line="43" pos:column="40">xdl_opts<pos:position pos:line="43" pos:column="48"/></name></expr></argument>, <argument><expr><call><name pos:line="43" pos:column="50">N_<pos:position pos:line="43" pos:column="52"/></name><argument_list pos:line="43" pos:column="52">(<argument><expr><literal type="string" pos:line="43" pos:column="53">"Spend extra cycles to find better match"<pos:position pos:line="43" pos:column="94"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="95"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="43" pos:column="97">XDF_NEED_MINIMAL<pos:position pos:line="43" pos:column="113"/></name></expr></argument>)<pos:position pos:line="43" pos:column="114"/></argument_list></call></expr>,
		<expr><call><name pos:line="44" pos:column="17">OPT_STRING<pos:position pos:line="44" pos:column="27"/></name><argument_list pos:line="44" pos:column="27">(<argument><expr><literal type="char" pos:line="44" pos:column="28">'S'<pos:position pos:line="44" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="33">NULL<pos:position pos:line="44" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="39">&amp;<pos:position pos:line="44" pos:column="44"/></operator><name pos:line="44" pos:column="40">revs_file<pos:position pos:line="44" pos:column="49"/></name></expr></argument>, <argument><expr><call><name pos:line="44" pos:column="51">N_<pos:position pos:line="44" pos:column="53"/></name><argument_list pos:line="44" pos:column="53">(<argument><expr><literal type="string" pos:line="44" pos:column="54">"file"<pos:position pos:line="44" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="61"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="44" pos:column="63">N_<pos:position pos:line="44" pos:column="65"/></name><argument_list pos:line="44" pos:column="65">(<argument><expr><literal type="string" pos:line="44" pos:column="66">"Use revisions from &lt;file&gt; instead of calling git-rev-list"<pos:position pos:line="44" pos:column="131"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="126"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="127"/></argument_list></call></expr>,
		<expr><call><name pos:line="45" pos:column="17">OPT_STRING<pos:position pos:line="45" pos:column="27"/></name><argument_list pos:line="45" pos:column="27">(<argument><expr><literal type="number" pos:line="45" pos:column="28">0<pos:position pos:line="45" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="31">"contents"<pos:position pos:line="45" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="45" pos:column="43">&amp;<pos:position pos:line="45" pos:column="48"/></operator><name pos:line="45" pos:column="44">contents_from<pos:position pos:line="45" pos:column="57"/></name></expr></argument>, <argument><expr><call><name pos:line="45" pos:column="59">N_<pos:position pos:line="45" pos:column="61"/></name><argument_list pos:line="45" pos:column="61">(<argument><expr><literal type="string" pos:line="45" pos:column="62">"file"<pos:position pos:line="45" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="69"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="45" pos:column="71">N_<pos:position pos:line="45" pos:column="73"/></name><argument_list pos:line="45" pos:column="73">(<argument><expr><literal type="string" pos:line="45" pos:column="74">"Use &lt;file&gt;'s contents as the final image"<pos:position pos:line="45" pos:column="122"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="117"/></argument_list></call></expr></argument>)<pos:position pos:line="45" pos:column="118"/></argument_list></call></expr>,
		<expr><block pos:line="46" pos:column="17">{ <expr><name pos:line="46" pos:column="19">OPTION_CALLBACK<pos:position pos:line="46" pos:column="34"/></name></expr>, <expr><literal type="char" pos:line="46" pos:column="36">'C'<pos:position pos:line="46" pos:column="39"/></literal></expr>, <expr><name pos:line="46" pos:column="41">NULL<pos:position pos:line="46" pos:column="45"/></name></expr>, <expr><operator pos:line="46" pos:column="47">&amp;<pos:position pos:line="46" pos:column="52"/></operator><name pos:line="46" pos:column="48">opt<pos:position pos:line="46" pos:column="51"/></name></expr>, <expr><call><name pos:line="46" pos:column="53">N_<pos:position pos:line="46" pos:column="55"/></name><argument_list pos:line="46" pos:column="55">(<argument><expr><literal type="string" pos:line="46" pos:column="56">"score"<pos:position pos:line="46" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="64"/></argument_list></call></expr>, <expr><call><name pos:line="46" pos:column="66">N_<pos:position pos:line="46" pos:column="68"/></name><argument_list pos:line="46" pos:column="68">(<argument><expr><literal type="string" pos:line="46" pos:column="69">"Find line copies within and across files"<pos:position pos:line="46" pos:column="111"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="112"/></argument_list></call></expr>, <expr><name pos:line="46" pos:column="114">PARSE_OPT_OPTARG<pos:position pos:line="46" pos:column="130"/></name></expr>, <expr><name pos:line="46" pos:column="132">blame_copy_callback<pos:position pos:line="46" pos:column="151"/></name></expr> }<pos:position pos:line="46" pos:column="153"/></block></expr>,
		<expr><block pos:line="47" pos:column="17">{ <expr><name pos:line="47" pos:column="19">OPTION_CALLBACK<pos:position pos:line="47" pos:column="34"/></name></expr>, <expr><literal type="char" pos:line="47" pos:column="36">'M'<pos:position pos:line="47" pos:column="39"/></literal></expr>, <expr><name pos:line="47" pos:column="41">NULL<pos:position pos:line="47" pos:column="45"/></name></expr>, <expr><operator pos:line="47" pos:column="47">&amp;<pos:position pos:line="47" pos:column="52"/></operator><name pos:line="47" pos:column="48">opt<pos:position pos:line="47" pos:column="51"/></name></expr>, <expr><call><name pos:line="47" pos:column="53">N_<pos:position pos:line="47" pos:column="55"/></name><argument_list pos:line="47" pos:column="55">(<argument><expr><literal type="string" pos:line="47" pos:column="56">"score"<pos:position pos:line="47" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="64"/></argument_list></call></expr>, <expr><call><name pos:line="47" pos:column="66">N_<pos:position pos:line="47" pos:column="68"/></name><argument_list pos:line="47" pos:column="68">(<argument><expr><literal type="string" pos:line="47" pos:column="69">"Find line movements within and across files"<pos:position pos:line="47" pos:column="114"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="115"/></argument_list></call></expr>, <expr><name pos:line="47" pos:column="117">PARSE_OPT_OPTARG<pos:position pos:line="47" pos:column="133"/></name></expr>, <expr><name pos:line="47" pos:column="135">blame_move_callback<pos:position pos:line="47" pos:column="154"/></name></expr> }<pos:position pos:line="47" pos:column="156"/></block></expr>,
		<expr><call><name pos:line="48" pos:column="17">OPT_STRING_LIST<pos:position pos:line="48" pos:column="32"/></name><argument_list pos:line="48" pos:column="32">(<argument><expr><literal type="char" pos:line="48" pos:column="33">'L'<pos:position pos:line="48" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="48" pos:column="38">NULL<pos:position pos:line="48" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="48" pos:column="44">&amp;<pos:position pos:line="48" pos:column="49"/></operator><name pos:line="48" pos:column="45">range_list<pos:position pos:line="48" pos:column="55"/></name></expr></argument>, <argument><expr><call><name pos:line="48" pos:column="57">N_<pos:position pos:line="48" pos:column="59"/></name><argument_list pos:line="48" pos:column="59">(<argument><expr><literal type="string" pos:line="48" pos:column="60">"n,m"<pos:position pos:line="48" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="66"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="48" pos:column="68">N_<pos:position pos:line="48" pos:column="70"/></name><argument_list pos:line="48" pos:column="70">(<argument><expr><literal type="string" pos:line="48" pos:column="71">"Process only line range n,m, counting from 1"<pos:position pos:line="48" pos:column="117"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="118"/></argument_list></call></expr></argument>)<pos:position pos:line="48" pos:column="119"/></argument_list></call></expr>,
		<expr><call><name pos:line="49" pos:column="17">OPT__ABBREV<pos:position pos:line="49" pos:column="28"/></name><argument_list pos:line="49" pos:column="28">(<argument><expr><operator pos:line="49" pos:column="29">&amp;<pos:position pos:line="49" pos:column="34"/></operator><name pos:line="49" pos:column="30">abbrev<pos:position pos:line="49" pos:column="36"/></name></expr></argument>)<pos:position pos:line="49" pos:column="37"/></argument_list></call></expr>,
		<macro><name pos:line="50" pos:column="17">OPT_END<pos:position pos:line="50" pos:column="24"/></name><argument_list pos:line="50" pos:column="24">()<pos:position pos:line="50" pos:column="26"/></argument_list></macro>
	}<pos:position pos:line="51" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="51" pos:column="11"/></decl_stmt>

	<decl_stmt><decl><type><name><name pos:line="53" pos:column="9">struct<pos:position pos:line="53" pos:column="15"/></name> <name pos:line="53" pos:column="16">parse_opt_ctx_t<pos:position pos:line="53" pos:column="31"/></name></name></type> <name pos:line="53" pos:column="32">ctx<pos:position pos:line="53" pos:column="35"/></name></decl>;<pos:position pos:line="53" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="54" pos:column="9">int<pos:position pos:line="54" pos:column="12"/></name></type> <name pos:line="54" pos:column="13">cmd_is_annotate<pos:position pos:line="54" pos:column="28"/></name> <init pos:line="54" pos:column="29">= <expr><operator pos:line="54" pos:column="31">!<pos:position pos:line="54" pos:column="32"/></operator><call><name pos:line="54" pos:column="32">strcmp<pos:position pos:line="54" pos:column="38"/></name><argument_list pos:line="54" pos:column="38">(<argument><expr><name><name pos:line="54" pos:column="39">argv<pos:position pos:line="54" pos:column="43"/></name><index pos:line="54" pos:column="43">[<expr><literal type="number" pos:line="54" pos:column="44">0<pos:position pos:line="54" pos:column="45"/></literal></expr>]<pos:position pos:line="54" pos:column="46"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="48">"annotate"<pos:position pos:line="54" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="54" pos:column="60"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="55" pos:column="9">struct<pos:position pos:line="55" pos:column="15"/></name> <name pos:line="55" pos:column="16">range_set<pos:position pos:line="55" pos:column="25"/></name></name></type> <name pos:line="55" pos:column="26">ranges<pos:position pos:line="55" pos:column="32"/></name></decl>;<pos:position pos:line="55" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="56" pos:column="9">unsigned<pos:position pos:line="56" pos:column="17"/></name> <name pos:line="56" pos:column="18">int<pos:position pos:line="56" pos:column="21"/></name></type> <name pos:line="56" pos:column="22">range_i<pos:position pos:line="56" pos:column="29"/></name></decl>;<pos:position pos:line="56" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="57" pos:column="9">long<pos:position pos:line="57" pos:column="13"/></name></type> <name pos:line="57" pos:column="14">anchor<pos:position pos:line="57" pos:column="20"/></name></decl>;<pos:position pos:line="57" pos:column="21"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="59" pos:column="9">git_config<pos:position pos:line="59" pos:column="19"/></name><argument_list pos:line="59" pos:column="19">(<argument><expr><name pos:line="59" pos:column="20">git_blame_config<pos:position pos:line="59" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="59" pos:column="38">&amp;<pos:position pos:line="59" pos:column="43"/></operator><name pos:line="59" pos:column="39">output_option<pos:position pos:line="59" pos:column="52"/></name></expr></argument>)<pos:position pos:line="59" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="54"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="60" pos:column="9">init_revisions<pos:position pos:line="60" pos:column="23"/></name><argument_list pos:line="60" pos:column="23">(<argument><expr><operator pos:line="60" pos:column="24">&amp;<pos:position pos:line="60" pos:column="29"/></operator><name pos:line="60" pos:column="25">revs<pos:position pos:line="60" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="31">NULL<pos:position pos:line="60" pos:column="35"/></name></expr></argument>)<pos:position pos:line="60" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="61" pos:column="9">revs<pos:position pos:line="61" pos:column="13"/></name><operator pos:line="61" pos:column="13">.<pos:position pos:line="61" pos:column="14"/></operator><name pos:line="61" pos:column="14">date_mode<pos:position pos:line="61" pos:column="23"/></name></name> <operator pos:line="61" pos:column="24">=<pos:position pos:line="61" pos:column="25"/></operator> <name pos:line="61" pos:column="26">blame_date_mode<pos:position pos:line="61" pos:column="41"/></name></expr>;<pos:position pos:line="61" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="62" pos:column="9">DIFF_OPT_SET<pos:position pos:line="62" pos:column="21"/></name><argument_list pos:line="62" pos:column="21">(<argument><expr><operator pos:line="62" pos:column="22">&amp;<pos:position pos:line="62" pos:column="27"/></operator><name><name pos:line="62" pos:column="23">revs<pos:position pos:line="62" pos:column="27"/></name><operator pos:line="62" pos:column="27">.<pos:position pos:line="62" pos:column="28"/></operator><name pos:line="62" pos:column="28">diffopt<pos:position pos:line="62" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="37">ALLOW_TEXTCONV<pos:position pos:line="62" pos:column="51"/></name></expr></argument>)<pos:position pos:line="62" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="53"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="63" pos:column="9">DIFF_OPT_SET<pos:position pos:line="63" pos:column="21"/></name><argument_list pos:line="63" pos:column="21">(<argument><expr><operator pos:line="63" pos:column="22">&amp;<pos:position pos:line="63" pos:column="27"/></operator><name><name pos:line="63" pos:column="23">revs<pos:position pos:line="63" pos:column="27"/></name><operator pos:line="63" pos:column="27">.<pos:position pos:line="63" pos:column="28"/></operator><name pos:line="63" pos:column="28">diffopt<pos:position pos:line="63" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="37">FOLLOW_RENAMES<pos:position pos:line="63" pos:column="51"/></name></expr></argument>)<pos:position pos:line="63" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="53"/></expr_stmt>

	<expr_stmt><expr><name pos:line="65" pos:column="9">save_commit_buffer<pos:position pos:line="65" pos:column="27"/></name> <operator pos:line="65" pos:column="28">=<pos:position pos:line="65" pos:column="29"/></operator> <literal type="number" pos:line="65" pos:column="30">0<pos:position pos:line="65" pos:column="31"/></literal></expr>;<pos:position pos:line="65" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name pos:line="66" pos:column="9">dashdash_pos<pos:position pos:line="66" pos:column="21"/></name> <operator pos:line="66" pos:column="22">=<pos:position pos:line="66" pos:column="23"/></operator> <literal type="number" pos:line="66" pos:column="24">0<pos:position pos:line="66" pos:column="25"/></literal></expr>;<pos:position pos:line="66" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name pos:line="67" pos:column="9">show_progress<pos:position pos:line="67" pos:column="22"/></name> <operator pos:line="67" pos:column="23">=<pos:position pos:line="67" pos:column="24"/></operator> <operator pos:line="67" pos:column="25">-<pos:position pos:line="67" pos:column="26"/></operator><literal type="number" pos:line="67" pos:column="26">1<pos:position pos:line="67" pos:column="27"/></literal></expr>;<pos:position pos:line="67" pos:column="28"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="69" pos:column="9">parse_options_start<pos:position pos:line="69" pos:column="28"/></name><argument_list pos:line="69" pos:column="28">(<argument><expr><operator pos:line="69" pos:column="29">&amp;<pos:position pos:line="69" pos:column="34"/></operator><name pos:line="69" pos:column="30">ctx<pos:position pos:line="69" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="35">argc<pos:position pos:line="69" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="41">argv<pos:position pos:line="69" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="47">prefix<pos:position pos:line="69" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="55">options<pos:position pos:line="69" pos:column="62"/></name></expr></argument>,
			    <argument><expr><name pos:line="70" pos:column="29">PARSE_OPT_KEEP_DASHDASH<pos:position pos:line="70" pos:column="52"/></name> <operator pos:line="70" pos:column="53">|<pos:position pos:line="70" pos:column="54"/></operator> <name pos:line="70" pos:column="55">PARSE_OPT_KEEP_ARGV0<pos:position pos:line="70" pos:column="75"/></name></expr></argument>)<pos:position pos:line="70" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="77"/></expr_stmt>
	<for pos:line="71" pos:column="9">for <control pos:line="71" pos:column="13">(<init pos:line="71" pos:column="14">;<pos:position pos:line="71" pos:column="15"/></init><condition pos:line="71" pos:column="15">;<pos:position pos:line="71" pos:column="16"/></condition><incr/>)<pos:position pos:line="71" pos:column="17"/></control> <block pos:line="71" pos:column="18">{
		<switch pos:line="72" pos:column="17">switch <condition pos:line="72" pos:column="24">(<expr><call><name pos:line="72" pos:column="25">parse_options_step<pos:position pos:line="72" pos:column="43"/></name><argument_list pos:line="72" pos:column="43">(<argument><expr><operator pos:line="72" pos:column="44">&amp;<pos:position pos:line="72" pos:column="49"/></operator><name pos:line="72" pos:column="45">ctx<pos:position pos:line="72" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="50">options<pos:position pos:line="72" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="59">blame_opt_usage<pos:position pos:line="72" pos:column="74"/></name></expr></argument>)<pos:position pos:line="72" pos:column="75"/></argument_list></call></expr>)<pos:position pos:line="72" pos:column="76"/></condition> <block pos:line="72" pos:column="77">{
		<case pos:line="73" pos:column="17">case <expr><name pos:line="73" pos:column="22">PARSE_OPT_HELP<pos:position pos:line="73" pos:column="36"/></name></expr>:<pos:position pos:line="73" pos:column="37"/></case>
			<expr_stmt><expr><call><name pos:line="74" pos:column="25">exit<pos:position pos:line="74" pos:column="29"/></name><argument_list pos:line="74" pos:column="29">(<argument><expr><literal type="number" pos:line="74" pos:column="30">129<pos:position pos:line="74" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="35"/></expr_stmt>
		<case pos:line="75" pos:column="17">case <expr><name pos:line="75" pos:column="22">PARSE_OPT_DONE<pos:position pos:line="75" pos:column="36"/></name></expr>:<pos:position pos:line="75" pos:column="37"/></case>
			<if pos:line="76" pos:column="25">if <condition pos:line="76" pos:column="28">(<expr><name><name pos:line="76" pos:column="29">ctx<pos:position pos:line="76" pos:column="32"/></name><operator pos:line="76" pos:column="32">.<pos:position pos:line="76" pos:column="33"/></operator><name pos:line="76" pos:column="33">argv<pos:position pos:line="76" pos:column="37"/></name><index pos:line="76" pos:column="37">[<expr><literal type="number" pos:line="76" pos:column="38">0<pos:position pos:line="76" pos:column="39"/></literal></expr>]<pos:position pos:line="76" pos:column="40"/></index></name></expr>)<pos:position pos:line="76" pos:column="41"/></condition><then pos:line="76" pos:column="41">
				<block type="pseudo"><expr_stmt><expr><name pos:line="77" pos:column="33">dashdash_pos<pos:position pos:line="77" pos:column="45"/></name> <operator pos:line="77" pos:column="46">=<pos:position pos:line="77" pos:column="47"/></operator> <name><name pos:line="77" pos:column="48">ctx<pos:position pos:line="77" pos:column="51"/></name><operator pos:line="77" pos:column="51">.<pos:position pos:line="77" pos:column="52"/></operator><name pos:line="77" pos:column="52">cpidx<pos:position pos:line="77" pos:column="57"/></name></name></expr>;<pos:position pos:line="77" pos:column="58"/></expr_stmt></block></then></if>
			<goto pos:line="78" pos:column="25">goto <name pos:line="78" pos:column="30">parse_done<pos:position pos:line="78" pos:column="40"/></name>;<pos:position pos:line="78" pos:column="41"/></goto>
		}<pos:position pos:line="79" pos:column="18"/></block></switch>

		<if pos:line="81" pos:column="17">if <condition pos:line="81" pos:column="20">(<expr><operator pos:line="81" pos:column="21">!<pos:position pos:line="81" pos:column="22"/></operator><call><name pos:line="81" pos:column="22">strcmp<pos:position pos:line="81" pos:column="28"/></name><argument_list pos:line="81" pos:column="28">(<argument><expr><name><name pos:line="81" pos:column="29">ctx<pos:position pos:line="81" pos:column="32"/></name><operator pos:line="81" pos:column="32">.<pos:position pos:line="81" pos:column="33"/></operator><name pos:line="81" pos:column="33">argv<pos:position pos:line="81" pos:column="37"/></name><index pos:line="81" pos:column="37">[<expr><literal type="number" pos:line="81" pos:column="38">0<pos:position pos:line="81" pos:column="39"/></literal></expr>]<pos:position pos:line="81" pos:column="40"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="81" pos:column="42">"--reverse"<pos:position pos:line="81" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="81" pos:column="55"/></condition><then pos:line="81" pos:column="55"> <block pos:line="81" pos:column="56">{
			<expr_stmt><expr><name><name pos:line="82" pos:column="25">ctx<pos:position pos:line="82" pos:column="28"/></name><operator pos:line="82" pos:column="28">.<pos:position pos:line="82" pos:column="29"/></operator><name pos:line="82" pos:column="29">argv<pos:position pos:line="82" pos:column="33"/></name><index pos:line="82" pos:column="33">[<expr><literal type="number" pos:line="82" pos:column="34">0<pos:position pos:line="82" pos:column="35"/></literal></expr>]<pos:position pos:line="82" pos:column="36"/></index></name> <operator pos:line="82" pos:column="37">=<pos:position pos:line="82" pos:column="38"/></operator> <literal type="string" pos:line="82" pos:column="39">"--children"<pos:position pos:line="82" pos:column="51"/></literal></expr>;<pos:position pos:line="82" pos:column="52"/></expr_stmt>
			<expr_stmt><expr><name pos:line="83" pos:column="25">reverse<pos:position pos:line="83" pos:column="32"/></name> <operator pos:line="83" pos:column="33">=<pos:position pos:line="83" pos:column="34"/></operator> <literal type="number" pos:line="83" pos:column="35">1<pos:position pos:line="83" pos:column="36"/></literal></expr>;<pos:position pos:line="83" pos:column="37"/></expr_stmt>
		}<pos:position pos:line="84" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="85" pos:column="17">parse_revision_opt<pos:position pos:line="85" pos:column="35"/></name><argument_list pos:line="85" pos:column="35">(<argument><expr><operator pos:line="85" pos:column="36">&amp;<pos:position pos:line="85" pos:column="41"/></operator><name pos:line="85" pos:column="37">revs<pos:position pos:line="85" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="85" pos:column="43">&amp;<pos:position pos:line="85" pos:column="48"/></operator><name pos:line="85" pos:column="44">ctx<pos:position pos:line="85" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="49">options<pos:position pos:line="85" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="58">blame_opt_usage<pos:position pos:line="85" pos:column="73"/></name></expr></argument>)<pos:position pos:line="85" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="75"/></expr_stmt>
	}<pos:position pos:line="86" pos:column="10"/></block></for>
<label><name pos:line="87" pos:column="1">parse_done<pos:position pos:line="87" pos:column="11"/></name>:<pos:position pos:line="87" pos:column="12"/></label>
	<expr_stmt><expr><name pos:line="88" pos:column="9">no_whole_file_rename<pos:position pos:line="88" pos:column="29"/></name> <operator pos:line="88" pos:column="30">=<pos:position pos:line="88" pos:column="31"/></operator> <operator pos:line="88" pos:column="32">!<pos:position pos:line="88" pos:column="33"/></operator><call><name pos:line="88" pos:column="33">DIFF_OPT_TST<pos:position pos:line="88" pos:column="45"/></name><argument_list pos:line="88" pos:column="45">(<argument><expr><operator pos:line="88" pos:column="46">&amp;<pos:position pos:line="88" pos:column="51"/></operator><name><name pos:line="88" pos:column="47">revs<pos:position pos:line="88" pos:column="51"/></name><operator pos:line="88" pos:column="51">.<pos:position pos:line="88" pos:column="52"/></operator><name pos:line="88" pos:column="52">diffopt<pos:position pos:line="88" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="61">FOLLOW_RENAMES<pos:position pos:line="88" pos:column="75"/></name></expr></argument>)<pos:position pos:line="88" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="77"/></expr_stmt>
	<expr_stmt><expr><name pos:line="89" pos:column="9">xdl_opts<pos:position pos:line="89" pos:column="17"/></name> <operator pos:line="89" pos:column="18">|=<pos:position pos:line="89" pos:column="20"/></operator> <name><name pos:line="89" pos:column="21">revs<pos:position pos:line="89" pos:column="25"/></name><operator pos:line="89" pos:column="25">.<pos:position pos:line="89" pos:column="26"/></operator><name pos:line="89" pos:column="26">diffopt<pos:position pos:line="89" pos:column="33"/></name><operator pos:line="89" pos:column="33">.<pos:position pos:line="89" pos:column="34"/></operator><name pos:line="89" pos:column="34">xdl_opts<pos:position pos:line="89" pos:column="42"/></name></name> <operator pos:line="89" pos:column="43">&amp;<pos:position pos:line="89" pos:column="48"/></operator> <name pos:line="89" pos:column="45">XDF_INDENT_HEURISTIC<pos:position pos:line="89" pos:column="65"/></name></expr>;<pos:position pos:line="89" pos:column="66"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="90" pos:column="9">DIFF_OPT_CLR<pos:position pos:line="90" pos:column="21"/></name><argument_list pos:line="90" pos:column="21">(<argument><expr><operator pos:line="90" pos:column="22">&amp;<pos:position pos:line="90" pos:column="27"/></operator><name><name pos:line="90" pos:column="23">revs<pos:position pos:line="90" pos:column="27"/></name><operator pos:line="90" pos:column="27">.<pos:position pos:line="90" pos:column="28"/></operator><name pos:line="90" pos:column="28">diffopt<pos:position pos:line="90" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="37">FOLLOW_RENAMES<pos:position pos:line="90" pos:column="51"/></name></expr></argument>)<pos:position pos:line="90" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="53"/></expr_stmt>
	<expr_stmt><expr><name pos:line="91" pos:column="9">argc<pos:position pos:line="91" pos:column="13"/></name> <operator pos:line="91" pos:column="14">=<pos:position pos:line="91" pos:column="15"/></operator> <call><name pos:line="91" pos:column="16">parse_options_end<pos:position pos:line="91" pos:column="33"/></name><argument_list pos:line="91" pos:column="33">(<argument><expr><operator pos:line="91" pos:column="34">&amp;<pos:position pos:line="91" pos:column="39"/></operator><name pos:line="91" pos:column="35">ctx<pos:position pos:line="91" pos:column="38"/></name></expr></argument>)<pos:position pos:line="91" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="40"/></expr_stmt>

	<if pos:line="93" pos:column="9">if <condition pos:line="93" pos:column="12">(<expr><name pos:line="93" pos:column="13">incremental<pos:position pos:line="93" pos:column="24"/></name> <operator pos:line="93" pos:column="25">||<pos:position pos:line="93" pos:column="27"/></operator> <operator pos:line="93" pos:column="28">(<pos:position pos:line="93" pos:column="29"/></operator><name pos:line="93" pos:column="29">output_option<pos:position pos:line="93" pos:column="42"/></name> <operator pos:line="93" pos:column="43">&amp;<pos:position pos:line="93" pos:column="48"/></operator> <name pos:line="93" pos:column="45">OUTPUT_PORCELAIN<pos:position pos:line="93" pos:column="61"/></name><operator pos:line="93" pos:column="61">)<pos:position pos:line="93" pos:column="62"/></operator></expr>)<pos:position pos:line="93" pos:column="63"/></condition><then pos:line="93" pos:column="63"> <block pos:line="93" pos:column="64">{
		<if pos:line="94" pos:column="17">if <condition pos:line="94" pos:column="20">(<expr><name pos:line="94" pos:column="21">show_progress<pos:position pos:line="94" pos:column="34"/></name> <operator pos:line="94" pos:column="35">&gt;<pos:position pos:line="94" pos:column="39"/></operator> <literal type="number" pos:line="94" pos:column="37">0<pos:position pos:line="94" pos:column="38"/></literal></expr>)<pos:position pos:line="94" pos:column="39"/></condition><then pos:line="94" pos:column="39">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="95" pos:column="25">die<pos:position pos:line="95" pos:column="28"/></name><argument_list pos:line="95" pos:column="28">(<argument><expr><call><name pos:line="95" pos:column="29">_<pos:position pos:line="95" pos:column="30"/></name><argument_list pos:line="95" pos:column="30">(<argument><expr><literal type="string" pos:line="95" pos:column="31">"--progress can't be used with --incremental or porcelain formats"<pos:position pos:line="95" pos:column="97"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="98"/></argument_list></call></expr></argument>)<pos:position pos:line="95" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="100"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="96" pos:column="17">show_progress<pos:position pos:line="96" pos:column="30"/></name> <operator pos:line="96" pos:column="31">=<pos:position pos:line="96" pos:column="32"/></operator> <literal type="number" pos:line="96" pos:column="33">0<pos:position pos:line="96" pos:column="34"/></literal></expr>;<pos:position pos:line="96" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="97" pos:column="10"/></block></then> <elseif pos:line="97" pos:column="11">else <if pos:line="97" pos:column="16">if <condition pos:line="97" pos:column="19">(<expr><name pos:line="97" pos:column="20">show_progress<pos:position pos:line="97" pos:column="33"/></name> <operator pos:line="97" pos:column="34">&lt;<pos:position pos:line="97" pos:column="38"/></operator> <literal type="number" pos:line="97" pos:column="36">0<pos:position pos:line="97" pos:column="37"/></literal></expr>)<pos:position pos:line="97" pos:column="38"/></condition><then pos:line="97" pos:column="38">
		<block type="pseudo"><expr_stmt><expr><name pos:line="98" pos:column="17">show_progress<pos:position pos:line="98" pos:column="30"/></name> <operator pos:line="98" pos:column="31">=<pos:position pos:line="98" pos:column="32"/></operator> <call><name pos:line="98" pos:column="33">isatty<pos:position pos:line="98" pos:column="39"/></name><argument_list pos:line="98" pos:column="39">(<argument><expr><literal type="number" pos:line="98" pos:column="40">2<pos:position pos:line="98" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="98" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="43"/></expr_stmt></block></then></if></elseif></if>

	<if pos:line="100" pos:column="9">if <condition pos:line="100" pos:column="12">(<expr><literal type="number" pos:line="100" pos:column="13">0<pos:position pos:line="100" pos:column="14"/></literal> <operator pos:line="100" pos:column="15">&lt;<pos:position pos:line="100" pos:column="19"/></operator> <name pos:line="100" pos:column="17">abbrev<pos:position pos:line="100" pos:column="23"/></name> <operator pos:line="100" pos:column="24">&amp;&amp;<pos:position pos:line="100" pos:column="34"/></operator> <name pos:line="100" pos:column="27">abbrev<pos:position pos:line="100" pos:column="33"/></name> <operator pos:line="100" pos:column="34">&lt;<pos:position pos:line="100" pos:column="38"/></operator> <name pos:line="100" pos:column="36">GIT_SHA1_HEXSZ<pos:position pos:line="100" pos:column="50"/></name></expr>)<pos:position pos:line="100" pos:column="51"/></condition><then pos:line="100" pos:column="51">
		<comment type="block" pos:line="101" pos:column="17">/* one more abbrev length is needed for the boundary commit */</comment>
		<block type="pseudo"><expr_stmt><expr><name pos:line="102" pos:column="17">abbrev<pos:position pos:line="102" pos:column="23"/></name><operator pos:line="102" pos:column="23">++<pos:position pos:line="102" pos:column="25"/></operator></expr>;<pos:position pos:line="102" pos:column="26"/></expr_stmt></block></then>
	<elseif pos:line="103" pos:column="9">else <if pos:line="103" pos:column="14">if <condition pos:line="103" pos:column="17">(<expr><operator pos:line="103" pos:column="18">!<pos:position pos:line="103" pos:column="19"/></operator><name pos:line="103" pos:column="19">abbrev<pos:position pos:line="103" pos:column="25"/></name></expr>)<pos:position pos:line="103" pos:column="26"/></condition><then pos:line="103" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><name pos:line="104" pos:column="17">abbrev<pos:position pos:line="104" pos:column="23"/></name> <operator pos:line="104" pos:column="24">=<pos:position pos:line="104" pos:column="25"/></operator> <name pos:line="104" pos:column="26">GIT_SHA1_HEXSZ<pos:position pos:line="104" pos:column="40"/></name></expr>;<pos:position pos:line="104" pos:column="41"/></expr_stmt></block></then></if></elseif></if>

	<if pos:line="106" pos:column="9">if <condition pos:line="106" pos:column="12">(<expr><name pos:line="106" pos:column="13">revs_file<pos:position pos:line="106" pos:column="22"/></name> <operator pos:line="106" pos:column="23">&amp;&amp;<pos:position pos:line="106" pos:column="33"/></operator> <call><name pos:line="106" pos:column="26">read_ancestry<pos:position pos:line="106" pos:column="39"/></name><argument_list pos:line="106" pos:column="39">(<argument><expr><name pos:line="106" pos:column="40">revs_file<pos:position pos:line="106" pos:column="49"/></name></expr></argument>)<pos:position pos:line="106" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="106" pos:column="51"/></condition><then pos:line="106" pos:column="51">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="107" pos:column="17">die_errno<pos:position pos:line="107" pos:column="26"/></name><argument_list pos:line="107" pos:column="26">(<argument><expr><literal type="string" pos:line="107" pos:column="27">"reading graft file '%s' failed"<pos:position pos:line="107" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="107" pos:column="61">revs_file<pos:position pos:line="107" pos:column="70"/></name></expr></argument>)<pos:position pos:line="107" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="72"/></expr_stmt></block></then></if>

	<if pos:line="109" pos:column="9">if <condition pos:line="109" pos:column="12">(<expr><name pos:line="109" pos:column="13">cmd_is_annotate<pos:position pos:line="109" pos:column="28"/></name></expr>)<pos:position pos:line="109" pos:column="29"/></condition><then pos:line="109" pos:column="29"> <block pos:line="109" pos:column="30">{
		<expr_stmt><expr><name pos:line="110" pos:column="17">output_option<pos:position pos:line="110" pos:column="30"/></name> <operator pos:line="110" pos:column="31">|=<pos:position pos:line="110" pos:column="33"/></operator> <name pos:line="110" pos:column="34">OUTPUT_ANNOTATE_COMPAT<pos:position pos:line="110" pos:column="56"/></name></expr>;<pos:position pos:line="110" pos:column="57"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="111" pos:column="17">blame_date_mode<pos:position pos:line="111" pos:column="32"/></name><operator pos:line="111" pos:column="32">.<pos:position pos:line="111" pos:column="33"/></operator><name pos:line="111" pos:column="33">type<pos:position pos:line="111" pos:column="37"/></name></name> <operator pos:line="111" pos:column="38">=<pos:position pos:line="111" pos:column="39"/></operator> <name pos:line="111" pos:column="40">DATE_ISO8601<pos:position pos:line="111" pos:column="52"/></name></expr>;<pos:position pos:line="111" pos:column="53"/></expr_stmt>
	}<pos:position pos:line="112" pos:column="10"/></block></then> <else pos:line="112" pos:column="11">else <block pos:line="112" pos:column="16">{
		<expr_stmt><expr><name pos:line="113" pos:column="17">blame_date_mode<pos:position pos:line="113" pos:column="32"/></name> <operator pos:line="113" pos:column="33">=<pos:position pos:line="113" pos:column="34"/></operator> <name><name pos:line="113" pos:column="35">revs<pos:position pos:line="113" pos:column="39"/></name><operator pos:line="113" pos:column="39">.<pos:position pos:line="113" pos:column="40"/></operator><name pos:line="113" pos:column="40">date_mode<pos:position pos:line="113" pos:column="49"/></name></name></expr>;<pos:position pos:line="113" pos:column="50"/></expr_stmt>
	}<pos:position pos:line="114" pos:column="10"/></block></else></if>

	<comment type="block" pos:line="116" pos:column="9">/* The maximum width used to show the dates */</comment>
	<switch pos:line="117" pos:column="9">switch <condition pos:line="117" pos:column="16">(<expr><name><name pos:line="117" pos:column="17">blame_date_mode<pos:position pos:line="117" pos:column="32"/></name><operator pos:line="117" pos:column="32">.<pos:position pos:line="117" pos:column="33"/></operator><name pos:line="117" pos:column="33">type<pos:position pos:line="117" pos:column="37"/></name></name></expr>)<pos:position pos:line="117" pos:column="38"/></condition> <block pos:line="117" pos:column="39">{
	<case pos:line="118" pos:column="9">case <expr><name pos:line="118" pos:column="14">DATE_RFC2822<pos:position pos:line="118" pos:column="26"/></name></expr>:<pos:position pos:line="118" pos:column="27"/></case>
		<expr_stmt><expr><name pos:line="119" pos:column="17">blame_date_width<pos:position pos:line="119" pos:column="33"/></name> <operator pos:line="119" pos:column="34">=<pos:position pos:line="119" pos:column="35"/></operator> <sizeof pos:line="119" pos:column="36">sizeof<argument_list pos:line="119" pos:column="42">(<argument><expr><literal type="string" pos:line="119" pos:column="43">"Thu, 19 Oct 2006 16:00:04 -0700"<pos:position pos:line="119" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="119" pos:column="77"/></argument_list></sizeof></expr>;<pos:position pos:line="119" pos:column="78"/></expr_stmt>
		<break pos:line="120" pos:column="17">break;<pos:position pos:line="120" pos:column="23"/></break>
	<case pos:line="121" pos:column="9">case <expr><name pos:line="121" pos:column="14">DATE_ISO8601_STRICT<pos:position pos:line="121" pos:column="33"/></name></expr>:<pos:position pos:line="121" pos:column="34"/></case>
		<expr_stmt><expr><name pos:line="122" pos:column="17">blame_date_width<pos:position pos:line="122" pos:column="33"/></name> <operator pos:line="122" pos:column="34">=<pos:position pos:line="122" pos:column="35"/></operator> <sizeof pos:line="122" pos:column="36">sizeof<argument_list pos:line="122" pos:column="42">(<argument><expr><literal type="string" pos:line="122" pos:column="43">"2006-10-19T16:00:04-07:00"<pos:position pos:line="122" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="122" pos:column="71"/></argument_list></sizeof></expr>;<pos:position pos:line="122" pos:column="72"/></expr_stmt>
		<break pos:line="123" pos:column="17">break;<pos:position pos:line="123" pos:column="23"/></break>
	<case pos:line="124" pos:column="9">case <expr><name pos:line="124" pos:column="14">DATE_ISO8601<pos:position pos:line="124" pos:column="26"/></name></expr>:<pos:position pos:line="124" pos:column="27"/></case>
		<expr_stmt><expr><name pos:line="125" pos:column="17">blame_date_width<pos:position pos:line="125" pos:column="33"/></name> <operator pos:line="125" pos:column="34">=<pos:position pos:line="125" pos:column="35"/></operator> <sizeof pos:line="125" pos:column="36">sizeof<argument_list pos:line="125" pos:column="42">(<argument><expr><literal type="string" pos:line="125" pos:column="43">"2006-10-19 16:00:04 -0700"<pos:position pos:line="125" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="125" pos:column="71"/></argument_list></sizeof></expr>;<pos:position pos:line="125" pos:column="72"/></expr_stmt>
		<break pos:line="126" pos:column="17">break;<pos:position pos:line="126" pos:column="23"/></break>
	<case pos:line="127" pos:column="9">case <expr><name pos:line="127" pos:column="14">DATE_RAW<pos:position pos:line="127" pos:column="22"/></name></expr>:<pos:position pos:line="127" pos:column="23"/></case>
		<expr_stmt><expr><name pos:line="128" pos:column="17">blame_date_width<pos:position pos:line="128" pos:column="33"/></name> <operator pos:line="128" pos:column="34">=<pos:position pos:line="128" pos:column="35"/></operator> <sizeof pos:line="128" pos:column="36">sizeof<argument_list pos:line="128" pos:column="42">(<argument><expr><literal type="string" pos:line="128" pos:column="43">"1161298804 -0700"<pos:position pos:line="128" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="128" pos:column="62"/></argument_list></sizeof></expr>;<pos:position pos:line="128" pos:column="63"/></expr_stmt>
		<break pos:line="129" pos:column="17">break;<pos:position pos:line="129" pos:column="23"/></break>
	<case pos:line="130" pos:column="9">case <expr><name pos:line="130" pos:column="14">DATE_UNIX<pos:position pos:line="130" pos:column="23"/></name></expr>:<pos:position pos:line="130" pos:column="24"/></case>
		<expr_stmt><expr><name pos:line="131" pos:column="17">blame_date_width<pos:position pos:line="131" pos:column="33"/></name> <operator pos:line="131" pos:column="34">=<pos:position pos:line="131" pos:column="35"/></operator> <sizeof pos:line="131" pos:column="36">sizeof<argument_list pos:line="131" pos:column="42">(<argument><expr><literal type="string" pos:line="131" pos:column="43">"1161298804"<pos:position pos:line="131" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="131" pos:column="56"/></argument_list></sizeof></expr>;<pos:position pos:line="131" pos:column="57"/></expr_stmt>
		<break pos:line="132" pos:column="17">break;<pos:position pos:line="132" pos:column="23"/></break>
	<case pos:line="133" pos:column="9">case <expr><name pos:line="133" pos:column="14">DATE_SHORT<pos:position pos:line="133" pos:column="24"/></name></expr>:<pos:position pos:line="133" pos:column="25"/></case>
		<expr_stmt><expr><name pos:line="134" pos:column="17">blame_date_width<pos:position pos:line="134" pos:column="33"/></name> <operator pos:line="134" pos:column="34">=<pos:position pos:line="134" pos:column="35"/></operator> <sizeof pos:line="134" pos:column="36">sizeof<argument_list pos:line="134" pos:column="42">(<argument><expr><literal type="string" pos:line="134" pos:column="43">"2006-10-19"<pos:position pos:line="134" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="134" pos:column="56"/></argument_list></sizeof></expr>;<pos:position pos:line="134" pos:column="57"/></expr_stmt>
		<break pos:line="135" pos:column="17">break;<pos:position pos:line="135" pos:column="23"/></break>
	<case pos:line="136" pos:column="9">case <expr><name pos:line="136" pos:column="14">DATE_RELATIVE<pos:position pos:line="136" pos:column="27"/></name></expr>:<pos:position pos:line="136" pos:column="28"/></case>
		<comment type="block" pos:line="137" pos:column="17">/*
		 * TRANSLATORS: This string is used to tell us the
		 * maximum display width for a relative timestamp in
		 * "git blame" output.  For C locale, "4 years, 11
		 * months ago", which takes 22 places, is the longest
		 * among various forms of relative timestamps, but
		 * your language may need more or fewer display
		 * columns.
		 */</comment>
		<expr_stmt><expr><name pos:line="146" pos:column="17">blame_date_width<pos:position pos:line="146" pos:column="33"/></name> <operator pos:line="146" pos:column="34">=<pos:position pos:line="146" pos:column="35"/></operator> <call><name pos:line="146" pos:column="36">utf8_strwidth<pos:position pos:line="146" pos:column="49"/></name><argument_list pos:line="146" pos:column="49">(<argument><expr><call><name pos:line="146" pos:column="50">_<pos:position pos:line="146" pos:column="51"/></name><argument_list pos:line="146" pos:column="51">(<argument><expr><literal type="string" pos:line="146" pos:column="52">"4 years, 11 months ago"<pos:position pos:line="146" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="146" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="146" pos:column="78"/></argument_list></call> <operator pos:line="146" pos:column="79">+<pos:position pos:line="146" pos:column="80"/></operator> <literal type="number" pos:line="146" pos:column="81">1<pos:position pos:line="146" pos:column="82"/></literal></expr>;<pos:position pos:line="146" pos:column="83"/></expr_stmt> <comment type="block" pos:line="146" pos:column="84">/* add the null */</comment>
		<break pos:line="147" pos:column="17">break;<pos:position pos:line="147" pos:column="23"/></break>
	<case pos:line="148" pos:column="9">case <expr><name pos:line="148" pos:column="14">DATE_NORMAL<pos:position pos:line="148" pos:column="25"/></name></expr>:<pos:position pos:line="148" pos:column="26"/></case>
		<expr_stmt><expr><name pos:line="149" pos:column="17">blame_date_width<pos:position pos:line="149" pos:column="33"/></name> <operator pos:line="149" pos:column="34">=<pos:position pos:line="149" pos:column="35"/></operator> <sizeof pos:line="149" pos:column="36">sizeof<argument_list pos:line="149" pos:column="42">(<argument><expr><literal type="string" pos:line="149" pos:column="43">"Thu Oct 19 16:00:04 2006 -0700"<pos:position pos:line="149" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="149" pos:column="76"/></argument_list></sizeof></expr>;<pos:position pos:line="149" pos:column="77"/></expr_stmt>
		<break pos:line="150" pos:column="17">break;<pos:position pos:line="150" pos:column="23"/></break>
	<case pos:line="151" pos:column="9">case <expr><name pos:line="151" pos:column="14">DATE_STRFTIME<pos:position pos:line="151" pos:column="27"/></name></expr>:<pos:position pos:line="151" pos:column="28"/></case>
		<expr_stmt><expr><name pos:line="152" pos:column="17">blame_date_width<pos:position pos:line="152" pos:column="33"/></name> <operator pos:line="152" pos:column="34">=<pos:position pos:line="152" pos:column="35"/></operator> <call><name pos:line="152" pos:column="36">strlen<pos:position pos:line="152" pos:column="42"/></name><argument_list pos:line="152" pos:column="42">(<argument><expr><call><name pos:line="152" pos:column="43">show_date<pos:position pos:line="152" pos:column="52"/></name><argument_list pos:line="152" pos:column="52">(<argument><expr><literal type="number" pos:line="152" pos:column="53">0<pos:position pos:line="152" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="152" pos:column="56">0<pos:position pos:line="152" pos:column="57"/></literal></expr></argument>, <argument><expr><operator pos:line="152" pos:column="59">&amp;<pos:position pos:line="152" pos:column="64"/></operator><name pos:line="152" pos:column="60">blame_date_mode<pos:position pos:line="152" pos:column="75"/></name></expr></argument>)<pos:position pos:line="152" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="152" pos:column="77"/></argument_list></call> <operator pos:line="152" pos:column="78">+<pos:position pos:line="152" pos:column="79"/></operator> <literal type="number" pos:line="152" pos:column="80">1<pos:position pos:line="152" pos:column="81"/></literal></expr>;<pos:position pos:line="152" pos:column="82"/></expr_stmt> <comment type="block" pos:line="152" pos:column="83">/* add the null */</comment>
		<break pos:line="153" pos:column="17">break;<pos:position pos:line="153" pos:column="23"/></break>
	}<pos:position pos:line="154" pos:column="10"/></block></switch>
	<expr_stmt><expr><name pos:line="155" pos:column="9">blame_date_width<pos:position pos:line="155" pos:column="25"/></name> <operator pos:line="155" pos:column="26">-=<pos:position pos:line="155" pos:column="28"/></operator> <literal type="number" pos:line="155" pos:column="29">1<pos:position pos:line="155" pos:column="30"/></literal></expr>;<pos:position pos:line="155" pos:column="31"/></expr_stmt> <comment type="block" pos:line="155" pos:column="32">/* strip the null */</comment>

	<if pos:line="157" pos:column="9">if <condition pos:line="157" pos:column="12">(<expr><call><name pos:line="157" pos:column="13">DIFF_OPT_TST<pos:position pos:line="157" pos:column="25"/></name><argument_list pos:line="157" pos:column="25">(<argument><expr><operator pos:line="157" pos:column="26">&amp;<pos:position pos:line="157" pos:column="31"/></operator><name><name pos:line="157" pos:column="27">revs<pos:position pos:line="157" pos:column="31"/></name><operator pos:line="157" pos:column="31">.<pos:position pos:line="157" pos:column="32"/></operator><name pos:line="157" pos:column="32">diffopt<pos:position pos:line="157" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="157" pos:column="41">FIND_COPIES_HARDER<pos:position pos:line="157" pos:column="59"/></name></expr></argument>)<pos:position pos:line="157" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="157" pos:column="61"/></condition><then pos:line="157" pos:column="61">
		<block type="pseudo"><expr_stmt><expr><name pos:line="158" pos:column="17">opt<pos:position pos:line="158" pos:column="20"/></name> <operator pos:line="158" pos:column="21">|=<pos:position pos:line="158" pos:column="23"/></operator> <operator pos:line="158" pos:column="24">(<pos:position pos:line="158" pos:column="25"/></operator><name pos:line="158" pos:column="25">PICKAXE_BLAME_COPY<pos:position pos:line="158" pos:column="43"/></name> <operator pos:line="158" pos:column="44">|<pos:position pos:line="158" pos:column="45"/></operator> <name pos:line="158" pos:column="46">PICKAXE_BLAME_MOVE<pos:position pos:line="158" pos:column="64"/></name> <operator pos:line="158" pos:column="65">|<pos:position pos:line="158" pos:column="66"/></operator>
			<name pos:line="159" pos:column="25">PICKAXE_BLAME_COPY_HARDER<pos:position pos:line="159" pos:column="50"/></name><operator pos:line="159" pos:column="50">)<pos:position pos:line="159" pos:column="51"/></operator></expr>;<pos:position pos:line="159" pos:column="52"/></expr_stmt></block></then></if>

	<if pos:line="161" pos:column="9">if <condition pos:line="161" pos:column="12">(<expr><operator pos:line="161" pos:column="13">!<pos:position pos:line="161" pos:column="14"/></operator><name pos:line="161" pos:column="14">blame_move_score<pos:position pos:line="161" pos:column="30"/></name></expr>)<pos:position pos:line="161" pos:column="31"/></condition><then pos:line="161" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><name pos:line="162" pos:column="17">blame_move_score<pos:position pos:line="162" pos:column="33"/></name> <operator pos:line="162" pos:column="34">=<pos:position pos:line="162" pos:column="35"/></operator> <name pos:line="162" pos:column="36">BLAME_DEFAULT_MOVE_SCORE<pos:position pos:line="162" pos:column="60"/></name></expr>;<pos:position pos:line="162" pos:column="61"/></expr_stmt></block></then></if>
	<if pos:line="163" pos:column="9">if <condition pos:line="163" pos:column="12">(<expr><operator pos:line="163" pos:column="13">!<pos:position pos:line="163" pos:column="14"/></operator><name pos:line="163" pos:column="14">blame_copy_score<pos:position pos:line="163" pos:column="30"/></name></expr>)<pos:position pos:line="163" pos:column="31"/></condition><then pos:line="163" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><name pos:line="164" pos:column="17">blame_copy_score<pos:position pos:line="164" pos:column="33"/></name> <operator pos:line="164" pos:column="34">=<pos:position pos:line="164" pos:column="35"/></operator> <name pos:line="164" pos:column="36">BLAME_DEFAULT_COPY_SCORE<pos:position pos:line="164" pos:column="60"/></name></expr>;<pos:position pos:line="164" pos:column="61"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="166" pos:column="9">/*
	 * We have collected options unknown to us in argv[1..unk]
	 * which are to be passed to revision machinery if we are
	 * going to do the "bottom" processing.
	 *
	 * The remaining are:
	 *
	 * (1) if dashdash_pos != 0, it is either
	 *     "blame [revisions] -- &lt;path&gt;" or
	 *     "blame -- &lt;path&gt; &lt;rev&gt;"
	 *
	 * (2) otherwise, it is one of the two:
	 *     "blame [revisions] &lt;path&gt;"
	 *     "blame &lt;path&gt; &lt;rev&gt;"
	 *
	 * Note that we must strip out &lt;path&gt; from the arguments: we do not
	 * want the path pruning but we may want "bottom" processing.
	 */</comment>
	<if pos:line="184" pos:column="9">if <condition pos:line="184" pos:column="12">(<expr><name pos:line="184" pos:column="13">dashdash_pos<pos:position pos:line="184" pos:column="25"/></name></expr>)<pos:position pos:line="184" pos:column="26"/></condition><then pos:line="184" pos:column="26"> <block pos:line="184" pos:column="27">{
		<switch pos:line="185" pos:column="17">switch <condition pos:line="185" pos:column="24">(<expr><name pos:line="185" pos:column="25">argc<pos:position pos:line="185" pos:column="29"/></name> <operator pos:line="185" pos:column="30">-<pos:position pos:line="185" pos:column="31"/></operator> <name pos:line="185" pos:column="32">dashdash_pos<pos:position pos:line="185" pos:column="44"/></name> <operator pos:line="185" pos:column="45">-<pos:position pos:line="185" pos:column="46"/></operator> <literal type="number" pos:line="185" pos:column="47">1<pos:position pos:line="185" pos:column="48"/></literal></expr>)<pos:position pos:line="185" pos:column="49"/></condition> <block pos:line="185" pos:column="50">{
		<case pos:line="186" pos:column="17">case <expr><literal type="number" pos:line="186" pos:column="22">2<pos:position pos:line="186" pos:column="23"/></literal></expr>:<pos:position pos:line="186" pos:column="24"/></case> <comment type="block" pos:line="186" pos:column="25">/* (1b) */</comment>
			<if pos:line="187" pos:column="25">if <condition pos:line="187" pos:column="28">(<expr><name pos:line="187" pos:column="29">argc<pos:position pos:line="187" pos:column="33"/></name> <operator pos:line="187" pos:column="34">!=<pos:position pos:line="187" pos:column="36"/></operator> <literal type="number" pos:line="187" pos:column="37">4<pos:position pos:line="187" pos:column="38"/></literal></expr>)<pos:position pos:line="187" pos:column="39"/></condition><then pos:line="187" pos:column="39">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="188" pos:column="33">usage_with_options<pos:position pos:line="188" pos:column="51"/></name><argument_list pos:line="188" pos:column="51">(<argument><expr><name pos:line="188" pos:column="52">blame_opt_usage<pos:position pos:line="188" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="188" pos:column="69">options<pos:position pos:line="188" pos:column="76"/></name></expr></argument>)<pos:position pos:line="188" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="188" pos:column="78"/></expr_stmt></block></then></if>
			<comment type="block" pos:line="189" pos:column="25">/* reorder for the new way: &lt;rev&gt; -- &lt;path&gt; */</comment>
			<expr_stmt><expr><name><name pos:line="190" pos:column="25">argv<pos:position pos:line="190" pos:column="29"/></name><index pos:line="190" pos:column="29">[<expr><literal type="number" pos:line="190" pos:column="30">1<pos:position pos:line="190" pos:column="31"/></literal></expr>]<pos:position pos:line="190" pos:column="32"/></index></name> <operator pos:line="190" pos:column="33">=<pos:position pos:line="190" pos:column="34"/></operator> <name><name pos:line="190" pos:column="35">argv<pos:position pos:line="190" pos:column="39"/></name><index pos:line="190" pos:column="39">[<expr><literal type="number" pos:line="190" pos:column="40">3<pos:position pos:line="190" pos:column="41"/></literal></expr>]<pos:position pos:line="190" pos:column="42"/></index></name></expr>;<pos:position pos:line="190" pos:column="43"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="191" pos:column="25">argv<pos:position pos:line="191" pos:column="29"/></name><index pos:line="191" pos:column="29">[<expr><literal type="number" pos:line="191" pos:column="30">3<pos:position pos:line="191" pos:column="31"/></literal></expr>]<pos:position pos:line="191" pos:column="32"/></index></name> <operator pos:line="191" pos:column="33">=<pos:position pos:line="191" pos:column="34"/></operator> <name><name pos:line="191" pos:column="35">argv<pos:position pos:line="191" pos:column="39"/></name><index pos:line="191" pos:column="39">[<expr><literal type="number" pos:line="191" pos:column="40">2<pos:position pos:line="191" pos:column="41"/></literal></expr>]<pos:position pos:line="191" pos:column="42"/></index></name></expr>;<pos:position pos:line="191" pos:column="43"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="192" pos:column="25">argv<pos:position pos:line="192" pos:column="29"/></name><index pos:line="192" pos:column="29">[<expr><literal type="number" pos:line="192" pos:column="30">2<pos:position pos:line="192" pos:column="31"/></literal></expr>]<pos:position pos:line="192" pos:column="32"/></index></name> <operator pos:line="192" pos:column="33">=<pos:position pos:line="192" pos:column="34"/></operator> <literal type="string" pos:line="192" pos:column="35">"--"<pos:position pos:line="192" pos:column="39"/></literal></expr>;<pos:position pos:line="192" pos:column="40"/></expr_stmt>
			<comment type="block" pos:line="193" pos:column="25">/* FALLTHROUGH */</comment>
		<case pos:line="194" pos:column="17">case <expr><literal type="number" pos:line="194" pos:column="22">1<pos:position pos:line="194" pos:column="23"/></literal></expr>:<pos:position pos:line="194" pos:column="24"/></case> <comment type="block" pos:line="194" pos:column="25">/* (1a) */</comment>
			<expr_stmt><expr><name pos:line="195" pos:column="25">path<pos:position pos:line="195" pos:column="29"/></name> <operator pos:line="195" pos:column="30">=<pos:position pos:line="195" pos:column="31"/></operator> <call><name pos:line="195" pos:column="32">add_prefix<pos:position pos:line="195" pos:column="42"/></name><argument_list pos:line="195" pos:column="42">(<argument><expr><name pos:line="195" pos:column="43">prefix<pos:position pos:line="195" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="195" pos:column="51">argv<pos:position pos:line="195" pos:column="55"/></name><index pos:line="195" pos:column="55">[<expr><operator pos:line="195" pos:column="56">--<pos:position pos:line="195" pos:column="58"/></operator><name pos:line="195" pos:column="58">argc<pos:position pos:line="195" pos:column="62"/></name></expr>]<pos:position pos:line="195" pos:column="63"/></index></name></expr></argument>)<pos:position pos:line="195" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="195" pos:column="65"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="196" pos:column="25">argv<pos:position pos:line="196" pos:column="29"/></name><index pos:line="196" pos:column="29">[<expr><name pos:line="196" pos:column="30">argc<pos:position pos:line="196" pos:column="34"/></name></expr>]<pos:position pos:line="196" pos:column="35"/></index></name> <operator pos:line="196" pos:column="36">=<pos:position pos:line="196" pos:column="37"/></operator> <name pos:line="196" pos:column="38">NULL<pos:position pos:line="196" pos:column="42"/></name></expr>;<pos:position pos:line="196" pos:column="43"/></expr_stmt>
			<break pos:line="197" pos:column="25">break;<pos:position pos:line="197" pos:column="31"/></break>
		<default pos:line="198" pos:column="17">default:<pos:position pos:line="198" pos:column="25"/></default>
			<expr_stmt><expr><call><name pos:line="199" pos:column="25">usage_with_options<pos:position pos:line="199" pos:column="43"/></name><argument_list pos:line="199" pos:column="43">(<argument><expr><name pos:line="199" pos:column="44">blame_opt_usage<pos:position pos:line="199" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="199" pos:column="61">options<pos:position pos:line="199" pos:column="68"/></name></expr></argument>)<pos:position pos:line="199" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="199" pos:column="70"/></expr_stmt>
		}<pos:position pos:line="200" pos:column="18"/></block></switch>
	}<pos:position pos:line="201" pos:column="10"/></block></then> <else pos:line="201" pos:column="11">else <block pos:line="201" pos:column="16">{
		<if pos:line="202" pos:column="17">if <condition pos:line="202" pos:column="20">(<expr><name pos:line="202" pos:column="21">argc<pos:position pos:line="202" pos:column="25"/></name> <operator pos:line="202" pos:column="26">&lt;<pos:position pos:line="202" pos:column="30"/></operator> <literal type="number" pos:line="202" pos:column="28">2<pos:position pos:line="202" pos:column="29"/></literal></expr>)<pos:position pos:line="202" pos:column="30"/></condition><then pos:line="202" pos:column="30">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="203" pos:column="25">usage_with_options<pos:position pos:line="203" pos:column="43"/></name><argument_list pos:line="203" pos:column="43">(<argument><expr><name pos:line="203" pos:column="44">blame_opt_usage<pos:position pos:line="203" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="203" pos:column="61">options<pos:position pos:line="203" pos:column="68"/></name></expr></argument>)<pos:position pos:line="203" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="203" pos:column="70"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="204" pos:column="17">path<pos:position pos:line="204" pos:column="21"/></name> <operator pos:line="204" pos:column="22">=<pos:position pos:line="204" pos:column="23"/></operator> <call><name pos:line="204" pos:column="24">add_prefix<pos:position pos:line="204" pos:column="34"/></name><argument_list pos:line="204" pos:column="34">(<argument><expr><name pos:line="204" pos:column="35">prefix<pos:position pos:line="204" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="204" pos:column="43">argv<pos:position pos:line="204" pos:column="47"/></name><index pos:line="204" pos:column="47">[<expr><name pos:line="204" pos:column="48">argc<pos:position pos:line="204" pos:column="52"/></name> <operator pos:line="204" pos:column="53">-<pos:position pos:line="204" pos:column="54"/></operator> <literal type="number" pos:line="204" pos:column="55">1<pos:position pos:line="204" pos:column="56"/></literal></expr>]<pos:position pos:line="204" pos:column="57"/></index></name></expr></argument>)<pos:position pos:line="204" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="204" pos:column="59"/></expr_stmt>
		<if pos:line="205" pos:column="17">if <condition pos:line="205" pos:column="20">(<expr><name pos:line="205" pos:column="21">argc<pos:position pos:line="205" pos:column="25"/></name> <operator pos:line="205" pos:column="26">==<pos:position pos:line="205" pos:column="28"/></operator> <literal type="number" pos:line="205" pos:column="29">3<pos:position pos:line="205" pos:column="30"/></literal> <operator pos:line="205" pos:column="31">&amp;&amp;<pos:position pos:line="205" pos:column="41"/></operator> <operator pos:line="205" pos:column="34">!<pos:position pos:line="205" pos:column="35"/></operator><call><name pos:line="205" pos:column="35">file_exists<pos:position pos:line="205" pos:column="46"/></name><argument_list pos:line="205" pos:column="46">(<argument><expr><name pos:line="205" pos:column="47">path<pos:position pos:line="205" pos:column="51"/></name></expr></argument>)<pos:position pos:line="205" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="205" pos:column="53"/></condition><then pos:line="205" pos:column="53"> <block pos:line="205" pos:column="54">{ <comment type="block" pos:line="205" pos:column="56">/* (2b) */</comment>
			<expr_stmt><expr><name pos:line="206" pos:column="25">path<pos:position pos:line="206" pos:column="29"/></name> <operator pos:line="206" pos:column="30">=<pos:position pos:line="206" pos:column="31"/></operator> <call><name pos:line="206" pos:column="32">add_prefix<pos:position pos:line="206" pos:column="42"/></name><argument_list pos:line="206" pos:column="42">(<argument><expr><name pos:line="206" pos:column="43">prefix<pos:position pos:line="206" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="206" pos:column="51">argv<pos:position pos:line="206" pos:column="55"/></name><index pos:line="206" pos:column="55">[<expr><literal type="number" pos:line="206" pos:column="56">1<pos:position pos:line="206" pos:column="57"/></literal></expr>]<pos:position pos:line="206" pos:column="58"/></index></name></expr></argument>)<pos:position pos:line="206" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="206" pos:column="60"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="207" pos:column="25">argv<pos:position pos:line="207" pos:column="29"/></name><index pos:line="207" pos:column="29">[<expr><literal type="number" pos:line="207" pos:column="30">1<pos:position pos:line="207" pos:column="31"/></literal></expr>]<pos:position pos:line="207" pos:column="32"/></index></name> <operator pos:line="207" pos:column="33">=<pos:position pos:line="207" pos:column="34"/></operator> <name><name pos:line="207" pos:column="35">argv<pos:position pos:line="207" pos:column="39"/></name><index pos:line="207" pos:column="39">[<expr><literal type="number" pos:line="207" pos:column="40">2<pos:position pos:line="207" pos:column="41"/></literal></expr>]<pos:position pos:line="207" pos:column="42"/></index></name></expr>;<pos:position pos:line="207" pos:column="43"/></expr_stmt>
		}<pos:position pos:line="208" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name><name pos:line="209" pos:column="17">argv<pos:position pos:line="209" pos:column="21"/></name><index pos:line="209" pos:column="21">[<expr><name pos:line="209" pos:column="22">argc<pos:position pos:line="209" pos:column="26"/></name> <operator pos:line="209" pos:column="27">-<pos:position pos:line="209" pos:column="28"/></operator> <literal type="number" pos:line="209" pos:column="29">1<pos:position pos:line="209" pos:column="30"/></literal></expr>]<pos:position pos:line="209" pos:column="31"/></index></name> <operator pos:line="209" pos:column="32">=<pos:position pos:line="209" pos:column="33"/></operator> <literal type="string" pos:line="209" pos:column="34">"--"<pos:position pos:line="209" pos:column="38"/></literal></expr>;<pos:position pos:line="209" pos:column="39"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="211" pos:column="17">setup_work_tree<pos:position pos:line="211" pos:column="32"/></name><argument_list pos:line="211" pos:column="32">()<pos:position pos:line="211" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="211" pos:column="35"/></expr_stmt>
		<if pos:line="212" pos:column="17">if <condition pos:line="212" pos:column="20">(<expr><operator pos:line="212" pos:column="21">!<pos:position pos:line="212" pos:column="22"/></operator><call><name pos:line="212" pos:column="22">file_exists<pos:position pos:line="212" pos:column="33"/></name><argument_list pos:line="212" pos:column="33">(<argument><expr><name pos:line="212" pos:column="34">path<pos:position pos:line="212" pos:column="38"/></name></expr></argument>)<pos:position pos:line="212" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="212" pos:column="40"/></condition><then pos:line="212" pos:column="40">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="213" pos:column="25">die_errno<pos:position pos:line="213" pos:column="34"/></name><argument_list pos:line="213" pos:column="34">(<argument><expr><literal type="string" pos:line="213" pos:column="35">"cannot stat path '%s'"<pos:position pos:line="213" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="213" pos:column="60">path<pos:position pos:line="213" pos:column="64"/></name></expr></argument>)<pos:position pos:line="213" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="213" pos:column="66"/></expr_stmt></block></then></if>
	}<pos:position pos:line="214" pos:column="10"/></block></else></if>

	<expr_stmt><expr><name><name pos:line="216" pos:column="9">revs<pos:position pos:line="216" pos:column="13"/></name><operator pos:line="216" pos:column="13">.<pos:position pos:line="216" pos:column="14"/></operator><name pos:line="216" pos:column="14">disable_stdin<pos:position pos:line="216" pos:column="27"/></name></name> <operator pos:line="216" pos:column="28">=<pos:position pos:line="216" pos:column="29"/></operator> <literal type="number" pos:line="216" pos:column="30">1<pos:position pos:line="216" pos:column="31"/></literal></expr>;<pos:position pos:line="216" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="217" pos:column="9">setup_revisions<pos:position pos:line="217" pos:column="24"/></name><argument_list pos:line="217" pos:column="24">(<argument><expr><name pos:line="217" pos:column="25">argc<pos:position pos:line="217" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="217" pos:column="31">argv<pos:position pos:line="217" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="217" pos:column="37">&amp;<pos:position pos:line="217" pos:column="42"/></operator><name pos:line="217" pos:column="38">revs<pos:position pos:line="217" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="217" pos:column="44">NULL<pos:position pos:line="217" pos:column="48"/></name></expr></argument>)<pos:position pos:line="217" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="217" pos:column="50"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="218" pos:column="9">memset<pos:position pos:line="218" pos:column="15"/></name><argument_list pos:line="218" pos:column="15">(<argument><expr><operator pos:line="218" pos:column="16">&amp;<pos:position pos:line="218" pos:column="21"/></operator><name pos:line="218" pos:column="17">sb<pos:position pos:line="218" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="218" pos:column="21">0<pos:position pos:line="218" pos:column="22"/></literal></expr></argument>, <argument><expr><sizeof pos:line="218" pos:column="24">sizeof<argument_list pos:line="218" pos:column="30">(<argument><expr><name pos:line="218" pos:column="31">sb<pos:position pos:line="218" pos:column="33"/></name></expr></argument>)<pos:position pos:line="218" pos:column="34"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="218" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="218" pos:column="36"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="220" pos:column="9">sb<pos:position pos:line="220" pos:column="11"/></name><operator pos:line="220" pos:column="11">.<pos:position pos:line="220" pos:column="12"/></operator><name pos:line="220" pos:column="12">revs<pos:position pos:line="220" pos:column="16"/></name></name> <operator pos:line="220" pos:column="17">=<pos:position pos:line="220" pos:column="18"/></operator> <operator pos:line="220" pos:column="19">&amp;<pos:position pos:line="220" pos:column="24"/></operator><name pos:line="220" pos:column="20">revs<pos:position pos:line="220" pos:column="24"/></name></expr>;<pos:position pos:line="220" pos:column="25"/></expr_stmt>
	<if pos:line="221" pos:column="9">if <condition pos:line="221" pos:column="12">(<expr><operator pos:line="221" pos:column="13">!<pos:position pos:line="221" pos:column="14"/></operator><name pos:line="221" pos:column="14">reverse<pos:position pos:line="221" pos:column="21"/></name></expr>)<pos:position pos:line="221" pos:column="22"/></condition><then pos:line="221" pos:column="22"> <block pos:line="221" pos:column="23">{
		<expr_stmt><expr><name pos:line="222" pos:column="17">final_commit_name<pos:position pos:line="222" pos:column="34"/></name> <operator pos:line="222" pos:column="35">=<pos:position pos:line="222" pos:column="36"/></operator> <call><name pos:line="222" pos:column="37">prepare_final<pos:position pos:line="222" pos:column="50"/></name><argument_list pos:line="222" pos:column="50">(<argument><expr><operator pos:line="222" pos:column="51">&amp;<pos:position pos:line="222" pos:column="56"/></operator><name pos:line="222" pos:column="52">sb<pos:position pos:line="222" pos:column="54"/></name></expr></argument>)<pos:position pos:line="222" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="222" pos:column="56"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="223" pos:column="17">sb<pos:position pos:line="223" pos:column="19"/></name><operator pos:line="223" pos:column="19">.<pos:position pos:line="223" pos:column="20"/></operator><name pos:line="223" pos:column="20">commits<pos:position pos:line="223" pos:column="27"/></name><operator pos:line="223" pos:column="27">.<pos:position pos:line="223" pos:column="28"/></operator><name pos:line="223" pos:column="28">compare<pos:position pos:line="223" pos:column="35"/></name></name> <operator pos:line="223" pos:column="36">=<pos:position pos:line="223" pos:column="37"/></operator> <name pos:line="223" pos:column="38">compare_commits_by_commit_date<pos:position pos:line="223" pos:column="68"/></name></expr>;<pos:position pos:line="223" pos:column="69"/></expr_stmt>
	}<pos:position pos:line="224" pos:column="10"/></block></then>
	<elseif pos:line="225" pos:column="9">else <if pos:line="225" pos:column="14">if <condition pos:line="225" pos:column="17">(<expr><name pos:line="225" pos:column="18">contents_from<pos:position pos:line="225" pos:column="31"/></name></expr>)<pos:position pos:line="225" pos:column="32"/></condition><then pos:line="225" pos:column="32">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="226" pos:column="17">die<pos:position pos:line="226" pos:column="20"/></name><argument_list pos:line="226" pos:column="20">(<argument><expr><call><name pos:line="226" pos:column="21">_<pos:position pos:line="226" pos:column="22"/></name><argument_list pos:line="226" pos:column="22">(<argument><expr><literal type="string" pos:line="226" pos:column="23">"--contents and --reverse do not blend well."<pos:position pos:line="226" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="226" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="226" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="226" pos:column="71"/></expr_stmt></block></then></if></elseif>
	<else pos:line="227" pos:column="9">else <block pos:line="227" pos:column="14">{
		<expr_stmt><expr><name pos:line="228" pos:column="17">final_commit_name<pos:position pos:line="228" pos:column="34"/></name> <operator pos:line="228" pos:column="35">=<pos:position pos:line="228" pos:column="36"/></operator> <call><name pos:line="228" pos:column="37">prepare_initial<pos:position pos:line="228" pos:column="52"/></name><argument_list pos:line="228" pos:column="52">(<argument><expr><operator pos:line="228" pos:column="53">&amp;<pos:position pos:line="228" pos:column="58"/></operator><name pos:line="228" pos:column="54">sb<pos:position pos:line="228" pos:column="56"/></name></expr></argument>)<pos:position pos:line="228" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="228" pos:column="58"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="229" pos:column="17">sb<pos:position pos:line="229" pos:column="19"/></name><operator pos:line="229" pos:column="19">.<pos:position pos:line="229" pos:column="20"/></operator><name pos:line="229" pos:column="20">commits<pos:position pos:line="229" pos:column="27"/></name><operator pos:line="229" pos:column="27">.<pos:position pos:line="229" pos:column="28"/></operator><name pos:line="229" pos:column="28">compare<pos:position pos:line="229" pos:column="35"/></name></name> <operator pos:line="229" pos:column="36">=<pos:position pos:line="229" pos:column="37"/></operator> <name pos:line="229" pos:column="38">compare_commits_by_reverse_commit_date<pos:position pos:line="229" pos:column="76"/></name></expr>;<pos:position pos:line="229" pos:column="77"/></expr_stmt>
		<if pos:line="230" pos:column="17">if <condition pos:line="230" pos:column="20">(<expr><name><name pos:line="230" pos:column="21">revs<pos:position pos:line="230" pos:column="25"/></name><operator pos:line="230" pos:column="25">.<pos:position pos:line="230" pos:column="26"/></operator><name pos:line="230" pos:column="26">first_parent_only<pos:position pos:line="230" pos:column="43"/></name></name></expr>)<pos:position pos:line="230" pos:column="44"/></condition><then pos:line="230" pos:column="44">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="231" pos:column="25">revs<pos:position pos:line="231" pos:column="29"/></name><operator pos:line="231" pos:column="29">.<pos:position pos:line="231" pos:column="30"/></operator><name pos:line="231" pos:column="30">children<pos:position pos:line="231" pos:column="38"/></name><operator pos:line="231" pos:column="38">.<pos:position pos:line="231" pos:column="39"/></operator><name pos:line="231" pos:column="39">name<pos:position pos:line="231" pos:column="43"/></name></name> <operator pos:line="231" pos:column="44">=<pos:position pos:line="231" pos:column="45"/></operator> <name pos:line="231" pos:column="46">NULL<pos:position pos:line="231" pos:column="50"/></name></expr>;<pos:position pos:line="231" pos:column="51"/></expr_stmt></block></then></if>
	}<pos:position pos:line="232" pos:column="10"/></block></else></if>

	<if pos:line="234" pos:column="9">if <condition pos:line="234" pos:column="12">(<expr><operator pos:line="234" pos:column="13">!<pos:position pos:line="234" pos:column="14"/></operator><name><name pos:line="234" pos:column="14">sb<pos:position pos:line="234" pos:column="16"/></name><operator pos:line="234" pos:column="16">.<pos:position pos:line="234" pos:column="17"/></operator><name pos:line="234" pos:column="17">final<pos:position pos:line="234" pos:column="22"/></name></name></expr>)<pos:position pos:line="234" pos:column="23"/></condition><then pos:line="234" pos:column="23"> <block pos:line="234" pos:column="24">{
		<comment type="block" pos:line="235" pos:column="17">/*
		 * "--not A B -- path" without anything positive;
		 * do not default to HEAD, but use the working tree
		 * or "--contents".
		 */</comment>
		<expr_stmt><expr><call><name pos:line="240" pos:column="17">setup_work_tree<pos:position pos:line="240" pos:column="32"/></name><argument_list pos:line="240" pos:column="32">()<pos:position pos:line="240" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="240" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="241" pos:column="17">sb<pos:position pos:line="241" pos:column="19"/></name><operator pos:line="241" pos:column="19">.<pos:position pos:line="241" pos:column="20"/></operator><name pos:line="241" pos:column="20">final<pos:position pos:line="241" pos:column="25"/></name></name> <operator pos:line="241" pos:column="26">=<pos:position pos:line="241" pos:column="27"/></operator> <call><name pos:line="241" pos:column="28">fake_working_tree_commit<pos:position pos:line="241" pos:column="52"/></name><argument_list pos:line="241" pos:column="52">(<argument><expr><operator pos:line="241" pos:column="53">&amp;<pos:position pos:line="241" pos:column="58"/></operator><name><name pos:line="241" pos:column="54">sb<pos:position pos:line="241" pos:column="56"/></name><operator pos:line="241" pos:column="56">.<pos:position pos:line="241" pos:column="57"/></operator><name pos:line="241" pos:column="57">revs<pos:position pos:line="241" pos:column="61"/></name><operator pos:line="241" pos:column="61">-&gt;<pos:position pos:line="241" pos:column="66"/></operator><name pos:line="241" pos:column="63">diffopt<pos:position pos:line="241" pos:column="70"/></name></name></expr></argument>,
						    <argument><expr><name pos:line="242" pos:column="53">path<pos:position pos:line="242" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="242" pos:column="59">contents_from<pos:position pos:line="242" pos:column="72"/></name></expr></argument>)<pos:position pos:line="242" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="242" pos:column="74"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="243" pos:column="17">add_pending_object<pos:position pos:line="243" pos:column="35"/></name><argument_list pos:line="243" pos:column="35">(<argument><expr><operator pos:line="243" pos:column="36">&amp;<pos:position pos:line="243" pos:column="41"/></operator><name pos:line="243" pos:column="37">revs<pos:position pos:line="243" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="243" pos:column="43">&amp;<pos:position pos:line="243" pos:column="48"/></operator><operator pos:line="243" pos:column="44">(<pos:position pos:line="243" pos:column="45"/></operator><name><name pos:line="243" pos:column="45">sb<pos:position pos:line="243" pos:column="47"/></name><operator pos:line="243" pos:column="47">.<pos:position pos:line="243" pos:column="48"/></operator><name pos:line="243" pos:column="48">final<pos:position pos:line="243" pos:column="53"/></name><operator pos:line="243" pos:column="53">-&gt;<pos:position pos:line="243" pos:column="58"/></operator><name pos:line="243" pos:column="55">object<pos:position pos:line="243" pos:column="61"/></name></name><operator pos:line="243" pos:column="61">)<pos:position pos:line="243" pos:column="62"/></operator></expr></argument>, <argument><expr><literal type="string" pos:line="243" pos:column="64">":"<pos:position pos:line="243" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="243" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="243" pos:column="69"/></expr_stmt>
	}<pos:position pos:line="244" pos:column="10"/></block></then>
	<elseif pos:line="245" pos:column="9">else <if pos:line="245" pos:column="14">if <condition pos:line="245" pos:column="17">(<expr><name pos:line="245" pos:column="18">contents_from<pos:position pos:line="245" pos:column="31"/></name></expr>)<pos:position pos:line="245" pos:column="32"/></condition><then pos:line="245" pos:column="32">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="246" pos:column="17">die<pos:position pos:line="246" pos:column="20"/></name><argument_list pos:line="246" pos:column="20">(<argument><expr><call><name pos:line="246" pos:column="21">_<pos:position pos:line="246" pos:column="22"/></name><argument_list pos:line="246" pos:column="22">(<argument><expr><literal type="string" pos:line="246" pos:column="23">"cannot use --contents with final commit object name"<pos:position pos:line="246" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="246" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="246" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="246" pos:column="79"/></expr_stmt></block></then></if></elseif></if>

	<if pos:line="248" pos:column="9">if <condition pos:line="248" pos:column="12">(<expr><name pos:line="248" pos:column="13">reverse<pos:position pos:line="248" pos:column="20"/></name> <operator pos:line="248" pos:column="21">&amp;&amp;<pos:position pos:line="248" pos:column="31"/></operator> <name><name pos:line="248" pos:column="24">revs<pos:position pos:line="248" pos:column="28"/></name><operator pos:line="248" pos:column="28">.<pos:position pos:line="248" pos:column="29"/></operator><name pos:line="248" pos:column="29">first_parent_only<pos:position pos:line="248" pos:column="46"/></name></name></expr>)<pos:position pos:line="248" pos:column="47"/></condition><then pos:line="248" pos:column="47"> <block pos:line="248" pos:column="48">{
		<expr_stmt><expr><name pos:line="249" pos:column="17">final_commit<pos:position pos:line="249" pos:column="29"/></name> <operator pos:line="249" pos:column="30">=<pos:position pos:line="249" pos:column="31"/></operator> <call><name pos:line="249" pos:column="32">find_single_final<pos:position pos:line="249" pos:column="49"/></name><argument_list pos:line="249" pos:column="49">(<argument><expr><name><name pos:line="249" pos:column="50">sb<pos:position pos:line="249" pos:column="52"/></name><operator pos:line="249" pos:column="52">.<pos:position pos:line="249" pos:column="53"/></operator><name pos:line="249" pos:column="53">revs<pos:position pos:line="249" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="249" pos:column="59">NULL<pos:position pos:line="249" pos:column="63"/></name></expr></argument>)<pos:position pos:line="249" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="249" pos:column="65"/></expr_stmt>
		<if pos:line="250" pos:column="17">if <condition pos:line="250" pos:column="20">(<expr><operator pos:line="250" pos:column="21">!<pos:position pos:line="250" pos:column="22"/></operator><name pos:line="250" pos:column="22">final_commit<pos:position pos:line="250" pos:column="34"/></name></expr>)<pos:position pos:line="250" pos:column="35"/></condition><then pos:line="250" pos:column="35">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="251" pos:column="25">die<pos:position pos:line="251" pos:column="28"/></name><argument_list pos:line="251" pos:column="28">(<argument><expr><call><name pos:line="251" pos:column="29">_<pos:position pos:line="251" pos:column="30"/></name><argument_list pos:line="251" pos:column="30">(<argument><expr><literal type="string" pos:line="251" pos:column="31">"--reverse and --first-parent together require specified latest commit"<pos:position pos:line="251" pos:column="102"/></literal></expr></argument>)<pos:position pos:line="251" pos:column="103"/></argument_list></call></expr></argument>)<pos:position pos:line="251" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="251" pos:column="105"/></expr_stmt></block></then></if>
	}<pos:position pos:line="252" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="254" pos:column="9">/*
	 * If we have bottom, this will mark the ancestors of the
	 * bottom commits we would reach while traversing as
	 * uninteresting.
	 */</comment>
	<if pos:line="259" pos:column="9">if <condition pos:line="259" pos:column="12">(<expr><call><name pos:line="259" pos:column="13">prepare_revision_walk<pos:position pos:line="259" pos:column="34"/></name><argument_list pos:line="259" pos:column="34">(<argument><expr><operator pos:line="259" pos:column="35">&amp;<pos:position pos:line="259" pos:column="40"/></operator><name pos:line="259" pos:column="36">revs<pos:position pos:line="259" pos:column="40"/></name></expr></argument>)<pos:position pos:line="259" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="259" pos:column="42"/></condition><then pos:line="259" pos:column="42">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="260" pos:column="17">die<pos:position pos:line="260" pos:column="20"/></name><argument_list pos:line="260" pos:column="20">(<argument><expr><call><name pos:line="260" pos:column="21">_<pos:position pos:line="260" pos:column="22"/></name><argument_list pos:line="260" pos:column="22">(<argument><expr><literal type="string" pos:line="260" pos:column="23">"revision walk setup failed"<pos:position pos:line="260" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="260" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="260" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="260" pos:column="54"/></expr_stmt></block></then></if>

	<if pos:line="262" pos:column="9">if <condition pos:line="262" pos:column="12">(<expr><name pos:line="262" pos:column="13">reverse<pos:position pos:line="262" pos:column="20"/></name> <operator pos:line="262" pos:column="21">&amp;&amp;<pos:position pos:line="262" pos:column="31"/></operator> <name><name pos:line="262" pos:column="24">revs<pos:position pos:line="262" pos:column="28"/></name><operator pos:line="262" pos:column="28">.<pos:position pos:line="262" pos:column="29"/></operator><name pos:line="262" pos:column="29">first_parent_only<pos:position pos:line="262" pos:column="46"/></name></name></expr>)<pos:position pos:line="262" pos:column="47"/></condition><then pos:line="262" pos:column="47"> <block pos:line="262" pos:column="48">{
		<decl_stmt><decl><type><name><name pos:line="263" pos:column="17">struct<pos:position pos:line="263" pos:column="23"/></name> <name pos:line="263" pos:column="24">commit<pos:position pos:line="263" pos:column="30"/></name></name> <modifier pos:line="263" pos:column="31">*<pos:position pos:line="263" pos:column="32"/></modifier></type><name pos:line="263" pos:column="32">c<pos:position pos:line="263" pos:column="33"/></name> <init pos:line="263" pos:column="34">= <expr><name pos:line="263" pos:column="36">final_commit<pos:position pos:line="263" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="263" pos:column="49"/></decl_stmt>

		<expr_stmt><expr><name><name pos:line="265" pos:column="17">sb<pos:position pos:line="265" pos:column="19"/></name><operator pos:line="265" pos:column="19">.<pos:position pos:line="265" pos:column="20"/></operator><name pos:line="265" pos:column="20">revs<pos:position pos:line="265" pos:column="24"/></name><operator pos:line="265" pos:column="24">-&gt;<pos:position pos:line="265" pos:column="29"/></operator><name pos:line="265" pos:column="26">children<pos:position pos:line="265" pos:column="34"/></name><operator pos:line="265" pos:column="34">.<pos:position pos:line="265" pos:column="35"/></operator><name pos:line="265" pos:column="35">name<pos:position pos:line="265" pos:column="39"/></name></name> <operator pos:line="265" pos:column="40">=<pos:position pos:line="265" pos:column="41"/></operator> <literal type="string" pos:line="265" pos:column="42">"children"<pos:position pos:line="265" pos:column="52"/></literal></expr>;<pos:position pos:line="265" pos:column="53"/></expr_stmt>
		<while pos:line="266" pos:column="17">while <condition pos:line="266" pos:column="23">(<expr><name><name pos:line="266" pos:column="24">c<pos:position pos:line="266" pos:column="25"/></name><operator pos:line="266" pos:column="25">-&gt;<pos:position pos:line="266" pos:column="30"/></operator><name pos:line="266" pos:column="27">parents<pos:position pos:line="266" pos:column="34"/></name></name> <operator pos:line="266" pos:column="35">&amp;&amp;<pos:position pos:line="266" pos:column="45"/></operator>
		       <call><name pos:line="267" pos:column="24">oidcmp<pos:position pos:line="267" pos:column="30"/></name><argument_list pos:line="267" pos:column="30">(<argument><expr><operator pos:line="267" pos:column="31">&amp;<pos:position pos:line="267" pos:column="36"/></operator><name><name pos:line="267" pos:column="32">c<pos:position pos:line="267" pos:column="33"/></name><operator pos:line="267" pos:column="33">-&gt;<pos:position pos:line="267" pos:column="38"/></operator><name pos:line="267" pos:column="35">object<pos:position pos:line="267" pos:column="41"/></name><operator pos:line="267" pos:column="41">.<pos:position pos:line="267" pos:column="42"/></operator><name pos:line="267" pos:column="42">oid<pos:position pos:line="267" pos:column="45"/></name></name></expr></argument>, <argument><expr><operator pos:line="267" pos:column="47">&amp;<pos:position pos:line="267" pos:column="52"/></operator><name><name pos:line="267" pos:column="48">sb<pos:position pos:line="267" pos:column="50"/></name><operator pos:line="267" pos:column="50">.<pos:position pos:line="267" pos:column="51"/></operator><name pos:line="267" pos:column="51">final<pos:position pos:line="267" pos:column="56"/></name><operator pos:line="267" pos:column="56">-&gt;<pos:position pos:line="267" pos:column="61"/></operator><name pos:line="267" pos:column="58">object<pos:position pos:line="267" pos:column="64"/></name><operator pos:line="267" pos:column="64">.<pos:position pos:line="267" pos:column="65"/></operator><name pos:line="267" pos:column="65">oid<pos:position pos:line="267" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="267" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="267" pos:column="70"/></condition> <block pos:line="267" pos:column="71">{
			<decl_stmt><decl><type><name><name pos:line="268" pos:column="25">struct<pos:position pos:line="268" pos:column="31"/></name> <name pos:line="268" pos:column="32">commit_list<pos:position pos:line="268" pos:column="43"/></name></name> <modifier pos:line="268" pos:column="44">*<pos:position pos:line="268" pos:column="45"/></modifier></type><name pos:line="268" pos:column="45">l<pos:position pos:line="268" pos:column="46"/></name> <init pos:line="268" pos:column="47">= <expr><call><name pos:line="268" pos:column="49">xcalloc<pos:position pos:line="268" pos:column="56"/></name><argument_list pos:line="268" pos:column="56">(<argument><expr><literal type="number" pos:line="268" pos:column="57">1<pos:position pos:line="268" pos:column="58"/></literal></expr></argument>, <argument><expr><sizeof pos:line="268" pos:column="60">sizeof<argument_list pos:line="268" pos:column="66">(<argument><expr><operator pos:line="268" pos:column="67">*<pos:position pos:line="268" pos:column="68"/></operator><name pos:line="268" pos:column="68">l<pos:position pos:line="268" pos:column="69"/></name></expr></argument>)<pos:position pos:line="268" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="268" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="268" pos:column="72"/></decl_stmt>

			<expr_stmt><expr><name><name pos:line="270" pos:column="25">l<pos:position pos:line="270" pos:column="26"/></name><operator pos:line="270" pos:column="26">-&gt;<pos:position pos:line="270" pos:column="31"/></operator><name pos:line="270" pos:column="28">item<pos:position pos:line="270" pos:column="32"/></name></name> <operator pos:line="270" pos:column="33">=<pos:position pos:line="270" pos:column="34"/></operator> <name pos:line="270" pos:column="35">c<pos:position pos:line="270" pos:column="36"/></name></expr>;<pos:position pos:line="270" pos:column="37"/></expr_stmt>
			<if pos:line="271" pos:column="25">if <condition pos:line="271" pos:column="28">(<expr><call><name pos:line="271" pos:column="29">add_decoration<pos:position pos:line="271" pos:column="43"/></name><argument_list pos:line="271" pos:column="43">(<argument><expr><operator pos:line="271" pos:column="44">&amp;<pos:position pos:line="271" pos:column="49"/></operator><name><name pos:line="271" pos:column="45">sb<pos:position pos:line="271" pos:column="47"/></name><operator pos:line="271" pos:column="47">.<pos:position pos:line="271" pos:column="48"/></operator><name pos:line="271" pos:column="48">revs<pos:position pos:line="271" pos:column="52"/></name><operator pos:line="271" pos:column="52">-&gt;<pos:position pos:line="271" pos:column="57"/></operator><name pos:line="271" pos:column="54">children<pos:position pos:line="271" pos:column="62"/></name></name></expr></argument>,
					   <argument><expr><operator pos:line="272" pos:column="44">&amp;<pos:position pos:line="272" pos:column="49"/></operator><name><name pos:line="272" pos:column="45">c<pos:position pos:line="272" pos:column="46"/></name><operator pos:line="272" pos:column="46">-&gt;<pos:position pos:line="272" pos:column="51"/></operator><name pos:line="272" pos:column="48">parents<pos:position pos:line="272" pos:column="55"/></name><operator pos:line="272" pos:column="55">-&gt;<pos:position pos:line="272" pos:column="60"/></operator><name pos:line="272" pos:column="57">item<pos:position pos:line="272" pos:column="61"/></name><operator pos:line="272" pos:column="61">-&gt;<pos:position pos:line="272" pos:column="66"/></operator><name pos:line="272" pos:column="63">object<pos:position pos:line="272" pos:column="69"/></name></name></expr></argument>, <argument><expr><name pos:line="272" pos:column="71">l<pos:position pos:line="272" pos:column="72"/></name></expr></argument>)<pos:position pos:line="272" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="272" pos:column="74"/></condition><then pos:line="272" pos:column="74">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="273" pos:column="33">die<pos:position pos:line="273" pos:column="36"/></name><argument_list pos:line="273" pos:column="36">(<argument><expr><literal type="string" pos:line="273" pos:column="37">"BUG: not unique item in first-parent chain"<pos:position pos:line="273" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="273" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="273" pos:column="83"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name pos:line="274" pos:column="25">c<pos:position pos:line="274" pos:column="26"/></name> <operator pos:line="274" pos:column="27">=<pos:position pos:line="274" pos:column="28"/></operator> <name><name pos:line="274" pos:column="29">c<pos:position pos:line="274" pos:column="30"/></name><operator pos:line="274" pos:column="30">-&gt;<pos:position pos:line="274" pos:column="35"/></operator><name pos:line="274" pos:column="32">parents<pos:position pos:line="274" pos:column="39"/></name><operator pos:line="274" pos:column="39">-&gt;<pos:position pos:line="274" pos:column="44"/></operator><name pos:line="274" pos:column="41">item<pos:position pos:line="274" pos:column="45"/></name></name></expr>;<pos:position pos:line="274" pos:column="46"/></expr_stmt>
		}<pos:position pos:line="275" pos:column="18"/></block></while>

		<if pos:line="277" pos:column="17">if <condition pos:line="277" pos:column="20">(<expr><call><name pos:line="277" pos:column="21">oidcmp<pos:position pos:line="277" pos:column="27"/></name><argument_list pos:line="277" pos:column="27">(<argument><expr><operator pos:line="277" pos:column="28">&amp;<pos:position pos:line="277" pos:column="33"/></operator><name><name pos:line="277" pos:column="29">c<pos:position pos:line="277" pos:column="30"/></name><operator pos:line="277" pos:column="30">-&gt;<pos:position pos:line="277" pos:column="35"/></operator><name pos:line="277" pos:column="32">object<pos:position pos:line="277" pos:column="38"/></name><operator pos:line="277" pos:column="38">.<pos:position pos:line="277" pos:column="39"/></operator><name pos:line="277" pos:column="39">oid<pos:position pos:line="277" pos:column="42"/></name></name></expr></argument>, <argument><expr><operator pos:line="277" pos:column="44">&amp;<pos:position pos:line="277" pos:column="49"/></operator><name><name pos:line="277" pos:column="45">sb<pos:position pos:line="277" pos:column="47"/></name><operator pos:line="277" pos:column="47">.<pos:position pos:line="277" pos:column="48"/></operator><name pos:line="277" pos:column="48">final<pos:position pos:line="277" pos:column="53"/></name><operator pos:line="277" pos:column="53">-&gt;<pos:position pos:line="277" pos:column="58"/></operator><name pos:line="277" pos:column="55">object<pos:position pos:line="277" pos:column="61"/></name><operator pos:line="277" pos:column="61">.<pos:position pos:line="277" pos:column="62"/></operator><name pos:line="277" pos:column="62">oid<pos:position pos:line="277" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="277" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="277" pos:column="67"/></condition><then pos:line="277" pos:column="67">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="278" pos:column="25">die<pos:position pos:line="278" pos:column="28"/></name><argument_list pos:line="278" pos:column="28">(<argument><expr><call><name pos:line="278" pos:column="29">_<pos:position pos:line="278" pos:column="30"/></name><argument_list pos:line="278" pos:column="30">(<argument><expr><literal type="string" pos:line="278" pos:column="31">"--reverse --first-parent together require range along first-parent chain"<pos:position pos:line="278" pos:column="105"/></literal></expr></argument>)<pos:position pos:line="278" pos:column="106"/></argument_list></call></expr></argument>)<pos:position pos:line="278" pos:column="107"/></argument_list></call></expr>;<pos:position pos:line="278" pos:column="108"/></expr_stmt></block></then></if>
	}<pos:position pos:line="279" pos:column="10"/></block></then></if>

	<if pos:line="281" pos:column="9">if <condition pos:line="281" pos:column="12">(<expr><call><name pos:line="281" pos:column="13">is_null_oid<pos:position pos:line="281" pos:column="24"/></name><argument_list pos:line="281" pos:column="24">(<argument><expr><operator pos:line="281" pos:column="25">&amp;<pos:position pos:line="281" pos:column="30"/></operator><name><name pos:line="281" pos:column="26">sb<pos:position pos:line="281" pos:column="28"/></name><operator pos:line="281" pos:column="28">.<pos:position pos:line="281" pos:column="29"/></operator><name pos:line="281" pos:column="29">final<pos:position pos:line="281" pos:column="34"/></name><operator pos:line="281" pos:column="34">-&gt;<pos:position pos:line="281" pos:column="39"/></operator><name pos:line="281" pos:column="36">object<pos:position pos:line="281" pos:column="42"/></name><operator pos:line="281" pos:column="42">.<pos:position pos:line="281" pos:column="43"/></operator><name pos:line="281" pos:column="43">oid<pos:position pos:line="281" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="281" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="281" pos:column="48"/></condition><then pos:line="281" pos:column="48"> <block pos:line="281" pos:column="49">{
		<expr_stmt><expr><name pos:line="282" pos:column="17">o<pos:position pos:line="282" pos:column="18"/></name> <operator pos:line="282" pos:column="19">=<pos:position pos:line="282" pos:column="20"/></operator> <name><name pos:line="282" pos:column="21">sb<pos:position pos:line="282" pos:column="23"/></name><operator pos:line="282" pos:column="23">.<pos:position pos:line="282" pos:column="24"/></operator><name pos:line="282" pos:column="24">final<pos:position pos:line="282" pos:column="29"/></name><operator pos:line="282" pos:column="29">-&gt;<pos:position pos:line="282" pos:column="34"/></operator><name pos:line="282" pos:column="31">util<pos:position pos:line="282" pos:column="35"/></name></name></expr>;<pos:position pos:line="282" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="283" pos:column="17">sb<pos:position pos:line="283" pos:column="19"/></name><operator pos:line="283" pos:column="19">.<pos:position pos:line="283" pos:column="20"/></operator><name pos:line="283" pos:column="20">final_buf<pos:position pos:line="283" pos:column="29"/></name></name> <operator pos:line="283" pos:column="30">=<pos:position pos:line="283" pos:column="31"/></operator> <call><name pos:line="283" pos:column="32">xmemdupz<pos:position pos:line="283" pos:column="40"/></name><argument_list pos:line="283" pos:column="40">(<argument><expr><name><name pos:line="283" pos:column="41">o<pos:position pos:line="283" pos:column="42"/></name><operator pos:line="283" pos:column="42">-&gt;<pos:position pos:line="283" pos:column="47"/></operator><name pos:line="283" pos:column="44">file<pos:position pos:line="283" pos:column="48"/></name><operator pos:line="283" pos:column="48">.<pos:position pos:line="283" pos:column="49"/></operator><name pos:line="283" pos:column="49">ptr<pos:position pos:line="283" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="283" pos:column="54">o<pos:position pos:line="283" pos:column="55"/></name><operator pos:line="283" pos:column="55">-&gt;<pos:position pos:line="283" pos:column="60"/></operator><name pos:line="283" pos:column="57">file<pos:position pos:line="283" pos:column="61"/></name><operator pos:line="283" pos:column="61">.<pos:position pos:line="283" pos:column="62"/></operator><name pos:line="283" pos:column="62">size<pos:position pos:line="283" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="283" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="283" pos:column="68"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="284" pos:column="17">sb<pos:position pos:line="284" pos:column="19"/></name><operator pos:line="284" pos:column="19">.<pos:position pos:line="284" pos:column="20"/></operator><name pos:line="284" pos:column="20">final_buf_size<pos:position pos:line="284" pos:column="34"/></name></name> <operator pos:line="284" pos:column="35">=<pos:position pos:line="284" pos:column="36"/></operator> <name><name pos:line="284" pos:column="37">o<pos:position pos:line="284" pos:column="38"/></name><operator pos:line="284" pos:column="38">-&gt;<pos:position pos:line="284" pos:column="43"/></operator><name pos:line="284" pos:column="40">file<pos:position pos:line="284" pos:column="44"/></name><operator pos:line="284" pos:column="44">.<pos:position pos:line="284" pos:column="45"/></operator><name pos:line="284" pos:column="45">size<pos:position pos:line="284" pos:column="49"/></name></name></expr>;<pos:position pos:line="284" pos:column="50"/></expr_stmt>
	}<pos:position pos:line="285" pos:column="10"/></block></then>
	<else pos:line="286" pos:column="9">else <block pos:line="286" pos:column="14">{
		<expr_stmt><expr><name pos:line="287" pos:column="17">o<pos:position pos:line="287" pos:column="18"/></name> <operator pos:line="287" pos:column="19">=<pos:position pos:line="287" pos:column="20"/></operator> <call><name pos:line="287" pos:column="21">get_origin<pos:position pos:line="287" pos:column="31"/></name><argument_list pos:line="287" pos:column="31">(<argument><expr><operator pos:line="287" pos:column="32">&amp;<pos:position pos:line="287" pos:column="37"/></operator><name pos:line="287" pos:column="33">sb<pos:position pos:line="287" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="287" pos:column="37">sb<pos:position pos:line="287" pos:column="39"/></name><operator pos:line="287" pos:column="39">.<pos:position pos:line="287" pos:column="40"/></operator><name pos:line="287" pos:column="40">final<pos:position pos:line="287" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="287" pos:column="47">path<pos:position pos:line="287" pos:column="51"/></name></expr></argument>)<pos:position pos:line="287" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="287" pos:column="53"/></expr_stmt>
		<if pos:line="288" pos:column="17">if <condition pos:line="288" pos:column="20">(<expr><call><name pos:line="288" pos:column="21">fill_blob_sha1_and_mode<pos:position pos:line="288" pos:column="44"/></name><argument_list pos:line="288" pos:column="44">(<argument><expr><name pos:line="288" pos:column="45">o<pos:position pos:line="288" pos:column="46"/></name></expr></argument>)<pos:position pos:line="288" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="288" pos:column="48"/></condition><then pos:line="288" pos:column="48">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="289" pos:column="25">die<pos:position pos:line="289" pos:column="28"/></name><argument_list pos:line="289" pos:column="28">(<argument><expr><call><name pos:line="289" pos:column="29">_<pos:position pos:line="289" pos:column="30"/></name><argument_list pos:line="289" pos:column="30">(<argument><expr><literal type="string" pos:line="289" pos:column="31">"no such path %s in %s"<pos:position pos:line="289" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="289" pos:column="55"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="289" pos:column="57">path<pos:position pos:line="289" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="289" pos:column="63">final_commit_name<pos:position pos:line="289" pos:column="80"/></name></expr></argument>)<pos:position pos:line="289" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="289" pos:column="82"/></expr_stmt></block></then></if>

		<if pos:line="291" pos:column="17">if <condition pos:line="291" pos:column="20">(<expr><call><name pos:line="291" pos:column="21">DIFF_OPT_TST<pos:position pos:line="291" pos:column="33"/></name><argument_list pos:line="291" pos:column="33">(<argument><expr><operator pos:line="291" pos:column="34">&amp;<pos:position pos:line="291" pos:column="39"/></operator><name><name pos:line="291" pos:column="35">sb<pos:position pos:line="291" pos:column="37"/></name><operator pos:line="291" pos:column="37">.<pos:position pos:line="291" pos:column="38"/></operator><name pos:line="291" pos:column="38">revs<pos:position pos:line="291" pos:column="42"/></name><operator pos:line="291" pos:column="42">-&gt;<pos:position pos:line="291" pos:column="47"/></operator><name pos:line="291" pos:column="44">diffopt<pos:position pos:line="291" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="291" pos:column="53">ALLOW_TEXTCONV<pos:position pos:line="291" pos:column="67"/></name></expr></argument>)<pos:position pos:line="291" pos:column="68"/></argument_list></call> <operator pos:line="291" pos:column="69">&amp;&amp;<pos:position pos:line="291" pos:column="79"/></operator>
		    <call><name pos:line="292" pos:column="21">textconv_object<pos:position pos:line="292" pos:column="36"/></name><argument_list pos:line="292" pos:column="36">(<argument><expr><name pos:line="292" pos:column="37">path<pos:position pos:line="292" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="292" pos:column="43">o<pos:position pos:line="292" pos:column="44"/></name><operator pos:line="292" pos:column="44">-&gt;<pos:position pos:line="292" pos:column="49"/></operator><name pos:line="292" pos:column="46">mode<pos:position pos:line="292" pos:column="50"/></name></name></expr></argument>, <argument><expr><operator pos:line="292" pos:column="52">&amp;<pos:position pos:line="292" pos:column="57"/></operator><name><name pos:line="292" pos:column="53">o<pos:position pos:line="292" pos:column="54"/></name><operator pos:line="292" pos:column="54">-&gt;<pos:position pos:line="292" pos:column="59"/></operator><name pos:line="292" pos:column="56">blob_oid<pos:position pos:line="292" pos:column="64"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="292" pos:column="66">1<pos:position pos:line="292" pos:column="67"/></literal></expr></argument>, <argument><expr><operator pos:line="292" pos:column="69">(<pos:position pos:line="292" pos:column="70"/></operator><name pos:line="292" pos:column="70">char<pos:position pos:line="292" pos:column="74"/></name> <operator pos:line="292" pos:column="75">*<pos:position pos:line="292" pos:column="76"/></operator><operator pos:line="292" pos:column="76">*<pos:position pos:line="292" pos:column="77"/></operator><operator pos:line="292" pos:column="77">)<pos:position pos:line="292" pos:column="78"/></operator> <operator pos:line="292" pos:column="79">&amp;<pos:position pos:line="292" pos:column="84"/></operator><name><name pos:line="292" pos:column="80">sb<pos:position pos:line="292" pos:column="82"/></name><operator pos:line="292" pos:column="82">.<pos:position pos:line="292" pos:column="83"/></operator><name pos:line="292" pos:column="83">final_buf<pos:position pos:line="292" pos:column="92"/></name></name></expr></argument>,
				    <argument><expr><operator pos:line="293" pos:column="37">&amp;<pos:position pos:line="293" pos:column="42"/></operator><name><name pos:line="293" pos:column="38">sb<pos:position pos:line="293" pos:column="40"/></name><operator pos:line="293" pos:column="40">.<pos:position pos:line="293" pos:column="41"/></operator><name pos:line="293" pos:column="41">final_buf_size<pos:position pos:line="293" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="293" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="293" pos:column="57"/></condition><then pos:line="293" pos:column="57">
			<block type="pseudo"><empty_stmt pos:line="294" pos:column="25">;<pos:position pos:line="294" pos:column="26"/></empty_stmt></block></then>
		<else pos:line="295" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="296" pos:column="25">sb<pos:position pos:line="296" pos:column="27"/></name><operator pos:line="296" pos:column="27">.<pos:position pos:line="296" pos:column="28"/></operator><name pos:line="296" pos:column="28">final_buf<pos:position pos:line="296" pos:column="37"/></name></name> <operator pos:line="296" pos:column="38">=<pos:position pos:line="296" pos:column="39"/></operator> <call><name pos:line="296" pos:column="40">read_sha1_file<pos:position pos:line="296" pos:column="54"/></name><argument_list pos:line="296" pos:column="54">(<argument><expr><name><name pos:line="296" pos:column="55">o<pos:position pos:line="296" pos:column="56"/></name><operator pos:line="296" pos:column="56">-&gt;<pos:position pos:line="296" pos:column="61"/></operator><name pos:line="296" pos:column="58">blob_oid<pos:position pos:line="296" pos:column="66"/></name><operator pos:line="296" pos:column="66">.<pos:position pos:line="296" pos:column="67"/></operator><name pos:line="296" pos:column="67">hash<pos:position pos:line="296" pos:column="71"/></name></name></expr></argument>, <argument><expr><operator pos:line="296" pos:column="73">&amp;<pos:position pos:line="296" pos:column="78"/></operator><name pos:line="296" pos:column="74">type<pos:position pos:line="296" pos:column="78"/></name></expr></argument>,
						      <argument><expr><operator pos:line="297" pos:column="55">&amp;<pos:position pos:line="297" pos:column="60"/></operator><name><name pos:line="297" pos:column="56">sb<pos:position pos:line="297" pos:column="58"/></name><operator pos:line="297" pos:column="58">.<pos:position pos:line="297" pos:column="59"/></operator><name pos:line="297" pos:column="59">final_buf_size<pos:position pos:line="297" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="297" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="297" pos:column="75"/></expr_stmt></block></else></if>

		<if pos:line="299" pos:column="17">if <condition pos:line="299" pos:column="20">(<expr><operator pos:line="299" pos:column="21">!<pos:position pos:line="299" pos:column="22"/></operator><name><name pos:line="299" pos:column="22">sb<pos:position pos:line="299" pos:column="24"/></name><operator pos:line="299" pos:column="24">.<pos:position pos:line="299" pos:column="25"/></operator><name pos:line="299" pos:column="25">final_buf<pos:position pos:line="299" pos:column="34"/></name></name></expr>)<pos:position pos:line="299" pos:column="35"/></condition><then pos:line="299" pos:column="35">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="300" pos:column="25">die<pos:position pos:line="300" pos:column="28"/></name><argument_list pos:line="300" pos:column="28">(<argument><expr><call><name pos:line="300" pos:column="29">_<pos:position pos:line="300" pos:column="30"/></name><argument_list pos:line="300" pos:column="30">(<argument><expr><literal type="string" pos:line="300" pos:column="31">"cannot read blob %s for path %s"<pos:position pos:line="300" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="300" pos:column="65"/></argument_list></call></expr></argument>,
			    <argument><expr><call><name pos:line="301" pos:column="29">oid_to_hex<pos:position pos:line="301" pos:column="39"/></name><argument_list pos:line="301" pos:column="39">(<argument><expr><operator pos:line="301" pos:column="40">&amp;<pos:position pos:line="301" pos:column="45"/></operator><name><name pos:line="301" pos:column="41">o<pos:position pos:line="301" pos:column="42"/></name><operator pos:line="301" pos:column="42">-&gt;<pos:position pos:line="301" pos:column="47"/></operator><name pos:line="301" pos:column="44">blob_oid<pos:position pos:line="301" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="301" pos:column="53"/></argument_list></call></expr></argument>,
			    <argument><expr><name pos:line="302" pos:column="29">path<pos:position pos:line="302" pos:column="33"/></name></expr></argument>)<pos:position pos:line="302" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="302" pos:column="35"/></expr_stmt></block></then></if>
	}<pos:position pos:line="303" pos:column="10"/></block></else></if>
	<expr_stmt><expr><name pos:line="304" pos:column="9">num_read_blob<pos:position pos:line="304" pos:column="22"/></name><operator pos:line="304" pos:column="22">++<pos:position pos:line="304" pos:column="24"/></operator></expr>;<pos:position pos:line="304" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><name pos:line="305" pos:column="9">lno<pos:position pos:line="305" pos:column="12"/></name> <operator pos:line="305" pos:column="13">=<pos:position pos:line="305" pos:column="14"/></operator> <call><name pos:line="305" pos:column="15">prepare_lines<pos:position pos:line="305" pos:column="28"/></name><argument_list pos:line="305" pos:column="28">(<argument><expr><operator pos:line="305" pos:column="29">&amp;<pos:position pos:line="305" pos:column="34"/></operator><name pos:line="305" pos:column="30">sb<pos:position pos:line="305" pos:column="32"/></name></expr></argument>)<pos:position pos:line="305" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="305" pos:column="34"/></expr_stmt>

	<if pos:line="307" pos:column="9">if <condition pos:line="307" pos:column="12">(<expr><name pos:line="307" pos:column="13">lno<pos:position pos:line="307" pos:column="16"/></name> <operator pos:line="307" pos:column="17">&amp;&amp;<pos:position pos:line="307" pos:column="27"/></operator> <operator pos:line="307" pos:column="20">!<pos:position pos:line="307" pos:column="21"/></operator><name><name pos:line="307" pos:column="21">range_list<pos:position pos:line="307" pos:column="31"/></name><operator pos:line="307" pos:column="31">.<pos:position pos:line="307" pos:column="32"/></operator><name pos:line="307" pos:column="32">nr<pos:position pos:line="307" pos:column="34"/></name></name></expr>)<pos:position pos:line="307" pos:column="35"/></condition><then pos:line="307" pos:column="35">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="308" pos:column="17">string_list_append<pos:position pos:line="308" pos:column="35"/></name><argument_list pos:line="308" pos:column="35">(<argument><expr><operator pos:line="308" pos:column="36">&amp;<pos:position pos:line="308" pos:column="41"/></operator><name pos:line="308" pos:column="37">range_list<pos:position pos:line="308" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="308" pos:column="49">"1"<pos:position pos:line="308" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="308" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="308" pos:column="54"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="310" pos:column="9">anchor<pos:position pos:line="310" pos:column="15"/></name> <operator pos:line="310" pos:column="16">=<pos:position pos:line="310" pos:column="17"/></operator> <literal type="number" pos:line="310" pos:column="18">1<pos:position pos:line="310" pos:column="19"/></literal></expr>;<pos:position pos:line="310" pos:column="20"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="311" pos:column="9">range_set_init<pos:position pos:line="311" pos:column="23"/></name><argument_list pos:line="311" pos:column="23">(<argument><expr><operator pos:line="311" pos:column="24">&amp;<pos:position pos:line="311" pos:column="29"/></operator><name pos:line="311" pos:column="25">ranges<pos:position pos:line="311" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="311" pos:column="33">range_list<pos:position pos:line="311" pos:column="43"/></name><operator pos:line="311" pos:column="43">.<pos:position pos:line="311" pos:column="44"/></operator><name pos:line="311" pos:column="44">nr<pos:position pos:line="311" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="311" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="311" pos:column="48"/></expr_stmt>
	<for pos:line="312" pos:column="9">for <control pos:line="312" pos:column="13">(<init><expr><name pos:line="312" pos:column="14">range_i<pos:position pos:line="312" pos:column="21"/></name> <operator pos:line="312" pos:column="22">=<pos:position pos:line="312" pos:column="23"/></operator> <literal type="number" pos:line="312" pos:column="24">0<pos:position pos:line="312" pos:column="25"/></literal></expr>;<pos:position pos:line="312" pos:column="26"/></init> <condition><expr><name pos:line="312" pos:column="27">range_i<pos:position pos:line="312" pos:column="34"/></name> <operator pos:line="312" pos:column="35">&lt;<pos:position pos:line="312" pos:column="39"/></operator> <name><name pos:line="312" pos:column="37">range_list<pos:position pos:line="312" pos:column="47"/></name><operator pos:line="312" pos:column="47">.<pos:position pos:line="312" pos:column="48"/></operator><name pos:line="312" pos:column="48">nr<pos:position pos:line="312" pos:column="50"/></name></name></expr>;<pos:position pos:line="312" pos:column="51"/></condition> <incr><expr><operator pos:line="312" pos:column="52">++<pos:position pos:line="312" pos:column="54"/></operator><name pos:line="312" pos:column="54">range_i<pos:position pos:line="312" pos:column="61"/></name></expr></incr>)<pos:position pos:line="312" pos:column="62"/></control> <block pos:line="312" pos:column="63">{
		<decl_stmt><decl><type><name pos:line="313" pos:column="17">long<pos:position pos:line="313" pos:column="21"/></name></type> <name pos:line="313" pos:column="22">bottom<pos:position pos:line="313" pos:column="28"/></name></decl>, <decl><type ref="prev"/><name pos:line="313" pos:column="30">top<pos:position pos:line="313" pos:column="33"/></name></decl>;<pos:position pos:line="313" pos:column="34"/></decl_stmt>
		<if pos:line="314" pos:column="17">if <condition pos:line="314" pos:column="20">(<expr><call><name pos:line="314" pos:column="21">parse_range_arg<pos:position pos:line="314" pos:column="36"/></name><argument_list pos:line="314" pos:column="36">(<argument><expr><name><name pos:line="314" pos:column="37">range_list<pos:position pos:line="314" pos:column="47"/></name><operator pos:line="314" pos:column="47">.<pos:position pos:line="314" pos:column="48"/></operator><name pos:line="314" pos:column="48">items<pos:position pos:line="314" pos:column="53"/></name><index pos:line="314" pos:column="53">[<expr><name pos:line="314" pos:column="54">range_i<pos:position pos:line="314" pos:column="61"/></name></expr>]<pos:position pos:line="314" pos:column="62"/></index></name><operator pos:line="314" pos:column="62">.<pos:position pos:line="314" pos:column="63"/></operator><name pos:line="314" pos:column="63">string<pos:position pos:line="314" pos:column="69"/></name></expr></argument>,
				    <argument><expr><name pos:line="315" pos:column="37">nth_line_cb<pos:position pos:line="315" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="315" pos:column="50">&amp;<pos:position pos:line="315" pos:column="55"/></operator><name pos:line="315" pos:column="51">sb<pos:position pos:line="315" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="315" pos:column="55">lno<pos:position pos:line="315" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="315" pos:column="60">anchor<pos:position pos:line="315" pos:column="66"/></name></expr></argument>,
				    <argument><expr><operator pos:line="316" pos:column="37">&amp;<pos:position pos:line="316" pos:column="42"/></operator><name pos:line="316" pos:column="38">bottom<pos:position pos:line="316" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="316" pos:column="46">&amp;<pos:position pos:line="316" pos:column="51"/></operator><name pos:line="316" pos:column="47">top<pos:position pos:line="316" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="316" pos:column="52">sb<pos:position pos:line="316" pos:column="54"/></name><operator pos:line="316" pos:column="54">.<pos:position pos:line="316" pos:column="55"/></operator><name pos:line="316" pos:column="55">path<pos:position pos:line="316" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="316" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="316" pos:column="61"/></condition><then pos:line="316" pos:column="61">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="317" pos:column="25">usage<pos:position pos:line="317" pos:column="30"/></name><argument_list pos:line="317" pos:column="30">(<argument><expr><name pos:line="317" pos:column="31">blame_usage<pos:position pos:line="317" pos:column="42"/></name></expr></argument>)<pos:position pos:line="317" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="317" pos:column="44"/></expr_stmt></block></then></if>
		<if pos:line="318" pos:column="17">if <condition pos:line="318" pos:column="20">(<expr><name pos:line="318" pos:column="21">lno<pos:position pos:line="318" pos:column="24"/></name> <operator pos:line="318" pos:column="25">&lt;<pos:position pos:line="318" pos:column="29"/></operator> <name pos:line="318" pos:column="27">top<pos:position pos:line="318" pos:column="30"/></name> <operator pos:line="318" pos:column="31">||<pos:position pos:line="318" pos:column="33"/></operator> <operator pos:line="318" pos:column="34">(<pos:position pos:line="318" pos:column="35"/></operator><operator pos:line="318" pos:column="35">(<pos:position pos:line="318" pos:column="36"/></operator><name pos:line="318" pos:column="36">lno<pos:position pos:line="318" pos:column="39"/></name> <operator pos:line="318" pos:column="40">||<pos:position pos:line="318" pos:column="42"/></operator> <name pos:line="318" pos:column="43">bottom<pos:position pos:line="318" pos:column="49"/></name><operator pos:line="318" pos:column="49">)<pos:position pos:line="318" pos:column="50"/></operator> <operator pos:line="318" pos:column="51">&amp;&amp;<pos:position pos:line="318" pos:column="61"/></operator> <name pos:line="318" pos:column="54">lno<pos:position pos:line="318" pos:column="57"/></name> <operator pos:line="318" pos:column="58">&lt;<pos:position pos:line="318" pos:column="62"/></operator> <name pos:line="318" pos:column="60">bottom<pos:position pos:line="318" pos:column="66"/></name><operator pos:line="318" pos:column="66">)<pos:position pos:line="318" pos:column="67"/></operator></expr>)<pos:position pos:line="318" pos:column="68"/></condition><then pos:line="318" pos:column="68">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="319" pos:column="25">die<pos:position pos:line="319" pos:column="28"/></name><argument_list pos:line="319" pos:column="28">(<argument><expr><call><name pos:line="319" pos:column="29">Q_<pos:position pos:line="319" pos:column="31"/></name><argument_list pos:line="319" pos:column="31">(<argument><expr><literal type="string" pos:line="319" pos:column="32">"file %s has only %lu line"<pos:position pos:line="319" pos:column="59"/></literal></expr></argument>,
			       <argument><expr><literal type="string" pos:line="320" pos:column="32">"file %s has only %lu lines"<pos:position pos:line="320" pos:column="60"/></literal></expr></argument>,
			       <argument><expr><name pos:line="321" pos:column="32">lno<pos:position pos:line="321" pos:column="35"/></name></expr></argument>)<pos:position pos:line="321" pos:column="36"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="321" pos:column="38">path<pos:position pos:line="321" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="321" pos:column="44">lno<pos:position pos:line="321" pos:column="47"/></name></expr></argument>)<pos:position pos:line="321" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="321" pos:column="49"/></expr_stmt></block></then></if>
		<if pos:line="322" pos:column="17">if <condition pos:line="322" pos:column="20">(<expr><name pos:line="322" pos:column="21">bottom<pos:position pos:line="322" pos:column="27"/></name> <operator pos:line="322" pos:column="28">&lt;<pos:position pos:line="322" pos:column="32"/></operator> <literal type="number" pos:line="322" pos:column="30">1<pos:position pos:line="322" pos:column="31"/></literal></expr>)<pos:position pos:line="322" pos:column="32"/></condition><then pos:line="322" pos:column="32">
			<block type="pseudo"><expr_stmt><expr><name pos:line="323" pos:column="25">bottom<pos:position pos:line="323" pos:column="31"/></name> <operator pos:line="323" pos:column="32">=<pos:position pos:line="323" pos:column="33"/></operator> <literal type="number" pos:line="323" pos:column="34">1<pos:position pos:line="323" pos:column="35"/></literal></expr>;<pos:position pos:line="323" pos:column="36"/></expr_stmt></block></then></if>
		<if pos:line="324" pos:column="17">if <condition pos:line="324" pos:column="20">(<expr><name pos:line="324" pos:column="21">top<pos:position pos:line="324" pos:column="24"/></name> <operator pos:line="324" pos:column="25">&lt;<pos:position pos:line="324" pos:column="29"/></operator> <literal type="number" pos:line="324" pos:column="27">1<pos:position pos:line="324" pos:column="28"/></literal></expr>)<pos:position pos:line="324" pos:column="29"/></condition><then pos:line="324" pos:column="29">
			<block type="pseudo"><expr_stmt><expr><name pos:line="325" pos:column="25">top<pos:position pos:line="325" pos:column="28"/></name> <operator pos:line="325" pos:column="29">=<pos:position pos:line="325" pos:column="30"/></operator> <name pos:line="325" pos:column="31">lno<pos:position pos:line="325" pos:column="34"/></name></expr>;<pos:position pos:line="325" pos:column="35"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="326" pos:column="17">bottom<pos:position pos:line="326" pos:column="23"/></name><operator pos:line="326" pos:column="23">--<pos:position pos:line="326" pos:column="25"/></operator></expr>;<pos:position pos:line="326" pos:column="26"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="327" pos:column="17">range_set_append_unsafe<pos:position pos:line="327" pos:column="40"/></name><argument_list pos:line="327" pos:column="40">(<argument><expr><operator pos:line="327" pos:column="41">&amp;<pos:position pos:line="327" pos:column="46"/></operator><name pos:line="327" pos:column="42">ranges<pos:position pos:line="327" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="327" pos:column="50">bottom<pos:position pos:line="327" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="327" pos:column="58">top<pos:position pos:line="327" pos:column="61"/></name></expr></argument>)<pos:position pos:line="327" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="327" pos:column="63"/></expr_stmt>
		<expr_stmt><expr><name pos:line="328" pos:column="17">anchor<pos:position pos:line="328" pos:column="23"/></name> <operator pos:line="328" pos:column="24">=<pos:position pos:line="328" pos:column="25"/></operator> <name pos:line="328" pos:column="26">top<pos:position pos:line="328" pos:column="29"/></name> <operator pos:line="328" pos:column="30">+<pos:position pos:line="328" pos:column="31"/></operator> <literal type="number" pos:line="328" pos:column="32">1<pos:position pos:line="328" pos:column="33"/></literal></expr>;<pos:position pos:line="328" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="329" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="330" pos:column="9">sort_and_merge_range_set<pos:position pos:line="330" pos:column="33"/></name><argument_list pos:line="330" pos:column="33">(<argument><expr><operator pos:line="330" pos:column="34">&amp;<pos:position pos:line="330" pos:column="39"/></operator><name pos:line="330" pos:column="35">ranges<pos:position pos:line="330" pos:column="41"/></name></expr></argument>)<pos:position pos:line="330" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="330" pos:column="43"/></expr_stmt>

	<for pos:line="332" pos:column="9">for <control pos:line="332" pos:column="13">(<init><expr><name pos:line="332" pos:column="14">range_i<pos:position pos:line="332" pos:column="21"/></name> <operator pos:line="332" pos:column="22">=<pos:position pos:line="332" pos:column="23"/></operator> <name><name pos:line="332" pos:column="24">ranges<pos:position pos:line="332" pos:column="30"/></name><operator pos:line="332" pos:column="30">.<pos:position pos:line="332" pos:column="31"/></operator><name pos:line="332" pos:column="31">nr<pos:position pos:line="332" pos:column="33"/></name></name></expr>;<pos:position pos:line="332" pos:column="34"/></init> <condition><expr><name pos:line="332" pos:column="35">range_i<pos:position pos:line="332" pos:column="42"/></name> <operator pos:line="332" pos:column="43">&gt;<pos:position pos:line="332" pos:column="47"/></operator> <literal type="number" pos:line="332" pos:column="45">0<pos:position pos:line="332" pos:column="46"/></literal></expr>;<pos:position pos:line="332" pos:column="47"/></condition> <incr><expr><operator pos:line="332" pos:column="48">--<pos:position pos:line="332" pos:column="50"/></operator><name pos:line="332" pos:column="50">range_i<pos:position pos:line="332" pos:column="57"/></name></expr></incr>)<pos:position pos:line="332" pos:column="58"/></control> <block pos:line="332" pos:column="59">{
		<decl_stmt><decl><type><specifier pos:line="333" pos:column="17">const<pos:position pos:line="333" pos:column="22"/></specifier> <name><name pos:line="333" pos:column="23">struct<pos:position pos:line="333" pos:column="29"/></name> <name pos:line="333" pos:column="30">range<pos:position pos:line="333" pos:column="35"/></name></name> <modifier pos:line="333" pos:column="36">*<pos:position pos:line="333" pos:column="37"/></modifier></type><name pos:line="333" pos:column="37">r<pos:position pos:line="333" pos:column="38"/></name> <init pos:line="333" pos:column="39">= <expr><operator pos:line="333" pos:column="41">&amp;<pos:position pos:line="333" pos:column="46"/></operator><name><name pos:line="333" pos:column="42">ranges<pos:position pos:line="333" pos:column="48"/></name><operator pos:line="333" pos:column="48">.<pos:position pos:line="333" pos:column="49"/></operator><name pos:line="333" pos:column="49">ranges<pos:position pos:line="333" pos:column="55"/></name><index pos:line="333" pos:column="55">[<expr><name pos:line="333" pos:column="56">range_i<pos:position pos:line="333" pos:column="63"/></name> <operator pos:line="333" pos:column="64">-<pos:position pos:line="333" pos:column="65"/></operator> <literal type="number" pos:line="333" pos:column="66">1<pos:position pos:line="333" pos:column="67"/></literal></expr>]<pos:position pos:line="333" pos:column="68"/></index></name></expr></init></decl>;<pos:position pos:line="333" pos:column="69"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="334" pos:column="17">long<pos:position pos:line="334" pos:column="21"/></name></type> <name pos:line="334" pos:column="22">bottom<pos:position pos:line="334" pos:column="28"/></name> <init pos:line="334" pos:column="29">= <expr><name><name pos:line="334" pos:column="31">r<pos:position pos:line="334" pos:column="32"/></name><operator pos:line="334" pos:column="32">-&gt;<pos:position pos:line="334" pos:column="37"/></operator><name pos:line="334" pos:column="34">start<pos:position pos:line="334" pos:column="39"/></name></name></expr></init></decl>;<pos:position pos:line="334" pos:column="40"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="335" pos:column="17">long<pos:position pos:line="335" pos:column="21"/></name></type> <name pos:line="335" pos:column="22">top<pos:position pos:line="335" pos:column="25"/></name> <init pos:line="335" pos:column="26">= <expr><name><name pos:line="335" pos:column="28">r<pos:position pos:line="335" pos:column="29"/></name><operator pos:line="335" pos:column="29">-&gt;<pos:position pos:line="335" pos:column="34"/></operator><name pos:line="335" pos:column="31">end<pos:position pos:line="335" pos:column="34"/></name></name></expr></init></decl>;<pos:position pos:line="335" pos:column="35"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="336" pos:column="17">struct<pos:position pos:line="336" pos:column="23"/></name> <name pos:line="336" pos:column="24">blame_entry<pos:position pos:line="336" pos:column="35"/></name></name> <modifier pos:line="336" pos:column="36">*<pos:position pos:line="336" pos:column="37"/></modifier></type><name pos:line="336" pos:column="37">next<pos:position pos:line="336" pos:column="41"/></name> <init pos:line="336" pos:column="42">= <expr><name pos:line="336" pos:column="44">ent<pos:position pos:line="336" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="336" pos:column="48"/></decl_stmt>
		<expr_stmt><expr><name pos:line="337" pos:column="17">ent<pos:position pos:line="337" pos:column="20"/></name> <operator pos:line="337" pos:column="21">=<pos:position pos:line="337" pos:column="22"/></operator> <call><name pos:line="337" pos:column="23">xcalloc<pos:position pos:line="337" pos:column="30"/></name><argument_list pos:line="337" pos:column="30">(<argument><expr><literal type="number" pos:line="337" pos:column="31">1<pos:position pos:line="337" pos:column="32"/></literal></expr></argument>, <argument><expr><sizeof pos:line="337" pos:column="34">sizeof<argument_list pos:line="337" pos:column="40">(<argument><expr><operator pos:line="337" pos:column="41">*<pos:position pos:line="337" pos:column="42"/></operator><name pos:line="337" pos:column="42">ent<pos:position pos:line="337" pos:column="45"/></name></expr></argument>)<pos:position pos:line="337" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="337" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="337" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="338" pos:column="17">ent<pos:position pos:line="338" pos:column="20"/></name><operator pos:line="338" pos:column="20">-&gt;<pos:position pos:line="338" pos:column="25"/></operator><name pos:line="338" pos:column="22">lno<pos:position pos:line="338" pos:column="25"/></name></name> <operator pos:line="338" pos:column="26">=<pos:position pos:line="338" pos:column="27"/></operator> <name pos:line="338" pos:column="28">bottom<pos:position pos:line="338" pos:column="34"/></name></expr>;<pos:position pos:line="338" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="339" pos:column="17">ent<pos:position pos:line="339" pos:column="20"/></name><operator pos:line="339" pos:column="20">-&gt;<pos:position pos:line="339" pos:column="25"/></operator><name pos:line="339" pos:column="22">num_lines<pos:position pos:line="339" pos:column="31"/></name></name> <operator pos:line="339" pos:column="32">=<pos:position pos:line="339" pos:column="33"/></operator> <name pos:line="339" pos:column="34">top<pos:position pos:line="339" pos:column="37"/></name> <operator pos:line="339" pos:column="38">-<pos:position pos:line="339" pos:column="39"/></operator> <name pos:line="339" pos:column="40">bottom<pos:position pos:line="339" pos:column="46"/></name></expr>;<pos:position pos:line="339" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="340" pos:column="17">ent<pos:position pos:line="340" pos:column="20"/></name><operator pos:line="340" pos:column="20">-&gt;<pos:position pos:line="340" pos:column="25"/></operator><name pos:line="340" pos:column="22">suspect<pos:position pos:line="340" pos:column="29"/></name></name> <operator pos:line="340" pos:column="30">=<pos:position pos:line="340" pos:column="31"/></operator> <name pos:line="340" pos:column="32">o<pos:position pos:line="340" pos:column="33"/></name></expr>;<pos:position pos:line="340" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="341" pos:column="17">ent<pos:position pos:line="341" pos:column="20"/></name><operator pos:line="341" pos:column="20">-&gt;<pos:position pos:line="341" pos:column="25"/></operator><name pos:line="341" pos:column="22">s_lno<pos:position pos:line="341" pos:column="27"/></name></name> <operator pos:line="341" pos:column="28">=<pos:position pos:line="341" pos:column="29"/></operator> <name pos:line="341" pos:column="30">bottom<pos:position pos:line="341" pos:column="36"/></name></expr>;<pos:position pos:line="341" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="342" pos:column="17">ent<pos:position pos:line="342" pos:column="20"/></name><operator pos:line="342" pos:column="20">-&gt;<pos:position pos:line="342" pos:column="25"/></operator><name pos:line="342" pos:column="22">next<pos:position pos:line="342" pos:column="26"/></name></name> <operator pos:line="342" pos:column="27">=<pos:position pos:line="342" pos:column="28"/></operator> <name pos:line="342" pos:column="29">next<pos:position pos:line="342" pos:column="33"/></name></expr>;<pos:position pos:line="342" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="343" pos:column="17">origin_incref<pos:position pos:line="343" pos:column="30"/></name><argument_list pos:line="343" pos:column="30">(<argument><expr><name pos:line="343" pos:column="31">o<pos:position pos:line="343" pos:column="32"/></name></expr></argument>)<pos:position pos:line="343" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="343" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="344" pos:column="10"/></block></for>

	<expr_stmt><expr><name><name pos:line="346" pos:column="9">o<pos:position pos:line="346" pos:column="10"/></name><operator pos:line="346" pos:column="10">-&gt;<pos:position pos:line="346" pos:column="15"/></operator><name pos:line="346" pos:column="12">suspects<pos:position pos:line="346" pos:column="20"/></name></name> <operator pos:line="346" pos:column="21">=<pos:position pos:line="346" pos:column="22"/></operator> <name pos:line="346" pos:column="23">ent<pos:position pos:line="346" pos:column="26"/></name></expr>;<pos:position pos:line="346" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="347" pos:column="9">prio_queue_put<pos:position pos:line="347" pos:column="23"/></name><argument_list pos:line="347" pos:column="23">(<argument><expr><operator pos:line="347" pos:column="24">&amp;<pos:position pos:line="347" pos:column="29"/></operator><name><name pos:line="347" pos:column="25">sb<pos:position pos:line="347" pos:column="27"/></name><operator pos:line="347" pos:column="27">.<pos:position pos:line="347" pos:column="28"/></operator><name pos:line="347" pos:column="28">commits<pos:position pos:line="347" pos:column="35"/></name></name></expr></argument>, <argument><expr><name><name pos:line="347" pos:column="37">o<pos:position pos:line="347" pos:column="38"/></name><operator pos:line="347" pos:column="38">-&gt;<pos:position pos:line="347" pos:column="43"/></operator><name pos:line="347" pos:column="40">commit<pos:position pos:line="347" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="347" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="347" pos:column="48"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="349" pos:column="9">origin_decref<pos:position pos:line="349" pos:column="22"/></name><argument_list pos:line="349" pos:column="22">(<argument><expr><name pos:line="349" pos:column="23">o<pos:position pos:line="349" pos:column="24"/></name></expr></argument>)<pos:position pos:line="349" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="349" pos:column="26"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="351" pos:column="9">range_set_release<pos:position pos:line="351" pos:column="26"/></name><argument_list pos:line="351" pos:column="26">(<argument><expr><operator pos:line="351" pos:column="27">&amp;<pos:position pos:line="351" pos:column="32"/></operator><name pos:line="351" pos:column="28">ranges<pos:position pos:line="351" pos:column="34"/></name></expr></argument>)<pos:position pos:line="351" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="351" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="352" pos:column="9">string_list_clear<pos:position pos:line="352" pos:column="26"/></name><argument_list pos:line="352" pos:column="26">(<argument><expr><operator pos:line="352" pos:column="27">&amp;<pos:position pos:line="352" pos:column="32"/></operator><name pos:line="352" pos:column="28">range_list<pos:position pos:line="352" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="352" pos:column="40">0<pos:position pos:line="352" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="352" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="352" pos:column="43"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="354" pos:column="9">sb<pos:position pos:line="354" pos:column="11"/></name><operator pos:line="354" pos:column="11">.<pos:position pos:line="354" pos:column="12"/></operator><name pos:line="354" pos:column="12">ent<pos:position pos:line="354" pos:column="15"/></name></name> <operator pos:line="354" pos:column="16">=<pos:position pos:line="354" pos:column="17"/></operator> <name pos:line="354" pos:column="18">NULL<pos:position pos:line="354" pos:column="22"/></name></expr>;<pos:position pos:line="354" pos:column="23"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="355" pos:column="9">sb<pos:position pos:line="355" pos:column="11"/></name><operator pos:line="355" pos:column="11">.<pos:position pos:line="355" pos:column="12"/></operator><name pos:line="355" pos:column="12">path<pos:position pos:line="355" pos:column="16"/></name></name> <operator pos:line="355" pos:column="17">=<pos:position pos:line="355" pos:column="18"/></operator> <name pos:line="355" pos:column="19">path<pos:position pos:line="355" pos:column="23"/></name></expr>;<pos:position pos:line="355" pos:column="24"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="357" pos:column="9">read_mailmap<pos:position pos:line="357" pos:column="21"/></name><argument_list pos:line="357" pos:column="21">(<argument><expr><operator pos:line="357" pos:column="22">&amp;<pos:position pos:line="357" pos:column="27"/></operator><name pos:line="357" pos:column="23">mailmap<pos:position pos:line="357" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="357" pos:column="32">NULL<pos:position pos:line="357" pos:column="36"/></name></expr></argument>)<pos:position pos:line="357" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="357" pos:column="38"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="359" pos:column="9">assign_blame<pos:position pos:line="359" pos:column="21"/></name><argument_list pos:line="359" pos:column="21">(<argument><expr><operator pos:line="359" pos:column="22">&amp;<pos:position pos:line="359" pos:column="27"/></operator><name pos:line="359" pos:column="23">sb<pos:position pos:line="359" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="359" pos:column="27">opt<pos:position pos:line="359" pos:column="30"/></name></expr></argument>)<pos:position pos:line="359" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="359" pos:column="32"/></expr_stmt>

	<if pos:line="361" pos:column="9">if <condition pos:line="361" pos:column="12">(<expr><operator pos:line="361" pos:column="13">!<pos:position pos:line="361" pos:column="14"/></operator><name pos:line="361" pos:column="14">incremental<pos:position pos:line="361" pos:column="25"/></name></expr>)<pos:position pos:line="361" pos:column="26"/></condition><then pos:line="361" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="362" pos:column="17">setup_pager<pos:position pos:line="362" pos:column="28"/></name><argument_list pos:line="362" pos:column="28">()<pos:position pos:line="362" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="362" pos:column="31"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="364" pos:column="9">free<pos:position pos:line="364" pos:column="13"/></name><argument_list pos:line="364" pos:column="13">(<argument><expr><name pos:line="364" pos:column="14">final_commit_name<pos:position pos:line="364" pos:column="31"/></name></expr></argument>)<pos:position pos:line="364" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="364" pos:column="33"/></expr_stmt>

	<if pos:line="366" pos:column="9">if <condition pos:line="366" pos:column="12">(<expr><name pos:line="366" pos:column="13">incremental<pos:position pos:line="366" pos:column="24"/></name></expr>)<pos:position pos:line="366" pos:column="25"/></condition><then pos:line="366" pos:column="25">
		<block type="pseudo"><return pos:line="367" pos:column="17">return <expr><literal type="number" pos:line="367" pos:column="24">0<pos:position pos:line="367" pos:column="25"/></literal></expr>;<pos:position pos:line="367" pos:column="26"/></return></block></then></if>

	<expr_stmt><expr><name><name pos:line="369" pos:column="9">sb<pos:position pos:line="369" pos:column="11"/></name><operator pos:line="369" pos:column="11">.<pos:position pos:line="369" pos:column="12"/></operator><name pos:line="369" pos:column="12">ent<pos:position pos:line="369" pos:column="15"/></name></name> <operator pos:line="369" pos:column="16">=<pos:position pos:line="369" pos:column="17"/></operator> <call><name pos:line="369" pos:column="18">blame_sort<pos:position pos:line="369" pos:column="28"/></name><argument_list pos:line="369" pos:column="28">(<argument><expr><name><name pos:line="369" pos:column="29">sb<pos:position pos:line="369" pos:column="31"/></name><operator pos:line="369" pos:column="31">.<pos:position pos:line="369" pos:column="32"/></operator><name pos:line="369" pos:column="32">ent<pos:position pos:line="369" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="369" pos:column="37">compare_blame_final<pos:position pos:line="369" pos:column="56"/></name></expr></argument>)<pos:position pos:line="369" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="369" pos:column="58"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="371" pos:column="9">coalesce<pos:position pos:line="371" pos:column="17"/></name><argument_list pos:line="371" pos:column="17">(<argument><expr><operator pos:line="371" pos:column="18">&amp;<pos:position pos:line="371" pos:column="23"/></operator><name pos:line="371" pos:column="19">sb<pos:position pos:line="371" pos:column="21"/></name></expr></argument>)<pos:position pos:line="371" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="371" pos:column="23"/></expr_stmt>

	<if pos:line="373" pos:column="9">if <condition pos:line="373" pos:column="12">(<expr><operator pos:line="373" pos:column="13">!<pos:position pos:line="373" pos:column="14"/></operator><operator pos:line="373" pos:column="14">(<pos:position pos:line="373" pos:column="15"/></operator><name pos:line="373" pos:column="15">output_option<pos:position pos:line="373" pos:column="28"/></name> <operator pos:line="373" pos:column="29">&amp;<pos:position pos:line="373" pos:column="34"/></operator> <name pos:line="373" pos:column="31">OUTPUT_PORCELAIN<pos:position pos:line="373" pos:column="47"/></name><operator pos:line="373" pos:column="47">)<pos:position pos:line="373" pos:column="48"/></operator></expr>)<pos:position pos:line="373" pos:column="49"/></condition><then pos:line="373" pos:column="49">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="374" pos:column="17">find_alignment<pos:position pos:line="374" pos:column="31"/></name><argument_list pos:line="374" pos:column="31">(<argument><expr><operator pos:line="374" pos:column="32">&amp;<pos:position pos:line="374" pos:column="37"/></operator><name pos:line="374" pos:column="33">sb<pos:position pos:line="374" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="374" pos:column="37">&amp;<pos:position pos:line="374" pos:column="42"/></operator><name pos:line="374" pos:column="38">output_option<pos:position pos:line="374" pos:column="51"/></name></expr></argument>)<pos:position pos:line="374" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="374" pos:column="53"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="376" pos:column="9">output<pos:position pos:line="376" pos:column="15"/></name><argument_list pos:line="376" pos:column="15">(<argument><expr><operator pos:line="376" pos:column="16">&amp;<pos:position pos:line="376" pos:column="21"/></operator><name pos:line="376" pos:column="17">sb<pos:position pos:line="376" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="376" pos:column="21">output_option<pos:position pos:line="376" pos:column="34"/></name></expr></argument>)<pos:position pos:line="376" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="376" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="377" pos:column="9">free<pos:position pos:line="377" pos:column="13"/></name><argument_list pos:line="377" pos:column="13">(<argument><expr><operator pos:line="377" pos:column="14">(<pos:position pos:line="377" pos:column="15"/></operator><name pos:line="377" pos:column="15">void<pos:position pos:line="377" pos:column="19"/></name> <operator pos:line="377" pos:column="20">*<pos:position pos:line="377" pos:column="21"/></operator><operator pos:line="377" pos:column="21">)<pos:position pos:line="377" pos:column="22"/></operator><name><name pos:line="377" pos:column="22">sb<pos:position pos:line="377" pos:column="24"/></name><operator pos:line="377" pos:column="24">.<pos:position pos:line="377" pos:column="25"/></operator><name pos:line="377" pos:column="25">final_buf<pos:position pos:line="377" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="377" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="377" pos:column="36"/></expr_stmt>
	<for pos:line="378" pos:column="9">for <control pos:line="378" pos:column="13">(<init><expr><name pos:line="378" pos:column="14">ent<pos:position pos:line="378" pos:column="17"/></name> <operator pos:line="378" pos:column="18">=<pos:position pos:line="378" pos:column="19"/></operator> <name><name pos:line="378" pos:column="20">sb<pos:position pos:line="378" pos:column="22"/></name><operator pos:line="378" pos:column="22">.<pos:position pos:line="378" pos:column="23"/></operator><name pos:line="378" pos:column="23">ent<pos:position pos:line="378" pos:column="26"/></name></name></expr>;<pos:position pos:line="378" pos:column="27"/></init> <condition><expr><name pos:line="378" pos:column="28">ent<pos:position pos:line="378" pos:column="31"/></name></expr>;<pos:position pos:line="378" pos:column="32"/></condition> <incr/>)<pos:position pos:line="378" pos:column="34"/></control> <block pos:line="378" pos:column="35">{
		<decl_stmt><decl><type><name><name pos:line="379" pos:column="17">struct<pos:position pos:line="379" pos:column="23"/></name> <name pos:line="379" pos:column="24">blame_entry<pos:position pos:line="379" pos:column="35"/></name></name> <modifier pos:line="379" pos:column="36">*<pos:position pos:line="379" pos:column="37"/></modifier></type><name pos:line="379" pos:column="37">e<pos:position pos:line="379" pos:column="38"/></name> <init pos:line="379" pos:column="39">= <expr><name><name pos:line="379" pos:column="41">ent<pos:position pos:line="379" pos:column="44"/></name><operator pos:line="379" pos:column="44">-&gt;<pos:position pos:line="379" pos:column="49"/></operator><name pos:line="379" pos:column="46">next<pos:position pos:line="379" pos:column="50"/></name></name></expr></init></decl>;<pos:position pos:line="379" pos:column="51"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="380" pos:column="17">free<pos:position pos:line="380" pos:column="21"/></name><argument_list pos:line="380" pos:column="21">(<argument><expr><name pos:line="380" pos:column="22">ent<pos:position pos:line="380" pos:column="25"/></name></expr></argument>)<pos:position pos:line="380" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="380" pos:column="27"/></expr_stmt>
		<expr_stmt><expr><name pos:line="381" pos:column="17">ent<pos:position pos:line="381" pos:column="20"/></name> <operator pos:line="381" pos:column="21">=<pos:position pos:line="381" pos:column="22"/></operator> <name pos:line="381" pos:column="23">e<pos:position pos:line="381" pos:column="24"/></name></expr>;<pos:position pos:line="381" pos:column="25"/></expr_stmt>
	}<pos:position pos:line="382" pos:column="10"/></block></for>

	<if pos:line="384" pos:column="9">if <condition pos:line="384" pos:column="12">(<expr><name pos:line="384" pos:column="13">show_stats<pos:position pos:line="384" pos:column="23"/></name></expr>)<pos:position pos:line="384" pos:column="24"/></condition><then pos:line="384" pos:column="24"> <block pos:line="384" pos:column="25">{
		<expr_stmt><expr><call><name pos:line="385" pos:column="17">printf<pos:position pos:line="385" pos:column="23"/></name><argument_list pos:line="385" pos:column="23">(<argument><expr><literal type="string" pos:line="385" pos:column="24">"num read blob: %d\n"<pos:position pos:line="385" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="385" pos:column="47">num_read_blob<pos:position pos:line="385" pos:column="60"/></name></expr></argument>)<pos:position pos:line="385" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="385" pos:column="62"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="386" pos:column="17">printf<pos:position pos:line="386" pos:column="23"/></name><argument_list pos:line="386" pos:column="23">(<argument><expr><literal type="string" pos:line="386" pos:column="24">"num get patch: %d\n"<pos:position pos:line="386" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="386" pos:column="47">num_get_patch<pos:position pos:line="386" pos:column="60"/></name></expr></argument>)<pos:position pos:line="386" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="386" pos:column="62"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="387" pos:column="17">printf<pos:position pos:line="387" pos:column="23"/></name><argument_list pos:line="387" pos:column="23">(<argument><expr><literal type="string" pos:line="387" pos:column="24">"num commits: %d\n"<pos:position pos:line="387" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="387" pos:column="45">num_commits<pos:position pos:line="387" pos:column="56"/></name></expr></argument>)<pos:position pos:line="387" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="387" pos:column="58"/></expr_stmt>
	}<pos:position pos:line="388" pos:column="10"/></block></then></if>
	<return pos:line="389" pos:column="9">return <expr><literal type="number" pos:line="389" pos:column="16">0<pos:position pos:line="389" pos:column="17"/></literal></expr>;<pos:position pos:line="389" pos:column="18"/></return>
}<pos:position pos:line="390" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_447_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">parse_credential_file<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><specifier pos:line="1" pos:column="34">const<pos:position pos:line="1" pos:column="39"/></specifier> <name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">fn<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>,
				  <parameter><decl><type><name><name pos:line="2" pos:column="35">struct<pos:position pos:line="2" pos:column="41"/></name> <name pos:line="2" pos:column="42">credential<pos:position pos:line="2" pos:column="52"/></name></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="54">c<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>,
				  <parameter><function_decl><type><name pos:line="3" pos:column="35">void<pos:position pos:line="3" pos:column="39"/></name></type> (<modifier pos:line="3" pos:column="41">*<pos:position pos:line="3" pos:column="42"/></modifier><name pos:line="3" pos:column="42">match_cb<pos:position pos:line="3" pos:column="50"/></name>)<parameter_list pos:line="3" pos:column="51">(<parameter><decl><type><name><name pos:line="3" pos:column="52">struct<pos:position pos:line="3" pos:column="58"/></name> <name pos:line="3" pos:column="59">credential<pos:position pos:line="3" pos:column="69"/></name></name> <modifier pos:line="3" pos:column="70">*<pos:position pos:line="3" pos:column="71"/></modifier></type></decl></parameter>)<pos:position pos:line="3" pos:column="72"/></parameter_list></function_decl></parameter>,
				  <parameter><function_decl><type><name pos:line="4" pos:column="35">void<pos:position pos:line="4" pos:column="39"/></name></type> (<modifier pos:line="4" pos:column="41">*<pos:position pos:line="4" pos:column="42"/></modifier><name pos:line="4" pos:column="42">other_cb<pos:position pos:line="4" pos:column="50"/></name>)<parameter_list pos:line="4" pos:column="51">(<parameter><decl><type><name><name pos:line="4" pos:column="52">struct<pos:position pos:line="4" pos:column="58"/></name> <name pos:line="4" pos:column="59">strbuf<pos:position pos:line="4" pos:column="65"/></name></name> <modifier pos:line="4" pos:column="66">*<pos:position pos:line="4" pos:column="67"/></modifier></type></decl></parameter>)<pos:position pos:line="4" pos:column="68"/></parameter_list></function_decl></parameter>)<pos:position pos:line="4" pos:column="69"/></parameter_list>
<block pos:line="5" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">FILE<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">fh<pos:position pos:line="6" pos:column="17"/></name></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">strbuf<pos:position pos:line="7" pos:column="22"/></name></name></type> <name pos:line="7" pos:column="23">line<pos:position pos:line="7" pos:column="27"/></name> <init pos:line="7" pos:column="28">= <expr><name pos:line="7" pos:column="30">STRBUF_INIT<pos:position pos:line="7" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">credential<pos:position pos:line="8" pos:column="26"/></name></name></type> <name pos:line="8" pos:column="27">entry<pos:position pos:line="8" pos:column="32"/></name> <init pos:line="8" pos:column="33">= <expr><name pos:line="8" pos:column="35">CREDENTIAL_INIT<pos:position pos:line="8" pos:column="50"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="51"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">found_credential<pos:position pos:line="9" pos:column="29"/></name> <init pos:line="9" pos:column="30">= <expr><literal type="number" pos:line="9" pos:column="32">0<pos:position pos:line="9" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="34"/></decl_stmt>

	<expr_stmt><expr><name pos:line="11" pos:column="9">fh<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <call><name pos:line="11" pos:column="14">fopen<pos:position pos:line="11" pos:column="19"/></name><argument_list pos:line="11" pos:column="19">(<argument><expr><name pos:line="11" pos:column="20">fn<pos:position pos:line="11" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="24">"r"<pos:position pos:line="11" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="29"/></expr_stmt>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">!<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">fh<pos:position pos:line="12" pos:column="16"/></name></expr>)<pos:position pos:line="12" pos:column="17"/></condition><then pos:line="12" pos:column="17"> <block pos:line="12" pos:column="18">{
		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><name pos:line="13" pos:column="21">errno<pos:position pos:line="13" pos:column="26"/></name> <operator pos:line="13" pos:column="27">!=<pos:position pos:line="13" pos:column="29"/></operator> <name pos:line="13" pos:column="30">ENOENT<pos:position pos:line="13" pos:column="36"/></name> <operator pos:line="13" pos:column="37">&amp;&amp;<pos:position pos:line="13" pos:column="47"/></operator> <name pos:line="13" pos:column="40">errno<pos:position pos:line="13" pos:column="45"/></name> <operator pos:line="13" pos:column="46">!=<pos:position pos:line="13" pos:column="48"/></operator> <name pos:line="13" pos:column="49">EACCES<pos:position pos:line="13" pos:column="55"/></name></expr>)<pos:position pos:line="13" pos:column="56"/></condition><then pos:line="13" pos:column="56">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="25">die_errno<pos:position pos:line="14" pos:column="34"/></name><argument_list pos:line="14" pos:column="34">(<argument><expr><literal type="string" pos:line="14" pos:column="35">"unable to open %s"<pos:position pos:line="14" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="56">fn<pos:position pos:line="14" pos:column="58"/></name></expr></argument>)<pos:position pos:line="14" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="60"/></expr_stmt></block></then></if>
		<return pos:line="15" pos:column="17">return <expr><name pos:line="15" pos:column="24">found_credential<pos:position pos:line="15" pos:column="40"/></name></expr>;<pos:position pos:line="15" pos:column="41"/></return>
	}<pos:position pos:line="16" pos:column="10"/></block></then></if>

	<while pos:line="18" pos:column="9">while <condition pos:line="18" pos:column="15">(<expr><call><name pos:line="18" pos:column="16">strbuf_getline_lf<pos:position pos:line="18" pos:column="33"/></name><argument_list pos:line="18" pos:column="33">(<argument><expr><operator pos:line="18" pos:column="34">&amp;<pos:position pos:line="18" pos:column="39"/></operator><name pos:line="18" pos:column="35">line<pos:position pos:line="18" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="41">fh<pos:position pos:line="18" pos:column="43"/></name></expr></argument>)<pos:position pos:line="18" pos:column="44"/></argument_list></call> <operator pos:line="18" pos:column="45">!=<pos:position pos:line="18" pos:column="47"/></operator> <name pos:line="18" pos:column="48">EOF<pos:position pos:line="18" pos:column="51"/></name></expr>)<pos:position pos:line="18" pos:column="52"/></condition> <block pos:line="18" pos:column="53">{
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">credential_from_url<pos:position pos:line="19" pos:column="36"/></name><argument_list pos:line="19" pos:column="36">(<argument><expr><operator pos:line="19" pos:column="37">&amp;<pos:position pos:line="19" pos:column="42"/></operator><name pos:line="19" pos:column="38">entry<pos:position pos:line="19" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="45">line<pos:position pos:line="19" pos:column="49"/></name><operator pos:line="19" pos:column="49">.<pos:position pos:line="19" pos:column="50"/></operator><name pos:line="19" pos:column="50">buf<pos:position pos:line="19" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="55"/></expr_stmt>
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><name><name pos:line="20" pos:column="21">entry<pos:position pos:line="20" pos:column="26"/></name><operator pos:line="20" pos:column="26">.<pos:position pos:line="20" pos:column="27"/></operator><name pos:line="20" pos:column="27">username<pos:position pos:line="20" pos:column="35"/></name></name> <operator pos:line="20" pos:column="36">&amp;&amp;<pos:position pos:line="20" pos:column="46"/></operator> <name><name pos:line="20" pos:column="39">entry<pos:position pos:line="20" pos:column="44"/></name><operator pos:line="20" pos:column="44">.<pos:position pos:line="20" pos:column="45"/></operator><name pos:line="20" pos:column="45">password<pos:position pos:line="20" pos:column="53"/></name></name> <operator pos:line="20" pos:column="54">&amp;&amp;<pos:position pos:line="20" pos:column="64"/></operator>
		    <call><name pos:line="21" pos:column="21">credential_match<pos:position pos:line="21" pos:column="37"/></name><argument_list pos:line="21" pos:column="37">(<argument><expr><name pos:line="21" pos:column="38">c<pos:position pos:line="21" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="41">&amp;<pos:position pos:line="21" pos:column="46"/></operator><name pos:line="21" pos:column="42">entry<pos:position pos:line="21" pos:column="47"/></name></expr></argument>)<pos:position pos:line="21" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="49"/></condition><then pos:line="21" pos:column="49"> <block pos:line="21" pos:column="50">{
			<expr_stmt><expr><name pos:line="22" pos:column="25">found_credential<pos:position pos:line="22" pos:column="41"/></name> <operator pos:line="22" pos:column="42">=<pos:position pos:line="22" pos:column="43"/></operator> <literal type="number" pos:line="22" pos:column="44">1<pos:position pos:line="22" pos:column="45"/></literal></expr>;<pos:position pos:line="22" pos:column="46"/></expr_stmt>
			<if pos:line="23" pos:column="25">if <condition pos:line="23" pos:column="28">(<expr><name pos:line="23" pos:column="29">match_cb<pos:position pos:line="23" pos:column="37"/></name></expr>)<pos:position pos:line="23" pos:column="38"/></condition><then pos:line="23" pos:column="38"> <block pos:line="23" pos:column="39">{
				<expr_stmt><expr><call><name pos:line="24" pos:column="33">match_cb<pos:position pos:line="24" pos:column="41"/></name><argument_list pos:line="24" pos:column="41">(<argument><expr><operator pos:line="24" pos:column="42">&amp;<pos:position pos:line="24" pos:column="47"/></operator><name pos:line="24" pos:column="43">entry<pos:position pos:line="24" pos:column="48"/></name></expr></argument>)<pos:position pos:line="24" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="50"/></expr_stmt>
				<break pos:line="25" pos:column="33">break;<pos:position pos:line="25" pos:column="39"/></break>
			}<pos:position pos:line="26" pos:column="26"/></block></then></if>
		}<pos:position pos:line="27" pos:column="18"/></block></then>
		<elseif pos:line="28" pos:column="17">else <if pos:line="28" pos:column="22">if <condition pos:line="28" pos:column="25">(<expr><name pos:line="28" pos:column="26">other_cb<pos:position pos:line="28" pos:column="34"/></name></expr>)<pos:position pos:line="28" pos:column="35"/></condition><then pos:line="28" pos:column="35">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="25">other_cb<pos:position pos:line="29" pos:column="33"/></name><argument_list pos:line="29" pos:column="33">(<argument><expr><operator pos:line="29" pos:column="34">&amp;<pos:position pos:line="29" pos:column="39"/></operator><name pos:line="29" pos:column="35">line<pos:position pos:line="29" pos:column="39"/></name></expr></argument>)<pos:position pos:line="29" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="41"/></expr_stmt></block></then></if></elseif></if>
	}<pos:position pos:line="30" pos:column="10"/></block></while>

	<expr_stmt><expr><call><name pos:line="32" pos:column="9">credential_clear<pos:position pos:line="32" pos:column="25"/></name><argument_list pos:line="32" pos:column="25">(<argument><expr><operator pos:line="32" pos:column="26">&amp;<pos:position pos:line="32" pos:column="31"/></operator><name pos:line="32" pos:column="27">entry<pos:position pos:line="32" pos:column="32"/></name></expr></argument>)<pos:position pos:line="32" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="33" pos:column="9">strbuf_release<pos:position pos:line="33" pos:column="23"/></name><argument_list pos:line="33" pos:column="23">(<argument><expr><operator pos:line="33" pos:column="24">&amp;<pos:position pos:line="33" pos:column="29"/></operator><name pos:line="33" pos:column="25">line<pos:position pos:line="33" pos:column="29"/></name></expr></argument>)<pos:position pos:line="33" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="34" pos:column="9">fclose<pos:position pos:line="34" pos:column="15"/></name><argument_list pos:line="34" pos:column="15">(<argument><expr><name pos:line="34" pos:column="16">fh<pos:position pos:line="34" pos:column="18"/></name></expr></argument>)<pos:position pos:line="34" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="20"/></expr_stmt>
	<return pos:line="35" pos:column="9">return <expr><name pos:line="35" pos:column="16">found_credential<pos:position pos:line="35" pos:column="32"/></name></expr>;<pos:position pos:line="35" pos:column="33"/></return>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3833_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">parse_merge_opt<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name><name pos:line="1" pos:column="21">struct<pos:position pos:line="1" pos:column="27"/></name> <name pos:line="1" pos:column="28">merge_options<pos:position pos:line="1" pos:column="41"/></name></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">o<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="46">const<pos:position pos:line="1" pos:column="51"/></specifier> <name pos:line="1" pos:column="52">char<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">s<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">arg<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">s<pos:position pos:line="5" pos:column="15"/></name> <operator pos:line="5" pos:column="16">||<pos:position pos:line="5" pos:column="18"/></operator> <operator pos:line="5" pos:column="19">!<pos:position pos:line="5" pos:column="20"/></operator><operator pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></operator><name pos:line="5" pos:column="21">s<pos:position pos:line="5" pos:column="22"/></name></expr>)<pos:position pos:line="5" pos:column="23"/></condition><then pos:line="5" pos:column="23">
		<block type="pseudo"><return pos:line="6" pos:column="17">return <expr><operator pos:line="6" pos:column="24">-<pos:position pos:line="6" pos:column="25"/></operator><literal type="number" pos:line="6" pos:column="25">1<pos:position pos:line="6" pos:column="26"/></literal></expr>;<pos:position pos:line="6" pos:column="27"/></return></block></then></if>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><call><name pos:line="7" pos:column="14">strcmp<pos:position pos:line="7" pos:column="20"/></name><argument_list pos:line="7" pos:column="20">(<argument><expr><name pos:line="7" pos:column="21">s<pos:position pos:line="7" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="24">"ours"<pos:position pos:line="7" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="32"/></condition><then pos:line="7" pos:column="32">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="8" pos:column="17">o<pos:position pos:line="8" pos:column="18"/></name><operator pos:line="8" pos:column="18">-&gt;<pos:position pos:line="8" pos:column="23"/></operator><name pos:line="8" pos:column="20">recursive_variant<pos:position pos:line="8" pos:column="37"/></name></name> <operator pos:line="8" pos:column="38">=<pos:position pos:line="8" pos:column="39"/></operator> <name pos:line="8" pos:column="40">MERGE_RECURSIVE_OURS<pos:position pos:line="8" pos:column="60"/></name></expr>;<pos:position pos:line="8" pos:column="61"/></expr_stmt></block></then>
	<elseif pos:line="9" pos:column="9">else <if pos:line="9" pos:column="14">if <condition pos:line="9" pos:column="17">(<expr><operator pos:line="9" pos:column="18">!<pos:position pos:line="9" pos:column="19"/></operator><call><name pos:line="9" pos:column="19">strcmp<pos:position pos:line="9" pos:column="25"/></name><argument_list pos:line="9" pos:column="25">(<argument><expr><name pos:line="9" pos:column="26">s<pos:position pos:line="9" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="29">"theirs"<pos:position pos:line="9" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="39"/></condition><then pos:line="9" pos:column="39">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="10" pos:column="17">o<pos:position pos:line="10" pos:column="18"/></name><operator pos:line="10" pos:column="18">-&gt;<pos:position pos:line="10" pos:column="23"/></operator><name pos:line="10" pos:column="20">recursive_variant<pos:position pos:line="10" pos:column="37"/></name></name> <operator pos:line="10" pos:column="38">=<pos:position pos:line="10" pos:column="39"/></operator> <name pos:line="10" pos:column="40">MERGE_RECURSIVE_THEIRS<pos:position pos:line="10" pos:column="62"/></name></expr>;<pos:position pos:line="10" pos:column="63"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="11" pos:column="9">else <if pos:line="11" pos:column="14">if <condition pos:line="11" pos:column="17">(<expr><operator pos:line="11" pos:column="18">!<pos:position pos:line="11" pos:column="19"/></operator><call><name pos:line="11" pos:column="19">strcmp<pos:position pos:line="11" pos:column="25"/></name><argument_list pos:line="11" pos:column="25">(<argument><expr><name pos:line="11" pos:column="26">s<pos:position pos:line="11" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="29">"subtree"<pos:position pos:line="11" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="40"/></condition><then pos:line="11" pos:column="40">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="12" pos:column="17">o<pos:position pos:line="12" pos:column="18"/></name><operator pos:line="12" pos:column="18">-&gt;<pos:position pos:line="12" pos:column="23"/></operator><name pos:line="12" pos:column="20">subtree_shift<pos:position pos:line="12" pos:column="33"/></name></name> <operator pos:line="12" pos:column="34">=<pos:position pos:line="12" pos:column="35"/></operator> <literal type="string" pos:line="12" pos:column="36">""<pos:position pos:line="12" pos:column="38"/></literal></expr>;<pos:position pos:line="12" pos:column="39"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="13" pos:column="9">else <if pos:line="13" pos:column="14">if <condition pos:line="13" pos:column="17">(<expr><call><name pos:line="13" pos:column="18">skip_prefix<pos:position pos:line="13" pos:column="29"/></name><argument_list pos:line="13" pos:column="29">(<argument><expr><name pos:line="13" pos:column="30">s<pos:position pos:line="13" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="33">"subtree="<pos:position pos:line="13" pos:column="43"/></literal></expr></argument>, <argument><expr><operator pos:line="13" pos:column="45">&amp;<pos:position pos:line="13" pos:column="50"/></operator><name pos:line="13" pos:column="46">arg<pos:position pos:line="13" pos:column="49"/></name></expr></argument>)<pos:position pos:line="13" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="51"/></condition><then pos:line="13" pos:column="51">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="14" pos:column="17">o<pos:position pos:line="14" pos:column="18"/></name><operator pos:line="14" pos:column="18">-&gt;<pos:position pos:line="14" pos:column="23"/></operator><name pos:line="14" pos:column="20">subtree_shift<pos:position pos:line="14" pos:column="33"/></name></name> <operator pos:line="14" pos:column="34">=<pos:position pos:line="14" pos:column="35"/></operator> <name pos:line="14" pos:column="36">arg<pos:position pos:line="14" pos:column="39"/></name></expr>;<pos:position pos:line="14" pos:column="40"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="15" pos:column="9">else <if pos:line="15" pos:column="14">if <condition pos:line="15" pos:column="17">(<expr><operator pos:line="15" pos:column="18">!<pos:position pos:line="15" pos:column="19"/></operator><call><name pos:line="15" pos:column="19">strcmp<pos:position pos:line="15" pos:column="25"/></name><argument_list pos:line="15" pos:column="25">(<argument><expr><name pos:line="15" pos:column="26">s<pos:position pos:line="15" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="29">"patience"<pos:position pos:line="15" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="41"/></condition><then pos:line="15" pos:column="41">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="16" pos:column="17">o<pos:position pos:line="16" pos:column="18"/></name><operator pos:line="16" pos:column="18">-&gt;<pos:position pos:line="16" pos:column="23"/></operator><name pos:line="16" pos:column="20">xdl_opts<pos:position pos:line="16" pos:column="28"/></name></name> <operator pos:line="16" pos:column="29">=<pos:position pos:line="16" pos:column="30"/></operator> <call><name pos:line="16" pos:column="31">DIFF_WITH_ALG<pos:position pos:line="16" pos:column="44"/></name><argument_list pos:line="16" pos:column="44">(<argument><expr><name pos:line="16" pos:column="45">o<pos:position pos:line="16" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="48">PATIENCE_DIFF<pos:position pos:line="16" pos:column="61"/></name></expr></argument>)<pos:position pos:line="16" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="63"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="17" pos:column="9">else <if pos:line="17" pos:column="14">if <condition pos:line="17" pos:column="17">(<expr><operator pos:line="17" pos:column="18">!<pos:position pos:line="17" pos:column="19"/></operator><call><name pos:line="17" pos:column="19">strcmp<pos:position pos:line="17" pos:column="25"/></name><argument_list pos:line="17" pos:column="25">(<argument><expr><name pos:line="17" pos:column="26">s<pos:position pos:line="17" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="29">"histogram"<pos:position pos:line="17" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="42"/></condition><then pos:line="17" pos:column="42">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="18" pos:column="17">o<pos:position pos:line="18" pos:column="18"/></name><operator pos:line="18" pos:column="18">-&gt;<pos:position pos:line="18" pos:column="23"/></operator><name pos:line="18" pos:column="20">xdl_opts<pos:position pos:line="18" pos:column="28"/></name></name> <operator pos:line="18" pos:column="29">=<pos:position pos:line="18" pos:column="30"/></operator> <call><name pos:line="18" pos:column="31">DIFF_WITH_ALG<pos:position pos:line="18" pos:column="44"/></name><argument_list pos:line="18" pos:column="44">(<argument><expr><name pos:line="18" pos:column="45">o<pos:position pos:line="18" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="48">HISTOGRAM_DIFF<pos:position pos:line="18" pos:column="62"/></name></expr></argument>)<pos:position pos:line="18" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="64"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="19" pos:column="9">else <if pos:line="19" pos:column="14">if <condition pos:line="19" pos:column="17">(<expr><call><name pos:line="19" pos:column="18">skip_prefix<pos:position pos:line="19" pos:column="29"/></name><argument_list pos:line="19" pos:column="29">(<argument><expr><name pos:line="19" pos:column="30">s<pos:position pos:line="19" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="33">"diff-algorithm="<pos:position pos:line="19" pos:column="50"/></literal></expr></argument>, <argument><expr><operator pos:line="19" pos:column="52">&amp;<pos:position pos:line="19" pos:column="57"/></operator><name pos:line="19" pos:column="53">arg<pos:position pos:line="19" pos:column="56"/></name></expr></argument>)<pos:position pos:line="19" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="58"/></condition><then pos:line="19" pos:column="58"> <block pos:line="19" pos:column="59">{
		<decl_stmt><decl><type><name pos:line="20" pos:column="17">long<pos:position pos:line="20" pos:column="21"/></name></type> <name pos:line="20" pos:column="22">value<pos:position pos:line="20" pos:column="27"/></name> <init pos:line="20" pos:column="28">= <expr><call><name pos:line="20" pos:column="30">parse_algorithm_value<pos:position pos:line="20" pos:column="51"/></name><argument_list pos:line="20" pos:column="51">(<argument><expr><name pos:line="20" pos:column="52">arg<pos:position pos:line="20" pos:column="55"/></name></expr></argument>)<pos:position pos:line="20" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="20" pos:column="57"/></decl_stmt>
		<if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><name pos:line="21" pos:column="21">value<pos:position pos:line="21" pos:column="26"/></name> <operator pos:line="21" pos:column="27">&lt;<pos:position pos:line="21" pos:column="31"/></operator> <literal type="number" pos:line="21" pos:column="29">0<pos:position pos:line="21" pos:column="30"/></literal></expr>)<pos:position pos:line="21" pos:column="31"/></condition><then pos:line="21" pos:column="31">
			<block type="pseudo"><return pos:line="22" pos:column="25">return <expr><operator pos:line="22" pos:column="32">-<pos:position pos:line="22" pos:column="33"/></operator><literal type="number" pos:line="22" pos:column="33">1<pos:position pos:line="22" pos:column="34"/></literal></expr>;<pos:position pos:line="22" pos:column="35"/></return></block></then></if>
		<comment type="block" pos:line="23" pos:column="17">/* clear out previous settings */</comment>
		<expr_stmt><expr><call><name pos:line="24" pos:column="17">DIFF_XDL_CLR<pos:position pos:line="24" pos:column="29"/></name><argument_list pos:line="24" pos:column="29">(<argument><expr><name pos:line="24" pos:column="30">o<pos:position pos:line="24" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="33">NEED_MINIMAL<pos:position pos:line="24" pos:column="45"/></name></expr></argument>)<pos:position pos:line="24" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="25" pos:column="17">o<pos:position pos:line="25" pos:column="18"/></name><operator pos:line="25" pos:column="18">-&gt;<pos:position pos:line="25" pos:column="23"/></operator><name pos:line="25" pos:column="20">xdl_opts<pos:position pos:line="25" pos:column="28"/></name></name> <operator pos:line="25" pos:column="29">&amp;=<pos:position pos:line="25" pos:column="35"/></operator> <operator pos:line="25" pos:column="32">~<pos:position pos:line="25" pos:column="33"/></operator><name pos:line="25" pos:column="33">XDF_DIFF_ALGORITHM_MASK<pos:position pos:line="25" pos:column="56"/></name></expr>;<pos:position pos:line="25" pos:column="57"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="26" pos:column="17">o<pos:position pos:line="26" pos:column="18"/></name><operator pos:line="26" pos:column="18">-&gt;<pos:position pos:line="26" pos:column="23"/></operator><name pos:line="26" pos:column="20">xdl_opts<pos:position pos:line="26" pos:column="28"/></name></name> <operator pos:line="26" pos:column="29">|=<pos:position pos:line="26" pos:column="31"/></operator> <name pos:line="26" pos:column="32">value<pos:position pos:line="26" pos:column="37"/></name></expr>;<pos:position pos:line="26" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="27" pos:column="10"/></block></then></if></elseif>
	<elseif pos:line="28" pos:column="9">else <if pos:line="28" pos:column="14">if <condition pos:line="28" pos:column="17">(<expr><operator pos:line="28" pos:column="18">!<pos:position pos:line="28" pos:column="19"/></operator><call><name pos:line="28" pos:column="19">strcmp<pos:position pos:line="28" pos:column="25"/></name><argument_list pos:line="28" pos:column="25">(<argument><expr><name pos:line="28" pos:column="26">s<pos:position pos:line="28" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="29">"ignore-space-change"<pos:position pos:line="28" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="52"/></condition><then pos:line="28" pos:column="52">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="17">DIFF_XDL_SET<pos:position pos:line="29" pos:column="29"/></name><argument_list pos:line="29" pos:column="29">(<argument><expr><name pos:line="29" pos:column="30">o<pos:position pos:line="29" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="33">IGNORE_WHITESPACE_CHANGE<pos:position pos:line="29" pos:column="57"/></name></expr></argument>)<pos:position pos:line="29" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="59"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="30" pos:column="9">else <if pos:line="30" pos:column="14">if <condition pos:line="30" pos:column="17">(<expr><operator pos:line="30" pos:column="18">!<pos:position pos:line="30" pos:column="19"/></operator><call><name pos:line="30" pos:column="19">strcmp<pos:position pos:line="30" pos:column="25"/></name><argument_list pos:line="30" pos:column="25">(<argument><expr><name pos:line="30" pos:column="26">s<pos:position pos:line="30" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="29">"ignore-all-space"<pos:position pos:line="30" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="49"/></condition><then pos:line="30" pos:column="49">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="17">DIFF_XDL_SET<pos:position pos:line="31" pos:column="29"/></name><argument_list pos:line="31" pos:column="29">(<argument><expr><name pos:line="31" pos:column="30">o<pos:position pos:line="31" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="33">IGNORE_WHITESPACE<pos:position pos:line="31" pos:column="50"/></name></expr></argument>)<pos:position pos:line="31" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="52"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="32" pos:column="9">else <if pos:line="32" pos:column="14">if <condition pos:line="32" pos:column="17">(<expr><operator pos:line="32" pos:column="18">!<pos:position pos:line="32" pos:column="19"/></operator><call><name pos:line="32" pos:column="19">strcmp<pos:position pos:line="32" pos:column="25"/></name><argument_list pos:line="32" pos:column="25">(<argument><expr><name pos:line="32" pos:column="26">s<pos:position pos:line="32" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="29">"ignore-space-at-eol"<pos:position pos:line="32" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="52"/></condition><then pos:line="32" pos:column="52">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="33" pos:column="17">DIFF_XDL_SET<pos:position pos:line="33" pos:column="29"/></name><argument_list pos:line="33" pos:column="29">(<argument><expr><name pos:line="33" pos:column="30">o<pos:position pos:line="33" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="33">IGNORE_WHITESPACE_AT_EOL<pos:position pos:line="33" pos:column="57"/></name></expr></argument>)<pos:position pos:line="33" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="59"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="34" pos:column="9">else <if pos:line="34" pos:column="14">if <condition pos:line="34" pos:column="17">(<expr><operator pos:line="34" pos:column="18">!<pos:position pos:line="34" pos:column="19"/></operator><call><name pos:line="34" pos:column="19">strcmp<pos:position pos:line="34" pos:column="25"/></name><argument_list pos:line="34" pos:column="25">(<argument><expr><name pos:line="34" pos:column="26">s<pos:position pos:line="34" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="29">"renormalize"<pos:position pos:line="34" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="44"/></condition><then pos:line="34" pos:column="44">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="35" pos:column="17">o<pos:position pos:line="35" pos:column="18"/></name><operator pos:line="35" pos:column="18">-&gt;<pos:position pos:line="35" pos:column="23"/></operator><name pos:line="35" pos:column="20">renormalize<pos:position pos:line="35" pos:column="31"/></name></name> <operator pos:line="35" pos:column="32">=<pos:position pos:line="35" pos:column="33"/></operator> <literal type="number" pos:line="35" pos:column="34">1<pos:position pos:line="35" pos:column="35"/></literal></expr>;<pos:position pos:line="35" pos:column="36"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="36" pos:column="9">else <if pos:line="36" pos:column="14">if <condition pos:line="36" pos:column="17">(<expr><operator pos:line="36" pos:column="18">!<pos:position pos:line="36" pos:column="19"/></operator><call><name pos:line="36" pos:column="19">strcmp<pos:position pos:line="36" pos:column="25"/></name><argument_list pos:line="36" pos:column="25">(<argument><expr><name pos:line="36" pos:column="26">s<pos:position pos:line="36" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="29">"no-renormalize"<pos:position pos:line="36" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="47"/></condition><then pos:line="36" pos:column="47">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="37" pos:column="17">o<pos:position pos:line="37" pos:column="18"/></name><operator pos:line="37" pos:column="18">-&gt;<pos:position pos:line="37" pos:column="23"/></operator><name pos:line="37" pos:column="20">renormalize<pos:position pos:line="37" pos:column="31"/></name></name> <operator pos:line="37" pos:column="32">=<pos:position pos:line="37" pos:column="33"/></operator> <literal type="number" pos:line="37" pos:column="34">0<pos:position pos:line="37" pos:column="35"/></literal></expr>;<pos:position pos:line="37" pos:column="36"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="38" pos:column="9">else <if pos:line="38" pos:column="14">if <condition pos:line="38" pos:column="17">(<expr><operator pos:line="38" pos:column="18">!<pos:position pos:line="38" pos:column="19"/></operator><call><name pos:line="38" pos:column="19">strcmp<pos:position pos:line="38" pos:column="25"/></name><argument_list pos:line="38" pos:column="25">(<argument><expr><name pos:line="38" pos:column="26">s<pos:position pos:line="38" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="29">"no-renames"<pos:position pos:line="38" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="43"/></condition><then pos:line="38" pos:column="43">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="39" pos:column="17">o<pos:position pos:line="39" pos:column="18"/></name><operator pos:line="39" pos:column="18">-&gt;<pos:position pos:line="39" pos:column="23"/></operator><name pos:line="39" pos:column="20">detect_rename<pos:position pos:line="39" pos:column="33"/></name></name> <operator pos:line="39" pos:column="34">=<pos:position pos:line="39" pos:column="35"/></operator> <literal type="number" pos:line="39" pos:column="36">0<pos:position pos:line="39" pos:column="37"/></literal></expr>;<pos:position pos:line="39" pos:column="38"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="40" pos:column="9">else <if pos:line="40" pos:column="14">if <condition pos:line="40" pos:column="17">(<expr><operator pos:line="40" pos:column="18">!<pos:position pos:line="40" pos:column="19"/></operator><call><name pos:line="40" pos:column="19">strcmp<pos:position pos:line="40" pos:column="25"/></name><argument_list pos:line="40" pos:column="25">(<argument><expr><name pos:line="40" pos:column="26">s<pos:position pos:line="40" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="29">"find-renames"<pos:position pos:line="40" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="45"/></condition><then pos:line="40" pos:column="45"> <block pos:line="40" pos:column="46">{
		<expr_stmt><expr><name><name pos:line="41" pos:column="17">o<pos:position pos:line="41" pos:column="18"/></name><operator pos:line="41" pos:column="18">-&gt;<pos:position pos:line="41" pos:column="23"/></operator><name pos:line="41" pos:column="20">detect_rename<pos:position pos:line="41" pos:column="33"/></name></name> <operator pos:line="41" pos:column="34">=<pos:position pos:line="41" pos:column="35"/></operator> <literal type="number" pos:line="41" pos:column="36">1<pos:position pos:line="41" pos:column="37"/></literal></expr>;<pos:position pos:line="41" pos:column="38"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="42" pos:column="17">o<pos:position pos:line="42" pos:column="18"/></name><operator pos:line="42" pos:column="18">-&gt;<pos:position pos:line="42" pos:column="23"/></operator><name pos:line="42" pos:column="20">rename_score<pos:position pos:line="42" pos:column="32"/></name></name> <operator pos:line="42" pos:column="33">=<pos:position pos:line="42" pos:column="34"/></operator> <literal type="number" pos:line="42" pos:column="35">0<pos:position pos:line="42" pos:column="36"/></literal></expr>;<pos:position pos:line="42" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="43" pos:column="10"/></block></then></if></elseif>
	<elseif pos:line="44" pos:column="9">else <if pos:line="44" pos:column="14">if <condition pos:line="44" pos:column="17">(<expr><call><name pos:line="44" pos:column="18">skip_prefix<pos:position pos:line="44" pos:column="29"/></name><argument_list pos:line="44" pos:column="29">(<argument><expr><name pos:line="44" pos:column="30">s<pos:position pos:line="44" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="33">"find-renames="<pos:position pos:line="44" pos:column="48"/></literal></expr></argument>, <argument><expr><operator pos:line="44" pos:column="50">&amp;<pos:position pos:line="44" pos:column="55"/></operator><name pos:line="44" pos:column="51">arg<pos:position pos:line="44" pos:column="54"/></name></expr></argument>)<pos:position pos:line="44" pos:column="55"/></argument_list></call> <operator pos:line="44" pos:column="56">||<pos:position pos:line="44" pos:column="58"/></operator>
		 <call><name pos:line="45" pos:column="18">skip_prefix<pos:position pos:line="45" pos:column="29"/></name><argument_list pos:line="45" pos:column="29">(<argument><expr><name pos:line="45" pos:column="30">s<pos:position pos:line="45" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="33">"rename-threshold="<pos:position pos:line="45" pos:column="52"/></literal></expr></argument>, <argument><expr><operator pos:line="45" pos:column="54">&amp;<pos:position pos:line="45" pos:column="59"/></operator><name pos:line="45" pos:column="55">arg<pos:position pos:line="45" pos:column="58"/></name></expr></argument>)<pos:position pos:line="45" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="60"/></condition><then pos:line="45" pos:column="60"> <block pos:line="45" pos:column="61">{
		<if pos:line="46" pos:column="17">if <condition pos:line="46" pos:column="20">(<expr><operator pos:line="46" pos:column="21">(<pos:position pos:line="46" pos:column="22"/></operator><name><name pos:line="46" pos:column="22">o<pos:position pos:line="46" pos:column="23"/></name><operator pos:line="46" pos:column="23">-&gt;<pos:position pos:line="46" pos:column="28"/></operator><name pos:line="46" pos:column="25">rename_score<pos:position pos:line="46" pos:column="37"/></name></name> <operator pos:line="46" pos:column="38">=<pos:position pos:line="46" pos:column="39"/></operator> <call><name pos:line="46" pos:column="40">parse_rename_score<pos:position pos:line="46" pos:column="58"/></name><argument_list pos:line="46" pos:column="58">(<argument><expr><operator pos:line="46" pos:column="59">&amp;<pos:position pos:line="46" pos:column="64"/></operator><name pos:line="46" pos:column="60">arg<pos:position pos:line="46" pos:column="63"/></name></expr></argument>)<pos:position pos:line="46" pos:column="64"/></argument_list></call><operator pos:line="46" pos:column="64">)<pos:position pos:line="46" pos:column="65"/></operator> <operator pos:line="46" pos:column="66">==<pos:position pos:line="46" pos:column="68"/></operator> <operator pos:line="46" pos:column="69">-<pos:position pos:line="46" pos:column="70"/></operator><literal type="number" pos:line="46" pos:column="70">1<pos:position pos:line="46" pos:column="71"/></literal> <operator pos:line="46" pos:column="72">||<pos:position pos:line="46" pos:column="74"/></operator> <operator pos:line="46" pos:column="75">*<pos:position pos:line="46" pos:column="76"/></operator><name pos:line="46" pos:column="76">arg<pos:position pos:line="46" pos:column="79"/></name> <operator pos:line="46" pos:column="80">!=<pos:position pos:line="46" pos:column="82"/></operator> <literal type="number" pos:line="46" pos:column="83">0<pos:position pos:line="46" pos:column="84"/></literal></expr>)<pos:position pos:line="46" pos:column="85"/></condition><then pos:line="46" pos:column="85">
			<block type="pseudo"><return pos:line="47" pos:column="25">return <expr><operator pos:line="47" pos:column="32">-<pos:position pos:line="47" pos:column="33"/></operator><literal type="number" pos:line="47" pos:column="33">1<pos:position pos:line="47" pos:column="34"/></literal></expr>;<pos:position pos:line="47" pos:column="35"/></return></block></then></if>
		<expr_stmt><expr><name><name pos:line="48" pos:column="17">o<pos:position pos:line="48" pos:column="18"/></name><operator pos:line="48" pos:column="18">-&gt;<pos:position pos:line="48" pos:column="23"/></operator><name pos:line="48" pos:column="20">detect_rename<pos:position pos:line="48" pos:column="33"/></name></name> <operator pos:line="48" pos:column="34">=<pos:position pos:line="48" pos:column="35"/></operator> <literal type="number" pos:line="48" pos:column="36">1<pos:position pos:line="48" pos:column="37"/></literal></expr>;<pos:position pos:line="48" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="49" pos:column="10"/></block></then></if></elseif>
	<else pos:line="50" pos:column="9">else
		<block type="pseudo"><return pos:line="51" pos:column="17">return <expr><operator pos:line="51" pos:column="24">-<pos:position pos:line="51" pos:column="25"/></operator><literal type="number" pos:line="51" pos:column="25">1<pos:position pos:line="51" pos:column="26"/></literal></expr>;<pos:position pos:line="51" pos:column="27"/></return></block></else></if>
	<return pos:line="52" pos:column="9">return <expr><literal type="number" pos:line="52" pos:column="16">0<pos:position pos:line="52" pos:column="17"/></literal></expr>;<pos:position pos:line="52" pos:column="18"/></return>
}<pos:position pos:line="53" pos:column="2"/></block></function></unit>

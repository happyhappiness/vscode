<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5020_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">pull_into_void<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name><name pos:line="1" pos:column="33">struct<pos:position pos:line="1" pos:column="39"/></name> <name pos:line="1" pos:column="40">object_id<pos:position pos:line="1" pos:column="49"/></name></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">merge_head<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>,
		<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name><name pos:line="2" pos:column="23">struct<pos:position pos:line="2" pos:column="29"/></name> <name pos:line="2" pos:column="30">object_id<pos:position pos:line="2" pos:column="39"/></name></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="41">curr_head<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="51"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<comment type="block" pos:line="4" pos:column="9">/*
	 * Two-way merge: we treat the index as based on an empty tree,
	 * and try to fast-forward to HEAD. This ensures we will not lose
	 * index/worktree changes that the user already made on the unborn
	 * branch.
	 */</comment>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><call><name pos:line="10" pos:column="13">checkout_fast_forward<pos:position pos:line="10" pos:column="34"/></name><argument_list pos:line="10" pos:column="34">(<argument><expr><operator pos:line="10" pos:column="35">&amp;<pos:position pos:line="10" pos:column="40"/></operator><name pos:line="10" pos:column="36">empty_tree_oid<pos:position pos:line="10" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="52">merge_head<pos:position pos:line="10" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="64">0<pos:position pos:line="10" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="67"/></condition><then pos:line="10" pos:column="67">
		<block type="pseudo"><return pos:line="11" pos:column="17">return <expr><literal type="number" pos:line="11" pos:column="24">1<pos:position pos:line="11" pos:column="25"/></literal></expr>;<pos:position pos:line="11" pos:column="26"/></return></block></then></if>

	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><call><name pos:line="13" pos:column="13">update_ref<pos:position pos:line="13" pos:column="23"/></name><argument_list pos:line="13" pos:column="23">(<argument><expr><literal type="string" pos:line="13" pos:column="24">"initial pull"<pos:position pos:line="13" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="40">"HEAD"<pos:position pos:line="13" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="48">merge_head<pos:position pos:line="13" pos:column="58"/></name><operator pos:line="13" pos:column="58">-&gt;<pos:position pos:line="13" pos:column="63"/></operator><name pos:line="13" pos:column="60">hash<pos:position pos:line="13" pos:column="64"/></name></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="66">curr_head<pos:position pos:line="13" pos:column="75"/></name><operator pos:line="13" pos:column="75">-&gt;<pos:position pos:line="13" pos:column="80"/></operator><name pos:line="13" pos:column="77">hash<pos:position pos:line="13" pos:column="81"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="83">0<pos:position pos:line="13" pos:column="84"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="86">UPDATE_REFS_DIE_ON_ERR<pos:position pos:line="13" pos:column="108"/></name></expr></argument>)<pos:position pos:line="13" pos:column="109"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="110"/></condition><then pos:line="13" pos:column="110">
		<block type="pseudo"><return pos:line="14" pos:column="17">return <expr><literal type="number" pos:line="14" pos:column="24">1<pos:position pos:line="14" pos:column="25"/></literal></expr>;<pos:position pos:line="14" pos:column="26"/></return></block></then></if>

	<return pos:line="16" pos:column="9">return <expr><literal type="number" pos:line="16" pos:column="16">0<pos:position pos:line="16" pos:column="17"/></literal></expr>;<pos:position pos:line="16" pos:column="18"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_202_git-2.13.6.cpp" pos:tabs="8"><decl_stmt><decl><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">lline<pos:position pos:line="1" pos:column="20"/></name></name> <modifier pos:line="1" pos:column="21">*<pos:position pos:line="1" pos:column="22"/></modifier></type><name pos:line="1" pos:column="22">coalesce_lines<pos:position pos:line="1" pos:column="36"/></name><argument_list pos:line="1" pos:column="36">(<argument><expr pos:line="1" pos:column="37">struct <name pos:line="1" pos:column="44">lline<pos:position pos:line="1" pos:column="49"/></name> <operator pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></operator><name pos:line="1" pos:column="51">base<pos:position pos:line="1" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="1" pos:column="57">int<pos:position pos:line="1" pos:column="60"/></name> <operator pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></operator><name pos:line="1" pos:column="62">lenbase<pos:position pos:line="1" pos:column="69"/></name></expr></argument>,
				    <argument><expr pos:line="2" pos:column="37">struct <name pos:line="2" pos:column="44">lline<pos:position pos:line="2" pos:column="49"/></name> <operator pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></operator><operator pos:line="2" pos:column="51">new<pos:position pos:line="2" pos:column="54"/></operator></expr></argument>, <argument><expr><name pos:line="2" pos:column="56">int<pos:position pos:line="2" pos:column="59"/></name> <name pos:line="2" pos:column="60">lennew<pos:position pos:line="2" pos:column="66"/></name></expr></argument>,
				    <argument><expr><name pos:line="3" pos:column="37">unsigned<pos:position pos:line="3" pos:column="45"/></name> <name pos:line="3" pos:column="46">long<pos:position pos:line="3" pos:column="50"/></name> <name pos:line="3" pos:column="51">parent<pos:position pos:line="3" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="59">long<pos:position pos:line="3" pos:column="63"/></name> <name pos:line="3" pos:column="64">flags<pos:position pos:line="3" pos:column="69"/></name></expr></argument>)<pos:position pos:line="3" pos:column="70"/></argument_list>
<argument_list pos:line="4" pos:column="1">{
	<argument><expr><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name> <operator pos:line="5" pos:column="13">*<pos:position pos:line="5" pos:column="14"/></operator><operator pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></operator><name pos:line="5" pos:column="15">lcs<pos:position pos:line="5" pos:column="18"/></name></expr></argument>;
	<argument><expr pos:line="6" pos:column="9">enum <name pos:line="6" pos:column="14">coalesce_direction<pos:position pos:line="6" pos:column="32"/></name> <operator pos:line="6" pos:column="33">*<pos:position pos:line="6" pos:column="34"/></operator><operator pos:line="6" pos:column="34">*<pos:position pos:line="6" pos:column="35"/></operator><name pos:line="6" pos:column="35">directions<pos:position pos:line="6" pos:column="45"/></name></expr></argument>;
	<argument><expr pos:line="7" pos:column="9">struct <name pos:line="7" pos:column="16">lline<pos:position pos:line="7" pos:column="21"/></name> <operator pos:line="7" pos:column="22">*<pos:position pos:line="7" pos:column="23"/></operator><name pos:line="7" pos:column="23">baseend<pos:position pos:line="7" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="32">*<pos:position pos:line="7" pos:column="33"/></operator><name pos:line="7" pos:column="33">newend<pos:position pos:line="7" pos:column="39"/></name> <operator pos:line="7" pos:column="40">=<pos:position pos:line="7" pos:column="41"/></operator> <name pos:line="7" pos:column="42">NULL<pos:position pos:line="7" pos:column="46"/></name></expr></argument>;
	<argument><expr><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name> <name pos:line="8" pos:column="13">i<pos:position pos:line="8" pos:column="14"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="16">j<pos:position pos:line="8" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="19">origbaselen<pos:position pos:line="8" pos:column="30"/></name> <operator pos:line="8" pos:column="31">=<pos:position pos:line="8" pos:column="32"/></operator> <operator pos:line="8" pos:column="33">*<pos:position pos:line="8" pos:column="34"/></operator><name pos:line="8" pos:column="34">lenbase<pos:position pos:line="8" pos:column="41"/></name></expr></argument>;

	if <argument><expr><operator pos:line="10" pos:column="12">(<pos:position pos:line="10" pos:column="13"/></operator><operator pos:line="10" pos:column="13">new<pos:position pos:line="10" pos:column="16"/></operator> <operator pos:line="10" pos:column="17">==<pos:position pos:line="10" pos:column="19"/></operator> <name pos:line="10" pos:column="20">NULL<pos:position pos:line="10" pos:column="24"/></name><operator pos:line="10" pos:column="24">)<pos:position pos:line="10" pos:column="25"/></operator></expr></argument>
		<return pos:line="11" pos:column="17">return <expr><name pos:line="11" pos:column="24">base<pos:position pos:line="11" pos:column="28"/></name></expr>;<pos:position pos:line="11" pos:column="29"/></return></argument_list></decl></decl_stmt>

	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">base<pos:position pos:line="13" pos:column="17"/></name> <operator pos:line="13" pos:column="18">==<pos:position pos:line="13" pos:column="20"/></operator> <name pos:line="13" pos:column="21">NULL<pos:position pos:line="13" pos:column="25"/></name></expr>)<pos:position pos:line="13" pos:column="26"/></condition><then pos:line="13" pos:column="26"> <block pos:line="13" pos:column="27">{
		<expr_stmt><expr><operator pos:line="14" pos:column="17">*<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="18">lenbase<pos:position pos:line="14" pos:column="25"/></name> <operator pos:line="14" pos:column="26">=<pos:position pos:line="14" pos:column="27"/></operator> <name pos:line="14" pos:column="28">lennew<pos:position pos:line="14" pos:column="34"/></name></expr>;<pos:position pos:line="14" pos:column="35"/></expr_stmt>
		<return pos:line="15" pos:column="17">return <expr><operator pos:line="15" pos:column="24">new<pos:position pos:line="15" pos:column="27"/></operator></expr>;<pos:position pos:line="15" pos:column="28"/></return>
	}<pos:position pos:line="16" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="18" pos:column="9">/*
	 * Coalesce new lines into base by finding the LCS
	 * - Create the table to run dynamic programming
	 * - Compute the LCS
	 * - Then reverse read the direction structure:
	 *   - If we have MATCH, assign parent to base flag, and consume
	 *   both baseend and newend
	 *   - Else if we have BASE, consume baseend
	 *   - Else if we have NEW, insert newend lline into base and
	 *   consume newend
	 */</comment>
	<expr_stmt><expr><name pos:line="29" pos:column="9">lcs<pos:position pos:line="29" pos:column="12"/></name> <operator pos:line="29" pos:column="13">=<pos:position pos:line="29" pos:column="14"/></operator> <call><name pos:line="29" pos:column="15">xcalloc<pos:position pos:line="29" pos:column="22"/></name><argument_list pos:line="29" pos:column="22">(<argument><expr><call><name pos:line="29" pos:column="23">st_add<pos:position pos:line="29" pos:column="29"/></name><argument_list pos:line="29" pos:column="29">(<argument><expr><name pos:line="29" pos:column="30">origbaselen<pos:position pos:line="29" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="43">1<pos:position pos:line="29" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="45"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="29" pos:column="47">sizeof<argument_list pos:line="29" pos:column="53">(<argument><expr><name pos:line="29" pos:column="54">int<pos:position pos:line="29" pos:column="57"/></name><operator pos:line="29" pos:column="57">*<pos:position pos:line="29" pos:column="58"/></operator></expr></argument>)<pos:position pos:line="29" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="29" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="61"/></expr_stmt>
	<expr_stmt><expr><name pos:line="30" pos:column="9">directions<pos:position pos:line="30" pos:column="19"/></name> <operator pos:line="30" pos:column="20">=<pos:position pos:line="30" pos:column="21"/></operator> <call><name pos:line="30" pos:column="22">xcalloc<pos:position pos:line="30" pos:column="29"/></name><argument_list pos:line="30" pos:column="29">(<argument><expr><call><name pos:line="30" pos:column="30">st_add<pos:position pos:line="30" pos:column="36"/></name><argument_list pos:line="30" pos:column="36">(<argument><expr><name pos:line="30" pos:column="37">origbaselen<pos:position pos:line="30" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="50">1<pos:position pos:line="30" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="30" pos:column="54">sizeof<argument_list pos:line="30" pos:column="60">(<argument><expr pos:line="30" pos:column="61">enum <name pos:line="30" pos:column="66">coalesce_direction<pos:position pos:line="30" pos:column="84"/></name><operator pos:line="30" pos:column="84">*<pos:position pos:line="30" pos:column="85"/></operator></expr></argument>)<pos:position pos:line="30" pos:column="86"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="30" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="88"/></expr_stmt>
	<for pos:line="31" pos:column="9">for <control pos:line="31" pos:column="13">(<init><expr><name pos:line="31" pos:column="14">i<pos:position pos:line="31" pos:column="15"/></name> <operator pos:line="31" pos:column="16">=<pos:position pos:line="31" pos:column="17"/></operator> <literal type="number" pos:line="31" pos:column="18">0<pos:position pos:line="31" pos:column="19"/></literal></expr>;<pos:position pos:line="31" pos:column="20"/></init> <condition><expr><name pos:line="31" pos:column="21">i<pos:position pos:line="31" pos:column="22"/></name> <operator pos:line="31" pos:column="23">&lt;<pos:position pos:line="31" pos:column="27"/></operator> <name pos:line="31" pos:column="25">origbaselen<pos:position pos:line="31" pos:column="36"/></name> <operator pos:line="31" pos:column="37">+<pos:position pos:line="31" pos:column="38"/></operator> <literal type="number" pos:line="31" pos:column="39">1<pos:position pos:line="31" pos:column="40"/></literal></expr>;<pos:position pos:line="31" pos:column="41"/></condition> <incr><expr><name pos:line="31" pos:column="42">i<pos:position pos:line="31" pos:column="43"/></name><operator pos:line="31" pos:column="43">++<pos:position pos:line="31" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="31" pos:column="46"/></control> <block pos:line="31" pos:column="47">{
		<expr_stmt><expr><name><name pos:line="32" pos:column="17">lcs<pos:position pos:line="32" pos:column="20"/></name><index pos:line="32" pos:column="20">[<expr><name pos:line="32" pos:column="21">i<pos:position pos:line="32" pos:column="22"/></name></expr>]<pos:position pos:line="32" pos:column="23"/></index></name> <operator pos:line="32" pos:column="24">=<pos:position pos:line="32" pos:column="25"/></operator> <call><name pos:line="32" pos:column="26">xcalloc<pos:position pos:line="32" pos:column="33"/></name><argument_list pos:line="32" pos:column="33">(<argument><expr><call><name pos:line="32" pos:column="34">st_add<pos:position pos:line="32" pos:column="40"/></name><argument_list pos:line="32" pos:column="40">(<argument><expr><name pos:line="32" pos:column="41">lennew<pos:position pos:line="32" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="49">1<pos:position pos:line="32" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="51"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="32" pos:column="53">sizeof<argument_list pos:line="32" pos:column="59">(<argument><expr><name pos:line="32" pos:column="60">int<pos:position pos:line="32" pos:column="63"/></name></expr></argument>)<pos:position pos:line="32" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="32" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="66"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="33" pos:column="17">directions<pos:position pos:line="33" pos:column="27"/></name><index pos:line="33" pos:column="27">[<expr><name pos:line="33" pos:column="28">i<pos:position pos:line="33" pos:column="29"/></name></expr>]<pos:position pos:line="33" pos:column="30"/></index></name> <operator pos:line="33" pos:column="31">=<pos:position pos:line="33" pos:column="32"/></operator> <call><name pos:line="33" pos:column="33">xcalloc<pos:position pos:line="33" pos:column="40"/></name><argument_list pos:line="33" pos:column="40">(<argument><expr><call><name pos:line="33" pos:column="41">st_add<pos:position pos:line="33" pos:column="47"/></name><argument_list pos:line="33" pos:column="47">(<argument><expr><name pos:line="33" pos:column="48">lennew<pos:position pos:line="33" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="56">1<pos:position pos:line="33" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="33" pos:column="60">sizeof<argument_list pos:line="33" pos:column="66">(<argument><expr pos:line="33" pos:column="67">enum <name pos:line="33" pos:column="72">coalesce_direction<pos:position pos:line="33" pos:column="90"/></name></expr></argument>)<pos:position pos:line="33" pos:column="91"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="33" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="93"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="34" pos:column="17">directions<pos:position pos:line="34" pos:column="27"/></name><index pos:line="34" pos:column="27">[<expr><name pos:line="34" pos:column="28">i<pos:position pos:line="34" pos:column="29"/></name></expr>]<pos:position pos:line="34" pos:column="30"/></index><index pos:line="34" pos:column="30">[<expr><literal type="number" pos:line="34" pos:column="31">0<pos:position pos:line="34" pos:column="32"/></literal></expr>]<pos:position pos:line="34" pos:column="33"/></index></name> <operator pos:line="34" pos:column="34">=<pos:position pos:line="34" pos:column="35"/></operator> <name pos:line="34" pos:column="36">BASE<pos:position pos:line="34" pos:column="40"/></name></expr>;<pos:position pos:line="34" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="35" pos:column="10"/></block></for>
	<for pos:line="36" pos:column="9">for <control pos:line="36" pos:column="13">(<init><expr><name pos:line="36" pos:column="14">j<pos:position pos:line="36" pos:column="15"/></name> <operator pos:line="36" pos:column="16">=<pos:position pos:line="36" pos:column="17"/></operator> <literal type="number" pos:line="36" pos:column="18">1<pos:position pos:line="36" pos:column="19"/></literal></expr>;<pos:position pos:line="36" pos:column="20"/></init> <condition><expr><name pos:line="36" pos:column="21">j<pos:position pos:line="36" pos:column="22"/></name> <operator pos:line="36" pos:column="23">&lt;<pos:position pos:line="36" pos:column="27"/></operator> <name pos:line="36" pos:column="25">lennew<pos:position pos:line="36" pos:column="31"/></name> <operator pos:line="36" pos:column="32">+<pos:position pos:line="36" pos:column="33"/></operator> <literal type="number" pos:line="36" pos:column="34">1<pos:position pos:line="36" pos:column="35"/></literal></expr>;<pos:position pos:line="36" pos:column="36"/></condition> <incr><expr><name pos:line="36" pos:column="37">j<pos:position pos:line="36" pos:column="38"/></name><operator pos:line="36" pos:column="38">++<pos:position pos:line="36" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="36" pos:column="41"/></control>
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="37" pos:column="17">directions<pos:position pos:line="37" pos:column="27"/></name><index pos:line="37" pos:column="27">[<expr><literal type="number" pos:line="37" pos:column="28">0<pos:position pos:line="37" pos:column="29"/></literal></expr>]<pos:position pos:line="37" pos:column="30"/></index><index pos:line="37" pos:column="30">[<expr><name pos:line="37" pos:column="31">j<pos:position pos:line="37" pos:column="32"/></name></expr>]<pos:position pos:line="37" pos:column="33"/></index></name> <operator pos:line="37" pos:column="34">=<pos:position pos:line="37" pos:column="35"/></operator> <name pos:line="37" pos:column="36">NEW<pos:position pos:line="37" pos:column="39"/></name></expr>;<pos:position pos:line="37" pos:column="40"/></expr_stmt></block></for>

	<for pos:line="39" pos:column="9">for <control pos:line="39" pos:column="13">(<init><expr><name pos:line="39" pos:column="14">i<pos:position pos:line="39" pos:column="15"/></name> <operator pos:line="39" pos:column="16">=<pos:position pos:line="39" pos:column="17"/></operator> <literal type="number" pos:line="39" pos:column="18">1<pos:position pos:line="39" pos:column="19"/></literal></expr><operator pos:line="39" pos:column="19">,<pos:position pos:line="39" pos:column="20"/></operator> <expr><name pos:line="39" pos:column="21">baseend<pos:position pos:line="39" pos:column="28"/></name> <operator pos:line="39" pos:column="29">=<pos:position pos:line="39" pos:column="30"/></operator> <name pos:line="39" pos:column="31">base<pos:position pos:line="39" pos:column="35"/></name></expr>;<pos:position pos:line="39" pos:column="36"/></init> <condition><expr><name pos:line="39" pos:column="37">i<pos:position pos:line="39" pos:column="38"/></name> <operator pos:line="39" pos:column="39">&lt;<pos:position pos:line="39" pos:column="43"/></operator> <name pos:line="39" pos:column="41">origbaselen<pos:position pos:line="39" pos:column="52"/></name> <operator pos:line="39" pos:column="53">+<pos:position pos:line="39" pos:column="54"/></operator> <literal type="number" pos:line="39" pos:column="55">1<pos:position pos:line="39" pos:column="56"/></literal></expr>;<pos:position pos:line="39" pos:column="57"/></condition> <incr><expr><name pos:line="39" pos:column="58">i<pos:position pos:line="39" pos:column="59"/></name><operator pos:line="39" pos:column="59">++<pos:position pos:line="39" pos:column="61"/></operator></expr></incr>)<pos:position pos:line="39" pos:column="62"/></control> <block pos:line="39" pos:column="63">{
		<for pos:line="40" pos:column="17">for <control pos:line="40" pos:column="21">(<init><expr><name pos:line="40" pos:column="22">j<pos:position pos:line="40" pos:column="23"/></name> <operator pos:line="40" pos:column="24">=<pos:position pos:line="40" pos:column="25"/></operator> <literal type="number" pos:line="40" pos:column="26">1<pos:position pos:line="40" pos:column="27"/></literal></expr><operator pos:line="40" pos:column="27">,<pos:position pos:line="40" pos:column="28"/></operator> <expr><name pos:line="40" pos:column="29">newend<pos:position pos:line="40" pos:column="35"/></name> <operator pos:line="40" pos:column="36">=<pos:position pos:line="40" pos:column="37"/></operator> <operator pos:line="40" pos:column="38">new<pos:position pos:line="40" pos:column="41"/></operator></expr>;<pos:position pos:line="40" pos:column="42"/></init> <condition><expr><name pos:line="40" pos:column="43">j<pos:position pos:line="40" pos:column="44"/></name> <operator pos:line="40" pos:column="45">&lt;<pos:position pos:line="40" pos:column="49"/></operator> <name pos:line="40" pos:column="47">lennew<pos:position pos:line="40" pos:column="53"/></name> <operator pos:line="40" pos:column="54">+<pos:position pos:line="40" pos:column="55"/></operator> <literal type="number" pos:line="40" pos:column="56">1<pos:position pos:line="40" pos:column="57"/></literal></expr>;<pos:position pos:line="40" pos:column="58"/></condition> <incr><expr><name pos:line="40" pos:column="59">j<pos:position pos:line="40" pos:column="60"/></name><operator pos:line="40" pos:column="60">++<pos:position pos:line="40" pos:column="62"/></operator></expr></incr>)<pos:position pos:line="40" pos:column="63"/></control> <block pos:line="40" pos:column="64">{
			<if pos:line="41" pos:column="25">if <condition pos:line="41" pos:column="28">(<expr><call><name pos:line="41" pos:column="29">match_string_spaces<pos:position pos:line="41" pos:column="48"/></name><argument_list pos:line="41" pos:column="48">(<argument><expr><name><name pos:line="41" pos:column="49">baseend<pos:position pos:line="41" pos:column="56"/></name><operator pos:line="41" pos:column="56">-&gt;<pos:position pos:line="41" pos:column="61"/></operator><name pos:line="41" pos:column="58">line<pos:position pos:line="41" pos:column="62"/></name></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="64">baseend<pos:position pos:line="41" pos:column="71"/></name><operator pos:line="41" pos:column="71">-&gt;<pos:position pos:line="41" pos:column="76"/></operator><name pos:line="41" pos:column="73">len<pos:position pos:line="41" pos:column="76"/></name></name></expr></argument>,
						<argument><expr><name><name pos:line="42" pos:column="49">newend<pos:position pos:line="42" pos:column="55"/></name><operator pos:line="42" pos:column="55">-&gt;<pos:position pos:line="42" pos:column="60"/></operator><name pos:line="42" pos:column="57">line<pos:position pos:line="42" pos:column="61"/></name></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="63">newend<pos:position pos:line="42" pos:column="69"/></name><operator pos:line="42" pos:column="69">-&gt;<pos:position pos:line="42" pos:column="74"/></operator><name pos:line="42" pos:column="71">len<pos:position pos:line="42" pos:column="74"/></name></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="76">flags<pos:position pos:line="42" pos:column="81"/></name></expr></argument>)<pos:position pos:line="42" pos:column="82"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="83"/></condition><then pos:line="42" pos:column="83"> <block pos:line="42" pos:column="84">{
				<expr_stmt><expr><name><name pos:line="43" pos:column="33">lcs<pos:position pos:line="43" pos:column="36"/></name><index pos:line="43" pos:column="36">[<expr><name pos:line="43" pos:column="37">i<pos:position pos:line="43" pos:column="38"/></name></expr>]<pos:position pos:line="43" pos:column="39"/></index><index pos:line="43" pos:column="39">[<expr><name pos:line="43" pos:column="40">j<pos:position pos:line="43" pos:column="41"/></name></expr>]<pos:position pos:line="43" pos:column="42"/></index></name> <operator pos:line="43" pos:column="43">=<pos:position pos:line="43" pos:column="44"/></operator> <name><name pos:line="43" pos:column="45">lcs<pos:position pos:line="43" pos:column="48"/></name><index pos:line="43" pos:column="48">[<expr><name pos:line="43" pos:column="49">i<pos:position pos:line="43" pos:column="50"/></name> <operator pos:line="43" pos:column="51">-<pos:position pos:line="43" pos:column="52"/></operator> <literal type="number" pos:line="43" pos:column="53">1<pos:position pos:line="43" pos:column="54"/></literal></expr>]<pos:position pos:line="43" pos:column="55"/></index><index pos:line="43" pos:column="55">[<expr><name pos:line="43" pos:column="56">j<pos:position pos:line="43" pos:column="57"/></name> <operator pos:line="43" pos:column="58">-<pos:position pos:line="43" pos:column="59"/></operator> <literal type="number" pos:line="43" pos:column="60">1<pos:position pos:line="43" pos:column="61"/></literal></expr>]<pos:position pos:line="43" pos:column="62"/></index></name> <operator pos:line="43" pos:column="63">+<pos:position pos:line="43" pos:column="64"/></operator> <literal type="number" pos:line="43" pos:column="65">1<pos:position pos:line="43" pos:column="66"/></literal></expr>;<pos:position pos:line="43" pos:column="67"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="44" pos:column="33">directions<pos:position pos:line="44" pos:column="43"/></name><index pos:line="44" pos:column="43">[<expr><name pos:line="44" pos:column="44">i<pos:position pos:line="44" pos:column="45"/></name></expr>]<pos:position pos:line="44" pos:column="46"/></index><index pos:line="44" pos:column="46">[<expr><name pos:line="44" pos:column="47">j<pos:position pos:line="44" pos:column="48"/></name></expr>]<pos:position pos:line="44" pos:column="49"/></index></name> <operator pos:line="44" pos:column="50">=<pos:position pos:line="44" pos:column="51"/></operator> <name pos:line="44" pos:column="52">MATCH<pos:position pos:line="44" pos:column="57"/></name></expr>;<pos:position pos:line="44" pos:column="58"/></expr_stmt>
			}<pos:position pos:line="45" pos:column="26"/></block></then> <elseif pos:line="45" pos:column="27">else <if pos:line="45" pos:column="32">if <condition pos:line="45" pos:column="35">(<expr><name><name pos:line="45" pos:column="36">lcs<pos:position pos:line="45" pos:column="39"/></name><index pos:line="45" pos:column="39">[<expr><name pos:line="45" pos:column="40">i<pos:position pos:line="45" pos:column="41"/></name></expr>]<pos:position pos:line="45" pos:column="42"/></index><index pos:line="45" pos:column="42">[<expr><name pos:line="45" pos:column="43">j<pos:position pos:line="45" pos:column="44"/></name> <operator pos:line="45" pos:column="45">-<pos:position pos:line="45" pos:column="46"/></operator> <literal type="number" pos:line="45" pos:column="47">1<pos:position pos:line="45" pos:column="48"/></literal></expr>]<pos:position pos:line="45" pos:column="49"/></index></name> <operator pos:line="45" pos:column="50">&gt;=<pos:position pos:line="45" pos:column="55"/></operator> <name><name pos:line="45" pos:column="53">lcs<pos:position pos:line="45" pos:column="56"/></name><index pos:line="45" pos:column="56">[<expr><name pos:line="45" pos:column="57">i<pos:position pos:line="45" pos:column="58"/></name> <operator pos:line="45" pos:column="59">-<pos:position pos:line="45" pos:column="60"/></operator> <literal type="number" pos:line="45" pos:column="61">1<pos:position pos:line="45" pos:column="62"/></literal></expr>]<pos:position pos:line="45" pos:column="63"/></index><index pos:line="45" pos:column="63">[<expr><name pos:line="45" pos:column="64">j<pos:position pos:line="45" pos:column="65"/></name></expr>]<pos:position pos:line="45" pos:column="66"/></index></name></expr>)<pos:position pos:line="45" pos:column="67"/></condition><then pos:line="45" pos:column="67"> <block pos:line="45" pos:column="68">{
				<expr_stmt><expr><name><name pos:line="46" pos:column="33">lcs<pos:position pos:line="46" pos:column="36"/></name><index pos:line="46" pos:column="36">[<expr><name pos:line="46" pos:column="37">i<pos:position pos:line="46" pos:column="38"/></name></expr>]<pos:position pos:line="46" pos:column="39"/></index><index pos:line="46" pos:column="39">[<expr><name pos:line="46" pos:column="40">j<pos:position pos:line="46" pos:column="41"/></name></expr>]<pos:position pos:line="46" pos:column="42"/></index></name> <operator pos:line="46" pos:column="43">=<pos:position pos:line="46" pos:column="44"/></operator> <name><name pos:line="46" pos:column="45">lcs<pos:position pos:line="46" pos:column="48"/></name><index pos:line="46" pos:column="48">[<expr><name pos:line="46" pos:column="49">i<pos:position pos:line="46" pos:column="50"/></name></expr>]<pos:position pos:line="46" pos:column="51"/></index><index pos:line="46" pos:column="51">[<expr><name pos:line="46" pos:column="52">j<pos:position pos:line="46" pos:column="53"/></name> <operator pos:line="46" pos:column="54">-<pos:position pos:line="46" pos:column="55"/></operator> <literal type="number" pos:line="46" pos:column="56">1<pos:position pos:line="46" pos:column="57"/></literal></expr>]<pos:position pos:line="46" pos:column="58"/></index></name></expr>;<pos:position pos:line="46" pos:column="59"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="47" pos:column="33">directions<pos:position pos:line="47" pos:column="43"/></name><index pos:line="47" pos:column="43">[<expr><name pos:line="47" pos:column="44">i<pos:position pos:line="47" pos:column="45"/></name></expr>]<pos:position pos:line="47" pos:column="46"/></index><index pos:line="47" pos:column="46">[<expr><name pos:line="47" pos:column="47">j<pos:position pos:line="47" pos:column="48"/></name></expr>]<pos:position pos:line="47" pos:column="49"/></index></name> <operator pos:line="47" pos:column="50">=<pos:position pos:line="47" pos:column="51"/></operator> <name pos:line="47" pos:column="52">NEW<pos:position pos:line="47" pos:column="55"/></name></expr>;<pos:position pos:line="47" pos:column="56"/></expr_stmt>
			}<pos:position pos:line="48" pos:column="26"/></block></then></if></elseif> <else pos:line="48" pos:column="27">else <block pos:line="48" pos:column="32">{
				<expr_stmt><expr><name><name pos:line="49" pos:column="33">lcs<pos:position pos:line="49" pos:column="36"/></name><index pos:line="49" pos:column="36">[<expr><name pos:line="49" pos:column="37">i<pos:position pos:line="49" pos:column="38"/></name></expr>]<pos:position pos:line="49" pos:column="39"/></index><index pos:line="49" pos:column="39">[<expr><name pos:line="49" pos:column="40">j<pos:position pos:line="49" pos:column="41"/></name></expr>]<pos:position pos:line="49" pos:column="42"/></index></name> <operator pos:line="49" pos:column="43">=<pos:position pos:line="49" pos:column="44"/></operator> <name><name pos:line="49" pos:column="45">lcs<pos:position pos:line="49" pos:column="48"/></name><index pos:line="49" pos:column="48">[<expr><name pos:line="49" pos:column="49">i<pos:position pos:line="49" pos:column="50"/></name> <operator pos:line="49" pos:column="51">-<pos:position pos:line="49" pos:column="52"/></operator> <literal type="number" pos:line="49" pos:column="53">1<pos:position pos:line="49" pos:column="54"/></literal></expr>]<pos:position pos:line="49" pos:column="55"/></index><index pos:line="49" pos:column="55">[<expr><name pos:line="49" pos:column="56">j<pos:position pos:line="49" pos:column="57"/></name></expr>]<pos:position pos:line="49" pos:column="58"/></index></name></expr>;<pos:position pos:line="49" pos:column="59"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="50" pos:column="33">directions<pos:position pos:line="50" pos:column="43"/></name><index pos:line="50" pos:column="43">[<expr><name pos:line="50" pos:column="44">i<pos:position pos:line="50" pos:column="45"/></name></expr>]<pos:position pos:line="50" pos:column="46"/></index><index pos:line="50" pos:column="46">[<expr><name pos:line="50" pos:column="47">j<pos:position pos:line="50" pos:column="48"/></name></expr>]<pos:position pos:line="50" pos:column="49"/></index></name> <operator pos:line="50" pos:column="50">=<pos:position pos:line="50" pos:column="51"/></operator> <name pos:line="50" pos:column="52">BASE<pos:position pos:line="50" pos:column="56"/></name></expr>;<pos:position pos:line="50" pos:column="57"/></expr_stmt>
			}<pos:position pos:line="51" pos:column="26"/></block></else></if>
			<if pos:line="52" pos:column="25">if <condition pos:line="52" pos:column="28">(<expr><name><name pos:line="52" pos:column="29">newend<pos:position pos:line="52" pos:column="35"/></name><operator pos:line="52" pos:column="35">-&gt;<pos:position pos:line="52" pos:column="40"/></operator><name pos:line="52" pos:column="37">next<pos:position pos:line="52" pos:column="41"/></name></name></expr>)<pos:position pos:line="52" pos:column="42"/></condition><then pos:line="52" pos:column="42">
				<block type="pseudo"><expr_stmt><expr><name pos:line="53" pos:column="33">newend<pos:position pos:line="53" pos:column="39"/></name> <operator pos:line="53" pos:column="40">=<pos:position pos:line="53" pos:column="41"/></operator> <name><name pos:line="53" pos:column="42">newend<pos:position pos:line="53" pos:column="48"/></name><operator pos:line="53" pos:column="48">-&gt;<pos:position pos:line="53" pos:column="53"/></operator><name pos:line="53" pos:column="50">next<pos:position pos:line="53" pos:column="54"/></name></name></expr>;<pos:position pos:line="53" pos:column="55"/></expr_stmt></block></then></if>
		}<pos:position pos:line="54" pos:column="18"/></block></for>
		<if pos:line="55" pos:column="17">if <condition pos:line="55" pos:column="20">(<expr><name><name pos:line="55" pos:column="21">baseend<pos:position pos:line="55" pos:column="28"/></name><operator pos:line="55" pos:column="28">-&gt;<pos:position pos:line="55" pos:column="33"/></operator><name pos:line="55" pos:column="30">next<pos:position pos:line="55" pos:column="34"/></name></name></expr>)<pos:position pos:line="55" pos:column="35"/></condition><then pos:line="55" pos:column="35">
			<block type="pseudo"><expr_stmt><expr><name pos:line="56" pos:column="25">baseend<pos:position pos:line="56" pos:column="32"/></name> <operator pos:line="56" pos:column="33">=<pos:position pos:line="56" pos:column="34"/></operator> <name><name pos:line="56" pos:column="35">baseend<pos:position pos:line="56" pos:column="42"/></name><operator pos:line="56" pos:column="42">-&gt;<pos:position pos:line="56" pos:column="47"/></operator><name pos:line="56" pos:column="44">next<pos:position pos:line="56" pos:column="48"/></name></name></expr>;<pos:position pos:line="56" pos:column="49"/></expr_stmt></block></then></if>
	}<pos:position pos:line="57" pos:column="10"/></block></for>

	<for pos:line="59" pos:column="9">for <control pos:line="59" pos:column="13">(<init><expr><name pos:line="59" pos:column="14">i<pos:position pos:line="59" pos:column="15"/></name> <operator pos:line="59" pos:column="16">=<pos:position pos:line="59" pos:column="17"/></operator> <literal type="number" pos:line="59" pos:column="18">0<pos:position pos:line="59" pos:column="19"/></literal></expr>;<pos:position pos:line="59" pos:column="20"/></init> <condition><expr><name pos:line="59" pos:column="21">i<pos:position pos:line="59" pos:column="22"/></name> <operator pos:line="59" pos:column="23">&lt;<pos:position pos:line="59" pos:column="27"/></operator> <name pos:line="59" pos:column="25">origbaselen<pos:position pos:line="59" pos:column="36"/></name> <operator pos:line="59" pos:column="37">+<pos:position pos:line="59" pos:column="38"/></operator> <literal type="number" pos:line="59" pos:column="39">1<pos:position pos:line="59" pos:column="40"/></literal></expr>;<pos:position pos:line="59" pos:column="41"/></condition> <incr><expr><name pos:line="59" pos:column="42">i<pos:position pos:line="59" pos:column="43"/></name><operator pos:line="59" pos:column="43">++<pos:position pos:line="59" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="59" pos:column="46"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="60" pos:column="17">free<pos:position pos:line="60" pos:column="21"/></name><argument_list pos:line="60" pos:column="21">(<argument><expr><name><name pos:line="60" pos:column="22">lcs<pos:position pos:line="60" pos:column="25"/></name><index pos:line="60" pos:column="25">[<expr><name pos:line="60" pos:column="26">i<pos:position pos:line="60" pos:column="27"/></name></expr>]<pos:position pos:line="60" pos:column="28"/></index></name></expr></argument>)<pos:position pos:line="60" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="30"/></expr_stmt></block></for>
	<expr_stmt><expr><call><name pos:line="61" pos:column="9">free<pos:position pos:line="61" pos:column="13"/></name><argument_list pos:line="61" pos:column="13">(<argument><expr><name pos:line="61" pos:column="14">lcs<pos:position pos:line="61" pos:column="17"/></name></expr></argument>)<pos:position pos:line="61" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="19"/></expr_stmt>

	<comment type="block" pos:line="63" pos:column="9">/* At this point, baseend and newend point to the end of each lists */</comment>
	<expr_stmt><expr><name pos:line="64" pos:column="9">i<pos:position pos:line="64" pos:column="10"/></name><operator pos:line="64" pos:column="10">--<pos:position pos:line="64" pos:column="12"/></operator></expr>;<pos:position pos:line="64" pos:column="13"/></expr_stmt>
	<expr_stmt><expr><name pos:line="65" pos:column="9">j<pos:position pos:line="65" pos:column="10"/></name><operator pos:line="65" pos:column="10">--<pos:position pos:line="65" pos:column="12"/></operator></expr>;<pos:position pos:line="65" pos:column="13"/></expr_stmt>
	<while pos:line="66" pos:column="9">while <condition pos:line="66" pos:column="15">(<expr><name pos:line="66" pos:column="16">i<pos:position pos:line="66" pos:column="17"/></name> <operator pos:line="66" pos:column="18">!=<pos:position pos:line="66" pos:column="20"/></operator> <literal type="number" pos:line="66" pos:column="21">0<pos:position pos:line="66" pos:column="22"/></literal> <operator pos:line="66" pos:column="23">||<pos:position pos:line="66" pos:column="25"/></operator> <name pos:line="66" pos:column="26">j<pos:position pos:line="66" pos:column="27"/></name> <operator pos:line="66" pos:column="28">!=<pos:position pos:line="66" pos:column="30"/></operator> <literal type="number" pos:line="66" pos:column="31">0<pos:position pos:line="66" pos:column="32"/></literal></expr>)<pos:position pos:line="66" pos:column="33"/></condition> <block pos:line="66" pos:column="34">{
		<if pos:line="67" pos:column="17">if <condition pos:line="67" pos:column="20">(<expr><name><name pos:line="67" pos:column="21">directions<pos:position pos:line="67" pos:column="31"/></name><index pos:line="67" pos:column="31">[<expr><name pos:line="67" pos:column="32">i<pos:position pos:line="67" pos:column="33"/></name></expr>]<pos:position pos:line="67" pos:column="34"/></index><index pos:line="67" pos:column="34">[<expr><name pos:line="67" pos:column="35">j<pos:position pos:line="67" pos:column="36"/></name></expr>]<pos:position pos:line="67" pos:column="37"/></index></name> <operator pos:line="67" pos:column="38">==<pos:position pos:line="67" pos:column="40"/></operator> <name pos:line="67" pos:column="41">MATCH<pos:position pos:line="67" pos:column="46"/></name></expr>)<pos:position pos:line="67" pos:column="47"/></condition><then pos:line="67" pos:column="47"> <block pos:line="67" pos:column="48">{
			<expr_stmt><expr><name><name pos:line="68" pos:column="25">baseend<pos:position pos:line="68" pos:column="32"/></name><operator pos:line="68" pos:column="32">-&gt;<pos:position pos:line="68" pos:column="37"/></operator><name pos:line="68" pos:column="34">parent_map<pos:position pos:line="68" pos:column="44"/></name></name> <operator pos:line="68" pos:column="45">|=<pos:position pos:line="68" pos:column="47"/></operator> <literal type="number" pos:line="68" pos:column="48">1<pos:position pos:line="68" pos:column="49"/></literal><operator pos:line="68" pos:column="49">&lt;&lt;<pos:position pos:line="68" pos:column="57"/></operator><name pos:line="68" pos:column="51">parent<pos:position pos:line="68" pos:column="57"/></name></expr>;<pos:position pos:line="68" pos:column="58"/></expr_stmt>
			<expr_stmt><expr><name pos:line="69" pos:column="25">baseend<pos:position pos:line="69" pos:column="32"/></name> <operator pos:line="69" pos:column="33">=<pos:position pos:line="69" pos:column="34"/></operator> <name><name pos:line="69" pos:column="35">baseend<pos:position pos:line="69" pos:column="42"/></name><operator pos:line="69" pos:column="42">-&gt;<pos:position pos:line="69" pos:column="47"/></operator><name pos:line="69" pos:column="44">prev<pos:position pos:line="69" pos:column="48"/></name></name></expr>;<pos:position pos:line="69" pos:column="49"/></expr_stmt>
			<expr_stmt><expr><name pos:line="70" pos:column="25">newend<pos:position pos:line="70" pos:column="31"/></name> <operator pos:line="70" pos:column="32">=<pos:position pos:line="70" pos:column="33"/></operator> <name><name pos:line="70" pos:column="34">newend<pos:position pos:line="70" pos:column="40"/></name><operator pos:line="70" pos:column="40">-&gt;<pos:position pos:line="70" pos:column="45"/></operator><name pos:line="70" pos:column="42">prev<pos:position pos:line="70" pos:column="46"/></name></name></expr>;<pos:position pos:line="70" pos:column="47"/></expr_stmt>
			<expr_stmt><expr><name pos:line="71" pos:column="25">i<pos:position pos:line="71" pos:column="26"/></name><operator pos:line="71" pos:column="26">--<pos:position pos:line="71" pos:column="28"/></operator></expr>;<pos:position pos:line="71" pos:column="29"/></expr_stmt>
			<expr_stmt><expr><name pos:line="72" pos:column="25">j<pos:position pos:line="72" pos:column="26"/></name><operator pos:line="72" pos:column="26">--<pos:position pos:line="72" pos:column="28"/></operator></expr>;<pos:position pos:line="72" pos:column="29"/></expr_stmt>
		}<pos:position pos:line="73" pos:column="18"/></block></then> <elseif pos:line="73" pos:column="19">else <if pos:line="73" pos:column="24">if <condition pos:line="73" pos:column="27">(<expr><name><name pos:line="73" pos:column="28">directions<pos:position pos:line="73" pos:column="38"/></name><index pos:line="73" pos:column="38">[<expr><name pos:line="73" pos:column="39">i<pos:position pos:line="73" pos:column="40"/></name></expr>]<pos:position pos:line="73" pos:column="41"/></index><index pos:line="73" pos:column="41">[<expr><name pos:line="73" pos:column="42">j<pos:position pos:line="73" pos:column="43"/></name></expr>]<pos:position pos:line="73" pos:column="44"/></index></name> <operator pos:line="73" pos:column="45">==<pos:position pos:line="73" pos:column="47"/></operator> <name pos:line="73" pos:column="48">NEW<pos:position pos:line="73" pos:column="51"/></name></expr>)<pos:position pos:line="73" pos:column="52"/></condition><then pos:line="73" pos:column="52"> <block pos:line="73" pos:column="53">{
			<decl_stmt><decl><type><name><name pos:line="74" pos:column="25">struct<pos:position pos:line="74" pos:column="31"/></name> <name pos:line="74" pos:column="32">lline<pos:position pos:line="74" pos:column="37"/></name></name> <modifier pos:line="74" pos:column="38">*<pos:position pos:line="74" pos:column="39"/></modifier></type><name pos:line="74" pos:column="39">lline<pos:position pos:line="74" pos:column="44"/></name></decl>;<pos:position pos:line="74" pos:column="45"/></decl_stmt>

			<expr_stmt><expr><name pos:line="76" pos:column="25">lline<pos:position pos:line="76" pos:column="30"/></name> <operator pos:line="76" pos:column="31">=<pos:position pos:line="76" pos:column="32"/></operator> <name pos:line="76" pos:column="33">newend<pos:position pos:line="76" pos:column="39"/></name></expr>;<pos:position pos:line="76" pos:column="40"/></expr_stmt>
			<comment type="block" pos:line="77" pos:column="25">/* Remove lline from new list and update newend */</comment>
			<if pos:line="78" pos:column="25">if <condition pos:line="78" pos:column="28">(<expr><name><name pos:line="78" pos:column="29">lline<pos:position pos:line="78" pos:column="34"/></name><operator pos:line="78" pos:column="34">-&gt;<pos:position pos:line="78" pos:column="39"/></operator><name pos:line="78" pos:column="36">prev<pos:position pos:line="78" pos:column="40"/></name></name></expr>)<pos:position pos:line="78" pos:column="41"/></condition><then pos:line="78" pos:column="41">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="79" pos:column="33">lline<pos:position pos:line="79" pos:column="38"/></name><operator pos:line="79" pos:column="38">-&gt;<pos:position pos:line="79" pos:column="43"/></operator><name pos:line="79" pos:column="40">prev<pos:position pos:line="79" pos:column="44"/></name><operator pos:line="79" pos:column="44">-&gt;<pos:position pos:line="79" pos:column="49"/></operator><name pos:line="79" pos:column="46">next<pos:position pos:line="79" pos:column="50"/></name></name> <operator pos:line="79" pos:column="51">=<pos:position pos:line="79" pos:column="52"/></operator> <name><name pos:line="79" pos:column="53">lline<pos:position pos:line="79" pos:column="58"/></name><operator pos:line="79" pos:column="58">-&gt;<pos:position pos:line="79" pos:column="63"/></operator><name pos:line="79" pos:column="60">next<pos:position pos:line="79" pos:column="64"/></name></name></expr>;<pos:position pos:line="79" pos:column="65"/></expr_stmt></block></then>
			<else pos:line="80" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><operator pos:line="81" pos:column="33">new<pos:position pos:line="81" pos:column="36"/></operator> <operator pos:line="81" pos:column="37">=<pos:position pos:line="81" pos:column="38"/></operator> <name><name pos:line="81" pos:column="39">lline<pos:position pos:line="81" pos:column="44"/></name><operator pos:line="81" pos:column="44">-&gt;<pos:position pos:line="81" pos:column="49"/></operator><name pos:line="81" pos:column="46">next<pos:position pos:line="81" pos:column="50"/></name></name></expr>;<pos:position pos:line="81" pos:column="51"/></expr_stmt></block></else></if>
			<if pos:line="82" pos:column="25">if <condition pos:line="82" pos:column="28">(<expr><name><name pos:line="82" pos:column="29">lline<pos:position pos:line="82" pos:column="34"/></name><operator pos:line="82" pos:column="34">-&gt;<pos:position pos:line="82" pos:column="39"/></operator><name pos:line="82" pos:column="36">next<pos:position pos:line="82" pos:column="40"/></name></name></expr>)<pos:position pos:line="82" pos:column="41"/></condition><then pos:line="82" pos:column="41">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="83" pos:column="33">lline<pos:position pos:line="83" pos:column="38"/></name><operator pos:line="83" pos:column="38">-&gt;<pos:position pos:line="83" pos:column="43"/></operator><name pos:line="83" pos:column="40">next<pos:position pos:line="83" pos:column="44"/></name><operator pos:line="83" pos:column="44">-&gt;<pos:position pos:line="83" pos:column="49"/></operator><name pos:line="83" pos:column="46">prev<pos:position pos:line="83" pos:column="50"/></name></name> <operator pos:line="83" pos:column="51">=<pos:position pos:line="83" pos:column="52"/></operator> <name><name pos:line="83" pos:column="53">lline<pos:position pos:line="83" pos:column="58"/></name><operator pos:line="83" pos:column="58">-&gt;<pos:position pos:line="83" pos:column="63"/></operator><name pos:line="83" pos:column="60">prev<pos:position pos:line="83" pos:column="64"/></name></name></expr>;<pos:position pos:line="83" pos:column="65"/></expr_stmt></block></then></if>

			<expr_stmt><expr><name pos:line="85" pos:column="25">newend<pos:position pos:line="85" pos:column="31"/></name> <operator pos:line="85" pos:column="32">=<pos:position pos:line="85" pos:column="33"/></operator> <name><name pos:line="85" pos:column="34">lline<pos:position pos:line="85" pos:column="39"/></name><operator pos:line="85" pos:column="39">-&gt;<pos:position pos:line="85" pos:column="44"/></operator><name pos:line="85" pos:column="41">prev<pos:position pos:line="85" pos:column="45"/></name></name></expr>;<pos:position pos:line="85" pos:column="46"/></expr_stmt>
			<expr_stmt><expr><name pos:line="86" pos:column="25">j<pos:position pos:line="86" pos:column="26"/></name><operator pos:line="86" pos:column="26">--<pos:position pos:line="86" pos:column="28"/></operator></expr>;<pos:position pos:line="86" pos:column="29"/></expr_stmt>

			<comment type="block" pos:line="88" pos:column="25">/* Add lline to base list */</comment>
			<if pos:line="89" pos:column="25">if <condition pos:line="89" pos:column="28">(<expr><name pos:line="89" pos:column="29">baseend<pos:position pos:line="89" pos:column="36"/></name></expr>)<pos:position pos:line="89" pos:column="37"/></condition><then pos:line="89" pos:column="37"> <block pos:line="89" pos:column="38">{
				<expr_stmt><expr><name><name pos:line="90" pos:column="33">lline<pos:position pos:line="90" pos:column="38"/></name><operator pos:line="90" pos:column="38">-&gt;<pos:position pos:line="90" pos:column="43"/></operator><name pos:line="90" pos:column="40">next<pos:position pos:line="90" pos:column="44"/></name></name> <operator pos:line="90" pos:column="45">=<pos:position pos:line="90" pos:column="46"/></operator> <name><name pos:line="90" pos:column="47">baseend<pos:position pos:line="90" pos:column="54"/></name><operator pos:line="90" pos:column="54">-&gt;<pos:position pos:line="90" pos:column="59"/></operator><name pos:line="90" pos:column="56">next<pos:position pos:line="90" pos:column="60"/></name></name></expr>;<pos:position pos:line="90" pos:column="61"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="91" pos:column="33">lline<pos:position pos:line="91" pos:column="38"/></name><operator pos:line="91" pos:column="38">-&gt;<pos:position pos:line="91" pos:column="43"/></operator><name pos:line="91" pos:column="40">prev<pos:position pos:line="91" pos:column="44"/></name></name> <operator pos:line="91" pos:column="45">=<pos:position pos:line="91" pos:column="46"/></operator> <name pos:line="91" pos:column="47">baseend<pos:position pos:line="91" pos:column="54"/></name></expr>;<pos:position pos:line="91" pos:column="55"/></expr_stmt>
				<if pos:line="92" pos:column="33">if <condition pos:line="92" pos:column="36">(<expr><name><name pos:line="92" pos:column="37">lline<pos:position pos:line="92" pos:column="42"/></name><operator pos:line="92" pos:column="42">-&gt;<pos:position pos:line="92" pos:column="47"/></operator><name pos:line="92" pos:column="44">prev<pos:position pos:line="92" pos:column="48"/></name></name></expr>)<pos:position pos:line="92" pos:column="49"/></condition><then pos:line="92" pos:column="49">
					<block type="pseudo"><expr_stmt><expr><name><name pos:line="93" pos:column="41">lline<pos:position pos:line="93" pos:column="46"/></name><operator pos:line="93" pos:column="46">-&gt;<pos:position pos:line="93" pos:column="51"/></operator><name pos:line="93" pos:column="48">prev<pos:position pos:line="93" pos:column="52"/></name><operator pos:line="93" pos:column="52">-&gt;<pos:position pos:line="93" pos:column="57"/></operator><name pos:line="93" pos:column="54">next<pos:position pos:line="93" pos:column="58"/></name></name> <operator pos:line="93" pos:column="59">=<pos:position pos:line="93" pos:column="60"/></operator> <name pos:line="93" pos:column="61">lline<pos:position pos:line="93" pos:column="66"/></name></expr>;<pos:position pos:line="93" pos:column="67"/></expr_stmt></block></then></if>
			}<pos:position pos:line="94" pos:column="26"/></block></then>
			<else pos:line="95" pos:column="25">else <block pos:line="95" pos:column="30">{
				<expr_stmt><expr><name><name pos:line="96" pos:column="33">lline<pos:position pos:line="96" pos:column="38"/></name><operator pos:line="96" pos:column="38">-&gt;<pos:position pos:line="96" pos:column="43"/></operator><name pos:line="96" pos:column="40">next<pos:position pos:line="96" pos:column="44"/></name></name> <operator pos:line="96" pos:column="45">=<pos:position pos:line="96" pos:column="46"/></operator> <name pos:line="96" pos:column="47">base<pos:position pos:line="96" pos:column="51"/></name></expr>;<pos:position pos:line="96" pos:column="52"/></expr_stmt>
				<expr_stmt><expr><name pos:line="97" pos:column="33">base<pos:position pos:line="97" pos:column="37"/></name> <operator pos:line="97" pos:column="38">=<pos:position pos:line="97" pos:column="39"/></operator> <name pos:line="97" pos:column="40">lline<pos:position pos:line="97" pos:column="45"/></name></expr>;<pos:position pos:line="97" pos:column="46"/></expr_stmt>
			}<pos:position pos:line="98" pos:column="26"/></block></else></if>
			<expr_stmt><expr><operator pos:line="99" pos:column="25">(<pos:position pos:line="99" pos:column="26"/></operator><operator pos:line="99" pos:column="26">*<pos:position pos:line="99" pos:column="27"/></operator><name pos:line="99" pos:column="27">lenbase<pos:position pos:line="99" pos:column="34"/></name><operator pos:line="99" pos:column="34">)<pos:position pos:line="99" pos:column="35"/></operator><operator pos:line="99" pos:column="35">++<pos:position pos:line="99" pos:column="37"/></operator></expr>;<pos:position pos:line="99" pos:column="38"/></expr_stmt>

			<if pos:line="101" pos:column="25">if <condition pos:line="101" pos:column="28">(<expr><name><name pos:line="101" pos:column="29">lline<pos:position pos:line="101" pos:column="34"/></name><operator pos:line="101" pos:column="34">-&gt;<pos:position pos:line="101" pos:column="39"/></operator><name pos:line="101" pos:column="36">next<pos:position pos:line="101" pos:column="40"/></name></name></expr>)<pos:position pos:line="101" pos:column="41"/></condition><then pos:line="101" pos:column="41">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="102" pos:column="33">lline<pos:position pos:line="102" pos:column="38"/></name><operator pos:line="102" pos:column="38">-&gt;<pos:position pos:line="102" pos:column="43"/></operator><name pos:line="102" pos:column="40">next<pos:position pos:line="102" pos:column="44"/></name><operator pos:line="102" pos:column="44">-&gt;<pos:position pos:line="102" pos:column="49"/></operator><name pos:line="102" pos:column="46">prev<pos:position pos:line="102" pos:column="50"/></name></name> <operator pos:line="102" pos:column="51">=<pos:position pos:line="102" pos:column="52"/></operator> <name pos:line="102" pos:column="53">lline<pos:position pos:line="102" pos:column="58"/></name></expr>;<pos:position pos:line="102" pos:column="59"/></expr_stmt></block></then></if>

		}<pos:position pos:line="104" pos:column="18"/></block></then></if></elseif> <else pos:line="104" pos:column="19">else <block pos:line="104" pos:column="24">{
			<expr_stmt><expr><name pos:line="105" pos:column="25">baseend<pos:position pos:line="105" pos:column="32"/></name> <operator pos:line="105" pos:column="33">=<pos:position pos:line="105" pos:column="34"/></operator> <name><name pos:line="105" pos:column="35">baseend<pos:position pos:line="105" pos:column="42"/></name><operator pos:line="105" pos:column="42">-&gt;<pos:position pos:line="105" pos:column="47"/></operator><name pos:line="105" pos:column="44">prev<pos:position pos:line="105" pos:column="48"/></name></name></expr>;<pos:position pos:line="105" pos:column="49"/></expr_stmt>
			<expr_stmt><expr><name pos:line="106" pos:column="25">i<pos:position pos:line="106" pos:column="26"/></name><operator pos:line="106" pos:column="26">--<pos:position pos:line="106" pos:column="28"/></operator></expr>;<pos:position pos:line="106" pos:column="29"/></expr_stmt>
		}<pos:position pos:line="107" pos:column="18"/></block></else></if>
	}<pos:position pos:line="108" pos:column="10"/></block></while>

	<expr_stmt><expr><name pos:line="110" pos:column="9">newend<pos:position pos:line="110" pos:column="15"/></name> <operator pos:line="110" pos:column="16">=<pos:position pos:line="110" pos:column="17"/></operator> <operator pos:line="110" pos:column="18">new<pos:position pos:line="110" pos:column="21"/></operator></expr>;<pos:position pos:line="110" pos:column="22"/></expr_stmt>
	<while pos:line="111" pos:column="9">while <condition pos:line="111" pos:column="15">(<expr><name pos:line="111" pos:column="16">newend<pos:position pos:line="111" pos:column="22"/></name></expr>)<pos:position pos:line="111" pos:column="23"/></condition> <block pos:line="111" pos:column="24">{
		<decl_stmt><decl><type><name><name pos:line="112" pos:column="17">struct<pos:position pos:line="112" pos:column="23"/></name> <name pos:line="112" pos:column="24">lline<pos:position pos:line="112" pos:column="29"/></name></name> <modifier pos:line="112" pos:column="30">*<pos:position pos:line="112" pos:column="31"/></modifier></type><name pos:line="112" pos:column="31">lline<pos:position pos:line="112" pos:column="36"/></name> <init pos:line="112" pos:column="37">= <expr><name pos:line="112" pos:column="39">newend<pos:position pos:line="112" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="112" pos:column="46"/></decl_stmt>
		<expr_stmt><expr><name pos:line="113" pos:column="17">newend<pos:position pos:line="113" pos:column="23"/></name> <operator pos:line="113" pos:column="24">=<pos:position pos:line="113" pos:column="25"/></operator> <name><name pos:line="113" pos:column="26">newend<pos:position pos:line="113" pos:column="32"/></name><operator pos:line="113" pos:column="32">-&gt;<pos:position pos:line="113" pos:column="37"/></operator><name pos:line="113" pos:column="34">next<pos:position pos:line="113" pos:column="38"/></name></name></expr>;<pos:position pos:line="113" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="114" pos:column="17">free<pos:position pos:line="114" pos:column="21"/></name><argument_list pos:line="114" pos:column="21">(<argument><expr><name pos:line="114" pos:column="22">lline<pos:position pos:line="114" pos:column="27"/></name></expr></argument>)<pos:position pos:line="114" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="29"/></expr_stmt>
	}<pos:position pos:line="115" pos:column="10"/></block></while>

	<for pos:line="117" pos:column="9">for <control pos:line="117" pos:column="13">(<init><expr><name pos:line="117" pos:column="14">i<pos:position pos:line="117" pos:column="15"/></name> <operator pos:line="117" pos:column="16">=<pos:position pos:line="117" pos:column="17"/></operator> <literal type="number" pos:line="117" pos:column="18">0<pos:position pos:line="117" pos:column="19"/></literal></expr>;<pos:position pos:line="117" pos:column="20"/></init> <condition><expr><name pos:line="117" pos:column="21">i<pos:position pos:line="117" pos:column="22"/></name> <operator pos:line="117" pos:column="23">&lt;<pos:position pos:line="117" pos:column="27"/></operator> <name pos:line="117" pos:column="25">origbaselen<pos:position pos:line="117" pos:column="36"/></name> <operator pos:line="117" pos:column="37">+<pos:position pos:line="117" pos:column="38"/></operator> <literal type="number" pos:line="117" pos:column="39">1<pos:position pos:line="117" pos:column="40"/></literal></expr>;<pos:position pos:line="117" pos:column="41"/></condition> <incr><expr><name pos:line="117" pos:column="42">i<pos:position pos:line="117" pos:column="43"/></name><operator pos:line="117" pos:column="43">++<pos:position pos:line="117" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="117" pos:column="46"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="118" pos:column="17">free<pos:position pos:line="118" pos:column="21"/></name><argument_list pos:line="118" pos:column="21">(<argument><expr><name><name pos:line="118" pos:column="22">directions<pos:position pos:line="118" pos:column="32"/></name><index pos:line="118" pos:column="32">[<expr><name pos:line="118" pos:column="33">i<pos:position pos:line="118" pos:column="34"/></name></expr>]<pos:position pos:line="118" pos:column="35"/></index></name></expr></argument>)<pos:position pos:line="118" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="37"/></expr_stmt></block></for>
	<expr_stmt><expr><call><name pos:line="119" pos:column="9">free<pos:position pos:line="119" pos:column="13"/></name><argument_list pos:line="119" pos:column="13">(<argument><expr><name pos:line="119" pos:column="14">directions<pos:position pos:line="119" pos:column="24"/></name></expr></argument>)<pos:position pos:line="119" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="26"/></expr_stmt>

	<return pos:line="121" pos:column="9">return <expr><name pos:line="121" pos:column="16">base<pos:position pos:line="121" pos:column="20"/></name></expr>;<pos:position pos:line="121" pos:column="21"/></return>
}</unit>

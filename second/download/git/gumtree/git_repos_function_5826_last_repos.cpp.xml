<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5826_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">worktree_basename<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><specifier pos:line="1" pos:column="38">const<pos:position pos:line="1" pos:column="43"/></specifier> <name pos:line="1" pos:column="44">char<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">path<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">int<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">olen<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">name<pos:position pos:line="3" pos:column="25"/></name></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">len<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>

	<expr_stmt><expr><name pos:line="6" pos:column="9">len<pos:position pos:line="6" pos:column="12"/></name> <operator pos:line="6" pos:column="13">=<pos:position pos:line="6" pos:column="14"/></operator> <call><name pos:line="6" pos:column="15">strlen<pos:position pos:line="6" pos:column="21"/></name><argument_list pos:line="6" pos:column="21">(<argument><expr><name pos:line="6" pos:column="22">path<pos:position pos:line="6" pos:column="26"/></name></expr></argument>)<pos:position pos:line="6" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="28"/></expr_stmt>
	<while pos:line="7" pos:column="9">while <condition pos:line="7" pos:column="15">(<expr><name pos:line="7" pos:column="16">len<pos:position pos:line="7" pos:column="19"/></name> <operator pos:line="7" pos:column="20">&amp;&amp;<pos:position pos:line="7" pos:column="30"/></operator> <call><name pos:line="7" pos:column="23">is_dir_sep<pos:position pos:line="7" pos:column="33"/></name><argument_list pos:line="7" pos:column="33">(<argument><expr><name><name pos:line="7" pos:column="34">path<pos:position pos:line="7" pos:column="38"/></name><index pos:line="7" pos:column="38">[<expr><name pos:line="7" pos:column="39">len<pos:position pos:line="7" pos:column="42"/></name> <operator pos:line="7" pos:column="43">-<pos:position pos:line="7" pos:column="44"/></operator> <literal type="number" pos:line="7" pos:column="45">1<pos:position pos:line="7" pos:column="46"/></literal></expr>]<pos:position pos:line="7" pos:column="47"/></index></name></expr></argument>)<pos:position pos:line="7" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="49"/></condition>
		<block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="17">len<pos:position pos:line="8" pos:column="20"/></name><operator pos:line="8" pos:column="20">--<pos:position pos:line="8" pos:column="22"/></operator></expr>;<pos:position pos:line="8" pos:column="23"/></expr_stmt></block></while>

	<for pos:line="10" pos:column="9">for <control pos:line="10" pos:column="13">(<init><expr><name pos:line="10" pos:column="14">name<pos:position pos:line="10" pos:column="18"/></name> <operator pos:line="10" pos:column="19">=<pos:position pos:line="10" pos:column="20"/></operator> <name pos:line="10" pos:column="21">path<pos:position pos:line="10" pos:column="25"/></name> <operator pos:line="10" pos:column="26">+<pos:position pos:line="10" pos:column="27"/></operator> <name pos:line="10" pos:column="28">len<pos:position pos:line="10" pos:column="31"/></name> <operator pos:line="10" pos:column="32">-<pos:position pos:line="10" pos:column="33"/></operator> <literal type="number" pos:line="10" pos:column="34">1<pos:position pos:line="10" pos:column="35"/></literal></expr>;<pos:position pos:line="10" pos:column="36"/></init> <condition><expr><name pos:line="10" pos:column="37">name<pos:position pos:line="10" pos:column="41"/></name> <operator pos:line="10" pos:column="42">&gt;<pos:position pos:line="10" pos:column="46"/></operator> <name pos:line="10" pos:column="44">path<pos:position pos:line="10" pos:column="48"/></name></expr>;<pos:position pos:line="10" pos:column="49"/></condition> <incr><expr><name pos:line="10" pos:column="50">name<pos:position pos:line="10" pos:column="54"/></name><operator pos:line="10" pos:column="54">--<pos:position pos:line="10" pos:column="56"/></operator></expr></incr>)<pos:position pos:line="10" pos:column="57"/></control>
		<block type="pseudo"><if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><call><name pos:line="11" pos:column="21">is_dir_sep<pos:position pos:line="11" pos:column="31"/></name><argument_list pos:line="11" pos:column="31">(<argument><expr><operator pos:line="11" pos:column="32">*<pos:position pos:line="11" pos:column="33"/></operator><name pos:line="11" pos:column="33">name<pos:position pos:line="11" pos:column="37"/></name></expr></argument>)<pos:position pos:line="11" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="39"/></condition><then pos:line="11" pos:column="39"> <block pos:line="11" pos:column="40">{
			<expr_stmt><expr><name pos:line="12" pos:column="25">name<pos:position pos:line="12" pos:column="29"/></name><operator pos:line="12" pos:column="29">++<pos:position pos:line="12" pos:column="31"/></operator></expr>;<pos:position pos:line="12" pos:column="32"/></expr_stmt>
			<break pos:line="13" pos:column="25">break;<pos:position pos:line="13" pos:column="31"/></break>
		}<pos:position pos:line="14" pos:column="18"/></block></then></if></block></for>

	<expr_stmt><expr><operator pos:line="16" pos:column="9">*<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="10">olen<pos:position pos:line="16" pos:column="14"/></name> <operator pos:line="16" pos:column="15">=<pos:position pos:line="16" pos:column="16"/></operator> <name pos:line="16" pos:column="17">len<pos:position pos:line="16" pos:column="20"/></name></expr>;<pos:position pos:line="16" pos:column="21"/></expr_stmt>
	<return pos:line="17" pos:column="9">return <expr><name pos:line="17" pos:column="16">name<pos:position pos:line="17" pos:column="20"/></name></expr>;<pos:position pos:line="17" pos:column="21"/></return>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

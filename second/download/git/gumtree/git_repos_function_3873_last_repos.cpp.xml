<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3873_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">llist_mergesort<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">void<pos:position pos:line="1" pos:column="27"/></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">list<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>,
		      <parameter><function_decl><type><name pos:line="2" pos:column="23">void<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type>(<modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier><name pos:line="2" pos:column="31">get_next_fn<pos:position pos:line="2" pos:column="42"/></name>)<parameter_list pos:line="2" pos:column="43">(<parameter><decl><type><specifier pos:line="2" pos:column="44">const<pos:position pos:line="2" pos:column="49"/></specifier> <name pos:line="2" pos:column="50">void<pos:position pos:line="2" pos:column="54"/></name> <modifier pos:line="2" pos:column="55">*<pos:position pos:line="2" pos:column="56"/></modifier></type></decl></parameter>)<pos:position pos:line="2" pos:column="57"/></parameter_list></function_decl></parameter>,
		      <parameter><function_decl><type><name pos:line="3" pos:column="23">void<pos:position pos:line="3" pos:column="27"/></name></type> (<modifier pos:line="3" pos:column="29">*<pos:position pos:line="3" pos:column="30"/></modifier><name pos:line="3" pos:column="30">set_next_fn<pos:position pos:line="3" pos:column="41"/></name>)<parameter_list pos:line="3" pos:column="42">(<parameter><decl><type><name pos:line="3" pos:column="43">void<pos:position pos:line="3" pos:column="47"/></name> <modifier pos:line="3" pos:column="48">*<pos:position pos:line="3" pos:column="49"/></modifier></type></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="51">void<pos:position pos:line="3" pos:column="55"/></name> <modifier pos:line="3" pos:column="56">*<pos:position pos:line="3" pos:column="57"/></modifier></type></decl></parameter>)<pos:position pos:line="3" pos:column="58"/></parameter_list></function_decl></parameter>,
		      <parameter><function_decl><type><name pos:line="4" pos:column="23">int<pos:position pos:line="4" pos:column="26"/></name></type> (<modifier pos:line="4" pos:column="28">*<pos:position pos:line="4" pos:column="29"/></modifier><name pos:line="4" pos:column="29">compare_fn<pos:position pos:line="4" pos:column="39"/></name>)<parameter_list pos:line="4" pos:column="40">(<parameter><decl><type><specifier pos:line="4" pos:column="41">const<pos:position pos:line="4" pos:column="46"/></specifier> <name pos:line="4" pos:column="47">void<pos:position pos:line="4" pos:column="51"/></name> <modifier pos:line="4" pos:column="52">*<pos:position pos:line="4" pos:column="53"/></modifier></type></decl></parameter>, <parameter><decl><type><specifier pos:line="4" pos:column="55">const<pos:position pos:line="4" pos:column="60"/></specifier> <name pos:line="4" pos:column="61">void<pos:position pos:line="4" pos:column="65"/></name> <modifier pos:line="4" pos:column="66">*<pos:position pos:line="4" pos:column="67"/></modifier></type></decl></parameter>)<pos:position pos:line="4" pos:column="68"/></parameter_list></function_decl></parameter>)<pos:position pos:line="4" pos:column="69"/></parameter_list>
<block pos:line="5" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">unsigned<pos:position pos:line="6" pos:column="17"/></name> <name pos:line="6" pos:column="18">long<pos:position pos:line="6" pos:column="22"/></name></type> <name pos:line="6" pos:column="23">l<pos:position pos:line="6" pos:column="24"/></name></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">!<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">list<pos:position pos:line="8" pos:column="18"/></name></expr>)<pos:position pos:line="8" pos:column="19"/></condition><then pos:line="8" pos:column="19">
		<block type="pseudo"><return pos:line="9" pos:column="17">return <expr><name pos:line="9" pos:column="24">NULL<pos:position pos:line="9" pos:column="28"/></name></expr>;<pos:position pos:line="9" pos:column="29"/></return></block></then></if>
	<for pos:line="10" pos:column="9">for <control pos:line="10" pos:column="13">(<init><expr><name pos:line="10" pos:column="14">l<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">=<pos:position pos:line="10" pos:column="17"/></operator> <literal type="number" pos:line="10" pos:column="18">1<pos:position pos:line="10" pos:column="19"/></literal></expr>;<pos:position pos:line="10" pos:column="20"/></init> <condition pos:line="10" pos:column="21">;<pos:position pos:line="10" pos:column="22"/></condition> <incr><expr><name pos:line="10" pos:column="23">l<pos:position pos:line="10" pos:column="24"/></name> <operator pos:line="10" pos:column="25">*=<pos:position pos:line="10" pos:column="27"/></operator> <literal type="number" pos:line="10" pos:column="28">2<pos:position pos:line="10" pos:column="29"/></literal></expr></incr>)<pos:position pos:line="10" pos:column="30"/></control> <block pos:line="10" pos:column="31">{
		<decl_stmt><decl><type><name pos:line="11" pos:column="17">void<pos:position pos:line="11" pos:column="21"/></name> <modifier pos:line="11" pos:column="22">*<pos:position pos:line="11" pos:column="23"/></modifier></type><name pos:line="11" pos:column="23">curr<pos:position pos:line="11" pos:column="27"/></name></decl>;<pos:position pos:line="11" pos:column="28"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="12" pos:column="17">struct<pos:position pos:line="12" pos:column="23"/></name> <name pos:line="12" pos:column="24">mergesort_sublist<pos:position pos:line="12" pos:column="41"/></name></name></type> <name pos:line="12" pos:column="42">p<pos:position pos:line="12" pos:column="43"/></name></decl>, <decl><type ref="prev"/><name pos:line="12" pos:column="45">q<pos:position pos:line="12" pos:column="46"/></name></decl>;<pos:position pos:line="12" pos:column="47"/></decl_stmt>

		<expr_stmt><expr><name><name pos:line="14" pos:column="17">p<pos:position pos:line="14" pos:column="18"/></name><operator pos:line="14" pos:column="18">.<pos:position pos:line="14" pos:column="19"/></operator><name pos:line="14" pos:column="19">ptr<pos:position pos:line="14" pos:column="22"/></name></name> <operator pos:line="14" pos:column="23">=<pos:position pos:line="14" pos:column="24"/></operator> <name pos:line="14" pos:column="25">list<pos:position pos:line="14" pos:column="29"/></name></expr>;<pos:position pos:line="14" pos:column="30"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="15" pos:column="17">q<pos:position pos:line="15" pos:column="18"/></name><operator pos:line="15" pos:column="18">.<pos:position pos:line="15" pos:column="19"/></operator><name pos:line="15" pos:column="19">ptr<pos:position pos:line="15" pos:column="22"/></name></name> <operator pos:line="15" pos:column="23">=<pos:position pos:line="15" pos:column="24"/></operator> <call><name pos:line="15" pos:column="25">get_nth_next<pos:position pos:line="15" pos:column="37"/></name><argument_list pos:line="15" pos:column="37">(<argument><expr><name><name pos:line="15" pos:column="38">p<pos:position pos:line="15" pos:column="39"/></name><operator pos:line="15" pos:column="39">.<pos:position pos:line="15" pos:column="40"/></operator><name pos:line="15" pos:column="40">ptr<pos:position pos:line="15" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="45">l<pos:position pos:line="15" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="48">get_next_fn<pos:position pos:line="15" pos:column="59"/></name></expr></argument>)<pos:position pos:line="15" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="61"/></expr_stmt>
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><operator pos:line="16" pos:column="21">!<pos:position pos:line="16" pos:column="22"/></operator><name><name pos:line="16" pos:column="22">q<pos:position pos:line="16" pos:column="23"/></name><operator pos:line="16" pos:column="23">.<pos:position pos:line="16" pos:column="24"/></operator><name pos:line="16" pos:column="24">ptr<pos:position pos:line="16" pos:column="27"/></name></name></expr>)<pos:position pos:line="16" pos:column="28"/></condition><then pos:line="16" pos:column="28">
			<block type="pseudo"><break pos:line="17" pos:column="25">break;<pos:position pos:line="17" pos:column="31"/></break></block></then></if>
		<expr_stmt><expr><name><name pos:line="18" pos:column="17">p<pos:position pos:line="18" pos:column="18"/></name><operator pos:line="18" pos:column="18">.<pos:position pos:line="18" pos:column="19"/></operator><name pos:line="18" pos:column="19">len<pos:position pos:line="18" pos:column="22"/></name></name> <operator pos:line="18" pos:column="23">=<pos:position pos:line="18" pos:column="24"/></operator> <name><name pos:line="18" pos:column="25">q<pos:position pos:line="18" pos:column="26"/></name><operator pos:line="18" pos:column="26">.<pos:position pos:line="18" pos:column="27"/></operator><name pos:line="18" pos:column="27">len<pos:position pos:line="18" pos:column="30"/></name></name> <operator pos:line="18" pos:column="31">=<pos:position pos:line="18" pos:column="32"/></operator> <name pos:line="18" pos:column="33">l<pos:position pos:line="18" pos:column="34"/></name></expr>;<pos:position pos:line="18" pos:column="35"/></expr_stmt>

		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><call><name pos:line="20" pos:column="21">compare_fn<pos:position pos:line="20" pos:column="31"/></name><argument_list pos:line="20" pos:column="31">(<argument><expr><name><name pos:line="20" pos:column="32">p<pos:position pos:line="20" pos:column="33"/></name><operator pos:line="20" pos:column="33">.<pos:position pos:line="20" pos:column="34"/></operator><name pos:line="20" pos:column="34">ptr<pos:position pos:line="20" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="39">q<pos:position pos:line="20" pos:column="40"/></name><operator pos:line="20" pos:column="40">.<pos:position pos:line="20" pos:column="41"/></operator><name pos:line="20" pos:column="41">ptr<pos:position pos:line="20" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="45"/></argument_list></call> <operator pos:line="20" pos:column="46">&gt;<pos:position pos:line="20" pos:column="50"/></operator> <literal type="number" pos:line="20" pos:column="48">0<pos:position pos:line="20" pos:column="49"/></literal></expr>)<pos:position pos:line="20" pos:column="50"/></condition><then pos:line="20" pos:column="50">
			<block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="25">list<pos:position pos:line="21" pos:column="29"/></name> <operator pos:line="21" pos:column="30">=<pos:position pos:line="21" pos:column="31"/></operator> <name pos:line="21" pos:column="32">curr<pos:position pos:line="21" pos:column="36"/></name> <operator pos:line="21" pos:column="37">=<pos:position pos:line="21" pos:column="38"/></operator> <call><name pos:line="21" pos:column="39">pop_item<pos:position pos:line="21" pos:column="47"/></name><argument_list pos:line="21" pos:column="47">(<argument><expr><operator pos:line="21" pos:column="48">&amp;<pos:position pos:line="21" pos:column="53"/></operator><name pos:line="21" pos:column="49">q<pos:position pos:line="21" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="52">get_next_fn<pos:position pos:line="21" pos:column="63"/></name></expr></argument>)<pos:position pos:line="21" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="65"/></expr_stmt></block></then>
		<else pos:line="22" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="23" pos:column="25">list<pos:position pos:line="23" pos:column="29"/></name> <operator pos:line="23" pos:column="30">=<pos:position pos:line="23" pos:column="31"/></operator> <name pos:line="23" pos:column="32">curr<pos:position pos:line="23" pos:column="36"/></name> <operator pos:line="23" pos:column="37">=<pos:position pos:line="23" pos:column="38"/></operator> <call><name pos:line="23" pos:column="39">pop_item<pos:position pos:line="23" pos:column="47"/></name><argument_list pos:line="23" pos:column="47">(<argument><expr><operator pos:line="23" pos:column="48">&amp;<pos:position pos:line="23" pos:column="53"/></operator><name pos:line="23" pos:column="49">p<pos:position pos:line="23" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="52">get_next_fn<pos:position pos:line="23" pos:column="63"/></name></expr></argument>)<pos:position pos:line="23" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="65"/></expr_stmt></block></else></if>

		<while pos:line="25" pos:column="17">while <condition pos:line="25" pos:column="23">(<expr><name><name pos:line="25" pos:column="24">p<pos:position pos:line="25" pos:column="25"/></name><operator pos:line="25" pos:column="25">.<pos:position pos:line="25" pos:column="26"/></operator><name pos:line="25" pos:column="26">ptr<pos:position pos:line="25" pos:column="29"/></name></name></expr>)<pos:position pos:line="25" pos:column="30"/></condition> <block pos:line="25" pos:column="31">{
			<while pos:line="26" pos:column="25">while <condition pos:line="26" pos:column="31">(<expr><name><name pos:line="26" pos:column="32">p<pos:position pos:line="26" pos:column="33"/></name><operator pos:line="26" pos:column="33">.<pos:position pos:line="26" pos:column="34"/></operator><name pos:line="26" pos:column="34">len<pos:position pos:line="26" pos:column="37"/></name></name> <operator pos:line="26" pos:column="38">||<pos:position pos:line="26" pos:column="40"/></operator> <name><name pos:line="26" pos:column="41">q<pos:position pos:line="26" pos:column="42"/></name><operator pos:line="26" pos:column="42">.<pos:position pos:line="26" pos:column="43"/></operator><name pos:line="26" pos:column="43">len<pos:position pos:line="26" pos:column="46"/></name></name></expr>)<pos:position pos:line="26" pos:column="47"/></condition> <block pos:line="26" pos:column="48">{
				<decl_stmt><decl><type><name pos:line="27" pos:column="33">void<pos:position pos:line="27" pos:column="37"/></name> <modifier pos:line="27" pos:column="38">*<pos:position pos:line="27" pos:column="39"/></modifier></type><name pos:line="27" pos:column="39">prev<pos:position pos:line="27" pos:column="43"/></name> <init pos:line="27" pos:column="44">= <expr><name pos:line="27" pos:column="46">curr<pos:position pos:line="27" pos:column="50"/></name></expr></init></decl>;<pos:position pos:line="27" pos:column="51"/></decl_stmt>

				<if pos:line="29" pos:column="33">if <condition pos:line="29" pos:column="36">(<expr><operator pos:line="29" pos:column="37">!<pos:position pos:line="29" pos:column="38"/></operator><name><name pos:line="29" pos:column="38">p<pos:position pos:line="29" pos:column="39"/></name><operator pos:line="29" pos:column="39">.<pos:position pos:line="29" pos:column="40"/></operator><name pos:line="29" pos:column="40">len<pos:position pos:line="29" pos:column="43"/></name></name></expr>)<pos:position pos:line="29" pos:column="44"/></condition><then pos:line="29" pos:column="44">
					<block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="41">curr<pos:position pos:line="30" pos:column="45"/></name> <operator pos:line="30" pos:column="46">=<pos:position pos:line="30" pos:column="47"/></operator> <call><name pos:line="30" pos:column="48">pop_item<pos:position pos:line="30" pos:column="56"/></name><argument_list pos:line="30" pos:column="56">(<argument><expr><operator pos:line="30" pos:column="57">&amp;<pos:position pos:line="30" pos:column="62"/></operator><name pos:line="30" pos:column="58">q<pos:position pos:line="30" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="61">get_next_fn<pos:position pos:line="30" pos:column="72"/></name></expr></argument>)<pos:position pos:line="30" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="74"/></expr_stmt></block></then>
				<elseif pos:line="31" pos:column="33">else <if pos:line="31" pos:column="38">if <condition pos:line="31" pos:column="41">(<expr><operator pos:line="31" pos:column="42">!<pos:position pos:line="31" pos:column="43"/></operator><name><name pos:line="31" pos:column="43">q<pos:position pos:line="31" pos:column="44"/></name><operator pos:line="31" pos:column="44">.<pos:position pos:line="31" pos:column="45"/></operator><name pos:line="31" pos:column="45">len<pos:position pos:line="31" pos:column="48"/></name></name></expr>)<pos:position pos:line="31" pos:column="49"/></condition><then pos:line="31" pos:column="49">
					<block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="41">curr<pos:position pos:line="32" pos:column="45"/></name> <operator pos:line="32" pos:column="46">=<pos:position pos:line="32" pos:column="47"/></operator> <call><name pos:line="32" pos:column="48">pop_item<pos:position pos:line="32" pos:column="56"/></name><argument_list pos:line="32" pos:column="56">(<argument><expr><operator pos:line="32" pos:column="57">&amp;<pos:position pos:line="32" pos:column="62"/></operator><name pos:line="32" pos:column="58">p<pos:position pos:line="32" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="61">get_next_fn<pos:position pos:line="32" pos:column="72"/></name></expr></argument>)<pos:position pos:line="32" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="74"/></expr_stmt></block></then></if></elseif>
				<elseif pos:line="33" pos:column="33">else <if pos:line="33" pos:column="38">if <condition pos:line="33" pos:column="41">(<expr><call><name pos:line="33" pos:column="42">compare_fn<pos:position pos:line="33" pos:column="52"/></name><argument_list pos:line="33" pos:column="52">(<argument><expr><name><name pos:line="33" pos:column="53">p<pos:position pos:line="33" pos:column="54"/></name><operator pos:line="33" pos:column="54">.<pos:position pos:line="33" pos:column="55"/></operator><name pos:line="33" pos:column="55">ptr<pos:position pos:line="33" pos:column="58"/></name></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="60">q<pos:position pos:line="33" pos:column="61"/></name><operator pos:line="33" pos:column="61">.<pos:position pos:line="33" pos:column="62"/></operator><name pos:line="33" pos:column="62">ptr<pos:position pos:line="33" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="66"/></argument_list></call> <operator pos:line="33" pos:column="67">&gt;<pos:position pos:line="33" pos:column="71"/></operator> <literal type="number" pos:line="33" pos:column="69">0<pos:position pos:line="33" pos:column="70"/></literal></expr>)<pos:position pos:line="33" pos:column="71"/></condition><then pos:line="33" pos:column="71">
					<block type="pseudo"><expr_stmt><expr><name pos:line="34" pos:column="41">curr<pos:position pos:line="34" pos:column="45"/></name> <operator pos:line="34" pos:column="46">=<pos:position pos:line="34" pos:column="47"/></operator> <call><name pos:line="34" pos:column="48">pop_item<pos:position pos:line="34" pos:column="56"/></name><argument_list pos:line="34" pos:column="56">(<argument><expr><operator pos:line="34" pos:column="57">&amp;<pos:position pos:line="34" pos:column="62"/></operator><name pos:line="34" pos:column="58">q<pos:position pos:line="34" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="61">get_next_fn<pos:position pos:line="34" pos:column="72"/></name></expr></argument>)<pos:position pos:line="34" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="74"/></expr_stmt></block></then></if></elseif>
				<else pos:line="35" pos:column="33">else
					<block type="pseudo"><expr_stmt><expr><name pos:line="36" pos:column="41">curr<pos:position pos:line="36" pos:column="45"/></name> <operator pos:line="36" pos:column="46">=<pos:position pos:line="36" pos:column="47"/></operator> <call><name pos:line="36" pos:column="48">pop_item<pos:position pos:line="36" pos:column="56"/></name><argument_list pos:line="36" pos:column="56">(<argument><expr><operator pos:line="36" pos:column="57">&amp;<pos:position pos:line="36" pos:column="62"/></operator><name pos:line="36" pos:column="58">p<pos:position pos:line="36" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="61">get_next_fn<pos:position pos:line="36" pos:column="72"/></name></expr></argument>)<pos:position pos:line="36" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="74"/></expr_stmt></block></else></if>
				<expr_stmt><expr><call><name pos:line="37" pos:column="33">set_next_fn<pos:position pos:line="37" pos:column="44"/></name><argument_list pos:line="37" pos:column="44">(<argument><expr><name pos:line="37" pos:column="45">prev<pos:position pos:line="37" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="51">curr<pos:position pos:line="37" pos:column="55"/></name></expr></argument>)<pos:position pos:line="37" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="57"/></expr_stmt>
			}<pos:position pos:line="38" pos:column="26"/></block></while>
			<expr_stmt><expr><name><name pos:line="39" pos:column="25">p<pos:position pos:line="39" pos:column="26"/></name><operator pos:line="39" pos:column="26">.<pos:position pos:line="39" pos:column="27"/></operator><name pos:line="39" pos:column="27">ptr<pos:position pos:line="39" pos:column="30"/></name></name> <operator pos:line="39" pos:column="31">=<pos:position pos:line="39" pos:column="32"/></operator> <name><name pos:line="39" pos:column="33">q<pos:position pos:line="39" pos:column="34"/></name><operator pos:line="39" pos:column="34">.<pos:position pos:line="39" pos:column="35"/></operator><name pos:line="39" pos:column="35">ptr<pos:position pos:line="39" pos:column="38"/></name></name></expr>;<pos:position pos:line="39" pos:column="39"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="40" pos:column="25">p<pos:position pos:line="40" pos:column="26"/></name><operator pos:line="40" pos:column="26">.<pos:position pos:line="40" pos:column="27"/></operator><name pos:line="40" pos:column="27">len<pos:position pos:line="40" pos:column="30"/></name></name> <operator pos:line="40" pos:column="31">=<pos:position pos:line="40" pos:column="32"/></operator> <name pos:line="40" pos:column="33">l<pos:position pos:line="40" pos:column="34"/></name></expr>;<pos:position pos:line="40" pos:column="35"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="41" pos:column="25">q<pos:position pos:line="41" pos:column="26"/></name><operator pos:line="41" pos:column="26">.<pos:position pos:line="41" pos:column="27"/></operator><name pos:line="41" pos:column="27">ptr<pos:position pos:line="41" pos:column="30"/></name></name> <operator pos:line="41" pos:column="31">=<pos:position pos:line="41" pos:column="32"/></operator> <call><name pos:line="41" pos:column="33">get_nth_next<pos:position pos:line="41" pos:column="45"/></name><argument_list pos:line="41" pos:column="45">(<argument><expr><name><name pos:line="41" pos:column="46">p<pos:position pos:line="41" pos:column="47"/></name><operator pos:line="41" pos:column="47">.<pos:position pos:line="41" pos:column="48"/></operator><name pos:line="41" pos:column="48">ptr<pos:position pos:line="41" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="53">l<pos:position pos:line="41" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="56">get_next_fn<pos:position pos:line="41" pos:column="67"/></name></expr></argument>)<pos:position pos:line="41" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="69"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="42" pos:column="25">q<pos:position pos:line="42" pos:column="26"/></name><operator pos:line="42" pos:column="26">.<pos:position pos:line="42" pos:column="27"/></operator><name pos:line="42" pos:column="27">len<pos:position pos:line="42" pos:column="30"/></name></name> <operator pos:line="42" pos:column="31">=<pos:position pos:line="42" pos:column="32"/></operator> <ternary><condition><expr><name><name pos:line="42" pos:column="33">q<pos:position pos:line="42" pos:column="34"/></name><operator pos:line="42" pos:column="34">.<pos:position pos:line="42" pos:column="35"/></operator><name pos:line="42" pos:column="35">ptr<pos:position pos:line="42" pos:column="38"/></name></name></expr> ?<pos:position pos:line="42" pos:column="40"/></condition><then pos:line="42" pos:column="40"> <expr><name pos:line="42" pos:column="41">l<pos:position pos:line="42" pos:column="42"/></name></expr> <pos:position pos:line="42" pos:column="43"/></then><else pos:line="42" pos:column="43">: <expr><literal type="number" pos:line="42" pos:column="45">0<pos:position pos:line="42" pos:column="46"/></literal></expr></else></ternary></expr>;<pos:position pos:line="42" pos:column="47"/></expr_stmt>

		}<pos:position pos:line="44" pos:column="18"/></block></while>
		<expr_stmt><expr><call><name pos:line="45" pos:column="17">set_next_fn<pos:position pos:line="45" pos:column="28"/></name><argument_list pos:line="45" pos:column="28">(<argument><expr><name pos:line="45" pos:column="29">curr<pos:position pos:line="45" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="35">NULL<pos:position pos:line="45" pos:column="39"/></name></expr></argument>)<pos:position pos:line="45" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="46" pos:column="10"/></block></for>
	<return pos:line="47" pos:column="9">return <expr><name pos:line="47" pos:column="16">list<pos:position pos:line="47" pos:column="20"/></name></expr>;<pos:position pos:line="47" pos:column="21"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

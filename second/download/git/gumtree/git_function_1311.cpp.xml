<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1311.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">verify_bundle<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><name><name pos:line="1" pos:column="19">struct<pos:position pos:line="1" pos:column="25"/></name> <name pos:line="1" pos:column="26">bundle_header<pos:position pos:line="1" pos:column="39"/></name></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">header<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">int<pos:position pos:line="1" pos:column="52"/></name></type> <name pos:line="1" pos:column="53">verbose<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<comment type="block" pos:line="3" pos:column="9">/*
	 * Do fast check, then if any prereqs are missing then go line by line
	 * to be verbose about the errors
	 */</comment>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">ref_list<pos:position pos:line="7" pos:column="24"/></name></name> <modifier pos:line="7" pos:column="25">*<pos:position pos:line="7" pos:column="26"/></modifier></type><name pos:line="7" pos:column="26">p<pos:position pos:line="7" pos:column="27"/></name> <init pos:line="7" pos:column="28">= <expr><operator pos:line="7" pos:column="30">&amp;<pos:position pos:line="7" pos:column="35"/></operator><name><name pos:line="7" pos:column="31">header<pos:position pos:line="7" pos:column="37"/></name><operator pos:line="7" pos:column="37">-&gt;<pos:position pos:line="7" pos:column="42"/></operator><name pos:line="7" pos:column="39">prerequisites<pos:position pos:line="7" pos:column="52"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="53"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">rev_info<pos:position pos:line="8" pos:column="24"/></name></name></type> <name pos:line="8" pos:column="25">revs<pos:position pos:line="8" pos:column="29"/></name></decl>;<pos:position pos:line="8" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="9" pos:column="9">const<pos:position pos:line="9" pos:column="14"/></specifier> <name pos:line="9" pos:column="15">char<pos:position pos:line="9" pos:column="19"/></name> <modifier pos:line="9" pos:column="20">*<pos:position pos:line="9" pos:column="21"/></modifier></type><name><name pos:line="9" pos:column="21">argv<pos:position pos:line="9" pos:column="25"/></name><index pos:line="9" pos:column="25">[]<pos:position pos:line="9" pos:column="27"/></index></name> <init pos:line="9" pos:column="28">= <expr><block pos:line="9" pos:column="30">{<expr><name pos:line="9" pos:column="31">NULL<pos:position pos:line="9" pos:column="35"/></name></expr>, <expr><literal type="string" pos:line="9" pos:column="37">"--all"<pos:position pos:line="9" pos:column="44"/></literal></expr>, <expr><name pos:line="9" pos:column="46">NULL<pos:position pos:line="9" pos:column="50"/></name></expr>}<pos:position pos:line="9" pos:column="51"/></block></expr></init></decl>;<pos:position pos:line="9" pos:column="52"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="10" pos:column="9">struct<pos:position pos:line="10" pos:column="15"/></name> <name pos:line="10" pos:column="16">object_array<pos:position pos:line="10" pos:column="28"/></name></name></type> <name pos:line="10" pos:column="29">refs<pos:position pos:line="10" pos:column="33"/></name></decl>;<pos:position pos:line="10" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="11" pos:column="9">struct<pos:position pos:line="11" pos:column="15"/></name> <name pos:line="11" pos:column="16">commit<pos:position pos:line="11" pos:column="22"/></name></name> <modifier pos:line="11" pos:column="23">*<pos:position pos:line="11" pos:column="24"/></modifier></type><name pos:line="11" pos:column="24">commit<pos:position pos:line="11" pos:column="30"/></name></decl>;<pos:position pos:line="11" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">int<pos:position pos:line="12" pos:column="12"/></name></type> <name pos:line="12" pos:column="13">i<pos:position pos:line="12" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="12" pos:column="16">ret<pos:position pos:line="12" pos:column="19"/></name> <init pos:line="12" pos:column="20">= <expr><literal type="number" pos:line="12" pos:column="22">0<pos:position pos:line="12" pos:column="23"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="12" pos:column="25">req_nr<pos:position pos:line="12" pos:column="31"/></name></decl>;<pos:position pos:line="12" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="13" pos:column="9">const<pos:position pos:line="13" pos:column="14"/></specifier> <name pos:line="13" pos:column="15">char<pos:position pos:line="13" pos:column="19"/></name> <modifier pos:line="13" pos:column="20">*<pos:position pos:line="13" pos:column="21"/></modifier></type><name pos:line="13" pos:column="21">message<pos:position pos:line="13" pos:column="28"/></name> <init pos:line="13" pos:column="29">= <expr><call><name pos:line="13" pos:column="31">_<pos:position pos:line="13" pos:column="32"/></name><argument_list pos:line="13" pos:column="32">(<argument><expr><literal type="string" pos:line="13" pos:column="33">"Repository lacks these prerequisite commits:"<pos:position pos:line="13" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="80"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="81"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="15" pos:column="9">init_revisions<pos:position pos:line="15" pos:column="23"/></name><argument_list pos:line="15" pos:column="23">(<argument><expr><operator pos:line="15" pos:column="24">&amp;<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="25">revs<pos:position pos:line="15" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="31">NULL<pos:position pos:line="15" pos:column="35"/></name></expr></argument>)<pos:position pos:line="15" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="37"/></expr_stmt>
	<for pos:line="16" pos:column="9">for <control pos:line="16" pos:column="13">(<init><expr><name pos:line="16" pos:column="14">i<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">=<pos:position pos:line="16" pos:column="17"/></operator> <literal type="number" pos:line="16" pos:column="18">0<pos:position pos:line="16" pos:column="19"/></literal></expr>;<pos:position pos:line="16" pos:column="20"/></init> <condition><expr><name pos:line="16" pos:column="21">i<pos:position pos:line="16" pos:column="22"/></name> <operator pos:line="16" pos:column="23">&lt;<pos:position pos:line="16" pos:column="27"/></operator> <name><name pos:line="16" pos:column="25">p<pos:position pos:line="16" pos:column="26"/></name><operator pos:line="16" pos:column="26">-&gt;<pos:position pos:line="16" pos:column="31"/></operator><name pos:line="16" pos:column="28">nr<pos:position pos:line="16" pos:column="30"/></name></name></expr>;<pos:position pos:line="16" pos:column="31"/></condition> <incr><expr><name pos:line="16" pos:column="32">i<pos:position pos:line="16" pos:column="33"/></name><operator pos:line="16" pos:column="33">++<pos:position pos:line="16" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="16" pos:column="36"/></control> <block pos:line="16" pos:column="37">{
		<decl_stmt><decl><type><name><name pos:line="17" pos:column="17">struct<pos:position pos:line="17" pos:column="23"/></name> <name pos:line="17" pos:column="24">ref_list_entry<pos:position pos:line="17" pos:column="38"/></name></name> <modifier pos:line="17" pos:column="39">*<pos:position pos:line="17" pos:column="40"/></modifier></type><name pos:line="17" pos:column="40">e<pos:position pos:line="17" pos:column="41"/></name> <init pos:line="17" pos:column="42">= <expr><name><name pos:line="17" pos:column="44">p<pos:position pos:line="17" pos:column="45"/></name><operator pos:line="17" pos:column="45">-&gt;<pos:position pos:line="17" pos:column="50"/></operator><name pos:line="17" pos:column="47">list<pos:position pos:line="17" pos:column="51"/></name></name> <operator pos:line="17" pos:column="52">+<pos:position pos:line="17" pos:column="53"/></operator> <name pos:line="17" pos:column="54">i<pos:position pos:line="17" pos:column="55"/></name></expr></init></decl>;<pos:position pos:line="17" pos:column="56"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="18" pos:column="17">struct<pos:position pos:line="18" pos:column="23"/></name> <name pos:line="18" pos:column="24">object<pos:position pos:line="18" pos:column="30"/></name></name> <modifier pos:line="18" pos:column="31">*<pos:position pos:line="18" pos:column="32"/></modifier></type><name pos:line="18" pos:column="32">o<pos:position pos:line="18" pos:column="33"/></name> <init pos:line="18" pos:column="34">= <expr><call><name pos:line="18" pos:column="36">parse_object<pos:position pos:line="18" pos:column="48"/></name><argument_list pos:line="18" pos:column="48">(<argument><expr><name><name pos:line="18" pos:column="49">e<pos:position pos:line="18" pos:column="50"/></name><operator pos:line="18" pos:column="50">-&gt;<pos:position pos:line="18" pos:column="55"/></operator><name pos:line="18" pos:column="52">sha1<pos:position pos:line="18" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="18" pos:column="58"/></decl_stmt>
		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><name pos:line="19" pos:column="21">o<pos:position pos:line="19" pos:column="22"/></name></expr>)<pos:position pos:line="19" pos:column="23"/></condition><then pos:line="19" pos:column="23"> <block pos:line="19" pos:column="24">{
			<expr_stmt><expr><name><name pos:line="20" pos:column="25">o<pos:position pos:line="20" pos:column="26"/></name><operator pos:line="20" pos:column="26">-&gt;<pos:position pos:line="20" pos:column="31"/></operator><name pos:line="20" pos:column="28">flags<pos:position pos:line="20" pos:column="33"/></name></name> <operator pos:line="20" pos:column="34">|=<pos:position pos:line="20" pos:column="36"/></operator> <name pos:line="20" pos:column="37">PREREQ_MARK<pos:position pos:line="20" pos:column="48"/></name></expr>;<pos:position pos:line="20" pos:column="49"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="21" pos:column="25">add_pending_object<pos:position pos:line="21" pos:column="43"/></name><argument_list pos:line="21" pos:column="43">(<argument><expr><operator pos:line="21" pos:column="44">&amp;<pos:position pos:line="21" pos:column="49"/></operator><name pos:line="21" pos:column="45">revs<pos:position pos:line="21" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="51">o<pos:position pos:line="21" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="54">e<pos:position pos:line="21" pos:column="55"/></name><operator pos:line="21" pos:column="55">-&gt;<pos:position pos:line="21" pos:column="60"/></operator><name pos:line="21" pos:column="57">name<pos:position pos:line="21" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="63"/></expr_stmt>
			<continue pos:line="22" pos:column="25">continue;<pos:position pos:line="22" pos:column="34"/></continue>
		}<pos:position pos:line="23" pos:column="18"/></block></then></if>
		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><operator pos:line="24" pos:column="21">++<pos:position pos:line="24" pos:column="23"/></operator><name pos:line="24" pos:column="23">ret<pos:position pos:line="24" pos:column="26"/></name> <operator pos:line="24" pos:column="27">==<pos:position pos:line="24" pos:column="29"/></operator> <literal type="number" pos:line="24" pos:column="30">1<pos:position pos:line="24" pos:column="31"/></literal></expr>)<pos:position pos:line="24" pos:column="32"/></condition><then pos:line="24" pos:column="32">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="25">error<pos:position pos:line="25" pos:column="30"/></name><argument_list pos:line="25" pos:column="30">(<argument><expr><literal type="string" pos:line="25" pos:column="31">"%s"<pos:position pos:line="25" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="37">message<pos:position pos:line="25" pos:column="44"/></name></expr></argument>)<pos:position pos:line="25" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="46"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="26" pos:column="17">error<pos:position pos:line="26" pos:column="22"/></name><argument_list pos:line="26" pos:column="22">(<argument><expr><literal type="string" pos:line="26" pos:column="23">"%s %s"<pos:position pos:line="26" pos:column="30"/></literal></expr></argument>, <argument><expr><call><name pos:line="26" pos:column="32">sha1_to_hex<pos:position pos:line="26" pos:column="43"/></name><argument_list pos:line="26" pos:column="43">(<argument><expr><name><name pos:line="26" pos:column="44">e<pos:position pos:line="26" pos:column="45"/></name><operator pos:line="26" pos:column="45">-&gt;<pos:position pos:line="26" pos:column="50"/></operator><name pos:line="26" pos:column="47">sha1<pos:position pos:line="26" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="54">e<pos:position pos:line="26" pos:column="55"/></name><operator pos:line="26" pos:column="55">-&gt;<pos:position pos:line="26" pos:column="60"/></operator><name pos:line="26" pos:column="57">name<pos:position pos:line="26" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="63"/></expr_stmt>
	}<pos:position pos:line="27" pos:column="10"/></block></for>
	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name><name pos:line="28" pos:column="13">revs<pos:position pos:line="28" pos:column="17"/></name><operator pos:line="28" pos:column="17">.<pos:position pos:line="28" pos:column="18"/></operator><name pos:line="28" pos:column="18">pending<pos:position pos:line="28" pos:column="25"/></name><operator pos:line="28" pos:column="25">.<pos:position pos:line="28" pos:column="26"/></operator><name pos:line="28" pos:column="26">nr<pos:position pos:line="28" pos:column="28"/></name></name> <operator pos:line="28" pos:column="29">!=<pos:position pos:line="28" pos:column="31"/></operator> <name><name pos:line="28" pos:column="32">p<pos:position pos:line="28" pos:column="33"/></name><operator pos:line="28" pos:column="33">-&gt;<pos:position pos:line="28" pos:column="38"/></operator><name pos:line="28" pos:column="35">nr<pos:position pos:line="28" pos:column="37"/></name></name></expr>)<pos:position pos:line="28" pos:column="38"/></condition><then pos:line="28" pos:column="38">
		<block type="pseudo"><return pos:line="29" pos:column="17">return <expr><name pos:line="29" pos:column="24">ret<pos:position pos:line="29" pos:column="27"/></name></expr>;<pos:position pos:line="29" pos:column="28"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="30" pos:column="9">req_nr<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">=<pos:position pos:line="30" pos:column="17"/></operator> <name><name pos:line="30" pos:column="18">revs<pos:position pos:line="30" pos:column="22"/></name><operator pos:line="30" pos:column="22">.<pos:position pos:line="30" pos:column="23"/></operator><name pos:line="30" pos:column="23">pending<pos:position pos:line="30" pos:column="30"/></name><operator pos:line="30" pos:column="30">.<pos:position pos:line="30" pos:column="31"/></operator><name pos:line="30" pos:column="31">nr<pos:position pos:line="30" pos:column="33"/></name></name></expr>;<pos:position pos:line="30" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="31" pos:column="9">setup_revisions<pos:position pos:line="31" pos:column="24"/></name><argument_list pos:line="31" pos:column="24">(<argument><expr><literal type="number" pos:line="31" pos:column="25">2<pos:position pos:line="31" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="28">argv<pos:position pos:line="31" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="34">&amp;<pos:position pos:line="31" pos:column="39"/></operator><name pos:line="31" pos:column="35">revs<pos:position pos:line="31" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="41">NULL<pos:position pos:line="31" pos:column="45"/></name></expr></argument>)<pos:position pos:line="31" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="47"/></expr_stmt>

	<expr_stmt><expr><name pos:line="33" pos:column="9">refs<pos:position pos:line="33" pos:column="13"/></name> <operator pos:line="33" pos:column="14">=<pos:position pos:line="33" pos:column="15"/></operator> <name><name pos:line="33" pos:column="16">revs<pos:position pos:line="33" pos:column="20"/></name><operator pos:line="33" pos:column="20">.<pos:position pos:line="33" pos:column="21"/></operator><name pos:line="33" pos:column="21">pending<pos:position pos:line="33" pos:column="28"/></name></name></expr>;<pos:position pos:line="33" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="34" pos:column="9">revs<pos:position pos:line="34" pos:column="13"/></name><operator pos:line="34" pos:column="13">.<pos:position pos:line="34" pos:column="14"/></operator><name pos:line="34" pos:column="14">leak_pending<pos:position pos:line="34" pos:column="26"/></name></name> <operator pos:line="34" pos:column="27">=<pos:position pos:line="34" pos:column="28"/></operator> <literal type="number" pos:line="34" pos:column="29">1<pos:position pos:line="34" pos:column="30"/></literal></expr>;<pos:position pos:line="34" pos:column="31"/></expr_stmt>

	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><call><name pos:line="36" pos:column="13">prepare_revision_walk<pos:position pos:line="36" pos:column="34"/></name><argument_list pos:line="36" pos:column="34">(<argument><expr><operator pos:line="36" pos:column="35">&amp;<pos:position pos:line="36" pos:column="40"/></operator><name pos:line="36" pos:column="36">revs<pos:position pos:line="36" pos:column="40"/></name></expr></argument>)<pos:position pos:line="36" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="42"/></condition><then pos:line="36" pos:column="42">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="17">die<pos:position pos:line="37" pos:column="20"/></name><argument_list pos:line="37" pos:column="20">(<argument><expr><call><name pos:line="37" pos:column="21">_<pos:position pos:line="37" pos:column="22"/></name><argument_list pos:line="37" pos:column="22">(<argument><expr><literal type="string" pos:line="37" pos:column="23">"revision walk setup failed"<pos:position pos:line="37" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="37" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="54"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="39" pos:column="9">i<pos:position pos:line="39" pos:column="10"/></name> <operator pos:line="39" pos:column="11">=<pos:position pos:line="39" pos:column="12"/></operator> <name pos:line="39" pos:column="13">req_nr<pos:position pos:line="39" pos:column="19"/></name></expr>;<pos:position pos:line="39" pos:column="20"/></expr_stmt>
	<while pos:line="40" pos:column="9">while <condition pos:line="40" pos:column="15">(<expr><name pos:line="40" pos:column="16">i<pos:position pos:line="40" pos:column="17"/></name> <operator pos:line="40" pos:column="18">&amp;&amp;<pos:position pos:line="40" pos:column="28"/></operator> <operator pos:line="40" pos:column="21">(<pos:position pos:line="40" pos:column="22"/></operator><name pos:line="40" pos:column="22">commit<pos:position pos:line="40" pos:column="28"/></name> <operator pos:line="40" pos:column="29">=<pos:position pos:line="40" pos:column="30"/></operator> <call><name pos:line="40" pos:column="31">get_revision<pos:position pos:line="40" pos:column="43"/></name><argument_list pos:line="40" pos:column="43">(<argument><expr><operator pos:line="40" pos:column="44">&amp;<pos:position pos:line="40" pos:column="49"/></operator><name pos:line="40" pos:column="45">revs<pos:position pos:line="40" pos:column="49"/></name></expr></argument>)<pos:position pos:line="40" pos:column="50"/></argument_list></call><operator pos:line="40" pos:column="50">)<pos:position pos:line="40" pos:column="51"/></operator></expr>)<pos:position pos:line="40" pos:column="52"/></condition>
		<block type="pseudo"><if pos:line="41" pos:column="17">if <condition pos:line="41" pos:column="20">(<expr><name><name pos:line="41" pos:column="21">commit<pos:position pos:line="41" pos:column="27"/></name><operator pos:line="41" pos:column="27">-&gt;<pos:position pos:line="41" pos:column="32"/></operator><name pos:line="41" pos:column="29">object<pos:position pos:line="41" pos:column="35"/></name><operator pos:line="41" pos:column="35">.<pos:position pos:line="41" pos:column="36"/></operator><name pos:line="41" pos:column="36">flags<pos:position pos:line="41" pos:column="41"/></name></name> <operator pos:line="41" pos:column="42">&amp;<pos:position pos:line="41" pos:column="47"/></operator> <name pos:line="41" pos:column="44">PREREQ_MARK<pos:position pos:line="41" pos:column="55"/></name></expr>)<pos:position pos:line="41" pos:column="56"/></condition><then pos:line="41" pos:column="56">
			<block type="pseudo"><expr_stmt><expr><name pos:line="42" pos:column="25">i<pos:position pos:line="42" pos:column="26"/></name><operator pos:line="42" pos:column="26">--<pos:position pos:line="42" pos:column="28"/></operator></expr>;<pos:position pos:line="42" pos:column="29"/></expr_stmt></block></then></if></block></while>

	<for pos:line="44" pos:column="9">for <control pos:line="44" pos:column="13">(<init><expr><name pos:line="44" pos:column="14">i<pos:position pos:line="44" pos:column="15"/></name> <operator pos:line="44" pos:column="16">=<pos:position pos:line="44" pos:column="17"/></operator> <literal type="number" pos:line="44" pos:column="18">0<pos:position pos:line="44" pos:column="19"/></literal></expr>;<pos:position pos:line="44" pos:column="20"/></init> <condition><expr><name pos:line="44" pos:column="21">i<pos:position pos:line="44" pos:column="22"/></name> <operator pos:line="44" pos:column="23">&lt;<pos:position pos:line="44" pos:column="27"/></operator> <name pos:line="44" pos:column="25">req_nr<pos:position pos:line="44" pos:column="31"/></name></expr>;<pos:position pos:line="44" pos:column="32"/></condition> <incr><expr><name pos:line="44" pos:column="33">i<pos:position pos:line="44" pos:column="34"/></name><operator pos:line="44" pos:column="34">++<pos:position pos:line="44" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="44" pos:column="37"/></control>
		<block type="pseudo"><if pos:line="45" pos:column="17">if <condition pos:line="45" pos:column="20">(<expr><operator pos:line="45" pos:column="21">!<pos:position pos:line="45" pos:column="22"/></operator><operator pos:line="45" pos:column="22">(<pos:position pos:line="45" pos:column="23"/></operator><name><name pos:line="45" pos:column="23">refs<pos:position pos:line="45" pos:column="27"/></name><operator pos:line="45" pos:column="27">.<pos:position pos:line="45" pos:column="28"/></operator><name pos:line="45" pos:column="28">objects<pos:position pos:line="45" pos:column="35"/></name><index pos:line="45" pos:column="35">[<expr><name pos:line="45" pos:column="36">i<pos:position pos:line="45" pos:column="37"/></name></expr>]<pos:position pos:line="45" pos:column="38"/></index></name><operator pos:line="45" pos:column="38">.<pos:position pos:line="45" pos:column="39"/></operator><name><name pos:line="45" pos:column="39">item<pos:position pos:line="45" pos:column="43"/></name><operator pos:line="45" pos:column="43">-&gt;<pos:position pos:line="45" pos:column="48"/></operator><name pos:line="45" pos:column="45">flags<pos:position pos:line="45" pos:column="50"/></name></name> <operator pos:line="45" pos:column="51">&amp;<pos:position pos:line="45" pos:column="56"/></operator> <name pos:line="45" pos:column="53">SHOWN<pos:position pos:line="45" pos:column="58"/></name><operator pos:line="45" pos:column="58">)<pos:position pos:line="45" pos:column="59"/></operator></expr>)<pos:position pos:line="45" pos:column="60"/></condition><then pos:line="45" pos:column="60"> <block pos:line="45" pos:column="61">{
			<if pos:line="46" pos:column="25">if <condition pos:line="46" pos:column="28">(<expr><operator pos:line="46" pos:column="29">++<pos:position pos:line="46" pos:column="31"/></operator><name pos:line="46" pos:column="31">ret<pos:position pos:line="46" pos:column="34"/></name> <operator pos:line="46" pos:column="35">==<pos:position pos:line="46" pos:column="37"/></operator> <literal type="number" pos:line="46" pos:column="38">1<pos:position pos:line="46" pos:column="39"/></literal></expr>)<pos:position pos:line="46" pos:column="40"/></condition><then pos:line="46" pos:column="40">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="47" pos:column="33">error<pos:position pos:line="47" pos:column="38"/></name><argument_list pos:line="47" pos:column="38">(<argument><expr><literal type="string" pos:line="47" pos:column="39">"%s"<pos:position pos:line="47" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="45">message<pos:position pos:line="47" pos:column="52"/></name></expr></argument>)<pos:position pos:line="47" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="54"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="48" pos:column="25">error<pos:position pos:line="48" pos:column="30"/></name><argument_list pos:line="48" pos:column="30">(<argument><expr><literal type="string" pos:line="48" pos:column="31">"%s %s"<pos:position pos:line="48" pos:column="38"/></literal></expr></argument>, <argument><expr><call><name pos:line="48" pos:column="40">oid_to_hex<pos:position pos:line="48" pos:column="50"/></name><argument_list pos:line="48" pos:column="50">(<argument><expr><operator pos:line="48" pos:column="51">&amp;<pos:position pos:line="48" pos:column="56"/></operator><name><name pos:line="48" pos:column="52">refs<pos:position pos:line="48" pos:column="56"/></name><operator pos:line="48" pos:column="56">.<pos:position pos:line="48" pos:column="57"/></operator><name pos:line="48" pos:column="57">objects<pos:position pos:line="48" pos:column="64"/></name><index pos:line="48" pos:column="64">[<expr><name pos:line="48" pos:column="65">i<pos:position pos:line="48" pos:column="66"/></name></expr>]<pos:position pos:line="48" pos:column="67"/></index></name><operator pos:line="48" pos:column="67">.<pos:position pos:line="48" pos:column="68"/></operator><name><name pos:line="48" pos:column="68">item<pos:position pos:line="48" pos:column="72"/></name><operator pos:line="48" pos:column="72">-&gt;<pos:position pos:line="48" pos:column="77"/></operator><name pos:line="48" pos:column="74">oid<pos:position pos:line="48" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="78"/></argument_list></call></expr></argument>,
				<argument><expr><name><name pos:line="49" pos:column="33">refs<pos:position pos:line="49" pos:column="37"/></name><operator pos:line="49" pos:column="37">.<pos:position pos:line="49" pos:column="38"/></operator><name pos:line="49" pos:column="38">objects<pos:position pos:line="49" pos:column="45"/></name><index pos:line="49" pos:column="45">[<expr><name pos:line="49" pos:column="46">i<pos:position pos:line="49" pos:column="47"/></name></expr>]<pos:position pos:line="49" pos:column="48"/></index></name><operator pos:line="49" pos:column="48">.<pos:position pos:line="49" pos:column="49"/></operator><name pos:line="49" pos:column="49">name<pos:position pos:line="49" pos:column="53"/></name></expr></argument>)<pos:position pos:line="49" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="55"/></expr_stmt>
		}<pos:position pos:line="50" pos:column="18"/></block></then></if></block></for>

	<expr_stmt><expr><call><name pos:line="52" pos:column="9">clear_commit_marks_for_object_array<pos:position pos:line="52" pos:column="44"/></name><argument_list pos:line="52" pos:column="44">(<argument><expr><operator pos:line="52" pos:column="45">&amp;<pos:position pos:line="52" pos:column="50"/></operator><name pos:line="52" pos:column="46">refs<pos:position pos:line="52" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="52">ALL_REV_FLAGS<pos:position pos:line="52" pos:column="65"/></name></expr></argument>)<pos:position pos:line="52" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="67"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="53" pos:column="9">free<pos:position pos:line="53" pos:column="13"/></name><argument_list pos:line="53" pos:column="13">(<argument><expr><name><name pos:line="53" pos:column="14">refs<pos:position pos:line="53" pos:column="18"/></name><operator pos:line="53" pos:column="18">.<pos:position pos:line="53" pos:column="19"/></operator><name pos:line="53" pos:column="19">objects<pos:position pos:line="53" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="28"/></expr_stmt>

	<if pos:line="55" pos:column="9">if <condition pos:line="55" pos:column="12">(<expr><name pos:line="55" pos:column="13">verbose<pos:position pos:line="55" pos:column="20"/></name></expr>)<pos:position pos:line="55" pos:column="21"/></condition><then pos:line="55" pos:column="21"> <block pos:line="55" pos:column="22">{
		<decl_stmt><decl><type><name><name pos:line="56" pos:column="17">struct<pos:position pos:line="56" pos:column="23"/></name> <name pos:line="56" pos:column="24">ref_list<pos:position pos:line="56" pos:column="32"/></name></name> <modifier pos:line="56" pos:column="33">*<pos:position pos:line="56" pos:column="34"/></modifier></type><name pos:line="56" pos:column="34">r<pos:position pos:line="56" pos:column="35"/></name></decl>;<pos:position pos:line="56" pos:column="36"/></decl_stmt>

		<expr_stmt><expr><name pos:line="58" pos:column="17">r<pos:position pos:line="58" pos:column="18"/></name> <operator pos:line="58" pos:column="19">=<pos:position pos:line="58" pos:column="20"/></operator> <operator pos:line="58" pos:column="21">&amp;<pos:position pos:line="58" pos:column="26"/></operator><name><name pos:line="58" pos:column="22">header<pos:position pos:line="58" pos:column="28"/></name><operator pos:line="58" pos:column="28">-&gt;<pos:position pos:line="58" pos:column="33"/></operator><name pos:line="58" pos:column="30">references<pos:position pos:line="58" pos:column="40"/></name></name></expr>;<pos:position pos:line="58" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="59" pos:column="17">printf_ln<pos:position pos:line="59" pos:column="26"/></name><argument_list pos:line="59" pos:column="26">(<argument><expr><call><name pos:line="59" pos:column="27">Q_<pos:position pos:line="59" pos:column="29"/></name><argument_list pos:line="59" pos:column="29">(<argument><expr><literal type="string" pos:line="59" pos:column="30">"The bundle contains this ref:"<pos:position pos:line="59" pos:column="61"/></literal></expr></argument>,
			     <argument><expr><literal type="string" pos:line="60" pos:column="30">"The bundle contains these %d refs:"<pos:position pos:line="60" pos:column="66"/></literal></expr></argument>,
			     <argument><expr><name><name pos:line="61" pos:column="30">r<pos:position pos:line="61" pos:column="31"/></name><operator pos:line="61" pos:column="31">-&gt;<pos:position pos:line="61" pos:column="36"/></operator><name pos:line="61" pos:column="33">nr<pos:position pos:line="61" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="36"/></argument_list></call></expr></argument>,
			  <argument><expr><name><name pos:line="62" pos:column="27">r<pos:position pos:line="62" pos:column="28"/></name><operator pos:line="62" pos:column="28">-&gt;<pos:position pos:line="62" pos:column="33"/></operator><name pos:line="62" pos:column="30">nr<pos:position pos:line="62" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="63" pos:column="17">list_refs<pos:position pos:line="63" pos:column="26"/></name><argument_list pos:line="63" pos:column="26">(<argument><expr><name pos:line="63" pos:column="27">r<pos:position pos:line="63" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="63" pos:column="30">0<pos:position pos:line="63" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="63" pos:column="33">NULL<pos:position pos:line="63" pos:column="37"/></name></expr></argument>)<pos:position pos:line="63" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><name pos:line="64" pos:column="17">r<pos:position pos:line="64" pos:column="18"/></name> <operator pos:line="64" pos:column="19">=<pos:position pos:line="64" pos:column="20"/></operator> <operator pos:line="64" pos:column="21">&amp;<pos:position pos:line="64" pos:column="26"/></operator><name><name pos:line="64" pos:column="22">header<pos:position pos:line="64" pos:column="28"/></name><operator pos:line="64" pos:column="28">-&gt;<pos:position pos:line="64" pos:column="33"/></operator><name pos:line="64" pos:column="30">prerequisites<pos:position pos:line="64" pos:column="43"/></name></name></expr>;<pos:position pos:line="64" pos:column="44"/></expr_stmt>
		<if pos:line="65" pos:column="17">if <condition pos:line="65" pos:column="20">(<expr><operator pos:line="65" pos:column="21">!<pos:position pos:line="65" pos:column="22"/></operator><name><name pos:line="65" pos:column="22">r<pos:position pos:line="65" pos:column="23"/></name><operator pos:line="65" pos:column="23">-&gt;<pos:position pos:line="65" pos:column="28"/></operator><name pos:line="65" pos:column="25">nr<pos:position pos:line="65" pos:column="27"/></name></name></expr>)<pos:position pos:line="65" pos:column="28"/></condition><then pos:line="65" pos:column="28"> <block pos:line="65" pos:column="29">{
			<expr_stmt><expr><call><name pos:line="66" pos:column="25">printf_ln<pos:position pos:line="66" pos:column="34"/></name><argument_list pos:line="66" pos:column="34">(<argument><expr><call><name pos:line="66" pos:column="35">_<pos:position pos:line="66" pos:column="36"/></name><argument_list pos:line="66" pos:column="36">(<argument><expr><literal type="string" pos:line="66" pos:column="37">"The bundle records a complete history."<pos:position pos:line="66" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="66" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="80"/></expr_stmt>
		}<pos:position pos:line="67" pos:column="18"/></block></then> <else pos:line="67" pos:column="19">else <block pos:line="67" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="68" pos:column="25">printf_ln<pos:position pos:line="68" pos:column="34"/></name><argument_list pos:line="68" pos:column="34">(<argument><expr><call><name pos:line="68" pos:column="35">Q_<pos:position pos:line="68" pos:column="37"/></name><argument_list pos:line="68" pos:column="37">(<argument><expr><literal type="string" pos:line="68" pos:column="38">"The bundle requires this ref:"<pos:position pos:line="68" pos:column="69"/></literal></expr></argument>,
				     <argument><expr><literal type="string" pos:line="69" pos:column="38">"The bundle requires these %d refs:"<pos:position pos:line="69" pos:column="74"/></literal></expr></argument>,
				     <argument><expr><name><name pos:line="70" pos:column="38">r<pos:position pos:line="70" pos:column="39"/></name><operator pos:line="70" pos:column="39">-&gt;<pos:position pos:line="70" pos:column="44"/></operator><name pos:line="70" pos:column="41">nr<pos:position pos:line="70" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="44"/></argument_list></call></expr></argument>,
				  <argument><expr><name><name pos:line="71" pos:column="35">r<pos:position pos:line="71" pos:column="36"/></name><operator pos:line="71" pos:column="36">-&gt;<pos:position pos:line="71" pos:column="41"/></operator><name pos:line="71" pos:column="38">nr<pos:position pos:line="71" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="42"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="72" pos:column="25">list_refs<pos:position pos:line="72" pos:column="34"/></name><argument_list pos:line="72" pos:column="34">(<argument><expr><name pos:line="72" pos:column="35">r<pos:position pos:line="72" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="72" pos:column="38">0<pos:position pos:line="72" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="72" pos:column="41">NULL<pos:position pos:line="72" pos:column="45"/></name></expr></argument>)<pos:position pos:line="72" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="47"/></expr_stmt>
		}<pos:position pos:line="73" pos:column="18"/></block></else></if>
	}<pos:position pos:line="74" pos:column="10"/></block></then></if>
	<return pos:line="75" pos:column="9">return <expr><name pos:line="75" pos:column="16">ret<pos:position pos:line="75" pos:column="19"/></name></expr>;<pos:position pos:line="75" pos:column="20"/></return>
}<pos:position pos:line="76" pos:column="2"/></block></function></unit>

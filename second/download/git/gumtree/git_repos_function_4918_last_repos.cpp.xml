<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4918_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">bitmap_each_bit<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name><name pos:line="1" pos:column="22">struct<pos:position pos:line="1" pos:column="28"/></name> <name pos:line="1" pos:column="29">bitmap<pos:position pos:line="1" pos:column="35"/></name></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">self<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">ewah_callback<pos:position pos:line="1" pos:column="56"/></name></type> <name pos:line="1" pos:column="57">callback<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="67">void<pos:position pos:line="1" pos:column="71"/></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">data<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="78"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">size_t<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">pos<pos:position pos:line="3" pos:column="19"/></name> <init pos:line="3" pos:column="20">= <expr><literal type="number" pos:line="3" pos:column="22">0<pos:position pos:line="3" pos:column="23"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="25">i<pos:position pos:line="3" pos:column="26"/></name></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>

	<for pos:line="5" pos:column="9">for <control pos:line="5" pos:column="13">(<init><expr><name pos:line="5" pos:column="14">i<pos:position pos:line="5" pos:column="15"/></name> <operator pos:line="5" pos:column="16">=<pos:position pos:line="5" pos:column="17"/></operator> <literal type="number" pos:line="5" pos:column="18">0<pos:position pos:line="5" pos:column="19"/></literal></expr>;<pos:position pos:line="5" pos:column="20"/></init> <condition><expr><name pos:line="5" pos:column="21">i<pos:position pos:line="5" pos:column="22"/></name> <operator pos:line="5" pos:column="23">&lt;<pos:position pos:line="5" pos:column="27"/></operator> <name><name pos:line="5" pos:column="25">self<pos:position pos:line="5" pos:column="29"/></name><operator pos:line="5" pos:column="29">-&gt;<pos:position pos:line="5" pos:column="34"/></operator><name pos:line="5" pos:column="31">word_alloc<pos:position pos:line="5" pos:column="41"/></name></name></expr>;<pos:position pos:line="5" pos:column="42"/></condition> <incr><expr><operator pos:line="5" pos:column="43">++<pos:position pos:line="5" pos:column="45"/></operator><name pos:line="5" pos:column="45">i<pos:position pos:line="5" pos:column="46"/></name></expr></incr>)<pos:position pos:line="5" pos:column="47"/></control> <block pos:line="5" pos:column="48">{
		<decl_stmt><decl><type><name pos:line="6" pos:column="17">eword_t<pos:position pos:line="6" pos:column="24"/></name></type> <name pos:line="6" pos:column="25">word<pos:position pos:line="6" pos:column="29"/></name> <init pos:line="6" pos:column="30">= <expr><name><name pos:line="6" pos:column="32">self<pos:position pos:line="6" pos:column="36"/></name><operator pos:line="6" pos:column="36">-&gt;<pos:position pos:line="6" pos:column="41"/></operator><name pos:line="6" pos:column="38">words<pos:position pos:line="6" pos:column="43"/></name><index pos:line="6" pos:column="43">[<expr><name pos:line="6" pos:column="44">i<pos:position pos:line="6" pos:column="45"/></name></expr>]<pos:position pos:line="6" pos:column="46"/></index></name></expr></init></decl>;<pos:position pos:line="6" pos:column="47"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="7" pos:column="17">uint32_t<pos:position pos:line="7" pos:column="25"/></name></type> <name pos:line="7" pos:column="26">offset<pos:position pos:line="7" pos:column="32"/></name></decl>;<pos:position pos:line="7" pos:column="33"/></decl_stmt>

		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><name pos:line="9" pos:column="21">word<pos:position pos:line="9" pos:column="25"/></name> <operator pos:line="9" pos:column="26">==<pos:position pos:line="9" pos:column="28"/></operator> <operator pos:line="9" pos:column="29">(<pos:position pos:line="9" pos:column="30"/></operator><name pos:line="9" pos:column="30">eword_t<pos:position pos:line="9" pos:column="37"/></name><operator pos:line="9" pos:column="37">)<pos:position pos:line="9" pos:column="38"/></operator><operator pos:line="9" pos:column="38">~<pos:position pos:line="9" pos:column="39"/></operator><literal type="number" pos:line="9" pos:column="39">0<pos:position pos:line="9" pos:column="40"/></literal></expr>)<pos:position pos:line="9" pos:column="41"/></condition><then pos:line="9" pos:column="41"> <block pos:line="9" pos:column="42">{
			<for pos:line="10" pos:column="25">for <control pos:line="10" pos:column="29">(<init><expr><name pos:line="10" pos:column="30">offset<pos:position pos:line="10" pos:column="36"/></name> <operator pos:line="10" pos:column="37">=<pos:position pos:line="10" pos:column="38"/></operator> <literal type="number" pos:line="10" pos:column="39">0<pos:position pos:line="10" pos:column="40"/></literal></expr>;<pos:position pos:line="10" pos:column="41"/></init> <condition><expr><name pos:line="10" pos:column="42">offset<pos:position pos:line="10" pos:column="48"/></name> <operator pos:line="10" pos:column="49">&lt;<pos:position pos:line="10" pos:column="53"/></operator> <name pos:line="10" pos:column="51">BITS_IN_EWORD<pos:position pos:line="10" pos:column="64"/></name></expr>;<pos:position pos:line="10" pos:column="65"/></condition> <incr><expr><operator pos:line="10" pos:column="66">++<pos:position pos:line="10" pos:column="68"/></operator><name pos:line="10" pos:column="68">offset<pos:position pos:line="10" pos:column="74"/></name></expr></incr>)<pos:position pos:line="10" pos:column="75"/></control>
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="33">callback<pos:position pos:line="11" pos:column="41"/></name><argument_list pos:line="11" pos:column="41">(<argument><expr><name pos:line="11" pos:column="42">pos<pos:position pos:line="11" pos:column="45"/></name><operator pos:line="11" pos:column="45">++<pos:position pos:line="11" pos:column="47"/></operator></expr></argument>, <argument><expr><name pos:line="11" pos:column="49">data<pos:position pos:line="11" pos:column="53"/></name></expr></argument>)<pos:position pos:line="11" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="55"/></expr_stmt></block></for>
		}<pos:position pos:line="12" pos:column="18"/></block></then> <else pos:line="12" pos:column="19">else <block pos:line="12" pos:column="24">{
			<for pos:line="13" pos:column="25">for <control pos:line="13" pos:column="29">(<init><expr><name pos:line="13" pos:column="30">offset<pos:position pos:line="13" pos:column="36"/></name> <operator pos:line="13" pos:column="37">=<pos:position pos:line="13" pos:column="38"/></operator> <literal type="number" pos:line="13" pos:column="39">0<pos:position pos:line="13" pos:column="40"/></literal></expr>;<pos:position pos:line="13" pos:column="41"/></init> <condition><expr><name pos:line="13" pos:column="42">offset<pos:position pos:line="13" pos:column="48"/></name> <operator pos:line="13" pos:column="49">&lt;<pos:position pos:line="13" pos:column="53"/></operator> <name pos:line="13" pos:column="51">BITS_IN_EWORD<pos:position pos:line="13" pos:column="64"/></name></expr>;<pos:position pos:line="13" pos:column="65"/></condition> <incr><expr><operator pos:line="13" pos:column="66">++<pos:position pos:line="13" pos:column="68"/></operator><name pos:line="13" pos:column="68">offset<pos:position pos:line="13" pos:column="74"/></name></expr></incr>)<pos:position pos:line="13" pos:column="75"/></control> <block pos:line="13" pos:column="76">{
				<if pos:line="14" pos:column="33">if <condition pos:line="14" pos:column="36">(<expr><operator pos:line="14" pos:column="37">(<pos:position pos:line="14" pos:column="38"/></operator><name pos:line="14" pos:column="38">word<pos:position pos:line="14" pos:column="42"/></name> <operator pos:line="14" pos:column="43">&gt;&gt;<pos:position pos:line="14" pos:column="48"/></operator> <name pos:line="14" pos:column="46">offset<pos:position pos:line="14" pos:column="52"/></name><operator pos:line="14" pos:column="52">)<pos:position pos:line="14" pos:column="53"/></operator> <operator pos:line="14" pos:column="54">==<pos:position pos:line="14" pos:column="56"/></operator> <literal type="number" pos:line="14" pos:column="57">0<pos:position pos:line="14" pos:column="58"/></literal></expr>)<pos:position pos:line="14" pos:column="59"/></condition><then pos:line="14" pos:column="59">
					<block type="pseudo"><break pos:line="15" pos:column="41">break;<pos:position pos:line="15" pos:column="47"/></break></block></then></if>

				<expr_stmt><expr><name pos:line="17" pos:column="33">offset<pos:position pos:line="17" pos:column="39"/></name> <operator pos:line="17" pos:column="40">+=<pos:position pos:line="17" pos:column="42"/></operator> <call><name pos:line="17" pos:column="43">ewah_bit_ctz64<pos:position pos:line="17" pos:column="57"/></name><argument_list pos:line="17" pos:column="57">(<argument><expr><name pos:line="17" pos:column="58">word<pos:position pos:line="17" pos:column="62"/></name> <operator pos:line="17" pos:column="63">&gt;&gt;<pos:position pos:line="17" pos:column="68"/></operator> <name pos:line="17" pos:column="66">offset<pos:position pos:line="17" pos:column="72"/></name></expr></argument>)<pos:position pos:line="17" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="74"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="18" pos:column="33">callback<pos:position pos:line="18" pos:column="41"/></name><argument_list pos:line="18" pos:column="41">(<argument><expr><name pos:line="18" pos:column="42">pos<pos:position pos:line="18" pos:column="45"/></name> <operator pos:line="18" pos:column="46">+<pos:position pos:line="18" pos:column="47"/></operator> <name pos:line="18" pos:column="48">offset<pos:position pos:line="18" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="56">data<pos:position pos:line="18" pos:column="60"/></name></expr></argument>)<pos:position pos:line="18" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="62"/></expr_stmt>
			}<pos:position pos:line="19" pos:column="26"/></block></for>
			<expr_stmt><expr><name pos:line="20" pos:column="25">pos<pos:position pos:line="20" pos:column="28"/></name> <operator pos:line="20" pos:column="29">+=<pos:position pos:line="20" pos:column="31"/></operator> <name pos:line="20" pos:column="32">BITS_IN_EWORD<pos:position pos:line="20" pos:column="45"/></name></expr>;<pos:position pos:line="20" pos:column="46"/></expr_stmt>
		}<pos:position pos:line="21" pos:column="18"/></block></else></if>
	}<pos:position pos:line="22" pos:column="10"/></block></for>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4134_git-2.13.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">set_disambiguate_hint_config<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><specifier pos:line="1" pos:column="34">const<pos:position pos:line="1" pos:column="39"/></specifier> <name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">var<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="51">const<pos:position pos:line="1" pos:column="56"/></specifier> <name pos:line="1" pos:column="57">char<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">value<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<struct><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <specifier pos:line="3" pos:column="16">const<pos:position pos:line="3" pos:column="21"/></specifier> struct <block pos:line="3" pos:column="29">{<public type="default" pos:line="3" pos:column="30">
		<decl_stmt><decl><type><specifier pos:line="4" pos:column="17">const<pos:position pos:line="4" pos:column="22"/></specifier> <name pos:line="4" pos:column="23">char<pos:position pos:line="4" pos:column="27"/></name> <modifier pos:line="4" pos:column="28">*<pos:position pos:line="4" pos:column="29"/></modifier></type><name pos:line="4" pos:column="29">name<pos:position pos:line="4" pos:column="33"/></name></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="5" pos:column="17">disambiguate_hint_fn<pos:position pos:line="5" pos:column="37"/></name></type> <name pos:line="5" pos:column="38">fn<pos:position pos:line="5" pos:column="40"/></name></decl>;<pos:position pos:line="5" pos:column="41"/></decl_stmt>
	<pos:position pos:line="6" pos:column="2"/></public>}<pos:position pos:line="6" pos:column="10"/></block> <decl><name><name pos:line="6" pos:column="11">hints<pos:position pos:line="6" pos:column="16"/></name><index pos:line="6" pos:column="16">[]<pos:position pos:line="6" pos:column="18"/></index></name> <init pos:line="6" pos:column="19">= <expr><block pos:line="6" pos:column="21">{
		<expr><block pos:line="7" pos:column="17">{ <expr><literal type="string" pos:line="7" pos:column="19">"none"<pos:position pos:line="7" pos:column="25"/></literal></expr>, <expr><name pos:line="7" pos:column="27">NULL<pos:position pos:line="7" pos:column="31"/></name></expr> }<pos:position pos:line="7" pos:column="33"/></block></expr>,
		<expr><block pos:line="8" pos:column="17">{ <expr><literal type="string" pos:line="8" pos:column="19">"commit"<pos:position pos:line="8" pos:column="27"/></literal></expr>, <expr><name pos:line="8" pos:column="29">disambiguate_commit_only<pos:position pos:line="8" pos:column="53"/></name></expr> }<pos:position pos:line="8" pos:column="55"/></block></expr>,
		<expr><block pos:line="9" pos:column="17">{ <expr><literal type="string" pos:line="9" pos:column="19">"committish"<pos:position pos:line="9" pos:column="31"/></literal></expr>, <expr><name pos:line="9" pos:column="33">disambiguate_committish_only<pos:position pos:line="9" pos:column="61"/></name></expr> }<pos:position pos:line="9" pos:column="63"/></block></expr>,
		<expr><block pos:line="10" pos:column="17">{ <expr><literal type="string" pos:line="10" pos:column="19">"tree"<pos:position pos:line="10" pos:column="25"/></literal></expr>, <expr><name pos:line="10" pos:column="27">disambiguate_tree_only<pos:position pos:line="10" pos:column="49"/></name></expr> }<pos:position pos:line="10" pos:column="51"/></block></expr>,
		<expr><block pos:line="11" pos:column="17">{ <expr><literal type="string" pos:line="11" pos:column="19">"treeish"<pos:position pos:line="11" pos:column="28"/></literal></expr>, <expr><name pos:line="11" pos:column="30">disambiguate_treeish_only<pos:position pos:line="11" pos:column="55"/></name></expr> }<pos:position pos:line="11" pos:column="57"/></block></expr>,
		<expr><block pos:line="12" pos:column="17">{ <expr><literal type="string" pos:line="12" pos:column="19">"blob"<pos:position pos:line="12" pos:column="25"/></literal></expr>, <expr><name pos:line="12" pos:column="27">disambiguate_blob_only<pos:position pos:line="12" pos:column="49"/></name></expr> }<pos:position pos:line="12" pos:column="51"/></block></expr>
	}<pos:position pos:line="13" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="13" pos:column="11"/></struct>
	<decl_stmt><decl><type><name pos:line="14" pos:column="9">int<pos:position pos:line="14" pos:column="12"/></name></type> <name pos:line="14" pos:column="13">i<pos:position pos:line="14" pos:column="14"/></name></decl>;<pos:position pos:line="14" pos:column="15"/></decl_stmt>

	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><operator pos:line="16" pos:column="13">!<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="14">value<pos:position pos:line="16" pos:column="19"/></name></expr>)<pos:position pos:line="16" pos:column="20"/></condition><then pos:line="16" pos:column="20">
		<block type="pseudo"><return pos:line="17" pos:column="17">return <expr><call><name pos:line="17" pos:column="24">config_error_nonbool<pos:position pos:line="17" pos:column="44"/></name><argument_list pos:line="17" pos:column="44">(<argument><expr><name pos:line="17" pos:column="45">var<pos:position pos:line="17" pos:column="48"/></name></expr></argument>)<pos:position pos:line="17" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="50"/></return></block></then></if>

	<for pos:line="19" pos:column="9">for <control pos:line="19" pos:column="13">(<init><expr><name pos:line="19" pos:column="14">i<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator> <literal type="number" pos:line="19" pos:column="18">0<pos:position pos:line="19" pos:column="19"/></literal></expr>;<pos:position pos:line="19" pos:column="20"/></init> <condition><expr><name pos:line="19" pos:column="21">i<pos:position pos:line="19" pos:column="22"/></name> <operator pos:line="19" pos:column="23">&lt;<pos:position pos:line="19" pos:column="27"/></operator> <call><name pos:line="19" pos:column="25">ARRAY_SIZE<pos:position pos:line="19" pos:column="35"/></name><argument_list pos:line="19" pos:column="35">(<argument><expr><name pos:line="19" pos:column="36">hints<pos:position pos:line="19" pos:column="41"/></name></expr></argument>)<pos:position pos:line="19" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="43"/></condition> <incr><expr><name pos:line="19" pos:column="44">i<pos:position pos:line="19" pos:column="45"/></name><operator pos:line="19" pos:column="45">++<pos:position pos:line="19" pos:column="47"/></operator></expr></incr>)<pos:position pos:line="19" pos:column="48"/></control> <block pos:line="19" pos:column="49">{
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><operator pos:line="20" pos:column="21">!<pos:position pos:line="20" pos:column="22"/></operator><call><name pos:line="20" pos:column="22">strcasecmp<pos:position pos:line="20" pos:column="32"/></name><argument_list pos:line="20" pos:column="32">(<argument><expr><name pos:line="20" pos:column="33">value<pos:position pos:line="20" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="40">hints<pos:position pos:line="20" pos:column="45"/></name><index pos:line="20" pos:column="45">[<expr><name pos:line="20" pos:column="46">i<pos:position pos:line="20" pos:column="47"/></name></expr>]<pos:position pos:line="20" pos:column="48"/></index></name><operator pos:line="20" pos:column="48">.<pos:position pos:line="20" pos:column="49"/></operator><name pos:line="20" pos:column="49">name<pos:position pos:line="20" pos:column="53"/></name></expr></argument>)<pos:position pos:line="20" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="55"/></condition><then pos:line="20" pos:column="55"> <block pos:line="20" pos:column="56">{
			<expr_stmt><expr><name pos:line="21" pos:column="25">default_disambiguate_hint<pos:position pos:line="21" pos:column="50"/></name> <operator pos:line="21" pos:column="51">=<pos:position pos:line="21" pos:column="52"/></operator> <name><name pos:line="21" pos:column="53">hints<pos:position pos:line="21" pos:column="58"/></name><index pos:line="21" pos:column="58">[<expr><name pos:line="21" pos:column="59">i<pos:position pos:line="21" pos:column="60"/></name></expr>]<pos:position pos:line="21" pos:column="61"/></index></name><operator pos:line="21" pos:column="61">.<pos:position pos:line="21" pos:column="62"/></operator><name pos:line="21" pos:column="62">fn<pos:position pos:line="21" pos:column="64"/></name></expr>;<pos:position pos:line="21" pos:column="65"/></expr_stmt>
			<return pos:line="22" pos:column="25">return <expr><literal type="number" pos:line="22" pos:column="32">0<pos:position pos:line="22" pos:column="33"/></literal></expr>;<pos:position pos:line="22" pos:column="34"/></return>
		}<pos:position pos:line="23" pos:column="18"/></block></then></if>
	}<pos:position pos:line="24" pos:column="10"/></block></for>

	<return pos:line="26" pos:column="9">return <expr><call><name pos:line="26" pos:column="16">error<pos:position pos:line="26" pos:column="21"/></name><argument_list pos:line="26" pos:column="21">(<argument><expr><literal type="string" pos:line="26" pos:column="22">"unknown hint type for '%s': %s"<pos:position pos:line="26" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="56">var<pos:position pos:line="26" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="61">value<pos:position pos:line="26" pos:column="66"/></name></expr></argument>)<pos:position pos:line="26" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="68"/></return>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

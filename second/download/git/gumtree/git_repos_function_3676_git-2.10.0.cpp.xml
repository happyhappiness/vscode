<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3676_git-2.10.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">diagnose_invalid_index_path<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name pos:line="1" pos:column="41">int<pos:position pos:line="1" pos:column="44"/></name></type> <name pos:line="1" pos:column="45">stage<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>,
					<parameter><decl><type><specifier pos:line="2" pos:column="41">const<pos:position pos:line="2" pos:column="46"/></specifier> <name pos:line="2" pos:column="47">char<pos:position pos:line="2" pos:column="51"/></name> <modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier></type><name pos:line="2" pos:column="53">prefix<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>,
					<parameter><decl><type><specifier pos:line="3" pos:column="41">const<pos:position pos:line="3" pos:column="46"/></specifier> <name pos:line="3" pos:column="47">char<pos:position pos:line="3" pos:column="51"/></name> <modifier pos:line="3" pos:column="52">*<pos:position pos:line="3" pos:column="53"/></modifier></type><name pos:line="3" pos:column="53">filename<pos:position pos:line="3" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="62"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name><name pos:line="5" pos:column="15">struct<pos:position pos:line="5" pos:column="21"/></name> <name pos:line="5" pos:column="22">cache_entry<pos:position pos:line="5" pos:column="33"/></name></name> <modifier pos:line="5" pos:column="34">*<pos:position pos:line="5" pos:column="35"/></modifier></type><name pos:line="5" pos:column="35">ce<pos:position pos:line="5" pos:column="37"/></name></decl>;<pos:position pos:line="5" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">pos<pos:position pos:line="6" pos:column="16"/></name></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">unsigned<pos:position pos:line="7" pos:column="17"/></name></type> <name pos:line="7" pos:column="18">namelen<pos:position pos:line="7" pos:column="25"/></name> <init pos:line="7" pos:column="26">= <expr><call><name pos:line="7" pos:column="28">strlen<pos:position pos:line="7" pos:column="34"/></name><argument_list pos:line="7" pos:column="34">(<argument><expr><name pos:line="7" pos:column="35">filename<pos:position pos:line="7" pos:column="43"/></name></expr></argument>)<pos:position pos:line="7" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="45"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">strbuf<pos:position pos:line="8" pos:column="22"/></name></name></type> <name pos:line="8" pos:column="23">fullname<pos:position pos:line="8" pos:column="31"/></name> <init pos:line="8" pos:column="32">= <expr><name pos:line="8" pos:column="34">STRBUF_INIT<pos:position pos:line="8" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="46"/></decl_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">!<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="14">prefix<pos:position pos:line="10" pos:column="20"/></name></expr>)<pos:position pos:line="10" pos:column="21"/></condition><then pos:line="10" pos:column="21">
		<block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="17">prefix<pos:position pos:line="11" pos:column="23"/></name> <operator pos:line="11" pos:column="24">=<pos:position pos:line="11" pos:column="25"/></operator> <literal type="string" pos:line="11" pos:column="26">""<pos:position pos:line="11" pos:column="28"/></literal></expr>;<pos:position pos:line="11" pos:column="29"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="13" pos:column="9">/* Wrong stage number? */</comment>
	<expr_stmt><expr><name pos:line="14" pos:column="9">pos<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <call><name pos:line="14" pos:column="15">cache_name_pos<pos:position pos:line="14" pos:column="29"/></name><argument_list pos:line="14" pos:column="29">(<argument><expr><name pos:line="14" pos:column="30">filename<pos:position pos:line="14" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="40">namelen<pos:position pos:line="14" pos:column="47"/></name></expr></argument>)<pos:position pos:line="14" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="49"/></expr_stmt>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">pos<pos:position pos:line="15" pos:column="16"/></name> <operator pos:line="15" pos:column="17">&lt;<pos:position pos:line="15" pos:column="21"/></operator> <literal type="number" pos:line="15" pos:column="19">0<pos:position pos:line="15" pos:column="20"/></literal></expr>)<pos:position pos:line="15" pos:column="21"/></condition><then pos:line="15" pos:column="21">
		<block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="17">pos<pos:position pos:line="16" pos:column="20"/></name> <operator pos:line="16" pos:column="21">=<pos:position pos:line="16" pos:column="22"/></operator> <operator pos:line="16" pos:column="23">-<pos:position pos:line="16" pos:column="24"/></operator><name pos:line="16" pos:column="24">pos<pos:position pos:line="16" pos:column="27"/></name> <operator pos:line="16" pos:column="28">-<pos:position pos:line="16" pos:column="29"/></operator> <literal type="number" pos:line="16" pos:column="30">1<pos:position pos:line="16" pos:column="31"/></literal></expr>;<pos:position pos:line="16" pos:column="32"/></expr_stmt></block></then></if>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">pos<pos:position pos:line="17" pos:column="16"/></name> <operator pos:line="17" pos:column="17">&lt;<pos:position pos:line="17" pos:column="21"/></operator> <name pos:line="17" pos:column="19">active_nr<pos:position pos:line="17" pos:column="28"/></name></expr>)<pos:position pos:line="17" pos:column="29"/></condition><then pos:line="17" pos:column="29"> <block pos:line="17" pos:column="30">{
		<expr_stmt><expr><name pos:line="18" pos:column="17">ce<pos:position pos:line="18" pos:column="19"/></name> <operator pos:line="18" pos:column="20">=<pos:position pos:line="18" pos:column="21"/></operator> <name><name pos:line="18" pos:column="22">active_cache<pos:position pos:line="18" pos:column="34"/></name><index pos:line="18" pos:column="34">[<expr><name pos:line="18" pos:column="35">pos<pos:position pos:line="18" pos:column="38"/></name></expr>]<pos:position pos:line="18" pos:column="39"/></index></name></expr>;<pos:position pos:line="18" pos:column="40"/></expr_stmt>
		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><call><name pos:line="19" pos:column="21">ce_namelen<pos:position pos:line="19" pos:column="31"/></name><argument_list pos:line="19" pos:column="31">(<argument><expr><name pos:line="19" pos:column="32">ce<pos:position pos:line="19" pos:column="34"/></name></expr></argument>)<pos:position pos:line="19" pos:column="35"/></argument_list></call> <operator pos:line="19" pos:column="36">==<pos:position pos:line="19" pos:column="38"/></operator> <name pos:line="19" pos:column="39">namelen<pos:position pos:line="19" pos:column="46"/></name> <operator pos:line="19" pos:column="47">&amp;&amp;<pos:position pos:line="19" pos:column="57"/></operator>
		    <operator pos:line="20" pos:column="21">!<pos:position pos:line="20" pos:column="22"/></operator><call><name pos:line="20" pos:column="22">memcmp<pos:position pos:line="20" pos:column="28"/></name><argument_list pos:line="20" pos:column="28">(<argument><expr><name><name pos:line="20" pos:column="29">ce<pos:position pos:line="20" pos:column="31"/></name><operator pos:line="20" pos:column="31">-&gt;<pos:position pos:line="20" pos:column="36"/></operator><name pos:line="20" pos:column="33">name<pos:position pos:line="20" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="39">filename<pos:position pos:line="20" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="49">namelen<pos:position pos:line="20" pos:column="56"/></name></expr></argument>)<pos:position pos:line="20" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="58"/></condition><then pos:line="20" pos:column="58">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="25">die<pos:position pos:line="21" pos:column="28"/></name><argument_list pos:line="21" pos:column="28">(<argument><expr><literal type="string" pos:line="21" pos:column="29">"Path '%s' is in the index, but not at stage %d.\n"<pos:position pos:line="21" pos:column="80"/></literal>
			    <literal type="string" pos:line="22" pos:column="29">"Did you mean ':%d:%s'?"<pos:position pos:line="22" pos:column="53"/></literal></expr></argument>,
			    <argument><expr><name pos:line="23" pos:column="29">filename<pos:position pos:line="23" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="39">stage<pos:position pos:line="23" pos:column="44"/></name></expr></argument>,
			    <argument><expr><call><name pos:line="24" pos:column="29">ce_stage<pos:position pos:line="24" pos:column="37"/></name><argument_list pos:line="24" pos:column="37">(<argument><expr><name pos:line="24" pos:column="38">ce<pos:position pos:line="24" pos:column="40"/></name></expr></argument>)<pos:position pos:line="24" pos:column="41"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="24" pos:column="43">filename<pos:position pos:line="24" pos:column="51"/></name></expr></argument>)<pos:position pos:line="24" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="53"/></expr_stmt></block></then></if>
	}<pos:position pos:line="25" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="27" pos:column="9">/* Confusion between relative and absolute filenames? */</comment>
	<expr_stmt><expr><call><name pos:line="28" pos:column="9">strbuf_addstr<pos:position pos:line="28" pos:column="22"/></name><argument_list pos:line="28" pos:column="22">(<argument><expr><operator pos:line="28" pos:column="23">&amp;<pos:position pos:line="28" pos:column="28"/></operator><name pos:line="28" pos:column="24">fullname<pos:position pos:line="28" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="34">prefix<pos:position pos:line="28" pos:column="40"/></name></expr></argument>)<pos:position pos:line="28" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="29" pos:column="9">strbuf_addstr<pos:position pos:line="29" pos:column="22"/></name><argument_list pos:line="29" pos:column="22">(<argument><expr><operator pos:line="29" pos:column="23">&amp;<pos:position pos:line="29" pos:column="28"/></operator><name pos:line="29" pos:column="24">fullname<pos:position pos:line="29" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="34">filename<pos:position pos:line="29" pos:column="42"/></name></expr></argument>)<pos:position pos:line="29" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><name pos:line="30" pos:column="9">pos<pos:position pos:line="30" pos:column="12"/></name> <operator pos:line="30" pos:column="13">=<pos:position pos:line="30" pos:column="14"/></operator> <call><name pos:line="30" pos:column="15">cache_name_pos<pos:position pos:line="30" pos:column="29"/></name><argument_list pos:line="30" pos:column="29">(<argument><expr><name><name pos:line="30" pos:column="30">fullname<pos:position pos:line="30" pos:column="38"/></name><operator pos:line="30" pos:column="38">.<pos:position pos:line="30" pos:column="39"/></operator><name pos:line="30" pos:column="39">buf<pos:position pos:line="30" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="44">fullname<pos:position pos:line="30" pos:column="52"/></name><operator pos:line="30" pos:column="52">.<pos:position pos:line="30" pos:column="53"/></operator><name pos:line="30" pos:column="53">len<pos:position pos:line="30" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="58"/></expr_stmt>
	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name pos:line="31" pos:column="13">pos<pos:position pos:line="31" pos:column="16"/></name> <operator pos:line="31" pos:column="17">&lt;<pos:position pos:line="31" pos:column="21"/></operator> <literal type="number" pos:line="31" pos:column="19">0<pos:position pos:line="31" pos:column="20"/></literal></expr>)<pos:position pos:line="31" pos:column="21"/></condition><then pos:line="31" pos:column="21">
		<block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="17">pos<pos:position pos:line="32" pos:column="20"/></name> <operator pos:line="32" pos:column="21">=<pos:position pos:line="32" pos:column="22"/></operator> <operator pos:line="32" pos:column="23">-<pos:position pos:line="32" pos:column="24"/></operator><name pos:line="32" pos:column="24">pos<pos:position pos:line="32" pos:column="27"/></name> <operator pos:line="32" pos:column="28">-<pos:position pos:line="32" pos:column="29"/></operator> <literal type="number" pos:line="32" pos:column="30">1<pos:position pos:line="32" pos:column="31"/></literal></expr>;<pos:position pos:line="32" pos:column="32"/></expr_stmt></block></then></if>
	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name pos:line="33" pos:column="13">pos<pos:position pos:line="33" pos:column="16"/></name> <operator pos:line="33" pos:column="17">&lt;<pos:position pos:line="33" pos:column="21"/></operator> <name pos:line="33" pos:column="19">active_nr<pos:position pos:line="33" pos:column="28"/></name></expr>)<pos:position pos:line="33" pos:column="29"/></condition><then pos:line="33" pos:column="29"> <block pos:line="33" pos:column="30">{
		<expr_stmt><expr><name pos:line="34" pos:column="17">ce<pos:position pos:line="34" pos:column="19"/></name> <operator pos:line="34" pos:column="20">=<pos:position pos:line="34" pos:column="21"/></operator> <name><name pos:line="34" pos:column="22">active_cache<pos:position pos:line="34" pos:column="34"/></name><index pos:line="34" pos:column="34">[<expr><name pos:line="34" pos:column="35">pos<pos:position pos:line="34" pos:column="38"/></name></expr>]<pos:position pos:line="34" pos:column="39"/></index></name></expr>;<pos:position pos:line="34" pos:column="40"/></expr_stmt>
		<if pos:line="35" pos:column="17">if <condition pos:line="35" pos:column="20">(<expr><call><name pos:line="35" pos:column="21">ce_namelen<pos:position pos:line="35" pos:column="31"/></name><argument_list pos:line="35" pos:column="31">(<argument><expr><name pos:line="35" pos:column="32">ce<pos:position pos:line="35" pos:column="34"/></name></expr></argument>)<pos:position pos:line="35" pos:column="35"/></argument_list></call> <operator pos:line="35" pos:column="36">==<pos:position pos:line="35" pos:column="38"/></operator> <name><name pos:line="35" pos:column="39">fullname<pos:position pos:line="35" pos:column="47"/></name><operator pos:line="35" pos:column="47">.<pos:position pos:line="35" pos:column="48"/></operator><name pos:line="35" pos:column="48">len<pos:position pos:line="35" pos:column="51"/></name></name> <operator pos:line="35" pos:column="52">&amp;&amp;<pos:position pos:line="35" pos:column="62"/></operator>
		    <operator pos:line="36" pos:column="21">!<pos:position pos:line="36" pos:column="22"/></operator><call><name pos:line="36" pos:column="22">memcmp<pos:position pos:line="36" pos:column="28"/></name><argument_list pos:line="36" pos:column="28">(<argument><expr><name><name pos:line="36" pos:column="29">ce<pos:position pos:line="36" pos:column="31"/></name><operator pos:line="36" pos:column="31">-&gt;<pos:position pos:line="36" pos:column="36"/></operator><name pos:line="36" pos:column="33">name<pos:position pos:line="36" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="39">fullname<pos:position pos:line="36" pos:column="47"/></name><operator pos:line="36" pos:column="47">.<pos:position pos:line="36" pos:column="48"/></operator><name pos:line="36" pos:column="48">buf<pos:position pos:line="36" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="53">fullname<pos:position pos:line="36" pos:column="61"/></name><operator pos:line="36" pos:column="61">.<pos:position pos:line="36" pos:column="62"/></operator><name pos:line="36" pos:column="62">len<pos:position pos:line="36" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="67"/></condition><then pos:line="36" pos:column="67">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="25">die<pos:position pos:line="37" pos:column="28"/></name><argument_list pos:line="37" pos:column="28">(<argument><expr><literal type="string" pos:line="37" pos:column="29">"Path '%s' is in the index, but not '%s'.\n"<pos:position pos:line="37" pos:column="73"/></literal>
			    <literal type="string" pos:line="38" pos:column="29">"Did you mean ':%d:%s' aka ':%d:./%s'?"<pos:position pos:line="38" pos:column="68"/></literal></expr></argument>,
			    <argument><expr><name><name pos:line="39" pos:column="29">fullname<pos:position pos:line="39" pos:column="37"/></name><operator pos:line="39" pos:column="37">.<pos:position pos:line="39" pos:column="38"/></operator><name pos:line="39" pos:column="38">buf<pos:position pos:line="39" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="43">filename<pos:position pos:line="39" pos:column="51"/></name></expr></argument>,
			    <argument><expr><call><name pos:line="40" pos:column="29">ce_stage<pos:position pos:line="40" pos:column="37"/></name><argument_list pos:line="40" pos:column="37">(<argument><expr><name pos:line="40" pos:column="38">ce<pos:position pos:line="40" pos:column="40"/></name></expr></argument>)<pos:position pos:line="40" pos:column="41"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="43">fullname<pos:position pos:line="40" pos:column="51"/></name><operator pos:line="40" pos:column="51">.<pos:position pos:line="40" pos:column="52"/></operator><name pos:line="40" pos:column="52">buf<pos:position pos:line="40" pos:column="55"/></name></name></expr></argument>,
			    <argument><expr><call><name pos:line="41" pos:column="29">ce_stage<pos:position pos:line="41" pos:column="37"/></name><argument_list pos:line="41" pos:column="37">(<argument><expr><name pos:line="41" pos:column="38">ce<pos:position pos:line="41" pos:column="40"/></name></expr></argument>)<pos:position pos:line="41" pos:column="41"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="41" pos:column="43">filename<pos:position pos:line="41" pos:column="51"/></name></expr></argument>)<pos:position pos:line="41" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="53"/></expr_stmt></block></then></if>
	}<pos:position pos:line="42" pos:column="10"/></block></then></if>

	<if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><call><name pos:line="44" pos:column="13">file_exists<pos:position pos:line="44" pos:column="24"/></name><argument_list pos:line="44" pos:column="24">(<argument><expr><name pos:line="44" pos:column="25">filename<pos:position pos:line="44" pos:column="33"/></name></expr></argument>)<pos:position pos:line="44" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="35"/></condition><then pos:line="44" pos:column="35">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="17">die<pos:position pos:line="45" pos:column="20"/></name><argument_list pos:line="45" pos:column="20">(<argument><expr><literal type="string" pos:line="45" pos:column="21">"Path '%s' exists on disk, but not in the index."<pos:position pos:line="45" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="72">filename<pos:position pos:line="45" pos:column="80"/></name></expr></argument>)<pos:position pos:line="45" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="82"/></expr_stmt></block></then></if>
	<if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><name pos:line="46" pos:column="13">errno<pos:position pos:line="46" pos:column="18"/></name> <operator pos:line="46" pos:column="19">==<pos:position pos:line="46" pos:column="21"/></operator> <name pos:line="46" pos:column="22">ENOENT<pos:position pos:line="46" pos:column="28"/></name> <operator pos:line="46" pos:column="29">||<pos:position pos:line="46" pos:column="31"/></operator> <name pos:line="46" pos:column="32">errno<pos:position pos:line="46" pos:column="37"/></name> <operator pos:line="46" pos:column="38">==<pos:position pos:line="46" pos:column="40"/></operator> <name pos:line="46" pos:column="41">ENOTDIR<pos:position pos:line="46" pos:column="48"/></name></expr>)<pos:position pos:line="46" pos:column="49"/></condition><then pos:line="46" pos:column="49">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="47" pos:column="17">die<pos:position pos:line="47" pos:column="20"/></name><argument_list pos:line="47" pos:column="20">(<argument><expr><literal type="string" pos:line="47" pos:column="21">"Path '%s' does not exist (neither on disk nor in the index)."<pos:position pos:line="47" pos:column="83"/></literal></expr></argument>,
		    <argument><expr><name pos:line="48" pos:column="21">filename<pos:position pos:line="48" pos:column="29"/></name></expr></argument>)<pos:position pos:line="48" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="31"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="50" pos:column="9">strbuf_release<pos:position pos:line="50" pos:column="23"/></name><argument_list pos:line="50" pos:column="23">(<argument><expr><operator pos:line="50" pos:column="24">&amp;<pos:position pos:line="50" pos:column="29"/></operator><name pos:line="50" pos:column="25">fullname<pos:position pos:line="50" pos:column="33"/></name></expr></argument>)<pos:position pos:line="50" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="35"/></expr_stmt>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2850_git-2.9.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">run_service<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier><modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">argv<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">int<pos:position pos:line="1" pos:column="47"/></name></type> <name pos:line="1" pos:column="48">buffer_input<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">encoding<pos:position pos:line="3" pos:column="29"/></name> <init pos:line="3" pos:column="30">= <expr><call><name pos:line="3" pos:column="32">getenv<pos:position pos:line="3" pos:column="38"/></name><argument_list pos:line="3" pos:column="38">(<argument><expr><literal type="string" pos:line="3" pos:column="39">"HTTP_CONTENT_ENCODING"<pos:position pos:line="3" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="64"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">user<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><call><name pos:line="4" pos:column="28">getenv<pos:position pos:line="4" pos:column="34"/></name><argument_list pos:line="4" pos:column="34">(<argument><expr><literal type="string" pos:line="4" pos:column="35">"REMOTE_USER"<pos:position pos:line="4" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="50"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">host<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><call><name pos:line="5" pos:column="28">getenv<pos:position pos:line="5" pos:column="34"/></name><argument_list pos:line="5" pos:column="34">(<argument><expr><literal type="string" pos:line="5" pos:column="35">"REMOTE_ADDR"<pos:position pos:line="5" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="50"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">gzipped_request<pos:position pos:line="6" pos:column="28"/></name> <init pos:line="6" pos:column="29">= <expr><literal type="number" pos:line="6" pos:column="31">0<pos:position pos:line="6" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">child_process<pos:position pos:line="7" pos:column="29"/></name></name></type> <name pos:line="7" pos:column="30">cld<pos:position pos:line="7" pos:column="33"/></name> <init pos:line="7" pos:column="34">= <expr><name pos:line="7" pos:column="36">CHILD_PROCESS_INIT<pos:position pos:line="7" pos:column="54"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="55"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">encoding<pos:position pos:line="9" pos:column="21"/></name> <operator pos:line="9" pos:column="22">&amp;&amp;<pos:position pos:line="9" pos:column="32"/></operator> <operator pos:line="9" pos:column="25">!<pos:position pos:line="9" pos:column="26"/></operator><call><name pos:line="9" pos:column="26">strcmp<pos:position pos:line="9" pos:column="32"/></name><argument_list pos:line="9" pos:column="32">(<argument><expr><name pos:line="9" pos:column="33">encoding<pos:position pos:line="9" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="43">"gzip"<pos:position pos:line="9" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="51"/></condition><then pos:line="9" pos:column="51">
		<block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="17">gzipped_request<pos:position pos:line="10" pos:column="32"/></name> <operator pos:line="10" pos:column="33">=<pos:position pos:line="10" pos:column="34"/></operator> <literal type="number" pos:line="10" pos:column="35">1<pos:position pos:line="10" pos:column="36"/></literal></expr>;<pos:position pos:line="10" pos:column="37"/></expr_stmt></block></then>
	<elseif pos:line="11" pos:column="9">else <if pos:line="11" pos:column="14">if <condition pos:line="11" pos:column="17">(<expr><name pos:line="11" pos:column="18">encoding<pos:position pos:line="11" pos:column="26"/></name> <operator pos:line="11" pos:column="27">&amp;&amp;<pos:position pos:line="11" pos:column="37"/></operator> <operator pos:line="11" pos:column="30">!<pos:position pos:line="11" pos:column="31"/></operator><call><name pos:line="11" pos:column="31">strcmp<pos:position pos:line="11" pos:column="37"/></name><argument_list pos:line="11" pos:column="37">(<argument><expr><name pos:line="11" pos:column="38">encoding<pos:position pos:line="11" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="48">"x-gzip"<pos:position pos:line="11" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="58"/></condition><then pos:line="11" pos:column="58">
		<block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="17">gzipped_request<pos:position pos:line="12" pos:column="32"/></name> <operator pos:line="12" pos:column="33">=<pos:position pos:line="12" pos:column="34"/></operator> <literal type="number" pos:line="12" pos:column="35">1<pos:position pos:line="12" pos:column="36"/></literal></expr>;<pos:position pos:line="12" pos:column="37"/></expr_stmt></block></then></if></elseif></if>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">!<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="14">user<pos:position pos:line="14" pos:column="18"/></name> <operator pos:line="14" pos:column="19">||<pos:position pos:line="14" pos:column="21"/></operator> <operator pos:line="14" pos:column="22">!<pos:position pos:line="14" pos:column="23"/></operator><operator pos:line="14" pos:column="23">*<pos:position pos:line="14" pos:column="24"/></operator><name pos:line="14" pos:column="24">user<pos:position pos:line="14" pos:column="28"/></name></expr>)<pos:position pos:line="14" pos:column="29"/></condition><then pos:line="14" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="17">user<pos:position pos:line="15" pos:column="21"/></name> <operator pos:line="15" pos:column="22">=<pos:position pos:line="15" pos:column="23"/></operator> <literal type="string" pos:line="15" pos:column="24">"anonymous"<pos:position pos:line="15" pos:column="35"/></literal></expr>;<pos:position pos:line="15" pos:column="36"/></expr_stmt></block></then></if>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><operator pos:line="16" pos:column="13">!<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="14">host<pos:position pos:line="16" pos:column="18"/></name> <operator pos:line="16" pos:column="19">||<pos:position pos:line="16" pos:column="21"/></operator> <operator pos:line="16" pos:column="22">!<pos:position pos:line="16" pos:column="23"/></operator><operator pos:line="16" pos:column="23">*<pos:position pos:line="16" pos:column="24"/></operator><name pos:line="16" pos:column="24">host<pos:position pos:line="16" pos:column="28"/></name></expr>)<pos:position pos:line="16" pos:column="29"/></condition><then pos:line="16" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="17">host<pos:position pos:line="17" pos:column="21"/></name> <operator pos:line="17" pos:column="22">=<pos:position pos:line="17" pos:column="23"/></operator> <literal type="string" pos:line="17" pos:column="24">"(none)"<pos:position pos:line="17" pos:column="32"/></literal></expr>;<pos:position pos:line="17" pos:column="33"/></expr_stmt></block></then></if>

	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><operator pos:line="19" pos:column="13">!<pos:position pos:line="19" pos:column="14"/></operator><call><name pos:line="19" pos:column="14">getenv<pos:position pos:line="19" pos:column="20"/></name><argument_list pos:line="19" pos:column="20">(<argument><expr><literal type="string" pos:line="19" pos:column="21">"GIT_COMMITTER_NAME"<pos:position pos:line="19" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="43"/></condition><then pos:line="19" pos:column="43">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="17">argv_array_pushf<pos:position pos:line="20" pos:column="33"/></name><argument_list pos:line="20" pos:column="33">(<argument><expr><operator pos:line="20" pos:column="34">&amp;<pos:position pos:line="20" pos:column="39"/></operator><name><name pos:line="20" pos:column="35">cld<pos:position pos:line="20" pos:column="38"/></name><operator pos:line="20" pos:column="38">.<pos:position pos:line="20" pos:column="39"/></operator><name pos:line="20" pos:column="39">env_array<pos:position pos:line="20" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="50">"GIT_COMMITTER_NAME=%s"<pos:position pos:line="20" pos:column="73"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="75">user<pos:position pos:line="20" pos:column="79"/></name></expr></argument>)<pos:position pos:line="20" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="81"/></expr_stmt></block></then></if>
	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><operator pos:line="21" pos:column="13">!<pos:position pos:line="21" pos:column="14"/></operator><call><name pos:line="21" pos:column="14">getenv<pos:position pos:line="21" pos:column="20"/></name><argument_list pos:line="21" pos:column="20">(<argument><expr><literal type="string" pos:line="21" pos:column="21">"GIT_COMMITTER_EMAIL"<pos:position pos:line="21" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="44"/></condition><then pos:line="21" pos:column="44">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="17">argv_array_pushf<pos:position pos:line="22" pos:column="33"/></name><argument_list pos:line="22" pos:column="33">(<argument><expr><operator pos:line="22" pos:column="34">&amp;<pos:position pos:line="22" pos:column="39"/></operator><name><name pos:line="22" pos:column="35">cld<pos:position pos:line="22" pos:column="38"/></name><operator pos:line="22" pos:column="38">.<pos:position pos:line="22" pos:column="39"/></operator><name pos:line="22" pos:column="39">env_array<pos:position pos:line="22" pos:column="48"/></name></name></expr></argument>,
				 <argument><expr><literal type="string" pos:line="23" pos:column="34">"GIT_COMMITTER_EMAIL=%s@http.%s"<pos:position pos:line="23" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="68">user<pos:position pos:line="23" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="74">host<pos:position pos:line="23" pos:column="78"/></name></expr></argument>)<pos:position pos:line="23" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="80"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name><name pos:line="25" pos:column="9">cld<pos:position pos:line="25" pos:column="12"/></name><operator pos:line="25" pos:column="12">.<pos:position pos:line="25" pos:column="13"/></operator><name pos:line="25" pos:column="13">argv<pos:position pos:line="25" pos:column="17"/></name></name> <operator pos:line="25" pos:column="18">=<pos:position pos:line="25" pos:column="19"/></operator> <name pos:line="25" pos:column="20">argv<pos:position pos:line="25" pos:column="24"/></name></expr>;<pos:position pos:line="25" pos:column="25"/></expr_stmt>
	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name pos:line="26" pos:column="13">buffer_input<pos:position pos:line="26" pos:column="25"/></name> <operator pos:line="26" pos:column="26">||<pos:position pos:line="26" pos:column="28"/></operator> <name pos:line="26" pos:column="29">gzipped_request<pos:position pos:line="26" pos:column="44"/></name></expr>)<pos:position pos:line="26" pos:column="45"/></condition><then pos:line="26" pos:column="45">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="27" pos:column="17">cld<pos:position pos:line="27" pos:column="20"/></name><operator pos:line="27" pos:column="20">.<pos:position pos:line="27" pos:column="21"/></operator><name pos:line="27" pos:column="21">in<pos:position pos:line="27" pos:column="23"/></name></name> <operator pos:line="27" pos:column="24">=<pos:position pos:line="27" pos:column="25"/></operator> <operator pos:line="27" pos:column="26">-<pos:position pos:line="27" pos:column="27"/></operator><literal type="number" pos:line="27" pos:column="27">1<pos:position pos:line="27" pos:column="28"/></literal></expr>;<pos:position pos:line="27" pos:column="29"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name><name pos:line="28" pos:column="9">cld<pos:position pos:line="28" pos:column="12"/></name><operator pos:line="28" pos:column="12">.<pos:position pos:line="28" pos:column="13"/></operator><name pos:line="28" pos:column="13">git_cmd<pos:position pos:line="28" pos:column="20"/></name></name> <operator pos:line="28" pos:column="21">=<pos:position pos:line="28" pos:column="22"/></operator> <literal type="number" pos:line="28" pos:column="23">1<pos:position pos:line="28" pos:column="24"/></literal></expr>;<pos:position pos:line="28" pos:column="25"/></expr_stmt>
	<if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><call><name pos:line="29" pos:column="13">start_command<pos:position pos:line="29" pos:column="26"/></name><argument_list pos:line="29" pos:column="26">(<argument><expr><operator pos:line="29" pos:column="27">&amp;<pos:position pos:line="29" pos:column="32"/></operator><name pos:line="29" pos:column="28">cld<pos:position pos:line="29" pos:column="31"/></name></expr></argument>)<pos:position pos:line="29" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="33"/></condition><then pos:line="29" pos:column="33">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="17">exit<pos:position pos:line="30" pos:column="21"/></name><argument_list pos:line="30" pos:column="21">(<argument><expr><literal type="number" pos:line="30" pos:column="22">1<pos:position pos:line="30" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="25"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="32" pos:column="9">close<pos:position pos:line="32" pos:column="14"/></name><argument_list pos:line="32" pos:column="14">(<argument><expr><literal type="number" pos:line="32" pos:column="15">1<pos:position pos:line="32" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="18"/></expr_stmt>
	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name pos:line="33" pos:column="13">gzipped_request<pos:position pos:line="33" pos:column="28"/></name></expr>)<pos:position pos:line="33" pos:column="29"/></condition><then pos:line="33" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="17">inflate_request<pos:position pos:line="34" pos:column="32"/></name><argument_list pos:line="34" pos:column="32">(<argument><expr><name><name pos:line="34" pos:column="33">argv<pos:position pos:line="34" pos:column="37"/></name><index pos:line="34" pos:column="37">[<expr><literal type="number" pos:line="34" pos:column="38">0<pos:position pos:line="34" pos:column="39"/></literal></expr>]<pos:position pos:line="34" pos:column="40"/></index></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="42">cld<pos:position pos:line="34" pos:column="45"/></name><operator pos:line="34" pos:column="45">.<pos:position pos:line="34" pos:column="46"/></operator><name pos:line="34" pos:column="46">in<pos:position pos:line="34" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="50">buffer_input<pos:position pos:line="34" pos:column="62"/></name></expr></argument>)<pos:position pos:line="34" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="64"/></expr_stmt></block></then>
	<elseif pos:line="35" pos:column="9">else <if pos:line="35" pos:column="14">if <condition pos:line="35" pos:column="17">(<expr><name pos:line="35" pos:column="18">buffer_input<pos:position pos:line="35" pos:column="30"/></name></expr>)<pos:position pos:line="35" pos:column="31"/></condition><then pos:line="35" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="17">copy_request<pos:position pos:line="36" pos:column="29"/></name><argument_list pos:line="36" pos:column="29">(<argument><expr><name><name pos:line="36" pos:column="30">argv<pos:position pos:line="36" pos:column="34"/></name><index pos:line="36" pos:column="34">[<expr><literal type="number" pos:line="36" pos:column="35">0<pos:position pos:line="36" pos:column="36"/></literal></expr>]<pos:position pos:line="36" pos:column="37"/></index></name></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="39">cld<pos:position pos:line="36" pos:column="42"/></name><operator pos:line="36" pos:column="42">.<pos:position pos:line="36" pos:column="43"/></operator><name pos:line="36" pos:column="43">in<pos:position pos:line="36" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="47"/></expr_stmt></block></then></if></elseif>
	<else pos:line="37" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="38" pos:column="17">close<pos:position pos:line="38" pos:column="22"/></name><argument_list pos:line="38" pos:column="22">(<argument><expr><literal type="number" pos:line="38" pos:column="23">0<pos:position pos:line="38" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="26"/></expr_stmt></block></else></if>

	<if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><call><name pos:line="40" pos:column="13">finish_command<pos:position pos:line="40" pos:column="27"/></name><argument_list pos:line="40" pos:column="27">(<argument><expr><operator pos:line="40" pos:column="28">&amp;<pos:position pos:line="40" pos:column="33"/></operator><name pos:line="40" pos:column="29">cld<pos:position pos:line="40" pos:column="32"/></name></expr></argument>)<pos:position pos:line="40" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="34"/></condition><then pos:line="40" pos:column="34">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="41" pos:column="17">exit<pos:position pos:line="41" pos:column="21"/></name><argument_list pos:line="41" pos:column="21">(<argument><expr><literal type="number" pos:line="41" pos:column="22">1<pos:position pos:line="41" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="25"/></expr_stmt></block></then></if>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6417_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">write_packed_entry<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">FILE<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">fh<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="42">const<pos:position pos:line="1" pos:column="47"/></specifier> <name pos:line="1" pos:column="48">char<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">refname<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>,
			       <parameter><decl><type><specifier pos:line="2" pos:column="32">const<pos:position pos:line="2" pos:column="37"/></specifier> <name pos:line="2" pos:column="38">unsigned<pos:position pos:line="2" pos:column="46"/></name> <name pos:line="2" pos:column="47">char<pos:position pos:line="2" pos:column="51"/></name> <modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier></type><name pos:line="2" pos:column="53">sha1<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>,
			       <parameter><decl><type><specifier pos:line="3" pos:column="32">const<pos:position pos:line="3" pos:column="37"/></specifier> <name pos:line="3" pos:column="38">unsigned<pos:position pos:line="3" pos:column="46"/></name> <name pos:line="3" pos:column="47">char<pos:position pos:line="3" pos:column="51"/></name> <modifier pos:line="3" pos:column="52">*<pos:position pos:line="3" pos:column="53"/></modifier></type><name pos:line="3" pos:column="53">peeled<pos:position pos:line="3" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="60"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="5" pos:column="9">fprintf_or_die<pos:position pos:line="5" pos:column="23"/></name><argument_list pos:line="5" pos:column="23">(<argument><expr><name pos:line="5" pos:column="24">fh<pos:position pos:line="5" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="28">"%s %s\n"<pos:position pos:line="5" pos:column="37"/></literal></expr></argument>, <argument><expr><call><name pos:line="5" pos:column="39">sha1_to_hex<pos:position pos:line="5" pos:column="50"/></name><argument_list pos:line="5" pos:column="50">(<argument><expr><name pos:line="5" pos:column="51">sha1<pos:position pos:line="5" pos:column="55"/></name></expr></argument>)<pos:position pos:line="5" pos:column="56"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="5" pos:column="58">refname<pos:position pos:line="5" pos:column="65"/></name></expr></argument>)<pos:position pos:line="5" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="67"/></expr_stmt>
	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name pos:line="6" pos:column="13">peeled<pos:position pos:line="6" pos:column="19"/></name></expr>)<pos:position pos:line="6" pos:column="20"/></condition><then pos:line="6" pos:column="20">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="17">fprintf_or_die<pos:position pos:line="7" pos:column="31"/></name><argument_list pos:line="7" pos:column="31">(<argument><expr><name pos:line="7" pos:column="32">fh<pos:position pos:line="7" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="36">"^%s\n"<pos:position pos:line="7" pos:column="43"/></literal></expr></argument>, <argument><expr><call><name pos:line="7" pos:column="45">sha1_to_hex<pos:position pos:line="7" pos:column="56"/></name><argument_list pos:line="7" pos:column="56">(<argument><expr><name pos:line="7" pos:column="57">peeled<pos:position pos:line="7" pos:column="63"/></name></expr></argument>)<pos:position pos:line="7" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="66"/></expr_stmt></block></then></if>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

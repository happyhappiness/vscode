<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6349_git-2.7.6.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">pthread_cond_broadcast<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">pthread_cond_t<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">cond<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="3" pos:column="9">EnterCriticalSection<pos:position pos:line="3" pos:column="29"/></name><argument_list pos:line="3" pos:column="29">(<argument><expr><operator pos:line="3" pos:column="30">&amp;<pos:position pos:line="3" pos:column="35"/></operator><name><name pos:line="3" pos:column="31">cond<pos:position pos:line="3" pos:column="35"/></name><operator pos:line="3" pos:column="35">-&gt;<pos:position pos:line="3" pos:column="40"/></operator><name pos:line="3" pos:column="37">waiters_lock<pos:position pos:line="3" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="3" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="51"/></expr_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">(<pos:position pos:line="5" pos:column="14"/></operator><name><name pos:line="5" pos:column="14">cond<pos:position pos:line="5" pos:column="18"/></name><operator pos:line="5" pos:column="18">-&gt;<pos:position pos:line="5" pos:column="23"/></operator><name pos:line="5" pos:column="20">was_broadcast<pos:position pos:line="5" pos:column="33"/></name></name> <operator pos:line="5" pos:column="34">=<pos:position pos:line="5" pos:column="35"/></operator> <name><name pos:line="5" pos:column="36">cond<pos:position pos:line="5" pos:column="40"/></name><operator pos:line="5" pos:column="40">-&gt;<pos:position pos:line="5" pos:column="45"/></operator><name pos:line="5" pos:column="42">waiters<pos:position pos:line="5" pos:column="49"/></name></name> <operator pos:line="5" pos:column="50">&gt;<pos:position pos:line="5" pos:column="54"/></operator> <literal type="number" pos:line="5" pos:column="52">0<pos:position pos:line="5" pos:column="53"/></literal><operator pos:line="5" pos:column="53">)<pos:position pos:line="5" pos:column="54"/></operator></expr>)<pos:position pos:line="5" pos:column="55"/></condition><then pos:line="5" pos:column="55"> <block pos:line="5" pos:column="56">{
		<comment type="block" pos:line="6" pos:column="17">/* wake up all waiters */</comment>
		<expr_stmt><expr><call><name pos:line="7" pos:column="17">ReleaseSemaphore<pos:position pos:line="7" pos:column="33"/></name><argument_list pos:line="7" pos:column="33">(<argument><expr><name><name pos:line="7" pos:column="34">cond<pos:position pos:line="7" pos:column="38"/></name><operator pos:line="7" pos:column="38">-&gt;<pos:position pos:line="7" pos:column="43"/></operator><name pos:line="7" pos:column="40">sema<pos:position pos:line="7" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="46">cond<pos:position pos:line="7" pos:column="50"/></name><operator pos:line="7" pos:column="50">-&gt;<pos:position pos:line="7" pos:column="55"/></operator><name pos:line="7" pos:column="52">waiters<pos:position pos:line="7" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="61">NULL<pos:position pos:line="7" pos:column="65"/></name></expr></argument>)<pos:position pos:line="7" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="67"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="8" pos:column="17">LeaveCriticalSection<pos:position pos:line="8" pos:column="37"/></name><argument_list pos:line="8" pos:column="37">(<argument><expr><operator pos:line="8" pos:column="38">&amp;<pos:position pos:line="8" pos:column="43"/></operator><name><name pos:line="8" pos:column="39">cond<pos:position pos:line="8" pos:column="43"/></name><operator pos:line="8" pos:column="43">-&gt;<pos:position pos:line="8" pos:column="48"/></operator><name pos:line="8" pos:column="45">waiters_lock<pos:position pos:line="8" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="59"/></expr_stmt>
		<comment type="block" pos:line="9" pos:column="17">/*
		 * At this point all waiters continue. Each one takes its
		 * slice of the semaphor. Now it's our turn to wait: Since
		 * the external mutex is held, no thread can leave cond_wait,
		 * yet. For this reason, we can be sure that no thread gets
		 * a chance to eat *more* than one slice. OTOH, it means
		 * that the last waiter must send us a wake-up.
		 */</comment>
		<expr_stmt><expr><call><name pos:line="17" pos:column="17">WaitForSingleObject<pos:position pos:line="17" pos:column="36"/></name><argument_list pos:line="17" pos:column="36">(<argument><expr><name><name pos:line="17" pos:column="37">cond<pos:position pos:line="17" pos:column="41"/></name><operator pos:line="17" pos:column="41">-&gt;<pos:position pos:line="17" pos:column="46"/></operator><name pos:line="17" pos:column="43">continue_broadcast<pos:position pos:line="17" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="63">INFINITE<pos:position pos:line="17" pos:column="71"/></name></expr></argument>)<pos:position pos:line="17" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="73"/></expr_stmt>
		<comment type="block" pos:line="18" pos:column="17">/*
		 * Since the external mutex is held, no thread can enter
		 * cond_wait, and, hence, it is safe to reset this flag
		 * without cond-&gt;waiters_lock held.
		 */</comment>
		<expr_stmt><expr><name><name pos:line="23" pos:column="17">cond<pos:position pos:line="23" pos:column="21"/></name><operator pos:line="23" pos:column="21">-&gt;<pos:position pos:line="23" pos:column="26"/></operator><name pos:line="23" pos:column="23">was_broadcast<pos:position pos:line="23" pos:column="36"/></name></name> <operator pos:line="23" pos:column="37">=<pos:position pos:line="23" pos:column="38"/></operator> <literal type="number" pos:line="23" pos:column="39">0<pos:position pos:line="23" pos:column="40"/></literal></expr>;<pos:position pos:line="23" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="24" pos:column="10"/></block></then> <else pos:line="24" pos:column="11">else <block pos:line="24" pos:column="16">{
		<expr_stmt><expr><call><name pos:line="25" pos:column="17">LeaveCriticalSection<pos:position pos:line="25" pos:column="37"/></name><argument_list pos:line="25" pos:column="37">(<argument><expr><operator pos:line="25" pos:column="38">&amp;<pos:position pos:line="25" pos:column="43"/></operator><name><name pos:line="25" pos:column="39">cond<pos:position pos:line="25" pos:column="43"/></name><operator pos:line="25" pos:column="43">-&gt;<pos:position pos:line="25" pos:column="48"/></operator><name pos:line="25" pos:column="45">waiters_lock<pos:position pos:line="25" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="59"/></expr_stmt>
	}<pos:position pos:line="26" pos:column="10"/></block></else></if>
	<return pos:line="27" pos:column="9">return <expr><literal type="number" pos:line="27" pos:column="16">0<pos:position pos:line="27" pos:column="17"/></literal></expr>;<pos:position pos:line="27" pos:column="18"/></return>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

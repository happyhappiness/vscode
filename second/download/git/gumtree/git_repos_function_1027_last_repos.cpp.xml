<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1027_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <specifier pos:line="1" pos:column="8">inline<pos:position pos:line="1" pos:column="14"/></specifier> <type><name pos:line="1" pos:column="15">unsigned<pos:position pos:line="1" pos:column="23"/></name> <name pos:line="1" pos:column="24">int<pos:position pos:line="1" pos:column="27"/></name></type> <name pos:line="1" pos:column="28">ce_mode_from_stat<pos:position pos:line="1" pos:column="45"/></name><parameter_list pos:line="1" pos:column="45">(<parameter><decl><type><specifier pos:line="1" pos:column="46">const<pos:position pos:line="1" pos:column="51"/></specifier> <name><name pos:line="1" pos:column="52">struct<pos:position pos:line="1" pos:column="58"/></name> <name pos:line="1" pos:column="59">cache_entry<pos:position pos:line="1" pos:column="70"/></name></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">ce<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>,
					     <parameter><decl><type><name pos:line="2" pos:column="46">unsigned<pos:position pos:line="2" pos:column="54"/></name> <name pos:line="2" pos:column="55">int<pos:position pos:line="2" pos:column="58"/></name></type> <name pos:line="2" pos:column="59">mode<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="64"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="4" pos:column="9">extern<pos:position pos:line="4" pos:column="15"/></specifier> <type><name pos:line="4" pos:column="16">int<pos:position pos:line="4" pos:column="19"/></name></type> <name pos:line="4" pos:column="20">trust_executable_bit<pos:position pos:line="4" pos:column="40"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="42">has_symlinks<pos:position pos:line="4" pos:column="54"/></name></decl>;<pos:position pos:line="4" pos:column="55"/></decl_stmt>
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">has_symlinks<pos:position pos:line="5" pos:column="26"/></name> <operator pos:line="5" pos:column="27">&amp;&amp;<pos:position pos:line="5" pos:column="37"/></operator> <call><name pos:line="5" pos:column="30">S_ISREG<pos:position pos:line="5" pos:column="37"/></name><argument_list pos:line="5" pos:column="37">(<argument><expr><name pos:line="5" pos:column="38">mode<pos:position pos:line="5" pos:column="42"/></name></expr></argument>)<pos:position pos:line="5" pos:column="43"/></argument_list></call> <operator pos:line="5" pos:column="44">&amp;&amp;<pos:position pos:line="5" pos:column="54"/></operator>
	    <name pos:line="6" pos:column="13">ce<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">&amp;&amp;<pos:position pos:line="6" pos:column="26"/></operator> <call><name pos:line="6" pos:column="19">S_ISLNK<pos:position pos:line="6" pos:column="26"/></name><argument_list pos:line="6" pos:column="26">(<argument><expr><name><name pos:line="6" pos:column="27">ce<pos:position pos:line="6" pos:column="29"/></name><operator pos:line="6" pos:column="29">-&gt;<pos:position pos:line="6" pos:column="34"/></operator><name pos:line="6" pos:column="31">ce_mode<pos:position pos:line="6" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="40"/></condition><then pos:line="6" pos:column="40">
		<block type="pseudo"><return pos:line="7" pos:column="17">return <expr><name><name pos:line="7" pos:column="24">ce<pos:position pos:line="7" pos:column="26"/></name><operator pos:line="7" pos:column="26">-&gt;<pos:position pos:line="7" pos:column="31"/></operator><name pos:line="7" pos:column="28">ce_mode<pos:position pos:line="7" pos:column="35"/></name></name></expr>;<pos:position pos:line="7" pos:column="36"/></return></block></then></if>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">!<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">trust_executable_bit<pos:position pos:line="8" pos:column="34"/></name> <operator pos:line="8" pos:column="35">&amp;&amp;<pos:position pos:line="8" pos:column="45"/></operator> <call><name pos:line="8" pos:column="38">S_ISREG<pos:position pos:line="8" pos:column="45"/></name><argument_list pos:line="8" pos:column="45">(<argument><expr><name pos:line="8" pos:column="46">mode<pos:position pos:line="8" pos:column="50"/></name></expr></argument>)<pos:position pos:line="8" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="52"/></condition><then pos:line="8" pos:column="52"> <block pos:line="8" pos:column="53">{
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><name pos:line="9" pos:column="21">ce<pos:position pos:line="9" pos:column="23"/></name> <operator pos:line="9" pos:column="24">&amp;&amp;<pos:position pos:line="9" pos:column="34"/></operator> <call><name pos:line="9" pos:column="27">S_ISREG<pos:position pos:line="9" pos:column="34"/></name><argument_list pos:line="9" pos:column="34">(<argument><expr><name><name pos:line="9" pos:column="35">ce<pos:position pos:line="9" pos:column="37"/></name><operator pos:line="9" pos:column="37">-&gt;<pos:position pos:line="9" pos:column="42"/></operator><name pos:line="9" pos:column="39">ce_mode<pos:position pos:line="9" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="48"/></condition><then pos:line="9" pos:column="48">
			<block type="pseudo"><return pos:line="10" pos:column="25">return <expr><name><name pos:line="10" pos:column="32">ce<pos:position pos:line="10" pos:column="34"/></name><operator pos:line="10" pos:column="34">-&gt;<pos:position pos:line="10" pos:column="39"/></operator><name pos:line="10" pos:column="36">ce_mode<pos:position pos:line="10" pos:column="43"/></name></name></expr>;<pos:position pos:line="10" pos:column="44"/></return></block></then></if>
		<return pos:line="11" pos:column="17">return <expr><call><name pos:line="11" pos:column="24">create_ce_mode<pos:position pos:line="11" pos:column="38"/></name><argument_list pos:line="11" pos:column="38">(<argument><expr><literal type="number" pos:line="11" pos:column="39">0666<pos:position pos:line="11" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="45"/></return>
	}<pos:position pos:line="12" pos:column="10"/></block></then></if>
	<return pos:line="13" pos:column="9">return <expr><call><name pos:line="13" pos:column="16">create_ce_mode<pos:position pos:line="13" pos:column="30"/></name><argument_list pos:line="13" pos:column="30">(<argument><expr><name pos:line="13" pos:column="31">mode<pos:position pos:line="13" pos:column="35"/></name></expr></argument>)<pos:position pos:line="13" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="37"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

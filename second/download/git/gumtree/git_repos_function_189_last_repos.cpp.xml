<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_189_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">option_fetch_parse_recurse_submodules<pos:position pos:line="1" pos:column="42"/></name><parameter_list pos:line="1" pos:column="42">(<parameter><decl><type><specifier pos:line="1" pos:column="43">const<pos:position pos:line="1" pos:column="48"/></specifier> <name><name pos:line="1" pos:column="49">struct<pos:position pos:line="1" pos:column="55"/></name> <name pos:line="1" pos:column="56">option<pos:position pos:line="1" pos:column="62"/></name></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">opt<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>,
					  <parameter><decl><type><specifier pos:line="2" pos:column="43">const<pos:position pos:line="2" pos:column="48"/></specifier> <name pos:line="2" pos:column="49">char<pos:position pos:line="2" pos:column="53"/></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">arg<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="60">int<pos:position pos:line="2" pos:column="63"/></name></type> <name pos:line="2" pos:column="64">unset<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="70"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name> <modifier pos:line="4" pos:column="13">*<pos:position pos:line="4" pos:column="14"/></modifier></type><name pos:line="4" pos:column="14">v<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">!<pos:position pos:line="6" pos:column="14"/></operator><name><name pos:line="6" pos:column="14">opt<pos:position pos:line="6" pos:column="17"/></name><operator pos:line="6" pos:column="17">-&gt;<pos:position pos:line="6" pos:column="22"/></operator><name pos:line="6" pos:column="19">value<pos:position pos:line="6" pos:column="24"/></name></name></expr>)<pos:position pos:line="6" pos:column="25"/></condition><then pos:line="6" pos:column="25">
		<block type="pseudo"><return pos:line="7" pos:column="17">return <expr><operator pos:line="7" pos:column="24">-<pos:position pos:line="7" pos:column="25"/></operator><literal type="number" pos:line="7" pos:column="25">1<pos:position pos:line="7" pos:column="26"/></literal></expr>;<pos:position pos:line="7" pos:column="27"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="9" pos:column="9">v<pos:position pos:line="9" pos:column="10"/></name> <operator pos:line="9" pos:column="11">=<pos:position pos:line="9" pos:column="12"/></operator> <name><name pos:line="9" pos:column="13">opt<pos:position pos:line="9" pos:column="16"/></name><operator pos:line="9" pos:column="16">-&gt;<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="18">value<pos:position pos:line="9" pos:column="23"/></name></name></expr>;<pos:position pos:line="9" pos:column="24"/></expr_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">unset<pos:position pos:line="11" pos:column="18"/></name></expr>)<pos:position pos:line="11" pos:column="19"/></condition><then pos:line="11" pos:column="19"> <block pos:line="11" pos:column="20">{
		<expr_stmt><expr><operator pos:line="12" pos:column="17">*<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="18">v<pos:position pos:line="12" pos:column="19"/></name> <operator pos:line="12" pos:column="20">=<pos:position pos:line="12" pos:column="21"/></operator> <name pos:line="12" pos:column="22">RECURSE_SUBMODULES_OFF<pos:position pos:line="12" pos:column="44"/></name></expr>;<pos:position pos:line="12" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="13" pos:column="10"/></block></then> <else pos:line="13" pos:column="11">else <block pos:line="13" pos:column="16">{
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><name pos:line="14" pos:column="21">arg<pos:position pos:line="14" pos:column="24"/></name></expr>)<pos:position pos:line="14" pos:column="25"/></condition><then pos:line="14" pos:column="25">
			<block type="pseudo"><expr_stmt><expr><operator pos:line="15" pos:column="25">*<pos:position pos:line="15" pos:column="26"/></operator><name pos:line="15" pos:column="26">v<pos:position pos:line="15" pos:column="27"/></name> <operator pos:line="15" pos:column="28">=<pos:position pos:line="15" pos:column="29"/></operator> <call><name pos:line="15" pos:column="30">parse_fetch_recurse_submodules_arg<pos:position pos:line="15" pos:column="64"/></name><argument_list pos:line="15" pos:column="64">(<argument><expr><name><name pos:line="15" pos:column="65">opt<pos:position pos:line="15" pos:column="68"/></name><operator pos:line="15" pos:column="68">-&gt;<pos:position pos:line="15" pos:column="73"/></operator><name pos:line="15" pos:column="70">long_name<pos:position pos:line="15" pos:column="79"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="81">arg<pos:position pos:line="15" pos:column="84"/></name></expr></argument>)<pos:position pos:line="15" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="86"/></expr_stmt></block></then>
		<else pos:line="16" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><operator pos:line="17" pos:column="25">*<pos:position pos:line="17" pos:column="26"/></operator><name pos:line="17" pos:column="26">v<pos:position pos:line="17" pos:column="27"/></name> <operator pos:line="17" pos:column="28">=<pos:position pos:line="17" pos:column="29"/></operator> <name pos:line="17" pos:column="30">RECURSE_SUBMODULES_ON<pos:position pos:line="17" pos:column="51"/></name></expr>;<pos:position pos:line="17" pos:column="52"/></expr_stmt></block></else></if>
	}<pos:position pos:line="18" pos:column="10"/></block></else></if>
	<return pos:line="19" pos:column="9">return <expr><literal type="number" pos:line="19" pos:column="16">0<pos:position pos:line="19" pos:column="17"/></literal></expr>;<pos:position pos:line="19" pos:column="18"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1253_git-2.0.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">validate_new_branchname<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">name<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="47">struct<pos:position pos:line="1" pos:column="53"/></name> <name pos:line="1" pos:column="54">strbuf<pos:position pos:line="1" pos:column="60"/></name></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">ref<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>,
			    <parameter><decl><type><name pos:line="2" pos:column="29">int<pos:position pos:line="2" pos:column="32"/></name></type> <name pos:line="2" pos:column="33">force<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="40">int<pos:position pos:line="2" pos:column="43"/></name></type> <name pos:line="2" pos:column="44">attr_only<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="54"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><call><name pos:line="4" pos:column="13">strbuf_check_branch_ref<pos:position pos:line="4" pos:column="36"/></name><argument_list pos:line="4" pos:column="36">(<argument><expr><name pos:line="4" pos:column="37">ref<pos:position pos:line="4" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="42">name<pos:position pos:line="4" pos:column="46"/></name></expr></argument>)<pos:position pos:line="4" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="48"/></condition><then pos:line="4" pos:column="48">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="5" pos:column="17">die<pos:position pos:line="5" pos:column="20"/></name><argument_list pos:line="5" pos:column="20">(<argument><expr><call><name pos:line="5" pos:column="21">_<pos:position pos:line="5" pos:column="22"/></name><argument_list pos:line="5" pos:column="22">(<argument><expr><literal type="string" pos:line="5" pos:column="23">"'%s' is not a valid branch name."<pos:position pos:line="5" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="5" pos:column="60">name<pos:position pos:line="5" pos:column="64"/></name></expr></argument>)<pos:position pos:line="5" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="66"/></expr_stmt></block></then></if>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><call><name pos:line="7" pos:column="14">ref_exists<pos:position pos:line="7" pos:column="24"/></name><argument_list pos:line="7" pos:column="24">(<argument><expr><name><name pos:line="7" pos:column="25">ref<pos:position pos:line="7" pos:column="28"/></name><operator pos:line="7" pos:column="28">-&gt;<pos:position pos:line="7" pos:column="33"/></operator><name pos:line="7" pos:column="30">buf<pos:position pos:line="7" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="35"/></condition><then pos:line="7" pos:column="35">
		<block type="pseudo"><return pos:line="8" pos:column="17">return <expr><literal type="number" pos:line="8" pos:column="24">0<pos:position pos:line="8" pos:column="25"/></literal></expr>;<pos:position pos:line="8" pos:column="26"/></return></block></then>
	<elseif pos:line="9" pos:column="9">else <if pos:line="9" pos:column="14">if <condition pos:line="9" pos:column="17">(<expr><operator pos:line="9" pos:column="18">!<pos:position pos:line="9" pos:column="19"/></operator><name pos:line="9" pos:column="19">force<pos:position pos:line="9" pos:column="24"/></name> <operator pos:line="9" pos:column="25">&amp;&amp;<pos:position pos:line="9" pos:column="35"/></operator> <operator pos:line="9" pos:column="28">!<pos:position pos:line="9" pos:column="29"/></operator><name pos:line="9" pos:column="29">attr_only<pos:position pos:line="9" pos:column="38"/></name></expr>)<pos:position pos:line="9" pos:column="39"/></condition><then pos:line="9" pos:column="39">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="17">die<pos:position pos:line="10" pos:column="20"/></name><argument_list pos:line="10" pos:column="20">(<argument><expr><call><name pos:line="10" pos:column="21">_<pos:position pos:line="10" pos:column="22"/></name><argument_list pos:line="10" pos:column="22">(<argument><expr><literal type="string" pos:line="10" pos:column="23">"A branch named '%s' already exists."<pos:position pos:line="10" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="61"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="63">ref<pos:position pos:line="10" pos:column="66"/></name><operator pos:line="10" pos:column="66">-&gt;<pos:position pos:line="10" pos:column="71"/></operator><name pos:line="10" pos:column="68">buf<pos:position pos:line="10" pos:column="71"/></name></name> <operator pos:line="10" pos:column="72">+<pos:position pos:line="10" pos:column="73"/></operator> <call><name pos:line="10" pos:column="74">strlen<pos:position pos:line="10" pos:column="80"/></name><argument_list pos:line="10" pos:column="80">(<argument><expr><literal type="string" pos:line="10" pos:column="81">"refs/heads/"<pos:position pos:line="10" pos:column="94"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="95"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="97"/></expr_stmt></block></then></if></elseif></if>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">!<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">attr_only<pos:position pos:line="12" pos:column="23"/></name></expr>)<pos:position pos:line="12" pos:column="24"/></condition><then pos:line="12" pos:column="24"> <block pos:line="12" pos:column="25">{
		<decl_stmt><decl><type><specifier pos:line="13" pos:column="17">const<pos:position pos:line="13" pos:column="22"/></specifier> <name pos:line="13" pos:column="23">char<pos:position pos:line="13" pos:column="27"/></name> <modifier pos:line="13" pos:column="28">*<pos:position pos:line="13" pos:column="29"/></modifier></type><name pos:line="13" pos:column="29">head<pos:position pos:line="13" pos:column="33"/></name></decl>;<pos:position pos:line="13" pos:column="34"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="14" pos:column="17">unsigned<pos:position pos:line="14" pos:column="25"/></name> <name pos:line="14" pos:column="26">char<pos:position pos:line="14" pos:column="30"/></name></type> <name><name pos:line="14" pos:column="31">sha1<pos:position pos:line="14" pos:column="35"/></name><index pos:line="14" pos:column="35">[<expr><literal type="number" pos:line="14" pos:column="36">20<pos:position pos:line="14" pos:column="38"/></literal></expr>]<pos:position pos:line="14" pos:column="39"/></index></name></decl>;<pos:position pos:line="14" pos:column="40"/></decl_stmt>

		<expr_stmt><expr><name pos:line="16" pos:column="17">head<pos:position pos:line="16" pos:column="21"/></name> <operator pos:line="16" pos:column="22">=<pos:position pos:line="16" pos:column="23"/></operator> <call><name pos:line="16" pos:column="24">resolve_ref_unsafe<pos:position pos:line="16" pos:column="42"/></name><argument_list pos:line="16" pos:column="42">(<argument><expr><literal type="string" pos:line="16" pos:column="43">"HEAD"<pos:position pos:line="16" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="51">sha1<pos:position pos:line="16" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="57">0<pos:position pos:line="16" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="60">NULL<pos:position pos:line="16" pos:column="64"/></name></expr></argument>)<pos:position pos:line="16" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="66"/></expr_stmt>
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><operator pos:line="17" pos:column="21">!<pos:position pos:line="17" pos:column="22"/></operator><call><name pos:line="17" pos:column="22">is_bare_repository<pos:position pos:line="17" pos:column="40"/></name><argument_list pos:line="17" pos:column="40">()<pos:position pos:line="17" pos:column="42"/></argument_list></call> <operator pos:line="17" pos:column="43">&amp;&amp;<pos:position pos:line="17" pos:column="53"/></operator> <name pos:line="17" pos:column="46">head<pos:position pos:line="17" pos:column="50"/></name> <operator pos:line="17" pos:column="51">&amp;&amp;<pos:position pos:line="17" pos:column="61"/></operator> <operator pos:line="17" pos:column="54">!<pos:position pos:line="17" pos:column="55"/></operator><call><name pos:line="17" pos:column="55">strcmp<pos:position pos:line="17" pos:column="61"/></name><argument_list pos:line="17" pos:column="61">(<argument><expr><name pos:line="17" pos:column="62">head<pos:position pos:line="17" pos:column="66"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="68">ref<pos:position pos:line="17" pos:column="71"/></name><operator pos:line="17" pos:column="71">-&gt;<pos:position pos:line="17" pos:column="76"/></operator><name pos:line="17" pos:column="73">buf<pos:position pos:line="17" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="77"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="78"/></condition><then pos:line="17" pos:column="78">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="25">die<pos:position pos:line="18" pos:column="28"/></name><argument_list pos:line="18" pos:column="28">(<argument><expr><call><name pos:line="18" pos:column="29">_<pos:position pos:line="18" pos:column="30"/></name><argument_list pos:line="18" pos:column="30">(<argument><expr><literal type="string" pos:line="18" pos:column="31">"Cannot force update the current branch."<pos:position pos:line="18" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="75"/></expr_stmt></block></then></if>
	}<pos:position pos:line="19" pos:column="10"/></block></then></if>
	<return pos:line="20" pos:column="9">return <expr><literal type="number" pos:line="20" pos:column="16">1<pos:position pos:line="20" pos:column="17"/></literal></expr>;<pos:position pos:line="20" pos:column="18"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2563_git-2.14.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">handle_content_type<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name><name pos:line="1" pos:column="33">struct<pos:position pos:line="1" pos:column="39"/></name> <name pos:line="1" pos:column="40">mailinfo<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">mi<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="54">struct<pos:position pos:line="1" pos:column="60"/></name> <name pos:line="1" pos:column="61">strbuf<pos:position pos:line="1" pos:column="67"/></name></name> <modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier></type><name pos:line="1" pos:column="69">line<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="74"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">strbuf<pos:position pos:line="3" pos:column="22"/></name></name> <modifier pos:line="3" pos:column="23">*<pos:position pos:line="3" pos:column="24"/></modifier></type><name pos:line="3" pos:column="24">boundary<pos:position pos:line="3" pos:column="32"/></name> <init pos:line="3" pos:column="33">= <expr><call><name pos:line="3" pos:column="35">xmalloc<pos:position pos:line="3" pos:column="42"/></name><argument_list pos:line="3" pos:column="42">(<argument><expr><sizeof pos:line="3" pos:column="43">sizeof<argument_list pos:line="3" pos:column="49">(<argument><expr pos:line="3" pos:column="50">struct <name pos:line="3" pos:column="57">strbuf<pos:position pos:line="3" pos:column="63"/></name></expr></argument>)<pos:position pos:line="3" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="3" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="66"/></decl_stmt>
	<expr_stmt><expr><call><name pos:line="4" pos:column="9">strbuf_init<pos:position pos:line="4" pos:column="20"/></name><argument_list pos:line="4" pos:column="20">(<argument><expr><name pos:line="4" pos:column="21">boundary<pos:position pos:line="4" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="4" pos:column="31">line<pos:position pos:line="4" pos:column="35"/></name><operator pos:line="4" pos:column="35">-&gt;<pos:position pos:line="4" pos:column="40"/></operator><name pos:line="4" pos:column="37">len<pos:position pos:line="4" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="42"/></expr_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><call><name pos:line="6" pos:column="13">slurp_attr<pos:position pos:line="6" pos:column="23"/></name><argument_list pos:line="6" pos:column="23">(<argument><expr><name><name pos:line="6" pos:column="24">line<pos:position pos:line="6" pos:column="28"/></name><operator pos:line="6" pos:column="28">-&gt;<pos:position pos:line="6" pos:column="33"/></operator><name pos:line="6" pos:column="30">buf<pos:position pos:line="6" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="35">"boundary="<pos:position pos:line="6" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="48">boundary<pos:position pos:line="6" pos:column="56"/></name></expr></argument>)<pos:position pos:line="6" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="58"/></condition><then pos:line="6" pos:column="58"> <block pos:line="6" pos:column="59">{
		<expr_stmt><expr><call><name pos:line="7" pos:column="17">strbuf_insert<pos:position pos:line="7" pos:column="30"/></name><argument_list pos:line="7" pos:column="30">(<argument><expr><name pos:line="7" pos:column="31">boundary<pos:position pos:line="7" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="41">0<pos:position pos:line="7" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="44">"--"<pos:position pos:line="7" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="50">2<pos:position pos:line="7" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="53"/></expr_stmt>
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><operator pos:line="8" pos:column="21">++<pos:position pos:line="8" pos:column="23"/></operator><name><name pos:line="8" pos:column="23">mi<pos:position pos:line="8" pos:column="25"/></name><operator pos:line="8" pos:column="25">-&gt;<pos:position pos:line="8" pos:column="30"/></operator><name pos:line="8" pos:column="27">content_top<pos:position pos:line="8" pos:column="38"/></name></name> <operator pos:line="8" pos:column="39">&gt;=<pos:position pos:line="8" pos:column="44"/></operator> <operator pos:line="8" pos:column="42">&amp;<pos:position pos:line="8" pos:column="47"/></operator><name><name pos:line="8" pos:column="43">mi<pos:position pos:line="8" pos:column="45"/></name><operator pos:line="8" pos:column="45">-&gt;<pos:position pos:line="8" pos:column="50"/></operator><name pos:line="8" pos:column="47">content<pos:position pos:line="8" pos:column="54"/></name><index pos:line="8" pos:column="54">[<expr><name pos:line="8" pos:column="55">MAX_BOUNDARIES<pos:position pos:line="8" pos:column="69"/></name></expr>]<pos:position pos:line="8" pos:column="70"/></index></name></expr>)<pos:position pos:line="8" pos:column="71"/></condition><then pos:line="8" pos:column="71"> <block pos:line="8" pos:column="72">{
			<expr_stmt><expr><call><name pos:line="9" pos:column="25">error<pos:position pos:line="9" pos:column="30"/></name><argument_list pos:line="9" pos:column="30">(<argument><expr><literal type="string" pos:line="9" pos:column="31">"Too many boundaries to handle"<pos:position pos:line="9" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="64"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="10" pos:column="25">mi<pos:position pos:line="10" pos:column="27"/></name><operator pos:line="10" pos:column="27">-&gt;<pos:position pos:line="10" pos:column="32"/></operator><name pos:line="10" pos:column="29">input_error<pos:position pos:line="10" pos:column="40"/></name></name> <operator pos:line="10" pos:column="41">=<pos:position pos:line="10" pos:column="42"/></operator> <operator pos:line="10" pos:column="43">-<pos:position pos:line="10" pos:column="44"/></operator><literal type="number" pos:line="10" pos:column="44">1<pos:position pos:line="10" pos:column="45"/></literal></expr>;<pos:position pos:line="10" pos:column="46"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="11" pos:column="25">mi<pos:position pos:line="11" pos:column="27"/></name><operator pos:line="11" pos:column="27">-&gt;<pos:position pos:line="11" pos:column="32"/></operator><name pos:line="11" pos:column="29">content_top<pos:position pos:line="11" pos:column="40"/></name></name> <operator pos:line="11" pos:column="41">=<pos:position pos:line="11" pos:column="42"/></operator> <operator pos:line="11" pos:column="43">&amp;<pos:position pos:line="11" pos:column="48"/></operator><name><name pos:line="11" pos:column="44">mi<pos:position pos:line="11" pos:column="46"/></name><operator pos:line="11" pos:column="46">-&gt;<pos:position pos:line="11" pos:column="51"/></operator><name pos:line="11" pos:column="48">content<pos:position pos:line="11" pos:column="55"/></name><index pos:line="11" pos:column="55">[<expr><name pos:line="11" pos:column="56">MAX_BOUNDARIES<pos:position pos:line="11" pos:column="70"/></name></expr>]<pos:position pos:line="11" pos:column="71"/></index></name> <operator pos:line="11" pos:column="72">-<pos:position pos:line="11" pos:column="73"/></operator> <literal type="number" pos:line="11" pos:column="74">1<pos:position pos:line="11" pos:column="75"/></literal></expr>;<pos:position pos:line="11" pos:column="76"/></expr_stmt>
			<return pos:line="12" pos:column="25">return;<pos:position pos:line="12" pos:column="32"/></return>
		}<pos:position pos:line="13" pos:column="18"/></block></then></if>
		<expr_stmt><expr><operator pos:line="14" pos:column="17">*<pos:position pos:line="14" pos:column="18"/></operator><operator pos:line="14" pos:column="18">(<pos:position pos:line="14" pos:column="19"/></operator><name><name pos:line="14" pos:column="19">mi<pos:position pos:line="14" pos:column="21"/></name><operator pos:line="14" pos:column="21">-&gt;<pos:position pos:line="14" pos:column="26"/></operator><name pos:line="14" pos:column="23">content_top<pos:position pos:line="14" pos:column="34"/></name></name><operator pos:line="14" pos:column="34">)<pos:position pos:line="14" pos:column="35"/></operator> <operator pos:line="14" pos:column="36">=<pos:position pos:line="14" pos:column="37"/></operator> <name pos:line="14" pos:column="38">boundary<pos:position pos:line="14" pos:column="46"/></name></expr>;<pos:position pos:line="14" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><name pos:line="15" pos:column="17">boundary<pos:position pos:line="15" pos:column="25"/></name> <operator pos:line="15" pos:column="26">=<pos:position pos:line="15" pos:column="27"/></operator> <name pos:line="15" pos:column="28">NULL<pos:position pos:line="15" pos:column="32"/></name></expr>;<pos:position pos:line="15" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="16" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="17" pos:column="9">slurp_attr<pos:position pos:line="17" pos:column="19"/></name><argument_list pos:line="17" pos:column="19">(<argument><expr><name><name pos:line="17" pos:column="20">line<pos:position pos:line="17" pos:column="24"/></name><operator pos:line="17" pos:column="24">-&gt;<pos:position pos:line="17" pos:column="29"/></operator><name pos:line="17" pos:column="26">buf<pos:position pos:line="17" pos:column="29"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="31">"charset="<pos:position pos:line="17" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="17" pos:column="43">&amp;<pos:position pos:line="17" pos:column="48"/></operator><name><name pos:line="17" pos:column="44">mi<pos:position pos:line="17" pos:column="46"/></name><operator pos:line="17" pos:column="46">-&gt;<pos:position pos:line="17" pos:column="51"/></operator><name pos:line="17" pos:column="48">charset<pos:position pos:line="17" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="57"/></expr_stmt>

	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name pos:line="19" pos:column="13">boundary<pos:position pos:line="19" pos:column="21"/></name></expr>)<pos:position pos:line="19" pos:column="22"/></condition><then pos:line="19" pos:column="22"> <block pos:line="19" pos:column="23">{
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">strbuf_release<pos:position pos:line="20" pos:column="31"/></name><argument_list pos:line="20" pos:column="31">(<argument><expr><name pos:line="20" pos:column="32">boundary<pos:position pos:line="20" pos:column="40"/></name></expr></argument>)<pos:position pos:line="20" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="21" pos:column="17">free<pos:position pos:line="21" pos:column="21"/></name><argument_list pos:line="21" pos:column="21">(<argument><expr><name pos:line="21" pos:column="22">boundary<pos:position pos:line="21" pos:column="30"/></name></expr></argument>)<pos:position pos:line="21" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="32"/></expr_stmt>
	}<pos:position pos:line="22" pos:column="10"/></block></then></if>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1270.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">show_ce_entry<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">tag<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="44">const<pos:position pos:line="1" pos:column="49"/></specifier> <name><name pos:line="1" pos:column="50">struct<pos:position pos:line="1" pos:column="56"/></name> <name pos:line="1" pos:column="57">cache_entry<pos:position pos:line="1" pos:column="68"/></name></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">ce<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="73"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">strbuf<pos:position pos:line="3" pos:column="22"/></name></name></type> <name pos:line="3" pos:column="23">name<pos:position pos:line="3" pos:column="27"/></name> <init pos:line="3" pos:column="28">= <expr><name pos:line="3" pos:column="30">STRBUF_INIT<pos:position pos:line="3" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">len<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><name pos:line="4" pos:column="19">max_prefix_len<pos:position pos:line="4" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt>
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">super_prefix<pos:position pos:line="5" pos:column="25"/></name></expr>)<pos:position pos:line="5" pos:column="26"/></condition><then pos:line="5" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="17">strbuf_addstr<pos:position pos:line="6" pos:column="30"/></name><argument_list pos:line="6" pos:column="30">(<argument><expr><operator pos:line="6" pos:column="31">&amp;<pos:position pos:line="6" pos:column="36"/></operator><name pos:line="6" pos:column="32">name<pos:position pos:line="6" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="38">super_prefix<pos:position pos:line="6" pos:column="50"/></name></expr></argument>)<pos:position pos:line="6" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="52"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="7" pos:column="9">strbuf_addstr<pos:position pos:line="7" pos:column="22"/></name><argument_list pos:line="7" pos:column="22">(<argument><expr><operator pos:line="7" pos:column="23">&amp;<pos:position pos:line="7" pos:column="28"/></operator><name pos:line="7" pos:column="24">name<pos:position pos:line="7" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="30">ce<pos:position pos:line="7" pos:column="32"/></name><operator pos:line="7" pos:column="32">-&gt;<pos:position pos:line="7" pos:column="37"/></operator><name pos:line="7" pos:column="34">name<pos:position pos:line="7" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="40"/></expr_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">len<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">&gt;=<pos:position pos:line="9" pos:column="22"/></operator> <call><name pos:line="9" pos:column="20">ce_namelen<pos:position pos:line="9" pos:column="30"/></name><argument_list pos:line="9" pos:column="30">(<argument><expr><name pos:line="9" pos:column="31">ce<pos:position pos:line="9" pos:column="33"/></name></expr></argument>)<pos:position pos:line="9" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="35"/></condition><then pos:line="9" pos:column="35">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="17">die<pos:position pos:line="10" pos:column="20"/></name><argument_list pos:line="10" pos:column="20">(<argument><expr><literal type="string" pos:line="10" pos:column="21">"git ls-files: internal error - cache entry not superset of prefix"<pos:position pos:line="10" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="90"/></expr_stmt></block></then></if>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">recurse_submodules<pos:position pos:line="12" pos:column="31"/></name> <operator pos:line="12" pos:column="32">&amp;&amp;<pos:position pos:line="12" pos:column="42"/></operator> <call><name pos:line="12" pos:column="35">S_ISGITLINK<pos:position pos:line="12" pos:column="46"/></name><argument_list pos:line="12" pos:column="46">(<argument><expr><name><name pos:line="12" pos:column="47">ce<pos:position pos:line="12" pos:column="49"/></name><operator pos:line="12" pos:column="49">-&gt;<pos:position pos:line="12" pos:column="54"/></operator><name pos:line="12" pos:column="51">ce_mode<pos:position pos:line="12" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="59"/></argument_list></call> <operator pos:line="12" pos:column="60">&amp;&amp;<pos:position pos:line="12" pos:column="70"/></operator>
	    <call><name pos:line="13" pos:column="13">submodule_path_match<pos:position pos:line="13" pos:column="33"/></name><argument_list pos:line="13" pos:column="33">(<argument><expr><operator pos:line="13" pos:column="34">&amp;<pos:position pos:line="13" pos:column="39"/></operator><name pos:line="13" pos:column="35">pathspec<pos:position pos:line="13" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="45">name<pos:position pos:line="13" pos:column="49"/></name><operator pos:line="13" pos:column="49">.<pos:position pos:line="13" pos:column="50"/></operator><name pos:line="13" pos:column="50">buf<pos:position pos:line="13" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="55">ps_matched<pos:position pos:line="13" pos:column="65"/></name></expr></argument>)<pos:position pos:line="13" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="67"/></condition><then pos:line="13" pos:column="67"> <block pos:line="13" pos:column="68">{
		<expr_stmt><expr><call><name pos:line="14" pos:column="17">show_gitlink<pos:position pos:line="14" pos:column="29"/></name><argument_list pos:line="14" pos:column="29">(<argument><expr><name pos:line="14" pos:column="30">ce<pos:position pos:line="14" pos:column="32"/></name></expr></argument>)<pos:position pos:line="14" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="15" pos:column="10"/></block></then> <elseif pos:line="15" pos:column="11">else <if pos:line="15" pos:column="16">if <condition pos:line="15" pos:column="19">(<expr><call><name pos:line="15" pos:column="20">match_pathspec<pos:position pos:line="15" pos:column="34"/></name><argument_list pos:line="15" pos:column="34">(<argument><expr><operator pos:line="15" pos:column="35">&amp;<pos:position pos:line="15" pos:column="40"/></operator><name pos:line="15" pos:column="36">pathspec<pos:position pos:line="15" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="46">name<pos:position pos:line="15" pos:column="50"/></name><operator pos:line="15" pos:column="50">.<pos:position pos:line="15" pos:column="51"/></operator><name pos:line="15" pos:column="51">buf<pos:position pos:line="15" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="56">name<pos:position pos:line="15" pos:column="60"/></name><operator pos:line="15" pos:column="60">.<pos:position pos:line="15" pos:column="61"/></operator><name pos:line="15" pos:column="61">len<pos:position pos:line="15" pos:column="64"/></name></name></expr></argument>,
				  <argument><expr><name pos:line="16" pos:column="35">len<pos:position pos:line="16" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="40">ps_matched<pos:position pos:line="16" pos:column="50"/></name></expr></argument>,
				  <argument><expr><call><name pos:line="17" pos:column="35">S_ISDIR<pos:position pos:line="17" pos:column="42"/></name><argument_list pos:line="17" pos:column="42">(<argument><expr><name><name pos:line="17" pos:column="43">ce<pos:position pos:line="17" pos:column="45"/></name><operator pos:line="17" pos:column="45">-&gt;<pos:position pos:line="17" pos:column="50"/></operator><name pos:line="17" pos:column="47">ce_mode<pos:position pos:line="17" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="55"/></argument_list></call> <operator pos:line="17" pos:column="56">||<pos:position pos:line="17" pos:column="58"/></operator>
				  <call><name pos:line="18" pos:column="35">S_ISGITLINK<pos:position pos:line="18" pos:column="46"/></name><argument_list pos:line="18" pos:column="46">(<argument><expr><name><name pos:line="18" pos:column="47">ce<pos:position pos:line="18" pos:column="49"/></name><operator pos:line="18" pos:column="49">-&gt;<pos:position pos:line="18" pos:column="54"/></operator><name pos:line="18" pos:column="51">ce_mode<pos:position pos:line="18" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="61"/></condition><then pos:line="18" pos:column="61"> <block pos:line="18" pos:column="62">{
		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><name pos:line="19" pos:column="21">tag<pos:position pos:line="19" pos:column="24"/></name> <operator pos:line="19" pos:column="25">&amp;&amp;<pos:position pos:line="19" pos:column="35"/></operator> <operator pos:line="19" pos:column="28">*<pos:position pos:line="19" pos:column="29"/></operator><name pos:line="19" pos:column="29">tag<pos:position pos:line="19" pos:column="32"/></name> <operator pos:line="19" pos:column="33">&amp;&amp;<pos:position pos:line="19" pos:column="43"/></operator> <name pos:line="19" pos:column="36">show_valid_bit<pos:position pos:line="19" pos:column="50"/></name> <operator pos:line="19" pos:column="51">&amp;&amp;<pos:position pos:line="19" pos:column="61"/></operator>
		    <operator pos:line="20" pos:column="21">(<pos:position pos:line="20" pos:column="22"/></operator><name><name pos:line="20" pos:column="22">ce<pos:position pos:line="20" pos:column="24"/></name><operator pos:line="20" pos:column="24">-&gt;<pos:position pos:line="20" pos:column="29"/></operator><name pos:line="20" pos:column="26">ce_flags<pos:position pos:line="20" pos:column="34"/></name></name> <operator pos:line="20" pos:column="35">&amp;<pos:position pos:line="20" pos:column="40"/></operator> <name pos:line="20" pos:column="37">CE_VALID<pos:position pos:line="20" pos:column="45"/></name><operator pos:line="20" pos:column="45">)<pos:position pos:line="20" pos:column="46"/></operator></expr>)<pos:position pos:line="20" pos:column="47"/></condition><then pos:line="20" pos:column="47"> <block pos:line="20" pos:column="48">{
			<decl_stmt><decl><specifier pos:line="21" pos:column="25">static<pos:position pos:line="21" pos:column="31"/></specifier> <type><name pos:line="21" pos:column="32">char<pos:position pos:line="21" pos:column="36"/></name></type> <name><name pos:line="21" pos:column="37">alttag<pos:position pos:line="21" pos:column="43"/></name><index pos:line="21" pos:column="43">[<expr><literal type="number" pos:line="21" pos:column="44">4<pos:position pos:line="21" pos:column="45"/></literal></expr>]<pos:position pos:line="21" pos:column="46"/></index></name></decl>;<pos:position pos:line="21" pos:column="47"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="22" pos:column="25">memcpy<pos:position pos:line="22" pos:column="31"/></name><argument_list pos:line="22" pos:column="31">(<argument><expr><name pos:line="22" pos:column="32">alttag<pos:position pos:line="22" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="40">tag<pos:position pos:line="22" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="45">3<pos:position pos:line="22" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="48"/></expr_stmt>
			<if pos:line="23" pos:column="25">if <condition pos:line="23" pos:column="28">(<expr><call><name pos:line="23" pos:column="29">isalpha<pos:position pos:line="23" pos:column="36"/></name><argument_list pos:line="23" pos:column="36">(<argument><expr><name><name pos:line="23" pos:column="37">tag<pos:position pos:line="23" pos:column="40"/></name><index pos:line="23" pos:column="40">[<expr><literal type="number" pos:line="23" pos:column="41">0<pos:position pos:line="23" pos:column="42"/></literal></expr>]<pos:position pos:line="23" pos:column="43"/></index></name></expr></argument>)<pos:position pos:line="23" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="45"/></condition><then pos:line="23" pos:column="45">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="24" pos:column="33">alttag<pos:position pos:line="24" pos:column="39"/></name><index pos:line="24" pos:column="39">[<expr><literal type="number" pos:line="24" pos:column="40">0<pos:position pos:line="24" pos:column="41"/></literal></expr>]<pos:position pos:line="24" pos:column="42"/></index></name> <operator pos:line="24" pos:column="43">=<pos:position pos:line="24" pos:column="44"/></operator> <call><name pos:line="24" pos:column="45">tolower<pos:position pos:line="24" pos:column="52"/></name><argument_list pos:line="24" pos:column="52">(<argument><expr><name><name pos:line="24" pos:column="53">tag<pos:position pos:line="24" pos:column="56"/></name><index pos:line="24" pos:column="56">[<expr><literal type="number" pos:line="24" pos:column="57">0<pos:position pos:line="24" pos:column="58"/></literal></expr>]<pos:position pos:line="24" pos:column="59"/></index></name></expr></argument>)<pos:position pos:line="24" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="61"/></expr_stmt></block></then>
			<elseif pos:line="25" pos:column="25">else <if pos:line="25" pos:column="30">if <condition pos:line="25" pos:column="33">(<expr><name><name pos:line="25" pos:column="34">tag<pos:position pos:line="25" pos:column="37"/></name><index pos:line="25" pos:column="37">[<expr><literal type="number" pos:line="25" pos:column="38">0<pos:position pos:line="25" pos:column="39"/></literal></expr>]<pos:position pos:line="25" pos:column="40"/></index></name> <operator pos:line="25" pos:column="41">==<pos:position pos:line="25" pos:column="43"/></operator> <literal type="char" pos:line="25" pos:column="44">'?'<pos:position pos:line="25" pos:column="47"/></literal></expr>)<pos:position pos:line="25" pos:column="48"/></condition><then pos:line="25" pos:column="48">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="26" pos:column="33">alttag<pos:position pos:line="26" pos:column="39"/></name><index pos:line="26" pos:column="39">[<expr><literal type="number" pos:line="26" pos:column="40">0<pos:position pos:line="26" pos:column="41"/></literal></expr>]<pos:position pos:line="26" pos:column="42"/></index></name> <operator pos:line="26" pos:column="43">=<pos:position pos:line="26" pos:column="44"/></operator> <literal type="char" pos:line="26" pos:column="45">'!'<pos:position pos:line="26" pos:column="48"/></literal></expr>;<pos:position pos:line="26" pos:column="49"/></expr_stmt></block></then></if></elseif>
			<else pos:line="27" pos:column="25">else <block pos:line="27" pos:column="30">{
				<expr_stmt><expr><name><name pos:line="28" pos:column="33">alttag<pos:position pos:line="28" pos:column="39"/></name><index pos:line="28" pos:column="39">[<expr><literal type="number" pos:line="28" pos:column="40">0<pos:position pos:line="28" pos:column="41"/></literal></expr>]<pos:position pos:line="28" pos:column="42"/></index></name> <operator pos:line="28" pos:column="43">=<pos:position pos:line="28" pos:column="44"/></operator> <literal type="char" pos:line="28" pos:column="45">'v'<pos:position pos:line="28" pos:column="48"/></literal></expr>;<pos:position pos:line="28" pos:column="49"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="29" pos:column="33">alttag<pos:position pos:line="29" pos:column="39"/></name><index pos:line="29" pos:column="39">[<expr><literal type="number" pos:line="29" pos:column="40">1<pos:position pos:line="29" pos:column="41"/></literal></expr>]<pos:position pos:line="29" pos:column="42"/></index></name> <operator pos:line="29" pos:column="43">=<pos:position pos:line="29" pos:column="44"/></operator> <name><name pos:line="29" pos:column="45">tag<pos:position pos:line="29" pos:column="48"/></name><index pos:line="29" pos:column="48">[<expr><literal type="number" pos:line="29" pos:column="49">0<pos:position pos:line="29" pos:column="50"/></literal></expr>]<pos:position pos:line="29" pos:column="51"/></index></name></expr>;<pos:position pos:line="29" pos:column="52"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="30" pos:column="33">alttag<pos:position pos:line="30" pos:column="39"/></name><index pos:line="30" pos:column="39">[<expr><literal type="number" pos:line="30" pos:column="40">2<pos:position pos:line="30" pos:column="41"/></literal></expr>]<pos:position pos:line="30" pos:column="42"/></index></name> <operator pos:line="30" pos:column="43">=<pos:position pos:line="30" pos:column="44"/></operator> <literal type="char" pos:line="30" pos:column="45">' '<pos:position pos:line="30" pos:column="48"/></literal></expr>;<pos:position pos:line="30" pos:column="49"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="31" pos:column="33">alttag<pos:position pos:line="31" pos:column="39"/></name><index pos:line="31" pos:column="39">[<expr><literal type="number" pos:line="31" pos:column="40">3<pos:position pos:line="31" pos:column="41"/></literal></expr>]<pos:position pos:line="31" pos:column="42"/></index></name> <operator pos:line="31" pos:column="43">=<pos:position pos:line="31" pos:column="44"/></operator> <literal type="number" pos:line="31" pos:column="45">0<pos:position pos:line="31" pos:column="46"/></literal></expr>;<pos:position pos:line="31" pos:column="47"/></expr_stmt>
			}<pos:position pos:line="32" pos:column="26"/></block></else></if>
			<expr_stmt><expr><name pos:line="33" pos:column="25">tag<pos:position pos:line="33" pos:column="28"/></name> <operator pos:line="33" pos:column="29">=<pos:position pos:line="33" pos:column="30"/></operator> <name pos:line="33" pos:column="31">alttag<pos:position pos:line="33" pos:column="37"/></name></expr>;<pos:position pos:line="33" pos:column="38"/></expr_stmt>
		}<pos:position pos:line="34" pos:column="18"/></block></then></if>

		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><operator pos:line="36" pos:column="21">!<pos:position pos:line="36" pos:column="22"/></operator><name pos:line="36" pos:column="22">show_stage<pos:position pos:line="36" pos:column="32"/></name></expr>)<pos:position pos:line="36" pos:column="33"/></condition><then pos:line="36" pos:column="33"> <block pos:line="36" pos:column="34">{
			<expr_stmt><expr><call><name pos:line="37" pos:column="25">fputs<pos:position pos:line="37" pos:column="30"/></name><argument_list pos:line="37" pos:column="30">(<argument><expr><name pos:line="37" pos:column="31">tag<pos:position pos:line="37" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="36">stdout<pos:position pos:line="37" pos:column="42"/></name></expr></argument>)<pos:position pos:line="37" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="44"/></expr_stmt>
		}<pos:position pos:line="38" pos:column="18"/></block></then> <else pos:line="38" pos:column="19">else <block pos:line="38" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="39" pos:column="25">printf<pos:position pos:line="39" pos:column="31"/></name><argument_list pos:line="39" pos:column="31">(<argument><expr><literal type="string" pos:line="39" pos:column="32">"%s%06o %s %d\t"<pos:position pos:line="39" pos:column="48"/></literal></expr></argument>,
			       <argument><expr><name pos:line="40" pos:column="32">tag<pos:position pos:line="40" pos:column="35"/></name></expr></argument>,
			       <argument><expr><name><name pos:line="41" pos:column="32">ce<pos:position pos:line="41" pos:column="34"/></name><operator pos:line="41" pos:column="34">-&gt;<pos:position pos:line="41" pos:column="39"/></operator><name pos:line="41" pos:column="36">ce_mode<pos:position pos:line="41" pos:column="43"/></name></name></expr></argument>,
			       <argument><expr><call><name pos:line="42" pos:column="32">find_unique_abbrev<pos:position pos:line="42" pos:column="50"/></name><argument_list pos:line="42" pos:column="50">(<argument><expr><name><name pos:line="42" pos:column="51">ce<pos:position pos:line="42" pos:column="53"/></name><operator pos:line="42" pos:column="53">-&gt;<pos:position pos:line="42" pos:column="58"/></operator><name pos:line="42" pos:column="55">oid<pos:position pos:line="42" pos:column="58"/></name><operator pos:line="42" pos:column="58">.<pos:position pos:line="42" pos:column="59"/></operator><name pos:line="42" pos:column="59">hash<pos:position pos:line="42" pos:column="63"/></name></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="65">abbrev<pos:position pos:line="42" pos:column="71"/></name></expr></argument>)<pos:position pos:line="42" pos:column="72"/></argument_list></call></expr></argument>,
			       <argument><expr><call><name pos:line="43" pos:column="32">ce_stage<pos:position pos:line="43" pos:column="40"/></name><argument_list pos:line="43" pos:column="40">(<argument><expr><name pos:line="43" pos:column="41">ce<pos:position pos:line="43" pos:column="43"/></name></expr></argument>)<pos:position pos:line="43" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="43" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="46"/></expr_stmt>
		}<pos:position pos:line="44" pos:column="18"/></block></else></if>
		<expr_stmt><expr><call><name pos:line="45" pos:column="17">write_eolinfo<pos:position pos:line="45" pos:column="30"/></name><argument_list pos:line="45" pos:column="30">(<argument><expr><name pos:line="45" pos:column="31">ce<pos:position pos:line="45" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="35">ce<pos:position pos:line="45" pos:column="37"/></name><operator pos:line="45" pos:column="37">-&gt;<pos:position pos:line="45" pos:column="42"/></operator><name pos:line="45" pos:column="39">name<pos:position pos:line="45" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="46" pos:column="17">write_name<pos:position pos:line="46" pos:column="27"/></name><argument_list pos:line="46" pos:column="27">(<argument><expr><name><name pos:line="46" pos:column="28">ce<pos:position pos:line="46" pos:column="30"/></name><operator pos:line="46" pos:column="30">-&gt;<pos:position pos:line="46" pos:column="35"/></operator><name pos:line="46" pos:column="32">name<pos:position pos:line="46" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="38"/></expr_stmt>
		<if pos:line="47" pos:column="17">if <condition pos:line="47" pos:column="20">(<expr><name pos:line="47" pos:column="21">debug_mode<pos:position pos:line="47" pos:column="31"/></name></expr>)<pos:position pos:line="47" pos:column="32"/></condition><then pos:line="47" pos:column="32"> <block pos:line="47" pos:column="33">{
			<decl_stmt><decl><type><specifier pos:line="48" pos:column="25">const<pos:position pos:line="48" pos:column="30"/></specifier> <name><name pos:line="48" pos:column="31">struct<pos:position pos:line="48" pos:column="37"/></name> <name pos:line="48" pos:column="38">stat_data<pos:position pos:line="48" pos:column="47"/></name></name> <modifier pos:line="48" pos:column="48">*<pos:position pos:line="48" pos:column="49"/></modifier></type><name pos:line="48" pos:column="49">sd<pos:position pos:line="48" pos:column="51"/></name> <init pos:line="48" pos:column="52">= <expr><operator pos:line="48" pos:column="54">&amp;<pos:position pos:line="48" pos:column="59"/></operator><name><name pos:line="48" pos:column="55">ce<pos:position pos:line="48" pos:column="57"/></name><operator pos:line="48" pos:column="57">-&gt;<pos:position pos:line="48" pos:column="62"/></operator><name pos:line="48" pos:column="59">ce_stat_data<pos:position pos:line="48" pos:column="71"/></name></name></expr></init></decl>;<pos:position pos:line="48" pos:column="72"/></decl_stmt>

			<expr_stmt><expr><call><name pos:line="50" pos:column="25">printf<pos:position pos:line="50" pos:column="31"/></name><argument_list pos:line="50" pos:column="31">(<argument><expr><literal type="string" pos:line="50" pos:column="32">"  ctime: %d:%d\n"<pos:position pos:line="50" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="52">sd<pos:position pos:line="50" pos:column="54"/></name><operator pos:line="50" pos:column="54">-&gt;<pos:position pos:line="50" pos:column="59"/></operator><name pos:line="50" pos:column="56">sd_ctime<pos:position pos:line="50" pos:column="64"/></name><operator pos:line="50" pos:column="64">.<pos:position pos:line="50" pos:column="65"/></operator><name pos:line="50" pos:column="65">sec<pos:position pos:line="50" pos:column="68"/></name></name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="70">sd<pos:position pos:line="50" pos:column="72"/></name><operator pos:line="50" pos:column="72">-&gt;<pos:position pos:line="50" pos:column="77"/></operator><name pos:line="50" pos:column="74">sd_ctime<pos:position pos:line="50" pos:column="82"/></name><operator pos:line="50" pos:column="82">.<pos:position pos:line="50" pos:column="83"/></operator><name pos:line="50" pos:column="83">nsec<pos:position pos:line="50" pos:column="87"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="89"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="51" pos:column="25">printf<pos:position pos:line="51" pos:column="31"/></name><argument_list pos:line="51" pos:column="31">(<argument><expr><literal type="string" pos:line="51" pos:column="32">"  mtime: %d:%d\n"<pos:position pos:line="51" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="52">sd<pos:position pos:line="51" pos:column="54"/></name><operator pos:line="51" pos:column="54">-&gt;<pos:position pos:line="51" pos:column="59"/></operator><name pos:line="51" pos:column="56">sd_mtime<pos:position pos:line="51" pos:column="64"/></name><operator pos:line="51" pos:column="64">.<pos:position pos:line="51" pos:column="65"/></operator><name pos:line="51" pos:column="65">sec<pos:position pos:line="51" pos:column="68"/></name></name></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="70">sd<pos:position pos:line="51" pos:column="72"/></name><operator pos:line="51" pos:column="72">-&gt;<pos:position pos:line="51" pos:column="77"/></operator><name pos:line="51" pos:column="74">sd_mtime<pos:position pos:line="51" pos:column="82"/></name><operator pos:line="51" pos:column="82">.<pos:position pos:line="51" pos:column="83"/></operator><name pos:line="51" pos:column="83">nsec<pos:position pos:line="51" pos:column="87"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="89"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="52" pos:column="25">printf<pos:position pos:line="52" pos:column="31"/></name><argument_list pos:line="52" pos:column="31">(<argument><expr><literal type="string" pos:line="52" pos:column="32">"  dev: %d\tino: %d\n"<pos:position pos:line="52" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="56">sd<pos:position pos:line="52" pos:column="58"/></name><operator pos:line="52" pos:column="58">-&gt;<pos:position pos:line="52" pos:column="63"/></operator><name pos:line="52" pos:column="60">sd_dev<pos:position pos:line="52" pos:column="66"/></name></name></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="68">sd<pos:position pos:line="52" pos:column="70"/></name><operator pos:line="52" pos:column="70">-&gt;<pos:position pos:line="52" pos:column="75"/></operator><name pos:line="52" pos:column="72">sd_ino<pos:position pos:line="52" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="80"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="53" pos:column="25">printf<pos:position pos:line="53" pos:column="31"/></name><argument_list pos:line="53" pos:column="31">(<argument><expr><literal type="string" pos:line="53" pos:column="32">"  uid: %d\tgid: %d\n"<pos:position pos:line="53" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="56">sd<pos:position pos:line="53" pos:column="58"/></name><operator pos:line="53" pos:column="58">-&gt;<pos:position pos:line="53" pos:column="63"/></operator><name pos:line="53" pos:column="60">sd_uid<pos:position pos:line="53" pos:column="66"/></name></name></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="68">sd<pos:position pos:line="53" pos:column="70"/></name><operator pos:line="53" pos:column="70">-&gt;<pos:position pos:line="53" pos:column="75"/></operator><name pos:line="53" pos:column="72">sd_gid<pos:position pos:line="53" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="80"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="54" pos:column="25">printf<pos:position pos:line="54" pos:column="31"/></name><argument_list pos:line="54" pos:column="31">(<argument><expr><literal type="string" pos:line="54" pos:column="32">"  size: %d\tflags: %x\n"<pos:position pos:line="54" pos:column="57"/></literal></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="59">sd<pos:position pos:line="54" pos:column="61"/></name><operator pos:line="54" pos:column="61">-&gt;<pos:position pos:line="54" pos:column="66"/></operator><name pos:line="54" pos:column="63">sd_size<pos:position pos:line="54" pos:column="70"/></name></name></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="72">ce<pos:position pos:line="54" pos:column="74"/></name><operator pos:line="54" pos:column="74">-&gt;<pos:position pos:line="54" pos:column="79"/></operator><name pos:line="54" pos:column="76">ce_flags<pos:position pos:line="54" pos:column="84"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="86"/></expr_stmt>
		}<pos:position pos:line="55" pos:column="18"/></block></then></if>
	}<pos:position pos:line="56" pos:column="10"/></block></then></if></elseif></if>

	<expr_stmt><expr><call><name pos:line="58" pos:column="9">strbuf_release<pos:position pos:line="58" pos:column="23"/></name><argument_list pos:line="58" pos:column="23">(<argument><expr><operator pos:line="58" pos:column="24">&amp;<pos:position pos:line="58" pos:column="29"/></operator><name pos:line="58" pos:column="25">name<pos:position pos:line="58" pos:column="29"/></name></expr></argument>)<pos:position pos:line="58" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="31"/></expr_stmt>
}<pos:position pos:line="59" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3214_git-2.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">remote<pos:position pos:line="1" pos:column="21"/></name></name> <modifier pos:line="1" pos:column="22">*<pos:position pos:line="1" pos:column="23"/></modifier></type><name pos:line="1" pos:column="23">make_remote<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><specifier pos:line="1" pos:column="35">const<pos:position pos:line="1" pos:column="40"/></specifier> <name pos:line="1" pos:column="41">char<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">name<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">int<pos:position pos:line="1" pos:column="56"/></name></type> <name pos:line="1" pos:column="57">len<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">remote<pos:position pos:line="3" pos:column="22"/></name></name> <modifier pos:line="3" pos:column="23">*<pos:position pos:line="3" pos:column="24"/></modifier></type><name pos:line="3" pos:column="24">ret<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">i<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>

	<for pos:line="6" pos:column="9">for <control pos:line="6" pos:column="13">(<init><expr><name pos:line="6" pos:column="14">i<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">=<pos:position pos:line="6" pos:column="17"/></operator> <literal type="number" pos:line="6" pos:column="18">0<pos:position pos:line="6" pos:column="19"/></literal></expr>;<pos:position pos:line="6" pos:column="20"/></init> <condition><expr><name pos:line="6" pos:column="21">i<pos:position pos:line="6" pos:column="22"/></name> <operator pos:line="6" pos:column="23">&lt;<pos:position pos:line="6" pos:column="27"/></operator> <name pos:line="6" pos:column="25">remotes_nr<pos:position pos:line="6" pos:column="35"/></name></expr>;<pos:position pos:line="6" pos:column="36"/></condition> <incr><expr><name pos:line="6" pos:column="37">i<pos:position pos:line="6" pos:column="38"/></name><operator pos:line="6" pos:column="38">++<pos:position pos:line="6" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="6" pos:column="41"/></control> <block pos:line="6" pos:column="42">{
		<if pos:line="7" pos:column="17">if <condition pos:line="7" pos:column="20">(<expr><ternary><condition><expr><name pos:line="7" pos:column="21">len<pos:position pos:line="7" pos:column="24"/></name></expr> ?<pos:position pos:line="7" pos:column="26"/></condition><then pos:line="7" pos:column="26"> <expr><operator pos:line="7" pos:column="27">(<pos:position pos:line="7" pos:column="28"/></operator><operator pos:line="7" pos:column="28">!<pos:position pos:line="7" pos:column="29"/></operator><call><name pos:line="7" pos:column="29">strncmp<pos:position pos:line="7" pos:column="36"/></name><argument_list pos:line="7" pos:column="36">(<argument><expr><name pos:line="7" pos:column="37">name<pos:position pos:line="7" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="43">remotes<pos:position pos:line="7" pos:column="50"/></name><index pos:line="7" pos:column="50">[<expr><name pos:line="7" pos:column="51">i<pos:position pos:line="7" pos:column="52"/></name></expr>]<pos:position pos:line="7" pos:column="53"/></index></name><operator pos:line="7" pos:column="53">-&gt;<pos:position pos:line="7" pos:column="58"/></operator><name pos:line="7" pos:column="55">name<pos:position pos:line="7" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="61">len<pos:position pos:line="7" pos:column="64"/></name></expr></argument>)<pos:position pos:line="7" pos:column="65"/></argument_list></call> <operator pos:line="7" pos:column="66">&amp;&amp;<pos:position pos:line="7" pos:column="76"/></operator>
			   <operator pos:line="8" pos:column="28">!<pos:position pos:line="8" pos:column="29"/></operator><name><name pos:line="8" pos:column="29">remotes<pos:position pos:line="8" pos:column="36"/></name><index pos:line="8" pos:column="36">[<expr><name pos:line="8" pos:column="37">i<pos:position pos:line="8" pos:column="38"/></name></expr>]<pos:position pos:line="8" pos:column="39"/></index></name><operator pos:line="8" pos:column="39">-&gt;<pos:position pos:line="8" pos:column="44"/></operator><name><name pos:line="8" pos:column="41">name<pos:position pos:line="8" pos:column="45"/></name><index pos:line="8" pos:column="45">[<expr><name pos:line="8" pos:column="46">len<pos:position pos:line="8" pos:column="49"/></name></expr>]<pos:position pos:line="8" pos:column="50"/></index></name><operator pos:line="8" pos:column="50">)<pos:position pos:line="8" pos:column="51"/></operator></expr> <pos:position pos:line="8" pos:column="52"/></then><else pos:line="8" pos:column="52">:
		    <expr><operator pos:line="9" pos:column="21">!<pos:position pos:line="9" pos:column="22"/></operator><call><name pos:line="9" pos:column="22">strcmp<pos:position pos:line="9" pos:column="28"/></name><argument_list pos:line="9" pos:column="28">(<argument><expr><name pos:line="9" pos:column="29">name<pos:position pos:line="9" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="35">remotes<pos:position pos:line="9" pos:column="42"/></name><index pos:line="9" pos:column="42">[<expr><name pos:line="9" pos:column="43">i<pos:position pos:line="9" pos:column="44"/></name></expr>]<pos:position pos:line="9" pos:column="45"/></index></name><operator pos:line="9" pos:column="45">-&gt;<pos:position pos:line="9" pos:column="50"/></operator><name pos:line="9" pos:column="47">name<pos:position pos:line="9" pos:column="51"/></name></expr></argument>)<pos:position pos:line="9" pos:column="52"/></argument_list></call></expr></else></ternary></expr>)<pos:position pos:line="9" pos:column="53"/></condition><then pos:line="9" pos:column="53">
			<block type="pseudo"><return pos:line="10" pos:column="25">return <expr><name><name pos:line="10" pos:column="32">remotes<pos:position pos:line="10" pos:column="39"/></name><index pos:line="10" pos:column="39">[<expr><name pos:line="10" pos:column="40">i<pos:position pos:line="10" pos:column="41"/></name></expr>]<pos:position pos:line="10" pos:column="42"/></index></name></expr>;<pos:position pos:line="10" pos:column="43"/></return></block></then></if>
	}<pos:position pos:line="11" pos:column="10"/></block></for>

	<expr_stmt><expr><name pos:line="13" pos:column="9">ret<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">=<pos:position pos:line="13" pos:column="14"/></operator> <call><name pos:line="13" pos:column="15">xcalloc<pos:position pos:line="13" pos:column="22"/></name><argument_list pos:line="13" pos:column="22">(<argument><expr><literal type="number" pos:line="13" pos:column="23">1<pos:position pos:line="13" pos:column="24"/></literal></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="26">sizeof<argument_list pos:line="13" pos:column="32">(<argument><expr pos:line="13" pos:column="33">struct <name pos:line="13" pos:column="40">remote<pos:position pos:line="13" pos:column="46"/></name></expr></argument>)<pos:position pos:line="13" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="49"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="14" pos:column="9">ret<pos:position pos:line="14" pos:column="12"/></name><operator pos:line="14" pos:column="12">-&gt;<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="14">prune<pos:position pos:line="14" pos:column="19"/></name></name> <operator pos:line="14" pos:column="20">=<pos:position pos:line="14" pos:column="21"/></operator> <operator pos:line="14" pos:column="22">-<pos:position pos:line="14" pos:column="23"/></operator><literal type="number" pos:line="14" pos:column="23">1<pos:position pos:line="14" pos:column="24"/></literal></expr>;<pos:position pos:line="14" pos:column="25"/></expr_stmt>  <comment type="block" pos:line="14" pos:column="27">/* unspecified */</comment>
	<expr_stmt><expr><call><name pos:line="15" pos:column="9">ALLOC_GROW<pos:position pos:line="15" pos:column="19"/></name><argument_list pos:line="15" pos:column="19">(<argument><expr><name pos:line="15" pos:column="20">remotes<pos:position pos:line="15" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="29">remotes_nr<pos:position pos:line="15" pos:column="39"/></name> <operator pos:line="15" pos:column="40">+<pos:position pos:line="15" pos:column="41"/></operator> <literal type="number" pos:line="15" pos:column="42">1<pos:position pos:line="15" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="45">remotes_alloc<pos:position pos:line="15" pos:column="58"/></name></expr></argument>)<pos:position pos:line="15" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="60"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="16" pos:column="9">remotes<pos:position pos:line="16" pos:column="16"/></name><index pos:line="16" pos:column="16">[<expr><name pos:line="16" pos:column="17">remotes_nr<pos:position pos:line="16" pos:column="27"/></name><operator pos:line="16" pos:column="27">++<pos:position pos:line="16" pos:column="29"/></operator></expr>]<pos:position pos:line="16" pos:column="30"/></index></name> <operator pos:line="16" pos:column="31">=<pos:position pos:line="16" pos:column="32"/></operator> <name pos:line="16" pos:column="33">ret<pos:position pos:line="16" pos:column="36"/></name></expr>;<pos:position pos:line="16" pos:column="37"/></expr_stmt>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">len<pos:position pos:line="17" pos:column="16"/></name></expr>)<pos:position pos:line="17" pos:column="17"/></condition><then pos:line="17" pos:column="17">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="18" pos:column="17">ret<pos:position pos:line="18" pos:column="20"/></name><operator pos:line="18" pos:column="20">-&gt;<pos:position pos:line="18" pos:column="25"/></operator><name pos:line="18" pos:column="22">name<pos:position pos:line="18" pos:column="26"/></name></name> <operator pos:line="18" pos:column="27">=<pos:position pos:line="18" pos:column="28"/></operator> <call><name pos:line="18" pos:column="29">xstrndup<pos:position pos:line="18" pos:column="37"/></name><argument_list pos:line="18" pos:column="37">(<argument><expr><name pos:line="18" pos:column="38">name<pos:position pos:line="18" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="44">len<pos:position pos:line="18" pos:column="47"/></name></expr></argument>)<pos:position pos:line="18" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="49"/></expr_stmt></block></then>
	<else pos:line="19" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="20" pos:column="17">ret<pos:position pos:line="20" pos:column="20"/></name><operator pos:line="20" pos:column="20">-&gt;<pos:position pos:line="20" pos:column="25"/></operator><name pos:line="20" pos:column="22">name<pos:position pos:line="20" pos:column="26"/></name></name> <operator pos:line="20" pos:column="27">=<pos:position pos:line="20" pos:column="28"/></operator> <call><name pos:line="20" pos:column="29">xstrdup<pos:position pos:line="20" pos:column="36"/></name><argument_list pos:line="20" pos:column="36">(<argument><expr><name pos:line="20" pos:column="37">name<pos:position pos:line="20" pos:column="41"/></name></expr></argument>)<pos:position pos:line="20" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="43"/></expr_stmt></block></else></if>
	<return pos:line="21" pos:column="9">return <expr><name pos:line="21" pos:column="16">ret<pos:position pos:line="21" pos:column="19"/></name></expr>;<pos:position pos:line="21" pos:column="20"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

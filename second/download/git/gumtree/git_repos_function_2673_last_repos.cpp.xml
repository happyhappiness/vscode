<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2673_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">transport_anonymize_url<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><specifier pos:line="1" pos:column="31">const<pos:position pos:line="1" pos:column="36"/></specifier> <name pos:line="1" pos:column="37">char<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">url<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">scheme_prefix<pos:position pos:line="3" pos:column="28"/></name></decl>, <modifier pos:line="3" pos:column="30">*<pos:position pos:line="3" pos:column="31"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="31">anon_part<pos:position pos:line="3" pos:column="40"/></name></decl>;<pos:position pos:line="3" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">size_t<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">anon_len<pos:position pos:line="4" pos:column="24"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="26">prefix_len<pos:position pos:line="4" pos:column="36"/></name> <init pos:line="4" pos:column="37">= <expr><literal type="number" pos:line="4" pos:column="39">0<pos:position pos:line="4" pos:column="40"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>

	<expr_stmt><expr><name pos:line="6" pos:column="9">anon_part<pos:position pos:line="6" pos:column="18"/></name> <operator pos:line="6" pos:column="19">=<pos:position pos:line="6" pos:column="20"/></operator> <call><name pos:line="6" pos:column="21">strchr<pos:position pos:line="6" pos:column="27"/></name><argument_list pos:line="6" pos:column="27">(<argument><expr><name pos:line="6" pos:column="28">url<pos:position pos:line="6" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="6" pos:column="33">'@'<pos:position pos:line="6" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="38"/></expr_stmt>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><call><name pos:line="7" pos:column="13">url_is_local_not_ssh<pos:position pos:line="7" pos:column="33"/></name><argument_list pos:line="7" pos:column="33">(<argument><expr><name pos:line="7" pos:column="34">url<pos:position pos:line="7" pos:column="37"/></name></expr></argument>)<pos:position pos:line="7" pos:column="38"/></argument_list></call> <operator pos:line="7" pos:column="39">||<pos:position pos:line="7" pos:column="41"/></operator> <operator pos:line="7" pos:column="42">!<pos:position pos:line="7" pos:column="43"/></operator><name pos:line="7" pos:column="43">anon_part<pos:position pos:line="7" pos:column="52"/></name></expr>)<pos:position pos:line="7" pos:column="53"/></condition><then pos:line="7" pos:column="53">
		<block type="pseudo"><goto pos:line="8" pos:column="17">goto <name pos:line="8" pos:column="22">literal_copy<pos:position pos:line="8" pos:column="34"/></name>;<pos:position pos:line="8" pos:column="35"/></goto></block></then></if>

	<expr_stmt><expr><name pos:line="10" pos:column="9">anon_len<pos:position pos:line="10" pos:column="17"/></name> <operator pos:line="10" pos:column="18">=<pos:position pos:line="10" pos:column="19"/></operator> <call><name pos:line="10" pos:column="20">strlen<pos:position pos:line="10" pos:column="26"/></name><argument_list pos:line="10" pos:column="26">(<argument><expr><operator pos:line="10" pos:column="27">++<pos:position pos:line="10" pos:column="29"/></operator><name pos:line="10" pos:column="29">anon_part<pos:position pos:line="10" pos:column="38"/></name></expr></argument>)<pos:position pos:line="10" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><name pos:line="11" pos:column="9">scheme_prefix<pos:position pos:line="11" pos:column="22"/></name> <operator pos:line="11" pos:column="23">=<pos:position pos:line="11" pos:column="24"/></operator> <call><name pos:line="11" pos:column="25">strstr<pos:position pos:line="11" pos:column="31"/></name><argument_list pos:line="11" pos:column="31">(<argument><expr><name pos:line="11" pos:column="32">url<pos:position pos:line="11" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="37">"://"<pos:position pos:line="11" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="44"/></expr_stmt>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">!<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">scheme_prefix<pos:position pos:line="12" pos:column="27"/></name></expr>)<pos:position pos:line="12" pos:column="28"/></condition><then pos:line="12" pos:column="28"> <block pos:line="12" pos:column="29">{
		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><operator pos:line="13" pos:column="21">!<pos:position pos:line="13" pos:column="22"/></operator><call><name pos:line="13" pos:column="22">strchr<pos:position pos:line="13" pos:column="28"/></name><argument_list pos:line="13" pos:column="28">(<argument><expr><name pos:line="13" pos:column="29">anon_part<pos:position pos:line="13" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="13" pos:column="40">':'<pos:position pos:line="13" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="45"/></condition><then pos:line="13" pos:column="45">
			<comment type="block" pos:line="14" pos:column="25">/* cannot be "me@there:/path/name" */</comment>
			<block type="pseudo"><goto pos:line="15" pos:column="25">goto <name pos:line="15" pos:column="30">literal_copy<pos:position pos:line="15" pos:column="42"/></name>;<pos:position pos:line="15" pos:column="43"/></goto></block></then></if>
	}<pos:position pos:line="16" pos:column="10"/></block></then> <else pos:line="16" pos:column="11">else <block pos:line="16" pos:column="16">{
		<decl_stmt><decl><type><specifier pos:line="17" pos:column="17">const<pos:position pos:line="17" pos:column="22"/></specifier> <name pos:line="17" pos:column="23">char<pos:position pos:line="17" pos:column="27"/></name> <modifier pos:line="17" pos:column="28">*<pos:position pos:line="17" pos:column="29"/></modifier></type><name pos:line="17" pos:column="29">cp<pos:position pos:line="17" pos:column="31"/></name></decl>;<pos:position pos:line="17" pos:column="32"/></decl_stmt>
		<comment type="block" pos:line="18" pos:column="17">/* make sure scheme is reasonable */</comment>
		<for pos:line="19" pos:column="17">for <control pos:line="19" pos:column="21">(<init><expr><name pos:line="19" pos:column="22">cp<pos:position pos:line="19" pos:column="24"/></name> <operator pos:line="19" pos:column="25">=<pos:position pos:line="19" pos:column="26"/></operator> <name pos:line="19" pos:column="27">url<pos:position pos:line="19" pos:column="30"/></name></expr>;<pos:position pos:line="19" pos:column="31"/></init> <condition><expr><name pos:line="19" pos:column="32">cp<pos:position pos:line="19" pos:column="34"/></name> <operator pos:line="19" pos:column="35">&lt;<pos:position pos:line="19" pos:column="39"/></operator> <name pos:line="19" pos:column="37">scheme_prefix<pos:position pos:line="19" pos:column="50"/></name></expr>;<pos:position pos:line="19" pos:column="51"/></condition> <incr><expr><name pos:line="19" pos:column="52">cp<pos:position pos:line="19" pos:column="54"/></name><operator pos:line="19" pos:column="54">++<pos:position pos:line="19" pos:column="56"/></operator></expr></incr>)<pos:position pos:line="19" pos:column="57"/></control> <block pos:line="19" pos:column="58">{
			<switch pos:line="20" pos:column="25">switch <condition pos:line="20" pos:column="32">(<expr><operator pos:line="20" pos:column="33">*<pos:position pos:line="20" pos:column="34"/></operator><name pos:line="20" pos:column="34">cp<pos:position pos:line="20" pos:column="36"/></name></expr>)<pos:position pos:line="20" pos:column="37"/></condition> <block pos:line="20" pos:column="38">{
				<comment type="block" pos:line="21" pos:column="33">/* RFC 1738 2.1 */</comment>
			<case pos:line="22" pos:column="25">case <expr><literal type="char" pos:line="22" pos:column="30">'+'<pos:position pos:line="22" pos:column="33"/></literal></expr>:<pos:position pos:line="22" pos:column="34"/></case> <case pos:line="22" pos:column="35">case <expr><literal type="char" pos:line="22" pos:column="40">'.'<pos:position pos:line="22" pos:column="43"/></literal></expr>:<pos:position pos:line="22" pos:column="44"/></case> <case pos:line="22" pos:column="45">case <expr><literal type="char" pos:line="22" pos:column="50">'-'<pos:position pos:line="22" pos:column="53"/></literal></expr>:<pos:position pos:line="22" pos:column="54"/></case>
				<break pos:line="23" pos:column="33">break;<pos:position pos:line="23" pos:column="39"/></break> <comment type="block" pos:line="23" pos:column="40">/* ok */</comment>
			<default pos:line="24" pos:column="25">default:<pos:position pos:line="24" pos:column="33"/></default>
				<if pos:line="25" pos:column="33">if <condition pos:line="25" pos:column="36">(<expr><call><name pos:line="25" pos:column="37">isalnum<pos:position pos:line="25" pos:column="44"/></name><argument_list pos:line="25" pos:column="44">(<argument><expr><operator pos:line="25" pos:column="45">*<pos:position pos:line="25" pos:column="46"/></operator><name pos:line="25" pos:column="46">cp<pos:position pos:line="25" pos:column="48"/></name></expr></argument>)<pos:position pos:line="25" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="50"/></condition><then pos:line="25" pos:column="50">
					<block type="pseudo"><break pos:line="26" pos:column="41">break;<pos:position pos:line="26" pos:column="47"/></break></block></then></if>
				<comment type="block" pos:line="27" pos:column="33">/* it isn't */</comment>
				<goto pos:line="28" pos:column="33">goto <name pos:line="28" pos:column="38">literal_copy<pos:position pos:line="28" pos:column="50"/></name>;<pos:position pos:line="28" pos:column="51"/></goto>
			}<pos:position pos:line="29" pos:column="26"/></block></switch>
		}<pos:position pos:line="30" pos:column="18"/></block></for>
		<comment type="block" pos:line="31" pos:column="17">/* @ past the first slash does not count */</comment>
		<expr_stmt><expr><name pos:line="32" pos:column="17">cp<pos:position pos:line="32" pos:column="19"/></name> <operator pos:line="32" pos:column="20">=<pos:position pos:line="32" pos:column="21"/></operator> <call><name pos:line="32" pos:column="22">strchr<pos:position pos:line="32" pos:column="28"/></name><argument_list pos:line="32" pos:column="28">(<argument><expr><name pos:line="32" pos:column="29">scheme_prefix<pos:position pos:line="32" pos:column="42"/></name> <operator pos:line="32" pos:column="43">+<pos:position pos:line="32" pos:column="44"/></operator> <literal type="number" pos:line="32" pos:column="45">3<pos:position pos:line="32" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="char" pos:line="32" pos:column="48">'/'<pos:position pos:line="32" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="53"/></expr_stmt>
		<if pos:line="33" pos:column="17">if <condition pos:line="33" pos:column="20">(<expr><name pos:line="33" pos:column="21">cp<pos:position pos:line="33" pos:column="23"/></name> <operator pos:line="33" pos:column="24">&amp;&amp;<pos:position pos:line="33" pos:column="34"/></operator> <name pos:line="33" pos:column="27">cp<pos:position pos:line="33" pos:column="29"/></name> <operator pos:line="33" pos:column="30">&lt;<pos:position pos:line="33" pos:column="34"/></operator> <name pos:line="33" pos:column="32">anon_part<pos:position pos:line="33" pos:column="41"/></name></expr>)<pos:position pos:line="33" pos:column="42"/></condition><then pos:line="33" pos:column="42">
			<block type="pseudo"><goto pos:line="34" pos:column="25">goto <name pos:line="34" pos:column="30">literal_copy<pos:position pos:line="34" pos:column="42"/></name>;<pos:position pos:line="34" pos:column="43"/></goto></block></then></if>
		<expr_stmt><expr><name pos:line="35" pos:column="17">prefix_len<pos:position pos:line="35" pos:column="27"/></name> <operator pos:line="35" pos:column="28">=<pos:position pos:line="35" pos:column="29"/></operator> <name pos:line="35" pos:column="30">scheme_prefix<pos:position pos:line="35" pos:column="43"/></name> <operator pos:line="35" pos:column="44">-<pos:position pos:line="35" pos:column="45"/></operator> <name pos:line="35" pos:column="46">url<pos:position pos:line="35" pos:column="49"/></name> <operator pos:line="35" pos:column="50">+<pos:position pos:line="35" pos:column="51"/></operator> <literal type="number" pos:line="35" pos:column="52">3<pos:position pos:line="35" pos:column="53"/></literal></expr>;<pos:position pos:line="35" pos:column="54"/></expr_stmt>
	}<pos:position pos:line="36" pos:column="10"/></block></else></if>
	<return pos:line="37" pos:column="9">return <expr><call><name pos:line="37" pos:column="16">xstrfmt<pos:position pos:line="37" pos:column="23"/></name><argument_list pos:line="37" pos:column="23">(<argument><expr><literal type="string" pos:line="37" pos:column="24">"%.*s%.*s"<pos:position pos:line="37" pos:column="34"/></literal></expr></argument>, <argument><expr><operator pos:line="37" pos:column="36">(<pos:position pos:line="37" pos:column="37"/></operator><name pos:line="37" pos:column="37">int<pos:position pos:line="37" pos:column="40"/></name><operator pos:line="37" pos:column="40">)<pos:position pos:line="37" pos:column="41"/></operator><name pos:line="37" pos:column="41">prefix_len<pos:position pos:line="37" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="53">url<pos:position pos:line="37" pos:column="56"/></name></expr></argument>,
		       <argument><expr><operator pos:line="38" pos:column="24">(<pos:position pos:line="38" pos:column="25"/></operator><name pos:line="38" pos:column="25">int<pos:position pos:line="38" pos:column="28"/></name><operator pos:line="38" pos:column="28">)<pos:position pos:line="38" pos:column="29"/></operator><name pos:line="38" pos:column="29">anon_len<pos:position pos:line="38" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="39">anon_part<pos:position pos:line="38" pos:column="48"/></name></expr></argument>)<pos:position pos:line="38" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="50"/></return>
<label><name pos:line="39" pos:column="1">literal_copy<pos:position pos:line="39" pos:column="13"/></name>:<pos:position pos:line="39" pos:column="14"/></label>
	<return pos:line="40" pos:column="9">return <expr><call><name pos:line="40" pos:column="16">xstrdup<pos:position pos:line="40" pos:column="23"/></name><argument_list pos:line="40" pos:column="23">(<argument><expr><name pos:line="40" pos:column="24">url<pos:position pos:line="40" pos:column="27"/></name></expr></argument>)<pos:position pos:line="40" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="29"/></return>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1966_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">git_config_colorbool<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">var<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="43">const<pos:position pos:line="1" pos:column="48"/></specifier> <name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">value<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><name pos:line="3" pos:column="13">value<pos:position pos:line="3" pos:column="18"/></name></expr>)<pos:position pos:line="3" pos:column="19"/></condition><then pos:line="3" pos:column="19"> <block pos:line="3" pos:column="20">{
		<if pos:line="4" pos:column="17">if <condition pos:line="4" pos:column="20">(<expr><operator pos:line="4" pos:column="21">!<pos:position pos:line="4" pos:column="22"/></operator><call><name pos:line="4" pos:column="22">strcasecmp<pos:position pos:line="4" pos:column="32"/></name><argument_list pos:line="4" pos:column="32">(<argument><expr><name pos:line="4" pos:column="33">value<pos:position pos:line="4" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="40">"never"<pos:position pos:line="4" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="49"/></condition><then pos:line="4" pos:column="49">
			<block type="pseudo"><return pos:line="5" pos:column="25">return <expr><literal type="number" pos:line="5" pos:column="32">0<pos:position pos:line="5" pos:column="33"/></literal></expr>;<pos:position pos:line="5" pos:column="34"/></return></block></then></if>
		<if pos:line="6" pos:column="17">if <condition pos:line="6" pos:column="20">(<expr><operator pos:line="6" pos:column="21">!<pos:position pos:line="6" pos:column="22"/></operator><call><name pos:line="6" pos:column="22">strcasecmp<pos:position pos:line="6" pos:column="32"/></name><argument_list pos:line="6" pos:column="32">(<argument><expr><name pos:line="6" pos:column="33">value<pos:position pos:line="6" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="40">"always"<pos:position pos:line="6" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="50"/></condition><then pos:line="6" pos:column="50">
			<block type="pseudo"><return pos:line="7" pos:column="25">return <expr><literal type="number" pos:line="7" pos:column="32">1<pos:position pos:line="7" pos:column="33"/></literal></expr>;<pos:position pos:line="7" pos:column="34"/></return></block></then></if>
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><operator pos:line="8" pos:column="21">!<pos:position pos:line="8" pos:column="22"/></operator><call><name pos:line="8" pos:column="22">strcasecmp<pos:position pos:line="8" pos:column="32"/></name><argument_list pos:line="8" pos:column="32">(<argument><expr><name pos:line="8" pos:column="33">value<pos:position pos:line="8" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="40">"auto"<pos:position pos:line="8" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="48"/></condition><then pos:line="8" pos:column="48">
			<block type="pseudo"><return pos:line="9" pos:column="25">return <expr><name pos:line="9" pos:column="32">GIT_COLOR_AUTO<pos:position pos:line="9" pos:column="46"/></name></expr>;<pos:position pos:line="9" pos:column="47"/></return></block></then></if>
	}<pos:position pos:line="10" pos:column="10"/></block></then></if>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">!<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">var<pos:position pos:line="12" pos:column="17"/></name></expr>)<pos:position pos:line="12" pos:column="18"/></condition><then pos:line="12" pos:column="18">
		<block type="pseudo"><return pos:line="13" pos:column="17">return <expr><operator pos:line="13" pos:column="24">-<pos:position pos:line="13" pos:column="25"/></operator><literal type="number" pos:line="13" pos:column="25">1<pos:position pos:line="13" pos:column="26"/></literal></expr>;<pos:position pos:line="13" pos:column="27"/></return></block></then></if>

	<comment type="block" pos:line="15" pos:column="9">/* Missing or explicit false to turn off colorization */</comment>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><operator pos:line="16" pos:column="13">!<pos:position pos:line="16" pos:column="14"/></operator><call><name pos:line="16" pos:column="14">git_config_bool<pos:position pos:line="16" pos:column="29"/></name><argument_list pos:line="16" pos:column="29">(<argument><expr><name pos:line="16" pos:column="30">var<pos:position pos:line="16" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="35">value<pos:position pos:line="16" pos:column="40"/></name></expr></argument>)<pos:position pos:line="16" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="42"/></condition><then pos:line="16" pos:column="42">
		<block type="pseudo"><return pos:line="17" pos:column="17">return <expr><literal type="number" pos:line="17" pos:column="24">0<pos:position pos:line="17" pos:column="25"/></literal></expr>;<pos:position pos:line="17" pos:column="26"/></return></block></then></if>

	<comment type="block" pos:line="19" pos:column="9">/* any normal truth value defaults to 'auto' */</comment>
	<return pos:line="20" pos:column="9">return <expr><name pos:line="20" pos:column="16">GIT_COLOR_AUTO<pos:position pos:line="20" pos:column="30"/></name></expr>;<pos:position pos:line="20" pos:column="31"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

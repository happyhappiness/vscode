<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5710_git-2.9.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">loosen_unused_packed_objects<pos:position pos:line="1" pos:column="41"/></name><parameter_list pos:line="1" pos:column="41">(<parameter><decl><type><name><name pos:line="1" pos:column="42">struct<pos:position pos:line="1" pos:column="48"/></name> <name pos:line="1" pos:column="49">rev_info<pos:position pos:line="1" pos:column="57"/></name></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">revs<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">packed_git<pos:position pos:line="3" pos:column="26"/></name></name> <modifier pos:line="3" pos:column="27">*<pos:position pos:line="3" pos:column="28"/></modifier></type><name pos:line="3" pos:column="28">p<pos:position pos:line="3" pos:column="29"/></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">uint32_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">i<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">unsigned<pos:position pos:line="5" pos:column="23"/></name> <name pos:line="5" pos:column="24">char<pos:position pos:line="5" pos:column="28"/></name> <modifier pos:line="5" pos:column="29">*<pos:position pos:line="5" pos:column="30"/></modifier></type><name pos:line="5" pos:column="30">sha1<pos:position pos:line="5" pos:column="34"/></name></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>

	<for pos:line="7" pos:column="9">for <control pos:line="7" pos:column="13">(<init><expr><name pos:line="7" pos:column="14">p<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">=<pos:position pos:line="7" pos:column="17"/></operator> <name pos:line="7" pos:column="18">packed_git<pos:position pos:line="7" pos:column="28"/></name></expr>;<pos:position pos:line="7" pos:column="29"/></init> <condition><expr><name pos:line="7" pos:column="30">p<pos:position pos:line="7" pos:column="31"/></name></expr>;<pos:position pos:line="7" pos:column="32"/></condition> <incr><expr><name pos:line="7" pos:column="33">p<pos:position pos:line="7" pos:column="34"/></name> <operator pos:line="7" pos:column="35">=<pos:position pos:line="7" pos:column="36"/></operator> <name><name pos:line="7" pos:column="37">p<pos:position pos:line="7" pos:column="38"/></name><operator pos:line="7" pos:column="38">-&gt;<pos:position pos:line="7" pos:column="43"/></operator><name pos:line="7" pos:column="40">next<pos:position pos:line="7" pos:column="44"/></name></name></expr></incr>)<pos:position pos:line="7" pos:column="45"/></control> <block pos:line="7" pos:column="46">{
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><operator pos:line="8" pos:column="21">!<pos:position pos:line="8" pos:column="22"/></operator><name><name pos:line="8" pos:column="22">p<pos:position pos:line="8" pos:column="23"/></name><operator pos:line="8" pos:column="23">-&gt;<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="25">pack_local<pos:position pos:line="8" pos:column="35"/></name></name> <operator pos:line="8" pos:column="36">||<pos:position pos:line="8" pos:column="38"/></operator> <name><name pos:line="8" pos:column="39">p<pos:position pos:line="8" pos:column="40"/></name><operator pos:line="8" pos:column="40">-&gt;<pos:position pos:line="8" pos:column="45"/></operator><name pos:line="8" pos:column="42">pack_keep<pos:position pos:line="8" pos:column="51"/></name></name></expr>)<pos:position pos:line="8" pos:column="52"/></condition><then pos:line="8" pos:column="52">
			<block type="pseudo"><continue pos:line="9" pos:column="25">continue;<pos:position pos:line="9" pos:column="34"/></continue></block></then></if>

		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><call><name pos:line="11" pos:column="21">open_pack_index<pos:position pos:line="11" pos:column="36"/></name><argument_list pos:line="11" pos:column="36">(<argument><expr><name pos:line="11" pos:column="37">p<pos:position pos:line="11" pos:column="38"/></name></expr></argument>)<pos:position pos:line="11" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="40"/></condition><then pos:line="11" pos:column="40">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="25">die<pos:position pos:line="12" pos:column="28"/></name><argument_list pos:line="12" pos:column="28">(<argument><expr><literal type="string" pos:line="12" pos:column="29">"cannot open pack index"<pos:position pos:line="12" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="55"/></expr_stmt></block></then></if>

		<for pos:line="14" pos:column="17">for <control pos:line="14" pos:column="21">(<init><expr><name pos:line="14" pos:column="22">i<pos:position pos:line="14" pos:column="23"/></name> <operator pos:line="14" pos:column="24">=<pos:position pos:line="14" pos:column="25"/></operator> <literal type="number" pos:line="14" pos:column="26">0<pos:position pos:line="14" pos:column="27"/></literal></expr>;<pos:position pos:line="14" pos:column="28"/></init> <condition><expr><name pos:line="14" pos:column="29">i<pos:position pos:line="14" pos:column="30"/></name> <operator pos:line="14" pos:column="31">&lt;<pos:position pos:line="14" pos:column="35"/></operator> <name><name pos:line="14" pos:column="33">p<pos:position pos:line="14" pos:column="34"/></name><operator pos:line="14" pos:column="34">-&gt;<pos:position pos:line="14" pos:column="39"/></operator><name pos:line="14" pos:column="36">num_objects<pos:position pos:line="14" pos:column="47"/></name></name></expr>;<pos:position pos:line="14" pos:column="48"/></condition> <incr><expr><name pos:line="14" pos:column="49">i<pos:position pos:line="14" pos:column="50"/></name><operator pos:line="14" pos:column="50">++<pos:position pos:line="14" pos:column="52"/></operator></expr></incr>)<pos:position pos:line="14" pos:column="53"/></control> <block pos:line="14" pos:column="54">{
			<expr_stmt><expr><name pos:line="15" pos:column="25">sha1<pos:position pos:line="15" pos:column="29"/></name> <operator pos:line="15" pos:column="30">=<pos:position pos:line="15" pos:column="31"/></operator> <call><name pos:line="15" pos:column="32">nth_packed_object_sha1<pos:position pos:line="15" pos:column="54"/></name><argument_list pos:line="15" pos:column="54">(<argument><expr><name pos:line="15" pos:column="55">p<pos:position pos:line="15" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="58">i<pos:position pos:line="15" pos:column="59"/></name></expr></argument>)<pos:position pos:line="15" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="61"/></expr_stmt>
			<if pos:line="16" pos:column="25">if <condition pos:line="16" pos:column="28">(<expr><operator pos:line="16" pos:column="29">!<pos:position pos:line="16" pos:column="30"/></operator><call><name pos:line="16" pos:column="30">packlist_find<pos:position pos:line="16" pos:column="43"/></name><argument_list pos:line="16" pos:column="43">(<argument><expr><operator pos:line="16" pos:column="44">&amp;<pos:position pos:line="16" pos:column="49"/></operator><name pos:line="16" pos:column="45">to_pack<pos:position pos:line="16" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="54">sha1<pos:position pos:line="16" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="60">NULL<pos:position pos:line="16" pos:column="64"/></name></expr></argument>)<pos:position pos:line="16" pos:column="65"/></argument_list></call> <operator pos:line="16" pos:column="66">&amp;&amp;<pos:position pos:line="16" pos:column="76"/></operator>
			    <operator pos:line="17" pos:column="29">!<pos:position pos:line="17" pos:column="30"/></operator><call><name pos:line="17" pos:column="30">has_sha1_pack_kept_or_nonlocal<pos:position pos:line="17" pos:column="60"/></name><argument_list pos:line="17" pos:column="60">(<argument><expr><name pos:line="17" pos:column="61">sha1<pos:position pos:line="17" pos:column="65"/></name></expr></argument>)<pos:position pos:line="17" pos:column="66"/></argument_list></call> <operator pos:line="17" pos:column="67">&amp;&amp;<pos:position pos:line="17" pos:column="77"/></operator>
			    <operator pos:line="18" pos:column="29">!<pos:position pos:line="18" pos:column="30"/></operator><call><name pos:line="18" pos:column="30">loosened_object_can_be_discarded<pos:position pos:line="18" pos:column="62"/></name><argument_list pos:line="18" pos:column="62">(<argument><expr><name pos:line="18" pos:column="63">sha1<pos:position pos:line="18" pos:column="67"/></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="69">p<pos:position pos:line="18" pos:column="70"/></name><operator pos:line="18" pos:column="70">-&gt;<pos:position pos:line="18" pos:column="75"/></operator><name pos:line="18" pos:column="72">mtime<pos:position pos:line="18" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="78"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="79"/></condition><then pos:line="18" pos:column="79">
				<block type="pseudo"><if pos:line="19" pos:column="33">if <condition pos:line="19" pos:column="36">(<expr><call><name pos:line="19" pos:column="37">force_object_loose<pos:position pos:line="19" pos:column="55"/></name><argument_list pos:line="19" pos:column="55">(<argument><expr><name pos:line="19" pos:column="56">sha1<pos:position pos:line="19" pos:column="60"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="62">p<pos:position pos:line="19" pos:column="63"/></name><operator pos:line="19" pos:column="63">-&gt;<pos:position pos:line="19" pos:column="68"/></operator><name pos:line="19" pos:column="65">mtime<pos:position pos:line="19" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="72"/></condition><then pos:line="19" pos:column="72">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="41">die<pos:position pos:line="20" pos:column="44"/></name><argument_list pos:line="20" pos:column="44">(<argument><expr><literal type="string" pos:line="20" pos:column="45">"unable to force loose object"<pos:position pos:line="20" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="77"/></expr_stmt></block></then></if></block></then></if>
		}<pos:position pos:line="21" pos:column="18"/></block></for>
	}<pos:position pos:line="22" pos:column="10"/></block></for>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

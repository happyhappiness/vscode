<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4634_git-2.13.6.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">expand_loose_notes_ref<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name><name pos:line="1" pos:column="29">struct<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">strbuf<pos:position pos:line="1" pos:column="42"/></name></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">sb<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">unsigned<pos:position pos:line="3" pos:column="17"/></name> <name pos:line="3" pos:column="18">char<pos:position pos:line="3" pos:column="22"/></name></type> <name><name pos:line="3" pos:column="23">object<pos:position pos:line="3" pos:column="29"/></name><index pos:line="3" pos:column="29">[<expr><literal type="number" pos:line="3" pos:column="30">20<pos:position pos:line="3" pos:column="32"/></literal></expr>]<pos:position pos:line="3" pos:column="33"/></index></name></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><call><name pos:line="5" pos:column="13">get_sha1<pos:position pos:line="5" pos:column="21"/></name><argument_list pos:line="5" pos:column="21">(<argument><expr><name><name pos:line="5" pos:column="22">sb<pos:position pos:line="5" pos:column="24"/></name><operator pos:line="5" pos:column="24">-&gt;<pos:position pos:line="5" pos:column="29"/></operator><name pos:line="5" pos:column="26">buf<pos:position pos:line="5" pos:column="29"/></name></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="31">object<pos:position pos:line="5" pos:column="37"/></name></expr></argument>)<pos:position pos:line="5" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="39"/></condition><then pos:line="5" pos:column="39"> <block pos:line="5" pos:column="40">{
		<comment type="block" pos:line="6" pos:column="17">/* fallback to expand_notes_ref */</comment>
		<expr_stmt><expr><call><name pos:line="7" pos:column="17">expand_notes_ref<pos:position pos:line="7" pos:column="33"/></name><argument_list pos:line="7" pos:column="33">(<argument><expr><name pos:line="7" pos:column="34">sb<pos:position pos:line="7" pos:column="36"/></name></expr></argument>)<pos:position pos:line="7" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="8" pos:column="10"/></block></then></if>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

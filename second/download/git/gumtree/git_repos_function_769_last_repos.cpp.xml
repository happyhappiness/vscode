<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_769_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">set_packet_header<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">buf<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="42">const<pos:position pos:line="1" pos:column="47"/></specifier> <name pos:line="1" pos:column="48">int<pos:position pos:line="1" pos:column="51"/></name></type> <name pos:line="1" pos:column="52">size<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><name pos:line="3" pos:column="16">char<pos:position pos:line="3" pos:column="20"/></name></type> <name><name pos:line="3" pos:column="21">hexchar<pos:position pos:line="3" pos:column="28"/></name><index pos:line="3" pos:column="28">[]<pos:position pos:line="3" pos:column="30"/></index></name> <init pos:line="3" pos:column="31">= <expr><literal type="string" pos:line="3" pos:column="33">"0123456789abcdef"<pos:position pos:line="3" pos:column="51"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="52"/></decl_stmt>

	<cpp:define pos:line="5" pos:column="9">#<cpp:directive pos:line="5" pos:column="10">define<pos:position pos:line="5" pos:column="16"/></cpp:directive> <cpp:macro><name pos:line="5" pos:column="17">hex<pos:position pos:line="5" pos:column="20"/></name><parameter_list pos:line="5" pos:column="20">(<parameter><type><name pos:line="5" pos:column="21">a<pos:position pos:line="5" pos:column="22"/></name></type></parameter>)<pos:position pos:line="5" pos:column="23"/></parameter_list></cpp:macro> <cpp:value pos:line="5" pos:column="24">(hexchar[(a) &amp; 15])<pos:position pos:line="5" pos:column="43"/></cpp:value></cpp:define>
	<expr_stmt><expr><name><name pos:line="6" pos:column="9">buf<pos:position pos:line="6" pos:column="12"/></name><index pos:line="6" pos:column="12">[<expr><literal type="number" pos:line="6" pos:column="13">0<pos:position pos:line="6" pos:column="14"/></literal></expr>]<pos:position pos:line="6" pos:column="15"/></index></name> <operator pos:line="6" pos:column="16">=<pos:position pos:line="6" pos:column="17"/></operator> <call><name pos:line="6" pos:column="18">hex<pos:position pos:line="6" pos:column="21"/></name><argument_list pos:line="6" pos:column="21">(<argument><expr><name pos:line="6" pos:column="22">size<pos:position pos:line="6" pos:column="26"/></name> <operator pos:line="6" pos:column="27">&gt;&gt;<pos:position pos:line="6" pos:column="32"/></operator> <literal type="number" pos:line="6" pos:column="30">12<pos:position pos:line="6" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="7" pos:column="9">buf<pos:position pos:line="7" pos:column="12"/></name><index pos:line="7" pos:column="12">[<expr><literal type="number" pos:line="7" pos:column="13">1<pos:position pos:line="7" pos:column="14"/></literal></expr>]<pos:position pos:line="7" pos:column="15"/></index></name> <operator pos:line="7" pos:column="16">=<pos:position pos:line="7" pos:column="17"/></operator> <call><name pos:line="7" pos:column="18">hex<pos:position pos:line="7" pos:column="21"/></name><argument_list pos:line="7" pos:column="21">(<argument><expr><name pos:line="7" pos:column="22">size<pos:position pos:line="7" pos:column="26"/></name> <operator pos:line="7" pos:column="27">&gt;&gt;<pos:position pos:line="7" pos:column="32"/></operator> <literal type="number" pos:line="7" pos:column="30">8<pos:position pos:line="7" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="8" pos:column="9">buf<pos:position pos:line="8" pos:column="12"/></name><index pos:line="8" pos:column="12">[<expr><literal type="number" pos:line="8" pos:column="13">2<pos:position pos:line="8" pos:column="14"/></literal></expr>]<pos:position pos:line="8" pos:column="15"/></index></name> <operator pos:line="8" pos:column="16">=<pos:position pos:line="8" pos:column="17"/></operator> <call><name pos:line="8" pos:column="18">hex<pos:position pos:line="8" pos:column="21"/></name><argument_list pos:line="8" pos:column="21">(<argument><expr><name pos:line="8" pos:column="22">size<pos:position pos:line="8" pos:column="26"/></name> <operator pos:line="8" pos:column="27">&gt;&gt;<pos:position pos:line="8" pos:column="32"/></operator> <literal type="number" pos:line="8" pos:column="30">4<pos:position pos:line="8" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="9" pos:column="9">buf<pos:position pos:line="9" pos:column="12"/></name><index pos:line="9" pos:column="12">[<expr><literal type="number" pos:line="9" pos:column="13">3<pos:position pos:line="9" pos:column="14"/></literal></expr>]<pos:position pos:line="9" pos:column="15"/></index></name> <operator pos:line="9" pos:column="16">=<pos:position pos:line="9" pos:column="17"/></operator> <call><name pos:line="9" pos:column="18">hex<pos:position pos:line="9" pos:column="21"/></name><argument_list pos:line="9" pos:column="21">(<argument><expr><name pos:line="9" pos:column="22">size<pos:position pos:line="9" pos:column="26"/></name></expr></argument>)<pos:position pos:line="9" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="28"/></expr_stmt>
	<cpp:undef pos:line="10" pos:column="9">#<cpp:directive pos:line="10" pos:column="10">undef<pos:position pos:line="10" pos:column="15"/></cpp:directive> <name pos:line="10" pos:column="16">hex<pos:position pos:line="10" pos:column="19"/></name></cpp:undef>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5051_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_describe<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name pos:line="1" pos:column="18">int<pos:position pos:line="1" pos:column="21"/></name></type> <name pos:line="1" pos:column="22">argc<pos:position pos:line="1" pos:column="26"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier><modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">argv<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="47">const<pos:position pos:line="1" pos:column="52"/></specifier> <name pos:line="1" pos:column="53">char<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">prefix<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">contains<pos:position pos:line="3" pos:column="21"/></name> <init pos:line="3" pos:column="22">= <expr><literal type="number" pos:line="3" pos:column="24">0<pos:position pos:line="3" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">option<pos:position pos:line="4" pos:column="22"/></name></name></type> <name><name pos:line="4" pos:column="23">options<pos:position pos:line="4" pos:column="30"/></name><index pos:line="4" pos:column="30">[]<pos:position pos:line="4" pos:column="32"/></index></name> <init pos:line="4" pos:column="33">= <expr><block pos:line="4" pos:column="35">{
		<expr><call><name pos:line="5" pos:column="17">OPT_BOOL<pos:position pos:line="5" pos:column="25"/></name><argument_list pos:line="5" pos:column="25">(<argument><expr><literal type="number" pos:line="5" pos:column="26">0<pos:position pos:line="5" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="29">"contains"<pos:position pos:line="5" pos:column="39"/></literal></expr></argument>,   <argument><expr><operator pos:line="5" pos:column="43">&amp;<pos:position pos:line="5" pos:column="48"/></operator><name pos:line="5" pos:column="44">contains<pos:position pos:line="5" pos:column="52"/></name></expr></argument>, <argument><expr><call><name pos:line="5" pos:column="54">N_<pos:position pos:line="5" pos:column="56"/></name><argument_list pos:line="5" pos:column="56">(<argument><expr><literal type="string" pos:line="5" pos:column="57">"find the tag that comes after the commit"<pos:position pos:line="5" pos:column="99"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="100"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="101"/></argument_list></call></expr>,
		<expr><call><name pos:line="6" pos:column="17">OPT_BOOL<pos:position pos:line="6" pos:column="25"/></name><argument_list pos:line="6" pos:column="25">(<argument><expr><literal type="number" pos:line="6" pos:column="26">0<pos:position pos:line="6" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="29">"debug"<pos:position pos:line="6" pos:column="36"/></literal></expr></argument>,      <argument><expr><operator pos:line="6" pos:column="43">&amp;<pos:position pos:line="6" pos:column="48"/></operator><name pos:line="6" pos:column="44">debug<pos:position pos:line="6" pos:column="49"/></name></expr></argument>, <argument><expr><call><name pos:line="6" pos:column="51">N_<pos:position pos:line="6" pos:column="53"/></name><argument_list pos:line="6" pos:column="53">(<argument><expr><literal type="string" pos:line="6" pos:column="54">"debug search strategy on stderr"<pos:position pos:line="6" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="88"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="89"/></argument_list></call></expr>,
		<expr><call><name pos:line="7" pos:column="17">OPT_BOOL<pos:position pos:line="7" pos:column="25"/></name><argument_list pos:line="7" pos:column="25">(<argument><expr><literal type="number" pos:line="7" pos:column="26">0<pos:position pos:line="7" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="29">"all"<pos:position pos:line="7" pos:column="34"/></literal></expr></argument>,        <argument><expr><operator pos:line="7" pos:column="43">&amp;<pos:position pos:line="7" pos:column="48"/></operator><name pos:line="7" pos:column="44">all<pos:position pos:line="7" pos:column="47"/></name></expr></argument>, <argument><expr><call><name pos:line="7" pos:column="49">N_<pos:position pos:line="7" pos:column="51"/></name><argument_list pos:line="7" pos:column="51">(<argument><expr><literal type="string" pos:line="7" pos:column="52">"use any ref"<pos:position pos:line="7" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="67"/></argument_list></call></expr>,
		<expr><call><name pos:line="8" pos:column="17">OPT_BOOL<pos:position pos:line="8" pos:column="25"/></name><argument_list pos:line="8" pos:column="25">(<argument><expr><literal type="number" pos:line="8" pos:column="26">0<pos:position pos:line="8" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="29">"tags"<pos:position pos:line="8" pos:column="35"/></literal></expr></argument>,       <argument><expr><operator pos:line="8" pos:column="43">&amp;<pos:position pos:line="8" pos:column="48"/></operator><name pos:line="8" pos:column="44">tags<pos:position pos:line="8" pos:column="48"/></name></expr></argument>, <argument><expr><call><name pos:line="8" pos:column="50">N_<pos:position pos:line="8" pos:column="52"/></name><argument_list pos:line="8" pos:column="52">(<argument><expr><literal type="string" pos:line="8" pos:column="53">"use any tag, even unannotated"<pos:position pos:line="8" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="85"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="86"/></argument_list></call></expr>,
		<expr><call><name pos:line="9" pos:column="17">OPT_BOOL<pos:position pos:line="9" pos:column="25"/></name><argument_list pos:line="9" pos:column="25">(<argument><expr><literal type="number" pos:line="9" pos:column="26">0<pos:position pos:line="9" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="29">"long"<pos:position pos:line="9" pos:column="35"/></literal></expr></argument>,       <argument><expr><operator pos:line="9" pos:column="43">&amp;<pos:position pos:line="9" pos:column="48"/></operator><name pos:line="9" pos:column="44">longformat<pos:position pos:line="9" pos:column="54"/></name></expr></argument>, <argument><expr><call><name pos:line="9" pos:column="56">N_<pos:position pos:line="9" pos:column="58"/></name><argument_list pos:line="9" pos:column="58">(<argument><expr><literal type="string" pos:line="9" pos:column="59">"always use long format"<pos:position pos:line="9" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="84"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="85"/></argument_list></call></expr>,
		<expr><call><name pos:line="10" pos:column="17">OPT_BOOL<pos:position pos:line="10" pos:column="25"/></name><argument_list pos:line="10" pos:column="25">(<argument><expr><literal type="number" pos:line="10" pos:column="26">0<pos:position pos:line="10" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="29">"first-parent"<pos:position pos:line="10" pos:column="43"/></literal></expr></argument>, <argument><expr><operator pos:line="10" pos:column="45">&amp;<pos:position pos:line="10" pos:column="50"/></operator><name pos:line="10" pos:column="46">first_parent<pos:position pos:line="10" pos:column="58"/></name></expr></argument>, <argument><expr><call><name pos:line="10" pos:column="60">N_<pos:position pos:line="10" pos:column="62"/></name><argument_list pos:line="10" pos:column="62">(<argument><expr><literal type="string" pos:line="10" pos:column="63">"only follow first parent"<pos:position pos:line="10" pos:column="89"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="90"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="91"/></argument_list></call></expr>,
		<expr><call><name pos:line="11" pos:column="17">OPT__ABBREV<pos:position pos:line="11" pos:column="28"/></name><argument_list pos:line="11" pos:column="28">(<argument><expr><operator pos:line="11" pos:column="29">&amp;<pos:position pos:line="11" pos:column="34"/></operator><name pos:line="11" pos:column="30">abbrev<pos:position pos:line="11" pos:column="36"/></name></expr></argument>)<pos:position pos:line="11" pos:column="37"/></argument_list></call></expr>,
		<expr><call><name pos:line="12" pos:column="17">OPT_SET_INT<pos:position pos:line="12" pos:column="28"/></name><argument_list pos:line="12" pos:column="28">(<argument><expr><literal type="number" pos:line="12" pos:column="29">0<pos:position pos:line="12" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="32">"exact-match"<pos:position pos:line="12" pos:column="45"/></literal></expr></argument>, <argument><expr><operator pos:line="12" pos:column="47">&amp;<pos:position pos:line="12" pos:column="52"/></operator><name pos:line="12" pos:column="48">max_candidates<pos:position pos:line="12" pos:column="62"/></name></expr></argument>,
			    <argument><expr><call><name pos:line="13" pos:column="29">N_<pos:position pos:line="13" pos:column="31"/></name><argument_list pos:line="13" pos:column="31">(<argument><expr><literal type="string" pos:line="13" pos:column="32">"only output exact matches"<pos:position pos:line="13" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="60"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="62">0<pos:position pos:line="13" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="64"/></argument_list></call></expr>,
		<expr><call><name pos:line="14" pos:column="17">OPT_INTEGER<pos:position pos:line="14" pos:column="28"/></name><argument_list pos:line="14" pos:column="28">(<argument><expr><literal type="number" pos:line="14" pos:column="29">0<pos:position pos:line="14" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="32">"candidates"<pos:position pos:line="14" pos:column="44"/></literal></expr></argument>, <argument><expr><operator pos:line="14" pos:column="46">&amp;<pos:position pos:line="14" pos:column="51"/></operator><name pos:line="14" pos:column="47">max_candidates<pos:position pos:line="14" pos:column="61"/></name></expr></argument>,
			    <argument><expr><call><name pos:line="15" pos:column="29">N_<pos:position pos:line="15" pos:column="31"/></name><argument_list pos:line="15" pos:column="31">(<argument><expr><literal type="string" pos:line="15" pos:column="32">"consider &lt;n&gt; most recent tags (default: 10)"<pos:position pos:line="15" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="79"/></argument_list></call></expr>,
		<expr><call><name pos:line="16" pos:column="17">OPT_STRING_LIST<pos:position pos:line="16" pos:column="32"/></name><argument_list pos:line="16" pos:column="32">(<argument><expr><literal type="number" pos:line="16" pos:column="33">0<pos:position pos:line="16" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="36">"match"<pos:position pos:line="16" pos:column="43"/></literal></expr></argument>, <argument><expr><operator pos:line="16" pos:column="45">&amp;<pos:position pos:line="16" pos:column="50"/></operator><name pos:line="16" pos:column="46">patterns<pos:position pos:line="16" pos:column="54"/></name></expr></argument>, <argument><expr><call><name pos:line="16" pos:column="56">N_<pos:position pos:line="16" pos:column="58"/></name><argument_list pos:line="16" pos:column="58">(<argument><expr><literal type="string" pos:line="16" pos:column="59">"pattern"<pos:position pos:line="16" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="69"/></argument_list></call></expr></argument>,
			   <argument><expr><call><name pos:line="17" pos:column="28">N_<pos:position pos:line="17" pos:column="30"/></name><argument_list pos:line="17" pos:column="30">(<argument><expr><literal type="string" pos:line="17" pos:column="31">"only consider tags matching &lt;pattern&gt;"<pos:position pos:line="17" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="72"/></argument_list></call></expr>,
		<expr><call><name pos:line="18" pos:column="17">OPT_STRING_LIST<pos:position pos:line="18" pos:column="32"/></name><argument_list pos:line="18" pos:column="32">(<argument><expr><literal type="number" pos:line="18" pos:column="33">0<pos:position pos:line="18" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="36">"exclude"<pos:position pos:line="18" pos:column="45"/></literal></expr></argument>, <argument><expr><operator pos:line="18" pos:column="47">&amp;<pos:position pos:line="18" pos:column="52"/></operator><name pos:line="18" pos:column="48">exclude_patterns<pos:position pos:line="18" pos:column="64"/></name></expr></argument>, <argument><expr><call><name pos:line="18" pos:column="66">N_<pos:position pos:line="18" pos:column="68"/></name><argument_list pos:line="18" pos:column="68">(<argument><expr><literal type="string" pos:line="18" pos:column="69">"pattern"<pos:position pos:line="18" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="79"/></argument_list></call></expr></argument>,
			   <argument><expr><call><name pos:line="19" pos:column="28">N_<pos:position pos:line="19" pos:column="30"/></name><argument_list pos:line="19" pos:column="30">(<argument><expr><literal type="string" pos:line="19" pos:column="31">"do not consider tags matching &lt;pattern&gt;"<pos:position pos:line="19" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="74"/></argument_list></call></expr>,
		<expr><call><name pos:line="20" pos:column="17">OPT_BOOL<pos:position pos:line="20" pos:column="25"/></name><argument_list pos:line="20" pos:column="25">(<argument><expr><literal type="number" pos:line="20" pos:column="26">0<pos:position pos:line="20" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="29">"always"<pos:position pos:line="20" pos:column="37"/></literal></expr></argument>,        <argument><expr><operator pos:line="20" pos:column="46">&amp;<pos:position pos:line="20" pos:column="51"/></operator><name pos:line="20" pos:column="47">always<pos:position pos:line="20" pos:column="53"/></name></expr></argument>,
			<argument><expr><call><name pos:line="21" pos:column="25">N_<pos:position pos:line="21" pos:column="27"/></name><argument_list pos:line="21" pos:column="27">(<argument><expr><literal type="string" pos:line="21" pos:column="28">"show abbreviated commit object as fallback"<pos:position pos:line="21" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="74"/></argument_list></call></expr>,
		<expr><block pos:line="22" pos:column="17">{<expr><name pos:line="22" pos:column="18">OPTION_STRING<pos:position pos:line="22" pos:column="31"/></name></expr>, <expr><literal type="number" pos:line="22" pos:column="33">0<pos:position pos:line="22" pos:column="34"/></literal></expr>, <expr><literal type="string" pos:line="22" pos:column="36">"dirty"<pos:position pos:line="22" pos:column="43"/></literal></expr>,  <expr><operator pos:line="22" pos:column="46">&amp;<pos:position pos:line="22" pos:column="51"/></operator><name pos:line="22" pos:column="47">dirty<pos:position pos:line="22" pos:column="52"/></name></expr>, <expr><call><name pos:line="22" pos:column="54">N_<pos:position pos:line="22" pos:column="56"/></name><argument_list pos:line="22" pos:column="56">(<argument><expr><literal type="string" pos:line="22" pos:column="57">"mark"<pos:position pos:line="22" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="64"/></argument_list></call></expr>,
			<expr><call><name pos:line="23" pos:column="25">N_<pos:position pos:line="23" pos:column="27"/></name><argument_list pos:line="23" pos:column="27">(<argument><expr><literal type="string" pos:line="23" pos:column="28">"append &lt;mark&gt; on dirty working tree (default: \"-dirty\")"<pos:position pos:line="23" pos:column="93"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="88"/></argument_list></call></expr>,
			<expr><name pos:line="24" pos:column="25">PARSE_OPT_OPTARG<pos:position pos:line="24" pos:column="41"/></name></expr>, <expr><name pos:line="24" pos:column="43">NULL<pos:position pos:line="24" pos:column="47"/></name></expr>, <expr><operator pos:line="24" pos:column="49">(<pos:position pos:line="24" pos:column="50"/></operator><name pos:line="24" pos:column="50">intptr_t<pos:position pos:line="24" pos:column="58"/></name><operator pos:line="24" pos:column="58">)<pos:position pos:line="24" pos:column="59"/></operator> <literal type="string" pos:line="24" pos:column="60">"-dirty"<pos:position pos:line="24" pos:column="68"/></literal></expr>}<pos:position pos:line="24" pos:column="69"/></block></expr>,
		<expr><block pos:line="25" pos:column="17">{<expr><name pos:line="25" pos:column="18">OPTION_STRING<pos:position pos:line="25" pos:column="31"/></name></expr>, <expr><literal type="number" pos:line="25" pos:column="33">0<pos:position pos:line="25" pos:column="34"/></literal></expr>, <expr><literal type="string" pos:line="25" pos:column="36">"broken"<pos:position pos:line="25" pos:column="44"/></literal></expr>,  <expr><operator pos:line="25" pos:column="47">&amp;<pos:position pos:line="25" pos:column="52"/></operator><name pos:line="25" pos:column="48">broken<pos:position pos:line="25" pos:column="54"/></name></expr>, <expr><call><name pos:line="25" pos:column="56">N_<pos:position pos:line="25" pos:column="58"/></name><argument_list pos:line="25" pos:column="58">(<argument><expr><literal type="string" pos:line="25" pos:column="59">"mark"<pos:position pos:line="25" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="66"/></argument_list></call></expr>,
			<expr><call><name pos:line="26" pos:column="25">N_<pos:position pos:line="26" pos:column="27"/></name><argument_list pos:line="26" pos:column="27">(<argument><expr><literal type="string" pos:line="26" pos:column="28">"append &lt;mark&gt; on broken working tree (default: \"-broken\")"<pos:position pos:line="26" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="90"/></argument_list></call></expr>,
			<expr><name pos:line="27" pos:column="25">PARSE_OPT_OPTARG<pos:position pos:line="27" pos:column="41"/></name></expr>, <expr><name pos:line="27" pos:column="43">NULL<pos:position pos:line="27" pos:column="47"/></name></expr>, <expr><operator pos:line="27" pos:column="49">(<pos:position pos:line="27" pos:column="50"/></operator><name pos:line="27" pos:column="50">intptr_t<pos:position pos:line="27" pos:column="58"/></name><operator pos:line="27" pos:column="58">)<pos:position pos:line="27" pos:column="59"/></operator> <literal type="string" pos:line="27" pos:column="60">"-broken"<pos:position pos:line="27" pos:column="69"/></literal></expr>}<pos:position pos:line="27" pos:column="70"/></block></expr>,
		<expr><call><name pos:line="28" pos:column="17">OPT_END<pos:position pos:line="28" pos:column="24"/></name><argument_list pos:line="28" pos:column="24">()<pos:position pos:line="28" pos:column="26"/></argument_list></call></expr>,
	}<pos:position pos:line="29" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="29" pos:column="11"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="31" pos:column="9">git_config<pos:position pos:line="31" pos:column="19"/></name><argument_list pos:line="31" pos:column="19">(<argument><expr><name pos:line="31" pos:column="20">git_default_config<pos:position pos:line="31" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="40">NULL<pos:position pos:line="31" pos:column="44"/></name></expr></argument>)<pos:position pos:line="31" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><name pos:line="32" pos:column="9">argc<pos:position pos:line="32" pos:column="13"/></name> <operator pos:line="32" pos:column="14">=<pos:position pos:line="32" pos:column="15"/></operator> <call><name pos:line="32" pos:column="16">parse_options<pos:position pos:line="32" pos:column="29"/></name><argument_list pos:line="32" pos:column="29">(<argument><expr><name pos:line="32" pos:column="30">argc<pos:position pos:line="32" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="36">argv<pos:position pos:line="32" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="42">prefix<pos:position pos:line="32" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="50">options<pos:position pos:line="32" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="59">describe_usage<pos:position pos:line="32" pos:column="73"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="75">0<pos:position pos:line="32" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="78"/></expr_stmt>
	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name pos:line="33" pos:column="13">abbrev<pos:position pos:line="33" pos:column="19"/></name> <operator pos:line="33" pos:column="20">&lt;<pos:position pos:line="33" pos:column="24"/></operator> <literal type="number" pos:line="33" pos:column="22">0<pos:position pos:line="33" pos:column="23"/></literal></expr>)<pos:position pos:line="33" pos:column="24"/></condition><then pos:line="33" pos:column="24">
		<block type="pseudo"><expr_stmt><expr><name pos:line="34" pos:column="17">abbrev<pos:position pos:line="34" pos:column="23"/></name> <operator pos:line="34" pos:column="24">=<pos:position pos:line="34" pos:column="25"/></operator> <name pos:line="34" pos:column="26">DEFAULT_ABBREV<pos:position pos:line="34" pos:column="40"/></name></expr>;<pos:position pos:line="34" pos:column="41"/></expr_stmt></block></then></if>

	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name pos:line="36" pos:column="13">max_candidates<pos:position pos:line="36" pos:column="27"/></name> <operator pos:line="36" pos:column="28">&lt;<pos:position pos:line="36" pos:column="32"/></operator> <literal type="number" pos:line="36" pos:column="30">0<pos:position pos:line="36" pos:column="31"/></literal></expr>)<pos:position pos:line="36" pos:column="32"/></condition><then pos:line="36" pos:column="32">
		<block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="17">max_candidates<pos:position pos:line="37" pos:column="31"/></name> <operator pos:line="37" pos:column="32">=<pos:position pos:line="37" pos:column="33"/></operator> <literal type="number" pos:line="37" pos:column="34">0<pos:position pos:line="37" pos:column="35"/></literal></expr>;<pos:position pos:line="37" pos:column="36"/></expr_stmt></block></then>
	<elseif pos:line="38" pos:column="9">else <if pos:line="38" pos:column="14">if <condition pos:line="38" pos:column="17">(<expr><name pos:line="38" pos:column="18">max_candidates<pos:position pos:line="38" pos:column="32"/></name> <operator pos:line="38" pos:column="33">&gt;<pos:position pos:line="38" pos:column="37"/></operator> <name pos:line="38" pos:column="35">MAX_TAGS<pos:position pos:line="38" pos:column="43"/></name></expr>)<pos:position pos:line="38" pos:column="44"/></condition><then pos:line="38" pos:column="44">
		<block type="pseudo"><expr_stmt><expr><name pos:line="39" pos:column="17">max_candidates<pos:position pos:line="39" pos:column="31"/></name> <operator pos:line="39" pos:column="32">=<pos:position pos:line="39" pos:column="33"/></operator> <name pos:line="39" pos:column="34">MAX_TAGS<pos:position pos:line="39" pos:column="42"/></name></expr>;<pos:position pos:line="39" pos:column="43"/></expr_stmt></block></then></if></elseif></if>

	<expr_stmt><expr><name pos:line="41" pos:column="9">save_commit_buffer<pos:position pos:line="41" pos:column="27"/></name> <operator pos:line="41" pos:column="28">=<pos:position pos:line="41" pos:column="29"/></operator> <literal type="number" pos:line="41" pos:column="30">0<pos:position pos:line="41" pos:column="31"/></literal></expr>;<pos:position pos:line="41" pos:column="32"/></expr_stmt>

	<if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><name pos:line="43" pos:column="13">longformat<pos:position pos:line="43" pos:column="23"/></name> <operator pos:line="43" pos:column="24">&amp;&amp;<pos:position pos:line="43" pos:column="34"/></operator> <name pos:line="43" pos:column="27">abbrev<pos:position pos:line="43" pos:column="33"/></name> <operator pos:line="43" pos:column="34">==<pos:position pos:line="43" pos:column="36"/></operator> <literal type="number" pos:line="43" pos:column="37">0<pos:position pos:line="43" pos:column="38"/></literal></expr>)<pos:position pos:line="43" pos:column="39"/></condition><then pos:line="43" pos:column="39">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="44" pos:column="17">die<pos:position pos:line="44" pos:column="20"/></name><argument_list pos:line="44" pos:column="20">(<argument><expr><call><name pos:line="44" pos:column="21">_<pos:position pos:line="44" pos:column="22"/></name><argument_list pos:line="44" pos:column="22">(<argument><expr><literal type="string" pos:line="44" pos:column="23">"--long is incompatible with --abbrev=0"<pos:position pos:line="44" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="66"/></expr_stmt></block></then></if>

	<if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><name pos:line="46" pos:column="13">contains<pos:position pos:line="46" pos:column="21"/></name></expr>)<pos:position pos:line="46" pos:column="22"/></condition><then pos:line="46" pos:column="22"> <block pos:line="46" pos:column="23">{
		<decl_stmt><decl><type><name><name pos:line="47" pos:column="17">struct<pos:position pos:line="47" pos:column="23"/></name> <name pos:line="47" pos:column="24">string_list_item<pos:position pos:line="47" pos:column="40"/></name></name> <modifier pos:line="47" pos:column="41">*<pos:position pos:line="47" pos:column="42"/></modifier></type><name pos:line="47" pos:column="42">item<pos:position pos:line="47" pos:column="46"/></name></decl>;<pos:position pos:line="47" pos:column="47"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="48" pos:column="17">struct<pos:position pos:line="48" pos:column="23"/></name> <name pos:line="48" pos:column="24">argv_array<pos:position pos:line="48" pos:column="34"/></name></name></type> <name pos:line="48" pos:column="35">args<pos:position pos:line="48" pos:column="39"/></name></decl>;<pos:position pos:line="48" pos:column="40"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="50" pos:column="17">argv_array_init<pos:position pos:line="50" pos:column="32"/></name><argument_list pos:line="50" pos:column="32">(<argument><expr><operator pos:line="50" pos:column="33">&amp;<pos:position pos:line="50" pos:column="38"/></operator><name pos:line="50" pos:column="34">args<pos:position pos:line="50" pos:column="38"/></name></expr></argument>)<pos:position pos:line="50" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="51" pos:column="17">argv_array_pushl<pos:position pos:line="51" pos:column="33"/></name><argument_list pos:line="51" pos:column="33">(<argument><expr><operator pos:line="51" pos:column="34">&amp;<pos:position pos:line="51" pos:column="39"/></operator><name pos:line="51" pos:column="35">args<pos:position pos:line="51" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="41">"name-rev"<pos:position pos:line="51" pos:column="51"/></literal></expr></argument>,
				 <argument><expr><literal type="string" pos:line="52" pos:column="34">"--peel-tag"<pos:position pos:line="52" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="48">"--name-only"<pos:position pos:line="52" pos:column="61"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="63">"--no-undefined"<pos:position pos:line="52" pos:column="79"/></literal></expr></argument>,
				 <argument><expr><name pos:line="53" pos:column="34">NULL<pos:position pos:line="53" pos:column="38"/></name></expr></argument>)<pos:position pos:line="53" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="40"/></expr_stmt>
		<if pos:line="54" pos:column="17">if <condition pos:line="54" pos:column="20">(<expr><name pos:line="54" pos:column="21">always<pos:position pos:line="54" pos:column="27"/></name></expr>)<pos:position pos:line="54" pos:column="28"/></condition><then pos:line="54" pos:column="28">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="55" pos:column="25">argv_array_push<pos:position pos:line="55" pos:column="40"/></name><argument_list pos:line="55" pos:column="40">(<argument><expr><operator pos:line="55" pos:column="41">&amp;<pos:position pos:line="55" pos:column="46"/></operator><name pos:line="55" pos:column="42">args<pos:position pos:line="55" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="48">"--always"<pos:position pos:line="55" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="60"/></expr_stmt></block></then></if>
		<if pos:line="56" pos:column="17">if <condition pos:line="56" pos:column="20">(<expr><operator pos:line="56" pos:column="21">!<pos:position pos:line="56" pos:column="22"/></operator><name pos:line="56" pos:column="22">all<pos:position pos:line="56" pos:column="25"/></name></expr>)<pos:position pos:line="56" pos:column="26"/></condition><then pos:line="56" pos:column="26"> <block pos:line="56" pos:column="27">{
			<expr_stmt><expr><call><name pos:line="57" pos:column="25">argv_array_push<pos:position pos:line="57" pos:column="40"/></name><argument_list pos:line="57" pos:column="40">(<argument><expr><operator pos:line="57" pos:column="41">&amp;<pos:position pos:line="57" pos:column="46"/></operator><name pos:line="57" pos:column="42">args<pos:position pos:line="57" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="48">"--tags"<pos:position pos:line="57" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="58"/></expr_stmt>
			<macro><name pos:line="58" pos:column="25">for_each_string_list_item<pos:position pos:line="58" pos:column="50"/></name><argument_list pos:line="58" pos:column="50">(<argument pos:line="58" pos:column="51">item<pos:position pos:line="58" pos:column="55"/></argument>, <argument pos:line="58" pos:column="57">&amp;patterns<pos:position pos:line="58" pos:column="66"/></argument>)<pos:position pos:line="58" pos:column="67"/></argument_list></macro>
				<expr_stmt><expr><call><name pos:line="59" pos:column="33">argv_array_pushf<pos:position pos:line="59" pos:column="49"/></name><argument_list pos:line="59" pos:column="49">(<argument><expr><operator pos:line="59" pos:column="50">&amp;<pos:position pos:line="59" pos:column="55"/></operator><name pos:line="59" pos:column="51">args<pos:position pos:line="59" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="57">"--refs=refs/tags/%s"<pos:position pos:line="59" pos:column="78"/></literal></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="80">item<pos:position pos:line="59" pos:column="84"/></name><operator pos:line="59" pos:column="84">-&gt;<pos:position pos:line="59" pos:column="89"/></operator><name pos:line="59" pos:column="86">string<pos:position pos:line="59" pos:column="92"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="94"/></expr_stmt>
			<macro><name pos:line="60" pos:column="25">for_each_string_list_item<pos:position pos:line="60" pos:column="50"/></name><argument_list pos:line="60" pos:column="50">(<argument pos:line="60" pos:column="51">item<pos:position pos:line="60" pos:column="55"/></argument>, <argument pos:line="60" pos:column="57">&amp;exclude_patterns<pos:position pos:line="60" pos:column="74"/></argument>)<pos:position pos:line="60" pos:column="75"/></argument_list></macro>
				<expr_stmt><expr><call><name pos:line="61" pos:column="33">argv_array_pushf<pos:position pos:line="61" pos:column="49"/></name><argument_list pos:line="61" pos:column="49">(<argument><expr><operator pos:line="61" pos:column="50">&amp;<pos:position pos:line="61" pos:column="55"/></operator><name pos:line="61" pos:column="51">args<pos:position pos:line="61" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="57">"--exclude=refs/tags/%s"<pos:position pos:line="61" pos:column="81"/></literal></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="83">item<pos:position pos:line="61" pos:column="87"/></name><operator pos:line="61" pos:column="87">-&gt;<pos:position pos:line="61" pos:column="92"/></operator><name pos:line="61" pos:column="89">string<pos:position pos:line="61" pos:column="95"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="97"/></expr_stmt>
		}<pos:position pos:line="62" pos:column="18"/></block></then></if>
		<if pos:line="63" pos:column="17">if <condition pos:line="63" pos:column="20">(<expr><name pos:line="63" pos:column="21">argc<pos:position pos:line="63" pos:column="25"/></name></expr>)<pos:position pos:line="63" pos:column="26"/></condition><then pos:line="63" pos:column="26">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="64" pos:column="25">argv_array_pushv<pos:position pos:line="64" pos:column="41"/></name><argument_list pos:line="64" pos:column="41">(<argument><expr><operator pos:line="64" pos:column="42">&amp;<pos:position pos:line="64" pos:column="47"/></operator><name pos:line="64" pos:column="43">args<pos:position pos:line="64" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="49">argv<pos:position pos:line="64" pos:column="53"/></name></expr></argument>)<pos:position pos:line="64" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="55"/></expr_stmt></block></then>
		<else pos:line="65" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="66" pos:column="25">argv_array_push<pos:position pos:line="66" pos:column="40"/></name><argument_list pos:line="66" pos:column="40">(<argument><expr><operator pos:line="66" pos:column="41">&amp;<pos:position pos:line="66" pos:column="46"/></operator><name pos:line="66" pos:column="42">args<pos:position pos:line="66" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="48">"HEAD"<pos:position pos:line="66" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="56"/></expr_stmt></block></else></if>
		<return pos:line="67" pos:column="17">return <expr><call><name pos:line="67" pos:column="24">cmd_name_rev<pos:position pos:line="67" pos:column="36"/></name><argument_list pos:line="67" pos:column="36">(<argument><expr><name><name pos:line="67" pos:column="37">args<pos:position pos:line="67" pos:column="41"/></name><operator pos:line="67" pos:column="41">.<pos:position pos:line="67" pos:column="42"/></operator><name pos:line="67" pos:column="42">argc<pos:position pos:line="67" pos:column="46"/></name></name></expr></argument>, <argument><expr><name><name pos:line="67" pos:column="48">args<pos:position pos:line="67" pos:column="52"/></name><operator pos:line="67" pos:column="52">.<pos:position pos:line="67" pos:column="53"/></operator><name pos:line="67" pos:column="53">argv<pos:position pos:line="67" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="59">prefix<pos:position pos:line="67" pos:column="65"/></name></expr></argument>)<pos:position pos:line="67" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="67"/></return>
	}<pos:position pos:line="68" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="70" pos:column="9">hashmap_init<pos:position pos:line="70" pos:column="21"/></name><argument_list pos:line="70" pos:column="21">(<argument><expr><operator pos:line="70" pos:column="22">&amp;<pos:position pos:line="70" pos:column="27"/></operator><name pos:line="70" pos:column="23">names<pos:position pos:line="70" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="70" pos:column="30">(<pos:position pos:line="70" pos:column="31"/></operator><name pos:line="70" pos:column="31">hashmap_cmp_fn<pos:position pos:line="70" pos:column="45"/></name><operator pos:line="70" pos:column="45">)<pos:position pos:line="70" pos:column="46"/></operator> <name pos:line="70" pos:column="47">commit_name_cmp<pos:position pos:line="70" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="64">NULL<pos:position pos:line="70" pos:column="68"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="70" pos:column="70">0<pos:position pos:line="70" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="73"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="71" pos:column="9">for_each_rawref<pos:position pos:line="71" pos:column="24"/></name><argument_list pos:line="71" pos:column="24">(<argument><expr><name pos:line="71" pos:column="25">get_name<pos:position pos:line="71" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="35">NULL<pos:position pos:line="71" pos:column="39"/></name></expr></argument>)<pos:position pos:line="71" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="41"/></expr_stmt>
	<if pos:line="72" pos:column="9">if <condition pos:line="72" pos:column="12">(<expr><operator pos:line="72" pos:column="13">!<pos:position pos:line="72" pos:column="14"/></operator><name><name pos:line="72" pos:column="14">names<pos:position pos:line="72" pos:column="19"/></name><operator pos:line="72" pos:column="19">.<pos:position pos:line="72" pos:column="20"/></operator><name pos:line="72" pos:column="20">size<pos:position pos:line="72" pos:column="24"/></name></name> <operator pos:line="72" pos:column="25">&amp;&amp;<pos:position pos:line="72" pos:column="35"/></operator> <operator pos:line="72" pos:column="28">!<pos:position pos:line="72" pos:column="29"/></operator><name pos:line="72" pos:column="29">always<pos:position pos:line="72" pos:column="35"/></name></expr>)<pos:position pos:line="72" pos:column="36"/></condition><then pos:line="72" pos:column="36">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="73" pos:column="17">die<pos:position pos:line="73" pos:column="20"/></name><argument_list pos:line="73" pos:column="20">(<argument><expr><call><name pos:line="73" pos:column="21">_<pos:position pos:line="73" pos:column="22"/></name><argument_list pos:line="73" pos:column="22">(<argument><expr><literal type="string" pos:line="73" pos:column="23">"No names found, cannot describe anything."<pos:position pos:line="73" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="73" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="69"/></expr_stmt></block></then></if>

	<if pos:line="75" pos:column="9">if <condition pos:line="75" pos:column="12">(<expr><name pos:line="75" pos:column="13">argc<pos:position pos:line="75" pos:column="17"/></name> <operator pos:line="75" pos:column="18">==<pos:position pos:line="75" pos:column="20"/></operator> <literal type="number" pos:line="75" pos:column="21">0<pos:position pos:line="75" pos:column="22"/></literal></expr>)<pos:position pos:line="75" pos:column="23"/></condition><then pos:line="75" pos:column="23"> <block pos:line="75" pos:column="24">{
		<if pos:line="76" pos:column="17">if <condition pos:line="76" pos:column="20">(<expr><name pos:line="76" pos:column="21">broken<pos:position pos:line="76" pos:column="27"/></name></expr>)<pos:position pos:line="76" pos:column="28"/></condition><then pos:line="76" pos:column="28"> <block pos:line="76" pos:column="29">{
			<decl_stmt><decl><type><name><name pos:line="77" pos:column="25">struct<pos:position pos:line="77" pos:column="31"/></name> <name pos:line="77" pos:column="32">child_process<pos:position pos:line="77" pos:column="45"/></name></name></type> <name pos:line="77" pos:column="46">cp<pos:position pos:line="77" pos:column="48"/></name> <init pos:line="77" pos:column="49">= <expr><name pos:line="77" pos:column="51">CHILD_PROCESS_INIT<pos:position pos:line="77" pos:column="69"/></name></expr></init></decl>;<pos:position pos:line="77" pos:column="70"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="78" pos:column="25">argv_array_pushv<pos:position pos:line="78" pos:column="41"/></name><argument_list pos:line="78" pos:column="41">(<argument><expr><operator pos:line="78" pos:column="42">&amp;<pos:position pos:line="78" pos:column="47"/></operator><name><name pos:line="78" pos:column="43">cp<pos:position pos:line="78" pos:column="45"/></name><operator pos:line="78" pos:column="45">.<pos:position pos:line="78" pos:column="46"/></operator><name pos:line="78" pos:column="46">args<pos:position pos:line="78" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="52">diff_index_args<pos:position pos:line="78" pos:column="67"/></name></expr></argument>)<pos:position pos:line="78" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="69"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="79" pos:column="25">cp<pos:position pos:line="79" pos:column="27"/></name><operator pos:line="79" pos:column="27">.<pos:position pos:line="79" pos:column="28"/></operator><name pos:line="79" pos:column="28">git_cmd<pos:position pos:line="79" pos:column="35"/></name></name> <operator pos:line="79" pos:column="36">=<pos:position pos:line="79" pos:column="37"/></operator> <literal type="number" pos:line="79" pos:column="38">1<pos:position pos:line="79" pos:column="39"/></literal></expr>;<pos:position pos:line="79" pos:column="40"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="80" pos:column="25">cp<pos:position pos:line="80" pos:column="27"/></name><operator pos:line="80" pos:column="27">.<pos:position pos:line="80" pos:column="28"/></operator><name pos:line="80" pos:column="28">no_stdin<pos:position pos:line="80" pos:column="36"/></name></name> <operator pos:line="80" pos:column="37">=<pos:position pos:line="80" pos:column="38"/></operator> <literal type="number" pos:line="80" pos:column="39">1<pos:position pos:line="80" pos:column="40"/></literal></expr>;<pos:position pos:line="80" pos:column="41"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="81" pos:column="25">cp<pos:position pos:line="81" pos:column="27"/></name><operator pos:line="81" pos:column="27">.<pos:position pos:line="81" pos:column="28"/></operator><name pos:line="81" pos:column="28">no_stdout<pos:position pos:line="81" pos:column="37"/></name></name> <operator pos:line="81" pos:column="38">=<pos:position pos:line="81" pos:column="39"/></operator> <literal type="number" pos:line="81" pos:column="40">1<pos:position pos:line="81" pos:column="41"/></literal></expr>;<pos:position pos:line="81" pos:column="42"/></expr_stmt>

			<if pos:line="83" pos:column="25">if <condition pos:line="83" pos:column="28">(<expr><operator pos:line="83" pos:column="29">!<pos:position pos:line="83" pos:column="30"/></operator><name pos:line="83" pos:column="30">dirty<pos:position pos:line="83" pos:column="35"/></name></expr>)<pos:position pos:line="83" pos:column="36"/></condition><then pos:line="83" pos:column="36">
				<block type="pseudo"><expr_stmt><expr><name pos:line="84" pos:column="33">dirty<pos:position pos:line="84" pos:column="38"/></name> <operator pos:line="84" pos:column="39">=<pos:position pos:line="84" pos:column="40"/></operator> <literal type="string" pos:line="84" pos:column="41">"-dirty"<pos:position pos:line="84" pos:column="49"/></literal></expr>;<pos:position pos:line="84" pos:column="50"/></expr_stmt></block></then></if>

			<switch pos:line="86" pos:column="25">switch <condition pos:line="86" pos:column="32">(<expr><call><name pos:line="86" pos:column="33">run_command<pos:position pos:line="86" pos:column="44"/></name><argument_list pos:line="86" pos:column="44">(<argument><expr><operator pos:line="86" pos:column="45">&amp;<pos:position pos:line="86" pos:column="50"/></operator><name pos:line="86" pos:column="46">cp<pos:position pos:line="86" pos:column="48"/></name></expr></argument>)<pos:position pos:line="86" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="86" pos:column="50"/></condition> <block pos:line="86" pos:column="51">{
			<case pos:line="87" pos:column="25">case <expr><literal type="number" pos:line="87" pos:column="30">0<pos:position pos:line="87" pos:column="31"/></literal></expr>:<pos:position pos:line="87" pos:column="32"/></case>
				<expr_stmt><expr><name pos:line="88" pos:column="33">suffix<pos:position pos:line="88" pos:column="39"/></name> <operator pos:line="88" pos:column="40">=<pos:position pos:line="88" pos:column="41"/></operator> <name pos:line="88" pos:column="42">NULL<pos:position pos:line="88" pos:column="46"/></name></expr>;<pos:position pos:line="88" pos:column="47"/></expr_stmt>
				<break pos:line="89" pos:column="33">break;<pos:position pos:line="89" pos:column="39"/></break>
			<case pos:line="90" pos:column="25">case <expr><literal type="number" pos:line="90" pos:column="30">1<pos:position pos:line="90" pos:column="31"/></literal></expr>:<pos:position pos:line="90" pos:column="32"/></case>
				<expr_stmt><expr><name pos:line="91" pos:column="33">suffix<pos:position pos:line="91" pos:column="39"/></name> <operator pos:line="91" pos:column="40">=<pos:position pos:line="91" pos:column="41"/></operator> <name pos:line="91" pos:column="42">dirty<pos:position pos:line="91" pos:column="47"/></name></expr>;<pos:position pos:line="91" pos:column="48"/></expr_stmt>
				<break pos:line="92" pos:column="33">break;<pos:position pos:line="92" pos:column="39"/></break>
			<default pos:line="93" pos:column="25">default:<pos:position pos:line="93" pos:column="33"/></default>
				<comment type="block" pos:line="94" pos:column="33">/* diff-index aborted abnormally */</comment>
				<expr_stmt><expr><name pos:line="95" pos:column="33">suffix<pos:position pos:line="95" pos:column="39"/></name> <operator pos:line="95" pos:column="40">=<pos:position pos:line="95" pos:column="41"/></operator> <name pos:line="95" pos:column="42">broken<pos:position pos:line="95" pos:column="48"/></name></expr>;<pos:position pos:line="95" pos:column="49"/></expr_stmt>
			}<pos:position pos:line="96" pos:column="26"/></block></switch>
		}<pos:position pos:line="97" pos:column="18"/></block></then> <elseif pos:line="97" pos:column="19">else <if pos:line="97" pos:column="24">if <condition pos:line="97" pos:column="27">(<expr><name pos:line="97" pos:column="28">dirty<pos:position pos:line="97" pos:column="33"/></name></expr>)<pos:position pos:line="97" pos:column="34"/></condition><then pos:line="97" pos:column="34"> <block pos:line="97" pos:column="35">{
			<decl_stmt><decl><specifier pos:line="98" pos:column="25">static<pos:position pos:line="98" pos:column="31"/></specifier> <type><name><name pos:line="98" pos:column="32">struct<pos:position pos:line="98" pos:column="38"/></name> <name pos:line="98" pos:column="39">lock_file<pos:position pos:line="98" pos:column="48"/></name></name></type> <name pos:line="98" pos:column="49">index_lock<pos:position pos:line="98" pos:column="59"/></name></decl>;<pos:position pos:line="98" pos:column="60"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="99" pos:column="25">int<pos:position pos:line="99" pos:column="28"/></name></type> <name pos:line="99" pos:column="29">fd<pos:position pos:line="99" pos:column="31"/></name></decl>;<pos:position pos:line="99" pos:column="32"/></decl_stmt>

			<expr_stmt><expr><call><name pos:line="101" pos:column="25">read_cache_preload<pos:position pos:line="101" pos:column="43"/></name><argument_list pos:line="101" pos:column="43">(<argument><expr><name pos:line="101" pos:column="44">NULL<pos:position pos:line="101" pos:column="48"/></name></expr></argument>)<pos:position pos:line="101" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="50"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="102" pos:column="25">refresh_index<pos:position pos:line="102" pos:column="38"/></name><argument_list pos:line="102" pos:column="38">(<argument><expr><operator pos:line="102" pos:column="39">&amp;<pos:position pos:line="102" pos:column="44"/></operator><name pos:line="102" pos:column="40">the_index<pos:position pos:line="102" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="51">REFRESH_QUIET<pos:position pos:line="102" pos:column="64"/></name><operator pos:line="102" pos:column="64">|<pos:position pos:line="102" pos:column="65"/></operator><name pos:line="102" pos:column="65">REFRESH_UNMERGED<pos:position pos:line="102" pos:column="81"/></name></expr></argument>,
				      <argument><expr><name pos:line="103" pos:column="39">NULL<pos:position pos:line="103" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="45">NULL<pos:position pos:line="103" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="51">NULL<pos:position pos:line="103" pos:column="55"/></name></expr></argument>)<pos:position pos:line="103" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="57"/></expr_stmt>
			<expr_stmt><expr><name pos:line="104" pos:column="25">fd<pos:position pos:line="104" pos:column="27"/></name> <operator pos:line="104" pos:column="28">=<pos:position pos:line="104" pos:column="29"/></operator> <call><name pos:line="104" pos:column="30">hold_locked_index<pos:position pos:line="104" pos:column="47"/></name><argument_list pos:line="104" pos:column="47">(<argument><expr><operator pos:line="104" pos:column="48">&amp;<pos:position pos:line="104" pos:column="53"/></operator><name pos:line="104" pos:column="49">index_lock<pos:position pos:line="104" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="104" pos:column="61">0<pos:position pos:line="104" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="104" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="64"/></expr_stmt>
			<if pos:line="105" pos:column="25">if <condition pos:line="105" pos:column="28">(<expr><literal type="number" pos:line="105" pos:column="29">0<pos:position pos:line="105" pos:column="30"/></literal> <operator pos:line="105" pos:column="31">&lt;=<pos:position pos:line="105" pos:column="36"/></operator> <name pos:line="105" pos:column="34">fd<pos:position pos:line="105" pos:column="36"/></name></expr>)<pos:position pos:line="105" pos:column="37"/></condition><then pos:line="105" pos:column="37">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="106" pos:column="33">update_index_if_able<pos:position pos:line="106" pos:column="53"/></name><argument_list pos:line="106" pos:column="53">(<argument><expr><operator pos:line="106" pos:column="54">&amp;<pos:position pos:line="106" pos:column="59"/></operator><name pos:line="106" pos:column="55">the_index<pos:position pos:line="106" pos:column="64"/></name></expr></argument>, <argument><expr><operator pos:line="106" pos:column="66">&amp;<pos:position pos:line="106" pos:column="71"/></operator><name pos:line="106" pos:column="67">index_lock<pos:position pos:line="106" pos:column="77"/></name></expr></argument>)<pos:position pos:line="106" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="79"/></expr_stmt></block></then></if>

			<if pos:line="108" pos:column="25">if <condition pos:line="108" pos:column="28">(<expr><operator pos:line="108" pos:column="29">!<pos:position pos:line="108" pos:column="30"/></operator><call><name pos:line="108" pos:column="30">cmd_diff_index<pos:position pos:line="108" pos:column="44"/></name><argument_list pos:line="108" pos:column="44">(<argument><expr><call><name pos:line="108" pos:column="45">ARRAY_SIZE<pos:position pos:line="108" pos:column="55"/></name><argument_list pos:line="108" pos:column="55">(<argument><expr><name pos:line="108" pos:column="56">diff_index_args<pos:position pos:line="108" pos:column="71"/></name></expr></argument>)<pos:position pos:line="108" pos:column="72"/></argument_list></call> <operator pos:line="108" pos:column="73">-<pos:position pos:line="108" pos:column="74"/></operator> <literal type="number" pos:line="108" pos:column="75">1<pos:position pos:line="108" pos:column="76"/></literal></expr></argument>,
					    <argument><expr><name pos:line="109" pos:column="45">diff_index_args<pos:position pos:line="109" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="109" pos:column="62">prefix<pos:position pos:line="109" pos:column="68"/></name></expr></argument>)<pos:position pos:line="109" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="109" pos:column="70"/></condition><then pos:line="109" pos:column="70">
				<block type="pseudo"><expr_stmt><expr><name pos:line="110" pos:column="33">suffix<pos:position pos:line="110" pos:column="39"/></name> <operator pos:line="110" pos:column="40">=<pos:position pos:line="110" pos:column="41"/></operator> <name pos:line="110" pos:column="42">NULL<pos:position pos:line="110" pos:column="46"/></name></expr>;<pos:position pos:line="110" pos:column="47"/></expr_stmt></block></then>
			<else pos:line="111" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="112" pos:column="33">suffix<pos:position pos:line="112" pos:column="39"/></name> <operator pos:line="112" pos:column="40">=<pos:position pos:line="112" pos:column="41"/></operator> <name pos:line="112" pos:column="42">dirty<pos:position pos:line="112" pos:column="47"/></name></expr>;<pos:position pos:line="112" pos:column="48"/></expr_stmt></block></else></if>
		}<pos:position pos:line="113" pos:column="18"/></block></then></if></elseif></if>
		<expr_stmt><expr><call><name pos:line="114" pos:column="17">describe<pos:position pos:line="114" pos:column="25"/></name><argument_list pos:line="114" pos:column="25">(<argument><expr><literal type="string" pos:line="114" pos:column="26">"HEAD"<pos:position pos:line="114" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="114" pos:column="34">1<pos:position pos:line="114" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="114" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="115" pos:column="10"/></block></then> <elseif pos:line="115" pos:column="11">else <if pos:line="115" pos:column="16">if <condition pos:line="115" pos:column="19">(<expr><name pos:line="115" pos:column="20">dirty<pos:position pos:line="115" pos:column="25"/></name></expr>)<pos:position pos:line="115" pos:column="26"/></condition><then pos:line="115" pos:column="26"> <block pos:line="115" pos:column="27">{
		<expr_stmt><expr><call><name pos:line="116" pos:column="17">die<pos:position pos:line="116" pos:column="20"/></name><argument_list pos:line="116" pos:column="20">(<argument><expr><call><name pos:line="116" pos:column="21">_<pos:position pos:line="116" pos:column="22"/></name><argument_list pos:line="116" pos:column="22">(<argument><expr><literal type="string" pos:line="116" pos:column="23">"--dirty is incompatible with commit-ishes"<pos:position pos:line="116" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="116" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="116" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="69"/></expr_stmt>
	}<pos:position pos:line="117" pos:column="10"/></block></then></if></elseif> <elseif pos:line="117" pos:column="11">else <if pos:line="117" pos:column="16">if <condition pos:line="117" pos:column="19">(<expr><name pos:line="117" pos:column="20">broken<pos:position pos:line="117" pos:column="26"/></name></expr>)<pos:position pos:line="117" pos:column="27"/></condition><then pos:line="117" pos:column="27"> <block pos:line="117" pos:column="28">{
		<expr_stmt><expr><call><name pos:line="118" pos:column="17">die<pos:position pos:line="118" pos:column="20"/></name><argument_list pos:line="118" pos:column="20">(<argument><expr><call><name pos:line="118" pos:column="21">_<pos:position pos:line="118" pos:column="22"/></name><argument_list pos:line="118" pos:column="22">(<argument><expr><literal type="string" pos:line="118" pos:column="23">"--broken is incompatible with commit-ishes"<pos:position pos:line="118" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="118" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="118" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="70"/></expr_stmt>
	}<pos:position pos:line="119" pos:column="10"/></block></then></if></elseif> <else pos:line="119" pos:column="11">else <block pos:line="119" pos:column="16">{
		<while pos:line="120" pos:column="17">while <condition pos:line="120" pos:column="23">(<expr><name pos:line="120" pos:column="24">argc<pos:position pos:line="120" pos:column="28"/></name><operator pos:line="120" pos:column="28">--<pos:position pos:line="120" pos:column="30"/></operator> <operator pos:line="120" pos:column="31">&gt;<pos:position pos:line="120" pos:column="35"/></operator> <literal type="number" pos:line="120" pos:column="33">0<pos:position pos:line="120" pos:column="34"/></literal></expr>)<pos:position pos:line="120" pos:column="35"/></condition>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="121" pos:column="25">describe<pos:position pos:line="121" pos:column="33"/></name><argument_list pos:line="121" pos:column="33">(<argument><expr><operator pos:line="121" pos:column="34">*<pos:position pos:line="121" pos:column="35"/></operator><name pos:line="121" pos:column="35">argv<pos:position pos:line="121" pos:column="39"/></name><operator pos:line="121" pos:column="39">++<pos:position pos:line="121" pos:column="41"/></operator></expr></argument>, <argument><expr><name pos:line="121" pos:column="43">argc<pos:position pos:line="121" pos:column="47"/></name> <operator pos:line="121" pos:column="48">==<pos:position pos:line="121" pos:column="50"/></operator> <literal type="number" pos:line="121" pos:column="51">0<pos:position pos:line="121" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="121" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="54"/></expr_stmt></block></while>
	}<pos:position pos:line="122" pos:column="10"/></block></else></if>
	<return pos:line="123" pos:column="9">return <expr><literal type="number" pos:line="123" pos:column="16">0<pos:position pos:line="123" pos:column="17"/></literal></expr>;<pos:position pos:line="123" pos:column="18"/></return>
}<pos:position pos:line="124" pos:column="2"/></block></function></unit>

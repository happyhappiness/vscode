<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1006_git-2.10.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">alias_lookup<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><specifier pos:line="1" pos:column="20">const<pos:position pos:line="1" pos:column="25"/></specifier> <name pos:line="1" pos:column="26">char<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">alias<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="38"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">v<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><name pos:line="3" pos:column="19">NULL<pos:position pos:line="3" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">strbuf<pos:position pos:line="4" pos:column="22"/></name></name></type> <name pos:line="4" pos:column="23">key<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><name pos:line="4" pos:column="29">STRBUF_INIT<pos:position pos:line="4" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>
	<expr_stmt><expr><call><name pos:line="5" pos:column="9">strbuf_addf<pos:position pos:line="5" pos:column="20"/></name><argument_list pos:line="5" pos:column="20">(<argument><expr><operator pos:line="5" pos:column="21">&amp;<pos:position pos:line="5" pos:column="26"/></operator><name pos:line="5" pos:column="22">key<pos:position pos:line="5" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="27">"alias.%s"<pos:position pos:line="5" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="39">alias<pos:position pos:line="5" pos:column="44"/></name></expr></argument>)<pos:position pos:line="5" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="46"/></expr_stmt>
	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><call><name pos:line="6" pos:column="13">git_config_key_is_valid<pos:position pos:line="6" pos:column="36"/></name><argument_list pos:line="6" pos:column="36">(<argument><expr><name><name pos:line="6" pos:column="37">key<pos:position pos:line="6" pos:column="40"/></name><operator pos:line="6" pos:column="40">.<pos:position pos:line="6" pos:column="41"/></operator><name pos:line="6" pos:column="41">buf<pos:position pos:line="6" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="46"/></condition><then pos:line="6" pos:column="46">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="17">git_config_get_string<pos:position pos:line="7" pos:column="38"/></name><argument_list pos:line="7" pos:column="38">(<argument><expr><name><name pos:line="7" pos:column="39">key<pos:position pos:line="7" pos:column="42"/></name><operator pos:line="7" pos:column="42">.<pos:position pos:line="7" pos:column="43"/></operator><name pos:line="7" pos:column="43">buf<pos:position pos:line="7" pos:column="46"/></name></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="48">&amp;<pos:position pos:line="7" pos:column="53"/></operator><name pos:line="7" pos:column="49">v<pos:position pos:line="7" pos:column="50"/></name></expr></argument>)<pos:position pos:line="7" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="52"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="8" pos:column="9">strbuf_release<pos:position pos:line="8" pos:column="23"/></name><argument_list pos:line="8" pos:column="23">(<argument><expr><operator pos:line="8" pos:column="24">&amp;<pos:position pos:line="8" pos:column="29"/></operator><name pos:line="8" pos:column="25">key<pos:position pos:line="8" pos:column="28"/></name></expr></argument>)<pos:position pos:line="8" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="30"/></expr_stmt>
	<return pos:line="9" pos:column="9">return <expr><name pos:line="9" pos:column="16">v<pos:position pos:line="9" pos:column="17"/></name></expr>;<pos:position pos:line="9" pos:column="18"/></return>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2441.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">show_worktree<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">worktree<pos:position pos:line="1" pos:column="42"/></name></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">wt<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">int<pos:position pos:line="1" pos:column="51"/></name></type> <name pos:line="1" pos:column="52">path_maxlen<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="65">int<pos:position pos:line="1" pos:column="68"/></name></type> <name pos:line="1" pos:column="69">abbrev_len<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="80"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">strbuf<pos:position pos:line="3" pos:column="22"/></name></name></type> <name pos:line="3" pos:column="23">sb<pos:position pos:line="3" pos:column="25"/></name> <init pos:line="3" pos:column="26">= <expr><name pos:line="3" pos:column="28">STRBUF_INIT<pos:position pos:line="3" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">cur_path_len<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><call><name pos:line="4" pos:column="28">strlen<pos:position pos:line="4" pos:column="34"/></name><argument_list pos:line="4" pos:column="34">(<argument><expr><name><name pos:line="4" pos:column="35">wt<pos:position pos:line="4" pos:column="37"/></name><operator pos:line="4" pos:column="37">-&gt;<pos:position pos:line="4" pos:column="42"/></operator><name pos:line="4" pos:column="39">path<pos:position pos:line="4" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="45"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">path_adj<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><name pos:line="5" pos:column="24">cur_path_len<pos:position pos:line="5" pos:column="36"/></name> <operator pos:line="5" pos:column="37">-<pos:position pos:line="5" pos:column="38"/></operator> <call><name pos:line="5" pos:column="39">utf8_strwidth<pos:position pos:line="5" pos:column="52"/></name><argument_list pos:line="5" pos:column="52">(<argument><expr><name><name pos:line="5" pos:column="53">wt<pos:position pos:line="5" pos:column="55"/></name><operator pos:line="5" pos:column="55">-&gt;<pos:position pos:line="5" pos:column="60"/></operator><name pos:line="5" pos:column="57">path<pos:position pos:line="5" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="63"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="7" pos:column="9">strbuf_addf<pos:position pos:line="7" pos:column="20"/></name><argument_list pos:line="7" pos:column="20">(<argument><expr><operator pos:line="7" pos:column="21">&amp;<pos:position pos:line="7" pos:column="26"/></operator><name pos:line="7" pos:column="22">sb<pos:position pos:line="7" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="26">"%-*s "<pos:position pos:line="7" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="35">1<pos:position pos:line="7" pos:column="36"/></literal> <operator pos:line="7" pos:column="37">+<pos:position pos:line="7" pos:column="38"/></operator> <name pos:line="7" pos:column="39">path_maxlen<pos:position pos:line="7" pos:column="50"/></name> <operator pos:line="7" pos:column="51">+<pos:position pos:line="7" pos:column="52"/></operator> <name pos:line="7" pos:column="53">path_adj<pos:position pos:line="7" pos:column="61"/></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="63">wt<pos:position pos:line="7" pos:column="65"/></name><operator pos:line="7" pos:column="65">-&gt;<pos:position pos:line="7" pos:column="70"/></operator><name pos:line="7" pos:column="67">path<pos:position pos:line="7" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="73"/></expr_stmt>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name><name pos:line="8" pos:column="13">wt<pos:position pos:line="8" pos:column="15"/></name><operator pos:line="8" pos:column="15">-&gt;<pos:position pos:line="8" pos:column="20"/></operator><name pos:line="8" pos:column="17">is_bare<pos:position pos:line="8" pos:column="24"/></name></name></expr>)<pos:position pos:line="8" pos:column="25"/></condition><then pos:line="8" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="17">strbuf_addstr<pos:position pos:line="9" pos:column="30"/></name><argument_list pos:line="9" pos:column="30">(<argument><expr><operator pos:line="9" pos:column="31">&amp;<pos:position pos:line="9" pos:column="36"/></operator><name pos:line="9" pos:column="32">sb<pos:position pos:line="9" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="36">"(bare)"<pos:position pos:line="9" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="46"/></expr_stmt></block></then>
	<else pos:line="10" pos:column="9">else <block pos:line="10" pos:column="14">{
		<expr_stmt><expr><call><name pos:line="11" pos:column="17">strbuf_addf<pos:position pos:line="11" pos:column="28"/></name><argument_list pos:line="11" pos:column="28">(<argument><expr><operator pos:line="11" pos:column="29">&amp;<pos:position pos:line="11" pos:column="34"/></operator><name pos:line="11" pos:column="30">sb<pos:position pos:line="11" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="34">"%-*s "<pos:position pos:line="11" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="43">abbrev_len<pos:position pos:line="11" pos:column="53"/></name></expr></argument>,
				<argument><expr><call><name pos:line="12" pos:column="33">find_unique_abbrev<pos:position pos:line="12" pos:column="51"/></name><argument_list pos:line="12" pos:column="51">(<argument><expr><name><name pos:line="12" pos:column="52">wt<pos:position pos:line="12" pos:column="54"/></name><operator pos:line="12" pos:column="54">-&gt;<pos:position pos:line="12" pos:column="59"/></operator><name pos:line="12" pos:column="56">head_sha1<pos:position pos:line="12" pos:column="65"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="67">DEFAULT_ABBREV<pos:position pos:line="12" pos:column="81"/></name></expr></argument>)<pos:position pos:line="12" pos:column="82"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="84"/></expr_stmt>
		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><operator pos:line="13" pos:column="21">!<pos:position pos:line="13" pos:column="22"/></operator><name><name pos:line="13" pos:column="22">wt<pos:position pos:line="13" pos:column="24"/></name><operator pos:line="13" pos:column="24">-&gt;<pos:position pos:line="13" pos:column="29"/></operator><name pos:line="13" pos:column="26">is_detached<pos:position pos:line="13" pos:column="37"/></name></name></expr>)<pos:position pos:line="13" pos:column="38"/></condition><then pos:line="13" pos:column="38">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="25">strbuf_addf<pos:position pos:line="14" pos:column="36"/></name><argument_list pos:line="14" pos:column="36">(<argument><expr><operator pos:line="14" pos:column="37">&amp;<pos:position pos:line="14" pos:column="42"/></operator><name pos:line="14" pos:column="38">sb<pos:position pos:line="14" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="42">"[%s]"<pos:position pos:line="14" pos:column="48"/></literal></expr></argument>, <argument><expr><call><name pos:line="14" pos:column="50">shorten_unambiguous_ref<pos:position pos:line="14" pos:column="73"/></name><argument_list pos:line="14" pos:column="73">(<argument><expr><name><name pos:line="14" pos:column="74">wt<pos:position pos:line="14" pos:column="76"/></name><operator pos:line="14" pos:column="76">-&gt;<pos:position pos:line="14" pos:column="81"/></operator><name pos:line="14" pos:column="78">head_ref<pos:position pos:line="14" pos:column="86"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="88">0<pos:position pos:line="14" pos:column="89"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="90"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="92"/></expr_stmt></block></then>
		<else pos:line="15" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="25">strbuf_addstr<pos:position pos:line="16" pos:column="38"/></name><argument_list pos:line="16" pos:column="38">(<argument><expr><operator pos:line="16" pos:column="39">&amp;<pos:position pos:line="16" pos:column="44"/></operator><name pos:line="16" pos:column="40">sb<pos:position pos:line="16" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="44">"(detached HEAD)"<pos:position pos:line="16" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="63"/></expr_stmt></block></else></if>
	}<pos:position pos:line="17" pos:column="10"/></block></else></if>
	<expr_stmt><expr><call><name pos:line="18" pos:column="9">printf<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><literal type="string" pos:line="18" pos:column="16">"%s\n"<pos:position pos:line="18" pos:column="22"/></literal></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="24">sb<pos:position pos:line="18" pos:column="26"/></name><operator pos:line="18" pos:column="26">.<pos:position pos:line="18" pos:column="27"/></operator><name pos:line="18" pos:column="27">buf<pos:position pos:line="18" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="32"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="20" pos:column="9">strbuf_release<pos:position pos:line="20" pos:column="23"/></name><argument_list pos:line="20" pos:column="23">(<argument><expr><operator pos:line="20" pos:column="24">&amp;<pos:position pos:line="20" pos:column="29"/></operator><name pos:line="20" pos:column="25">sb<pos:position pos:line="20" pos:column="27"/></name></expr></argument>)<pos:position pos:line="20" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="29"/></expr_stmt>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

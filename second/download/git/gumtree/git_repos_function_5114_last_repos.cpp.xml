<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5114_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">add_prefix<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><specifier pos:line="1" pos:column="31">const<pos:position pos:line="1" pos:column="36"/></specifier> <name pos:line="1" pos:column="37">char<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">prefix<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="51">const<pos:position pos:line="1" pos:column="56"/></specifier> <name pos:line="1" pos:column="57">char<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">path<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<return pos:line="3" pos:column="9">return <expr><call><name pos:line="3" pos:column="16">prefix_path<pos:position pos:line="3" pos:column="27"/></name><argument_list pos:line="3" pos:column="27">(<argument><expr><name pos:line="3" pos:column="28">prefix<pos:position pos:line="3" pos:column="34"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="3" pos:column="36">prefix<pos:position pos:line="3" pos:column="42"/></name></expr> ?<pos:position pos:line="3" pos:column="44"/></condition><then pos:line="3" pos:column="44"> <expr><call><name pos:line="3" pos:column="45">strlen<pos:position pos:line="3" pos:column="51"/></name><argument_list pos:line="3" pos:column="51">(<argument><expr><name pos:line="3" pos:column="52">prefix<pos:position pos:line="3" pos:column="58"/></name></expr></argument>)<pos:position pos:line="3" pos:column="59"/></argument_list></call></expr> <pos:position pos:line="3" pos:column="60"/></then><else pos:line="3" pos:column="60">: <expr><literal type="number" pos:line="3" pos:column="62">0<pos:position pos:line="3" pos:column="63"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="3" pos:column="65">path<pos:position pos:line="3" pos:column="69"/></name></expr></argument>)<pos:position pos:line="3" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="71"/></return>
}<pos:position pos:line="4" pos:column="2"/></block></function></unit>

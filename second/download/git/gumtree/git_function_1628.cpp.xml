<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1628.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">size_t<pos:position pos:line="1" pos:column="14"/></name></type> <name pos:line="1" pos:column="15">parse_color<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">strbuf<pos:position pos:line="1" pos:column="40"/></name></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">sb<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="46">/* in UTF-8 */</comment>
			  <parameter><decl><type><specifier pos:line="2" pos:column="27">const<pos:position pos:line="2" pos:column="32"/></specifier> <name pos:line="2" pos:column="33">char<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">placeholder<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>,
			  <parameter><decl><type><name><name pos:line="3" pos:column="27">struct<pos:position pos:line="3" pos:column="33"/></name> <name pos:line="3" pos:column="34">format_commit_context<pos:position pos:line="3" pos:column="55"/></name></name> <modifier pos:line="3" pos:column="56">*<pos:position pos:line="3" pos:column="57"/></modifier></type><name pos:line="3" pos:column="57">c<pos:position pos:line="3" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="59"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">rest<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><name pos:line="5" pos:column="28">placeholder<pos:position pos:line="5" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="40"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name><name pos:line="7" pos:column="13">placeholder<pos:position pos:line="7" pos:column="24"/></name><index pos:line="7" pos:column="24">[<expr><literal type="number" pos:line="7" pos:column="25">1<pos:position pos:line="7" pos:column="26"/></literal></expr>]<pos:position pos:line="7" pos:column="27"/></index></name> <operator pos:line="7" pos:column="28">==<pos:position pos:line="7" pos:column="30"/></operator> <literal type="char" pos:line="7" pos:column="31">'('<pos:position pos:line="7" pos:column="34"/></literal></expr>)<pos:position pos:line="7" pos:column="35"/></condition><then pos:line="7" pos:column="35"> <block pos:line="7" pos:column="36">{
		<decl_stmt><decl><type><specifier pos:line="8" pos:column="17">const<pos:position pos:line="8" pos:column="22"/></specifier> <name pos:line="8" pos:column="23">char<pos:position pos:line="8" pos:column="27"/></name> <modifier pos:line="8" pos:column="28">*<pos:position pos:line="8" pos:column="29"/></modifier></type><name pos:line="8" pos:column="29">begin<pos:position pos:line="8" pos:column="34"/></name> <init pos:line="8" pos:column="35">= <expr><name pos:line="8" pos:column="37">placeholder<pos:position pos:line="8" pos:column="48"/></name> <operator pos:line="8" pos:column="49">+<pos:position pos:line="8" pos:column="50"/></operator> <literal type="number" pos:line="8" pos:column="51">2<pos:position pos:line="8" pos:column="52"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="53"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="9" pos:column="17">const<pos:position pos:line="9" pos:column="22"/></specifier> <name pos:line="9" pos:column="23">char<pos:position pos:line="9" pos:column="27"/></name> <modifier pos:line="9" pos:column="28">*<pos:position pos:line="9" pos:column="29"/></modifier></type><name pos:line="9" pos:column="29">end<pos:position pos:line="9" pos:column="32"/></name> <init pos:line="9" pos:column="33">= <expr><call><name pos:line="9" pos:column="35">strchr<pos:position pos:line="9" pos:column="41"/></name><argument_list pos:line="9" pos:column="41">(<argument><expr><name pos:line="9" pos:column="42">begin<pos:position pos:line="9" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="9" pos:column="49">')'<pos:position pos:line="9" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="54"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="10" pos:column="17">char<pos:position pos:line="10" pos:column="21"/></name></type> <name><name pos:line="10" pos:column="22">color<pos:position pos:line="10" pos:column="27"/></name><index pos:line="10" pos:column="27">[<expr><name pos:line="10" pos:column="28">COLOR_MAXLEN<pos:position pos:line="10" pos:column="40"/></name></expr>]<pos:position pos:line="10" pos:column="41"/></index></name></decl>;<pos:position pos:line="10" pos:column="42"/></decl_stmt>

		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><operator pos:line="12" pos:column="21">!<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="22">end<pos:position pos:line="12" pos:column="25"/></name></expr>)<pos:position pos:line="12" pos:column="26"/></condition><then pos:line="12" pos:column="26">
			<block type="pseudo"><return pos:line="13" pos:column="25">return <expr><literal type="number" pos:line="13" pos:column="32">0<pos:position pos:line="13" pos:column="33"/></literal></expr>;<pos:position pos:line="13" pos:column="34"/></return></block></then></if>
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><call><name pos:line="14" pos:column="21">skip_prefix<pos:position pos:line="14" pos:column="32"/></name><argument_list pos:line="14" pos:column="32">(<argument><expr><name pos:line="14" pos:column="33">begin<pos:position pos:line="14" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="40">"auto,"<pos:position pos:line="14" pos:column="47"/></literal></expr></argument>, <argument><expr><operator pos:line="14" pos:column="49">&amp;<pos:position pos:line="14" pos:column="54"/></operator><name pos:line="14" pos:column="50">begin<pos:position pos:line="14" pos:column="55"/></name></expr></argument>)<pos:position pos:line="14" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="57"/></condition><then pos:line="14" pos:column="57"> <block pos:line="14" pos:column="58">{
			<if pos:line="15" pos:column="25">if <condition pos:line="15" pos:column="28">(<expr><operator pos:line="15" pos:column="29">!<pos:position pos:line="15" pos:column="30"/></operator><call><name pos:line="15" pos:column="30">want_color<pos:position pos:line="15" pos:column="40"/></name><argument_list pos:line="15" pos:column="40">(<argument><expr><name><name pos:line="15" pos:column="41">c<pos:position pos:line="15" pos:column="42"/></name><operator pos:line="15" pos:column="42">-&gt;<pos:position pos:line="15" pos:column="47"/></operator><name pos:line="15" pos:column="44">pretty_ctx<pos:position pos:line="15" pos:column="54"/></name><operator pos:line="15" pos:column="54">-&gt;<pos:position pos:line="15" pos:column="59"/></operator><name pos:line="15" pos:column="56">color<pos:position pos:line="15" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="63"/></condition><then pos:line="15" pos:column="63">
				<block type="pseudo"><return pos:line="16" pos:column="33">return <expr><name pos:line="16" pos:column="40">end<pos:position pos:line="16" pos:column="43"/></name> <operator pos:line="16" pos:column="44">-<pos:position pos:line="16" pos:column="45"/></operator> <name pos:line="16" pos:column="46">placeholder<pos:position pos:line="16" pos:column="57"/></name> <operator pos:line="16" pos:column="58">+<pos:position pos:line="16" pos:column="59"/></operator> <literal type="number" pos:line="16" pos:column="60">1<pos:position pos:line="16" pos:column="61"/></literal></expr>;<pos:position pos:line="16" pos:column="62"/></return></block></then></if>
		}<pos:position pos:line="17" pos:column="18"/></block></then></if>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><call><name pos:line="18" pos:column="21">color_parse_mem<pos:position pos:line="18" pos:column="36"/></name><argument_list pos:line="18" pos:column="36">(<argument><expr><name pos:line="18" pos:column="37">begin<pos:position pos:line="18" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="44">end<pos:position pos:line="18" pos:column="47"/></name> <operator pos:line="18" pos:column="48">-<pos:position pos:line="18" pos:column="49"/></operator> <name pos:line="18" pos:column="50">begin<pos:position pos:line="18" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="57">color<pos:position pos:line="18" pos:column="62"/></name></expr></argument>)<pos:position pos:line="18" pos:column="63"/></argument_list></call> <operator pos:line="18" pos:column="64">&lt;<pos:position pos:line="18" pos:column="68"/></operator> <literal type="number" pos:line="18" pos:column="66">0<pos:position pos:line="18" pos:column="67"/></literal></expr>)<pos:position pos:line="18" pos:column="68"/></condition><then pos:line="18" pos:column="68">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="25">die<pos:position pos:line="19" pos:column="28"/></name><argument_list pos:line="19" pos:column="28">(<argument><expr><call><name pos:line="19" pos:column="29">_<pos:position pos:line="19" pos:column="30"/></name><argument_list pos:line="19" pos:column="30">(<argument><expr><literal type="string" pos:line="19" pos:column="31">"unable to parse --pretty format"<pos:position pos:line="19" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="67"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">strbuf_addstr<pos:position pos:line="20" pos:column="30"/></name><argument_list pos:line="20" pos:column="30">(<argument><expr><name pos:line="20" pos:column="31">sb<pos:position pos:line="20" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="35">color<pos:position pos:line="20" pos:column="40"/></name></expr></argument>)<pos:position pos:line="20" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="42"/></expr_stmt>
		<return pos:line="21" pos:column="17">return <expr><name pos:line="21" pos:column="24">end<pos:position pos:line="21" pos:column="27"/></name> <operator pos:line="21" pos:column="28">-<pos:position pos:line="21" pos:column="29"/></operator> <name pos:line="21" pos:column="30">placeholder<pos:position pos:line="21" pos:column="41"/></name> <operator pos:line="21" pos:column="42">+<pos:position pos:line="21" pos:column="43"/></operator> <literal type="number" pos:line="21" pos:column="44">1<pos:position pos:line="21" pos:column="45"/></literal></expr>;<pos:position pos:line="21" pos:column="46"/></return>
	}<pos:position pos:line="22" pos:column="10"/></block></then></if>
	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><call><name pos:line="23" pos:column="13">skip_prefix<pos:position pos:line="23" pos:column="24"/></name><argument_list pos:line="23" pos:column="24">(<argument><expr><name pos:line="23" pos:column="25">placeholder<pos:position pos:line="23" pos:column="36"/></name> <operator pos:line="23" pos:column="37">+<pos:position pos:line="23" pos:column="38"/></operator> <literal type="number" pos:line="23" pos:column="39">1<pos:position pos:line="23" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="42">"red"<pos:position pos:line="23" pos:column="47"/></literal></expr></argument>, <argument><expr><operator pos:line="23" pos:column="49">&amp;<pos:position pos:line="23" pos:column="54"/></operator><name pos:line="23" pos:column="50">rest<pos:position pos:line="23" pos:column="54"/></name></expr></argument>)<pos:position pos:line="23" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="56"/></condition><then pos:line="23" pos:column="56">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="17">strbuf_addstr<pos:position pos:line="24" pos:column="30"/></name><argument_list pos:line="24" pos:column="30">(<argument><expr><name pos:line="24" pos:column="31">sb<pos:position pos:line="24" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="35">GIT_COLOR_RED<pos:position pos:line="24" pos:column="48"/></name></expr></argument>)<pos:position pos:line="24" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="50"/></expr_stmt></block></then>
	<elseif pos:line="25" pos:column="9">else <if pos:line="25" pos:column="14">if <condition pos:line="25" pos:column="17">(<expr><call><name pos:line="25" pos:column="18">skip_prefix<pos:position pos:line="25" pos:column="29"/></name><argument_list pos:line="25" pos:column="29">(<argument><expr><name pos:line="25" pos:column="30">placeholder<pos:position pos:line="25" pos:column="41"/></name> <operator pos:line="25" pos:column="42">+<pos:position pos:line="25" pos:column="43"/></operator> <literal type="number" pos:line="25" pos:column="44">1<pos:position pos:line="25" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="47">"green"<pos:position pos:line="25" pos:column="54"/></literal></expr></argument>, <argument><expr><operator pos:line="25" pos:column="56">&amp;<pos:position pos:line="25" pos:column="61"/></operator><name pos:line="25" pos:column="57">rest<pos:position pos:line="25" pos:column="61"/></name></expr></argument>)<pos:position pos:line="25" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="63"/></condition><then pos:line="25" pos:column="63">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="17">strbuf_addstr<pos:position pos:line="26" pos:column="30"/></name><argument_list pos:line="26" pos:column="30">(<argument><expr><name pos:line="26" pos:column="31">sb<pos:position pos:line="26" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="35">GIT_COLOR_GREEN<pos:position pos:line="26" pos:column="50"/></name></expr></argument>)<pos:position pos:line="26" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="52"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="27" pos:column="9">else <if pos:line="27" pos:column="14">if <condition pos:line="27" pos:column="17">(<expr><call><name pos:line="27" pos:column="18">skip_prefix<pos:position pos:line="27" pos:column="29"/></name><argument_list pos:line="27" pos:column="29">(<argument><expr><name pos:line="27" pos:column="30">placeholder<pos:position pos:line="27" pos:column="41"/></name> <operator pos:line="27" pos:column="42">+<pos:position pos:line="27" pos:column="43"/></operator> <literal type="number" pos:line="27" pos:column="44">1<pos:position pos:line="27" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="47">"blue"<pos:position pos:line="27" pos:column="53"/></literal></expr></argument>, <argument><expr><operator pos:line="27" pos:column="55">&amp;<pos:position pos:line="27" pos:column="60"/></operator><name pos:line="27" pos:column="56">rest<pos:position pos:line="27" pos:column="60"/></name></expr></argument>)<pos:position pos:line="27" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="62"/></condition><then pos:line="27" pos:column="62">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="17">strbuf_addstr<pos:position pos:line="28" pos:column="30"/></name><argument_list pos:line="28" pos:column="30">(<argument><expr><name pos:line="28" pos:column="31">sb<pos:position pos:line="28" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="35">GIT_COLOR_BLUE<pos:position pos:line="28" pos:column="49"/></name></expr></argument>)<pos:position pos:line="28" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="51"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="29" pos:column="9">else <if pos:line="29" pos:column="14">if <condition pos:line="29" pos:column="17">(<expr><call><name pos:line="29" pos:column="18">skip_prefix<pos:position pos:line="29" pos:column="29"/></name><argument_list pos:line="29" pos:column="29">(<argument><expr><name pos:line="29" pos:column="30">placeholder<pos:position pos:line="29" pos:column="41"/></name> <operator pos:line="29" pos:column="42">+<pos:position pos:line="29" pos:column="43"/></operator> <literal type="number" pos:line="29" pos:column="44">1<pos:position pos:line="29" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="47">"reset"<pos:position pos:line="29" pos:column="54"/></literal></expr></argument>, <argument><expr><operator pos:line="29" pos:column="56">&amp;<pos:position pos:line="29" pos:column="61"/></operator><name pos:line="29" pos:column="57">rest<pos:position pos:line="29" pos:column="61"/></name></expr></argument>)<pos:position pos:line="29" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="63"/></condition><then pos:line="29" pos:column="63">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="17">strbuf_addstr<pos:position pos:line="30" pos:column="30"/></name><argument_list pos:line="30" pos:column="30">(<argument><expr><name pos:line="30" pos:column="31">sb<pos:position pos:line="30" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="35">GIT_COLOR_RESET<pos:position pos:line="30" pos:column="50"/></name></expr></argument>)<pos:position pos:line="30" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="52"/></expr_stmt></block></then></if></elseif></if>
	<return pos:line="31" pos:column="9">return <expr><name pos:line="31" pos:column="16">rest<pos:position pos:line="31" pos:column="20"/></name> <operator pos:line="31" pos:column="21">-<pos:position pos:line="31" pos:column="22"/></operator> <name pos:line="31" pos:column="23">placeholder<pos:position pos:line="31" pos:column="34"/></name></expr>;<pos:position pos:line="31" pos:column="35"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5819_git-2.4.12.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">re_search_2_stub<pos:position pos:line="2" pos:column="17"/></name> <parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name><name pos:line="2" pos:column="19">struct<pos:position pos:line="2" pos:column="25"/></name> <name pos:line="2" pos:column="26">re_pattern_buffer<pos:position pos:line="2" pos:column="43"/></name></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">bufp<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>,
		  <parameter><decl><type><specifier pos:line="3" pos:column="19">const<pos:position pos:line="3" pos:column="24"/></specifier> <name pos:line="3" pos:column="25">char<pos:position pos:line="3" pos:column="29"/></name> <modifier pos:line="3" pos:column="30">*<pos:position pos:line="3" pos:column="31"/></modifier></type><name pos:line="3" pos:column="31">string1<pos:position pos:line="3" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="40">int<pos:position pos:line="3" pos:column="43"/></name></type> <name pos:line="3" pos:column="44">length1<pos:position pos:line="3" pos:column="51"/></name></decl></parameter>,
		  <parameter><decl><type><specifier pos:line="4" pos:column="19">const<pos:position pos:line="4" pos:column="24"/></specifier> <name pos:line="4" pos:column="25">char<pos:position pos:line="4" pos:column="29"/></name> <modifier pos:line="4" pos:column="30">*<pos:position pos:line="4" pos:column="31"/></modifier></type><name pos:line="4" pos:column="31">string2<pos:position pos:line="4" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="4" pos:column="40">int<pos:position pos:line="4" pos:column="43"/></name></type> <name pos:line="4" pos:column="44">length2<pos:position pos:line="4" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="4" pos:column="53">int<pos:position pos:line="4" pos:column="56"/></name></type> <name pos:line="4" pos:column="57">start<pos:position pos:line="4" pos:column="62"/></name></decl></parameter>,
		  <parameter><decl><type><name pos:line="5" pos:column="19">int<pos:position pos:line="5" pos:column="22"/></name></type> <name pos:line="5" pos:column="23">range<pos:position pos:line="5" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="5" pos:column="30">struct<pos:position pos:line="5" pos:column="36"/></name> <name pos:line="5" pos:column="37">re_registers<pos:position pos:line="5" pos:column="49"/></name></name> <modifier pos:line="5" pos:column="50">*<pos:position pos:line="5" pos:column="51"/></modifier></type><name pos:line="5" pos:column="51">regs<pos:position pos:line="5" pos:column="55"/></name></decl></parameter>,
		  <parameter><decl><type><name pos:line="6" pos:column="19">int<pos:position pos:line="6" pos:column="22"/></name></type> <name pos:line="6" pos:column="23">stop<pos:position pos:line="6" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><name pos:line="6" pos:column="29">int<pos:position pos:line="6" pos:column="32"/></name></type> <name pos:line="6" pos:column="33">ret_len<pos:position pos:line="6" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="6" pos:column="41"/></parameter_list>
<block pos:line="7" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="8" pos:column="3">const<pos:position pos:line="8" pos:column="8"/></specifier> <name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">str<pos:position pos:line="8" pos:column="18"/></name></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">rval<pos:position pos:line="9" pos:column="11"/></name></decl>;<pos:position pos:line="9" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">len<pos:position pos:line="10" pos:column="10"/></name> <init pos:line="10" pos:column="11">= <expr><name pos:line="10" pos:column="13">length1<pos:position pos:line="10" pos:column="20"/></name> <operator pos:line="10" pos:column="21">+<pos:position pos:line="10" pos:column="22"/></operator> <name pos:line="10" pos:column="23">length2<pos:position pos:line="10" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">int<pos:position pos:line="11" pos:column="6"/></name></type> <name pos:line="11" pos:column="7">free_str<pos:position pos:line="11" pos:column="15"/></name> <init pos:line="11" pos:column="16">= <expr><literal type="number" pos:line="11" pos:column="18">0<pos:position pos:line="11" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="20"/></decl_stmt>

  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><call><name pos:line="13" pos:column="7">BE<pos:position pos:line="13" pos:column="9"/></name> <argument_list pos:line="13" pos:column="10">(<argument><expr><name pos:line="13" pos:column="11">length1<pos:position pos:line="13" pos:column="18"/></name> <operator pos:line="13" pos:column="19">&lt;<pos:position pos:line="13" pos:column="23"/></operator> <literal type="number" pos:line="13" pos:column="21">0<pos:position pos:line="13" pos:column="22"/></literal> <operator pos:line="13" pos:column="23">||<pos:position pos:line="13" pos:column="25"/></operator> <name pos:line="13" pos:column="26">length2<pos:position pos:line="13" pos:column="33"/></name> <operator pos:line="13" pos:column="34">&lt;<pos:position pos:line="13" pos:column="38"/></operator> <literal type="number" pos:line="13" pos:column="36">0<pos:position pos:line="13" pos:column="37"/></literal> <operator pos:line="13" pos:column="38">||<pos:position pos:line="13" pos:column="40"/></operator> <name pos:line="13" pos:column="41">stop<pos:position pos:line="13" pos:column="45"/></name> <operator pos:line="13" pos:column="46">&lt;<pos:position pos:line="13" pos:column="50"/></operator> <literal type="number" pos:line="13" pos:column="48">0<pos:position pos:line="13" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="51">0<pos:position pos:line="13" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="54"/></condition><then pos:line="13" pos:column="54">
    <block type="pseudo"><return pos:line="14" pos:column="5">return <expr><operator pos:line="14" pos:column="12">-<pos:position pos:line="14" pos:column="13"/></operator><literal type="number" pos:line="14" pos:column="13">2<pos:position pos:line="14" pos:column="14"/></literal></expr>;<pos:position pos:line="14" pos:column="15"/></return></block></then></if>

  <comment type="block" pos:line="16" pos:column="3">/* Concatenate the strings.  */</comment>
  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><name pos:line="17" pos:column="7">length2<pos:position pos:line="17" pos:column="14"/></name> <operator pos:line="17" pos:column="15">&gt;<pos:position pos:line="17" pos:column="19"/></operator> <literal type="number" pos:line="17" pos:column="17">0<pos:position pos:line="17" pos:column="18"/></literal></expr>)<pos:position pos:line="17" pos:column="19"/></condition><then pos:line="17" pos:column="19">
    <block type="pseudo"><if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">length1<pos:position pos:line="18" pos:column="16"/></name> <operator pos:line="18" pos:column="17">&gt;<pos:position pos:line="18" pos:column="21"/></operator> <literal type="number" pos:line="18" pos:column="19">0<pos:position pos:line="18" pos:column="20"/></literal></expr>)<pos:position pos:line="18" pos:column="21"/></condition><then pos:line="18" pos:column="21">
      <block pos:line="19" pos:column="7">{
	<decl_stmt><decl><type><name pos:line="20" pos:column="9">char<pos:position pos:line="20" pos:column="13"/></name> <modifier pos:line="20" pos:column="14">*<pos:position pos:line="20" pos:column="15"/></modifier></type><name pos:line="20" pos:column="15">s<pos:position pos:line="20" pos:column="16"/></name> <init pos:line="20" pos:column="17">= <expr><call><name pos:line="20" pos:column="19">re_malloc<pos:position pos:line="20" pos:column="28"/></name> <argument_list pos:line="20" pos:column="29">(<argument><expr><name pos:line="20" pos:column="30">char<pos:position pos:line="20" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="36">len<pos:position pos:line="20" pos:column="39"/></name></expr></argument>)<pos:position pos:line="20" pos:column="40"/></argument_list></call></expr></init></decl>;<pos:position pos:line="20" pos:column="41"/></decl_stmt>

	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><call><name pos:line="22" pos:column="13">BE<pos:position pos:line="22" pos:column="15"/></name> <argument_list pos:line="22" pos:column="16">(<argument><expr><name pos:line="22" pos:column="17">s<pos:position pos:line="22" pos:column="18"/></name> <operator pos:line="22" pos:column="19">==<pos:position pos:line="22" pos:column="21"/></operator> <name pos:line="22" pos:column="22">NULL<pos:position pos:line="22" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="28">0<pos:position pos:line="22" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="31"/></condition><then pos:line="22" pos:column="31">
	  <block type="pseudo"><return pos:line="23" pos:column="11">return <expr><operator pos:line="23" pos:column="18">-<pos:position pos:line="23" pos:column="19"/></operator><literal type="number" pos:line="23" pos:column="19">2<pos:position pos:line="23" pos:column="20"/></literal></expr>;<pos:position pos:line="23" pos:column="21"/></return></block></then></if>
	<expr_stmt><expr><call><name pos:line="24" pos:column="9">memcpy<pos:position pos:line="24" pos:column="15"/></name> <argument_list pos:line="24" pos:column="16">(<argument><expr><name pos:line="24" pos:column="17">s<pos:position pos:line="24" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="20">string1<pos:position pos:line="24" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="29">length1<pos:position pos:line="24" pos:column="36"/></name></expr></argument>)<pos:position pos:line="24" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="25" pos:column="9">memcpy<pos:position pos:line="25" pos:column="15"/></name> <argument_list pos:line="25" pos:column="16">(<argument><expr><name pos:line="25" pos:column="17">s<pos:position pos:line="25" pos:column="18"/></name> <operator pos:line="25" pos:column="19">+<pos:position pos:line="25" pos:column="20"/></operator> <name pos:line="25" pos:column="21">length1<pos:position pos:line="25" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="30">string2<pos:position pos:line="25" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="39">length2<pos:position pos:line="25" pos:column="46"/></name></expr></argument>)<pos:position pos:line="25" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="48"/></expr_stmt>
	<expr_stmt><expr><name pos:line="26" pos:column="9">str<pos:position pos:line="26" pos:column="12"/></name> <operator pos:line="26" pos:column="13">=<pos:position pos:line="26" pos:column="14"/></operator> <name pos:line="26" pos:column="15">s<pos:position pos:line="26" pos:column="16"/></name></expr>;<pos:position pos:line="26" pos:column="17"/></expr_stmt>
	<expr_stmt><expr><name pos:line="27" pos:column="9">free_str<pos:position pos:line="27" pos:column="17"/></name> <operator pos:line="27" pos:column="18">=<pos:position pos:line="27" pos:column="19"/></operator> <literal type="number" pos:line="27" pos:column="20">1<pos:position pos:line="27" pos:column="21"/></literal></expr>;<pos:position pos:line="27" pos:column="22"/></expr_stmt>
      }<pos:position pos:line="28" pos:column="8"/></block></then>
    <else pos:line="29" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="7">str<pos:position pos:line="30" pos:column="10"/></name> <operator pos:line="30" pos:column="11">=<pos:position pos:line="30" pos:column="12"/></operator> <name pos:line="30" pos:column="13">string2<pos:position pos:line="30" pos:column="20"/></name></expr>;<pos:position pos:line="30" pos:column="21"/></expr_stmt></block></else></if></block></then>
  <else pos:line="31" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="5">str<pos:position pos:line="32" pos:column="8"/></name> <operator pos:line="32" pos:column="9">=<pos:position pos:line="32" pos:column="10"/></operator> <name pos:line="32" pos:column="11">string1<pos:position pos:line="32" pos:column="18"/></name></expr>;<pos:position pos:line="32" pos:column="19"/></expr_stmt></block></else></if>

  <expr_stmt><expr><name pos:line="34" pos:column="3">rval<pos:position pos:line="34" pos:column="7"/></name> <operator pos:line="34" pos:column="8">=<pos:position pos:line="34" pos:column="9"/></operator> <call><name pos:line="34" pos:column="10">re_search_stub<pos:position pos:line="34" pos:column="24"/></name> <argument_list pos:line="34" pos:column="25">(<argument><expr><name pos:line="34" pos:column="26">bufp<pos:position pos:line="34" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="32">str<pos:position pos:line="34" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="37">len<pos:position pos:line="34" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="42">start<pos:position pos:line="34" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="49">range<pos:position pos:line="34" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="56">stop<pos:position pos:line="34" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="62">regs<pos:position pos:line="34" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="68">ret_len<pos:position pos:line="34" pos:column="75"/></name></expr></argument>)<pos:position pos:line="34" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="77"/></expr_stmt>
  <if pos:line="35" pos:column="3">if <condition pos:line="35" pos:column="6">(<expr><name pos:line="35" pos:column="7">free_str<pos:position pos:line="35" pos:column="15"/></name></expr>)<pos:position pos:line="35" pos:column="16"/></condition><then pos:line="35" pos:column="16">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="5">re_free<pos:position pos:line="36" pos:column="12"/></name> <argument_list pos:line="36" pos:column="13">(<argument><expr><operator pos:line="36" pos:column="14">(<pos:position pos:line="36" pos:column="15"/></operator><name pos:line="36" pos:column="15">char<pos:position pos:line="36" pos:column="19"/></name> <operator pos:line="36" pos:column="20">*<pos:position pos:line="36" pos:column="21"/></operator><operator pos:line="36" pos:column="21">)<pos:position pos:line="36" pos:column="22"/></operator> <name pos:line="36" pos:column="23">str<pos:position pos:line="36" pos:column="26"/></name></expr></argument>)<pos:position pos:line="36" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="28"/></expr_stmt></block></then></if>
  <return pos:line="37" pos:column="3">return <expr><name pos:line="37" pos:column="10">rval<pos:position pos:line="37" pos:column="14"/></name></expr>;<pos:position pos:line="37" pos:column="15"/></return>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

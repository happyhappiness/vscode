<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3776_last_repos.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type><name pos:line="1" pos:column="13">get_superproject_working_tree<pos:position pos:line="1" pos:column="42"/></name><parameter_list pos:line="1" pos:column="42">(<parameter><decl><type><name pos:line="1" pos:column="43">void<pos:position pos:line="1" pos:column="47"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">child_process<pos:position pos:line="3" pos:column="29"/></name></name></type> <name pos:line="3" pos:column="30">cp<pos:position pos:line="3" pos:column="32"/></name> <init pos:line="3" pos:column="33">= <expr><name pos:line="3" pos:column="35">CHILD_PROCESS_INIT<pos:position pos:line="3" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="54"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">strbuf<pos:position pos:line="4" pos:column="22"/></name></name></type> <name pos:line="4" pos:column="23">sb<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><name pos:line="4" pos:column="28">STRBUF_INIT<pos:position pos:line="4" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">one_up<pos:position pos:line="5" pos:column="27"/></name> <init pos:line="5" pos:column="28">= <expr><call><name pos:line="5" pos:column="30">real_path_if_valid<pos:position pos:line="5" pos:column="48"/></name><argument_list pos:line="5" pos:column="48">(<argument><expr><literal type="string" pos:line="5" pos:column="49">"../"<pos:position pos:line="5" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="56"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">cwd<pos:position pos:line="6" pos:column="24"/></name> <init pos:line="6" pos:column="25">= <expr><call><name pos:line="6" pos:column="27">xgetcwd<pos:position pos:line="6" pos:column="34"/></name><argument_list pos:line="6" pos:column="34">()<pos:position pos:line="6" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name pos:line="7" pos:column="15">char<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">ret<pos:position pos:line="7" pos:column="24"/></name> <init pos:line="7" pos:column="25">= <expr><name pos:line="7" pos:column="27">NULL<pos:position pos:line="7" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="8" pos:column="9">const<pos:position pos:line="8" pos:column="14"/></specifier> <name pos:line="8" pos:column="15">char<pos:position pos:line="8" pos:column="19"/></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">subpath<pos:position pos:line="8" pos:column="28"/></name></decl>;<pos:position pos:line="8" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">code<pos:position pos:line="9" pos:column="17"/></name></decl>;<pos:position pos:line="9" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">ssize_t<pos:position pos:line="10" pos:column="16"/></name></type> <name pos:line="10" pos:column="17">len<pos:position pos:line="10" pos:column="20"/></name></decl>;<pos:position pos:line="10" pos:column="21"/></decl_stmt>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">!<pos:position pos:line="12" pos:column="14"/></operator><call><name pos:line="12" pos:column="14">is_inside_work_tree<pos:position pos:line="12" pos:column="33"/></name><argument_list pos:line="12" pos:column="33">()<pos:position pos:line="12" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="36"/></condition><then pos:line="12" pos:column="36">
		<comment type="block" pos:line="13" pos:column="17">/*
		 * FIXME:
		 * We might have a superproject, but it is harder
		 * to determine.
		 */</comment>
		<block type="pseudo"><return pos:line="18" pos:column="17">return <expr><name pos:line="18" pos:column="24">NULL<pos:position pos:line="18" pos:column="28"/></name></expr>;<pos:position pos:line="18" pos:column="29"/></return></block></then></if>

	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><operator pos:line="20" pos:column="13">!<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="14">one_up<pos:position pos:line="20" pos:column="20"/></name></expr>)<pos:position pos:line="20" pos:column="21"/></condition><then pos:line="20" pos:column="21">
		<block type="pseudo"><return pos:line="21" pos:column="17">return <expr><name pos:line="21" pos:column="24">NULL<pos:position pos:line="21" pos:column="28"/></name></expr>;<pos:position pos:line="21" pos:column="29"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="23" pos:column="9">subpath<pos:position pos:line="23" pos:column="16"/></name> <operator pos:line="23" pos:column="17">=<pos:position pos:line="23" pos:column="18"/></operator> <call><name pos:line="23" pos:column="19">relative_path<pos:position pos:line="23" pos:column="32"/></name><argument_list pos:line="23" pos:column="32">(<argument><expr><name pos:line="23" pos:column="33">cwd<pos:position pos:line="23" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="38">one_up<pos:position pos:line="23" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="46">&amp;<pos:position pos:line="23" pos:column="51"/></operator><name pos:line="23" pos:column="47">sb<pos:position pos:line="23" pos:column="49"/></name></expr></argument>)<pos:position pos:line="23" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="51"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="25" pos:column="9">prepare_submodule_repo_env<pos:position pos:line="25" pos:column="35"/></name><argument_list pos:line="25" pos:column="35">(<argument><expr><operator pos:line="25" pos:column="36">&amp;<pos:position pos:line="25" pos:column="41"/></operator><name><name pos:line="25" pos:column="37">cp<pos:position pos:line="25" pos:column="39"/></name><operator pos:line="25" pos:column="39">.<pos:position pos:line="25" pos:column="40"/></operator><name pos:line="25" pos:column="40">env_array<pos:position pos:line="25" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="51"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="26" pos:column="9">argv_array_pop<pos:position pos:line="26" pos:column="23"/></name><argument_list pos:line="26" pos:column="23">(<argument><expr><operator pos:line="26" pos:column="24">&amp;<pos:position pos:line="26" pos:column="29"/></operator><name><name pos:line="26" pos:column="25">cp<pos:position pos:line="26" pos:column="27"/></name><operator pos:line="26" pos:column="27">.<pos:position pos:line="26" pos:column="28"/></operator><name pos:line="26" pos:column="28">env_array<pos:position pos:line="26" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="39"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="28" pos:column="9">argv_array_pushl<pos:position pos:line="28" pos:column="25"/></name><argument_list pos:line="28" pos:column="25">(<argument><expr><operator pos:line="28" pos:column="26">&amp;<pos:position pos:line="28" pos:column="31"/></operator><name><name pos:line="28" pos:column="27">cp<pos:position pos:line="28" pos:column="29"/></name><operator pos:line="28" pos:column="29">.<pos:position pos:line="28" pos:column="30"/></operator><name pos:line="28" pos:column="30">args<pos:position pos:line="28" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="36">"--literal-pathspecs"<pos:position pos:line="28" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="59">"-C"<pos:position pos:line="28" pos:column="63"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="65">".."<pos:position pos:line="28" pos:column="69"/></literal></expr></argument>,
			<argument><expr><literal type="string" pos:line="29" pos:column="25">"ls-files"<pos:position pos:line="29" pos:column="35"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="37">"-z"<pos:position pos:line="29" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="43">"--stage"<pos:position pos:line="29" pos:column="52"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="54">"--full-name"<pos:position pos:line="29" pos:column="67"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="69">"--"<pos:position pos:line="29" pos:column="73"/></literal></expr></argument>,
			<argument><expr><name pos:line="30" pos:column="25">subpath<pos:position pos:line="30" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="34">NULL<pos:position pos:line="30" pos:column="38"/></name></expr></argument>)<pos:position pos:line="30" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="31" pos:column="9">strbuf_reset<pos:position pos:line="31" pos:column="21"/></name><argument_list pos:line="31" pos:column="21">(<argument><expr><operator pos:line="31" pos:column="22">&amp;<pos:position pos:line="31" pos:column="27"/></operator><name pos:line="31" pos:column="23">sb<pos:position pos:line="31" pos:column="25"/></name></expr></argument>)<pos:position pos:line="31" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="27"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="33" pos:column="9">cp<pos:position pos:line="33" pos:column="11"/></name><operator pos:line="33" pos:column="11">.<pos:position pos:line="33" pos:column="12"/></operator><name pos:line="33" pos:column="12">no_stdin<pos:position pos:line="33" pos:column="20"/></name></name> <operator pos:line="33" pos:column="21">=<pos:position pos:line="33" pos:column="22"/></operator> <literal type="number" pos:line="33" pos:column="23">1<pos:position pos:line="33" pos:column="24"/></literal></expr>;<pos:position pos:line="33" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="34" pos:column="9">cp<pos:position pos:line="34" pos:column="11"/></name><operator pos:line="34" pos:column="11">.<pos:position pos:line="34" pos:column="12"/></operator><name pos:line="34" pos:column="12">no_stderr<pos:position pos:line="34" pos:column="21"/></name></name> <operator pos:line="34" pos:column="22">=<pos:position pos:line="34" pos:column="23"/></operator> <literal type="number" pos:line="34" pos:column="24">1<pos:position pos:line="34" pos:column="25"/></literal></expr>;<pos:position pos:line="34" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="35" pos:column="9">cp<pos:position pos:line="35" pos:column="11"/></name><operator pos:line="35" pos:column="11">.<pos:position pos:line="35" pos:column="12"/></operator><name pos:line="35" pos:column="12">out<pos:position pos:line="35" pos:column="15"/></name></name> <operator pos:line="35" pos:column="16">=<pos:position pos:line="35" pos:column="17"/></operator> <operator pos:line="35" pos:column="18">-<pos:position pos:line="35" pos:column="19"/></operator><literal type="number" pos:line="35" pos:column="19">1<pos:position pos:line="35" pos:column="20"/></literal></expr>;<pos:position pos:line="35" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="36" pos:column="9">cp<pos:position pos:line="36" pos:column="11"/></name><operator pos:line="36" pos:column="11">.<pos:position pos:line="36" pos:column="12"/></operator><name pos:line="36" pos:column="12">git_cmd<pos:position pos:line="36" pos:column="19"/></name></name> <operator pos:line="36" pos:column="20">=<pos:position pos:line="36" pos:column="21"/></operator> <literal type="number" pos:line="36" pos:column="22">1<pos:position pos:line="36" pos:column="23"/></literal></expr>;<pos:position pos:line="36" pos:column="24"/></expr_stmt>

	<if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><call><name pos:line="38" pos:column="13">start_command<pos:position pos:line="38" pos:column="26"/></name><argument_list pos:line="38" pos:column="26">(<argument><expr><operator pos:line="38" pos:column="27">&amp;<pos:position pos:line="38" pos:column="32"/></operator><name pos:line="38" pos:column="28">cp<pos:position pos:line="38" pos:column="30"/></name></expr></argument>)<pos:position pos:line="38" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="32"/></condition><then pos:line="38" pos:column="32">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="39" pos:column="17">die<pos:position pos:line="39" pos:column="20"/></name><argument_list pos:line="39" pos:column="20">(<argument><expr><call><name pos:line="39" pos:column="21">_<pos:position pos:line="39" pos:column="22"/></name><argument_list pos:line="39" pos:column="22">(<argument><expr><literal type="string" pos:line="39" pos:column="23">"could not start ls-files in .."<pos:position pos:line="39" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="39" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="58"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="41" pos:column="9">len<pos:position pos:line="41" pos:column="12"/></name> <operator pos:line="41" pos:column="13">=<pos:position pos:line="41" pos:column="14"/></operator> <call><name pos:line="41" pos:column="15">strbuf_read<pos:position pos:line="41" pos:column="26"/></name><argument_list pos:line="41" pos:column="26">(<argument><expr><operator pos:line="41" pos:column="27">&amp;<pos:position pos:line="41" pos:column="32"/></operator><name pos:line="41" pos:column="28">sb<pos:position pos:line="41" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="32">cp<pos:position pos:line="41" pos:column="34"/></name><operator pos:line="41" pos:column="34">.<pos:position pos:line="41" pos:column="35"/></operator><name pos:line="41" pos:column="35">out<pos:position pos:line="41" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="40">PATH_MAX<pos:position pos:line="41" pos:column="48"/></name></expr></argument>)<pos:position pos:line="41" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="50"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="42" pos:column="9">close<pos:position pos:line="42" pos:column="14"/></name><argument_list pos:line="42" pos:column="14">(<argument><expr><name><name pos:line="42" pos:column="15">cp<pos:position pos:line="42" pos:column="17"/></name><operator pos:line="42" pos:column="17">.<pos:position pos:line="42" pos:column="18"/></operator><name pos:line="42" pos:column="18">out<pos:position pos:line="42" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="23"/></expr_stmt>

	<if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><call><name pos:line="44" pos:column="13">starts_with<pos:position pos:line="44" pos:column="24"/></name><argument_list pos:line="44" pos:column="24">(<argument><expr><name><name pos:line="44" pos:column="25">sb<pos:position pos:line="44" pos:column="27"/></name><operator pos:line="44" pos:column="27">.<pos:position pos:line="44" pos:column="28"/></operator><name pos:line="44" pos:column="28">buf<pos:position pos:line="44" pos:column="31"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="33">"160000"<pos:position pos:line="44" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="43"/></condition><then pos:line="44" pos:column="43"> <block pos:line="44" pos:column="44">{
		<decl_stmt><decl><type><name pos:line="45" pos:column="17">int<pos:position pos:line="45" pos:column="20"/></name></type> <name pos:line="45" pos:column="21">super_sub_len<pos:position pos:line="45" pos:column="34"/></name></decl>;<pos:position pos:line="45" pos:column="35"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="46" pos:column="17">int<pos:position pos:line="46" pos:column="20"/></name></type> <name pos:line="46" pos:column="21">cwd_len<pos:position pos:line="46" pos:column="28"/></name> <init pos:line="46" pos:column="29">= <expr><call><name pos:line="46" pos:column="31">strlen<pos:position pos:line="46" pos:column="37"/></name><argument_list pos:line="46" pos:column="37">(<argument><expr><name pos:line="46" pos:column="38">cwd<pos:position pos:line="46" pos:column="41"/></name></expr></argument>)<pos:position pos:line="46" pos:column="42"/></argument_list></call></expr></init></decl>;<pos:position pos:line="46" pos:column="43"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="47" pos:column="17">char<pos:position pos:line="47" pos:column="21"/></name> <modifier pos:line="47" pos:column="22">*<pos:position pos:line="47" pos:column="23"/></modifier></type><name pos:line="47" pos:column="23">super_sub<pos:position pos:line="47" pos:column="32"/></name></decl>, <modifier pos:line="47" pos:column="34">*<pos:position pos:line="47" pos:column="35"/></modifier><decl><type ref="prev"/><name pos:line="47" pos:column="35">super_wt<pos:position pos:line="47" pos:column="43"/></name></decl>;<pos:position pos:line="47" pos:column="44"/></decl_stmt>

		<comment type="block" pos:line="49" pos:column="17">/*
		 * There is a superproject having this repo as a submodule.
		 * The format is &lt;mode&gt; SP &lt;hash&gt; SP &lt;stage&gt; TAB &lt;full name&gt; \0,
		 * We're only interested in the name after the tab.
		 */</comment>
		<expr_stmt><expr><name pos:line="54" pos:column="17">super_sub<pos:position pos:line="54" pos:column="26"/></name> <operator pos:line="54" pos:column="27">=<pos:position pos:line="54" pos:column="28"/></operator> <call><name pos:line="54" pos:column="29">strchr<pos:position pos:line="54" pos:column="35"/></name><argument_list pos:line="54" pos:column="35">(<argument><expr><name><name pos:line="54" pos:column="36">sb<pos:position pos:line="54" pos:column="38"/></name><operator pos:line="54" pos:column="38">.<pos:position pos:line="54" pos:column="39"/></operator><name pos:line="54" pos:column="39">buf<pos:position pos:line="54" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="54" pos:column="44">'\t'<pos:position pos:line="54" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="49"/></argument_list></call> <operator pos:line="54" pos:column="50">+<pos:position pos:line="54" pos:column="51"/></operator> <literal type="number" pos:line="54" pos:column="52">1<pos:position pos:line="54" pos:column="53"/></literal></expr>;<pos:position pos:line="54" pos:column="54"/></expr_stmt>
		<expr_stmt><expr><name pos:line="55" pos:column="17">super_sub_len<pos:position pos:line="55" pos:column="30"/></name> <operator pos:line="55" pos:column="31">=<pos:position pos:line="55" pos:column="32"/></operator> <name><name pos:line="55" pos:column="33">sb<pos:position pos:line="55" pos:column="35"/></name><operator pos:line="55" pos:column="35">.<pos:position pos:line="55" pos:column="36"/></operator><name pos:line="55" pos:column="36">buf<pos:position pos:line="55" pos:column="39"/></name></name> <operator pos:line="55" pos:column="40">+<pos:position pos:line="55" pos:column="41"/></operator> <name><name pos:line="55" pos:column="42">sb<pos:position pos:line="55" pos:column="44"/></name><operator pos:line="55" pos:column="44">.<pos:position pos:line="55" pos:column="45"/></operator><name pos:line="55" pos:column="45">len<pos:position pos:line="55" pos:column="48"/></name></name> <operator pos:line="55" pos:column="49">-<pos:position pos:line="55" pos:column="50"/></operator> <name pos:line="55" pos:column="51">super_sub<pos:position pos:line="55" pos:column="60"/></name> <operator pos:line="55" pos:column="61">-<pos:position pos:line="55" pos:column="62"/></operator> <literal type="number" pos:line="55" pos:column="63">1<pos:position pos:line="55" pos:column="64"/></literal></expr>;<pos:position pos:line="55" pos:column="65"/></expr_stmt>

		<if pos:line="57" pos:column="17">if <condition pos:line="57" pos:column="20">(<expr><name pos:line="57" pos:column="21">super_sub_len<pos:position pos:line="57" pos:column="34"/></name> <operator pos:line="57" pos:column="35">&gt;<pos:position pos:line="57" pos:column="39"/></operator> <name pos:line="57" pos:column="37">cwd_len<pos:position pos:line="57" pos:column="44"/></name> <operator pos:line="57" pos:column="45">||<pos:position pos:line="57" pos:column="47"/></operator>
		    <call><name pos:line="58" pos:column="21">strcmp<pos:position pos:line="58" pos:column="27"/></name><argument_list pos:line="58" pos:column="27">(<argument><expr><operator pos:line="58" pos:column="28">&amp;<pos:position pos:line="58" pos:column="33"/></operator><name><name pos:line="58" pos:column="29">cwd<pos:position pos:line="58" pos:column="32"/></name><index pos:line="58" pos:column="32">[<expr><name pos:line="58" pos:column="33">cwd_len<pos:position pos:line="58" pos:column="40"/></name> <operator pos:line="58" pos:column="41">-<pos:position pos:line="58" pos:column="42"/></operator> <name pos:line="58" pos:column="43">super_sub_len<pos:position pos:line="58" pos:column="56"/></name></expr>]<pos:position pos:line="58" pos:column="57"/></index></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="59">super_sub<pos:position pos:line="58" pos:column="68"/></name></expr></argument>)<pos:position pos:line="58" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="58" pos:column="70"/></condition><then pos:line="58" pos:column="70">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="59" pos:column="25">die<pos:position pos:line="59" pos:column="28"/></name> <argument_list pos:line="59" pos:column="29">(<argument><expr><call><name pos:line="59" pos:column="30">_<pos:position pos:line="59" pos:column="31"/></name><argument_list pos:line="59" pos:column="31">(<argument><expr><literal type="string" pos:line="59" pos:column="32">"BUG: returned path string doesn't match cwd?"<pos:position pos:line="59" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="59" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="81"/></expr_stmt></block></then></if>

		<expr_stmt><expr><name pos:line="61" pos:column="17">super_wt<pos:position pos:line="61" pos:column="25"/></name> <operator pos:line="61" pos:column="26">=<pos:position pos:line="61" pos:column="27"/></operator> <call><name pos:line="61" pos:column="28">xstrdup<pos:position pos:line="61" pos:column="35"/></name><argument_list pos:line="61" pos:column="35">(<argument><expr><name pos:line="61" pos:column="36">cwd<pos:position pos:line="61" pos:column="39"/></name></expr></argument>)<pos:position pos:line="61" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="62" pos:column="17">super_wt<pos:position pos:line="62" pos:column="25"/></name><index pos:line="62" pos:column="25">[<expr><name pos:line="62" pos:column="26">cwd_len<pos:position pos:line="62" pos:column="33"/></name> <operator pos:line="62" pos:column="34">-<pos:position pos:line="62" pos:column="35"/></operator> <name pos:line="62" pos:column="36">super_sub_len<pos:position pos:line="62" pos:column="49"/></name></expr>]<pos:position pos:line="62" pos:column="50"/></index></name> <operator pos:line="62" pos:column="51">=<pos:position pos:line="62" pos:column="52"/></operator> <literal type="char" pos:line="62" pos:column="53">'\0'<pos:position pos:line="62" pos:column="57"/></literal></expr>;<pos:position pos:line="62" pos:column="58"/></expr_stmt>

		<expr_stmt><expr><name pos:line="64" pos:column="17">ret<pos:position pos:line="64" pos:column="20"/></name> <operator pos:line="64" pos:column="21">=<pos:position pos:line="64" pos:column="22"/></operator> <call><name pos:line="64" pos:column="23">real_path<pos:position pos:line="64" pos:column="32"/></name><argument_list pos:line="64" pos:column="32">(<argument><expr><name pos:line="64" pos:column="33">super_wt<pos:position pos:line="64" pos:column="41"/></name></expr></argument>)<pos:position pos:line="64" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="65" pos:column="17">free<pos:position pos:line="65" pos:column="21"/></name><argument_list pos:line="65" pos:column="21">(<argument><expr><name pos:line="65" pos:column="22">super_wt<pos:position pos:line="65" pos:column="30"/></name></expr></argument>)<pos:position pos:line="65" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="32"/></expr_stmt>
	}<pos:position pos:line="66" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="67" pos:column="9">strbuf_release<pos:position pos:line="67" pos:column="23"/></name><argument_list pos:line="67" pos:column="23">(<argument><expr><operator pos:line="67" pos:column="24">&amp;<pos:position pos:line="67" pos:column="29"/></operator><name pos:line="67" pos:column="25">sb<pos:position pos:line="67" pos:column="27"/></name></expr></argument>)<pos:position pos:line="67" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="29"/></expr_stmt>

	<expr_stmt><expr><name pos:line="69" pos:column="9">code<pos:position pos:line="69" pos:column="13"/></name> <operator pos:line="69" pos:column="14">=<pos:position pos:line="69" pos:column="15"/></operator> <call><name pos:line="69" pos:column="16">finish_command<pos:position pos:line="69" pos:column="30"/></name><argument_list pos:line="69" pos:column="30">(<argument><expr><operator pos:line="69" pos:column="31">&amp;<pos:position pos:line="69" pos:column="36"/></operator><name pos:line="69" pos:column="32">cp<pos:position pos:line="69" pos:column="34"/></name></expr></argument>)<pos:position pos:line="69" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="36"/></expr_stmt>

	<if pos:line="71" pos:column="9">if <condition pos:line="71" pos:column="12">(<expr><name pos:line="71" pos:column="13">code<pos:position pos:line="71" pos:column="17"/></name> <operator pos:line="71" pos:column="18">==<pos:position pos:line="71" pos:column="20"/></operator> <literal type="number" pos:line="71" pos:column="21">128<pos:position pos:line="71" pos:column="24"/></literal></expr>)<pos:position pos:line="71" pos:column="25"/></condition><then pos:line="71" pos:column="25">
		<comment type="block" pos:line="72" pos:column="17">/* '../' is not a git repository */</comment>
		<block type="pseudo"><return pos:line="73" pos:column="17">return <expr><name pos:line="73" pos:column="24">NULL<pos:position pos:line="73" pos:column="28"/></name></expr>;<pos:position pos:line="73" pos:column="29"/></return></block></then></if>
	<if pos:line="74" pos:column="9">if <condition pos:line="74" pos:column="12">(<expr><name pos:line="74" pos:column="13">code<pos:position pos:line="74" pos:column="17"/></name> <operator pos:line="74" pos:column="18">==<pos:position pos:line="74" pos:column="20"/></operator> <literal type="number" pos:line="74" pos:column="21">0<pos:position pos:line="74" pos:column="22"/></literal> <operator pos:line="74" pos:column="23">&amp;&amp;<pos:position pos:line="74" pos:column="33"/></operator> <name pos:line="74" pos:column="26">len<pos:position pos:line="74" pos:column="29"/></name> <operator pos:line="74" pos:column="30">==<pos:position pos:line="74" pos:column="32"/></operator> <literal type="number" pos:line="74" pos:column="33">0<pos:position pos:line="74" pos:column="34"/></literal></expr>)<pos:position pos:line="74" pos:column="35"/></condition><then pos:line="74" pos:column="35">
		<comment type="block" pos:line="75" pos:column="17">/* There is an unrelated git repository at '../' */</comment>
		<block type="pseudo"><return pos:line="76" pos:column="17">return <expr><name pos:line="76" pos:column="24">NULL<pos:position pos:line="76" pos:column="28"/></name></expr>;<pos:position pos:line="76" pos:column="29"/></return></block></then></if>
	<if pos:line="77" pos:column="9">if <condition pos:line="77" pos:column="12">(<expr><name pos:line="77" pos:column="13">code<pos:position pos:line="77" pos:column="17"/></name></expr>)<pos:position pos:line="77" pos:column="18"/></condition><then pos:line="77" pos:column="18">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="78" pos:column="17">die<pos:position pos:line="78" pos:column="20"/></name><argument_list pos:line="78" pos:column="20">(<argument><expr><call><name pos:line="78" pos:column="21">_<pos:position pos:line="78" pos:column="22"/></name><argument_list pos:line="78" pos:column="22">(<argument><expr><literal type="string" pos:line="78" pos:column="23">"ls-tree returned unexpected return code %d"<pos:position pos:line="78" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="68"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="78" pos:column="70">code<pos:position pos:line="78" pos:column="74"/></name></expr></argument>)<pos:position pos:line="78" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="76"/></expr_stmt></block></then></if>

	<return pos:line="80" pos:column="9">return <expr><name pos:line="80" pos:column="16">ret<pos:position pos:line="80" pos:column="19"/></name></expr>;<pos:position pos:line="80" pos:column="20"/></return>
}<pos:position pos:line="81" pos:column="2"/></block></function></unit>

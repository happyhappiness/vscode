<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2830_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">memory_limit_check<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">size_t<pos:position pos:line="1" pos:column="37"/></name></type> <name pos:line="1" pos:column="38">size<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">int<pos:position pos:line="1" pos:column="47"/></name></type> <name pos:line="1" pos:column="48">gentle<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><name pos:line="3" pos:column="16">size_t<pos:position pos:line="3" pos:column="22"/></name></type> <name pos:line="3" pos:column="23">limit<pos:position pos:line="3" pos:column="28"/></name> <init pos:line="3" pos:column="29">= <expr><literal type="number" pos:line="3" pos:column="31">0<pos:position pos:line="3" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="33"/></decl_stmt>
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><operator pos:line="4" pos:column="13">!<pos:position pos:line="4" pos:column="14"/></operator><name pos:line="4" pos:column="14">limit<pos:position pos:line="4" pos:column="19"/></name></expr>)<pos:position pos:line="4" pos:column="20"/></condition><then pos:line="4" pos:column="20"> <block pos:line="4" pos:column="21">{
		<expr_stmt><expr><name pos:line="5" pos:column="17">limit<pos:position pos:line="5" pos:column="22"/></name> <operator pos:line="5" pos:column="23">=<pos:position pos:line="5" pos:column="24"/></operator> <call><name pos:line="5" pos:column="25">git_env_ulong<pos:position pos:line="5" pos:column="38"/></name><argument_list pos:line="5" pos:column="38">(<argument><expr><literal type="string" pos:line="5" pos:column="39">"GIT_ALLOC_LIMIT"<pos:position pos:line="5" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="58">0<pos:position pos:line="5" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="61"/></expr_stmt>
		<if pos:line="6" pos:column="17">if <condition pos:line="6" pos:column="20">(<expr><operator pos:line="6" pos:column="21">!<pos:position pos:line="6" pos:column="22"/></operator><name pos:line="6" pos:column="22">limit<pos:position pos:line="6" pos:column="27"/></name></expr>)<pos:position pos:line="6" pos:column="28"/></condition><then pos:line="6" pos:column="28">
			<block type="pseudo"><expr_stmt><expr><name pos:line="7" pos:column="25">limit<pos:position pos:line="7" pos:column="30"/></name> <operator pos:line="7" pos:column="31">=<pos:position pos:line="7" pos:column="32"/></operator> <name pos:line="7" pos:column="33">SIZE_MAX<pos:position pos:line="7" pos:column="41"/></name></expr>;<pos:position pos:line="7" pos:column="42"/></expr_stmt></block></then></if>
	}<pos:position pos:line="8" pos:column="10"/></block></then></if>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">size<pos:position pos:line="9" pos:column="17"/></name> <operator pos:line="9" pos:column="18">&gt;<pos:position pos:line="9" pos:column="22"/></operator> <name pos:line="9" pos:column="20">limit<pos:position pos:line="9" pos:column="25"/></name></expr>)<pos:position pos:line="9" pos:column="26"/></condition><then pos:line="9" pos:column="26"> <block pos:line="9" pos:column="27">{
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><name pos:line="10" pos:column="21">gentle<pos:position pos:line="10" pos:column="27"/></name></expr>)<pos:position pos:line="10" pos:column="28"/></condition><then pos:line="10" pos:column="28"> <block pos:line="10" pos:column="29">{
			<expr_stmt><expr><call><name pos:line="11" pos:column="25">error<pos:position pos:line="11" pos:column="30"/></name><argument_list pos:line="11" pos:column="30">(<argument><expr><literal type="string" pos:line="11" pos:column="31">"attempting to allocate %"<pos:position pos:line="11" pos:column="57"/></literal><name pos:line="11" pos:column="57">PRIuMAX<pos:position pos:line="11" pos:column="64"/></name><literal type="string" pos:line="11" pos:column="64">" over limit %"<pos:position pos:line="11" pos:column="79"/></literal><name pos:line="11" pos:column="79">PRIuMAX<pos:position pos:line="11" pos:column="86"/></name></expr></argument>,
			      <argument><expr><operator pos:line="12" pos:column="31">(<pos:position pos:line="12" pos:column="32"/></operator><name pos:line="12" pos:column="32">uintmax_t<pos:position pos:line="12" pos:column="41"/></name><operator pos:line="12" pos:column="41">)<pos:position pos:line="12" pos:column="42"/></operator><name pos:line="12" pos:column="42">size<pos:position pos:line="12" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="48">(<pos:position pos:line="12" pos:column="49"/></operator><name pos:line="12" pos:column="49">uintmax_t<pos:position pos:line="12" pos:column="58"/></name><operator pos:line="12" pos:column="58">)<pos:position pos:line="12" pos:column="59"/></operator><name pos:line="12" pos:column="59">limit<pos:position pos:line="12" pos:column="64"/></name></expr></argument>)<pos:position pos:line="12" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="66"/></expr_stmt>
			<return pos:line="13" pos:column="25">return <expr><operator pos:line="13" pos:column="32">-<pos:position pos:line="13" pos:column="33"/></operator><literal type="number" pos:line="13" pos:column="33">1<pos:position pos:line="13" pos:column="34"/></literal></expr>;<pos:position pos:line="13" pos:column="35"/></return>
		}<pos:position pos:line="14" pos:column="18"/></block></then> <else pos:line="14" pos:column="19">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="25">die<pos:position pos:line="15" pos:column="28"/></name><argument_list pos:line="15" pos:column="28">(<argument><expr><literal type="string" pos:line="15" pos:column="29">"attempting to allocate %"<pos:position pos:line="15" pos:column="55"/></literal><name pos:line="15" pos:column="55">PRIuMAX<pos:position pos:line="15" pos:column="62"/></name><literal type="string" pos:line="15" pos:column="62">" over limit %"<pos:position pos:line="15" pos:column="77"/></literal><name pos:line="15" pos:column="77">PRIuMAX<pos:position pos:line="15" pos:column="84"/></name></expr></argument>,
			    <argument><expr><operator pos:line="16" pos:column="29">(<pos:position pos:line="16" pos:column="30"/></operator><name pos:line="16" pos:column="30">uintmax_t<pos:position pos:line="16" pos:column="39"/></name><operator pos:line="16" pos:column="39">)<pos:position pos:line="16" pos:column="40"/></operator><name pos:line="16" pos:column="40">size<pos:position pos:line="16" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="46">(<pos:position pos:line="16" pos:column="47"/></operator><name pos:line="16" pos:column="47">uintmax_t<pos:position pos:line="16" pos:column="56"/></name><operator pos:line="16" pos:column="56">)<pos:position pos:line="16" pos:column="57"/></operator><name pos:line="16" pos:column="57">limit<pos:position pos:line="16" pos:column="62"/></name></expr></argument>)<pos:position pos:line="16" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="64"/></expr_stmt></block></else></if>
	}<pos:position pos:line="17" pos:column="10"/></block></then></if>
	<return pos:line="18" pos:column="9">return <expr><literal type="number" pos:line="18" pos:column="16">0<pos:position pos:line="18" pos:column="17"/></literal></expr>;<pos:position pos:line="18" pos:column="18"/></return>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

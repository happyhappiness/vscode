<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1978.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">write_one_shallow<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><specifier pos:line="1" pos:column="30">const<pos:position pos:line="1" pos:column="35"/></specifier> <name><name pos:line="1" pos:column="36">struct<pos:position pos:line="1" pos:column="42"/></name> <name pos:line="1" pos:column="43">commit_graft<pos:position pos:line="1" pos:column="55"/></name></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">graft<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="64">void<pos:position pos:line="1" pos:column="68"/></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">cb_data<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="78"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">FILE<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">fp<pos:position pos:line="3" pos:column="17"/></name> <init pos:line="3" pos:column="18">= <expr><name pos:line="3" pos:column="20">cb_data<pos:position pos:line="3" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><name><name pos:line="4" pos:column="13">graft<pos:position pos:line="4" pos:column="18"/></name><operator pos:line="4" pos:column="18">-&gt;<pos:position pos:line="4" pos:column="23"/></operator><name pos:line="4" pos:column="20">nr_parent<pos:position pos:line="4" pos:column="29"/></name></name> <operator pos:line="4" pos:column="30">==<pos:position pos:line="4" pos:column="32"/></operator> <operator pos:line="4" pos:column="33">-<pos:position pos:line="4" pos:column="34"/></operator><literal type="number" pos:line="4" pos:column="34">1<pos:position pos:line="4" pos:column="35"/></literal></expr>)<pos:position pos:line="4" pos:column="36"/></condition><then pos:line="4" pos:column="36">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="5" pos:column="17">fprintf<pos:position pos:line="5" pos:column="24"/></name><argument_list pos:line="5" pos:column="24">(<argument><expr><name pos:line="5" pos:column="25">fp<pos:position pos:line="5" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="29">"--shallow %s\n"<pos:position pos:line="5" pos:column="45"/></literal></expr></argument>, <argument><expr><call><name pos:line="5" pos:column="47">sha1_to_hex<pos:position pos:line="5" pos:column="58"/></name><argument_list pos:line="5" pos:column="58">(<argument><expr><name><name pos:line="5" pos:column="59">graft<pos:position pos:line="5" pos:column="64"/></name><operator pos:line="5" pos:column="64">-&gt;<pos:position pos:line="5" pos:column="69"/></operator><name pos:line="5" pos:column="66">sha1<pos:position pos:line="5" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="73"/></expr_stmt></block></then></if>
	<return pos:line="6" pos:column="9">return <expr><literal type="number" pos:line="6" pos:column="16">0<pos:position pos:line="6" pos:column="17"/></literal></expr>;<pos:position pos:line="6" pos:column="18"/></return>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

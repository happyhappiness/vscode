<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_261.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">apply_one_fragment<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">apply_state<pos:position pos:line="1" pos:column="49"/></name></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">state<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>,
			      <parameter><decl><type><name><name pos:line="2" pos:column="31">struct<pos:position pos:line="2" pos:column="37"/></name> <name pos:line="2" pos:column="38">image<pos:position pos:line="2" pos:column="43"/></name></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">img<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="50">struct<pos:position pos:line="2" pos:column="56"/></name> <name pos:line="2" pos:column="57">fragment<pos:position pos:line="2" pos:column="65"/></name></name> <modifier pos:line="2" pos:column="66">*<pos:position pos:line="2" pos:column="67"/></modifier></type><name pos:line="2" pos:column="67">frag<pos:position pos:line="2" pos:column="71"/></name></decl></parameter>,
			      <parameter><decl><type><name pos:line="3" pos:column="31">int<pos:position pos:line="3" pos:column="34"/></name></type> <name pos:line="3" pos:column="35">inaccurate_eof<pos:position pos:line="3" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="51">unsigned<pos:position pos:line="3" pos:column="59"/></name></type> <name pos:line="3" pos:column="60">ws_rule<pos:position pos:line="3" pos:column="67"/></name></decl></parameter>,
			      <parameter><decl><type><name pos:line="4" pos:column="31">int<pos:position pos:line="4" pos:column="34"/></name></type> <name pos:line="4" pos:column="35">nth_fragment<pos:position pos:line="4" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="48"/></parameter_list>
<block pos:line="5" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">match_beginning<pos:position pos:line="6" pos:column="28"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="30">match_end<pos:position pos:line="6" pos:column="39"/></name></decl>;<pos:position pos:line="6" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name pos:line="7" pos:column="15">char<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">patch<pos:position pos:line="7" pos:column="26"/></name> <init pos:line="7" pos:column="27">= <expr><name><name pos:line="7" pos:column="29">frag<pos:position pos:line="7" pos:column="33"/></name><operator pos:line="7" pos:column="33">-&gt;<pos:position pos:line="7" pos:column="38"/></operator><name pos:line="7" pos:column="35">patch<pos:position pos:line="7" pos:column="40"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">size<pos:position pos:line="8" pos:column="17"/></name> <init pos:line="8" pos:column="18">= <expr><name><name pos:line="8" pos:column="20">frag<pos:position pos:line="8" pos:column="24"/></name><operator pos:line="8" pos:column="24">-&gt;<pos:position pos:line="8" pos:column="29"/></operator><name pos:line="8" pos:column="26">size<pos:position pos:line="8" pos:column="30"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">char<pos:position pos:line="9" pos:column="13"/></name> <modifier pos:line="9" pos:column="14">*<pos:position pos:line="9" pos:column="15"/></modifier></type><name pos:line="9" pos:column="15">old<pos:position pos:line="9" pos:column="18"/></name></decl>, <modifier pos:line="9" pos:column="20">*<pos:position pos:line="9" pos:column="21"/></modifier><decl><type ref="prev"/><name pos:line="9" pos:column="21">oldlines<pos:position pos:line="9" pos:column="29"/></name></decl>;<pos:position pos:line="9" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="10" pos:column="9">struct<pos:position pos:line="10" pos:column="15"/></name> <name pos:line="10" pos:column="16">strbuf<pos:position pos:line="10" pos:column="22"/></name></name></type> <name pos:line="10" pos:column="23">newlines<pos:position pos:line="10" pos:column="31"/></name></decl>;<pos:position pos:line="10" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">int<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">new_blank_lines_at_end<pos:position pos:line="11" pos:column="35"/></name> <init pos:line="11" pos:column="36">= <expr><literal type="number" pos:line="11" pos:column="38">0<pos:position pos:line="11" pos:column="39"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">int<pos:position pos:line="12" pos:column="12"/></name></type> <name pos:line="12" pos:column="13">found_new_blank_lines_at_end<pos:position pos:line="12" pos:column="41"/></name> <init pos:line="12" pos:column="42">= <expr><literal type="number" pos:line="12" pos:column="44">0<pos:position pos:line="12" pos:column="45"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="13" pos:column="9">int<pos:position pos:line="13" pos:column="12"/></name></type> <name pos:line="13" pos:column="13">hunk_linenr<pos:position pos:line="13" pos:column="24"/></name> <init pos:line="13" pos:column="25">= <expr><name><name pos:line="13" pos:column="27">frag<pos:position pos:line="13" pos:column="31"/></name><operator pos:line="13" pos:column="31">-&gt;<pos:position pos:line="13" pos:column="36"/></operator><name pos:line="13" pos:column="33">linenr<pos:position pos:line="13" pos:column="39"/></name></name></expr></init></decl>;<pos:position pos:line="13" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="14" pos:column="9">unsigned<pos:position pos:line="14" pos:column="17"/></name> <name pos:line="14" pos:column="18">long<pos:position pos:line="14" pos:column="22"/></name></type> <name pos:line="14" pos:column="23">leading<pos:position pos:line="14" pos:column="30"/></name></decl>, <decl><type ref="prev"/><name pos:line="14" pos:column="32">trailing<pos:position pos:line="14" pos:column="40"/></name></decl>;<pos:position pos:line="14" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="15" pos:column="9">int<pos:position pos:line="15" pos:column="12"/></name></type> <name pos:line="15" pos:column="13">pos<pos:position pos:line="15" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="15" pos:column="18">applied_pos<pos:position pos:line="15" pos:column="29"/></name></decl>;<pos:position pos:line="15" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="16" pos:column="9">struct<pos:position pos:line="16" pos:column="15"/></name> <name pos:line="16" pos:column="16">image<pos:position pos:line="16" pos:column="21"/></name></name></type> <name pos:line="16" pos:column="22">preimage<pos:position pos:line="16" pos:column="30"/></name></decl>;<pos:position pos:line="16" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="17" pos:column="9">struct<pos:position pos:line="17" pos:column="15"/></name> <name pos:line="17" pos:column="16">image<pos:position pos:line="17" pos:column="21"/></name></name></type> <name pos:line="17" pos:column="22">postimage<pos:position pos:line="17" pos:column="31"/></name></decl>;<pos:position pos:line="17" pos:column="32"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="19" pos:column="9">memset<pos:position pos:line="19" pos:column="15"/></name><argument_list pos:line="19" pos:column="15">(<argument><expr><operator pos:line="19" pos:column="16">&amp;<pos:position pos:line="19" pos:column="21"/></operator><name pos:line="19" pos:column="17">preimage<pos:position pos:line="19" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="27">0<pos:position pos:line="19" pos:column="28"/></literal></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="30">sizeof<argument_list pos:line="19" pos:column="36">(<argument><expr><name pos:line="19" pos:column="37">preimage<pos:position pos:line="19" pos:column="45"/></name></expr></argument>)<pos:position pos:line="19" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="48"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="20" pos:column="9">memset<pos:position pos:line="20" pos:column="15"/></name><argument_list pos:line="20" pos:column="15">(<argument><expr><operator pos:line="20" pos:column="16">&amp;<pos:position pos:line="20" pos:column="21"/></operator><name pos:line="20" pos:column="17">postimage<pos:position pos:line="20" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="28">0<pos:position pos:line="20" pos:column="29"/></literal></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="31">sizeof<argument_list pos:line="20" pos:column="37">(<argument><expr><name pos:line="20" pos:column="38">postimage<pos:position pos:line="20" pos:column="47"/></name></expr></argument>)<pos:position pos:line="20" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="50"/></expr_stmt>
	<expr_stmt><expr><name pos:line="21" pos:column="9">oldlines<pos:position pos:line="21" pos:column="17"/></name> <operator pos:line="21" pos:column="18">=<pos:position pos:line="21" pos:column="19"/></operator> <call><name pos:line="21" pos:column="20">xmalloc<pos:position pos:line="21" pos:column="27"/></name><argument_list pos:line="21" pos:column="27">(<argument><expr><name pos:line="21" pos:column="28">size<pos:position pos:line="21" pos:column="32"/></name></expr></argument>)<pos:position pos:line="21" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="22" pos:column="9">strbuf_init<pos:position pos:line="22" pos:column="20"/></name><argument_list pos:line="22" pos:column="20">(<argument><expr><operator pos:line="22" pos:column="21">&amp;<pos:position pos:line="22" pos:column="26"/></operator><name pos:line="22" pos:column="22">newlines<pos:position pos:line="22" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="32">size<pos:position pos:line="22" pos:column="36"/></name></expr></argument>)<pos:position pos:line="22" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="38"/></expr_stmt>

	<expr_stmt><expr><name pos:line="24" pos:column="9">old<pos:position pos:line="24" pos:column="12"/></name> <operator pos:line="24" pos:column="13">=<pos:position pos:line="24" pos:column="14"/></operator> <name pos:line="24" pos:column="15">oldlines<pos:position pos:line="24" pos:column="23"/></name></expr>;<pos:position pos:line="24" pos:column="24"/></expr_stmt>
	<while pos:line="25" pos:column="9">while <condition pos:line="25" pos:column="15">(<expr><name pos:line="25" pos:column="16">size<pos:position pos:line="25" pos:column="20"/></name> <operator pos:line="25" pos:column="21">&gt;<pos:position pos:line="25" pos:column="25"/></operator> <literal type="number" pos:line="25" pos:column="23">0<pos:position pos:line="25" pos:column="24"/></literal></expr>)<pos:position pos:line="25" pos:column="25"/></condition> <block pos:line="25" pos:column="26">{
		<decl_stmt><decl><type><name pos:line="26" pos:column="17">char<pos:position pos:line="26" pos:column="21"/></name></type> <name pos:line="26" pos:column="22">first<pos:position pos:line="26" pos:column="27"/></name></decl>;<pos:position pos:line="26" pos:column="28"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="27" pos:column="17">int<pos:position pos:line="27" pos:column="20"/></name></type> <name pos:line="27" pos:column="21">len<pos:position pos:line="27" pos:column="24"/></name> <init pos:line="27" pos:column="25">= <expr><call><name pos:line="27" pos:column="27">linelen<pos:position pos:line="27" pos:column="34"/></name><argument_list pos:line="27" pos:column="34">(<argument><expr><name pos:line="27" pos:column="35">patch<pos:position pos:line="27" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="42">size<pos:position pos:line="27" pos:column="46"/></name></expr></argument>)<pos:position pos:line="27" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="27" pos:column="48"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="28" pos:column="17">int<pos:position pos:line="28" pos:column="20"/></name></type> <name pos:line="28" pos:column="21">plen<pos:position pos:line="28" pos:column="25"/></name></decl>;<pos:position pos:line="28" pos:column="26"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="29" pos:column="17">int<pos:position pos:line="29" pos:column="20"/></name></type> <name pos:line="29" pos:column="21">added_blank_line<pos:position pos:line="29" pos:column="37"/></name> <init pos:line="29" pos:column="38">= <expr><literal type="number" pos:line="29" pos:column="40">0<pos:position pos:line="29" pos:column="41"/></literal></expr></init></decl>;<pos:position pos:line="29" pos:column="42"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="30" pos:column="17">int<pos:position pos:line="30" pos:column="20"/></name></type> <name pos:line="30" pos:column="21">is_blank_context<pos:position pos:line="30" pos:column="37"/></name> <init pos:line="30" pos:column="38">= <expr><literal type="number" pos:line="30" pos:column="40">0<pos:position pos:line="30" pos:column="41"/></literal></expr></init></decl>;<pos:position pos:line="30" pos:column="42"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="31" pos:column="17">size_t<pos:position pos:line="31" pos:column="23"/></name></type> <name pos:line="31" pos:column="24">start<pos:position pos:line="31" pos:column="29"/></name></decl>;<pos:position pos:line="31" pos:column="30"/></decl_stmt>

		<if pos:line="33" pos:column="17">if <condition pos:line="33" pos:column="20">(<expr><operator pos:line="33" pos:column="21">!<pos:position pos:line="33" pos:column="22"/></operator><name pos:line="33" pos:column="22">len<pos:position pos:line="33" pos:column="25"/></name></expr>)<pos:position pos:line="33" pos:column="26"/></condition><then pos:line="33" pos:column="26">
			<block type="pseudo"><break pos:line="34" pos:column="25">break;<pos:position pos:line="34" pos:column="31"/></break></block></then></if>

		<comment type="block" pos:line="36" pos:column="17">/*
		 * "plen" is how much of the line we should use for
		 * the actual patch data. Normally we just remove the
		 * first character on the line, but if the line is
		 * followed by "\ No newline", then we also remove the
		 * last one (which is the newline, of course).
		 */</comment>
		<expr_stmt><expr><name pos:line="43" pos:column="17">plen<pos:position pos:line="43" pos:column="21"/></name> <operator pos:line="43" pos:column="22">=<pos:position pos:line="43" pos:column="23"/></operator> <name pos:line="43" pos:column="24">len<pos:position pos:line="43" pos:column="27"/></name> <operator pos:line="43" pos:column="28">-<pos:position pos:line="43" pos:column="29"/></operator> <literal type="number" pos:line="43" pos:column="30">1<pos:position pos:line="43" pos:column="31"/></literal></expr>;<pos:position pos:line="43" pos:column="32"/></expr_stmt>
		<if pos:line="44" pos:column="17">if <condition pos:line="44" pos:column="20">(<expr><name pos:line="44" pos:column="21">len<pos:position pos:line="44" pos:column="24"/></name> <operator pos:line="44" pos:column="25">&lt;<pos:position pos:line="44" pos:column="29"/></operator> <name pos:line="44" pos:column="27">size<pos:position pos:line="44" pos:column="31"/></name> <operator pos:line="44" pos:column="32">&amp;&amp;<pos:position pos:line="44" pos:column="42"/></operator> <name><name pos:line="44" pos:column="35">patch<pos:position pos:line="44" pos:column="40"/></name><index pos:line="44" pos:column="40">[<expr><name pos:line="44" pos:column="41">len<pos:position pos:line="44" pos:column="44"/></name></expr>]<pos:position pos:line="44" pos:column="45"/></index></name> <operator pos:line="44" pos:column="46">==<pos:position pos:line="44" pos:column="48"/></operator> <literal type="char" pos:line="44" pos:column="49">'\\'<pos:position pos:line="44" pos:column="53"/></literal></expr>)<pos:position pos:line="44" pos:column="54"/></condition><then pos:line="44" pos:column="54">
			<block type="pseudo"><expr_stmt><expr><name pos:line="45" pos:column="25">plen<pos:position pos:line="45" pos:column="29"/></name><operator pos:line="45" pos:column="29">--<pos:position pos:line="45" pos:column="31"/></operator></expr>;<pos:position pos:line="45" pos:column="32"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="46" pos:column="17">first<pos:position pos:line="46" pos:column="22"/></name> <operator pos:line="46" pos:column="23">=<pos:position pos:line="46" pos:column="24"/></operator> <operator pos:line="46" pos:column="25">*<pos:position pos:line="46" pos:column="26"/></operator><name pos:line="46" pos:column="26">patch<pos:position pos:line="46" pos:column="31"/></name></expr>;<pos:position pos:line="46" pos:column="32"/></expr_stmt>
		<if pos:line="47" pos:column="17">if <condition pos:line="47" pos:column="20">(<expr><name><name pos:line="47" pos:column="21">state<pos:position pos:line="47" pos:column="26"/></name><operator pos:line="47" pos:column="26">-&gt;<pos:position pos:line="47" pos:column="31"/></operator><name pos:line="47" pos:column="28">apply_in_reverse<pos:position pos:line="47" pos:column="44"/></name></name></expr>)<pos:position pos:line="47" pos:column="45"/></condition><then pos:line="47" pos:column="45"> <block pos:line="47" pos:column="46">{
			<if pos:line="48" pos:column="25">if <condition pos:line="48" pos:column="28">(<expr><name pos:line="48" pos:column="29">first<pos:position pos:line="48" pos:column="34"/></name> <operator pos:line="48" pos:column="35">==<pos:position pos:line="48" pos:column="37"/></operator> <literal type="char" pos:line="48" pos:column="38">'-'<pos:position pos:line="48" pos:column="41"/></literal></expr>)<pos:position pos:line="48" pos:column="42"/></condition><then pos:line="48" pos:column="42">
				<block type="pseudo"><expr_stmt><expr><name pos:line="49" pos:column="33">first<pos:position pos:line="49" pos:column="38"/></name> <operator pos:line="49" pos:column="39">=<pos:position pos:line="49" pos:column="40"/></operator> <literal type="char" pos:line="49" pos:column="41">'+'<pos:position pos:line="49" pos:column="44"/></literal></expr>;<pos:position pos:line="49" pos:column="45"/></expr_stmt></block></then>
			<elseif pos:line="50" pos:column="25">else <if pos:line="50" pos:column="30">if <condition pos:line="50" pos:column="33">(<expr><name pos:line="50" pos:column="34">first<pos:position pos:line="50" pos:column="39"/></name> <operator pos:line="50" pos:column="40">==<pos:position pos:line="50" pos:column="42"/></operator> <literal type="char" pos:line="50" pos:column="43">'+'<pos:position pos:line="50" pos:column="46"/></literal></expr>)<pos:position pos:line="50" pos:column="47"/></condition><then pos:line="50" pos:column="47">
				<block type="pseudo"><expr_stmt><expr><name pos:line="51" pos:column="33">first<pos:position pos:line="51" pos:column="38"/></name> <operator pos:line="51" pos:column="39">=<pos:position pos:line="51" pos:column="40"/></operator> <literal type="char" pos:line="51" pos:column="41">'-'<pos:position pos:line="51" pos:column="44"/></literal></expr>;<pos:position pos:line="51" pos:column="45"/></expr_stmt></block></then></if></elseif></if>
		}<pos:position pos:line="52" pos:column="18"/></block></then></if>

		<switch pos:line="54" pos:column="17">switch <condition pos:line="54" pos:column="24">(<expr><name pos:line="54" pos:column="25">first<pos:position pos:line="54" pos:column="30"/></name></expr>)<pos:position pos:line="54" pos:column="31"/></condition> <block pos:line="54" pos:column="32">{
		<case pos:line="55" pos:column="17">case <expr><literal type="char" pos:line="55" pos:column="22">'\n'<pos:position pos:line="55" pos:column="26"/></literal></expr>:<pos:position pos:line="55" pos:column="27"/></case>
			<comment type="block" pos:line="56" pos:column="25">/* Newer GNU diff, empty context line */</comment>
			<if pos:line="57" pos:column="25">if <condition pos:line="57" pos:column="28">(<expr><name pos:line="57" pos:column="29">plen<pos:position pos:line="57" pos:column="33"/></name> <operator pos:line="57" pos:column="34">&lt;<pos:position pos:line="57" pos:column="38"/></operator> <literal type="number" pos:line="57" pos:column="36">0<pos:position pos:line="57" pos:column="37"/></literal></expr>)<pos:position pos:line="57" pos:column="38"/></condition><then pos:line="57" pos:column="38">
				<comment type="block" pos:line="58" pos:column="33">/* ... followed by '\No newline'; nothing */</comment>
				<block type="pseudo"><break pos:line="59" pos:column="33">break;<pos:position pos:line="59" pos:column="39"/></break></block></then></if>
			<expr_stmt><expr><operator pos:line="60" pos:column="25">*<pos:position pos:line="60" pos:column="26"/></operator><name pos:line="60" pos:column="26">old<pos:position pos:line="60" pos:column="29"/></name><operator pos:line="60" pos:column="29">++<pos:position pos:line="60" pos:column="31"/></operator> <operator pos:line="60" pos:column="32">=<pos:position pos:line="60" pos:column="33"/></operator> <literal type="char" pos:line="60" pos:column="34">'\n'<pos:position pos:line="60" pos:column="38"/></literal></expr>;<pos:position pos:line="60" pos:column="39"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="61" pos:column="25">strbuf_addch<pos:position pos:line="61" pos:column="37"/></name><argument_list pos:line="61" pos:column="37">(<argument><expr><operator pos:line="61" pos:column="38">&amp;<pos:position pos:line="61" pos:column="43"/></operator><name pos:line="61" pos:column="39">newlines<pos:position pos:line="61" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="61" pos:column="49">'\n'<pos:position pos:line="61" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="55"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="62" pos:column="25">add_line_info<pos:position pos:line="62" pos:column="38"/></name><argument_list pos:line="62" pos:column="38">(<argument><expr><operator pos:line="62" pos:column="39">&amp;<pos:position pos:line="62" pos:column="44"/></operator><name pos:line="62" pos:column="40">preimage<pos:position pos:line="62" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="50">"\n"<pos:position pos:line="62" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="62" pos:column="56">1<pos:position pos:line="62" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="62" pos:column="59">LINE_COMMON<pos:position pos:line="62" pos:column="70"/></name></expr></argument>)<pos:position pos:line="62" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="72"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="63" pos:column="25">add_line_info<pos:position pos:line="63" pos:column="38"/></name><argument_list pos:line="63" pos:column="38">(<argument><expr><operator pos:line="63" pos:column="39">&amp;<pos:position pos:line="63" pos:column="44"/></operator><name pos:line="63" pos:column="40">postimage<pos:position pos:line="63" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="51">"\n"<pos:position pos:line="63" pos:column="55"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="63" pos:column="57">1<pos:position pos:line="63" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="63" pos:column="60">LINE_COMMON<pos:position pos:line="63" pos:column="71"/></name></expr></argument>)<pos:position pos:line="63" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="73"/></expr_stmt>
			<expr_stmt><expr><name pos:line="64" pos:column="25">is_blank_context<pos:position pos:line="64" pos:column="41"/></name> <operator pos:line="64" pos:column="42">=<pos:position pos:line="64" pos:column="43"/></operator> <literal type="number" pos:line="64" pos:column="44">1<pos:position pos:line="64" pos:column="45"/></literal></expr>;<pos:position pos:line="64" pos:column="46"/></expr_stmt>
			<break pos:line="65" pos:column="25">break;<pos:position pos:line="65" pos:column="31"/></break>
		<case pos:line="66" pos:column="17">case <expr><literal type="char" pos:line="66" pos:column="22">' '<pos:position pos:line="66" pos:column="25"/></literal></expr>:<pos:position pos:line="66" pos:column="26"/></case>
			<if pos:line="67" pos:column="25">if <condition pos:line="67" pos:column="28">(<expr><name pos:line="67" pos:column="29">plen<pos:position pos:line="67" pos:column="33"/></name> <operator pos:line="67" pos:column="34">&amp;&amp;<pos:position pos:line="67" pos:column="44"/></operator> <operator pos:line="67" pos:column="37">(<pos:position pos:line="67" pos:column="38"/></operator><name pos:line="67" pos:column="38">ws_rule<pos:position pos:line="67" pos:column="45"/></name> <operator pos:line="67" pos:column="46">&amp;<pos:position pos:line="67" pos:column="51"/></operator> <name pos:line="67" pos:column="48">WS_BLANK_AT_EOF<pos:position pos:line="67" pos:column="63"/></name><operator pos:line="67" pos:column="63">)<pos:position pos:line="67" pos:column="64"/></operator> <operator pos:line="67" pos:column="65">&amp;&amp;<pos:position pos:line="67" pos:column="75"/></operator>
			    <call><name pos:line="68" pos:column="29">ws_blank_line<pos:position pos:line="68" pos:column="42"/></name><argument_list pos:line="68" pos:column="42">(<argument><expr><name pos:line="68" pos:column="43">patch<pos:position pos:line="68" pos:column="48"/></name> <operator pos:line="68" pos:column="49">+<pos:position pos:line="68" pos:column="50"/></operator> <literal type="number" pos:line="68" pos:column="51">1<pos:position pos:line="68" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="68" pos:column="54">plen<pos:position pos:line="68" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="60">ws_rule<pos:position pos:line="68" pos:column="67"/></name></expr></argument>)<pos:position pos:line="68" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="68" pos:column="69"/></condition><then pos:line="68" pos:column="69">
				<block type="pseudo"><expr_stmt><expr><name pos:line="69" pos:column="33">is_blank_context<pos:position pos:line="69" pos:column="49"/></name> <operator pos:line="69" pos:column="50">=<pos:position pos:line="69" pos:column="51"/></operator> <literal type="number" pos:line="69" pos:column="52">1<pos:position pos:line="69" pos:column="53"/></literal></expr>;<pos:position pos:line="69" pos:column="54"/></expr_stmt></block></then></if>
		<case pos:line="70" pos:column="17">case <expr><literal type="char" pos:line="70" pos:column="22">'-'<pos:position pos:line="70" pos:column="25"/></literal></expr>:<pos:position pos:line="70" pos:column="26"/></case>
			<expr_stmt><expr><call><name pos:line="71" pos:column="25">memcpy<pos:position pos:line="71" pos:column="31"/></name><argument_list pos:line="71" pos:column="31">(<argument><expr><name pos:line="71" pos:column="32">old<pos:position pos:line="71" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="37">patch<pos:position pos:line="71" pos:column="42"/></name> <operator pos:line="71" pos:column="43">+<pos:position pos:line="71" pos:column="44"/></operator> <literal type="number" pos:line="71" pos:column="45">1<pos:position pos:line="71" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="71" pos:column="48">plen<pos:position pos:line="71" pos:column="52"/></name></expr></argument>)<pos:position pos:line="71" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="54"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="72" pos:column="25">add_line_info<pos:position pos:line="72" pos:column="38"/></name><argument_list pos:line="72" pos:column="38">(<argument><expr><operator pos:line="72" pos:column="39">&amp;<pos:position pos:line="72" pos:column="44"/></operator><name pos:line="72" pos:column="40">preimage<pos:position pos:line="72" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="50">old<pos:position pos:line="72" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="55">plen<pos:position pos:line="72" pos:column="59"/></name></expr></argument>,
				      <argument><expr><operator pos:line="73" pos:column="39">(<pos:position pos:line="73" pos:column="40"/></operator><ternary><condition><expr><name pos:line="73" pos:column="40">first<pos:position pos:line="73" pos:column="45"/></name> <operator pos:line="73" pos:column="46">==<pos:position pos:line="73" pos:column="48"/></operator> <literal type="char" pos:line="73" pos:column="49">' '<pos:position pos:line="73" pos:column="52"/></literal></expr> ?<pos:position pos:line="73" pos:column="54"/></condition><then pos:line="73" pos:column="54"> <expr><name pos:line="73" pos:column="55">LINE_COMMON<pos:position pos:line="73" pos:column="66"/></name></expr> <pos:position pos:line="73" pos:column="67"/></then><else pos:line="73" pos:column="67">: <expr><literal type="number" pos:line="73" pos:column="69">0<pos:position pos:line="73" pos:column="70"/></literal></expr></else></ternary><operator pos:line="73" pos:column="70">)<pos:position pos:line="73" pos:column="71"/></operator></expr></argument>)<pos:position pos:line="73" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="73"/></expr_stmt>
			<expr_stmt><expr><name pos:line="74" pos:column="25">old<pos:position pos:line="74" pos:column="28"/></name> <operator pos:line="74" pos:column="29">+=<pos:position pos:line="74" pos:column="31"/></operator> <name pos:line="74" pos:column="32">plen<pos:position pos:line="74" pos:column="36"/></name></expr>;<pos:position pos:line="74" pos:column="37"/></expr_stmt>
			<if pos:line="75" pos:column="25">if <condition pos:line="75" pos:column="28">(<expr><name pos:line="75" pos:column="29">first<pos:position pos:line="75" pos:column="34"/></name> <operator pos:line="75" pos:column="35">==<pos:position pos:line="75" pos:column="37"/></operator> <literal type="char" pos:line="75" pos:column="38">'-'<pos:position pos:line="75" pos:column="41"/></literal></expr>)<pos:position pos:line="75" pos:column="42"/></condition><then pos:line="75" pos:column="42">
				<block type="pseudo"><break pos:line="76" pos:column="33">break;<pos:position pos:line="76" pos:column="39"/></break></block></then></if>
		<comment type="block" pos:line="77" pos:column="17">/* Fall-through for ' ' */</comment>
		<case pos:line="78" pos:column="17">case <expr><literal type="char" pos:line="78" pos:column="22">'+'<pos:position pos:line="78" pos:column="25"/></literal></expr>:<pos:position pos:line="78" pos:column="26"/></case>
			<comment type="block" pos:line="79" pos:column="25">/* --no-add does not add new lines */</comment>
			<if pos:line="80" pos:column="25">if <condition pos:line="80" pos:column="28">(<expr><name pos:line="80" pos:column="29">first<pos:position pos:line="80" pos:column="34"/></name> <operator pos:line="80" pos:column="35">==<pos:position pos:line="80" pos:column="37"/></operator> <literal type="char" pos:line="80" pos:column="38">'+'<pos:position pos:line="80" pos:column="41"/></literal> <operator pos:line="80" pos:column="42">&amp;&amp;<pos:position pos:line="80" pos:column="52"/></operator> <name><name pos:line="80" pos:column="45">state<pos:position pos:line="80" pos:column="50"/></name><operator pos:line="80" pos:column="50">-&gt;<pos:position pos:line="80" pos:column="55"/></operator><name pos:line="80" pos:column="52">no_add<pos:position pos:line="80" pos:column="58"/></name></name></expr>)<pos:position pos:line="80" pos:column="59"/></condition><then pos:line="80" pos:column="59">
				<block type="pseudo"><break pos:line="81" pos:column="33">break;<pos:position pos:line="81" pos:column="39"/></break></block></then></if>

			<expr_stmt><expr><name pos:line="83" pos:column="25">start<pos:position pos:line="83" pos:column="30"/></name> <operator pos:line="83" pos:column="31">=<pos:position pos:line="83" pos:column="32"/></operator> <name><name pos:line="83" pos:column="33">newlines<pos:position pos:line="83" pos:column="41"/></name><operator pos:line="83" pos:column="41">.<pos:position pos:line="83" pos:column="42"/></operator><name pos:line="83" pos:column="42">len<pos:position pos:line="83" pos:column="45"/></name></name></expr>;<pos:position pos:line="83" pos:column="46"/></expr_stmt>
			<if pos:line="84" pos:column="25">if <condition pos:line="84" pos:column="28">(<expr><name pos:line="84" pos:column="29">first<pos:position pos:line="84" pos:column="34"/></name> <operator pos:line="84" pos:column="35">!=<pos:position pos:line="84" pos:column="37"/></operator> <literal type="char" pos:line="84" pos:column="38">'+'<pos:position pos:line="84" pos:column="41"/></literal> <operator pos:line="84" pos:column="42">||<pos:position pos:line="84" pos:column="44"/></operator>
			    <operator pos:line="85" pos:column="29">!<pos:position pos:line="85" pos:column="30"/></operator><name><name pos:line="85" pos:column="30">state<pos:position pos:line="85" pos:column="35"/></name><operator pos:line="85" pos:column="35">-&gt;<pos:position pos:line="85" pos:column="40"/></operator><name pos:line="85" pos:column="37">whitespace_error<pos:position pos:line="85" pos:column="53"/></name></name> <operator pos:line="85" pos:column="54">||<pos:position pos:line="85" pos:column="56"/></operator>
			    <name><name pos:line="86" pos:column="29">state<pos:position pos:line="86" pos:column="34"/></name><operator pos:line="86" pos:column="34">-&gt;<pos:position pos:line="86" pos:column="39"/></operator><name pos:line="86" pos:column="36">ws_error_action<pos:position pos:line="86" pos:column="51"/></name></name> <operator pos:line="86" pos:column="52">!=<pos:position pos:line="86" pos:column="54"/></operator> <name pos:line="86" pos:column="55">correct_ws_error<pos:position pos:line="86" pos:column="71"/></name></expr>)<pos:position pos:line="86" pos:column="72"/></condition><then pos:line="86" pos:column="72"> <block pos:line="86" pos:column="73">{
				<expr_stmt><expr><call><name pos:line="87" pos:column="33">strbuf_add<pos:position pos:line="87" pos:column="43"/></name><argument_list pos:line="87" pos:column="43">(<argument><expr><operator pos:line="87" pos:column="44">&amp;<pos:position pos:line="87" pos:column="49"/></operator><name pos:line="87" pos:column="45">newlines<pos:position pos:line="87" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="55">patch<pos:position pos:line="87" pos:column="60"/></name> <operator pos:line="87" pos:column="61">+<pos:position pos:line="87" pos:column="62"/></operator> <literal type="number" pos:line="87" pos:column="63">1<pos:position pos:line="87" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="87" pos:column="66">plen<pos:position pos:line="87" pos:column="70"/></name></expr></argument>)<pos:position pos:line="87" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="72"/></expr_stmt>
			}<pos:position pos:line="88" pos:column="26"/></block></then>
			<else pos:line="89" pos:column="25">else <block pos:line="89" pos:column="30">{
				<expr_stmt><expr><call><name pos:line="90" pos:column="33">ws_fix_copy<pos:position pos:line="90" pos:column="44"/></name><argument_list pos:line="90" pos:column="44">(<argument><expr><operator pos:line="90" pos:column="45">&amp;<pos:position pos:line="90" pos:column="50"/></operator><name pos:line="90" pos:column="46">newlines<pos:position pos:line="90" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="56">patch<pos:position pos:line="90" pos:column="61"/></name> <operator pos:line="90" pos:column="62">+<pos:position pos:line="90" pos:column="63"/></operator> <literal type="number" pos:line="90" pos:column="64">1<pos:position pos:line="90" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="90" pos:column="67">plen<pos:position pos:line="90" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="73">ws_rule<pos:position pos:line="90" pos:column="80"/></name></expr></argument>, <argument><expr><operator pos:line="90" pos:column="82">&amp;<pos:position pos:line="90" pos:column="87"/></operator><name><name pos:line="90" pos:column="83">state<pos:position pos:line="90" pos:column="88"/></name><operator pos:line="90" pos:column="88">-&gt;<pos:position pos:line="90" pos:column="93"/></operator><name pos:line="90" pos:column="90">applied_after_fixing_ws<pos:position pos:line="90" pos:column="113"/></name></name></expr></argument>)<pos:position pos:line="90" pos:column="114"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="115"/></expr_stmt>
			}<pos:position pos:line="91" pos:column="26"/></block></else></if>
			<expr_stmt><expr><call><name pos:line="92" pos:column="25">add_line_info<pos:position pos:line="92" pos:column="38"/></name><argument_list pos:line="92" pos:column="38">(<argument><expr><operator pos:line="92" pos:column="39">&amp;<pos:position pos:line="92" pos:column="44"/></operator><name pos:line="92" pos:column="40">postimage<pos:position pos:line="92" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="92" pos:column="51">newlines<pos:position pos:line="92" pos:column="59"/></name><operator pos:line="92" pos:column="59">.<pos:position pos:line="92" pos:column="60"/></operator><name pos:line="92" pos:column="60">buf<pos:position pos:line="92" pos:column="63"/></name></name> <operator pos:line="92" pos:column="64">+<pos:position pos:line="92" pos:column="65"/></operator> <name pos:line="92" pos:column="66">start<pos:position pos:line="92" pos:column="71"/></name></expr></argument>, <argument><expr><name><name pos:line="92" pos:column="73">newlines<pos:position pos:line="92" pos:column="81"/></name><operator pos:line="92" pos:column="81">.<pos:position pos:line="92" pos:column="82"/></operator><name pos:line="92" pos:column="82">len<pos:position pos:line="92" pos:column="85"/></name></name> <operator pos:line="92" pos:column="86">-<pos:position pos:line="92" pos:column="87"/></operator> <name pos:line="92" pos:column="88">start<pos:position pos:line="92" pos:column="93"/></name></expr></argument>,
				      <argument><expr><operator pos:line="93" pos:column="39">(<pos:position pos:line="93" pos:column="40"/></operator><ternary><condition><expr><name pos:line="93" pos:column="40">first<pos:position pos:line="93" pos:column="45"/></name> <operator pos:line="93" pos:column="46">==<pos:position pos:line="93" pos:column="48"/></operator> <literal type="char" pos:line="93" pos:column="49">'+'<pos:position pos:line="93" pos:column="52"/></literal></expr> ?<pos:position pos:line="93" pos:column="54"/></condition><then pos:line="93" pos:column="54"> <expr><literal type="number" pos:line="93" pos:column="55">0<pos:position pos:line="93" pos:column="56"/></literal></expr> <pos:position pos:line="93" pos:column="57"/></then><else pos:line="93" pos:column="57">: <expr><name pos:line="93" pos:column="59">LINE_COMMON<pos:position pos:line="93" pos:column="70"/></name></expr></else></ternary><operator pos:line="93" pos:column="70">)<pos:position pos:line="93" pos:column="71"/></operator></expr></argument>)<pos:position pos:line="93" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="73"/></expr_stmt>
			<if pos:line="94" pos:column="25">if <condition pos:line="94" pos:column="28">(<expr><name pos:line="94" pos:column="29">first<pos:position pos:line="94" pos:column="34"/></name> <operator pos:line="94" pos:column="35">==<pos:position pos:line="94" pos:column="37"/></operator> <literal type="char" pos:line="94" pos:column="38">'+'<pos:position pos:line="94" pos:column="41"/></literal> <operator pos:line="94" pos:column="42">&amp;&amp;<pos:position pos:line="94" pos:column="52"/></operator>
			    <operator pos:line="95" pos:column="29">(<pos:position pos:line="95" pos:column="30"/></operator><name pos:line="95" pos:column="30">ws_rule<pos:position pos:line="95" pos:column="37"/></name> <operator pos:line="95" pos:column="38">&amp;<pos:position pos:line="95" pos:column="43"/></operator> <name pos:line="95" pos:column="40">WS_BLANK_AT_EOF<pos:position pos:line="95" pos:column="55"/></name><operator pos:line="95" pos:column="55">)<pos:position pos:line="95" pos:column="56"/></operator> <operator pos:line="95" pos:column="57">&amp;&amp;<pos:position pos:line="95" pos:column="67"/></operator>
			    <call><name pos:line="96" pos:column="29">ws_blank_line<pos:position pos:line="96" pos:column="42"/></name><argument_list pos:line="96" pos:column="42">(<argument><expr><name pos:line="96" pos:column="43">patch<pos:position pos:line="96" pos:column="48"/></name> <operator pos:line="96" pos:column="49">+<pos:position pos:line="96" pos:column="50"/></operator> <literal type="number" pos:line="96" pos:column="51">1<pos:position pos:line="96" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="96" pos:column="54">plen<pos:position pos:line="96" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="60">ws_rule<pos:position pos:line="96" pos:column="67"/></name></expr></argument>)<pos:position pos:line="96" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="96" pos:column="69"/></condition><then pos:line="96" pos:column="69">
				<block type="pseudo"><expr_stmt><expr><name pos:line="97" pos:column="33">added_blank_line<pos:position pos:line="97" pos:column="49"/></name> <operator pos:line="97" pos:column="50">=<pos:position pos:line="97" pos:column="51"/></operator> <literal type="number" pos:line="97" pos:column="52">1<pos:position pos:line="97" pos:column="53"/></literal></expr>;<pos:position pos:line="97" pos:column="54"/></expr_stmt></block></then></if>
			<break pos:line="98" pos:column="25">break;<pos:position pos:line="98" pos:column="31"/></break>
		<case pos:line="99" pos:column="17">case <expr><literal type="char" pos:line="99" pos:column="22">'@'<pos:position pos:line="99" pos:column="25"/></literal></expr>:<pos:position pos:line="99" pos:column="26"/></case> <case pos:line="99" pos:column="27">case <expr><literal type="char" pos:line="99" pos:column="32">'\\'<pos:position pos:line="99" pos:column="36"/></literal></expr>:<pos:position pos:line="99" pos:column="37"/></case>
			<comment type="block" pos:line="100" pos:column="25">/* Ignore it, we already handled it */</comment>
			<break pos:line="101" pos:column="25">break;<pos:position pos:line="101" pos:column="31"/></break>
		<default pos:line="102" pos:column="17">default:<pos:position pos:line="102" pos:column="25"/></default>
			<if pos:line="103" pos:column="25">if <condition pos:line="103" pos:column="28">(<expr><name><name pos:line="103" pos:column="29">state<pos:position pos:line="103" pos:column="34"/></name><operator pos:line="103" pos:column="34">-&gt;<pos:position pos:line="103" pos:column="39"/></operator><name pos:line="103" pos:column="36">apply_verbosely<pos:position pos:line="103" pos:column="51"/></name></name></expr>)<pos:position pos:line="103" pos:column="52"/></condition><then pos:line="103" pos:column="52">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="104" pos:column="33">error<pos:position pos:line="104" pos:column="38"/></name><argument_list pos:line="104" pos:column="38">(<argument><expr><call><name pos:line="104" pos:column="39">_<pos:position pos:line="104" pos:column="40"/></name><argument_list pos:line="104" pos:column="40">(<argument><expr><literal type="string" pos:line="104" pos:column="41">"invalid start of line: '%c'"<pos:position pos:line="104" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="104" pos:column="71"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="104" pos:column="73">first<pos:position pos:line="104" pos:column="78"/></name></expr></argument>)<pos:position pos:line="104" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="80"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name pos:line="105" pos:column="25">applied_pos<pos:position pos:line="105" pos:column="36"/></name> <operator pos:line="105" pos:column="37">=<pos:position pos:line="105" pos:column="38"/></operator> <operator pos:line="105" pos:column="39">-<pos:position pos:line="105" pos:column="40"/></operator><literal type="number" pos:line="105" pos:column="40">1<pos:position pos:line="105" pos:column="41"/></literal></expr>;<pos:position pos:line="105" pos:column="42"/></expr_stmt>
			<goto pos:line="106" pos:column="25">goto <name pos:line="106" pos:column="30">out<pos:position pos:line="106" pos:column="33"/></name>;<pos:position pos:line="106" pos:column="34"/></goto>
		}<pos:position pos:line="107" pos:column="18"/></block></switch>
		<if pos:line="108" pos:column="17">if <condition pos:line="108" pos:column="20">(<expr><name pos:line="108" pos:column="21">added_blank_line<pos:position pos:line="108" pos:column="37"/></name></expr>)<pos:position pos:line="108" pos:column="38"/></condition><then pos:line="108" pos:column="38"> <block pos:line="108" pos:column="39">{
			<if pos:line="109" pos:column="25">if <condition pos:line="109" pos:column="28">(<expr><operator pos:line="109" pos:column="29">!<pos:position pos:line="109" pos:column="30"/></operator><name pos:line="109" pos:column="30">new_blank_lines_at_end<pos:position pos:line="109" pos:column="52"/></name></expr>)<pos:position pos:line="109" pos:column="53"/></condition><then pos:line="109" pos:column="53">
				<block type="pseudo"><expr_stmt><expr><name pos:line="110" pos:column="33">found_new_blank_lines_at_end<pos:position pos:line="110" pos:column="61"/></name> <operator pos:line="110" pos:column="62">=<pos:position pos:line="110" pos:column="63"/></operator> <name pos:line="110" pos:column="64">hunk_linenr<pos:position pos:line="110" pos:column="75"/></name></expr>;<pos:position pos:line="110" pos:column="76"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name pos:line="111" pos:column="25">new_blank_lines_at_end<pos:position pos:line="111" pos:column="47"/></name><operator pos:line="111" pos:column="47">++<pos:position pos:line="111" pos:column="49"/></operator></expr>;<pos:position pos:line="111" pos:column="50"/></expr_stmt>
		}<pos:position pos:line="112" pos:column="18"/></block></then>
		<elseif pos:line="113" pos:column="17">else <if pos:line="113" pos:column="22">if <condition pos:line="113" pos:column="25">(<expr><name pos:line="113" pos:column="26">is_blank_context<pos:position pos:line="113" pos:column="42"/></name></expr>)<pos:position pos:line="113" pos:column="43"/></condition><then pos:line="113" pos:column="43">
			<block type="pseudo"><empty_stmt pos:line="114" pos:column="25">;<pos:position pos:line="114" pos:column="26"/></empty_stmt></block></then></if></elseif>
		<else pos:line="115" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="116" pos:column="25">new_blank_lines_at_end<pos:position pos:line="116" pos:column="47"/></name> <operator pos:line="116" pos:column="48">=<pos:position pos:line="116" pos:column="49"/></operator> <literal type="number" pos:line="116" pos:column="50">0<pos:position pos:line="116" pos:column="51"/></literal></expr>;<pos:position pos:line="116" pos:column="52"/></expr_stmt></block></else></if>
		<expr_stmt><expr><name pos:line="117" pos:column="17">patch<pos:position pos:line="117" pos:column="22"/></name> <operator pos:line="117" pos:column="23">+=<pos:position pos:line="117" pos:column="25"/></operator> <name pos:line="117" pos:column="26">len<pos:position pos:line="117" pos:column="29"/></name></expr>;<pos:position pos:line="117" pos:column="30"/></expr_stmt>
		<expr_stmt><expr><name pos:line="118" pos:column="17">size<pos:position pos:line="118" pos:column="21"/></name> <operator pos:line="118" pos:column="22">-=<pos:position pos:line="118" pos:column="24"/></operator> <name pos:line="118" pos:column="25">len<pos:position pos:line="118" pos:column="28"/></name></expr>;<pos:position pos:line="118" pos:column="29"/></expr_stmt>
		<expr_stmt><expr><name pos:line="119" pos:column="17">hunk_linenr<pos:position pos:line="119" pos:column="28"/></name><operator pos:line="119" pos:column="28">++<pos:position pos:line="119" pos:column="30"/></operator></expr>;<pos:position pos:line="119" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="120" pos:column="10"/></block></while>
	<if pos:line="121" pos:column="9">if <condition pos:line="121" pos:column="12">(<expr><name pos:line="121" pos:column="13">inaccurate_eof<pos:position pos:line="121" pos:column="27"/></name> <operator pos:line="121" pos:column="28">&amp;&amp;<pos:position pos:line="121" pos:column="38"/></operator>
	    <name pos:line="122" pos:column="13">old<pos:position pos:line="122" pos:column="16"/></name> <operator pos:line="122" pos:column="17">&gt;<pos:position pos:line="122" pos:column="21"/></operator> <name pos:line="122" pos:column="19">oldlines<pos:position pos:line="122" pos:column="27"/></name> <operator pos:line="122" pos:column="28">&amp;&amp;<pos:position pos:line="122" pos:column="38"/></operator> <name><name pos:line="122" pos:column="31">old<pos:position pos:line="122" pos:column="34"/></name><index pos:line="122" pos:column="34">[<expr><operator pos:line="122" pos:column="35">-<pos:position pos:line="122" pos:column="36"/></operator><literal type="number" pos:line="122" pos:column="36">1<pos:position pos:line="122" pos:column="37"/></literal></expr>]<pos:position pos:line="122" pos:column="38"/></index></name> <operator pos:line="122" pos:column="39">==<pos:position pos:line="122" pos:column="41"/></operator> <literal type="char" pos:line="122" pos:column="42">'\n'<pos:position pos:line="122" pos:column="46"/></literal> <operator pos:line="122" pos:column="47">&amp;&amp;<pos:position pos:line="122" pos:column="57"/></operator>
	    <name><name pos:line="123" pos:column="13">newlines<pos:position pos:line="123" pos:column="21"/></name><operator pos:line="123" pos:column="21">.<pos:position pos:line="123" pos:column="22"/></operator><name pos:line="123" pos:column="22">len<pos:position pos:line="123" pos:column="25"/></name></name> <operator pos:line="123" pos:column="26">&gt;<pos:position pos:line="123" pos:column="30"/></operator> <literal type="number" pos:line="123" pos:column="28">0<pos:position pos:line="123" pos:column="29"/></literal> <operator pos:line="123" pos:column="30">&amp;&amp;<pos:position pos:line="123" pos:column="40"/></operator> <name><name pos:line="123" pos:column="33">newlines<pos:position pos:line="123" pos:column="41"/></name><operator pos:line="123" pos:column="41">.<pos:position pos:line="123" pos:column="42"/></operator><name pos:line="123" pos:column="42">buf<pos:position pos:line="123" pos:column="45"/></name><index pos:line="123" pos:column="45">[<expr><name><name pos:line="123" pos:column="46">newlines<pos:position pos:line="123" pos:column="54"/></name><operator pos:line="123" pos:column="54">.<pos:position pos:line="123" pos:column="55"/></operator><name pos:line="123" pos:column="55">len<pos:position pos:line="123" pos:column="58"/></name></name> <operator pos:line="123" pos:column="59">-<pos:position pos:line="123" pos:column="60"/></operator> <literal type="number" pos:line="123" pos:column="61">1<pos:position pos:line="123" pos:column="62"/></literal></expr>]<pos:position pos:line="123" pos:column="63"/></index></name> <operator pos:line="123" pos:column="64">==<pos:position pos:line="123" pos:column="66"/></operator> <literal type="char" pos:line="123" pos:column="67">'\n'<pos:position pos:line="123" pos:column="71"/></literal></expr>)<pos:position pos:line="123" pos:column="72"/></condition><then pos:line="123" pos:column="72"> <block pos:line="123" pos:column="73">{
		<expr_stmt><expr><name pos:line="124" pos:column="17">old<pos:position pos:line="124" pos:column="20"/></name><operator pos:line="124" pos:column="20">--<pos:position pos:line="124" pos:column="22"/></operator></expr>;<pos:position pos:line="124" pos:column="23"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="125" pos:column="17">strbuf_setlen<pos:position pos:line="125" pos:column="30"/></name><argument_list pos:line="125" pos:column="30">(<argument><expr><operator pos:line="125" pos:column="31">&amp;<pos:position pos:line="125" pos:column="36"/></operator><name pos:line="125" pos:column="32">newlines<pos:position pos:line="125" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="125" pos:column="42">newlines<pos:position pos:line="125" pos:column="50"/></name><operator pos:line="125" pos:column="50">.<pos:position pos:line="125" pos:column="51"/></operator><name pos:line="125" pos:column="51">len<pos:position pos:line="125" pos:column="54"/></name></name> <operator pos:line="125" pos:column="55">-<pos:position pos:line="125" pos:column="56"/></operator> <literal type="number" pos:line="125" pos:column="57">1<pos:position pos:line="125" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="125" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="60"/></expr_stmt>
	}<pos:position pos:line="126" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="128" pos:column="9">leading<pos:position pos:line="128" pos:column="16"/></name> <operator pos:line="128" pos:column="17">=<pos:position pos:line="128" pos:column="18"/></operator> <name><name pos:line="128" pos:column="19">frag<pos:position pos:line="128" pos:column="23"/></name><operator pos:line="128" pos:column="23">-&gt;<pos:position pos:line="128" pos:column="28"/></operator><name pos:line="128" pos:column="25">leading<pos:position pos:line="128" pos:column="32"/></name></name></expr>;<pos:position pos:line="128" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name pos:line="129" pos:column="9">trailing<pos:position pos:line="129" pos:column="17"/></name> <operator pos:line="129" pos:column="18">=<pos:position pos:line="129" pos:column="19"/></operator> <name><name pos:line="129" pos:column="20">frag<pos:position pos:line="129" pos:column="24"/></name><operator pos:line="129" pos:column="24">-&gt;<pos:position pos:line="129" pos:column="29"/></operator><name pos:line="129" pos:column="26">trailing<pos:position pos:line="129" pos:column="34"/></name></name></expr>;<pos:position pos:line="129" pos:column="35"/></expr_stmt>

	<comment type="block" pos:line="131" pos:column="9">/*
	 * A hunk to change lines at the beginning would begin with
	 * @@ -1,L +N,M @@
	 * but we need to be careful.  -U0 that inserts before the second
	 * line also has this pattern.
	 *
	 * And a hunk to add to an empty file would begin with
	 * @@ -0,0 +N,M @@
	 *
	 * In other words, a hunk that is (frag-&gt;oldpos &lt;= 1) with or
	 * without leading context must match at the beginning.
	 */</comment>
	<expr_stmt><expr><name pos:line="143" pos:column="9">match_beginning<pos:position pos:line="143" pos:column="24"/></name> <operator pos:line="143" pos:column="25">=<pos:position pos:line="143" pos:column="26"/></operator> <operator pos:line="143" pos:column="27">(<pos:position pos:line="143" pos:column="28"/></operator><operator pos:line="143" pos:column="28">!<pos:position pos:line="143" pos:column="29"/></operator><name><name pos:line="143" pos:column="29">frag<pos:position pos:line="143" pos:column="33"/></name><operator pos:line="143" pos:column="33">-&gt;<pos:position pos:line="143" pos:column="38"/></operator><name pos:line="143" pos:column="35">oldpos<pos:position pos:line="143" pos:column="41"/></name></name> <operator pos:line="143" pos:column="42">||<pos:position pos:line="143" pos:column="44"/></operator>
			   <operator pos:line="144" pos:column="28">(<pos:position pos:line="144" pos:column="29"/></operator><name><name pos:line="144" pos:column="29">frag<pos:position pos:line="144" pos:column="33"/></name><operator pos:line="144" pos:column="33">-&gt;<pos:position pos:line="144" pos:column="38"/></operator><name pos:line="144" pos:column="35">oldpos<pos:position pos:line="144" pos:column="41"/></name></name> <operator pos:line="144" pos:column="42">==<pos:position pos:line="144" pos:column="44"/></operator> <literal type="number" pos:line="144" pos:column="45">1<pos:position pos:line="144" pos:column="46"/></literal> <operator pos:line="144" pos:column="47">&amp;&amp;<pos:position pos:line="144" pos:column="57"/></operator> <operator pos:line="144" pos:column="50">!<pos:position pos:line="144" pos:column="51"/></operator><name><name pos:line="144" pos:column="51">state<pos:position pos:line="144" pos:column="56"/></name><operator pos:line="144" pos:column="56">-&gt;<pos:position pos:line="144" pos:column="61"/></operator><name pos:line="144" pos:column="58">unidiff_zero<pos:position pos:line="144" pos:column="70"/></name></name><operator pos:line="144" pos:column="70">)<pos:position pos:line="144" pos:column="71"/></operator><operator pos:line="144" pos:column="71">)<pos:position pos:line="144" pos:column="72"/></operator></expr>;<pos:position pos:line="144" pos:column="73"/></expr_stmt>

	<comment type="block" pos:line="146" pos:column="9">/*
	 * A hunk without trailing lines must match at the end.
	 * However, we simply cannot tell if a hunk must match end
	 * from the lack of trailing lines if the patch was generated
	 * with unidiff without any context.
	 */</comment>
	<expr_stmt><expr><name pos:line="152" pos:column="9">match_end<pos:position pos:line="152" pos:column="18"/></name> <operator pos:line="152" pos:column="19">=<pos:position pos:line="152" pos:column="20"/></operator> <operator pos:line="152" pos:column="21">!<pos:position pos:line="152" pos:column="22"/></operator><name><name pos:line="152" pos:column="22">state<pos:position pos:line="152" pos:column="27"/></name><operator pos:line="152" pos:column="27">-&gt;<pos:position pos:line="152" pos:column="32"/></operator><name pos:line="152" pos:column="29">unidiff_zero<pos:position pos:line="152" pos:column="41"/></name></name> <operator pos:line="152" pos:column="42">&amp;&amp;<pos:position pos:line="152" pos:column="52"/></operator> <operator pos:line="152" pos:column="45">!<pos:position pos:line="152" pos:column="46"/></operator><name pos:line="152" pos:column="46">trailing<pos:position pos:line="152" pos:column="54"/></name></expr>;<pos:position pos:line="152" pos:column="55"/></expr_stmt>

	<expr_stmt><expr><name pos:line="154" pos:column="9">pos<pos:position pos:line="154" pos:column="12"/></name> <operator pos:line="154" pos:column="13">=<pos:position pos:line="154" pos:column="14"/></operator> <ternary><condition><expr><name><name pos:line="154" pos:column="15">frag<pos:position pos:line="154" pos:column="19"/></name><operator pos:line="154" pos:column="19">-&gt;<pos:position pos:line="154" pos:column="24"/></operator><name pos:line="154" pos:column="21">newpos<pos:position pos:line="154" pos:column="27"/></name></name></expr> ?<pos:position pos:line="154" pos:column="29"/></condition><then pos:line="154" pos:column="29"> <expr><operator pos:line="154" pos:column="30">(<pos:position pos:line="154" pos:column="31"/></operator><name><name pos:line="154" pos:column="31">frag<pos:position pos:line="154" pos:column="35"/></name><operator pos:line="154" pos:column="35">-&gt;<pos:position pos:line="154" pos:column="40"/></operator><name pos:line="154" pos:column="37">newpos<pos:position pos:line="154" pos:column="43"/></name></name> <operator pos:line="154" pos:column="44">-<pos:position pos:line="154" pos:column="45"/></operator> <literal type="number" pos:line="154" pos:column="46">1<pos:position pos:line="154" pos:column="47"/></literal><operator pos:line="154" pos:column="47">)<pos:position pos:line="154" pos:column="48"/></operator></expr> <pos:position pos:line="154" pos:column="49"/></then><else pos:line="154" pos:column="49">: <expr><literal type="number" pos:line="154" pos:column="51">0<pos:position pos:line="154" pos:column="52"/></literal></expr></else></ternary></expr>;<pos:position pos:line="154" pos:column="53"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="155" pos:column="9">preimage<pos:position pos:line="155" pos:column="17"/></name><operator pos:line="155" pos:column="17">.<pos:position pos:line="155" pos:column="18"/></operator><name pos:line="155" pos:column="18">buf<pos:position pos:line="155" pos:column="21"/></name></name> <operator pos:line="155" pos:column="22">=<pos:position pos:line="155" pos:column="23"/></operator> <name pos:line="155" pos:column="24">oldlines<pos:position pos:line="155" pos:column="32"/></name></expr>;<pos:position pos:line="155" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="156" pos:column="9">preimage<pos:position pos:line="156" pos:column="17"/></name><operator pos:line="156" pos:column="17">.<pos:position pos:line="156" pos:column="18"/></operator><name pos:line="156" pos:column="18">len<pos:position pos:line="156" pos:column="21"/></name></name> <operator pos:line="156" pos:column="22">=<pos:position pos:line="156" pos:column="23"/></operator> <name pos:line="156" pos:column="24">old<pos:position pos:line="156" pos:column="27"/></name> <operator pos:line="156" pos:column="28">-<pos:position pos:line="156" pos:column="29"/></operator> <name pos:line="156" pos:column="30">oldlines<pos:position pos:line="156" pos:column="38"/></name></expr>;<pos:position pos:line="156" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="157" pos:column="9">postimage<pos:position pos:line="157" pos:column="18"/></name><operator pos:line="157" pos:column="18">.<pos:position pos:line="157" pos:column="19"/></operator><name pos:line="157" pos:column="19">buf<pos:position pos:line="157" pos:column="22"/></name></name> <operator pos:line="157" pos:column="23">=<pos:position pos:line="157" pos:column="24"/></operator> <name><name pos:line="157" pos:column="25">newlines<pos:position pos:line="157" pos:column="33"/></name><operator pos:line="157" pos:column="33">.<pos:position pos:line="157" pos:column="34"/></operator><name pos:line="157" pos:column="34">buf<pos:position pos:line="157" pos:column="37"/></name></name></expr>;<pos:position pos:line="157" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="158" pos:column="9">postimage<pos:position pos:line="158" pos:column="18"/></name><operator pos:line="158" pos:column="18">.<pos:position pos:line="158" pos:column="19"/></operator><name pos:line="158" pos:column="19">len<pos:position pos:line="158" pos:column="22"/></name></name> <operator pos:line="158" pos:column="23">=<pos:position pos:line="158" pos:column="24"/></operator> <name><name pos:line="158" pos:column="25">newlines<pos:position pos:line="158" pos:column="33"/></name><operator pos:line="158" pos:column="33">.<pos:position pos:line="158" pos:column="34"/></operator><name pos:line="158" pos:column="34">len<pos:position pos:line="158" pos:column="37"/></name></name></expr>;<pos:position pos:line="158" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="159" pos:column="9">preimage<pos:position pos:line="159" pos:column="17"/></name><operator pos:line="159" pos:column="17">.<pos:position pos:line="159" pos:column="18"/></operator><name pos:line="159" pos:column="18">line<pos:position pos:line="159" pos:column="22"/></name></name> <operator pos:line="159" pos:column="23">=<pos:position pos:line="159" pos:column="24"/></operator> <name><name pos:line="159" pos:column="25">preimage<pos:position pos:line="159" pos:column="33"/></name><operator pos:line="159" pos:column="33">.<pos:position pos:line="159" pos:column="34"/></operator><name pos:line="159" pos:column="34">line_allocated<pos:position pos:line="159" pos:column="48"/></name></name></expr>;<pos:position pos:line="159" pos:column="49"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="160" pos:column="9">postimage<pos:position pos:line="160" pos:column="18"/></name><operator pos:line="160" pos:column="18">.<pos:position pos:line="160" pos:column="19"/></operator><name pos:line="160" pos:column="19">line<pos:position pos:line="160" pos:column="23"/></name></name> <operator pos:line="160" pos:column="24">=<pos:position pos:line="160" pos:column="25"/></operator> <name><name pos:line="160" pos:column="26">postimage<pos:position pos:line="160" pos:column="35"/></name><operator pos:line="160" pos:column="35">.<pos:position pos:line="160" pos:column="36"/></operator><name pos:line="160" pos:column="36">line_allocated<pos:position pos:line="160" pos:column="50"/></name></name></expr>;<pos:position pos:line="160" pos:column="51"/></expr_stmt>

	<for pos:line="162" pos:column="9">for <control pos:line="162" pos:column="13">(<init pos:line="162" pos:column="14">;<pos:position pos:line="162" pos:column="15"/></init><condition pos:line="162" pos:column="15">;<pos:position pos:line="162" pos:column="16"/></condition><incr/>)<pos:position pos:line="162" pos:column="17"/></control> <block pos:line="162" pos:column="18">{

		<expr_stmt><expr><name pos:line="164" pos:column="17">applied_pos<pos:position pos:line="164" pos:column="28"/></name> <operator pos:line="164" pos:column="29">=<pos:position pos:line="164" pos:column="30"/></operator> <call><name pos:line="164" pos:column="31">find_pos<pos:position pos:line="164" pos:column="39"/></name><argument_list pos:line="164" pos:column="39">(<argument><expr><name pos:line="164" pos:column="40">state<pos:position pos:line="164" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="164" pos:column="47">img<pos:position pos:line="164" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="164" pos:column="52">&amp;<pos:position pos:line="164" pos:column="57"/></operator><name pos:line="164" pos:column="53">preimage<pos:position pos:line="164" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="164" pos:column="63">&amp;<pos:position pos:line="164" pos:column="68"/></operator><name pos:line="164" pos:column="64">postimage<pos:position pos:line="164" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="164" pos:column="75">pos<pos:position pos:line="164" pos:column="78"/></name></expr></argument>,
				       <argument><expr><name pos:line="165" pos:column="40">ws_rule<pos:position pos:line="165" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="165" pos:column="49">match_beginning<pos:position pos:line="165" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="165" pos:column="66">match_end<pos:position pos:line="165" pos:column="75"/></name></expr></argument>)<pos:position pos:line="165" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="77"/></expr_stmt>

		<if pos:line="167" pos:column="17">if <condition pos:line="167" pos:column="20">(<expr><name pos:line="167" pos:column="21">applied_pos<pos:position pos:line="167" pos:column="32"/></name> <operator pos:line="167" pos:column="33">&gt;=<pos:position pos:line="167" pos:column="38"/></operator> <literal type="number" pos:line="167" pos:column="36">0<pos:position pos:line="167" pos:column="37"/></literal></expr>)<pos:position pos:line="167" pos:column="38"/></condition><then pos:line="167" pos:column="38">
			<block type="pseudo"><break pos:line="168" pos:column="25">break;<pos:position pos:line="168" pos:column="31"/></break></block></then></if>

		<comment type="block" pos:line="170" pos:column="17">/* Am I at my context limits? */</comment>
		<if pos:line="171" pos:column="17">if <condition pos:line="171" pos:column="20">(<expr><operator pos:line="171" pos:column="21">(<pos:position pos:line="171" pos:column="22"/></operator><name pos:line="171" pos:column="22">leading<pos:position pos:line="171" pos:column="29"/></name> <operator pos:line="171" pos:column="30">&lt;=<pos:position pos:line="171" pos:column="35"/></operator> <name><name pos:line="171" pos:column="33">state<pos:position pos:line="171" pos:column="38"/></name><operator pos:line="171" pos:column="38">-&gt;<pos:position pos:line="171" pos:column="43"/></operator><name pos:line="171" pos:column="40">p_context<pos:position pos:line="171" pos:column="49"/></name></name><operator pos:line="171" pos:column="49">)<pos:position pos:line="171" pos:column="50"/></operator> <operator pos:line="171" pos:column="51">&amp;&amp;<pos:position pos:line="171" pos:column="61"/></operator> <operator pos:line="171" pos:column="54">(<pos:position pos:line="171" pos:column="55"/></operator><name pos:line="171" pos:column="55">trailing<pos:position pos:line="171" pos:column="63"/></name> <operator pos:line="171" pos:column="64">&lt;=<pos:position pos:line="171" pos:column="69"/></operator> <name><name pos:line="171" pos:column="67">state<pos:position pos:line="171" pos:column="72"/></name><operator pos:line="171" pos:column="72">-&gt;<pos:position pos:line="171" pos:column="77"/></operator><name pos:line="171" pos:column="74">p_context<pos:position pos:line="171" pos:column="83"/></name></name><operator pos:line="171" pos:column="83">)<pos:position pos:line="171" pos:column="84"/></operator></expr>)<pos:position pos:line="171" pos:column="85"/></condition><then pos:line="171" pos:column="85">
			<block type="pseudo"><break pos:line="172" pos:column="25">break;<pos:position pos:line="172" pos:column="31"/></break></block></then></if>
		<if pos:line="173" pos:column="17">if <condition pos:line="173" pos:column="20">(<expr><name pos:line="173" pos:column="21">match_beginning<pos:position pos:line="173" pos:column="36"/></name> <operator pos:line="173" pos:column="37">||<pos:position pos:line="173" pos:column="39"/></operator> <name pos:line="173" pos:column="40">match_end<pos:position pos:line="173" pos:column="49"/></name></expr>)<pos:position pos:line="173" pos:column="50"/></condition><then pos:line="173" pos:column="50"> <block pos:line="173" pos:column="51">{
			<expr_stmt><expr><name pos:line="174" pos:column="25">match_beginning<pos:position pos:line="174" pos:column="40"/></name> <operator pos:line="174" pos:column="41">=<pos:position pos:line="174" pos:column="42"/></operator> <name pos:line="174" pos:column="43">match_end<pos:position pos:line="174" pos:column="52"/></name> <operator pos:line="174" pos:column="53">=<pos:position pos:line="174" pos:column="54"/></operator> <literal type="number" pos:line="174" pos:column="55">0<pos:position pos:line="174" pos:column="56"/></literal></expr>;<pos:position pos:line="174" pos:column="57"/></expr_stmt>
			<continue pos:line="175" pos:column="25">continue;<pos:position pos:line="175" pos:column="34"/></continue>
		}<pos:position pos:line="176" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="178" pos:column="17">/*
		 * Reduce the number of context lines; reduce both
		 * leading and trailing if they are equal otherwise
		 * just reduce the larger context.
		 */</comment>
		<if pos:line="183" pos:column="17">if <condition pos:line="183" pos:column="20">(<expr><name pos:line="183" pos:column="21">leading<pos:position pos:line="183" pos:column="28"/></name> <operator pos:line="183" pos:column="29">&gt;=<pos:position pos:line="183" pos:column="34"/></operator> <name pos:line="183" pos:column="32">trailing<pos:position pos:line="183" pos:column="40"/></name></expr>)<pos:position pos:line="183" pos:column="41"/></condition><then pos:line="183" pos:column="41"> <block pos:line="183" pos:column="42">{
			<expr_stmt><expr><call><name pos:line="184" pos:column="25">remove_first_line<pos:position pos:line="184" pos:column="42"/></name><argument_list pos:line="184" pos:column="42">(<argument><expr><operator pos:line="184" pos:column="43">&amp;<pos:position pos:line="184" pos:column="48"/></operator><name pos:line="184" pos:column="44">preimage<pos:position pos:line="184" pos:column="52"/></name></expr></argument>)<pos:position pos:line="184" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="184" pos:column="54"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="185" pos:column="25">remove_first_line<pos:position pos:line="185" pos:column="42"/></name><argument_list pos:line="185" pos:column="42">(<argument><expr><operator pos:line="185" pos:column="43">&amp;<pos:position pos:line="185" pos:column="48"/></operator><name pos:line="185" pos:column="44">postimage<pos:position pos:line="185" pos:column="53"/></name></expr></argument>)<pos:position pos:line="185" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="185" pos:column="55"/></expr_stmt>
			<expr_stmt><expr><name pos:line="186" pos:column="25">pos<pos:position pos:line="186" pos:column="28"/></name><operator pos:line="186" pos:column="28">--<pos:position pos:line="186" pos:column="30"/></operator></expr>;<pos:position pos:line="186" pos:column="31"/></expr_stmt>
			<expr_stmt><expr><name pos:line="187" pos:column="25">leading<pos:position pos:line="187" pos:column="32"/></name><operator pos:line="187" pos:column="32">--<pos:position pos:line="187" pos:column="34"/></operator></expr>;<pos:position pos:line="187" pos:column="35"/></expr_stmt>
		}<pos:position pos:line="188" pos:column="18"/></block></then></if>
		<if pos:line="189" pos:column="17">if <condition pos:line="189" pos:column="20">(<expr><name pos:line="189" pos:column="21">trailing<pos:position pos:line="189" pos:column="29"/></name> <operator pos:line="189" pos:column="30">&gt;<pos:position pos:line="189" pos:column="34"/></operator> <name pos:line="189" pos:column="32">leading<pos:position pos:line="189" pos:column="39"/></name></expr>)<pos:position pos:line="189" pos:column="40"/></condition><then pos:line="189" pos:column="40"> <block pos:line="189" pos:column="41">{
			<expr_stmt><expr><call><name pos:line="190" pos:column="25">remove_last_line<pos:position pos:line="190" pos:column="41"/></name><argument_list pos:line="190" pos:column="41">(<argument><expr><operator pos:line="190" pos:column="42">&amp;<pos:position pos:line="190" pos:column="47"/></operator><name pos:line="190" pos:column="43">preimage<pos:position pos:line="190" pos:column="51"/></name></expr></argument>)<pos:position pos:line="190" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="190" pos:column="53"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="191" pos:column="25">remove_last_line<pos:position pos:line="191" pos:column="41"/></name><argument_list pos:line="191" pos:column="41">(<argument><expr><operator pos:line="191" pos:column="42">&amp;<pos:position pos:line="191" pos:column="47"/></operator><name pos:line="191" pos:column="43">postimage<pos:position pos:line="191" pos:column="52"/></name></expr></argument>)<pos:position pos:line="191" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="191" pos:column="54"/></expr_stmt>
			<expr_stmt><expr><name pos:line="192" pos:column="25">trailing<pos:position pos:line="192" pos:column="33"/></name><operator pos:line="192" pos:column="33">--<pos:position pos:line="192" pos:column="35"/></operator></expr>;<pos:position pos:line="192" pos:column="36"/></expr_stmt>
		}<pos:position pos:line="193" pos:column="18"/></block></then></if>
	}<pos:position pos:line="194" pos:column="10"/></block></for>

	<if pos:line="196" pos:column="9">if <condition pos:line="196" pos:column="12">(<expr><name pos:line="196" pos:column="13">applied_pos<pos:position pos:line="196" pos:column="24"/></name> <operator pos:line="196" pos:column="25">&gt;=<pos:position pos:line="196" pos:column="30"/></operator> <literal type="number" pos:line="196" pos:column="28">0<pos:position pos:line="196" pos:column="29"/></literal></expr>)<pos:position pos:line="196" pos:column="30"/></condition><then pos:line="196" pos:column="30"> <block pos:line="196" pos:column="31">{
		<if pos:line="197" pos:column="17">if <condition pos:line="197" pos:column="20">(<expr><name pos:line="197" pos:column="21">new_blank_lines_at_end<pos:position pos:line="197" pos:column="43"/></name> <operator pos:line="197" pos:column="44">&amp;&amp;<pos:position pos:line="197" pos:column="54"/></operator>
		    <name><name pos:line="198" pos:column="21">preimage<pos:position pos:line="198" pos:column="29"/></name><operator pos:line="198" pos:column="29">.<pos:position pos:line="198" pos:column="30"/></operator><name pos:line="198" pos:column="30">nr<pos:position pos:line="198" pos:column="32"/></name></name> <operator pos:line="198" pos:column="33">+<pos:position pos:line="198" pos:column="34"/></operator> <name pos:line="198" pos:column="35">applied_pos<pos:position pos:line="198" pos:column="46"/></name> <operator pos:line="198" pos:column="47">&gt;=<pos:position pos:line="198" pos:column="52"/></operator> <name><name pos:line="198" pos:column="50">img<pos:position pos:line="198" pos:column="53"/></name><operator pos:line="198" pos:column="53">-&gt;<pos:position pos:line="198" pos:column="58"/></operator><name pos:line="198" pos:column="55">nr<pos:position pos:line="198" pos:column="57"/></name></name> <operator pos:line="198" pos:column="58">&amp;&amp;<pos:position pos:line="198" pos:column="68"/></operator>
		    <operator pos:line="199" pos:column="21">(<pos:position pos:line="199" pos:column="22"/></operator><name pos:line="199" pos:column="22">ws_rule<pos:position pos:line="199" pos:column="29"/></name> <operator pos:line="199" pos:column="30">&amp;<pos:position pos:line="199" pos:column="35"/></operator> <name pos:line="199" pos:column="32">WS_BLANK_AT_EOF<pos:position pos:line="199" pos:column="47"/></name><operator pos:line="199" pos:column="47">)<pos:position pos:line="199" pos:column="48"/></operator> <operator pos:line="199" pos:column="49">&amp;&amp;<pos:position pos:line="199" pos:column="59"/></operator>
		    <name><name pos:line="200" pos:column="21">state<pos:position pos:line="200" pos:column="26"/></name><operator pos:line="200" pos:column="26">-&gt;<pos:position pos:line="200" pos:column="31"/></operator><name pos:line="200" pos:column="28">ws_error_action<pos:position pos:line="200" pos:column="43"/></name></name> <operator pos:line="200" pos:column="44">!=<pos:position pos:line="200" pos:column="46"/></operator> <name pos:line="200" pos:column="47">nowarn_ws_error<pos:position pos:line="200" pos:column="62"/></name></expr>)<pos:position pos:line="200" pos:column="63"/></condition><then pos:line="200" pos:column="63"> <block pos:line="200" pos:column="64">{
			<expr_stmt><expr><call><name pos:line="201" pos:column="25">record_ws_error<pos:position pos:line="201" pos:column="40"/></name><argument_list pos:line="201" pos:column="40">(<argument><expr><name pos:line="201" pos:column="41">state<pos:position pos:line="201" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="201" pos:column="48">WS_BLANK_AT_EOF<pos:position pos:line="201" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="201" pos:column="65">"+"<pos:position pos:line="201" pos:column="68"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="201" pos:column="70">1<pos:position pos:line="201" pos:column="71"/></literal></expr></argument>,
					<argument><expr><name pos:line="202" pos:column="41">found_new_blank_lines_at_end<pos:position pos:line="202" pos:column="69"/></name></expr></argument>)<pos:position pos:line="202" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="202" pos:column="71"/></expr_stmt>
			<if pos:line="203" pos:column="25">if <condition pos:line="203" pos:column="28">(<expr><name><name pos:line="203" pos:column="29">state<pos:position pos:line="203" pos:column="34"/></name><operator pos:line="203" pos:column="34">-&gt;<pos:position pos:line="203" pos:column="39"/></operator><name pos:line="203" pos:column="36">ws_error_action<pos:position pos:line="203" pos:column="51"/></name></name> <operator pos:line="203" pos:column="52">==<pos:position pos:line="203" pos:column="54"/></operator> <name pos:line="203" pos:column="55">correct_ws_error<pos:position pos:line="203" pos:column="71"/></name></expr>)<pos:position pos:line="203" pos:column="72"/></condition><then pos:line="203" pos:column="72"> <block pos:line="203" pos:column="73">{
				<while pos:line="204" pos:column="33">while <condition pos:line="204" pos:column="39">(<expr><name pos:line="204" pos:column="40">new_blank_lines_at_end<pos:position pos:line="204" pos:column="62"/></name><operator pos:line="204" pos:column="62">--<pos:position pos:line="204" pos:column="64"/></operator></expr>)<pos:position pos:line="204" pos:column="65"/></condition>
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="205" pos:column="41">remove_last_line<pos:position pos:line="205" pos:column="57"/></name><argument_list pos:line="205" pos:column="57">(<argument><expr><operator pos:line="205" pos:column="58">&amp;<pos:position pos:line="205" pos:column="63"/></operator><name pos:line="205" pos:column="59">postimage<pos:position pos:line="205" pos:column="68"/></name></expr></argument>)<pos:position pos:line="205" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="205" pos:column="70"/></expr_stmt></block></while>
			}<pos:position pos:line="206" pos:column="26"/></block></then></if>
			<comment type="block" pos:line="207" pos:column="25">/*
			 * We would want to prevent write_out_results()
			 * from taking place in apply_patch() that follows
			 * the callchain led us here, which is:
			 * apply_patch-&gt;check_patch_list-&gt;check_patch-&gt;
			 * apply_data-&gt;apply_fragments-&gt;apply_one_fragment
			 */</comment>
			<if pos:line="214" pos:column="25">if <condition pos:line="214" pos:column="28">(<expr><name><name pos:line="214" pos:column="29">state<pos:position pos:line="214" pos:column="34"/></name><operator pos:line="214" pos:column="34">-&gt;<pos:position pos:line="214" pos:column="39"/></operator><name pos:line="214" pos:column="36">ws_error_action<pos:position pos:line="214" pos:column="51"/></name></name> <operator pos:line="214" pos:column="52">==<pos:position pos:line="214" pos:column="54"/></operator> <name pos:line="214" pos:column="55">die_on_ws_error<pos:position pos:line="214" pos:column="70"/></name></expr>)<pos:position pos:line="214" pos:column="71"/></condition><then pos:line="214" pos:column="71">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="215" pos:column="33">state<pos:position pos:line="215" pos:column="38"/></name><operator pos:line="215" pos:column="38">-&gt;<pos:position pos:line="215" pos:column="43"/></operator><name pos:line="215" pos:column="40">apply<pos:position pos:line="215" pos:column="45"/></name></name> <operator pos:line="215" pos:column="46">=<pos:position pos:line="215" pos:column="47"/></operator> <literal type="number" pos:line="215" pos:column="48">0<pos:position pos:line="215" pos:column="49"/></literal></expr>;<pos:position pos:line="215" pos:column="50"/></expr_stmt></block></then></if>
		}<pos:position pos:line="216" pos:column="18"/></block></then></if>

		<if pos:line="218" pos:column="17">if <condition pos:line="218" pos:column="20">(<expr><name><name pos:line="218" pos:column="21">state<pos:position pos:line="218" pos:column="26"/></name><operator pos:line="218" pos:column="26">-&gt;<pos:position pos:line="218" pos:column="31"/></operator><name pos:line="218" pos:column="28">apply_verbosely<pos:position pos:line="218" pos:column="43"/></name></name> <operator pos:line="218" pos:column="44">&amp;&amp;<pos:position pos:line="218" pos:column="54"/></operator> <name pos:line="218" pos:column="47">applied_pos<pos:position pos:line="218" pos:column="58"/></name> <operator pos:line="218" pos:column="59">!=<pos:position pos:line="218" pos:column="61"/></operator> <name pos:line="218" pos:column="62">pos<pos:position pos:line="218" pos:column="65"/></name></expr>)<pos:position pos:line="218" pos:column="66"/></condition><then pos:line="218" pos:column="66"> <block pos:line="218" pos:column="67">{
			<decl_stmt><decl><type><name pos:line="219" pos:column="25">int<pos:position pos:line="219" pos:column="28"/></name></type> <name pos:line="219" pos:column="29">offset<pos:position pos:line="219" pos:column="35"/></name> <init pos:line="219" pos:column="36">= <expr><name pos:line="219" pos:column="38">applied_pos<pos:position pos:line="219" pos:column="49"/></name> <operator pos:line="219" pos:column="50">-<pos:position pos:line="219" pos:column="51"/></operator> <name pos:line="219" pos:column="52">pos<pos:position pos:line="219" pos:column="55"/></name></expr></init></decl>;<pos:position pos:line="219" pos:column="56"/></decl_stmt>
			<if pos:line="220" pos:column="25">if <condition pos:line="220" pos:column="28">(<expr><name><name pos:line="220" pos:column="29">state<pos:position pos:line="220" pos:column="34"/></name><operator pos:line="220" pos:column="34">-&gt;<pos:position pos:line="220" pos:column="39"/></operator><name pos:line="220" pos:column="36">apply_in_reverse<pos:position pos:line="220" pos:column="52"/></name></name></expr>)<pos:position pos:line="220" pos:column="53"/></condition><then pos:line="220" pos:column="53">
				<block type="pseudo"><expr_stmt><expr><name pos:line="221" pos:column="33">offset<pos:position pos:line="221" pos:column="39"/></name> <operator pos:line="221" pos:column="40">=<pos:position pos:line="221" pos:column="41"/></operator> <literal type="number" pos:line="221" pos:column="42">0<pos:position pos:line="221" pos:column="43"/></literal> <operator pos:line="221" pos:column="44">-<pos:position pos:line="221" pos:column="45"/></operator> <name pos:line="221" pos:column="46">offset<pos:position pos:line="221" pos:column="52"/></name></expr>;<pos:position pos:line="221" pos:column="53"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="222" pos:column="25">fprintf_ln<pos:position pos:line="222" pos:column="35"/></name><argument_list pos:line="222" pos:column="35">(<argument><expr><name pos:line="222" pos:column="36">stderr<pos:position pos:line="222" pos:column="42"/></name></expr></argument>,
				   <argument><expr><call><name pos:line="223" pos:column="36">Q_<pos:position pos:line="223" pos:column="38"/></name><argument_list pos:line="223" pos:column="38">(<argument><expr><literal type="string" pos:line="223" pos:column="39">"Hunk #%d succeeded at %d (offset %d line)."<pos:position pos:line="223" pos:column="83"/></literal></expr></argument>,
				      <argument><expr><literal type="string" pos:line="224" pos:column="39">"Hunk #%d succeeded at %d (offset %d lines)."<pos:position pos:line="224" pos:column="84"/></literal></expr></argument>,
				      <argument><expr><name pos:line="225" pos:column="39">offset<pos:position pos:line="225" pos:column="45"/></name></expr></argument>)<pos:position pos:line="225" pos:column="46"/></argument_list></call></expr></argument>,
				   <argument><expr><name pos:line="226" pos:column="36">nth_fragment<pos:position pos:line="226" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="226" pos:column="50">applied_pos<pos:position pos:line="226" pos:column="61"/></name> <operator pos:line="226" pos:column="62">+<pos:position pos:line="226" pos:column="63"/></operator> <literal type="number" pos:line="226" pos:column="64">1<pos:position pos:line="226" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="226" pos:column="67">offset<pos:position pos:line="226" pos:column="73"/></name></expr></argument>)<pos:position pos:line="226" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="226" pos:column="75"/></expr_stmt>
		}<pos:position pos:line="227" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="229" pos:column="17">/*
		 * Warn if it was necessary to reduce the number
		 * of context lines.
		 */</comment>
		<if pos:line="233" pos:column="17">if <condition pos:line="233" pos:column="20">(<expr><operator pos:line="233" pos:column="21">(<pos:position pos:line="233" pos:column="22"/></operator><name pos:line="233" pos:column="22">leading<pos:position pos:line="233" pos:column="29"/></name> <operator pos:line="233" pos:column="30">!=<pos:position pos:line="233" pos:column="32"/></operator> <name><name pos:line="233" pos:column="33">frag<pos:position pos:line="233" pos:column="37"/></name><operator pos:line="233" pos:column="37">-&gt;<pos:position pos:line="233" pos:column="42"/></operator><name pos:line="233" pos:column="39">leading<pos:position pos:line="233" pos:column="46"/></name></name><operator pos:line="233" pos:column="46">)<pos:position pos:line="233" pos:column="47"/></operator> <operator pos:line="233" pos:column="48">||<pos:position pos:line="233" pos:column="50"/></operator>
		    <operator pos:line="234" pos:column="21">(<pos:position pos:line="234" pos:column="22"/></operator><name pos:line="234" pos:column="22">trailing<pos:position pos:line="234" pos:column="30"/></name> <operator pos:line="234" pos:column="31">!=<pos:position pos:line="234" pos:column="33"/></operator> <name><name pos:line="234" pos:column="34">frag<pos:position pos:line="234" pos:column="38"/></name><operator pos:line="234" pos:column="38">-&gt;<pos:position pos:line="234" pos:column="43"/></operator><name pos:line="234" pos:column="40">trailing<pos:position pos:line="234" pos:column="48"/></name></name><operator pos:line="234" pos:column="48">)<pos:position pos:line="234" pos:column="49"/></operator></expr>)<pos:position pos:line="234" pos:column="50"/></condition><then pos:line="234" pos:column="50">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="235" pos:column="25">fprintf_ln<pos:position pos:line="235" pos:column="35"/></name><argument_list pos:line="235" pos:column="35">(<argument><expr><name pos:line="235" pos:column="36">stderr<pos:position pos:line="235" pos:column="42"/></name></expr></argument>, <argument><expr><call><name pos:line="235" pos:column="44">_<pos:position pos:line="235" pos:column="45"/></name><argument_list pos:line="235" pos:column="45">(<argument><expr><literal type="string" pos:line="235" pos:column="46">"Context reduced to (%ld/%ld)"<pos:position pos:line="235" pos:column="76"/></literal>
					     <literal type="string" pos:line="236" pos:column="46">" to apply fragment at %d"<pos:position pos:line="236" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="236" pos:column="73"/></argument_list></call></expr></argument>,
				   <argument><expr><name pos:line="237" pos:column="36">leading<pos:position pos:line="237" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="237" pos:column="45">trailing<pos:position pos:line="237" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="237" pos:column="55">applied_pos<pos:position pos:line="237" pos:column="66"/></name><operator pos:line="237" pos:column="66">+<pos:position pos:line="237" pos:column="67"/></operator><literal type="number" pos:line="237" pos:column="67">1<pos:position pos:line="237" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="237" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="237" pos:column="70"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="238" pos:column="17">update_image<pos:position pos:line="238" pos:column="29"/></name><argument_list pos:line="238" pos:column="29">(<argument><expr><name pos:line="238" pos:column="30">state<pos:position pos:line="238" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="238" pos:column="37">img<pos:position pos:line="238" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="238" pos:column="42">applied_pos<pos:position pos:line="238" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="238" pos:column="55">&amp;<pos:position pos:line="238" pos:column="60"/></operator><name pos:line="238" pos:column="56">preimage<pos:position pos:line="238" pos:column="64"/></name></expr></argument>, <argument><expr><operator pos:line="238" pos:column="66">&amp;<pos:position pos:line="238" pos:column="71"/></operator><name pos:line="238" pos:column="67">postimage<pos:position pos:line="238" pos:column="76"/></name></expr></argument>)<pos:position pos:line="238" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="238" pos:column="78"/></expr_stmt>
	}<pos:position pos:line="239" pos:column="10"/></block></then> <else pos:line="239" pos:column="11">else <block pos:line="239" pos:column="16">{
		<if pos:line="240" pos:column="17">if <condition pos:line="240" pos:column="20">(<expr><name><name pos:line="240" pos:column="21">state<pos:position pos:line="240" pos:column="26"/></name><operator pos:line="240" pos:column="26">-&gt;<pos:position pos:line="240" pos:column="31"/></operator><name pos:line="240" pos:column="28">apply_verbosely<pos:position pos:line="240" pos:column="43"/></name></name></expr>)<pos:position pos:line="240" pos:column="44"/></condition><then pos:line="240" pos:column="44">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="241" pos:column="25">error<pos:position pos:line="241" pos:column="30"/></name><argument_list pos:line="241" pos:column="30">(<argument><expr><call><name pos:line="241" pos:column="31">_<pos:position pos:line="241" pos:column="32"/></name><argument_list pos:line="241" pos:column="32">(<argument><expr><literal type="string" pos:line="241" pos:column="33">"while searching for:\n%.*s"<pos:position pos:line="241" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="241" pos:column="62"/></argument_list></call></expr></argument>,
			      <argument><expr><call pos:line="242" pos:column="31">(<name pos:line="242" pos:column="32">int<pos:position pos:line="242" pos:column="35"/></name>)<argument_list pos:line="242" pos:column="36">(<argument><expr><name pos:line="242" pos:column="37">old<pos:position pos:line="242" pos:column="40"/></name> <operator pos:line="242" pos:column="41">-<pos:position pos:line="242" pos:column="42"/></operator> <name pos:line="242" pos:column="43">oldlines<pos:position pos:line="242" pos:column="51"/></name></expr></argument>)<pos:position pos:line="242" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="242" pos:column="54">oldlines<pos:position pos:line="242" pos:column="62"/></name></expr></argument>)<pos:position pos:line="242" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="242" pos:column="64"/></expr_stmt></block></then></if>
	}<pos:position pos:line="243" pos:column="10"/></block></else></if>

<label><name pos:line="245" pos:column="1">out<pos:position pos:line="245" pos:column="4"/></name>:<pos:position pos:line="245" pos:column="5"/></label>
	<expr_stmt><expr><call><name pos:line="246" pos:column="9">free<pos:position pos:line="246" pos:column="13"/></name><argument_list pos:line="246" pos:column="13">(<argument><expr><name pos:line="246" pos:column="14">oldlines<pos:position pos:line="246" pos:column="22"/></name></expr></argument>)<pos:position pos:line="246" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="246" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="247" pos:column="9">strbuf_release<pos:position pos:line="247" pos:column="23"/></name><argument_list pos:line="247" pos:column="23">(<argument><expr><operator pos:line="247" pos:column="24">&amp;<pos:position pos:line="247" pos:column="29"/></operator><name pos:line="247" pos:column="25">newlines<pos:position pos:line="247" pos:column="33"/></name></expr></argument>)<pos:position pos:line="247" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="247" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="248" pos:column="9">free<pos:position pos:line="248" pos:column="13"/></name><argument_list pos:line="248" pos:column="13">(<argument><expr><name><name pos:line="248" pos:column="14">preimage<pos:position pos:line="248" pos:column="22"/></name><operator pos:line="248" pos:column="22">.<pos:position pos:line="248" pos:column="23"/></operator><name pos:line="248" pos:column="23">line_allocated<pos:position pos:line="248" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="248" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="248" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="249" pos:column="9">free<pos:position pos:line="249" pos:column="13"/></name><argument_list pos:line="249" pos:column="13">(<argument><expr><name><name pos:line="249" pos:column="14">postimage<pos:position pos:line="249" pos:column="23"/></name><operator pos:line="249" pos:column="23">.<pos:position pos:line="249" pos:column="24"/></operator><name pos:line="249" pos:column="24">line_allocated<pos:position pos:line="249" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="249" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="249" pos:column="40"/></expr_stmt>

	<return pos:line="251" pos:column="9">return <expr><operator pos:line="251" pos:column="16">(<pos:position pos:line="251" pos:column="17"/></operator><name pos:line="251" pos:column="17">applied_pos<pos:position pos:line="251" pos:column="28"/></name> <operator pos:line="251" pos:column="29">&lt;<pos:position pos:line="251" pos:column="33"/></operator> <literal type="number" pos:line="251" pos:column="31">0<pos:position pos:line="251" pos:column="32"/></literal><operator pos:line="251" pos:column="32">)<pos:position pos:line="251" pos:column="33"/></operator></expr>;<pos:position pos:line="251" pos:column="34"/></return>
}<pos:position pos:line="252" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4227_git-2.5.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">collect_config<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">key_<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="45">const<pos:position pos:line="1" pos:column="50"/></specifier> <name pos:line="1" pos:column="51">char<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">value_<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="65">void<pos:position pos:line="1" pos:column="69"/></name> <modifier pos:line="1" pos:column="70">*<pos:position pos:line="1" pos:column="71"/></modifier></type><name pos:line="1" pos:column="71">cb<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="74"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">strbuf_list<pos:position pos:line="3" pos:column="27"/></name></name> <modifier pos:line="3" pos:column="28">*<pos:position pos:line="3" pos:column="29"/></modifier></type><name pos:line="3" pos:column="29">values<pos:position pos:line="3" pos:column="35"/></name> <init pos:line="3" pos:column="36">= <expr><name pos:line="3" pos:column="38">cb<pos:position pos:line="3" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="41"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">use_key_regexp<pos:position pos:line="5" pos:column="28"/></name> <operator pos:line="5" pos:column="29">&amp;&amp;<pos:position pos:line="5" pos:column="39"/></operator> <call><name pos:line="5" pos:column="32">strcmp<pos:position pos:line="5" pos:column="38"/></name><argument_list pos:line="5" pos:column="38">(<argument><expr><name pos:line="5" pos:column="39">key_<pos:position pos:line="5" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="45">key<pos:position pos:line="5" pos:column="48"/></name></expr></argument>)<pos:position pos:line="5" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="50"/></condition><then pos:line="5" pos:column="50">
		<block type="pseudo"><return pos:line="6" pos:column="17">return <expr><literal type="number" pos:line="6" pos:column="24">0<pos:position pos:line="6" pos:column="25"/></literal></expr>;<pos:position pos:line="6" pos:column="26"/></return></block></then></if>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">use_key_regexp<pos:position pos:line="7" pos:column="27"/></name> <operator pos:line="7" pos:column="28">&amp;&amp;<pos:position pos:line="7" pos:column="38"/></operator> <call><name pos:line="7" pos:column="31">regexec<pos:position pos:line="7" pos:column="38"/></name><argument_list pos:line="7" pos:column="38">(<argument><expr><name pos:line="7" pos:column="39">key_regexp<pos:position pos:line="7" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="51">key_<pos:position pos:line="7" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="57">0<pos:position pos:line="7" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="60">NULL<pos:position pos:line="7" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="66">0<pos:position pos:line="7" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="69"/></condition><then pos:line="7" pos:column="69">
		<block type="pseudo"><return pos:line="8" pos:column="17">return <expr><literal type="number" pos:line="8" pos:column="24">0<pos:position pos:line="8" pos:column="25"/></literal></expr>;<pos:position pos:line="8" pos:column="26"/></return></block></then></if>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">regexp<pos:position pos:line="9" pos:column="19"/></name> <operator pos:line="9" pos:column="20">!=<pos:position pos:line="9" pos:column="22"/></operator> <name pos:line="9" pos:column="23">NULL<pos:position pos:line="9" pos:column="27"/></name> <operator pos:line="9" pos:column="28">&amp;&amp;<pos:position pos:line="9" pos:column="38"/></operator>
	    <operator pos:line="10" pos:column="13">(<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="14">do_not_match<pos:position pos:line="10" pos:column="26"/></name> <operator pos:line="10" pos:column="27">^<pos:position pos:line="10" pos:column="28"/></operator> <operator pos:line="10" pos:column="29">!<pos:position pos:line="10" pos:column="30"/></operator><operator pos:line="10" pos:column="30">!<pos:position pos:line="10" pos:column="31"/></operator><call><name pos:line="10" pos:column="31">regexec<pos:position pos:line="10" pos:column="38"/></name><argument_list pos:line="10" pos:column="38">(<argument><expr><name pos:line="10" pos:column="39">regexp<pos:position pos:line="10" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="47">(<pos:position pos:line="10" pos:column="48"/></operator><ternary><condition><expr><name pos:line="10" pos:column="48">value_<pos:position pos:line="10" pos:column="54"/></name></expr>?<pos:position pos:line="10" pos:column="55"/></condition><then><expr><name pos:line="10" pos:column="55">value_<pos:position pos:line="10" pos:column="61"/></name></expr></then><else pos:line="10" pos:column="61">:<expr><literal type="string" pos:line="10" pos:column="62">""<pos:position pos:line="10" pos:column="64"/></literal></expr></else></ternary><operator pos:line="10" pos:column="64">)<pos:position pos:line="10" pos:column="65"/></operator></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="67">0<pos:position pos:line="10" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="70">NULL<pos:position pos:line="10" pos:column="74"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="76">0<pos:position pos:line="10" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="78"/></argument_list></call><operator pos:line="10" pos:column="78">)<pos:position pos:line="10" pos:column="79"/></operator></expr>)<pos:position pos:line="10" pos:column="80"/></condition><then pos:line="10" pos:column="80">
		<block type="pseudo"><return pos:line="11" pos:column="17">return <expr><literal type="number" pos:line="11" pos:column="24">0<pos:position pos:line="11" pos:column="25"/></literal></expr>;<pos:position pos:line="11" pos:column="26"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="13" pos:column="9">ALLOC_GROW<pos:position pos:line="13" pos:column="19"/></name><argument_list pos:line="13" pos:column="19">(<argument><expr><name><name pos:line="13" pos:column="20">values<pos:position pos:line="13" pos:column="26"/></name><operator pos:line="13" pos:column="26">-&gt;<pos:position pos:line="13" pos:column="31"/></operator><name pos:line="13" pos:column="28">items<pos:position pos:line="13" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="35">values<pos:position pos:line="13" pos:column="41"/></name><operator pos:line="13" pos:column="41">-&gt;<pos:position pos:line="13" pos:column="46"/></operator><name pos:line="13" pos:column="43">nr<pos:position pos:line="13" pos:column="45"/></name></name> <operator pos:line="13" pos:column="46">+<pos:position pos:line="13" pos:column="47"/></operator> <literal type="number" pos:line="13" pos:column="48">1<pos:position pos:line="13" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="51">values<pos:position pos:line="13" pos:column="57"/></name><operator pos:line="13" pos:column="57">-&gt;<pos:position pos:line="13" pos:column="62"/></operator><name pos:line="13" pos:column="59">alloc<pos:position pos:line="13" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="66"/></expr_stmt>

	<return pos:line="15" pos:column="9">return <expr><call><name pos:line="15" pos:column="16">format_config<pos:position pos:line="15" pos:column="29"/></name><argument_list pos:line="15" pos:column="29">(<argument><expr><operator pos:line="15" pos:column="30">&amp;<pos:position pos:line="15" pos:column="35"/></operator><name><name pos:line="15" pos:column="31">values<pos:position pos:line="15" pos:column="37"/></name><operator pos:line="15" pos:column="37">-&gt;<pos:position pos:line="15" pos:column="42"/></operator><name pos:line="15" pos:column="39">items<pos:position pos:line="15" pos:column="44"/></name><index pos:line="15" pos:column="44">[<expr><name><name pos:line="15" pos:column="45">values<pos:position pos:line="15" pos:column="51"/></name><operator pos:line="15" pos:column="51">-&gt;<pos:position pos:line="15" pos:column="56"/></operator><name pos:line="15" pos:column="53">nr<pos:position pos:line="15" pos:column="55"/></name></name><operator pos:line="15" pos:column="55">++<pos:position pos:line="15" pos:column="57"/></operator></expr>]<pos:position pos:line="15" pos:column="58"/></index></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="60">key_<pos:position pos:line="15" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="66">value_<pos:position pos:line="15" pos:column="72"/></name></expr></argument>)<pos:position pos:line="15" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="74"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

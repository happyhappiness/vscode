<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5481.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">grep_cache<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name><name pos:line="1" pos:column="23">struct<pos:position pos:line="1" pos:column="29"/></name> <name pos:line="1" pos:column="30">grep_opt<pos:position pos:line="1" pos:column="38"/></name></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">opt<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="45">const<pos:position pos:line="1" pos:column="50"/></specifier> <name><name pos:line="1" pos:column="51">struct<pos:position pos:line="1" pos:column="57"/></name> <name pos:line="1" pos:column="58">pathspec<pos:position pos:line="1" pos:column="66"/></name></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">pathspec<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="78">int<pos:position pos:line="1" pos:column="81"/></name></type> <name pos:line="1" pos:column="82">cached<pos:position pos:line="1" pos:column="88"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="89"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">hit<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><literal type="number" pos:line="3" pos:column="19">0<pos:position pos:line="3" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">nr<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
	<expr_stmt><expr><call><name pos:line="5" pos:column="9">read_cache<pos:position pos:line="5" pos:column="19"/></name><argument_list pos:line="5" pos:column="19">()<pos:position pos:line="5" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="22"/></expr_stmt>

	<for pos:line="7" pos:column="9">for <control pos:line="7" pos:column="13">(<init><expr><name pos:line="7" pos:column="14">nr<pos:position pos:line="7" pos:column="16"/></name> <operator pos:line="7" pos:column="17">=<pos:position pos:line="7" pos:column="18"/></operator> <literal type="number" pos:line="7" pos:column="19">0<pos:position pos:line="7" pos:column="20"/></literal></expr>;<pos:position pos:line="7" pos:column="21"/></init> <condition><expr><name pos:line="7" pos:column="22">nr<pos:position pos:line="7" pos:column="24"/></name> <operator pos:line="7" pos:column="25">&lt;<pos:position pos:line="7" pos:column="29"/></operator> <name pos:line="7" pos:column="27">active_nr<pos:position pos:line="7" pos:column="36"/></name></expr>;<pos:position pos:line="7" pos:column="37"/></condition> <incr><expr><name pos:line="7" pos:column="38">nr<pos:position pos:line="7" pos:column="40"/></name><operator pos:line="7" pos:column="40">++<pos:position pos:line="7" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="7" pos:column="43"/></control> <block pos:line="7" pos:column="44">{
		<decl_stmt><decl><type><specifier pos:line="8" pos:column="17">const<pos:position pos:line="8" pos:column="22"/></specifier> <name><name pos:line="8" pos:column="23">struct<pos:position pos:line="8" pos:column="29"/></name> <name pos:line="8" pos:column="30">cache_entry<pos:position pos:line="8" pos:column="41"/></name></name> <modifier pos:line="8" pos:column="42">*<pos:position pos:line="8" pos:column="43"/></modifier></type><name pos:line="8" pos:column="43">ce<pos:position pos:line="8" pos:column="45"/></name> <init pos:line="8" pos:column="46">= <expr><name><name pos:line="8" pos:column="48">active_cache<pos:position pos:line="8" pos:column="60"/></name><index pos:line="8" pos:column="60">[<expr><name pos:line="8" pos:column="61">nr<pos:position pos:line="8" pos:column="63"/></name></expr>]<pos:position pos:line="8" pos:column="64"/></index></name></expr></init></decl>;<pos:position pos:line="8" pos:column="65"/></decl_stmt>
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><operator pos:line="9" pos:column="21">!<pos:position pos:line="9" pos:column="22"/></operator><call><name pos:line="9" pos:column="22">S_ISREG<pos:position pos:line="9" pos:column="29"/></name><argument_list pos:line="9" pos:column="29">(<argument><expr><name><name pos:line="9" pos:column="30">ce<pos:position pos:line="9" pos:column="32"/></name><operator pos:line="9" pos:column="32">-&gt;<pos:position pos:line="9" pos:column="37"/></operator><name pos:line="9" pos:column="34">ce_mode<pos:position pos:line="9" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="43"/></condition><then pos:line="9" pos:column="43">
			<block type="pseudo"><continue pos:line="10" pos:column="25">continue;<pos:position pos:line="10" pos:column="34"/></continue></block></then></if>
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><operator pos:line="11" pos:column="21">!<pos:position pos:line="11" pos:column="22"/></operator><call><name pos:line="11" pos:column="22">ce_path_match<pos:position pos:line="11" pos:column="35"/></name><argument_list pos:line="11" pos:column="35">(<argument><expr><name pos:line="11" pos:column="36">ce<pos:position pos:line="11" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="40">pathspec<pos:position pos:line="11" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="50">NULL<pos:position pos:line="11" pos:column="54"/></name></expr></argument>)<pos:position pos:line="11" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="56"/></condition><then pos:line="11" pos:column="56">
			<block type="pseudo"><continue pos:line="12" pos:column="25">continue;<pos:position pos:line="12" pos:column="34"/></continue></block></then></if>
		<comment type="block" pos:line="13" pos:column="17">/*
		 * If CE_VALID is on, we assume worktree file and its cache entry
		 * are identical, even if worktree file has been modified, so use
		 * cache version instead
		 */</comment>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><name pos:line="18" pos:column="21">cached<pos:position pos:line="18" pos:column="27"/></name> <operator pos:line="18" pos:column="28">||<pos:position pos:line="18" pos:column="30"/></operator> <operator pos:line="18" pos:column="31">(<pos:position pos:line="18" pos:column="32"/></operator><name><name pos:line="18" pos:column="32">ce<pos:position pos:line="18" pos:column="34"/></name><operator pos:line="18" pos:column="34">-&gt;<pos:position pos:line="18" pos:column="39"/></operator><name pos:line="18" pos:column="36">ce_flags<pos:position pos:line="18" pos:column="44"/></name></name> <operator pos:line="18" pos:column="45">&amp;<pos:position pos:line="18" pos:column="50"/></operator> <name pos:line="18" pos:column="47">CE_VALID<pos:position pos:line="18" pos:column="55"/></name><operator pos:line="18" pos:column="55">)<pos:position pos:line="18" pos:column="56"/></operator> <operator pos:line="18" pos:column="57">||<pos:position pos:line="18" pos:column="59"/></operator> <call><name pos:line="18" pos:column="60">ce_skip_worktree<pos:position pos:line="18" pos:column="76"/></name><argument_list pos:line="18" pos:column="76">(<argument><expr><name pos:line="18" pos:column="77">ce<pos:position pos:line="18" pos:column="79"/></name></expr></argument>)<pos:position pos:line="18" pos:column="80"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="81"/></condition><then pos:line="18" pos:column="81"> <block pos:line="18" pos:column="82">{
			<if pos:line="19" pos:column="25">if <condition pos:line="19" pos:column="28">(<expr><call><name pos:line="19" pos:column="29">ce_stage<pos:position pos:line="19" pos:column="37"/></name><argument_list pos:line="19" pos:column="37">(<argument><expr><name pos:line="19" pos:column="38">ce<pos:position pos:line="19" pos:column="40"/></name></expr></argument>)<pos:position pos:line="19" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="42"/></condition><then pos:line="19" pos:column="42">
				<block type="pseudo"><continue pos:line="20" pos:column="33">continue;<pos:position pos:line="20" pos:column="42"/></continue></block></then></if>
			<expr_stmt><expr><name pos:line="21" pos:column="25">hit<pos:position pos:line="21" pos:column="28"/></name> <operator pos:line="21" pos:column="29">|=<pos:position pos:line="21" pos:column="31"/></operator> <call><name pos:line="21" pos:column="32">grep_sha1<pos:position pos:line="21" pos:column="41"/></name><argument_list pos:line="21" pos:column="41">(<argument><expr><name pos:line="21" pos:column="42">opt<pos:position pos:line="21" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="47">ce<pos:position pos:line="21" pos:column="49"/></name><operator pos:line="21" pos:column="49">-&gt;<pos:position pos:line="21" pos:column="54"/></operator><name pos:line="21" pos:column="51">sha1<pos:position pos:line="21" pos:column="55"/></name></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="57">ce<pos:position pos:line="21" pos:column="59"/></name><operator pos:line="21" pos:column="59">-&gt;<pos:position pos:line="21" pos:column="64"/></operator><name pos:line="21" pos:column="61">name<pos:position pos:line="21" pos:column="65"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="67">0<pos:position pos:line="21" pos:column="68"/></literal></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="70">ce<pos:position pos:line="21" pos:column="72"/></name><operator pos:line="21" pos:column="72">-&gt;<pos:position pos:line="21" pos:column="77"/></operator><name pos:line="21" pos:column="74">name<pos:position pos:line="21" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="80"/></expr_stmt>
		}<pos:position pos:line="22" pos:column="18"/></block></then>
		<else pos:line="23" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="25">hit<pos:position pos:line="24" pos:column="28"/></name> <operator pos:line="24" pos:column="29">|=<pos:position pos:line="24" pos:column="31"/></operator> <call><name pos:line="24" pos:column="32">grep_file<pos:position pos:line="24" pos:column="41"/></name><argument_list pos:line="24" pos:column="41">(<argument><expr><name pos:line="24" pos:column="42">opt<pos:position pos:line="24" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="47">ce<pos:position pos:line="24" pos:column="49"/></name><operator pos:line="24" pos:column="49">-&gt;<pos:position pos:line="24" pos:column="54"/></operator><name pos:line="24" pos:column="51">name<pos:position pos:line="24" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="57"/></expr_stmt></block></else></if>
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><call><name pos:line="25" pos:column="21">ce_stage<pos:position pos:line="25" pos:column="29"/></name><argument_list pos:line="25" pos:column="29">(<argument><expr><name pos:line="25" pos:column="30">ce<pos:position pos:line="25" pos:column="32"/></name></expr></argument>)<pos:position pos:line="25" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="34"/></condition><then pos:line="25" pos:column="34"> <block pos:line="25" pos:column="35">{
			<do pos:line="26" pos:column="25">do <block pos:line="26" pos:column="28">{
				<expr_stmt><expr><name pos:line="27" pos:column="33">nr<pos:position pos:line="27" pos:column="35"/></name><operator pos:line="27" pos:column="35">++<pos:position pos:line="27" pos:column="37"/></operator></expr>;<pos:position pos:line="27" pos:column="38"/></expr_stmt>
			}<pos:position pos:line="28" pos:column="26"/></block> while <condition pos:line="28" pos:column="33">(<expr><name pos:line="28" pos:column="34">nr<pos:position pos:line="28" pos:column="36"/></name> <operator pos:line="28" pos:column="37">&lt;<pos:position pos:line="28" pos:column="41"/></operator> <name pos:line="28" pos:column="39">active_nr<pos:position pos:line="28" pos:column="48"/></name> <operator pos:line="28" pos:column="49">&amp;&amp;<pos:position pos:line="28" pos:column="59"/></operator>
				 <operator pos:line="29" pos:column="34">!<pos:position pos:line="29" pos:column="35"/></operator><call><name pos:line="29" pos:column="35">strcmp<pos:position pos:line="29" pos:column="41"/></name><argument_list pos:line="29" pos:column="41">(<argument><expr><name><name pos:line="29" pos:column="42">ce<pos:position pos:line="29" pos:column="44"/></name><operator pos:line="29" pos:column="44">-&gt;<pos:position pos:line="29" pos:column="49"/></operator><name pos:line="29" pos:column="46">name<pos:position pos:line="29" pos:column="50"/></name></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="52">active_cache<pos:position pos:line="29" pos:column="64"/></name><index pos:line="29" pos:column="64">[<expr><name pos:line="29" pos:column="65">nr<pos:position pos:line="29" pos:column="67"/></name></expr>]<pos:position pos:line="29" pos:column="68"/></index></name><operator pos:line="29" pos:column="68">-&gt;<pos:position pos:line="29" pos:column="73"/></operator><name pos:line="29" pos:column="70">name<pos:position pos:line="29" pos:column="74"/></name></expr></argument>)<pos:position pos:line="29" pos:column="75"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="76"/></condition>;<pos:position pos:line="29" pos:column="77"/></do>
			<expr_stmt><expr><name pos:line="30" pos:column="25">nr<pos:position pos:line="30" pos:column="27"/></name><operator pos:line="30" pos:column="27">--<pos:position pos:line="30" pos:column="29"/></operator></expr>;<pos:position pos:line="30" pos:column="30"/></expr_stmt> <comment type="block" pos:line="30" pos:column="31">/* compensate for loop control */</comment>
		}<pos:position pos:line="31" pos:column="18"/></block></then></if>
		<if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><name pos:line="32" pos:column="21">hit<pos:position pos:line="32" pos:column="24"/></name> <operator pos:line="32" pos:column="25">&amp;&amp;<pos:position pos:line="32" pos:column="35"/></operator> <name><name pos:line="32" pos:column="28">opt<pos:position pos:line="32" pos:column="31"/></name><operator pos:line="32" pos:column="31">-&gt;<pos:position pos:line="32" pos:column="36"/></operator><name pos:line="32" pos:column="33">status_only<pos:position pos:line="32" pos:column="44"/></name></name></expr>)<pos:position pos:line="32" pos:column="45"/></condition><then pos:line="32" pos:column="45">
			<block type="pseudo"><break pos:line="33" pos:column="25">break;<pos:position pos:line="33" pos:column="31"/></break></block></then></if>
	}<pos:position pos:line="34" pos:column="10"/></block></for>
	<return pos:line="35" pos:column="9">return <expr><name pos:line="35" pos:column="16">hit<pos:position pos:line="35" pos:column="19"/></name></expr>;<pos:position pos:line="35" pos:column="20"/></return>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

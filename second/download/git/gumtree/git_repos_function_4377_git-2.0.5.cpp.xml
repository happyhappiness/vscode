<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4377_git-2.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">git_show_branch_config<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><specifier pos:line="1" pos:column="35">const<pos:position pos:line="1" pos:column="40"/></specifier> <name pos:line="1" pos:column="41">char<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">var<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="52">const<pos:position pos:line="1" pos:column="57"/></specifier> <name pos:line="1" pos:column="58">char<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">value<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="71">void<pos:position pos:line="1" pos:column="75"/></name> <modifier pos:line="1" pos:column="76">*<pos:position pos:line="1" pos:column="77"/></modifier></type><name pos:line="1" pos:column="77">cb<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="80"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><operator pos:line="3" pos:column="13">!<pos:position pos:line="3" pos:column="14"/></operator><call><name pos:line="3" pos:column="14">strcmp<pos:position pos:line="3" pos:column="20"/></name><argument_list pos:line="3" pos:column="20">(<argument><expr><name pos:line="3" pos:column="21">var<pos:position pos:line="3" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="3" pos:column="26">"showbranch.default"<pos:position pos:line="3" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="48"/></condition><then pos:line="3" pos:column="48"> <block pos:line="3" pos:column="49">{
		<if pos:line="4" pos:column="17">if <condition pos:line="4" pos:column="20">(<expr><operator pos:line="4" pos:column="21">!<pos:position pos:line="4" pos:column="22"/></operator><name pos:line="4" pos:column="22">value<pos:position pos:line="4" pos:column="27"/></name></expr>)<pos:position pos:line="4" pos:column="28"/></condition><then pos:line="4" pos:column="28">
			<block type="pseudo"><return pos:line="5" pos:column="25">return <expr><call><name pos:line="5" pos:column="32">config_error_nonbool<pos:position pos:line="5" pos:column="52"/></name><argument_list pos:line="5" pos:column="52">(<argument><expr><name pos:line="5" pos:column="53">var<pos:position pos:line="5" pos:column="56"/></name></expr></argument>)<pos:position pos:line="5" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="58"/></return></block></then></if>
		<comment type="block" pos:line="6" pos:column="17">/*
		 * default_arg is now passed to parse_options(), so we need to
		 * mimic the real argv a bit better.
		 */</comment>
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><operator pos:line="10" pos:column="21">!<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="22">default_num<pos:position pos:line="10" pos:column="33"/></name></expr>)<pos:position pos:line="10" pos:column="34"/></condition><then pos:line="10" pos:column="34"> <block pos:line="10" pos:column="35">{
			<expr_stmt><expr><name pos:line="11" pos:column="25">default_alloc<pos:position pos:line="11" pos:column="38"/></name> <operator pos:line="11" pos:column="39">=<pos:position pos:line="11" pos:column="40"/></operator> <literal type="number" pos:line="11" pos:column="41">20<pos:position pos:line="11" pos:column="43"/></literal></expr>;<pos:position pos:line="11" pos:column="44"/></expr_stmt>
			<expr_stmt><expr><name pos:line="12" pos:column="25">default_arg<pos:position pos:line="12" pos:column="36"/></name> <operator pos:line="12" pos:column="37">=<pos:position pos:line="12" pos:column="38"/></operator> <call><name pos:line="12" pos:column="39">xcalloc<pos:position pos:line="12" pos:column="46"/></name><argument_list pos:line="12" pos:column="46">(<argument><expr><name pos:line="12" pos:column="47">default_alloc<pos:position pos:line="12" pos:column="60"/></name></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="62">sizeof<argument_list pos:line="12" pos:column="68">(<argument><expr><operator pos:line="12" pos:column="69">*<pos:position pos:line="12" pos:column="70"/></operator><name pos:line="12" pos:column="70">default_arg<pos:position pos:line="12" pos:column="81"/></name></expr></argument>)<pos:position pos:line="12" pos:column="82"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="84"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="13" pos:column="25">default_arg<pos:position pos:line="13" pos:column="36"/></name><index pos:line="13" pos:column="36">[<expr><name pos:line="13" pos:column="37">default_num<pos:position pos:line="13" pos:column="48"/></name><operator pos:line="13" pos:column="48">++<pos:position pos:line="13" pos:column="50"/></operator></expr>]<pos:position pos:line="13" pos:column="51"/></index></name> <operator pos:line="13" pos:column="52">=<pos:position pos:line="13" pos:column="53"/></operator> <literal type="string" pos:line="13" pos:column="54">"show-branch"<pos:position pos:line="13" pos:column="67"/></literal></expr>;<pos:position pos:line="13" pos:column="68"/></expr_stmt>
		}<pos:position pos:line="14" pos:column="18"/></block></then> <elseif pos:line="14" pos:column="19">else <if pos:line="14" pos:column="24">if <condition pos:line="14" pos:column="27">(<expr><name pos:line="14" pos:column="28">default_alloc<pos:position pos:line="14" pos:column="41"/></name> <operator pos:line="14" pos:column="42">&lt;=<pos:position pos:line="14" pos:column="47"/></operator> <name pos:line="14" pos:column="45">default_num<pos:position pos:line="14" pos:column="56"/></name> <operator pos:line="14" pos:column="57">+<pos:position pos:line="14" pos:column="58"/></operator> <literal type="number" pos:line="14" pos:column="59">1<pos:position pos:line="14" pos:column="60"/></literal></expr>)<pos:position pos:line="14" pos:column="61"/></condition><then pos:line="14" pos:column="61"> <block pos:line="14" pos:column="62">{
			<expr_stmt><expr><name pos:line="15" pos:column="25">default_alloc<pos:position pos:line="15" pos:column="38"/></name> <operator pos:line="15" pos:column="39">=<pos:position pos:line="15" pos:column="40"/></operator> <name pos:line="15" pos:column="41">default_alloc<pos:position pos:line="15" pos:column="54"/></name> <operator pos:line="15" pos:column="55">*<pos:position pos:line="15" pos:column="56"/></operator> <literal type="number" pos:line="15" pos:column="57">3<pos:position pos:line="15" pos:column="58"/></literal> <operator pos:line="15" pos:column="59">/<pos:position pos:line="15" pos:column="60"/></operator> <literal type="number" pos:line="15" pos:column="61">2<pos:position pos:line="15" pos:column="62"/></literal> <operator pos:line="15" pos:column="63">+<pos:position pos:line="15" pos:column="64"/></operator> <literal type="number" pos:line="15" pos:column="65">20<pos:position pos:line="15" pos:column="67"/></literal></expr>;<pos:position pos:line="15" pos:column="68"/></expr_stmt>
			<expr_stmt><expr><name pos:line="16" pos:column="25">default_arg<pos:position pos:line="16" pos:column="36"/></name> <operator pos:line="16" pos:column="37">=<pos:position pos:line="16" pos:column="38"/></operator> <call><name pos:line="16" pos:column="39">xrealloc<pos:position pos:line="16" pos:column="47"/></name><argument_list pos:line="16" pos:column="47">(<argument><expr><name pos:line="16" pos:column="48">default_arg<pos:position pos:line="16" pos:column="59"/></name></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="61">sizeof <name><pos:position pos:line="16" pos:column="68"/></name></sizeof>*<name pos:line="16" pos:column="69">default_arg<pos:position pos:line="16" pos:column="80"/></name> <operator pos:line="16" pos:column="81">*<pos:position pos:line="16" pos:column="82"/></operator> <name pos:line="16" pos:column="83">default_alloc<pos:position pos:line="16" pos:column="96"/></name></expr></argument>)<pos:position pos:line="16" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="98"/></expr_stmt>
		}<pos:position pos:line="17" pos:column="18"/></block></then></if></elseif></if>
		<expr_stmt><expr><name><name pos:line="18" pos:column="17">default_arg<pos:position pos:line="18" pos:column="28"/></name><index pos:line="18" pos:column="28">[<expr><name pos:line="18" pos:column="29">default_num<pos:position pos:line="18" pos:column="40"/></name><operator pos:line="18" pos:column="40">++<pos:position pos:line="18" pos:column="42"/></operator></expr>]<pos:position pos:line="18" pos:column="43"/></index></name> <operator pos:line="18" pos:column="44">=<pos:position pos:line="18" pos:column="45"/></operator> <call><name pos:line="18" pos:column="46">xstrdup<pos:position pos:line="18" pos:column="53"/></name><argument_list pos:line="18" pos:column="53">(<argument><expr><name pos:line="18" pos:column="54">value<pos:position pos:line="18" pos:column="59"/></name></expr></argument>)<pos:position pos:line="18" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="61"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="19" pos:column="17">default_arg<pos:position pos:line="19" pos:column="28"/></name><index pos:line="19" pos:column="28">[<expr><name pos:line="19" pos:column="29">default_num<pos:position pos:line="19" pos:column="40"/></name></expr>]<pos:position pos:line="19" pos:column="41"/></index></name> <operator pos:line="19" pos:column="42">=<pos:position pos:line="19" pos:column="43"/></operator> <name pos:line="19" pos:column="44">NULL<pos:position pos:line="19" pos:column="48"/></name></expr>;<pos:position pos:line="19" pos:column="49"/></expr_stmt>
		<return pos:line="20" pos:column="17">return <expr><literal type="number" pos:line="20" pos:column="24">0<pos:position pos:line="20" pos:column="25"/></literal></expr>;<pos:position pos:line="20" pos:column="26"/></return>
	}<pos:position pos:line="21" pos:column="10"/></block></then></if>

	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><operator pos:line="23" pos:column="13">!<pos:position pos:line="23" pos:column="14"/></operator><call><name pos:line="23" pos:column="14">strcmp<pos:position pos:line="23" pos:column="20"/></name><argument_list pos:line="23" pos:column="20">(<argument><expr><name pos:line="23" pos:column="21">var<pos:position pos:line="23" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="26">"color.showbranch"<pos:position pos:line="23" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="46"/></condition><then pos:line="23" pos:column="46"> <block pos:line="23" pos:column="47">{
		<expr_stmt><expr><name pos:line="24" pos:column="17">showbranch_use_color<pos:position pos:line="24" pos:column="37"/></name> <operator pos:line="24" pos:column="38">=<pos:position pos:line="24" pos:column="39"/></operator> <call><name pos:line="24" pos:column="40">git_config_colorbool<pos:position pos:line="24" pos:column="60"/></name><argument_list pos:line="24" pos:column="60">(<argument><expr><name pos:line="24" pos:column="61">var<pos:position pos:line="24" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="66">value<pos:position pos:line="24" pos:column="71"/></name></expr></argument>)<pos:position pos:line="24" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="73"/></expr_stmt>
		<return pos:line="25" pos:column="17">return <expr><literal type="number" pos:line="25" pos:column="24">0<pos:position pos:line="25" pos:column="25"/></literal></expr>;<pos:position pos:line="25" pos:column="26"/></return>
	}<pos:position pos:line="26" pos:column="10"/></block></then></if>

	<return pos:line="28" pos:column="9">return <expr><call><name pos:line="28" pos:column="16">git_color_default_config<pos:position pos:line="28" pos:column="40"/></name><argument_list pos:line="28" pos:column="40">(<argument><expr><name pos:line="28" pos:column="41">var<pos:position pos:line="28" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="46">value<pos:position pos:line="28" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="53">cb<pos:position pos:line="28" pos:column="55"/></name></expr></argument>)<pos:position pos:line="28" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="57"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3757_git-2.1.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">in_commit_list<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name><name pos:line="1" pos:column="33">struct<pos:position pos:line="1" pos:column="39"/></name> <name pos:line="1" pos:column="40">commit_list<pos:position pos:line="1" pos:column="51"/></name></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">want<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="59">struct<pos:position pos:line="1" pos:column="65"/></name> <name pos:line="1" pos:column="66">commit<pos:position pos:line="1" pos:column="72"/></name></name> <modifier pos:line="1" pos:column="73">*<pos:position pos:line="1" pos:column="74"/></modifier></type><name pos:line="1" pos:column="74">c<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="76"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<for pos:line="3" pos:column="9">for <control pos:line="3" pos:column="13">(<init pos:line="3" pos:column="14">;<pos:position pos:line="3" pos:column="15"/></init> <condition><expr><name pos:line="3" pos:column="16">want<pos:position pos:line="3" pos:column="20"/></name></expr>;<pos:position pos:line="3" pos:column="21"/></condition> <incr><expr><name pos:line="3" pos:column="22">want<pos:position pos:line="3" pos:column="26"/></name> <operator pos:line="3" pos:column="27">=<pos:position pos:line="3" pos:column="28"/></operator> <name><name pos:line="3" pos:column="29">want<pos:position pos:line="3" pos:column="33"/></name><operator pos:line="3" pos:column="33">-&gt;<pos:position pos:line="3" pos:column="38"/></operator><name pos:line="3" pos:column="35">next<pos:position pos:line="3" pos:column="39"/></name></name></expr></incr>)<pos:position pos:line="3" pos:column="40"/></control>
		<block type="pseudo"><if pos:line="4" pos:column="17">if <condition pos:line="4" pos:column="20">(<expr><operator pos:line="4" pos:column="21">!<pos:position pos:line="4" pos:column="22"/></operator><call><name pos:line="4" pos:column="22">hashcmp<pos:position pos:line="4" pos:column="29"/></name><argument_list pos:line="4" pos:column="29">(<argument><expr><name><name pos:line="4" pos:column="30">want<pos:position pos:line="4" pos:column="34"/></name><operator pos:line="4" pos:column="34">-&gt;<pos:position pos:line="4" pos:column="39"/></operator><name pos:line="4" pos:column="36">item<pos:position pos:line="4" pos:column="40"/></name><operator pos:line="4" pos:column="40">-&gt;<pos:position pos:line="4" pos:column="45"/></operator><name pos:line="4" pos:column="42">object<pos:position pos:line="4" pos:column="48"/></name><operator pos:line="4" pos:column="48">.<pos:position pos:line="4" pos:column="49"/></operator><name pos:line="4" pos:column="49">sha1<pos:position pos:line="4" pos:column="53"/></name></name></expr></argument>, <argument><expr><name><name pos:line="4" pos:column="55">c<pos:position pos:line="4" pos:column="56"/></name><operator pos:line="4" pos:column="56">-&gt;<pos:position pos:line="4" pos:column="61"/></operator><name pos:line="4" pos:column="58">object<pos:position pos:line="4" pos:column="64"/></name><operator pos:line="4" pos:column="64">.<pos:position pos:line="4" pos:column="65"/></operator><name pos:line="4" pos:column="65">sha1<pos:position pos:line="4" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="71"/></condition><then pos:line="4" pos:column="71">
			<block type="pseudo"><return pos:line="5" pos:column="25">return <expr><literal type="number" pos:line="5" pos:column="32">1<pos:position pos:line="5" pos:column="33"/></literal></expr>;<pos:position pos:line="5" pos:column="34"/></return></block></then></if></block></for>
	<return pos:line="6" pos:column="9">return <expr><literal type="number" pos:line="6" pos:column="16">0<pos:position pos:line="6" pos:column="17"/></literal></expr>;<pos:position pos:line="6" pos:column="18"/></return>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

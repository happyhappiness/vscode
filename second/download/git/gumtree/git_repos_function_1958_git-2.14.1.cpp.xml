<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1958_git-2.14.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">check_auto_color<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">void<pos:position pos:line="1" pos:column="33"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="34"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><name pos:line="3" pos:column="13">color_stdout_is_tty<pos:position pos:line="3" pos:column="32"/></name> <operator pos:line="3" pos:column="33">&lt;<pos:position pos:line="3" pos:column="37"/></operator> <literal type="number" pos:line="3" pos:column="35">0<pos:position pos:line="3" pos:column="36"/></literal></expr>)<pos:position pos:line="3" pos:column="37"/></condition><then pos:line="3" pos:column="37">
		<block type="pseudo"><expr_stmt><expr><name pos:line="4" pos:column="17">color_stdout_is_tty<pos:position pos:line="4" pos:column="36"/></name> <operator pos:line="4" pos:column="37">=<pos:position pos:line="4" pos:column="38"/></operator> <call><name pos:line="4" pos:column="39">isatty<pos:position pos:line="4" pos:column="45"/></name><argument_list pos:line="4" pos:column="45">(<argument><expr><literal type="number" pos:line="4" pos:column="46">1<pos:position pos:line="4" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="49"/></expr_stmt></block></then></if>
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">color_stdout_is_tty<pos:position pos:line="5" pos:column="32"/></name> <operator pos:line="5" pos:column="33">||<pos:position pos:line="5" pos:column="35"/></operator> <operator pos:line="5" pos:column="36">(<pos:position pos:line="5" pos:column="37"/></operator><call><name pos:line="5" pos:column="37">pager_in_use<pos:position pos:line="5" pos:column="49"/></name><argument_list pos:line="5" pos:column="49">()<pos:position pos:line="5" pos:column="51"/></argument_list></call> <operator pos:line="5" pos:column="52">&amp;&amp;<pos:position pos:line="5" pos:column="62"/></operator> <name pos:line="5" pos:column="55">pager_use_color<pos:position pos:line="5" pos:column="70"/></name><operator pos:line="5" pos:column="70">)<pos:position pos:line="5" pos:column="71"/></operator></expr>)<pos:position pos:line="5" pos:column="72"/></condition><then pos:line="5" pos:column="72"> <block pos:line="5" pos:column="73">{
		<decl_stmt><decl><type><name pos:line="6" pos:column="17">char<pos:position pos:line="6" pos:column="21"/></name> <modifier pos:line="6" pos:column="22">*<pos:position pos:line="6" pos:column="23"/></modifier></type><name pos:line="6" pos:column="23">term<pos:position pos:line="6" pos:column="27"/></name> <init pos:line="6" pos:column="28">= <expr><call><name pos:line="6" pos:column="30">getenv<pos:position pos:line="6" pos:column="36"/></name><argument_list pos:line="6" pos:column="36">(<argument><expr><literal type="string" pos:line="6" pos:column="37">"TERM"<pos:position pos:line="6" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="45"/></decl_stmt>
		<if pos:line="7" pos:column="17">if <condition pos:line="7" pos:column="20">(<expr><name pos:line="7" pos:column="21">term<pos:position pos:line="7" pos:column="25"/></name> <operator pos:line="7" pos:column="26">&amp;&amp;<pos:position pos:line="7" pos:column="36"/></operator> <call><name pos:line="7" pos:column="29">strcmp<pos:position pos:line="7" pos:column="35"/></name><argument_list pos:line="7" pos:column="35">(<argument><expr><name pos:line="7" pos:column="36">term<pos:position pos:line="7" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="42">"dumb"<pos:position pos:line="7" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="50"/></condition><then pos:line="7" pos:column="50">
			<block type="pseudo"><return pos:line="8" pos:column="25">return <expr><literal type="number" pos:line="8" pos:column="32">1<pos:position pos:line="8" pos:column="33"/></literal></expr>;<pos:position pos:line="8" pos:column="34"/></return></block></then></if>
	}<pos:position pos:line="9" pos:column="10"/></block></then></if>
	<return pos:line="10" pos:column="9">return <expr><literal type="number" pos:line="10" pos:column="16">0<pos:position pos:line="10" pos:column="17"/></literal></expr>;<pos:position pos:line="10" pos:column="18"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3985_git-2.12.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <specifier pos:line="1" pos:column="8">inline<pos:position pos:line="1" pos:column="14"/></specifier> <type><name pos:line="1" pos:column="15">int<pos:position pos:line="1" pos:column="18"/></name></type> <name pos:line="1" pos:column="19">at_mark<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">string<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">int<pos:position pos:line="1" pos:column="50"/></name></type> <name pos:line="1" pos:column="51">len<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>,
			  <parameter><decl><type><specifier pos:line="2" pos:column="27">const<pos:position pos:line="2" pos:column="32"/></specifier> <name pos:line="2" pos:column="33">char<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier><modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type><name pos:line="2" pos:column="40">suffix<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="48">int<pos:position pos:line="2" pos:column="51"/></name></type> <name pos:line="2" pos:column="52">nr<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">i<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>

	<for pos:line="6" pos:column="9">for <control pos:line="6" pos:column="13">(<init><expr><name pos:line="6" pos:column="14">i<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">=<pos:position pos:line="6" pos:column="17"/></operator> <literal type="number" pos:line="6" pos:column="18">0<pos:position pos:line="6" pos:column="19"/></literal></expr>;<pos:position pos:line="6" pos:column="20"/></init> <condition><expr><name pos:line="6" pos:column="21">i<pos:position pos:line="6" pos:column="22"/></name> <operator pos:line="6" pos:column="23">&lt;<pos:position pos:line="6" pos:column="27"/></operator> <name pos:line="6" pos:column="25">nr<pos:position pos:line="6" pos:column="27"/></name></expr>;<pos:position pos:line="6" pos:column="28"/></condition> <incr><expr><name pos:line="6" pos:column="29">i<pos:position pos:line="6" pos:column="30"/></name><operator pos:line="6" pos:column="30">++<pos:position pos:line="6" pos:column="32"/></operator></expr></incr>)<pos:position pos:line="6" pos:column="33"/></control> <block pos:line="6" pos:column="34">{
		<decl_stmt><decl><type><name pos:line="7" pos:column="17">int<pos:position pos:line="7" pos:column="20"/></name></type> <name pos:line="7" pos:column="21">suffix_len<pos:position pos:line="7" pos:column="31"/></name> <init pos:line="7" pos:column="32">= <expr><call><name pos:line="7" pos:column="34">strlen<pos:position pos:line="7" pos:column="40"/></name><argument_list pos:line="7" pos:column="40">(<argument><expr><name><name pos:line="7" pos:column="41">suffix<pos:position pos:line="7" pos:column="47"/></name><index pos:line="7" pos:column="47">[<expr><name pos:line="7" pos:column="48">i<pos:position pos:line="7" pos:column="49"/></name></expr>]<pos:position pos:line="7" pos:column="50"/></index></name></expr></argument>)<pos:position pos:line="7" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="52"/></decl_stmt>
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><name pos:line="8" pos:column="21">suffix_len<pos:position pos:line="8" pos:column="31"/></name> <operator pos:line="8" pos:column="32">&lt;=<pos:position pos:line="8" pos:column="37"/></operator> <name pos:line="8" pos:column="35">len<pos:position pos:line="8" pos:column="38"/></name>
		    <operator pos:line="9" pos:column="21">&amp;&amp;<pos:position pos:line="9" pos:column="31"/></operator> <operator pos:line="9" pos:column="24">!<pos:position pos:line="9" pos:column="25"/></operator><call><name pos:line="9" pos:column="25">memcmp<pos:position pos:line="9" pos:column="31"/></name><argument_list pos:line="9" pos:column="31">(<argument><expr><name pos:line="9" pos:column="32">string<pos:position pos:line="9" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="40">suffix<pos:position pos:line="9" pos:column="46"/></name><index pos:line="9" pos:column="46">[<expr><name pos:line="9" pos:column="47">i<pos:position pos:line="9" pos:column="48"/></name></expr>]<pos:position pos:line="9" pos:column="49"/></index></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="51">suffix_len<pos:position pos:line="9" pos:column="61"/></name></expr></argument>)<pos:position pos:line="9" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="63"/></condition><then pos:line="9" pos:column="63">
			<block type="pseudo"><return pos:line="10" pos:column="25">return <expr><name pos:line="10" pos:column="32">suffix_len<pos:position pos:line="10" pos:column="42"/></name></expr>;<pos:position pos:line="10" pos:column="43"/></return></block></then></if>
	}<pos:position pos:line="11" pos:column="10"/></block></for>
	<return pos:line="12" pos:column="9">return <expr><literal type="number" pos:line="12" pos:column="16">0<pos:position pos:line="12" pos:column="17"/></literal></expr>;<pos:position pos:line="12" pos:column="18"/></return>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

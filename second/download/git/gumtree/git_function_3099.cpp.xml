<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_3099.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">show_filemodify<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name><name pos:line="1" pos:column="29">struct<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">diff_queue_struct<pos:position pos:line="1" pos:column="53"/></name></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">q<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>,
			    <parameter><decl><type><name><name pos:line="2" pos:column="29">struct<pos:position pos:line="2" pos:column="35"/></name> <name pos:line="2" pos:column="36">diff_options<pos:position pos:line="2" pos:column="48"/></name></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">options<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="59">void<pos:position pos:line="2" pos:column="63"/></name> <modifier pos:line="2" pos:column="64">*<pos:position pos:line="2" pos:column="65"/></modifier></type><name pos:line="2" pos:column="65">data<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="70"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">i<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>

	<comment type="block" pos:line="6" pos:column="9">/*
	 * Handle files below a directory first, in case they are all deleted
	 * and the directory changes to a file or symlink.
	 */</comment>
	<expr_stmt><expr><call><name pos:line="10" pos:column="9">qsort<pos:position pos:line="10" pos:column="14"/></name><argument_list pos:line="10" pos:column="14">(<argument><expr><name><name pos:line="10" pos:column="15">q<pos:position pos:line="10" pos:column="16"/></name><operator pos:line="10" pos:column="16">-&gt;<pos:position pos:line="10" pos:column="21"/></operator><name pos:line="10" pos:column="18">queue<pos:position pos:line="10" pos:column="23"/></name></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="25">q<pos:position pos:line="10" pos:column="26"/></name><operator pos:line="10" pos:column="26">-&gt;<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="28">nr<pos:position pos:line="10" pos:column="30"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="32">sizeof<argument_list pos:line="10" pos:column="38">(<argument><expr><name><name pos:line="10" pos:column="39">q<pos:position pos:line="10" pos:column="40"/></name><operator pos:line="10" pos:column="40">-&gt;<pos:position pos:line="10" pos:column="45"/></operator><name pos:line="10" pos:column="42">queue<pos:position pos:line="10" pos:column="47"/></name><index pos:line="10" pos:column="47">[<expr><literal type="number" pos:line="10" pos:column="48">0<pos:position pos:line="10" pos:column="49"/></literal></expr>]<pos:position pos:line="10" pos:column="50"/></index></name></expr></argument>)<pos:position pos:line="10" pos:column="51"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="10" pos:column="53">depth_first<pos:position pos:line="10" pos:column="64"/></name></expr></argument>)<pos:position pos:line="10" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="66"/></expr_stmt>

	<for pos:line="12" pos:column="9">for <control pos:line="12" pos:column="13">(<init><expr><name pos:line="12" pos:column="14">i<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <literal type="number" pos:line="12" pos:column="18">0<pos:position pos:line="12" pos:column="19"/></literal></expr>;<pos:position pos:line="12" pos:column="20"/></init> <condition><expr><name pos:line="12" pos:column="21">i<pos:position pos:line="12" pos:column="22"/></name> <operator pos:line="12" pos:column="23">&lt;<pos:position pos:line="12" pos:column="27"/></operator> <name><name pos:line="12" pos:column="25">q<pos:position pos:line="12" pos:column="26"/></name><operator pos:line="12" pos:column="26">-&gt;<pos:position pos:line="12" pos:column="31"/></operator><name pos:line="12" pos:column="28">nr<pos:position pos:line="12" pos:column="30"/></name></name></expr>;<pos:position pos:line="12" pos:column="31"/></condition> <incr><expr><name pos:line="12" pos:column="32">i<pos:position pos:line="12" pos:column="33"/></name><operator pos:line="12" pos:column="33">++<pos:position pos:line="12" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="12" pos:column="36"/></control> <block pos:line="12" pos:column="37">{
		<decl_stmt><decl><type><name><name pos:line="13" pos:column="17">struct<pos:position pos:line="13" pos:column="23"/></name> <name pos:line="13" pos:column="24">diff_filespec<pos:position pos:line="13" pos:column="37"/></name></name> <modifier pos:line="13" pos:column="38">*<pos:position pos:line="13" pos:column="39"/></modifier></type><name pos:line="13" pos:column="39">ospec<pos:position pos:line="13" pos:column="44"/></name> <init pos:line="13" pos:column="45">= <expr><name><name pos:line="13" pos:column="47">q<pos:position pos:line="13" pos:column="48"/></name><operator pos:line="13" pos:column="48">-&gt;<pos:position pos:line="13" pos:column="53"/></operator><name pos:line="13" pos:column="50">queue<pos:position pos:line="13" pos:column="55"/></name><index pos:line="13" pos:column="55">[<expr><name pos:line="13" pos:column="56">i<pos:position pos:line="13" pos:column="57"/></name></expr>]<pos:position pos:line="13" pos:column="58"/></index></name><operator pos:line="13" pos:column="58">-&gt;<pos:position pos:line="13" pos:column="63"/></operator><name pos:line="13" pos:column="60">one<pos:position pos:line="13" pos:column="63"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="64"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="14" pos:column="17">struct<pos:position pos:line="14" pos:column="23"/></name> <name pos:line="14" pos:column="24">diff_filespec<pos:position pos:line="14" pos:column="37"/></name></name> <modifier pos:line="14" pos:column="38">*<pos:position pos:line="14" pos:column="39"/></modifier></type><name pos:line="14" pos:column="39">spec<pos:position pos:line="14" pos:column="43"/></name> <init pos:line="14" pos:column="44">= <expr><name><name pos:line="14" pos:column="46">q<pos:position pos:line="14" pos:column="47"/></name><operator pos:line="14" pos:column="47">-&gt;<pos:position pos:line="14" pos:column="52"/></operator><name pos:line="14" pos:column="49">queue<pos:position pos:line="14" pos:column="54"/></name><index pos:line="14" pos:column="54">[<expr><name pos:line="14" pos:column="55">i<pos:position pos:line="14" pos:column="56"/></name></expr>]<pos:position pos:line="14" pos:column="57"/></index></name><operator pos:line="14" pos:column="57">-&gt;<pos:position pos:line="14" pos:column="62"/></operator><name pos:line="14" pos:column="59">two<pos:position pos:line="14" pos:column="62"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="63"/></decl_stmt>

		<switch pos:line="16" pos:column="17">switch <condition pos:line="16" pos:column="24">(<expr><name><name pos:line="16" pos:column="25">q<pos:position pos:line="16" pos:column="26"/></name><operator pos:line="16" pos:column="26">-&gt;<pos:position pos:line="16" pos:column="31"/></operator><name pos:line="16" pos:column="28">queue<pos:position pos:line="16" pos:column="33"/></name><index pos:line="16" pos:column="33">[<expr><name pos:line="16" pos:column="34">i<pos:position pos:line="16" pos:column="35"/></name></expr>]<pos:position pos:line="16" pos:column="36"/></index></name><operator pos:line="16" pos:column="36">-&gt;<pos:position pos:line="16" pos:column="41"/></operator><name pos:line="16" pos:column="38">status<pos:position pos:line="16" pos:column="44"/></name></expr>)<pos:position pos:line="16" pos:column="45"/></condition> <block pos:line="16" pos:column="46">{
		<case pos:line="17" pos:column="17">case <expr><name pos:line="17" pos:column="22">DIFF_STATUS_DELETED<pos:position pos:line="17" pos:column="41"/></name></expr>:<pos:position pos:line="17" pos:column="42"/></case>
			<expr_stmt><expr><call><name pos:line="18" pos:column="25">printf<pos:position pos:line="18" pos:column="31"/></name><argument_list pos:line="18" pos:column="31">(<argument><expr><literal type="string" pos:line="18" pos:column="32">"D "<pos:position pos:line="18" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="38"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="19" pos:column="25">print_path<pos:position pos:line="19" pos:column="35"/></name><argument_list pos:line="19" pos:column="35">(<argument><expr><name><name pos:line="19" pos:column="36">spec<pos:position pos:line="19" pos:column="40"/></name><operator pos:line="19" pos:column="40">-&gt;<pos:position pos:line="19" pos:column="45"/></operator><name pos:line="19" pos:column="42">path<pos:position pos:line="19" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="48"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="20" pos:column="25">putchar<pos:position pos:line="20" pos:column="32"/></name><argument_list pos:line="20" pos:column="32">(<argument><expr><literal type="char" pos:line="20" pos:column="33">'\n'<pos:position pos:line="20" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="39"/></expr_stmt>
			<break pos:line="21" pos:column="25">break;<pos:position pos:line="21" pos:column="31"/></break>

		<case pos:line="23" pos:column="17">case <expr><name pos:line="23" pos:column="22">DIFF_STATUS_COPIED<pos:position pos:line="23" pos:column="40"/></name></expr>:<pos:position pos:line="23" pos:column="41"/></case>
		<case pos:line="24" pos:column="17">case <expr><name pos:line="24" pos:column="22">DIFF_STATUS_RENAMED<pos:position pos:line="24" pos:column="41"/></name></expr>:<pos:position pos:line="24" pos:column="42"/></case>
			<expr_stmt><expr><call><name pos:line="25" pos:column="25">printf<pos:position pos:line="25" pos:column="31"/></name><argument_list pos:line="25" pos:column="31">(<argument><expr><literal type="string" pos:line="25" pos:column="32">"%c "<pos:position pos:line="25" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="39">q<pos:position pos:line="25" pos:column="40"/></name><operator pos:line="25" pos:column="40">-&gt;<pos:position pos:line="25" pos:column="45"/></operator><name pos:line="25" pos:column="42">queue<pos:position pos:line="25" pos:column="47"/></name><index pos:line="25" pos:column="47">[<expr><name pos:line="25" pos:column="48">i<pos:position pos:line="25" pos:column="49"/></name></expr>]<pos:position pos:line="25" pos:column="50"/></index></name><operator pos:line="25" pos:column="50">-&gt;<pos:position pos:line="25" pos:column="55"/></operator><name pos:line="25" pos:column="52">status<pos:position pos:line="25" pos:column="58"/></name></expr></argument>)<pos:position pos:line="25" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="60"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="26" pos:column="25">print_path<pos:position pos:line="26" pos:column="35"/></name><argument_list pos:line="26" pos:column="35">(<argument><expr><name><name pos:line="26" pos:column="36">ospec<pos:position pos:line="26" pos:column="41"/></name><operator pos:line="26" pos:column="41">-&gt;<pos:position pos:line="26" pos:column="46"/></operator><name pos:line="26" pos:column="43">path<pos:position pos:line="26" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="49"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="27" pos:column="25">putchar<pos:position pos:line="27" pos:column="32"/></name><argument_list pos:line="27" pos:column="32">(<argument><expr><literal type="char" pos:line="27" pos:column="33">' '<pos:position pos:line="27" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="38"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="28" pos:column="25">print_path<pos:position pos:line="28" pos:column="35"/></name><argument_list pos:line="28" pos:column="35">(<argument><expr><name><name pos:line="28" pos:column="36">spec<pos:position pos:line="28" pos:column="40"/></name><operator pos:line="28" pos:column="40">-&gt;<pos:position pos:line="28" pos:column="45"/></operator><name pos:line="28" pos:column="42">path<pos:position pos:line="28" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="48"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="29" pos:column="25">putchar<pos:position pos:line="29" pos:column="32"/></name><argument_list pos:line="29" pos:column="32">(<argument><expr><literal type="char" pos:line="29" pos:column="33">'\n'<pos:position pos:line="29" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="39"/></expr_stmt>

			<if pos:line="31" pos:column="25">if <condition pos:line="31" pos:column="28">(<expr><operator pos:line="31" pos:column="29">!<pos:position pos:line="31" pos:column="30"/></operator><call><name pos:line="31" pos:column="30">hashcmp<pos:position pos:line="31" pos:column="37"/></name><argument_list pos:line="31" pos:column="37">(<argument><expr><name><name pos:line="31" pos:column="38">ospec<pos:position pos:line="31" pos:column="43"/></name><operator pos:line="31" pos:column="43">-&gt;<pos:position pos:line="31" pos:column="48"/></operator><name pos:line="31" pos:column="45">sha1<pos:position pos:line="31" pos:column="49"/></name></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="51">spec<pos:position pos:line="31" pos:column="55"/></name><operator pos:line="31" pos:column="55">-&gt;<pos:position pos:line="31" pos:column="60"/></operator><name pos:line="31" pos:column="57">sha1<pos:position pos:line="31" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="62"/></argument_list></call> <operator pos:line="31" pos:column="63">&amp;&amp;<pos:position pos:line="31" pos:column="73"/></operator>
			    <name><name pos:line="32" pos:column="29">ospec<pos:position pos:line="32" pos:column="34"/></name><operator pos:line="32" pos:column="34">-&gt;<pos:position pos:line="32" pos:column="39"/></operator><name pos:line="32" pos:column="36">mode<pos:position pos:line="32" pos:column="40"/></name></name> <operator pos:line="32" pos:column="41">==<pos:position pos:line="32" pos:column="43"/></operator> <name><name pos:line="32" pos:column="44">spec<pos:position pos:line="32" pos:column="48"/></name><operator pos:line="32" pos:column="48">-&gt;<pos:position pos:line="32" pos:column="53"/></operator><name pos:line="32" pos:column="50">mode<pos:position pos:line="32" pos:column="54"/></name></name></expr>)<pos:position pos:line="32" pos:column="55"/></condition><then pos:line="32" pos:column="55">
				<block type="pseudo"><break pos:line="33" pos:column="33">break;<pos:position pos:line="33" pos:column="39"/></break></block></then></if>
			<comment type="block" pos:line="34" pos:column="25">/* fallthrough */</comment>

		<case pos:line="36" pos:column="17">case <expr><name pos:line="36" pos:column="22">DIFF_STATUS_TYPE_CHANGED<pos:position pos:line="36" pos:column="46"/></name></expr>:<pos:position pos:line="36" pos:column="47"/></case>
		<case pos:line="37" pos:column="17">case <expr><name pos:line="37" pos:column="22">DIFF_STATUS_MODIFIED<pos:position pos:line="37" pos:column="42"/></name></expr>:<pos:position pos:line="37" pos:column="43"/></case>
		<case pos:line="38" pos:column="17">case <expr><name pos:line="38" pos:column="22">DIFF_STATUS_ADDED<pos:position pos:line="38" pos:column="39"/></name></expr>:<pos:position pos:line="38" pos:column="40"/></case>
			<comment type="block" pos:line="39" pos:column="25">/*
			 * Links refer to objects in another repositories;
			 * output the SHA-1 verbatim.
			 */</comment>
			<if pos:line="43" pos:column="25">if <condition pos:line="43" pos:column="28">(<expr><name pos:line="43" pos:column="29">no_data<pos:position pos:line="43" pos:column="36"/></name> <operator pos:line="43" pos:column="37">||<pos:position pos:line="43" pos:column="39"/></operator> <call><name pos:line="43" pos:column="40">S_ISGITLINK<pos:position pos:line="43" pos:column="51"/></name><argument_list pos:line="43" pos:column="51">(<argument><expr><name><name pos:line="43" pos:column="52">spec<pos:position pos:line="43" pos:column="56"/></name><operator pos:line="43" pos:column="56">-&gt;<pos:position pos:line="43" pos:column="61"/></operator><name pos:line="43" pos:column="58">mode<pos:position pos:line="43" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="64"/></condition><then pos:line="43" pos:column="64">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="44" pos:column="33">printf<pos:position pos:line="44" pos:column="39"/></name><argument_list pos:line="44" pos:column="39">(<argument><expr><literal type="string" pos:line="44" pos:column="40">"M %06o %s "<pos:position pos:line="44" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="54">spec<pos:position pos:line="44" pos:column="58"/></name><operator pos:line="44" pos:column="58">-&gt;<pos:position pos:line="44" pos:column="63"/></operator><name pos:line="44" pos:column="60">mode<pos:position pos:line="44" pos:column="64"/></name></name></expr></argument>,
				       <argument><expr><call><name pos:line="45" pos:column="40">sha1_to_hex<pos:position pos:line="45" pos:column="51"/></name><argument_list pos:line="45" pos:column="51">(<argument><expr><ternary><condition><expr><name pos:line="45" pos:column="52">anonymize<pos:position pos:line="45" pos:column="61"/></name></expr> ?<pos:position pos:line="45" pos:column="63"/></condition><then pos:line="45" pos:column="63">
						   <expr><call><name pos:line="46" pos:column="52">anonymize_sha1<pos:position pos:line="46" pos:column="66"/></name><argument_list pos:line="46" pos:column="66">(<argument><expr><name><name pos:line="46" pos:column="67">spec<pos:position pos:line="46" pos:column="71"/></name><operator pos:line="46" pos:column="71">-&gt;<pos:position pos:line="46" pos:column="76"/></operator><name pos:line="46" pos:column="73">sha1<pos:position pos:line="46" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="78"/></argument_list></call></expr> <pos:position pos:line="46" pos:column="79"/></then><else pos:line="46" pos:column="79">:
						   <expr><name><name pos:line="47" pos:column="52">spec<pos:position pos:line="47" pos:column="56"/></name><operator pos:line="47" pos:column="56">-&gt;<pos:position pos:line="47" pos:column="61"/></operator><name pos:line="47" pos:column="58">sha1<pos:position pos:line="47" pos:column="62"/></name></name></expr></else></ternary></expr></argument>)<pos:position pos:line="47" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="47" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="65"/></expr_stmt></block></then>
			<else pos:line="48" pos:column="25">else <block pos:line="48" pos:column="30">{
				<decl_stmt><decl><type><name><name pos:line="49" pos:column="33">struct<pos:position pos:line="49" pos:column="39"/></name> <name pos:line="49" pos:column="40">object<pos:position pos:line="49" pos:column="46"/></name></name> <modifier pos:line="49" pos:column="47">*<pos:position pos:line="49" pos:column="48"/></modifier></type><name pos:line="49" pos:column="48">object<pos:position pos:line="49" pos:column="54"/></name> <init pos:line="49" pos:column="55">= <expr><call><name pos:line="49" pos:column="57">lookup_object<pos:position pos:line="49" pos:column="70"/></name><argument_list pos:line="49" pos:column="70">(<argument><expr><name><name pos:line="49" pos:column="71">spec<pos:position pos:line="49" pos:column="75"/></name><operator pos:line="49" pos:column="75">-&gt;<pos:position pos:line="49" pos:column="80"/></operator><name pos:line="49" pos:column="77">sha1<pos:position pos:line="49" pos:column="81"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="82"/></argument_list></call></expr></init></decl>;<pos:position pos:line="49" pos:column="83"/></decl_stmt>
				<expr_stmt><expr><call><name pos:line="50" pos:column="33">printf<pos:position pos:line="50" pos:column="39"/></name><argument_list pos:line="50" pos:column="39">(<argument><expr><literal type="string" pos:line="50" pos:column="40">"M %06o :%d "<pos:position pos:line="50" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="55">spec<pos:position pos:line="50" pos:column="59"/></name><operator pos:line="50" pos:column="59">-&gt;<pos:position pos:line="50" pos:column="64"/></operator><name pos:line="50" pos:column="61">mode<pos:position pos:line="50" pos:column="65"/></name></name></expr></argument>,
				       <argument><expr><call><name pos:line="51" pos:column="40">get_object_mark<pos:position pos:line="51" pos:column="55"/></name><argument_list pos:line="51" pos:column="55">(<argument><expr><name pos:line="51" pos:column="56">object<pos:position pos:line="51" pos:column="62"/></name></expr></argument>)<pos:position pos:line="51" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="51" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="65"/></expr_stmt>
			}<pos:position pos:line="52" pos:column="26"/></block></else></if>
			<expr_stmt><expr><call><name pos:line="53" pos:column="25">print_path<pos:position pos:line="53" pos:column="35"/></name><argument_list pos:line="53" pos:column="35">(<argument><expr><name><name pos:line="53" pos:column="36">spec<pos:position pos:line="53" pos:column="40"/></name><operator pos:line="53" pos:column="40">-&gt;<pos:position pos:line="53" pos:column="45"/></operator><name pos:line="53" pos:column="42">path<pos:position pos:line="53" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="48"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="54" pos:column="25">putchar<pos:position pos:line="54" pos:column="32"/></name><argument_list pos:line="54" pos:column="32">(<argument><expr><literal type="char" pos:line="54" pos:column="33">'\n'<pos:position pos:line="54" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="39"/></expr_stmt>
			<break pos:line="55" pos:column="25">break;<pos:position pos:line="55" pos:column="31"/></break>

		<default pos:line="57" pos:column="17">default:<pos:position pos:line="57" pos:column="25"/></default>
			<expr_stmt><expr><call><name pos:line="58" pos:column="25">die<pos:position pos:line="58" pos:column="28"/></name><argument_list pos:line="58" pos:column="28">(<argument><expr><literal type="string" pos:line="58" pos:column="29">"Unexpected comparison status '%c' for %s, %s"<pos:position pos:line="58" pos:column="75"/></literal></expr></argument>,
				<argument><expr><name><name pos:line="59" pos:column="33">q<pos:position pos:line="59" pos:column="34"/></name><operator pos:line="59" pos:column="34">-&gt;<pos:position pos:line="59" pos:column="39"/></operator><name pos:line="59" pos:column="36">queue<pos:position pos:line="59" pos:column="41"/></name><index pos:line="59" pos:column="41">[<expr><name pos:line="59" pos:column="42">i<pos:position pos:line="59" pos:column="43"/></name></expr>]<pos:position pos:line="59" pos:column="44"/></index></name><operator pos:line="59" pos:column="44">-&gt;<pos:position pos:line="59" pos:column="49"/></operator><name pos:line="59" pos:column="46">status<pos:position pos:line="59" pos:column="52"/></name></expr></argument>,
				<argument><expr><ternary><condition><expr><name><name pos:line="60" pos:column="33">ospec<pos:position pos:line="60" pos:column="38"/></name><operator pos:line="60" pos:column="38">-&gt;<pos:position pos:line="60" pos:column="43"/></operator><name pos:line="60" pos:column="40">path<pos:position pos:line="60" pos:column="44"/></name></name></expr> ?<pos:position pos:line="60" pos:column="46"/></condition><then pos:line="60" pos:column="46"> <expr><name><name pos:line="60" pos:column="47">ospec<pos:position pos:line="60" pos:column="52"/></name><operator pos:line="60" pos:column="52">-&gt;<pos:position pos:line="60" pos:column="57"/></operator><name pos:line="60" pos:column="54">path<pos:position pos:line="60" pos:column="58"/></name></name></expr> <pos:position pos:line="60" pos:column="59"/></then><else pos:line="60" pos:column="59">: <expr><literal type="string" pos:line="60" pos:column="61">"none"<pos:position pos:line="60" pos:column="67"/></literal></expr></else></ternary></expr></argument>,
				<argument><expr><ternary><condition><expr><name><name pos:line="61" pos:column="33">spec<pos:position pos:line="61" pos:column="37"/></name><operator pos:line="61" pos:column="37">-&gt;<pos:position pos:line="61" pos:column="42"/></operator><name pos:line="61" pos:column="39">path<pos:position pos:line="61" pos:column="43"/></name></name></expr> ?<pos:position pos:line="61" pos:column="45"/></condition><then pos:line="61" pos:column="45"> <expr><name><name pos:line="61" pos:column="46">spec<pos:position pos:line="61" pos:column="50"/></name><operator pos:line="61" pos:column="50">-&gt;<pos:position pos:line="61" pos:column="55"/></operator><name pos:line="61" pos:column="52">path<pos:position pos:line="61" pos:column="56"/></name></name></expr> <pos:position pos:line="61" pos:column="57"/></then><else pos:line="61" pos:column="57">: <expr><literal type="string" pos:line="61" pos:column="59">"none"<pos:position pos:line="61" pos:column="65"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="61" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="67"/></expr_stmt>
		}<pos:position pos:line="62" pos:column="18"/></block></switch>
	}<pos:position pos:line="63" pos:column="10"/></block></for>
}<pos:position pos:line="64" pos:column="2"/></block></function></unit>

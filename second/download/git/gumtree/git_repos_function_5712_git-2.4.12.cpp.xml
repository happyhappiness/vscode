<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5712_git-2.4.12.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">neddisablethreadcache<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">nedpool<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">p<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="39"/></parameter_list> <name pos:line="1" pos:column="40">THROWSPEC<pos:position pos:line="1" pos:column="49"/></name>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">mycache<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
	<if pos:line="4" pos:column="9">if<condition pos:line="4" pos:column="11">(<expr><operator pos:line="4" pos:column="12">!<pos:position pos:line="4" pos:column="13"/></operator><name pos:line="4" pos:column="13">p<pos:position pos:line="4" pos:column="14"/></name></expr>)<pos:position pos:line="4" pos:column="15"/></condition><then pos:line="4" pos:column="15">
	<block pos:line="5" pos:column="9">{
		<expr_stmt><expr><name pos:line="6" pos:column="17">p<pos:position pos:line="6" pos:column="18"/></name><operator pos:line="6" pos:column="18">=<pos:position pos:line="6" pos:column="19"/></operator><operator pos:line="6" pos:column="19">&amp;<pos:position pos:line="6" pos:column="24"/></operator><name pos:line="6" pos:column="20">syspool<pos:position pos:line="6" pos:column="27"/></name></expr>;<pos:position pos:line="6" pos:column="28"/></expr_stmt>
		<if pos:line="7" pos:column="17">if<condition pos:line="7" pos:column="19">(<expr><operator pos:line="7" pos:column="20">!<pos:position pos:line="7" pos:column="21"/></operator><name><name pos:line="7" pos:column="21">syspool<pos:position pos:line="7" pos:column="28"/></name><operator pos:line="7" pos:column="28">.<pos:position pos:line="7" pos:column="29"/></operator><name pos:line="7" pos:column="29">threads<pos:position pos:line="7" pos:column="36"/></name></name></expr>)<pos:position pos:line="7" pos:column="37"/></condition><then pos:line="7" pos:column="37"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="38">InitPool<pos:position pos:line="7" pos:column="46"/></name><argument_list pos:line="7" pos:column="46">(<argument><expr><operator pos:line="7" pos:column="47">&amp;<pos:position pos:line="7" pos:column="52"/></operator><name pos:line="7" pos:column="48">syspool<pos:position pos:line="7" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="57">0<pos:position pos:line="7" pos:column="58"/></literal></expr></argument>, <argument><expr><operator pos:line="7" pos:column="60">-<pos:position pos:line="7" pos:column="61"/></operator><literal type="number" pos:line="7" pos:column="61">1<pos:position pos:line="7" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="64"/></expr_stmt></block></then></if>
	}<pos:position pos:line="8" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="9" pos:column="9">mycache<pos:position pos:line="9" pos:column="16"/></name><operator pos:line="9" pos:column="16">=<pos:position pos:line="9" pos:column="17"/></operator><operator pos:line="9" pos:column="17">(<pos:position pos:line="9" pos:column="18"/></operator><name pos:line="9" pos:column="18">int<pos:position pos:line="9" pos:column="21"/></name><operator pos:line="9" pos:column="21">)<pos:position pos:line="9" pos:column="22"/></operator><operator pos:line="9" pos:column="22">(<pos:position pos:line="9" pos:column="23"/></operator><name pos:line="9" pos:column="23">size_t<pos:position pos:line="9" pos:column="29"/></name><operator pos:line="9" pos:column="29">)<pos:position pos:line="9" pos:column="30"/></operator> <call><name pos:line="9" pos:column="31">TLSGET<pos:position pos:line="9" pos:column="37"/></name><argument_list pos:line="9" pos:column="37">(<argument><expr><name><name pos:line="9" pos:column="38">p<pos:position pos:line="9" pos:column="39"/></name><operator pos:line="9" pos:column="39">-&gt;<pos:position pos:line="9" pos:column="44"/></operator><name pos:line="9" pos:column="41">mycache<pos:position pos:line="9" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="50"/></expr_stmt>
	<if pos:line="10" pos:column="9">if<condition pos:line="10" pos:column="11">(<expr><operator pos:line="10" pos:column="12">!<pos:position pos:line="10" pos:column="13"/></operator><name pos:line="10" pos:column="13">mycache<pos:position pos:line="10" pos:column="20"/></name></expr>)<pos:position pos:line="10" pos:column="21"/></condition><then pos:line="10" pos:column="21">
	<block pos:line="11" pos:column="9">{	<comment type="block" pos:line="11" pos:column="17">/* Set to mspace 0 */</comment>
		<if pos:line="12" pos:column="17">if<condition pos:line="12" pos:column="19">(<expr><call><name pos:line="12" pos:column="20">TLSSET<pos:position pos:line="12" pos:column="26"/></name><argument_list pos:line="12" pos:column="26">(<argument><expr><name><name pos:line="12" pos:column="27">p<pos:position pos:line="12" pos:column="28"/></name><operator pos:line="12" pos:column="28">-&gt;<pos:position pos:line="12" pos:column="33"/></operator><name pos:line="12" pos:column="30">mycache<pos:position pos:line="12" pos:column="37"/></name></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="39">(<pos:position pos:line="12" pos:column="40"/></operator><name pos:line="12" pos:column="40">void<pos:position pos:line="12" pos:column="44"/></name> <operator pos:line="12" pos:column="45">*<pos:position pos:line="12" pos:column="46"/></operator><operator pos:line="12" pos:column="46">)<pos:position pos:line="12" pos:column="47"/></operator><operator pos:line="12" pos:column="47">-<pos:position pos:line="12" pos:column="48"/></operator><literal type="number" pos:line="12" pos:column="48">1<pos:position pos:line="12" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="51"/></condition><then pos:line="12" pos:column="51"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="52">abort<pos:position pos:line="12" pos:column="57"/></name><argument_list pos:line="12" pos:column="57">()<pos:position pos:line="12" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="60"/></expr_stmt></block></then></if>
	}<pos:position pos:line="13" pos:column="10"/></block></then>
	<elseif pos:line="14" pos:column="9">else <if pos:line="14" pos:column="14">if<condition pos:line="14" pos:column="16">(<expr><name pos:line="14" pos:column="17">mycache<pos:position pos:line="14" pos:column="24"/></name><operator pos:line="14" pos:column="24">&gt;<pos:position pos:line="14" pos:column="28"/></operator><literal type="number" pos:line="14" pos:column="25">0<pos:position pos:line="14" pos:column="26"/></literal></expr>)<pos:position pos:line="14" pos:column="27"/></condition><then pos:line="14" pos:column="27">
	<block pos:line="15" pos:column="9">{	<comment type="block" pos:line="15" pos:column="17">/* Set to last used mspace */</comment>
		<decl_stmt><decl><type><name pos:line="16" pos:column="17">threadcache<pos:position pos:line="16" pos:column="28"/></name> <modifier pos:line="16" pos:column="29">*<pos:position pos:line="16" pos:column="30"/></modifier></type><name pos:line="16" pos:column="30">tc<pos:position pos:line="16" pos:column="32"/></name><init pos:line="16" pos:column="32">=<expr><name><name pos:line="16" pos:column="33">p<pos:position pos:line="16" pos:column="34"/></name><operator pos:line="16" pos:column="34">-&gt;<pos:position pos:line="16" pos:column="39"/></operator><name pos:line="16" pos:column="36">caches<pos:position pos:line="16" pos:column="42"/></name><index pos:line="16" pos:column="42">[<expr><name pos:line="16" pos:column="43">mycache<pos:position pos:line="16" pos:column="50"/></name><operator pos:line="16" pos:column="50">-<pos:position pos:line="16" pos:column="51"/></operator><literal type="number" pos:line="16" pos:column="51">1<pos:position pos:line="16" pos:column="52"/></literal></expr>]<pos:position pos:line="16" pos:column="53"/></index></name></expr></init></decl>;<pos:position pos:line="16" pos:column="54"/></decl_stmt>
<cpp:if pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">if<pos:position pos:line="17" pos:column="4"/></cpp:directive> <expr><call><name pos:line="17" pos:column="5">defined<pos:position pos:line="17" pos:column="12"/></name><argument_list pos:line="17" pos:column="12">(<argument><expr><name pos:line="17" pos:column="13">DEBUG<pos:position pos:line="17" pos:column="18"/></name></expr></argument>)<pos:position pos:line="17" pos:column="19"/></argument_list></call></expr></cpp:if>
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">printf<pos:position pos:line="18" pos:column="23"/></name><argument_list pos:line="18" pos:column="23">(<argument><expr><literal type="string" pos:line="18" pos:column="24">"Threadcache utilisation: %lf%% in cache with %lf%% lost to other threads\n"<pos:position pos:line="18" pos:column="100"/></literal></expr></argument>,
			<argument><expr><literal type="number" pos:line="19" pos:column="25">100.0<pos:position pos:line="19" pos:column="30"/></literal><operator pos:line="19" pos:column="30">*<pos:position pos:line="19" pos:column="31"/></operator><name><name pos:line="19" pos:column="31">tc<pos:position pos:line="19" pos:column="33"/></name><operator pos:line="19" pos:column="33">-&gt;<pos:position pos:line="19" pos:column="38"/></operator><name pos:line="19" pos:column="35">successes<pos:position pos:line="19" pos:column="44"/></name></name><operator pos:line="19" pos:column="44">/<pos:position pos:line="19" pos:column="45"/></operator><name><name pos:line="19" pos:column="45">tc<pos:position pos:line="19" pos:column="47"/></name><operator pos:line="19" pos:column="47">-&gt;<pos:position pos:line="19" pos:column="52"/></operator><name pos:line="19" pos:column="49">mallocs<pos:position pos:line="19" pos:column="56"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="58">100.0<pos:position pos:line="19" pos:column="63"/></literal><operator pos:line="19" pos:column="63">*<pos:position pos:line="19" pos:column="64"/></operator><operator pos:line="19" pos:column="64">(<pos:position pos:line="19" pos:column="65"/></operator><operator pos:line="19" pos:column="65">(<pos:position pos:line="19" pos:column="66"/></operator><name pos:line="19" pos:column="66">double<pos:position pos:line="19" pos:column="72"/></name><operator pos:line="19" pos:column="72">)<pos:position pos:line="19" pos:column="73"/></operator> <name><name pos:line="19" pos:column="74">tc<pos:position pos:line="19" pos:column="76"/></name><operator pos:line="19" pos:column="76">-&gt;<pos:position pos:line="19" pos:column="81"/></operator><name pos:line="19" pos:column="78">mallocs<pos:position pos:line="19" pos:column="85"/></name></name><operator pos:line="19" pos:column="85">-<pos:position pos:line="19" pos:column="86"/></operator><name><name pos:line="19" pos:column="86">tc<pos:position pos:line="19" pos:column="88"/></name><operator pos:line="19" pos:column="88">-&gt;<pos:position pos:line="19" pos:column="93"/></operator><name pos:line="19" pos:column="90">frees<pos:position pos:line="19" pos:column="95"/></name></name><operator pos:line="19" pos:column="95">)<pos:position pos:line="19" pos:column="96"/></operator><operator pos:line="19" pos:column="96">/<pos:position pos:line="19" pos:column="97"/></operator><name><name pos:line="19" pos:column="97">tc<pos:position pos:line="19" pos:column="99"/></name><operator pos:line="19" pos:column="99">-&gt;<pos:position pos:line="19" pos:column="104"/></operator><name pos:line="19" pos:column="101">mallocs<pos:position pos:line="19" pos:column="108"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="109"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="110"/></expr_stmt>
<cpp:endif pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">endif<pos:position pos:line="20" pos:column="7"/></cpp:directive></cpp:endif>
		<if pos:line="21" pos:column="17">if<condition pos:line="21" pos:column="19">(<expr><call><name pos:line="21" pos:column="20">TLSSET<pos:position pos:line="21" pos:column="26"/></name><argument_list pos:line="21" pos:column="26">(<argument><expr><name><name pos:line="21" pos:column="27">p<pos:position pos:line="21" pos:column="28"/></name><operator pos:line="21" pos:column="28">-&gt;<pos:position pos:line="21" pos:column="33"/></operator><name pos:line="21" pos:column="30">mycache<pos:position pos:line="21" pos:column="37"/></name></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="39">(<pos:position pos:line="21" pos:column="40"/></operator><name pos:line="21" pos:column="40">void<pos:position pos:line="21" pos:column="44"/></name> <operator pos:line="21" pos:column="45">*<pos:position pos:line="21" pos:column="46"/></operator><operator pos:line="21" pos:column="46">)<pos:position pos:line="21" pos:column="47"/></operator><call pos:line="21" pos:column="47">(<name pos:line="21" pos:column="48">size_t<pos:position pos:line="21" pos:column="54"/></name>)<argument_list pos:line="21" pos:column="55">(<argument><expr><operator pos:line="21" pos:column="56">-<pos:position pos:line="21" pos:column="57"/></operator><name><name pos:line="21" pos:column="57">tc<pos:position pos:line="21" pos:column="59"/></name><operator pos:line="21" pos:column="59">-&gt;<pos:position pos:line="21" pos:column="64"/></operator><name pos:line="21" pos:column="61">mymspace<pos:position pos:line="21" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="72"/></condition><then pos:line="21" pos:column="72"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="73">abort<pos:position pos:line="21" pos:column="78"/></name><argument_list pos:line="21" pos:column="78">()<pos:position pos:line="21" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="81"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name><name pos:line="22" pos:column="17">tc<pos:position pos:line="22" pos:column="19"/></name><operator pos:line="22" pos:column="19">-&gt;<pos:position pos:line="22" pos:column="24"/></operator><name pos:line="22" pos:column="21">frees<pos:position pos:line="22" pos:column="26"/></name></name><operator pos:line="22" pos:column="26">++<pos:position pos:line="22" pos:column="28"/></operator></expr>;<pos:position pos:line="22" pos:column="29"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="23" pos:column="17">RemoveCacheEntries<pos:position pos:line="23" pos:column="35"/></name><argument_list pos:line="23" pos:column="35">(<argument><expr><name pos:line="23" pos:column="36">p<pos:position pos:line="23" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="39">tc<pos:position pos:line="23" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="43">0<pos:position pos:line="23" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="24" pos:column="17">assert<pos:position pos:line="24" pos:column="23"/></name><argument_list pos:line="24" pos:column="23">(<argument><expr><operator pos:line="24" pos:column="24">!<pos:position pos:line="24" pos:column="25"/></operator><name><name pos:line="24" pos:column="25">tc<pos:position pos:line="24" pos:column="27"/></name><operator pos:line="24" pos:column="27">-&gt;<pos:position pos:line="24" pos:column="32"/></operator><name pos:line="24" pos:column="29">freeInCache<pos:position pos:line="24" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="25" pos:column="17">tc<pos:position pos:line="25" pos:column="19"/></name><operator pos:line="25" pos:column="19">-&gt;<pos:position pos:line="25" pos:column="24"/></operator><name pos:line="25" pos:column="21">mymspace<pos:position pos:line="25" pos:column="29"/></name></name><operator pos:line="25" pos:column="29">=<pos:position pos:line="25" pos:column="30"/></operator><operator pos:line="25" pos:column="30">-<pos:position pos:line="25" pos:column="31"/></operator><literal type="number" pos:line="25" pos:column="31">1<pos:position pos:line="25" pos:column="32"/></literal></expr>;<pos:position pos:line="25" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="26" pos:column="17">tc<pos:position pos:line="26" pos:column="19"/></name><operator pos:line="26" pos:column="19">-&gt;<pos:position pos:line="26" pos:column="24"/></operator><name pos:line="26" pos:column="21">threadid<pos:position pos:line="26" pos:column="29"/></name></name><operator pos:line="26" pos:column="29">=<pos:position pos:line="26" pos:column="30"/></operator><literal type="number" pos:line="26" pos:column="30">0<pos:position pos:line="26" pos:column="31"/></literal></expr>;<pos:position pos:line="26" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="27" pos:column="17">mspace_free<pos:position pos:line="27" pos:column="28"/></name><argument_list pos:line="27" pos:column="28">(<argument><expr><literal type="number" pos:line="27" pos:column="29">0<pos:position pos:line="27" pos:column="30"/></literal></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="32">p<pos:position pos:line="27" pos:column="33"/></name><operator pos:line="27" pos:column="33">-&gt;<pos:position pos:line="27" pos:column="38"/></operator><name pos:line="27" pos:column="35">caches<pos:position pos:line="27" pos:column="41"/></name><index pos:line="27" pos:column="41">[<expr><name pos:line="27" pos:column="42">mycache<pos:position pos:line="27" pos:column="49"/></name><operator pos:line="27" pos:column="49">-<pos:position pos:line="27" pos:column="50"/></operator><literal type="number" pos:line="27" pos:column="50">1<pos:position pos:line="27" pos:column="51"/></literal></expr>]<pos:position pos:line="27" pos:column="52"/></index></name></expr></argument>)<pos:position pos:line="27" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="54"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="28" pos:column="17">p<pos:position pos:line="28" pos:column="18"/></name><operator pos:line="28" pos:column="18">-&gt;<pos:position pos:line="28" pos:column="23"/></operator><name pos:line="28" pos:column="20">caches<pos:position pos:line="28" pos:column="26"/></name><index pos:line="28" pos:column="26">[<expr><name pos:line="28" pos:column="27">mycache<pos:position pos:line="28" pos:column="34"/></name><operator pos:line="28" pos:column="34">-<pos:position pos:line="28" pos:column="35"/></operator><literal type="number" pos:line="28" pos:column="35">1<pos:position pos:line="28" pos:column="36"/></literal></expr>]<pos:position pos:line="28" pos:column="37"/></index></name><operator pos:line="28" pos:column="37">=<pos:position pos:line="28" pos:column="38"/></operator><literal type="number" pos:line="28" pos:column="38">0<pos:position pos:line="28" pos:column="39"/></literal></expr>;<pos:position pos:line="28" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="29" pos:column="10"/></block></then></if></elseif></if>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1452.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">setup_revisions<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">int<pos:position pos:line="1" pos:column="24"/></name></type> <name pos:line="1" pos:column="25">argc<pos:position pos:line="1" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="31">const<pos:position pos:line="1" pos:column="36"/></specifier> <name pos:line="1" pos:column="37">char<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier><modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">argv<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="50">struct<pos:position pos:line="1" pos:column="56"/></name> <name pos:line="1" pos:column="57">rev_info<pos:position pos:line="1" pos:column="65"/></name></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">revs<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="73">struct<pos:position pos:line="1" pos:column="79"/></name> <name pos:line="1" pos:column="80">setup_revision_opt<pos:position pos:line="1" pos:column="98"/></name></name> <modifier pos:line="1" pos:column="99">*<pos:position pos:line="1" pos:column="100"/></modifier></type><name pos:line="1" pos:column="100">opt<pos:position pos:line="1" pos:column="103"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="104"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="16">flags<pos:position pos:line="3" pos:column="21"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="23">left<pos:position pos:line="3" pos:column="27"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="29">seen_dashdash<pos:position pos:line="3" pos:column="42"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="44">read_from_stdin<pos:position pos:line="3" pos:column="59"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="61">got_rev_arg<pos:position pos:line="3" pos:column="72"/></name> <init pos:line="3" pos:column="73">= <expr><literal type="number" pos:line="3" pos:column="75">0<pos:position pos:line="3" pos:column="76"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="78">revarg_opt<pos:position pos:line="3" pos:column="88"/></name></decl>;<pos:position pos:line="3" pos:column="89"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">cmdline_pathspec<pos:position pos:line="4" pos:column="32"/></name></name></type> <name pos:line="4" pos:column="33">prune_data<pos:position pos:line="4" pos:column="43"/></name></decl>;<pos:position pos:line="4" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">submodule<pos:position pos:line="5" pos:column="30"/></name> <init pos:line="5" pos:column="31">= <expr><name pos:line="5" pos:column="33">NULL<pos:position pos:line="5" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="38"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="7" pos:column="9">memset<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><operator pos:line="7" pos:column="16">&amp;<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="17">prune_data<pos:position pos:line="7" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="29">0<pos:position pos:line="7" pos:column="30"/></literal></expr></argument>, <argument><expr><sizeof pos:line="7" pos:column="32">sizeof<argument_list pos:line="7" pos:column="38">(<argument><expr><name pos:line="7" pos:column="39">prune_data<pos:position pos:line="7" pos:column="49"/></name></expr></argument>)<pos:position pos:line="7" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="52"/></expr_stmt>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">opt<pos:position pos:line="8" pos:column="16"/></name></expr>)<pos:position pos:line="8" pos:column="17"/></condition><then pos:line="8" pos:column="17">
		<block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="17">submodule<pos:position pos:line="9" pos:column="26"/></name> <operator pos:line="9" pos:column="27">=<pos:position pos:line="9" pos:column="28"/></operator> <name><name pos:line="9" pos:column="29">opt<pos:position pos:line="9" pos:column="32"/></name><operator pos:line="9" pos:column="32">-&gt;<pos:position pos:line="9" pos:column="37"/></operator><name pos:line="9" pos:column="34">submodule<pos:position pos:line="9" pos:column="43"/></name></name></expr>;<pos:position pos:line="9" pos:column="44"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="11" pos:column="9">/* First, search for "--" */</comment>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">opt<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">&amp;&amp;<pos:position pos:line="12" pos:column="27"/></operator> <name><name pos:line="12" pos:column="20">opt<pos:position pos:line="12" pos:column="23"/></name><operator pos:line="12" pos:column="23">-&gt;<pos:position pos:line="12" pos:column="28"/></operator><name pos:line="12" pos:column="25">assume_dashdash<pos:position pos:line="12" pos:column="40"/></name></name></expr>)<pos:position pos:line="12" pos:column="41"/></condition><then pos:line="12" pos:column="41"> <block pos:line="12" pos:column="42">{
		<expr_stmt><expr><name pos:line="13" pos:column="17">seen_dashdash<pos:position pos:line="13" pos:column="30"/></name> <operator pos:line="13" pos:column="31">=<pos:position pos:line="13" pos:column="32"/></operator> <literal type="number" pos:line="13" pos:column="33">1<pos:position pos:line="13" pos:column="34"/></literal></expr>;<pos:position pos:line="13" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="14" pos:column="10"/></block></then> <else pos:line="14" pos:column="11">else <block pos:line="14" pos:column="16">{
		<expr_stmt><expr><name pos:line="15" pos:column="17">seen_dashdash<pos:position pos:line="15" pos:column="30"/></name> <operator pos:line="15" pos:column="31">=<pos:position pos:line="15" pos:column="32"/></operator> <literal type="number" pos:line="15" pos:column="33">0<pos:position pos:line="15" pos:column="34"/></literal></expr>;<pos:position pos:line="15" pos:column="35"/></expr_stmt>
		<for pos:line="16" pos:column="17">for <control pos:line="16" pos:column="21">(<init><expr><name pos:line="16" pos:column="22">i<pos:position pos:line="16" pos:column="23"/></name> <operator pos:line="16" pos:column="24">=<pos:position pos:line="16" pos:column="25"/></operator> <literal type="number" pos:line="16" pos:column="26">1<pos:position pos:line="16" pos:column="27"/></literal></expr>;<pos:position pos:line="16" pos:column="28"/></init> <condition><expr><name pos:line="16" pos:column="29">i<pos:position pos:line="16" pos:column="30"/></name> <operator pos:line="16" pos:column="31">&lt;<pos:position pos:line="16" pos:column="35"/></operator> <name pos:line="16" pos:column="33">argc<pos:position pos:line="16" pos:column="37"/></name></expr>;<pos:position pos:line="16" pos:column="38"/></condition> <incr><expr><name pos:line="16" pos:column="39">i<pos:position pos:line="16" pos:column="40"/></name><operator pos:line="16" pos:column="40">++<pos:position pos:line="16" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="16" pos:column="43"/></control> <block pos:line="16" pos:column="44">{
			<decl_stmt><decl><type><specifier pos:line="17" pos:column="25">const<pos:position pos:line="17" pos:column="30"/></specifier> <name pos:line="17" pos:column="31">char<pos:position pos:line="17" pos:column="35"/></name> <modifier pos:line="17" pos:column="36">*<pos:position pos:line="17" pos:column="37"/></modifier></type><name pos:line="17" pos:column="37">arg<pos:position pos:line="17" pos:column="40"/></name> <init pos:line="17" pos:column="41">= <expr><name><name pos:line="17" pos:column="43">argv<pos:position pos:line="17" pos:column="47"/></name><index pos:line="17" pos:column="47">[<expr><name pos:line="17" pos:column="48">i<pos:position pos:line="17" pos:column="49"/></name></expr>]<pos:position pos:line="17" pos:column="50"/></index></name></expr></init></decl>;<pos:position pos:line="17" pos:column="51"/></decl_stmt>
			<if pos:line="18" pos:column="25">if <condition pos:line="18" pos:column="28">(<expr><call><name pos:line="18" pos:column="29">strcmp<pos:position pos:line="18" pos:column="35"/></name><argument_list pos:line="18" pos:column="35">(<argument><expr><name pos:line="18" pos:column="36">arg<pos:position pos:line="18" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="41">"--"<pos:position pos:line="18" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="47"/></condition><then pos:line="18" pos:column="47">
				<block type="pseudo"><continue pos:line="19" pos:column="33">continue;<pos:position pos:line="19" pos:column="42"/></continue></block></then></if>
			<expr_stmt><expr><name><name pos:line="20" pos:column="25">argv<pos:position pos:line="20" pos:column="29"/></name><index pos:line="20" pos:column="29">[<expr><name pos:line="20" pos:column="30">i<pos:position pos:line="20" pos:column="31"/></name></expr>]<pos:position pos:line="20" pos:column="32"/></index></name> <operator pos:line="20" pos:column="33">=<pos:position pos:line="20" pos:column="34"/></operator> <name pos:line="20" pos:column="35">NULL<pos:position pos:line="20" pos:column="39"/></name></expr>;<pos:position pos:line="20" pos:column="40"/></expr_stmt>
			<expr_stmt><expr><name pos:line="21" pos:column="25">argc<pos:position pos:line="21" pos:column="29"/></name> <operator pos:line="21" pos:column="30">=<pos:position pos:line="21" pos:column="31"/></operator> <name pos:line="21" pos:column="32">i<pos:position pos:line="21" pos:column="33"/></name></expr>;<pos:position pos:line="21" pos:column="34"/></expr_stmt>
			<if pos:line="22" pos:column="25">if <condition pos:line="22" pos:column="28">(<expr><name><name pos:line="22" pos:column="29">argv<pos:position pos:line="22" pos:column="33"/></name><index pos:line="22" pos:column="33">[<expr><name pos:line="22" pos:column="34">i<pos:position pos:line="22" pos:column="35"/></name> <operator pos:line="22" pos:column="36">+<pos:position pos:line="22" pos:column="37"/></operator> <literal type="number" pos:line="22" pos:column="38">1<pos:position pos:line="22" pos:column="39"/></literal></expr>]<pos:position pos:line="22" pos:column="40"/></index></name></expr>)<pos:position pos:line="22" pos:column="41"/></condition><then pos:line="22" pos:column="41">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="33">append_prune_data<pos:position pos:line="23" pos:column="50"/></name><argument_list pos:line="23" pos:column="50">(<argument><expr><operator pos:line="23" pos:column="51">&amp;<pos:position pos:line="23" pos:column="56"/></operator><name pos:line="23" pos:column="52">prune_data<pos:position pos:line="23" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="64">argv<pos:position pos:line="23" pos:column="68"/></name> <operator pos:line="23" pos:column="69">+<pos:position pos:line="23" pos:column="70"/></operator> <name pos:line="23" pos:column="71">i<pos:position pos:line="23" pos:column="72"/></name> <operator pos:line="23" pos:column="73">+<pos:position pos:line="23" pos:column="74"/></operator> <literal type="number" pos:line="23" pos:column="75">1<pos:position pos:line="23" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="78"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name pos:line="24" pos:column="25">seen_dashdash<pos:position pos:line="24" pos:column="38"/></name> <operator pos:line="24" pos:column="39">=<pos:position pos:line="24" pos:column="40"/></operator> <literal type="number" pos:line="24" pos:column="41">1<pos:position pos:line="24" pos:column="42"/></literal></expr>;<pos:position pos:line="24" pos:column="43"/></expr_stmt>
			<break pos:line="25" pos:column="25">break;<pos:position pos:line="25" pos:column="31"/></break>
		}<pos:position pos:line="26" pos:column="18"/></block></for>
	}<pos:position pos:line="27" pos:column="10"/></block></else></if>

	<comment type="block" pos:line="29" pos:column="9">/* Second, deal with arguments and options */</comment>
	<expr_stmt><expr><name pos:line="30" pos:column="9">flags<pos:position pos:line="30" pos:column="14"/></name> <operator pos:line="30" pos:column="15">=<pos:position pos:line="30" pos:column="16"/></operator> <literal type="number" pos:line="30" pos:column="17">0<pos:position pos:line="30" pos:column="18"/></literal></expr>;<pos:position pos:line="30" pos:column="19"/></expr_stmt>
	<expr_stmt><expr><name pos:line="31" pos:column="9">revarg_opt<pos:position pos:line="31" pos:column="19"/></name> <operator pos:line="31" pos:column="20">=<pos:position pos:line="31" pos:column="21"/></operator> <ternary><condition><expr><name pos:line="31" pos:column="22">opt<pos:position pos:line="31" pos:column="25"/></name></expr> ?<pos:position pos:line="31" pos:column="27"/></condition><then pos:line="31" pos:column="27"> <expr><name><name pos:line="31" pos:column="28">opt<pos:position pos:line="31" pos:column="31"/></name><operator pos:line="31" pos:column="31">-&gt;<pos:position pos:line="31" pos:column="36"/></operator><name pos:line="31" pos:column="33">revarg_opt<pos:position pos:line="31" pos:column="43"/></name></name></expr> <pos:position pos:line="31" pos:column="44"/></then><else pos:line="31" pos:column="44">: <expr><literal type="number" pos:line="31" pos:column="46">0<pos:position pos:line="31" pos:column="47"/></literal></expr></else></ternary></expr>;<pos:position pos:line="31" pos:column="48"/></expr_stmt>
	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><name pos:line="32" pos:column="13">seen_dashdash<pos:position pos:line="32" pos:column="26"/></name></expr>)<pos:position pos:line="32" pos:column="27"/></condition><then pos:line="32" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="17">revarg_opt<pos:position pos:line="33" pos:column="27"/></name> <operator pos:line="33" pos:column="28">|=<pos:position pos:line="33" pos:column="30"/></operator> <name pos:line="33" pos:column="31">REVARG_CANNOT_BE_FILENAME<pos:position pos:line="33" pos:column="56"/></name></expr>;<pos:position pos:line="33" pos:column="57"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="34" pos:column="9">read_from_stdin<pos:position pos:line="34" pos:column="24"/></name> <operator pos:line="34" pos:column="25">=<pos:position pos:line="34" pos:column="26"/></operator> <literal type="number" pos:line="34" pos:column="27">0<pos:position pos:line="34" pos:column="28"/></literal></expr>;<pos:position pos:line="34" pos:column="29"/></expr_stmt>
	<for pos:line="35" pos:column="9">for <control pos:line="35" pos:column="13">(<init><expr><name pos:line="35" pos:column="14">left<pos:position pos:line="35" pos:column="18"/></name> <operator pos:line="35" pos:column="19">=<pos:position pos:line="35" pos:column="20"/></operator> <name pos:line="35" pos:column="21">i<pos:position pos:line="35" pos:column="22"/></name> <operator pos:line="35" pos:column="23">=<pos:position pos:line="35" pos:column="24"/></operator> <literal type="number" pos:line="35" pos:column="25">1<pos:position pos:line="35" pos:column="26"/></literal></expr>;<pos:position pos:line="35" pos:column="27"/></init> <condition><expr><name pos:line="35" pos:column="28">i<pos:position pos:line="35" pos:column="29"/></name> <operator pos:line="35" pos:column="30">&lt;<pos:position pos:line="35" pos:column="34"/></operator> <name pos:line="35" pos:column="32">argc<pos:position pos:line="35" pos:column="36"/></name></expr>;<pos:position pos:line="35" pos:column="37"/></condition> <incr><expr><name pos:line="35" pos:column="38">i<pos:position pos:line="35" pos:column="39"/></name><operator pos:line="35" pos:column="39">++<pos:position pos:line="35" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="35" pos:column="42"/></control> <block pos:line="35" pos:column="43">{
		<decl_stmt><decl><type><specifier pos:line="36" pos:column="17">const<pos:position pos:line="36" pos:column="22"/></specifier> <name pos:line="36" pos:column="23">char<pos:position pos:line="36" pos:column="27"/></name> <modifier pos:line="36" pos:column="28">*<pos:position pos:line="36" pos:column="29"/></modifier></type><name pos:line="36" pos:column="29">arg<pos:position pos:line="36" pos:column="32"/></name> <init pos:line="36" pos:column="33">= <expr><name><name pos:line="36" pos:column="35">argv<pos:position pos:line="36" pos:column="39"/></name><index pos:line="36" pos:column="39">[<expr><name pos:line="36" pos:column="40">i<pos:position pos:line="36" pos:column="41"/></name></expr>]<pos:position pos:line="36" pos:column="42"/></index></name></expr></init></decl>;<pos:position pos:line="36" pos:column="43"/></decl_stmt>
		<if pos:line="37" pos:column="17">if <condition pos:line="37" pos:column="20">(<expr><operator pos:line="37" pos:column="21">*<pos:position pos:line="37" pos:column="22"/></operator><name pos:line="37" pos:column="22">arg<pos:position pos:line="37" pos:column="25"/></name> <operator pos:line="37" pos:column="26">==<pos:position pos:line="37" pos:column="28"/></operator> <literal type="char" pos:line="37" pos:column="29">'-'<pos:position pos:line="37" pos:column="32"/></literal></expr>)<pos:position pos:line="37" pos:column="33"/></condition><then pos:line="37" pos:column="33"> <block pos:line="37" pos:column="34">{
			<decl_stmt><decl><type><name pos:line="38" pos:column="25">int<pos:position pos:line="38" pos:column="28"/></name></type> <name pos:line="38" pos:column="29">opts<pos:position pos:line="38" pos:column="33"/></name></decl>;<pos:position pos:line="38" pos:column="34"/></decl_stmt>

			<expr_stmt><expr><name pos:line="40" pos:column="25">opts<pos:position pos:line="40" pos:column="29"/></name> <operator pos:line="40" pos:column="30">=<pos:position pos:line="40" pos:column="31"/></operator> <call><name pos:line="40" pos:column="32">handle_revision_pseudo_opt<pos:position pos:line="40" pos:column="58"/></name><argument_list pos:line="40" pos:column="58">(<argument><expr><name pos:line="40" pos:column="59">submodule<pos:position pos:line="40" pos:column="68"/></name></expr></argument>,
						<argument><expr><name pos:line="41" pos:column="49">revs<pos:position pos:line="41" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="55">argc<pos:position pos:line="41" pos:column="59"/></name> <operator pos:line="41" pos:column="60">-<pos:position pos:line="41" pos:column="61"/></operator> <name pos:line="41" pos:column="62">i<pos:position pos:line="41" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="65">argv<pos:position pos:line="41" pos:column="69"/></name> <operator pos:line="41" pos:column="70">+<pos:position pos:line="41" pos:column="71"/></operator> <name pos:line="41" pos:column="72">i<pos:position pos:line="41" pos:column="73"/></name></expr></argument>,
						<argument><expr><operator pos:line="42" pos:column="49">&amp;<pos:position pos:line="42" pos:column="54"/></operator><name pos:line="42" pos:column="50">flags<pos:position pos:line="42" pos:column="55"/></name></expr></argument>)<pos:position pos:line="42" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="57"/></expr_stmt>
			<if pos:line="43" pos:column="25">if <condition pos:line="43" pos:column="28">(<expr><name pos:line="43" pos:column="29">opts<pos:position pos:line="43" pos:column="33"/></name> <operator pos:line="43" pos:column="34">&gt;<pos:position pos:line="43" pos:column="38"/></operator> <literal type="number" pos:line="43" pos:column="36">0<pos:position pos:line="43" pos:column="37"/></literal></expr>)<pos:position pos:line="43" pos:column="38"/></condition><then pos:line="43" pos:column="38"> <block pos:line="43" pos:column="39">{
				<expr_stmt><expr><name pos:line="44" pos:column="33">i<pos:position pos:line="44" pos:column="34"/></name> <operator pos:line="44" pos:column="35">+=<pos:position pos:line="44" pos:column="37"/></operator> <name pos:line="44" pos:column="38">opts<pos:position pos:line="44" pos:column="42"/></name> <operator pos:line="44" pos:column="43">-<pos:position pos:line="44" pos:column="44"/></operator> <literal type="number" pos:line="44" pos:column="45">1<pos:position pos:line="44" pos:column="46"/></literal></expr>;<pos:position pos:line="44" pos:column="47"/></expr_stmt>
				<continue pos:line="45" pos:column="33">continue;<pos:position pos:line="45" pos:column="42"/></continue>
			}<pos:position pos:line="46" pos:column="26"/></block></then></if>

			<if pos:line="48" pos:column="25">if <condition pos:line="48" pos:column="28">(<expr><operator pos:line="48" pos:column="29">!<pos:position pos:line="48" pos:column="30"/></operator><call><name pos:line="48" pos:column="30">strcmp<pos:position pos:line="48" pos:column="36"/></name><argument_list pos:line="48" pos:column="36">(<argument><expr><name pos:line="48" pos:column="37">arg<pos:position pos:line="48" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="42">"--stdin"<pos:position pos:line="48" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="53"/></condition><then pos:line="48" pos:column="53"> <block pos:line="48" pos:column="54">{
				<if pos:line="49" pos:column="33">if <condition pos:line="49" pos:column="36">(<expr><name><name pos:line="49" pos:column="37">revs<pos:position pos:line="49" pos:column="41"/></name><operator pos:line="49" pos:column="41">-&gt;<pos:position pos:line="49" pos:column="46"/></operator><name pos:line="49" pos:column="43">disable_stdin<pos:position pos:line="49" pos:column="56"/></name></name></expr>)<pos:position pos:line="49" pos:column="57"/></condition><then pos:line="49" pos:column="57"> <block pos:line="49" pos:column="58">{
					<expr_stmt><expr><name><name pos:line="50" pos:column="41">argv<pos:position pos:line="50" pos:column="45"/></name><index pos:line="50" pos:column="45">[<expr><name pos:line="50" pos:column="46">left<pos:position pos:line="50" pos:column="50"/></name><operator pos:line="50" pos:column="50">++<pos:position pos:line="50" pos:column="52"/></operator></expr>]<pos:position pos:line="50" pos:column="53"/></index></name> <operator pos:line="50" pos:column="54">=<pos:position pos:line="50" pos:column="55"/></operator> <name pos:line="50" pos:column="56">arg<pos:position pos:line="50" pos:column="59"/></name></expr>;<pos:position pos:line="50" pos:column="60"/></expr_stmt>
					<continue pos:line="51" pos:column="41">continue;<pos:position pos:line="51" pos:column="50"/></continue>
				}<pos:position pos:line="52" pos:column="34"/></block></then></if>
				<if pos:line="53" pos:column="33">if <condition pos:line="53" pos:column="36">(<expr><name pos:line="53" pos:column="37">read_from_stdin<pos:position pos:line="53" pos:column="52"/></name><operator pos:line="53" pos:column="52">++<pos:position pos:line="53" pos:column="54"/></operator></expr>)<pos:position pos:line="53" pos:column="55"/></condition><then pos:line="53" pos:column="55">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="54" pos:column="41">die<pos:position pos:line="54" pos:column="44"/></name><argument_list pos:line="54" pos:column="44">(<argument><expr><literal type="string" pos:line="54" pos:column="45">"--stdin given twice?"<pos:position pos:line="54" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="69"/></expr_stmt></block></then></if>
				<expr_stmt><expr><call><name pos:line="55" pos:column="33">read_revisions_from_stdin<pos:position pos:line="55" pos:column="58"/></name><argument_list pos:line="55" pos:column="58">(<argument><expr><name pos:line="55" pos:column="59">revs<pos:position pos:line="55" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="55" pos:column="65">&amp;<pos:position pos:line="55" pos:column="70"/></operator><name pos:line="55" pos:column="66">prune_data<pos:position pos:line="55" pos:column="76"/></name></expr></argument>)<pos:position pos:line="55" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="78"/></expr_stmt>
				<continue pos:line="56" pos:column="33">continue;<pos:position pos:line="56" pos:column="42"/></continue>
			}<pos:position pos:line="57" pos:column="26"/></block></then></if>

			<expr_stmt><expr><name pos:line="59" pos:column="25">opts<pos:position pos:line="59" pos:column="29"/></name> <operator pos:line="59" pos:column="30">=<pos:position pos:line="59" pos:column="31"/></operator> <call><name pos:line="59" pos:column="32">handle_revision_opt<pos:position pos:line="59" pos:column="51"/></name><argument_list pos:line="59" pos:column="51">(<argument><expr><name pos:line="59" pos:column="52">revs<pos:position pos:line="59" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="58">argc<pos:position pos:line="59" pos:column="62"/></name> <operator pos:line="59" pos:column="63">-<pos:position pos:line="59" pos:column="64"/></operator> <name pos:line="59" pos:column="65">i<pos:position pos:line="59" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="68">argv<pos:position pos:line="59" pos:column="72"/></name> <operator pos:line="59" pos:column="73">+<pos:position pos:line="59" pos:column="74"/></operator> <name pos:line="59" pos:column="75">i<pos:position pos:line="59" pos:column="76"/></name></expr></argument>, <argument><expr><operator pos:line="59" pos:column="78">&amp;<pos:position pos:line="59" pos:column="83"/></operator><name pos:line="59" pos:column="79">left<pos:position pos:line="59" pos:column="83"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="85">argv<pos:position pos:line="59" pos:column="89"/></name></expr></argument>)<pos:position pos:line="59" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="91"/></expr_stmt>
			<if pos:line="60" pos:column="25">if <condition pos:line="60" pos:column="28">(<expr><name pos:line="60" pos:column="29">opts<pos:position pos:line="60" pos:column="33"/></name> <operator pos:line="60" pos:column="34">&gt;<pos:position pos:line="60" pos:column="38"/></operator> <literal type="number" pos:line="60" pos:column="36">0<pos:position pos:line="60" pos:column="37"/></literal></expr>)<pos:position pos:line="60" pos:column="38"/></condition><then pos:line="60" pos:column="38"> <block pos:line="60" pos:column="39">{
				<expr_stmt><expr><name pos:line="61" pos:column="33">i<pos:position pos:line="61" pos:column="34"/></name> <operator pos:line="61" pos:column="35">+=<pos:position pos:line="61" pos:column="37"/></operator> <name pos:line="61" pos:column="38">opts<pos:position pos:line="61" pos:column="42"/></name> <operator pos:line="61" pos:column="43">-<pos:position pos:line="61" pos:column="44"/></operator> <literal type="number" pos:line="61" pos:column="45">1<pos:position pos:line="61" pos:column="46"/></literal></expr>;<pos:position pos:line="61" pos:column="47"/></expr_stmt>
				<continue pos:line="62" pos:column="33">continue;<pos:position pos:line="62" pos:column="42"/></continue>
			}<pos:position pos:line="63" pos:column="26"/></block></then></if>
			<if pos:line="64" pos:column="25">if <condition pos:line="64" pos:column="28">(<expr><name pos:line="64" pos:column="29">opts<pos:position pos:line="64" pos:column="33"/></name> <operator pos:line="64" pos:column="34">&lt;<pos:position pos:line="64" pos:column="38"/></operator> <literal type="number" pos:line="64" pos:column="36">0<pos:position pos:line="64" pos:column="37"/></literal></expr>)<pos:position pos:line="64" pos:column="38"/></condition><then pos:line="64" pos:column="38">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="65" pos:column="33">exit<pos:position pos:line="65" pos:column="37"/></name><argument_list pos:line="65" pos:column="37">(<argument><expr><literal type="number" pos:line="65" pos:column="38">128<pos:position pos:line="65" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="43"/></expr_stmt></block></then></if>
			<continue pos:line="66" pos:column="25">continue;<pos:position pos:line="66" pos:column="34"/></continue>
		}<pos:position pos:line="67" pos:column="18"/></block></then></if>


		<if pos:line="70" pos:column="17">if <condition pos:line="70" pos:column="20">(<expr><call><name pos:line="70" pos:column="21">handle_revision_arg<pos:position pos:line="70" pos:column="40"/></name><argument_list pos:line="70" pos:column="40">(<argument><expr><name pos:line="70" pos:column="41">arg<pos:position pos:line="70" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="46">revs<pos:position pos:line="70" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="52">flags<pos:position pos:line="70" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="59">revarg_opt<pos:position pos:line="70" pos:column="69"/></name></expr></argument>)<pos:position pos:line="70" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="70" pos:column="71"/></condition><then pos:line="70" pos:column="71"> <block pos:line="70" pos:column="72">{
			<decl_stmt><decl><type><name pos:line="71" pos:column="25">int<pos:position pos:line="71" pos:column="28"/></name></type> <name pos:line="71" pos:column="29">j<pos:position pos:line="71" pos:column="30"/></name></decl>;<pos:position pos:line="71" pos:column="31"/></decl_stmt>
			<if pos:line="72" pos:column="25">if <condition pos:line="72" pos:column="28">(<expr><name pos:line="72" pos:column="29">seen_dashdash<pos:position pos:line="72" pos:column="42"/></name> <operator pos:line="72" pos:column="43">||<pos:position pos:line="72" pos:column="45"/></operator> <operator pos:line="72" pos:column="46">*<pos:position pos:line="72" pos:column="47"/></operator><name pos:line="72" pos:column="47">arg<pos:position pos:line="72" pos:column="50"/></name> <operator pos:line="72" pos:column="51">==<pos:position pos:line="72" pos:column="53"/></operator> <literal type="char" pos:line="72" pos:column="54">'^'<pos:position pos:line="72" pos:column="57"/></literal></expr>)<pos:position pos:line="72" pos:column="58"/></condition><then pos:line="72" pos:column="58">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="73" pos:column="33">die<pos:position pos:line="73" pos:column="36"/></name><argument_list pos:line="73" pos:column="36">(<argument><expr><literal type="string" pos:line="73" pos:column="37">"bad revision '%s'"<pos:position pos:line="73" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="73" pos:column="58">arg<pos:position pos:line="73" pos:column="61"/></name></expr></argument>)<pos:position pos:line="73" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="63"/></expr_stmt></block></then></if>

			<comment type="block" pos:line="75" pos:column="25">/* If we didn't have a "--":
			 * (1) all filenames must exist;
			 * (2) all rev-args must not be interpretable
			 *     as a valid filename.
			 * but the latter we have checked in the main loop.
			 */</comment>
			<for pos:line="81" pos:column="25">for <control pos:line="81" pos:column="29">(<init><expr><name pos:line="81" pos:column="30">j<pos:position pos:line="81" pos:column="31"/></name> <operator pos:line="81" pos:column="32">=<pos:position pos:line="81" pos:column="33"/></operator> <name pos:line="81" pos:column="34">i<pos:position pos:line="81" pos:column="35"/></name></expr>;<pos:position pos:line="81" pos:column="36"/></init> <condition><expr><name pos:line="81" pos:column="37">j<pos:position pos:line="81" pos:column="38"/></name> <operator pos:line="81" pos:column="39">&lt;<pos:position pos:line="81" pos:column="43"/></operator> <name pos:line="81" pos:column="41">argc<pos:position pos:line="81" pos:column="45"/></name></expr>;<pos:position pos:line="81" pos:column="46"/></condition> <incr><expr><name pos:line="81" pos:column="47">j<pos:position pos:line="81" pos:column="48"/></name><operator pos:line="81" pos:column="48">++<pos:position pos:line="81" pos:column="50"/></operator></expr></incr>)<pos:position pos:line="81" pos:column="51"/></control>
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="82" pos:column="33">verify_filename<pos:position pos:line="82" pos:column="48"/></name><argument_list pos:line="82" pos:column="48">(<argument><expr><name><name pos:line="82" pos:column="49">revs<pos:position pos:line="82" pos:column="53"/></name><operator pos:line="82" pos:column="53">-&gt;<pos:position pos:line="82" pos:column="58"/></operator><name pos:line="82" pos:column="55">prefix<pos:position pos:line="82" pos:column="61"/></name></name></expr></argument>, <argument><expr><name><name pos:line="82" pos:column="63">argv<pos:position pos:line="82" pos:column="67"/></name><index pos:line="82" pos:column="67">[<expr><name pos:line="82" pos:column="68">j<pos:position pos:line="82" pos:column="69"/></name></expr>]<pos:position pos:line="82" pos:column="70"/></index></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="72">j<pos:position pos:line="82" pos:column="73"/></name> <operator pos:line="82" pos:column="74">==<pos:position pos:line="82" pos:column="76"/></operator> <name pos:line="82" pos:column="77">i<pos:position pos:line="82" pos:column="78"/></name></expr></argument>)<pos:position pos:line="82" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="80"/></expr_stmt></block></for>

			<expr_stmt><expr><call><name pos:line="84" pos:column="25">append_prune_data<pos:position pos:line="84" pos:column="42"/></name><argument_list pos:line="84" pos:column="42">(<argument><expr><operator pos:line="84" pos:column="43">&amp;<pos:position pos:line="84" pos:column="48"/></operator><name pos:line="84" pos:column="44">prune_data<pos:position pos:line="84" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="56">argv<pos:position pos:line="84" pos:column="60"/></name> <operator pos:line="84" pos:column="61">+<pos:position pos:line="84" pos:column="62"/></operator> <name pos:line="84" pos:column="63">i<pos:position pos:line="84" pos:column="64"/></name></expr></argument>)<pos:position pos:line="84" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="66"/></expr_stmt>
			<break pos:line="85" pos:column="25">break;<pos:position pos:line="85" pos:column="31"/></break>
		}<pos:position pos:line="86" pos:column="18"/></block></then>
		<else pos:line="87" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="88" pos:column="25">got_rev_arg<pos:position pos:line="88" pos:column="36"/></name> <operator pos:line="88" pos:column="37">=<pos:position pos:line="88" pos:column="38"/></operator> <literal type="number" pos:line="88" pos:column="39">1<pos:position pos:line="88" pos:column="40"/></literal></expr>;<pos:position pos:line="88" pos:column="41"/></expr_stmt></block></else></if>
	}<pos:position pos:line="89" pos:column="10"/></block></for>

	<if pos:line="91" pos:column="9">if <condition pos:line="91" pos:column="12">(<expr><name><name pos:line="91" pos:column="13">prune_data<pos:position pos:line="91" pos:column="23"/></name><operator pos:line="91" pos:column="23">.<pos:position pos:line="91" pos:column="24"/></operator><name pos:line="91" pos:column="24">nr<pos:position pos:line="91" pos:column="26"/></name></name></expr>)<pos:position pos:line="91" pos:column="27"/></condition><then pos:line="91" pos:column="27"> <block pos:line="91" pos:column="28">{
		<comment type="block" pos:line="92" pos:column="17">/*
		 * If we need to introduce the magic "a lone ':' means no
		 * pathspec whatsoever", here is the place to do so.
		 *
		 * if (prune_data.nr == 1 &amp;&amp; !strcmp(prune_data[0], ":")) {
		 *	prune_data.nr = 0;
		 *	prune_data.alloc = 0;
		 *	free(prune_data.path);
		 *	prune_data.path = NULL;
		 * } else {
		 *	terminate prune_data.alloc with NULL and
		 *	call init_pathspec() to set revs-&gt;prune_data here.
		 * }
		 */</comment>
		<expr_stmt><expr><call><name pos:line="106" pos:column="17">ALLOC_GROW<pos:position pos:line="106" pos:column="27"/></name><argument_list pos:line="106" pos:column="27">(<argument><expr><name><name pos:line="106" pos:column="28">prune_data<pos:position pos:line="106" pos:column="38"/></name><operator pos:line="106" pos:column="38">.<pos:position pos:line="106" pos:column="39"/></operator><name pos:line="106" pos:column="39">path<pos:position pos:line="106" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="106" pos:column="45">prune_data<pos:position pos:line="106" pos:column="55"/></name><operator pos:line="106" pos:column="55">.<pos:position pos:line="106" pos:column="56"/></operator><name pos:line="106" pos:column="56">nr<pos:position pos:line="106" pos:column="58"/></name></name> <operator pos:line="106" pos:column="59">+<pos:position pos:line="106" pos:column="60"/></operator> <literal type="number" pos:line="106" pos:column="61">1<pos:position pos:line="106" pos:column="62"/></literal></expr></argument>, <argument><expr><name><name pos:line="106" pos:column="64">prune_data<pos:position pos:line="106" pos:column="74"/></name><operator pos:line="106" pos:column="74">.<pos:position pos:line="106" pos:column="75"/></operator><name pos:line="106" pos:column="75">alloc<pos:position pos:line="106" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="106" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="82"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="107" pos:column="17">prune_data<pos:position pos:line="107" pos:column="27"/></name><operator pos:line="107" pos:column="27">.<pos:position pos:line="107" pos:column="28"/></operator><name pos:line="107" pos:column="28">path<pos:position pos:line="107" pos:column="32"/></name><index pos:line="107" pos:column="32">[<expr><name><name pos:line="107" pos:column="33">prune_data<pos:position pos:line="107" pos:column="43"/></name><operator pos:line="107" pos:column="43">.<pos:position pos:line="107" pos:column="44"/></operator><name pos:line="107" pos:column="44">nr<pos:position pos:line="107" pos:column="46"/></name></name><operator pos:line="107" pos:column="46">++<pos:position pos:line="107" pos:column="48"/></operator></expr>]<pos:position pos:line="107" pos:column="49"/></index></name> <operator pos:line="107" pos:column="50">=<pos:position pos:line="107" pos:column="51"/></operator> <name pos:line="107" pos:column="52">NULL<pos:position pos:line="107" pos:column="56"/></name></expr>;<pos:position pos:line="107" pos:column="57"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="108" pos:column="17">parse_pathspec<pos:position pos:line="108" pos:column="31"/></name><argument_list pos:line="108" pos:column="31">(<argument><expr><operator pos:line="108" pos:column="32">&amp;<pos:position pos:line="108" pos:column="37"/></operator><name><name pos:line="108" pos:column="33">revs<pos:position pos:line="108" pos:column="37"/></name><operator pos:line="108" pos:column="37">-&gt;<pos:position pos:line="108" pos:column="42"/></operator><name pos:line="108" pos:column="39">prune_data<pos:position pos:line="108" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="108" pos:column="51">0<pos:position pos:line="108" pos:column="52"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="108" pos:column="54">0<pos:position pos:line="108" pos:column="55"/></literal></expr></argument>,
			       <argument><expr><name><name pos:line="109" pos:column="32">revs<pos:position pos:line="109" pos:column="36"/></name><operator pos:line="109" pos:column="36">-&gt;<pos:position pos:line="109" pos:column="41"/></operator><name pos:line="109" pos:column="38">prefix<pos:position pos:line="109" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="109" pos:column="46">prune_data<pos:position pos:line="109" pos:column="56"/></name><operator pos:line="109" pos:column="56">.<pos:position pos:line="109" pos:column="57"/></operator><name pos:line="109" pos:column="57">path<pos:position pos:line="109" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="109" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="63"/></expr_stmt>
	}<pos:position pos:line="110" pos:column="10"/></block></then></if>

	<if pos:line="112" pos:column="9">if <condition pos:line="112" pos:column="12">(<expr><name><name pos:line="112" pos:column="13">revs<pos:position pos:line="112" pos:column="17"/></name><operator pos:line="112" pos:column="17">-&gt;<pos:position pos:line="112" pos:column="22"/></operator><name pos:line="112" pos:column="19">def<pos:position pos:line="112" pos:column="22"/></name></name> <operator pos:line="112" pos:column="23">==<pos:position pos:line="112" pos:column="25"/></operator> <name pos:line="112" pos:column="26">NULL<pos:position pos:line="112" pos:column="30"/></name></expr>)<pos:position pos:line="112" pos:column="31"/></condition><then pos:line="112" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="113" pos:column="17">revs<pos:position pos:line="113" pos:column="21"/></name><operator pos:line="113" pos:column="21">-&gt;<pos:position pos:line="113" pos:column="26"/></operator><name pos:line="113" pos:column="23">def<pos:position pos:line="113" pos:column="26"/></name></name> <operator pos:line="113" pos:column="27">=<pos:position pos:line="113" pos:column="28"/></operator> <ternary><condition><expr><name pos:line="113" pos:column="29">opt<pos:position pos:line="113" pos:column="32"/></name></expr> ?<pos:position pos:line="113" pos:column="34"/></condition><then pos:line="113" pos:column="34"> <expr><name><name pos:line="113" pos:column="35">opt<pos:position pos:line="113" pos:column="38"/></name><operator pos:line="113" pos:column="38">-&gt;<pos:position pos:line="113" pos:column="43"/></operator><name pos:line="113" pos:column="40">def<pos:position pos:line="113" pos:column="43"/></name></name></expr> <pos:position pos:line="113" pos:column="44"/></then><else pos:line="113" pos:column="44">: <expr><name pos:line="113" pos:column="46">NULL<pos:position pos:line="113" pos:column="50"/></name></expr></else></ternary></expr>;<pos:position pos:line="113" pos:column="51"/></expr_stmt></block></then></if>
	<if pos:line="114" pos:column="9">if <condition pos:line="114" pos:column="12">(<expr><name pos:line="114" pos:column="13">opt<pos:position pos:line="114" pos:column="16"/></name> <operator pos:line="114" pos:column="17">&amp;&amp;<pos:position pos:line="114" pos:column="27"/></operator> <name><name pos:line="114" pos:column="20">opt<pos:position pos:line="114" pos:column="23"/></name><operator pos:line="114" pos:column="23">-&gt;<pos:position pos:line="114" pos:column="28"/></operator><name pos:line="114" pos:column="25">tweak<pos:position pos:line="114" pos:column="30"/></name></name></expr>)<pos:position pos:line="114" pos:column="31"/></condition><then pos:line="114" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><call><name><name pos:line="115" pos:column="17">opt<pos:position pos:line="115" pos:column="20"/></name><operator pos:line="115" pos:column="20">-&gt;<pos:position pos:line="115" pos:column="25"/></operator><name pos:line="115" pos:column="22">tweak<pos:position pos:line="115" pos:column="27"/></name></name><argument_list pos:line="115" pos:column="27">(<argument><expr><name pos:line="115" pos:column="28">revs<pos:position pos:line="115" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="34">opt<pos:position pos:line="115" pos:column="37"/></name></expr></argument>)<pos:position pos:line="115" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="39"/></expr_stmt></block></then></if>
	<if pos:line="116" pos:column="9">if <condition pos:line="116" pos:column="12">(<expr><name><name pos:line="116" pos:column="13">revs<pos:position pos:line="116" pos:column="17"/></name><operator pos:line="116" pos:column="17">-&gt;<pos:position pos:line="116" pos:column="22"/></operator><name pos:line="116" pos:column="19">show_merge<pos:position pos:line="116" pos:column="29"/></name></name></expr>)<pos:position pos:line="116" pos:column="30"/></condition><then pos:line="116" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="117" pos:column="17">prepare_show_merge<pos:position pos:line="117" pos:column="35"/></name><argument_list pos:line="117" pos:column="35">(<argument><expr><name pos:line="117" pos:column="36">revs<pos:position pos:line="117" pos:column="40"/></name></expr></argument>)<pos:position pos:line="117" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="42"/></expr_stmt></block></then></if>
	<if pos:line="118" pos:column="9">if <condition pos:line="118" pos:column="12">(<expr><name><name pos:line="118" pos:column="13">revs<pos:position pos:line="118" pos:column="17"/></name><operator pos:line="118" pos:column="17">-&gt;<pos:position pos:line="118" pos:column="22"/></operator><name pos:line="118" pos:column="19">def<pos:position pos:line="118" pos:column="22"/></name></name> <operator pos:line="118" pos:column="23">&amp;&amp;<pos:position pos:line="118" pos:column="33"/></operator> <operator pos:line="118" pos:column="26">!<pos:position pos:line="118" pos:column="27"/></operator><name><name pos:line="118" pos:column="27">revs<pos:position pos:line="118" pos:column="31"/></name><operator pos:line="118" pos:column="31">-&gt;<pos:position pos:line="118" pos:column="36"/></operator><name pos:line="118" pos:column="33">pending<pos:position pos:line="118" pos:column="40"/></name><operator pos:line="118" pos:column="40">.<pos:position pos:line="118" pos:column="41"/></operator><name pos:line="118" pos:column="41">nr<pos:position pos:line="118" pos:column="43"/></name></name> <operator pos:line="118" pos:column="44">&amp;&amp;<pos:position pos:line="118" pos:column="54"/></operator> <operator pos:line="118" pos:column="47">!<pos:position pos:line="118" pos:column="48"/></operator><name><name pos:line="118" pos:column="48">revs<pos:position pos:line="118" pos:column="52"/></name><operator pos:line="118" pos:column="52">-&gt;<pos:position pos:line="118" pos:column="57"/></operator><name pos:line="118" pos:column="54">rev_input_given<pos:position pos:line="118" pos:column="69"/></name></name> <operator pos:line="118" pos:column="70">&amp;&amp;<pos:position pos:line="118" pos:column="80"/></operator> <operator pos:line="118" pos:column="73">!<pos:position pos:line="118" pos:column="74"/></operator><name pos:line="118" pos:column="74">got_rev_arg<pos:position pos:line="118" pos:column="85"/></name></expr>)<pos:position pos:line="118" pos:column="86"/></condition><then pos:line="118" pos:column="86"> <block pos:line="118" pos:column="87">{
		<decl_stmt><decl><type><name><name pos:line="119" pos:column="17">struct<pos:position pos:line="119" pos:column="23"/></name> <name pos:line="119" pos:column="24">object_id<pos:position pos:line="119" pos:column="33"/></name></name></type> <name pos:line="119" pos:column="34">oid<pos:position pos:line="119" pos:column="37"/></name></decl>;<pos:position pos:line="119" pos:column="38"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="120" pos:column="17">struct<pos:position pos:line="120" pos:column="23"/></name> <name pos:line="120" pos:column="24">object<pos:position pos:line="120" pos:column="30"/></name></name> <modifier pos:line="120" pos:column="31">*<pos:position pos:line="120" pos:column="32"/></modifier></type><name pos:line="120" pos:column="32">object<pos:position pos:line="120" pos:column="38"/></name></decl>;<pos:position pos:line="120" pos:column="39"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="121" pos:column="17">struct<pos:position pos:line="121" pos:column="23"/></name> <name pos:line="121" pos:column="24">object_context<pos:position pos:line="121" pos:column="38"/></name></name></type> <name pos:line="121" pos:column="39">oc<pos:position pos:line="121" pos:column="41"/></name></decl>;<pos:position pos:line="121" pos:column="42"/></decl_stmt>
		<if pos:line="122" pos:column="17">if <condition pos:line="122" pos:column="20">(<expr><call><name pos:line="122" pos:column="21">get_sha1_with_context<pos:position pos:line="122" pos:column="42"/></name><argument_list pos:line="122" pos:column="42">(<argument><expr><name><name pos:line="122" pos:column="43">revs<pos:position pos:line="122" pos:column="47"/></name><operator pos:line="122" pos:column="47">-&gt;<pos:position pos:line="122" pos:column="52"/></operator><name pos:line="122" pos:column="49">def<pos:position pos:line="122" pos:column="52"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="122" pos:column="54">0<pos:position pos:line="122" pos:column="55"/></literal></expr></argument>, <argument><expr><name><name pos:line="122" pos:column="57">oid<pos:position pos:line="122" pos:column="60"/></name><operator pos:line="122" pos:column="60">.<pos:position pos:line="122" pos:column="61"/></operator><name pos:line="122" pos:column="61">hash<pos:position pos:line="122" pos:column="65"/></name></name></expr></argument>, <argument><expr><operator pos:line="122" pos:column="67">&amp;<pos:position pos:line="122" pos:column="72"/></operator><name pos:line="122" pos:column="68">oc<pos:position pos:line="122" pos:column="70"/></name></expr></argument>)<pos:position pos:line="122" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="122" pos:column="72"/></condition><then pos:line="122" pos:column="72">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="123" pos:column="25">diagnose_missing_default<pos:position pos:line="123" pos:column="49"/></name><argument_list pos:line="123" pos:column="49">(<argument><expr><name><name pos:line="123" pos:column="50">revs<pos:position pos:line="123" pos:column="54"/></name><operator pos:line="123" pos:column="54">-&gt;<pos:position pos:line="123" pos:column="59"/></operator><name pos:line="123" pos:column="56">def<pos:position pos:line="123" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="123" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="61"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="124" pos:column="17">object<pos:position pos:line="124" pos:column="23"/></name> <operator pos:line="124" pos:column="24">=<pos:position pos:line="124" pos:column="25"/></operator> <call><name pos:line="124" pos:column="26">get_reference<pos:position pos:line="124" pos:column="39"/></name><argument_list pos:line="124" pos:column="39">(<argument><expr><name pos:line="124" pos:column="40">revs<pos:position pos:line="124" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="124" pos:column="46">revs<pos:position pos:line="124" pos:column="50"/></name><operator pos:line="124" pos:column="50">-&gt;<pos:position pos:line="124" pos:column="55"/></operator><name pos:line="124" pos:column="52">def<pos:position pos:line="124" pos:column="55"/></name></name></expr></argument>, <argument><expr><operator pos:line="124" pos:column="57">&amp;<pos:position pos:line="124" pos:column="62"/></operator><name pos:line="124" pos:column="58">oid<pos:position pos:line="124" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="124" pos:column="63">0<pos:position pos:line="124" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="124" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="66"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="125" pos:column="17">add_pending_object_with_mode<pos:position pos:line="125" pos:column="45"/></name><argument_list pos:line="125" pos:column="45">(<argument><expr><name pos:line="125" pos:column="46">revs<pos:position pos:line="125" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="125" pos:column="52">object<pos:position pos:line="125" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="125" pos:column="60">revs<pos:position pos:line="125" pos:column="64"/></name><operator pos:line="125" pos:column="64">-&gt;<pos:position pos:line="125" pos:column="69"/></operator><name pos:line="125" pos:column="66">def<pos:position pos:line="125" pos:column="69"/></name></name></expr></argument>, <argument><expr><name><name pos:line="125" pos:column="71">oc<pos:position pos:line="125" pos:column="73"/></name><operator pos:line="125" pos:column="73">.<pos:position pos:line="125" pos:column="74"/></operator><name pos:line="125" pos:column="74">mode<pos:position pos:line="125" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="125" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="80"/></expr_stmt>
	}<pos:position pos:line="126" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="128" pos:column="9">/* Did the user ask for any diff output? Run the diff! */</comment>
	<if pos:line="129" pos:column="9">if <condition pos:line="129" pos:column="12">(<expr><name><name pos:line="129" pos:column="13">revs<pos:position pos:line="129" pos:column="17"/></name><operator pos:line="129" pos:column="17">-&gt;<pos:position pos:line="129" pos:column="22"/></operator><name pos:line="129" pos:column="19">diffopt<pos:position pos:line="129" pos:column="26"/></name><operator pos:line="129" pos:column="26">.<pos:position pos:line="129" pos:column="27"/></operator><name pos:line="129" pos:column="27">output_format<pos:position pos:line="129" pos:column="40"/></name></name> <operator pos:line="129" pos:column="41">&amp;<pos:position pos:line="129" pos:column="46"/></operator> <operator pos:line="129" pos:column="43">~<pos:position pos:line="129" pos:column="44"/></operator><name pos:line="129" pos:column="44">DIFF_FORMAT_NO_OUTPUT<pos:position pos:line="129" pos:column="65"/></name></expr>)<pos:position pos:line="129" pos:column="66"/></condition><then pos:line="129" pos:column="66">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="130" pos:column="17">revs<pos:position pos:line="130" pos:column="21"/></name><operator pos:line="130" pos:column="21">-&gt;<pos:position pos:line="130" pos:column="26"/></operator><name pos:line="130" pos:column="23">diff<pos:position pos:line="130" pos:column="27"/></name></name> <operator pos:line="130" pos:column="28">=<pos:position pos:line="130" pos:column="29"/></operator> <literal type="number" pos:line="130" pos:column="30">1<pos:position pos:line="130" pos:column="31"/></literal></expr>;<pos:position pos:line="130" pos:column="32"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="132" pos:column="9">/* Pickaxe, diff-filter and rename following need diffs */</comment>
	<if pos:line="133" pos:column="9">if <condition pos:line="133" pos:column="12">(<expr><name><name pos:line="133" pos:column="13">revs<pos:position pos:line="133" pos:column="17"/></name><operator pos:line="133" pos:column="17">-&gt;<pos:position pos:line="133" pos:column="22"/></operator><name pos:line="133" pos:column="19">diffopt<pos:position pos:line="133" pos:column="26"/></name><operator pos:line="133" pos:column="26">.<pos:position pos:line="133" pos:column="27"/></operator><name pos:line="133" pos:column="27">pickaxe<pos:position pos:line="133" pos:column="34"/></name></name> <operator pos:line="133" pos:column="35">||<pos:position pos:line="133" pos:column="37"/></operator>
	    <name><name pos:line="134" pos:column="13">revs<pos:position pos:line="134" pos:column="17"/></name><operator pos:line="134" pos:column="17">-&gt;<pos:position pos:line="134" pos:column="22"/></operator><name pos:line="134" pos:column="19">diffopt<pos:position pos:line="134" pos:column="26"/></name><operator pos:line="134" pos:column="26">.<pos:position pos:line="134" pos:column="27"/></operator><name pos:line="134" pos:column="27">filter<pos:position pos:line="134" pos:column="33"/></name></name> <operator pos:line="134" pos:column="34">||<pos:position pos:line="134" pos:column="36"/></operator>
	    <call><name pos:line="135" pos:column="13">DIFF_OPT_TST<pos:position pos:line="135" pos:column="25"/></name><argument_list pos:line="135" pos:column="25">(<argument><expr><operator pos:line="135" pos:column="26">&amp;<pos:position pos:line="135" pos:column="31"/></operator><name><name pos:line="135" pos:column="27">revs<pos:position pos:line="135" pos:column="31"/></name><operator pos:line="135" pos:column="31">-&gt;<pos:position pos:line="135" pos:column="36"/></operator><name pos:line="135" pos:column="33">diffopt<pos:position pos:line="135" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="135" pos:column="42">FOLLOW_RENAMES<pos:position pos:line="135" pos:column="56"/></name></expr></argument>)<pos:position pos:line="135" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="135" pos:column="58"/></condition><then pos:line="135" pos:column="58">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="136" pos:column="17">revs<pos:position pos:line="136" pos:column="21"/></name><operator pos:line="136" pos:column="21">-&gt;<pos:position pos:line="136" pos:column="26"/></operator><name pos:line="136" pos:column="23">diff<pos:position pos:line="136" pos:column="27"/></name></name> <operator pos:line="136" pos:column="28">=<pos:position pos:line="136" pos:column="29"/></operator> <literal type="number" pos:line="136" pos:column="30">1<pos:position pos:line="136" pos:column="31"/></literal></expr>;<pos:position pos:line="136" pos:column="32"/></expr_stmt></block></then></if>

	<if pos:line="138" pos:column="9">if <condition pos:line="138" pos:column="12">(<expr><name><name pos:line="138" pos:column="13">revs<pos:position pos:line="138" pos:column="17"/></name><operator pos:line="138" pos:column="17">-&gt;<pos:position pos:line="138" pos:column="22"/></operator><name pos:line="138" pos:column="19">topo_order<pos:position pos:line="138" pos:column="29"/></name></name></expr>)<pos:position pos:line="138" pos:column="30"/></condition><then pos:line="138" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="139" pos:column="17">revs<pos:position pos:line="139" pos:column="21"/></name><operator pos:line="139" pos:column="21">-&gt;<pos:position pos:line="139" pos:column="26"/></operator><name pos:line="139" pos:column="23">limited<pos:position pos:line="139" pos:column="30"/></name></name> <operator pos:line="139" pos:column="31">=<pos:position pos:line="139" pos:column="32"/></operator> <literal type="number" pos:line="139" pos:column="33">1<pos:position pos:line="139" pos:column="34"/></literal></expr>;<pos:position pos:line="139" pos:column="35"/></expr_stmt></block></then></if>

	<if pos:line="141" pos:column="9">if <condition pos:line="141" pos:column="12">(<expr><name><name pos:line="141" pos:column="13">revs<pos:position pos:line="141" pos:column="17"/></name><operator pos:line="141" pos:column="17">-&gt;<pos:position pos:line="141" pos:column="22"/></operator><name pos:line="141" pos:column="19">prune_data<pos:position pos:line="141" pos:column="29"/></name><operator pos:line="141" pos:column="29">.<pos:position pos:line="141" pos:column="30"/></operator><name pos:line="141" pos:column="30">nr<pos:position pos:line="141" pos:column="32"/></name></name></expr>)<pos:position pos:line="141" pos:column="33"/></condition><then pos:line="141" pos:column="33"> <block pos:line="141" pos:column="34">{
		<expr_stmt><expr><call><name pos:line="142" pos:column="17">copy_pathspec<pos:position pos:line="142" pos:column="30"/></name><argument_list pos:line="142" pos:column="30">(<argument><expr><operator pos:line="142" pos:column="31">&amp;<pos:position pos:line="142" pos:column="36"/></operator><name><name pos:line="142" pos:column="32">revs<pos:position pos:line="142" pos:column="36"/></name><operator pos:line="142" pos:column="36">-&gt;<pos:position pos:line="142" pos:column="41"/></operator><name pos:line="142" pos:column="38">pruning<pos:position pos:line="142" pos:column="45"/></name><operator pos:line="142" pos:column="45">.<pos:position pos:line="142" pos:column="46"/></operator><name pos:line="142" pos:column="46">pathspec<pos:position pos:line="142" pos:column="54"/></name></name></expr></argument>, <argument><expr><operator pos:line="142" pos:column="56">&amp;<pos:position pos:line="142" pos:column="61"/></operator><name><name pos:line="142" pos:column="57">revs<pos:position pos:line="142" pos:column="61"/></name><operator pos:line="142" pos:column="61">-&gt;<pos:position pos:line="142" pos:column="66"/></operator><name pos:line="142" pos:column="63">prune_data<pos:position pos:line="142" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="142" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="75"/></expr_stmt>
		<comment type="block" pos:line="143" pos:column="17">/* Can't prune commits with rename following: the paths change.. */</comment>
		<if pos:line="144" pos:column="17">if <condition pos:line="144" pos:column="20">(<expr><operator pos:line="144" pos:column="21">!<pos:position pos:line="144" pos:column="22"/></operator><call><name pos:line="144" pos:column="22">DIFF_OPT_TST<pos:position pos:line="144" pos:column="34"/></name><argument_list pos:line="144" pos:column="34">(<argument><expr><operator pos:line="144" pos:column="35">&amp;<pos:position pos:line="144" pos:column="40"/></operator><name><name pos:line="144" pos:column="36">revs<pos:position pos:line="144" pos:column="40"/></name><operator pos:line="144" pos:column="40">-&gt;<pos:position pos:line="144" pos:column="45"/></operator><name pos:line="144" pos:column="42">diffopt<pos:position pos:line="144" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="144" pos:column="51">FOLLOW_RENAMES<pos:position pos:line="144" pos:column="65"/></name></expr></argument>)<pos:position pos:line="144" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="144" pos:column="67"/></condition><then pos:line="144" pos:column="67">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="145" pos:column="25">revs<pos:position pos:line="145" pos:column="29"/></name><operator pos:line="145" pos:column="29">-&gt;<pos:position pos:line="145" pos:column="34"/></operator><name pos:line="145" pos:column="31">prune<pos:position pos:line="145" pos:column="36"/></name></name> <operator pos:line="145" pos:column="37">=<pos:position pos:line="145" pos:column="38"/></operator> <literal type="number" pos:line="145" pos:column="39">1<pos:position pos:line="145" pos:column="40"/></literal></expr>;<pos:position pos:line="145" pos:column="41"/></expr_stmt></block></then></if>
		<if pos:line="146" pos:column="17">if <condition pos:line="146" pos:column="20">(<expr><operator pos:line="146" pos:column="21">!<pos:position pos:line="146" pos:column="22"/></operator><name><name pos:line="146" pos:column="22">revs<pos:position pos:line="146" pos:column="26"/></name><operator pos:line="146" pos:column="26">-&gt;<pos:position pos:line="146" pos:column="31"/></operator><name pos:line="146" pos:column="28">full_diff<pos:position pos:line="146" pos:column="37"/></name></name></expr>)<pos:position pos:line="146" pos:column="38"/></condition><then pos:line="146" pos:column="38">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="147" pos:column="25">copy_pathspec<pos:position pos:line="147" pos:column="38"/></name><argument_list pos:line="147" pos:column="38">(<argument><expr><operator pos:line="147" pos:column="39">&amp;<pos:position pos:line="147" pos:column="44"/></operator><name><name pos:line="147" pos:column="40">revs<pos:position pos:line="147" pos:column="44"/></name><operator pos:line="147" pos:column="44">-&gt;<pos:position pos:line="147" pos:column="49"/></operator><name pos:line="147" pos:column="46">diffopt<pos:position pos:line="147" pos:column="53"/></name><operator pos:line="147" pos:column="53">.<pos:position pos:line="147" pos:column="54"/></operator><name pos:line="147" pos:column="54">pathspec<pos:position pos:line="147" pos:column="62"/></name></name></expr></argument>,
				      <argument><expr><operator pos:line="148" pos:column="39">&amp;<pos:position pos:line="148" pos:column="44"/></operator><name><name pos:line="148" pos:column="40">revs<pos:position pos:line="148" pos:column="44"/></name><operator pos:line="148" pos:column="44">-&gt;<pos:position pos:line="148" pos:column="49"/></operator><name pos:line="148" pos:column="46">prune_data<pos:position pos:line="148" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="148" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="58"/></expr_stmt></block></then></if>
	}<pos:position pos:line="149" pos:column="10"/></block></then></if>
	<if pos:line="150" pos:column="9">if <condition pos:line="150" pos:column="12">(<expr><name><name pos:line="150" pos:column="13">revs<pos:position pos:line="150" pos:column="17"/></name><operator pos:line="150" pos:column="17">-&gt;<pos:position pos:line="150" pos:column="22"/></operator><name pos:line="150" pos:column="19">combine_merges<pos:position pos:line="150" pos:column="33"/></name></name></expr>)<pos:position pos:line="150" pos:column="34"/></condition><then pos:line="150" pos:column="34">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="151" pos:column="17">revs<pos:position pos:line="151" pos:column="21"/></name><operator pos:line="151" pos:column="21">-&gt;<pos:position pos:line="151" pos:column="26"/></operator><name pos:line="151" pos:column="23">ignore_merges<pos:position pos:line="151" pos:column="36"/></name></name> <operator pos:line="151" pos:column="37">=<pos:position pos:line="151" pos:column="38"/></operator> <literal type="number" pos:line="151" pos:column="39">0<pos:position pos:line="151" pos:column="40"/></literal></expr>;<pos:position pos:line="151" pos:column="41"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name><name pos:line="152" pos:column="9">revs<pos:position pos:line="152" pos:column="13"/></name><operator pos:line="152" pos:column="13">-&gt;<pos:position pos:line="152" pos:column="18"/></operator><name pos:line="152" pos:column="15">diffopt<pos:position pos:line="152" pos:column="22"/></name><operator pos:line="152" pos:column="22">.<pos:position pos:line="152" pos:column="23"/></operator><name pos:line="152" pos:column="23">abbrev<pos:position pos:line="152" pos:column="29"/></name></name> <operator pos:line="152" pos:column="30">=<pos:position pos:line="152" pos:column="31"/></operator> <name><name pos:line="152" pos:column="32">revs<pos:position pos:line="152" pos:column="36"/></name><operator pos:line="152" pos:column="36">-&gt;<pos:position pos:line="152" pos:column="41"/></operator><name pos:line="152" pos:column="38">abbrev<pos:position pos:line="152" pos:column="44"/></name></name></expr>;<pos:position pos:line="152" pos:column="45"/></expr_stmt>

	<if pos:line="154" pos:column="9">if <condition pos:line="154" pos:column="12">(<expr><name><name pos:line="154" pos:column="13">revs<pos:position pos:line="154" pos:column="17"/></name><operator pos:line="154" pos:column="17">-&gt;<pos:position pos:line="154" pos:column="22"/></operator><name pos:line="154" pos:column="19">line_level_traverse<pos:position pos:line="154" pos:column="38"/></name></name></expr>)<pos:position pos:line="154" pos:column="39"/></condition><then pos:line="154" pos:column="39"> <block pos:line="154" pos:column="40">{
		<expr_stmt><expr><name><name pos:line="155" pos:column="17">revs<pos:position pos:line="155" pos:column="21"/></name><operator pos:line="155" pos:column="21">-&gt;<pos:position pos:line="155" pos:column="26"/></operator><name pos:line="155" pos:column="23">limited<pos:position pos:line="155" pos:column="30"/></name></name> <operator pos:line="155" pos:column="31">=<pos:position pos:line="155" pos:column="32"/></operator> <literal type="number" pos:line="155" pos:column="33">1<pos:position pos:line="155" pos:column="34"/></literal></expr>;<pos:position pos:line="155" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="156" pos:column="17">revs<pos:position pos:line="156" pos:column="21"/></name><operator pos:line="156" pos:column="21">-&gt;<pos:position pos:line="156" pos:column="26"/></operator><name pos:line="156" pos:column="23">topo_order<pos:position pos:line="156" pos:column="33"/></name></name> <operator pos:line="156" pos:column="34">=<pos:position pos:line="156" pos:column="35"/></operator> <literal type="number" pos:line="156" pos:column="36">1<pos:position pos:line="156" pos:column="37"/></literal></expr>;<pos:position pos:line="156" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="157" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="159" pos:column="9">diff_setup_done<pos:position pos:line="159" pos:column="24"/></name><argument_list pos:line="159" pos:column="24">(<argument><expr><operator pos:line="159" pos:column="25">&amp;<pos:position pos:line="159" pos:column="30"/></operator><name><name pos:line="159" pos:column="26">revs<pos:position pos:line="159" pos:column="30"/></name><operator pos:line="159" pos:column="30">-&gt;<pos:position pos:line="159" pos:column="35"/></operator><name pos:line="159" pos:column="32">diffopt<pos:position pos:line="159" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="159" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="41"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="161" pos:column="9">grep_commit_pattern_type<pos:position pos:line="161" pos:column="33"/></name><argument_list pos:line="161" pos:column="33">(<argument><expr><name pos:line="161" pos:column="34">GREP_PATTERN_TYPE_UNSPECIFIED<pos:position pos:line="161" pos:column="63"/></name></expr></argument>,
				 <argument><expr><operator pos:line="162" pos:column="34">&amp;<pos:position pos:line="162" pos:column="39"/></operator><name><name pos:line="162" pos:column="35">revs<pos:position pos:line="162" pos:column="39"/></name><operator pos:line="162" pos:column="39">-&gt;<pos:position pos:line="162" pos:column="44"/></operator><name pos:line="162" pos:column="41">grep_filter<pos:position pos:line="162" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="162" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="54"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="163" pos:column="9">compile_grep_patterns<pos:position pos:line="163" pos:column="30"/></name><argument_list pos:line="163" pos:column="30">(<argument><expr><operator pos:line="163" pos:column="31">&amp;<pos:position pos:line="163" pos:column="36"/></operator><name><name pos:line="163" pos:column="32">revs<pos:position pos:line="163" pos:column="36"/></name><operator pos:line="163" pos:column="36">-&gt;<pos:position pos:line="163" pos:column="41"/></operator><name pos:line="163" pos:column="38">grep_filter<pos:position pos:line="163" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="163" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="51"/></expr_stmt>

	<if pos:line="165" pos:column="9">if <condition pos:line="165" pos:column="12">(<expr><name><name pos:line="165" pos:column="13">revs<pos:position pos:line="165" pos:column="17"/></name><operator pos:line="165" pos:column="17">-&gt;<pos:position pos:line="165" pos:column="22"/></operator><name pos:line="165" pos:column="19">reverse<pos:position pos:line="165" pos:column="26"/></name></name> <operator pos:line="165" pos:column="27">&amp;&amp;<pos:position pos:line="165" pos:column="37"/></operator> <name><name pos:line="165" pos:column="30">revs<pos:position pos:line="165" pos:column="34"/></name><operator pos:line="165" pos:column="34">-&gt;<pos:position pos:line="165" pos:column="39"/></operator><name pos:line="165" pos:column="36">reflog_info<pos:position pos:line="165" pos:column="47"/></name></name></expr>)<pos:position pos:line="165" pos:column="48"/></condition><then pos:line="165" pos:column="48">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="166" pos:column="17">die<pos:position pos:line="166" pos:column="20"/></name><argument_list pos:line="166" pos:column="20">(<argument><expr><literal type="string" pos:line="166" pos:column="21">"cannot combine --reverse with --walk-reflogs"<pos:position pos:line="166" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="166" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="69"/></expr_stmt></block></then></if>
	<if pos:line="167" pos:column="9">if <condition pos:line="167" pos:column="12">(<expr><name><name pos:line="167" pos:column="13">revs<pos:position pos:line="167" pos:column="17"/></name><operator pos:line="167" pos:column="17">-&gt;<pos:position pos:line="167" pos:column="22"/></operator><name pos:line="167" pos:column="19">reflog_info<pos:position pos:line="167" pos:column="30"/></name></name> <operator pos:line="167" pos:column="31">&amp;&amp;<pos:position pos:line="167" pos:column="41"/></operator> <name><name pos:line="167" pos:column="34">revs<pos:position pos:line="167" pos:column="38"/></name><operator pos:line="167" pos:column="38">-&gt;<pos:position pos:line="167" pos:column="43"/></operator><name pos:line="167" pos:column="40">limited<pos:position pos:line="167" pos:column="47"/></name></name></expr>)<pos:position pos:line="167" pos:column="48"/></condition><then pos:line="167" pos:column="48">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="168" pos:column="17">die<pos:position pos:line="168" pos:column="20"/></name><argument_list pos:line="168" pos:column="20">(<argument><expr><literal type="string" pos:line="168" pos:column="21">"cannot combine --walk-reflogs with history-limiting options"<pos:position pos:line="168" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="168" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="84"/></expr_stmt></block></then></if>
	<if pos:line="169" pos:column="9">if <condition pos:line="169" pos:column="12">(<expr><name><name pos:line="169" pos:column="13">revs<pos:position pos:line="169" pos:column="17"/></name><operator pos:line="169" pos:column="17">-&gt;<pos:position pos:line="169" pos:column="22"/></operator><name pos:line="169" pos:column="19">rewrite_parents<pos:position pos:line="169" pos:column="34"/></name></name> <operator pos:line="169" pos:column="35">&amp;&amp;<pos:position pos:line="169" pos:column="45"/></operator> <name><name pos:line="169" pos:column="38">revs<pos:position pos:line="169" pos:column="42"/></name><operator pos:line="169" pos:column="42">-&gt;<pos:position pos:line="169" pos:column="47"/></operator><name pos:line="169" pos:column="44">children<pos:position pos:line="169" pos:column="52"/></name><operator pos:line="169" pos:column="52">.<pos:position pos:line="169" pos:column="53"/></operator><name pos:line="169" pos:column="53">name<pos:position pos:line="169" pos:column="57"/></name></name></expr>)<pos:position pos:line="169" pos:column="58"/></condition><then pos:line="169" pos:column="58">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="170" pos:column="17">die<pos:position pos:line="170" pos:column="20"/></name><argument_list pos:line="170" pos:column="20">(<argument><expr><literal type="string" pos:line="170" pos:column="21">"cannot combine --parents and --children"<pos:position pos:line="170" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="170" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="170" pos:column="64"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="172" pos:column="9">/*
	 * Limitations on the graph functionality
	 */</comment>
	<if pos:line="175" pos:column="9">if <condition pos:line="175" pos:column="12">(<expr><name><name pos:line="175" pos:column="13">revs<pos:position pos:line="175" pos:column="17"/></name><operator pos:line="175" pos:column="17">-&gt;<pos:position pos:line="175" pos:column="22"/></operator><name pos:line="175" pos:column="19">reverse<pos:position pos:line="175" pos:column="26"/></name></name> <operator pos:line="175" pos:column="27">&amp;&amp;<pos:position pos:line="175" pos:column="37"/></operator> <name><name pos:line="175" pos:column="30">revs<pos:position pos:line="175" pos:column="34"/></name><operator pos:line="175" pos:column="34">-&gt;<pos:position pos:line="175" pos:column="39"/></operator><name pos:line="175" pos:column="36">graph<pos:position pos:line="175" pos:column="41"/></name></name></expr>)<pos:position pos:line="175" pos:column="42"/></condition><then pos:line="175" pos:column="42">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="176" pos:column="17">die<pos:position pos:line="176" pos:column="20"/></name><argument_list pos:line="176" pos:column="20">(<argument><expr><literal type="string" pos:line="176" pos:column="21">"cannot combine --reverse with --graph"<pos:position pos:line="176" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="176" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="62"/></expr_stmt></block></then></if>

	<if pos:line="178" pos:column="9">if <condition pos:line="178" pos:column="12">(<expr><name><name pos:line="178" pos:column="13">revs<pos:position pos:line="178" pos:column="17"/></name><operator pos:line="178" pos:column="17">-&gt;<pos:position pos:line="178" pos:column="22"/></operator><name pos:line="178" pos:column="19">reflog_info<pos:position pos:line="178" pos:column="30"/></name></name> <operator pos:line="178" pos:column="31">&amp;&amp;<pos:position pos:line="178" pos:column="41"/></operator> <name><name pos:line="178" pos:column="34">revs<pos:position pos:line="178" pos:column="38"/></name><operator pos:line="178" pos:column="38">-&gt;<pos:position pos:line="178" pos:column="43"/></operator><name pos:line="178" pos:column="40">graph<pos:position pos:line="178" pos:column="45"/></name></name></expr>)<pos:position pos:line="178" pos:column="46"/></condition><then pos:line="178" pos:column="46">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="179" pos:column="17">die<pos:position pos:line="179" pos:column="20"/></name><argument_list pos:line="179" pos:column="20">(<argument><expr><literal type="string" pos:line="179" pos:column="21">"cannot combine --walk-reflogs with --graph"<pos:position pos:line="179" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="179" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="179" pos:column="67"/></expr_stmt></block></then></if>
	<if pos:line="180" pos:column="9">if <condition pos:line="180" pos:column="12">(<expr><name><name pos:line="180" pos:column="13">revs<pos:position pos:line="180" pos:column="17"/></name><operator pos:line="180" pos:column="17">-&gt;<pos:position pos:line="180" pos:column="22"/></operator><name pos:line="180" pos:column="19">no_walk<pos:position pos:line="180" pos:column="26"/></name></name> <operator pos:line="180" pos:column="27">&amp;&amp;<pos:position pos:line="180" pos:column="37"/></operator> <name><name pos:line="180" pos:column="30">revs<pos:position pos:line="180" pos:column="34"/></name><operator pos:line="180" pos:column="34">-&gt;<pos:position pos:line="180" pos:column="39"/></operator><name pos:line="180" pos:column="36">graph<pos:position pos:line="180" pos:column="41"/></name></name></expr>)<pos:position pos:line="180" pos:column="42"/></condition><then pos:line="180" pos:column="42">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="181" pos:column="17">die<pos:position pos:line="181" pos:column="20"/></name><argument_list pos:line="181" pos:column="20">(<argument><expr><literal type="string" pos:line="181" pos:column="21">"cannot combine --no-walk with --graph"<pos:position pos:line="181" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="181" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="181" pos:column="62"/></expr_stmt></block></then></if>
	<if pos:line="182" pos:column="9">if <condition pos:line="182" pos:column="12">(<expr><operator pos:line="182" pos:column="13">!<pos:position pos:line="182" pos:column="14"/></operator><name><name pos:line="182" pos:column="14">revs<pos:position pos:line="182" pos:column="18"/></name><operator pos:line="182" pos:column="18">-&gt;<pos:position pos:line="182" pos:column="23"/></operator><name pos:line="182" pos:column="20">reflog_info<pos:position pos:line="182" pos:column="31"/></name></name> <operator pos:line="182" pos:column="32">&amp;&amp;<pos:position pos:line="182" pos:column="42"/></operator> <name><name pos:line="182" pos:column="35">revs<pos:position pos:line="182" pos:column="39"/></name><operator pos:line="182" pos:column="39">-&gt;<pos:position pos:line="182" pos:column="44"/></operator><name pos:line="182" pos:column="41">grep_filter<pos:position pos:line="182" pos:column="52"/></name><operator pos:line="182" pos:column="52">.<pos:position pos:line="182" pos:column="53"/></operator><name pos:line="182" pos:column="53">use_reflog_filter<pos:position pos:line="182" pos:column="70"/></name></name></expr>)<pos:position pos:line="182" pos:column="71"/></condition><then pos:line="182" pos:column="71">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="183" pos:column="17">die<pos:position pos:line="183" pos:column="20"/></name><argument_list pos:line="183" pos:column="20">(<argument><expr><literal type="string" pos:line="183" pos:column="21">"cannot use --grep-reflog without --walk-reflogs"<pos:position pos:line="183" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="183" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="183" pos:column="72"/></expr_stmt></block></then></if>

	<if pos:line="185" pos:column="9">if <condition pos:line="185" pos:column="12">(<expr><name><name pos:line="185" pos:column="13">revs<pos:position pos:line="185" pos:column="17"/></name><operator pos:line="185" pos:column="17">-&gt;<pos:position pos:line="185" pos:column="22"/></operator><name pos:line="185" pos:column="19">first_parent_only<pos:position pos:line="185" pos:column="36"/></name></name> <operator pos:line="185" pos:column="37">&amp;&amp;<pos:position pos:line="185" pos:column="47"/></operator> <name><name pos:line="185" pos:column="40">revs<pos:position pos:line="185" pos:column="44"/></name><operator pos:line="185" pos:column="44">-&gt;<pos:position pos:line="185" pos:column="49"/></operator><name pos:line="185" pos:column="46">bisect<pos:position pos:line="185" pos:column="52"/></name></name></expr>)<pos:position pos:line="185" pos:column="53"/></condition><then pos:line="185" pos:column="53">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="186" pos:column="17">die<pos:position pos:line="186" pos:column="20"/></name><argument_list pos:line="186" pos:column="20">(<argument><expr><call><name pos:line="186" pos:column="21">_<pos:position pos:line="186" pos:column="22"/></name><argument_list pos:line="186" pos:column="22">(<argument><expr><literal type="string" pos:line="186" pos:column="23">"--first-parent is incompatible with --bisect"<pos:position pos:line="186" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="186" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="186" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="186" pos:column="72"/></expr_stmt></block></then></if>

	<if pos:line="188" pos:column="9">if <condition pos:line="188" pos:column="12">(<expr><name><name pos:line="188" pos:column="13">revs<pos:position pos:line="188" pos:column="17"/></name><operator pos:line="188" pos:column="17">-&gt;<pos:position pos:line="188" pos:column="22"/></operator><name pos:line="188" pos:column="19">expand_tabs_in_log<pos:position pos:line="188" pos:column="37"/></name></name> <operator pos:line="188" pos:column="38">&lt;<pos:position pos:line="188" pos:column="42"/></operator> <literal type="number" pos:line="188" pos:column="40">0<pos:position pos:line="188" pos:column="41"/></literal></expr>)<pos:position pos:line="188" pos:column="42"/></condition><then pos:line="188" pos:column="42">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="189" pos:column="17">revs<pos:position pos:line="189" pos:column="21"/></name><operator pos:line="189" pos:column="21">-&gt;<pos:position pos:line="189" pos:column="26"/></operator><name pos:line="189" pos:column="23">expand_tabs_in_log<pos:position pos:line="189" pos:column="41"/></name></name> <operator pos:line="189" pos:column="42">=<pos:position pos:line="189" pos:column="43"/></operator> <name><name pos:line="189" pos:column="44">revs<pos:position pos:line="189" pos:column="48"/></name><operator pos:line="189" pos:column="48">-&gt;<pos:position pos:line="189" pos:column="53"/></operator><name pos:line="189" pos:column="50">expand_tabs_in_log_default<pos:position pos:line="189" pos:column="76"/></name></name></expr>;<pos:position pos:line="189" pos:column="77"/></expr_stmt></block></then></if>

	<return pos:line="191" pos:column="9">return <expr><name pos:line="191" pos:column="16">left<pos:position pos:line="191" pos:column="20"/></name></expr>;<pos:position pos:line="191" pos:column="21"/></return>
}<pos:position pos:line="192" pos:column="2"/></block></function></unit>

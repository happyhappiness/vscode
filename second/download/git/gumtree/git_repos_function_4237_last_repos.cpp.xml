<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4237_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">queue_or_write_archive_entry<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><specifier pos:line="1" pos:column="41">const<pos:position pos:line="1" pos:column="46"/></specifier> <name pos:line="1" pos:column="47">unsigned<pos:position pos:line="1" pos:column="55"/></name> <name pos:line="1" pos:column="56">char<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">sha1<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>,
		<parameter><decl><type><name><name pos:line="2" pos:column="17">struct<pos:position pos:line="2" pos:column="23"/></name> <name pos:line="2" pos:column="24">strbuf<pos:position pos:line="2" pos:column="30"/></name></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">base<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="38">const<pos:position pos:line="2" pos:column="43"/></specifier> <name pos:line="2" pos:column="44">char<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">filename<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="3" pos:column="17">unsigned<pos:position pos:line="3" pos:column="25"/></name></type> <name pos:line="3" pos:column="26">mode<pos:position pos:line="3" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="32">int<pos:position pos:line="3" pos:column="35"/></name></type> <name pos:line="3" pos:column="36">stage<pos:position pos:line="3" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="43">void<pos:position pos:line="3" pos:column="47"/></name> <modifier pos:line="3" pos:column="48">*<pos:position pos:line="3" pos:column="49"/></modifier></type><name pos:line="3" pos:column="49">context<pos:position pos:line="3" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="57"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">archiver_context<pos:position pos:line="5" pos:column="32"/></name></name> <modifier pos:line="5" pos:column="33">*<pos:position pos:line="5" pos:column="34"/></modifier></type><name pos:line="5" pos:column="34">c<pos:position pos:line="5" pos:column="35"/></name> <init pos:line="5" pos:column="36">= <expr><name pos:line="5" pos:column="38">context<pos:position pos:line="5" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="46"/></decl_stmt>

	<while pos:line="7" pos:column="9">while <condition pos:line="7" pos:column="15">(<expr><name><name pos:line="7" pos:column="16">c<pos:position pos:line="7" pos:column="17"/></name><operator pos:line="7" pos:column="17">-&gt;<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="19">bottom<pos:position pos:line="7" pos:column="25"/></name></name> <operator pos:line="7" pos:column="26">&amp;&amp;<pos:position pos:line="7" pos:column="36"/></operator>
	       <operator pos:line="8" pos:column="16">!<pos:position pos:line="8" pos:column="17"/></operator><operator pos:line="8" pos:column="17">(<pos:position pos:line="8" pos:column="18"/></operator><name><name pos:line="8" pos:column="18">base<pos:position pos:line="8" pos:column="22"/></name><operator pos:line="8" pos:column="22">-&gt;<pos:position pos:line="8" pos:column="27"/></operator><name pos:line="8" pos:column="24">len<pos:position pos:line="8" pos:column="27"/></name></name> <operator pos:line="8" pos:column="28">&gt;=<pos:position pos:line="8" pos:column="33"/></operator> <name><name pos:line="8" pos:column="31">c<pos:position pos:line="8" pos:column="32"/></name><operator pos:line="8" pos:column="32">-&gt;<pos:position pos:line="8" pos:column="37"/></operator><name pos:line="8" pos:column="34">bottom<pos:position pos:line="8" pos:column="40"/></name><operator pos:line="8" pos:column="40">-&gt;<pos:position pos:line="8" pos:column="45"/></operator><name pos:line="8" pos:column="42">len<pos:position pos:line="8" pos:column="45"/></name></name> <operator pos:line="8" pos:column="46">&amp;&amp;<pos:position pos:line="8" pos:column="56"/></operator>
		 <operator pos:line="9" pos:column="18">!<pos:position pos:line="9" pos:column="19"/></operator><call><name pos:line="9" pos:column="19">strncmp<pos:position pos:line="9" pos:column="26"/></name><argument_list pos:line="9" pos:column="26">(<argument><expr><name><name pos:line="9" pos:column="27">base<pos:position pos:line="9" pos:column="31"/></name><operator pos:line="9" pos:column="31">-&gt;<pos:position pos:line="9" pos:column="36"/></operator><name pos:line="9" pos:column="33">buf<pos:position pos:line="9" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="38">c<pos:position pos:line="9" pos:column="39"/></name><operator pos:line="9" pos:column="39">-&gt;<pos:position pos:line="9" pos:column="44"/></operator><name pos:line="9" pos:column="41">bottom<pos:position pos:line="9" pos:column="47"/></name><operator pos:line="9" pos:column="47">-&gt;<pos:position pos:line="9" pos:column="52"/></operator><name pos:line="9" pos:column="49">path<pos:position pos:line="9" pos:column="53"/></name></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="55">c<pos:position pos:line="9" pos:column="56"/></name><operator pos:line="9" pos:column="56">-&gt;<pos:position pos:line="9" pos:column="61"/></operator><name pos:line="9" pos:column="58">bottom<pos:position pos:line="9" pos:column="64"/></name><operator pos:line="9" pos:column="64">-&gt;<pos:position pos:line="9" pos:column="69"/></operator><name pos:line="9" pos:column="66">len<pos:position pos:line="9" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="70"/></argument_list></call><operator pos:line="9" pos:column="70">)<pos:position pos:line="9" pos:column="71"/></operator></expr>)<pos:position pos:line="9" pos:column="72"/></condition> <block pos:line="9" pos:column="73">{
		<decl_stmt><decl><type><name><name pos:line="10" pos:column="17">struct<pos:position pos:line="10" pos:column="23"/></name> <name pos:line="10" pos:column="24">directory<pos:position pos:line="10" pos:column="33"/></name></name> <modifier pos:line="10" pos:column="34">*<pos:position pos:line="10" pos:column="35"/></modifier></type><name pos:line="10" pos:column="35">next<pos:position pos:line="10" pos:column="39"/></name> <init pos:line="10" pos:column="40">= <expr><name><name pos:line="10" pos:column="42">c<pos:position pos:line="10" pos:column="43"/></name><operator pos:line="10" pos:column="43">-&gt;<pos:position pos:line="10" pos:column="48"/></operator><name pos:line="10" pos:column="45">bottom<pos:position pos:line="10" pos:column="51"/></name><operator pos:line="10" pos:column="51">-&gt;<pos:position pos:line="10" pos:column="56"/></operator><name pos:line="10" pos:column="53">up<pos:position pos:line="10" pos:column="55"/></name></name></expr></init></decl>;<pos:position pos:line="10" pos:column="56"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="11" pos:column="17">free<pos:position pos:line="11" pos:column="21"/></name><argument_list pos:line="11" pos:column="21">(<argument><expr><name><name pos:line="11" pos:column="22">c<pos:position pos:line="11" pos:column="23"/></name><operator pos:line="11" pos:column="23">-&gt;<pos:position pos:line="11" pos:column="28"/></operator><name pos:line="11" pos:column="25">bottom<pos:position pos:line="11" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="12" pos:column="17">c<pos:position pos:line="12" pos:column="18"/></name><operator pos:line="12" pos:column="18">-&gt;<pos:position pos:line="12" pos:column="23"/></operator><name pos:line="12" pos:column="20">bottom<pos:position pos:line="12" pos:column="26"/></name></name> <operator pos:line="12" pos:column="27">=<pos:position pos:line="12" pos:column="28"/></operator> <name pos:line="12" pos:column="29">next<pos:position pos:line="12" pos:column="33"/></name></expr>;<pos:position pos:line="12" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="13" pos:column="10"/></block></while>

	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><call><name pos:line="15" pos:column="13">S_ISDIR<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">(<argument><expr><name pos:line="15" pos:column="21">mode<pos:position pos:line="15" pos:column="25"/></name></expr></argument>)<pos:position pos:line="15" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="27"/></condition><then pos:line="15" pos:column="27"> <block pos:line="15" pos:column="28">{
		<decl_stmt><decl><type><name pos:line="16" pos:column="17">size_t<pos:position pos:line="16" pos:column="23"/></name></type> <name pos:line="16" pos:column="24">baselen<pos:position pos:line="16" pos:column="31"/></name> <init pos:line="16" pos:column="32">= <expr><name><name pos:line="16" pos:column="34">base<pos:position pos:line="16" pos:column="38"/></name><operator pos:line="16" pos:column="38">-&gt;<pos:position pos:line="16" pos:column="43"/></operator><name pos:line="16" pos:column="40">len<pos:position pos:line="16" pos:column="43"/></name></name></expr></init></decl>;<pos:position pos:line="16" pos:column="44"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="17" pos:column="17">const<pos:position pos:line="17" pos:column="22"/></specifier> <name><name pos:line="17" pos:column="23">struct<pos:position pos:line="17" pos:column="29"/></name> <name pos:line="17" pos:column="30">attr_check<pos:position pos:line="17" pos:column="40"/></name></name> <modifier pos:line="17" pos:column="41">*<pos:position pos:line="17" pos:column="42"/></modifier></type><name pos:line="17" pos:column="42">check<pos:position pos:line="17" pos:column="47"/></name></decl>;<pos:position pos:line="17" pos:column="48"/></decl_stmt>

		<comment type="block" pos:line="19" pos:column="17">/* Borrow base, but restore its original value when done. */</comment>
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">strbuf_addstr<pos:position pos:line="20" pos:column="30"/></name><argument_list pos:line="20" pos:column="30">(<argument><expr><name pos:line="20" pos:column="31">base<pos:position pos:line="20" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="37">filename<pos:position pos:line="20" pos:column="45"/></name></expr></argument>)<pos:position pos:line="20" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="21" pos:column="17">strbuf_addch<pos:position pos:line="21" pos:column="29"/></name><argument_list pos:line="21" pos:column="29">(<argument><expr><name pos:line="21" pos:column="30">base<pos:position pos:line="21" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="21" pos:column="36">'/'<pos:position pos:line="21" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><name pos:line="22" pos:column="17">check<pos:position pos:line="22" pos:column="22"/></name> <operator pos:line="22" pos:column="23">=<pos:position pos:line="22" pos:column="24"/></operator> <call><name pos:line="22" pos:column="25">get_archive_attrs<pos:position pos:line="22" pos:column="42"/></name><argument_list pos:line="22" pos:column="42">(<argument><expr><name><name pos:line="22" pos:column="43">base<pos:position pos:line="22" pos:column="47"/></name><operator pos:line="22" pos:column="47">-&gt;<pos:position pos:line="22" pos:column="52"/></operator><name pos:line="22" pos:column="49">buf<pos:position pos:line="22" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="54"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="23" pos:column="17">strbuf_setlen<pos:position pos:line="23" pos:column="30"/></name><argument_list pos:line="23" pos:column="30">(<argument><expr><name pos:line="23" pos:column="31">base<pos:position pos:line="23" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="37">baselen<pos:position pos:line="23" pos:column="44"/></name></expr></argument>)<pos:position pos:line="23" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="46"/></expr_stmt>

		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><call><name pos:line="25" pos:column="21">check_attr_export_ignore<pos:position pos:line="25" pos:column="45"/></name><argument_list pos:line="25" pos:column="45">(<argument><expr><name pos:line="25" pos:column="46">check<pos:position pos:line="25" pos:column="51"/></name></expr></argument>)<pos:position pos:line="25" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="53"/></condition><then pos:line="25" pos:column="53">
			<block type="pseudo"><return pos:line="26" pos:column="25">return <expr><literal type="number" pos:line="26" pos:column="32">0<pos:position pos:line="26" pos:column="33"/></literal></expr>;<pos:position pos:line="26" pos:column="34"/></return></block></then></if>
		<expr_stmt><expr><call><name pos:line="27" pos:column="17">queue_directory<pos:position pos:line="27" pos:column="32"/></name><argument_list pos:line="27" pos:column="32">(<argument><expr><name pos:line="27" pos:column="33">sha1<pos:position pos:line="27" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="39">base<pos:position pos:line="27" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="45">filename<pos:position pos:line="27" pos:column="53"/></name></expr></argument>,
				<argument><expr><name pos:line="28" pos:column="33">mode<pos:position pos:line="28" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="39">stage<pos:position pos:line="28" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="46">c<pos:position pos:line="28" pos:column="47"/></name></expr></argument>)<pos:position pos:line="28" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="49"/></expr_stmt>
		<return pos:line="29" pos:column="17">return <expr><name pos:line="29" pos:column="24">READ_TREE_RECURSIVE<pos:position pos:line="29" pos:column="43"/></name></expr>;<pos:position pos:line="29" pos:column="44"/></return>
	}<pos:position pos:line="30" pos:column="10"/></block></then></if>

	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><call><name pos:line="32" pos:column="13">write_directory<pos:position pos:line="32" pos:column="28"/></name><argument_list pos:line="32" pos:column="28">(<argument><expr><name pos:line="32" pos:column="29">c<pos:position pos:line="32" pos:column="30"/></name></expr></argument>)<pos:position pos:line="32" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="32"/></condition><then pos:line="32" pos:column="32">
		<block type="pseudo"><return pos:line="33" pos:column="17">return <expr><operator pos:line="33" pos:column="24">-<pos:position pos:line="33" pos:column="25"/></operator><literal type="number" pos:line="33" pos:column="25">1<pos:position pos:line="33" pos:column="26"/></literal></expr>;<pos:position pos:line="33" pos:column="27"/></return></block></then></if>
	<return pos:line="34" pos:column="9">return <expr><call><name pos:line="34" pos:column="16">write_archive_entry<pos:position pos:line="34" pos:column="35"/></name><argument_list pos:line="34" pos:column="35">(<argument><expr><name pos:line="34" pos:column="36">sha1<pos:position pos:line="34" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="42">base<pos:position pos:line="34" pos:column="46"/></name><operator pos:line="34" pos:column="46">-&gt;<pos:position pos:line="34" pos:column="51"/></operator><name pos:line="34" pos:column="48">buf<pos:position pos:line="34" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="53">base<pos:position pos:line="34" pos:column="57"/></name><operator pos:line="34" pos:column="57">-&gt;<pos:position pos:line="34" pos:column="62"/></operator><name pos:line="34" pos:column="59">len<pos:position pos:line="34" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="64">filename<pos:position pos:line="34" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="74">mode<pos:position pos:line="34" pos:column="78"/></name></expr></argument>,
				   <argument><expr><name pos:line="35" pos:column="36">stage<pos:position pos:line="35" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="43">context<pos:position pos:line="35" pos:column="50"/></name></expr></argument>)<pos:position pos:line="35" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="52"/></return>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

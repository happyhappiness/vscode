<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4455_git-2.5.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">count_slashes<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">cp<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="41"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">cnt<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><literal type="number" pos:line="3" pos:column="19">0<pos:position pos:line="3" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name></type> <name pos:line="4" pos:column="14">ch<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>

	<while pos:line="6" pos:column="9">while <condition pos:line="6" pos:column="15">(<expr><operator pos:line="6" pos:column="16">(<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="17">ch<pos:position pos:line="6" pos:column="19"/></name> <operator pos:line="6" pos:column="20">=<pos:position pos:line="6" pos:column="21"/></operator> <operator pos:line="6" pos:column="22">*<pos:position pos:line="6" pos:column="23"/></operator><name pos:line="6" pos:column="23">cp<pos:position pos:line="6" pos:column="25"/></name><operator pos:line="6" pos:column="25">++<pos:position pos:line="6" pos:column="27"/></operator><operator pos:line="6" pos:column="27">)<pos:position pos:line="6" pos:column="28"/></operator></expr>)<pos:position pos:line="6" pos:column="29"/></condition>
		<block type="pseudo"><if pos:line="7" pos:column="17">if <condition pos:line="7" pos:column="20">(<expr><name pos:line="7" pos:column="21">ch<pos:position pos:line="7" pos:column="23"/></name> <operator pos:line="7" pos:column="24">==<pos:position pos:line="7" pos:column="26"/></operator> <literal type="char" pos:line="7" pos:column="27">'/'<pos:position pos:line="7" pos:column="30"/></literal></expr>)<pos:position pos:line="7" pos:column="31"/></condition><then pos:line="7" pos:column="31">
			<block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="25">cnt<pos:position pos:line="8" pos:column="28"/></name><operator pos:line="8" pos:column="28">++<pos:position pos:line="8" pos:column="30"/></operator></expr>;<pos:position pos:line="8" pos:column="31"/></expr_stmt></block></then></if></block></while>
	<return pos:line="9" pos:column="9">return <expr><name pos:line="9" pos:column="16">cnt<pos:position pos:line="9" pos:column="19"/></name></expr>;<pos:position pos:line="9" pos:column="20"/></return>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3173_git-2.7.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">term_columns<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name pos:line="1" pos:column="18">void<pos:position pos:line="1" pos:column="22"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="23"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><name pos:line="3" pos:column="16">int<pos:position pos:line="3" pos:column="19"/></name></type> <name pos:line="3" pos:column="20">term_columns_at_startup<pos:position pos:line="3" pos:column="43"/></name></decl>;<pos:position pos:line="3" pos:column="44"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">col_string<pos:position pos:line="5" pos:column="25"/></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">n_cols<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">term_columns_at_startup<pos:position pos:line="8" pos:column="36"/></name></expr>)<pos:position pos:line="8" pos:column="37"/></condition><then pos:line="8" pos:column="37">
		<block type="pseudo"><return pos:line="9" pos:column="17">return <expr><name pos:line="9" pos:column="24">term_columns_at_startup<pos:position pos:line="9" pos:column="47"/></name></expr>;<pos:position pos:line="9" pos:column="48"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="11" pos:column="9">term_columns_at_startup<pos:position pos:line="11" pos:column="32"/></name> <operator pos:line="11" pos:column="33">=<pos:position pos:line="11" pos:column="34"/></operator> <literal type="number" pos:line="11" pos:column="35">80<pos:position pos:line="11" pos:column="37"/></literal></expr>;<pos:position pos:line="11" pos:column="38"/></expr_stmt>

	<expr_stmt><expr><name pos:line="13" pos:column="9">col_string<pos:position pos:line="13" pos:column="19"/></name> <operator pos:line="13" pos:column="20">=<pos:position pos:line="13" pos:column="21"/></operator> <call><name pos:line="13" pos:column="22">getenv<pos:position pos:line="13" pos:column="28"/></name><argument_list pos:line="13" pos:column="28">(<argument><expr><literal type="string" pos:line="13" pos:column="29">"COLUMNS"<pos:position pos:line="13" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="40"/></expr_stmt>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">col_string<pos:position pos:line="14" pos:column="23"/></name> <operator pos:line="14" pos:column="24">&amp;&amp;<pos:position pos:line="14" pos:column="34"/></operator> <operator pos:line="14" pos:column="27">(<pos:position pos:line="14" pos:column="28"/></operator><name pos:line="14" pos:column="28">n_cols<pos:position pos:line="14" pos:column="34"/></name> <operator pos:line="14" pos:column="35">=<pos:position pos:line="14" pos:column="36"/></operator> <call><name pos:line="14" pos:column="37">atoi<pos:position pos:line="14" pos:column="41"/></name><argument_list pos:line="14" pos:column="41">(<argument><expr><name pos:line="14" pos:column="42">col_string<pos:position pos:line="14" pos:column="52"/></name></expr></argument>)<pos:position pos:line="14" pos:column="53"/></argument_list></call><operator pos:line="14" pos:column="53">)<pos:position pos:line="14" pos:column="54"/></operator> <operator pos:line="14" pos:column="55">&gt;<pos:position pos:line="14" pos:column="59"/></operator> <literal type="number" pos:line="14" pos:column="57">0<pos:position pos:line="14" pos:column="58"/></literal></expr>)<pos:position pos:line="14" pos:column="59"/></condition><then pos:line="14" pos:column="59">
		<block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="17">term_columns_at_startup<pos:position pos:line="15" pos:column="40"/></name> <operator pos:line="15" pos:column="41">=<pos:position pos:line="15" pos:column="42"/></operator> <name pos:line="15" pos:column="43">n_cols<pos:position pos:line="15" pos:column="49"/></name></expr>;<pos:position pos:line="15" pos:column="50"/></expr_stmt></block></then>
<cpp:ifdef pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">ifdef<pos:position pos:line="16" pos:column="7"/></cpp:directive> <name pos:line="16" pos:column="8">TIOCGWINSZ<pos:position pos:line="16" pos:column="18"/></name></cpp:ifdef>
	<else pos:line="17" pos:column="9">else <block pos:line="17" pos:column="14">{
		<decl_stmt><decl><type><name><name pos:line="18" pos:column="17">struct<pos:position pos:line="18" pos:column="23"/></name> <name pos:line="18" pos:column="24">winsize<pos:position pos:line="18" pos:column="31"/></name></name></type> <name pos:line="18" pos:column="32">ws<pos:position pos:line="18" pos:column="34"/></name></decl>;<pos:position pos:line="18" pos:column="35"/></decl_stmt>
		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><operator pos:line="19" pos:column="21">!<pos:position pos:line="19" pos:column="22"/></operator><call><name pos:line="19" pos:column="22">ioctl<pos:position pos:line="19" pos:column="27"/></name><argument_list pos:line="19" pos:column="27">(<argument><expr><literal type="number" pos:line="19" pos:column="28">1<pos:position pos:line="19" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="31">TIOCGWINSZ<pos:position pos:line="19" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="43">&amp;<pos:position pos:line="19" pos:column="48"/></operator><name pos:line="19" pos:column="44">ws<pos:position pos:line="19" pos:column="46"/></name></expr></argument>)<pos:position pos:line="19" pos:column="47"/></argument_list></call> <operator pos:line="19" pos:column="48">&amp;&amp;<pos:position pos:line="19" pos:column="58"/></operator> <name><name pos:line="19" pos:column="51">ws<pos:position pos:line="19" pos:column="53"/></name><operator pos:line="19" pos:column="53">.<pos:position pos:line="19" pos:column="54"/></operator><name pos:line="19" pos:column="54">ws_col<pos:position pos:line="19" pos:column="60"/></name></name></expr>)<pos:position pos:line="19" pos:column="61"/></condition><then pos:line="19" pos:column="61">
			<block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="25">term_columns_at_startup<pos:position pos:line="20" pos:column="48"/></name> <operator pos:line="20" pos:column="49">=<pos:position pos:line="20" pos:column="50"/></operator> <name><name pos:line="20" pos:column="51">ws<pos:position pos:line="20" pos:column="53"/></name><operator pos:line="20" pos:column="53">.<pos:position pos:line="20" pos:column="54"/></operator><name pos:line="20" pos:column="54">ws_col<pos:position pos:line="20" pos:column="60"/></name></name></expr>;<pos:position pos:line="20" pos:column="61"/></expr_stmt></block></then></if>
	}<pos:position pos:line="21" pos:column="10"/></block></else></if>
<cpp:endif pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">endif<pos:position pos:line="22" pos:column="7"/></cpp:directive></cpp:endif>

	<return pos:line="24" pos:column="9">return <expr><name pos:line="24" pos:column="16">term_columns_at_startup<pos:position pos:line="24" pos:column="39"/></name></expr>;<pos:position pos:line="24" pos:column="40"/></return>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

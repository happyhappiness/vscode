<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1388_git-2.4.12.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">color_parse_mem<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><specifier pos:line="1" pos:column="21">const<pos:position pos:line="1" pos:column="26"/></specifier> <name pos:line="1" pos:column="27">char<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">value<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">int<pos:position pos:line="1" pos:column="43"/></name></type> <name pos:line="1" pos:column="44">value_len<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">char<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">dst<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">ptr<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">= <expr><name pos:line="3" pos:column="27">value<pos:position pos:line="3" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">len<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><name pos:line="4" pos:column="19">value_len<pos:position pos:line="4" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">unsigned<pos:position pos:line="5" pos:column="17"/></name> <name pos:line="5" pos:column="18">int<pos:position pos:line="5" pos:column="21"/></name></type> <name pos:line="5" pos:column="22">attr<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><literal type="number" pos:line="5" pos:column="29">0<pos:position pos:line="5" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">color<pos:position pos:line="6" pos:column="21"/></name></name></type> <name pos:line="6" pos:column="22">fg<pos:position pos:line="6" pos:column="24"/></name> <init pos:line="6" pos:column="25">= <expr><block pos:line="6" pos:column="27">{ <expr><name pos:line="6" pos:column="29">COLOR_UNSPECIFIED<pos:position pos:line="6" pos:column="46"/></name></expr> }<pos:position pos:line="6" pos:column="48"/></block></expr></init></decl>;<pos:position pos:line="6" pos:column="49"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">color<pos:position pos:line="7" pos:column="21"/></name></name></type> <name pos:line="7" pos:column="22">bg<pos:position pos:line="7" pos:column="24"/></name> <init pos:line="7" pos:column="25">= <expr><block pos:line="7" pos:column="27">{ <expr><name pos:line="7" pos:column="29">COLOR_UNSPECIFIED<pos:position pos:line="7" pos:column="46"/></name></expr> }<pos:position pos:line="7" pos:column="48"/></block></expr></init></decl>;<pos:position pos:line="7" pos:column="49"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">!<pos:position pos:line="9" pos:column="14"/></operator><call><name pos:line="9" pos:column="14">strncasecmp<pos:position pos:line="9" pos:column="25"/></name><argument_list pos:line="9" pos:column="25">(<argument><expr><name pos:line="9" pos:column="26">value<pos:position pos:line="9" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="33">"reset"<pos:position pos:line="9" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="42">len<pos:position pos:line="9" pos:column="45"/></name></expr></argument>)<pos:position pos:line="9" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="47"/></condition><then pos:line="9" pos:column="47"> <block pos:line="9" pos:column="48">{
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">strcpy<pos:position pos:line="10" pos:column="23"/></name><argument_list pos:line="10" pos:column="23">(<argument><expr><name pos:line="10" pos:column="24">dst<pos:position pos:line="10" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="29">GIT_COLOR_RESET<pos:position pos:line="10" pos:column="44"/></name></expr></argument>)<pos:position pos:line="10" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="46"/></expr_stmt>
		<return pos:line="11" pos:column="17">return <expr><literal type="number" pos:line="11" pos:column="24">0<pos:position pos:line="11" pos:column="25"/></literal></expr>;<pos:position pos:line="11" pos:column="26"/></return>
	}<pos:position pos:line="12" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="14" pos:column="9">/* [fg [bg]] [attr]... */</comment>
	<while pos:line="15" pos:column="9">while <condition pos:line="15" pos:column="15">(<expr><name pos:line="15" pos:column="16">len<pos:position pos:line="15" pos:column="19"/></name> <operator pos:line="15" pos:column="20">&gt;<pos:position pos:line="15" pos:column="24"/></operator> <literal type="number" pos:line="15" pos:column="22">0<pos:position pos:line="15" pos:column="23"/></literal></expr>)<pos:position pos:line="15" pos:column="24"/></condition> <block pos:line="15" pos:column="25">{
		<decl_stmt><decl><type><specifier pos:line="16" pos:column="17">const<pos:position pos:line="16" pos:column="22"/></specifier> <name pos:line="16" pos:column="23">char<pos:position pos:line="16" pos:column="27"/></name> <modifier pos:line="16" pos:column="28">*<pos:position pos:line="16" pos:column="29"/></modifier></type><name pos:line="16" pos:column="29">word<pos:position pos:line="16" pos:column="33"/></name> <init pos:line="16" pos:column="34">= <expr><name pos:line="16" pos:column="36">ptr<pos:position pos:line="16" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="16" pos:column="40"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="17" pos:column="17">struct<pos:position pos:line="17" pos:column="23"/></name> <name pos:line="17" pos:column="24">color<pos:position pos:line="17" pos:column="29"/></name></name></type> <name pos:line="17" pos:column="30">c<pos:position pos:line="17" pos:column="31"/></name></decl>;<pos:position pos:line="17" pos:column="32"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="18" pos:column="17">int<pos:position pos:line="18" pos:column="20"/></name></type> <name pos:line="18" pos:column="21">val<pos:position pos:line="18" pos:column="24"/></name></decl>, <decl><type ref="prev"/><name pos:line="18" pos:column="26">wordlen<pos:position pos:line="18" pos:column="33"/></name> <init pos:line="18" pos:column="34">= <expr><literal type="number" pos:line="18" pos:column="36">0<pos:position pos:line="18" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="18" pos:column="38"/></decl_stmt>

		<while pos:line="20" pos:column="17">while <condition pos:line="20" pos:column="23">(<expr><name pos:line="20" pos:column="24">len<pos:position pos:line="20" pos:column="27"/></name> <operator pos:line="20" pos:column="28">&gt;<pos:position pos:line="20" pos:column="32"/></operator> <literal type="number" pos:line="20" pos:column="30">0<pos:position pos:line="20" pos:column="31"/></literal> <operator pos:line="20" pos:column="32">&amp;&amp;<pos:position pos:line="20" pos:column="42"/></operator> <operator pos:line="20" pos:column="35">!<pos:position pos:line="20" pos:column="36"/></operator><call><name pos:line="20" pos:column="36">isspace<pos:position pos:line="20" pos:column="43"/></name><argument_list pos:line="20" pos:column="43">(<argument><expr><name><name pos:line="20" pos:column="44">word<pos:position pos:line="20" pos:column="48"/></name><index pos:line="20" pos:column="48">[<expr><name pos:line="20" pos:column="49">wordlen<pos:position pos:line="20" pos:column="56"/></name></expr>]<pos:position pos:line="20" pos:column="57"/></index></name></expr></argument>)<pos:position pos:line="20" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="59"/></condition> <block pos:line="20" pos:column="60">{
			<expr_stmt><expr><name pos:line="21" pos:column="25">wordlen<pos:position pos:line="21" pos:column="32"/></name><operator pos:line="21" pos:column="32">++<pos:position pos:line="21" pos:column="34"/></operator></expr>;<pos:position pos:line="21" pos:column="35"/></expr_stmt>
			<expr_stmt><expr><name pos:line="22" pos:column="25">len<pos:position pos:line="22" pos:column="28"/></name><operator pos:line="22" pos:column="28">--<pos:position pos:line="22" pos:column="30"/></operator></expr>;<pos:position pos:line="22" pos:column="31"/></expr_stmt>
		}<pos:position pos:line="23" pos:column="18"/></block></while>

		<expr_stmt><expr><name pos:line="25" pos:column="17">ptr<pos:position pos:line="25" pos:column="20"/></name> <operator pos:line="25" pos:column="21">=<pos:position pos:line="25" pos:column="22"/></operator> <name pos:line="25" pos:column="23">word<pos:position pos:line="25" pos:column="27"/></name> <operator pos:line="25" pos:column="28">+<pos:position pos:line="25" pos:column="29"/></operator> <name pos:line="25" pos:column="30">wordlen<pos:position pos:line="25" pos:column="37"/></name></expr>;<pos:position pos:line="25" pos:column="38"/></expr_stmt>
		<while pos:line="26" pos:column="17">while <condition pos:line="26" pos:column="23">(<expr><name pos:line="26" pos:column="24">len<pos:position pos:line="26" pos:column="27"/></name> <operator pos:line="26" pos:column="28">&gt;<pos:position pos:line="26" pos:column="32"/></operator> <literal type="number" pos:line="26" pos:column="30">0<pos:position pos:line="26" pos:column="31"/></literal> <operator pos:line="26" pos:column="32">&amp;&amp;<pos:position pos:line="26" pos:column="42"/></operator> <call><name pos:line="26" pos:column="35">isspace<pos:position pos:line="26" pos:column="42"/></name><argument_list pos:line="26" pos:column="42">(<argument><expr><operator pos:line="26" pos:column="43">*<pos:position pos:line="26" pos:column="44"/></operator><name pos:line="26" pos:column="44">ptr<pos:position pos:line="26" pos:column="47"/></name></expr></argument>)<pos:position pos:line="26" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="49"/></condition> <block pos:line="26" pos:column="50">{
			<expr_stmt><expr><name pos:line="27" pos:column="25">ptr<pos:position pos:line="27" pos:column="28"/></name><operator pos:line="27" pos:column="28">++<pos:position pos:line="27" pos:column="30"/></operator></expr>;<pos:position pos:line="27" pos:column="31"/></expr_stmt>
			<expr_stmt><expr><name pos:line="28" pos:column="25">len<pos:position pos:line="28" pos:column="28"/></name><operator pos:line="28" pos:column="28">--<pos:position pos:line="28" pos:column="30"/></operator></expr>;<pos:position pos:line="28" pos:column="31"/></expr_stmt>
		}<pos:position pos:line="29" pos:column="18"/></block></while>

		<if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><operator pos:line="31" pos:column="21">!<pos:position pos:line="31" pos:column="22"/></operator><call><name pos:line="31" pos:column="22">parse_color<pos:position pos:line="31" pos:column="33"/></name><argument_list pos:line="31" pos:column="33">(<argument><expr><operator pos:line="31" pos:column="34">&amp;<pos:position pos:line="31" pos:column="39"/></operator><name pos:line="31" pos:column="35">c<pos:position pos:line="31" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="38">word<pos:position pos:line="31" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="44">wordlen<pos:position pos:line="31" pos:column="51"/></name></expr></argument>)<pos:position pos:line="31" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="53"/></condition><then pos:line="31" pos:column="53"> <block pos:line="31" pos:column="54">{
			<if pos:line="32" pos:column="25">if <condition pos:line="32" pos:column="28">(<expr><name><name pos:line="32" pos:column="29">fg<pos:position pos:line="32" pos:column="31"/></name><operator pos:line="32" pos:column="31">.<pos:position pos:line="32" pos:column="32"/></operator><name pos:line="32" pos:column="32">type<pos:position pos:line="32" pos:column="36"/></name></name> <operator pos:line="32" pos:column="37">==<pos:position pos:line="32" pos:column="39"/></operator> <name pos:line="32" pos:column="40">COLOR_UNSPECIFIED<pos:position pos:line="32" pos:column="57"/></name></expr>)<pos:position pos:line="32" pos:column="58"/></condition><then pos:line="32" pos:column="58"> <block pos:line="32" pos:column="59">{
				<expr_stmt><expr><name pos:line="33" pos:column="33">fg<pos:position pos:line="33" pos:column="35"/></name> <operator pos:line="33" pos:column="36">=<pos:position pos:line="33" pos:column="37"/></operator> <name pos:line="33" pos:column="38">c<pos:position pos:line="33" pos:column="39"/></name></expr>;<pos:position pos:line="33" pos:column="40"/></expr_stmt>
				<continue pos:line="34" pos:column="33">continue;<pos:position pos:line="34" pos:column="42"/></continue>
			}<pos:position pos:line="35" pos:column="26"/></block></then></if>
			<if pos:line="36" pos:column="25">if <condition pos:line="36" pos:column="28">(<expr><name><name pos:line="36" pos:column="29">bg<pos:position pos:line="36" pos:column="31"/></name><operator pos:line="36" pos:column="31">.<pos:position pos:line="36" pos:column="32"/></operator><name pos:line="36" pos:column="32">type<pos:position pos:line="36" pos:column="36"/></name></name> <operator pos:line="36" pos:column="37">==<pos:position pos:line="36" pos:column="39"/></operator> <name pos:line="36" pos:column="40">COLOR_UNSPECIFIED<pos:position pos:line="36" pos:column="57"/></name></expr>)<pos:position pos:line="36" pos:column="58"/></condition><then pos:line="36" pos:column="58"> <block pos:line="36" pos:column="59">{
				<expr_stmt><expr><name pos:line="37" pos:column="33">bg<pos:position pos:line="37" pos:column="35"/></name> <operator pos:line="37" pos:column="36">=<pos:position pos:line="37" pos:column="37"/></operator> <name pos:line="37" pos:column="38">c<pos:position pos:line="37" pos:column="39"/></name></expr>;<pos:position pos:line="37" pos:column="40"/></expr_stmt>
				<continue pos:line="38" pos:column="33">continue;<pos:position pos:line="38" pos:column="42"/></continue>
			}<pos:position pos:line="39" pos:column="26"/></block></then></if>
			<goto pos:line="40" pos:column="25">goto <name pos:line="40" pos:column="30">bad<pos:position pos:line="40" pos:column="33"/></name>;<pos:position pos:line="40" pos:column="34"/></goto>
		}<pos:position pos:line="41" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="42" pos:column="17">val<pos:position pos:line="42" pos:column="20"/></name> <operator pos:line="42" pos:column="21">=<pos:position pos:line="42" pos:column="22"/></operator> <call><name pos:line="42" pos:column="23">parse_attr<pos:position pos:line="42" pos:column="33"/></name><argument_list pos:line="42" pos:column="33">(<argument><expr><name pos:line="42" pos:column="34">word<pos:position pos:line="42" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="40">wordlen<pos:position pos:line="42" pos:column="47"/></name></expr></argument>)<pos:position pos:line="42" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="49"/></expr_stmt>
		<if pos:line="43" pos:column="17">if <condition pos:line="43" pos:column="20">(<expr><literal type="number" pos:line="43" pos:column="21">0<pos:position pos:line="43" pos:column="22"/></literal> <operator pos:line="43" pos:column="23">&lt;=<pos:position pos:line="43" pos:column="28"/></operator> <name pos:line="43" pos:column="26">val<pos:position pos:line="43" pos:column="29"/></name></expr>)<pos:position pos:line="43" pos:column="30"/></condition><then pos:line="43" pos:column="30">
			<block type="pseudo"><expr_stmt><expr><name pos:line="44" pos:column="25">attr<pos:position pos:line="44" pos:column="29"/></name> <operator pos:line="44" pos:column="30">|=<pos:position pos:line="44" pos:column="32"/></operator> <operator pos:line="44" pos:column="33">(<pos:position pos:line="44" pos:column="34"/></operator><literal type="number" pos:line="44" pos:column="34">1<pos:position pos:line="44" pos:column="35"/></literal> <operator pos:line="44" pos:column="36">&lt;&lt;<pos:position pos:line="44" pos:column="44"/></operator> <name pos:line="44" pos:column="39">val<pos:position pos:line="44" pos:column="42"/></name><operator pos:line="44" pos:column="42">)<pos:position pos:line="44" pos:column="43"/></operator></expr>;<pos:position pos:line="44" pos:column="44"/></expr_stmt></block></then>
		<else pos:line="45" pos:column="17">else
			<block type="pseudo"><goto pos:line="46" pos:column="25">goto <name pos:line="46" pos:column="30">bad<pos:position pos:line="46" pos:column="33"/></name>;<pos:position pos:line="46" pos:column="34"/></goto></block></else></if>
	}<pos:position pos:line="47" pos:column="10"/></block></while>

	<if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><name pos:line="49" pos:column="13">attr<pos:position pos:line="49" pos:column="17"/></name> <operator pos:line="49" pos:column="18">||<pos:position pos:line="49" pos:column="20"/></operator> <operator pos:line="49" pos:column="21">!<pos:position pos:line="49" pos:column="22"/></operator><call><name pos:line="49" pos:column="22">color_empty<pos:position pos:line="49" pos:column="33"/></name><argument_list pos:line="49" pos:column="33">(<argument><expr><operator pos:line="49" pos:column="34">&amp;<pos:position pos:line="49" pos:column="39"/></operator><name pos:line="49" pos:column="35">fg<pos:position pos:line="49" pos:column="37"/></name></expr></argument>)<pos:position pos:line="49" pos:column="38"/></argument_list></call> <operator pos:line="49" pos:column="39">||<pos:position pos:line="49" pos:column="41"/></operator> <operator pos:line="49" pos:column="42">!<pos:position pos:line="49" pos:column="43"/></operator><call><name pos:line="49" pos:column="43">color_empty<pos:position pos:line="49" pos:column="54"/></name><argument_list pos:line="49" pos:column="54">(<argument><expr><operator pos:line="49" pos:column="55">&amp;<pos:position pos:line="49" pos:column="60"/></operator><name pos:line="49" pos:column="56">bg<pos:position pos:line="49" pos:column="58"/></name></expr></argument>)<pos:position pos:line="49" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="60"/></condition><then pos:line="49" pos:column="60"> <block pos:line="49" pos:column="61">{
		<decl_stmt><decl><type><name pos:line="50" pos:column="17">int<pos:position pos:line="50" pos:column="20"/></name></type> <name pos:line="50" pos:column="21">sep<pos:position pos:line="50" pos:column="24"/></name> <init pos:line="50" pos:column="25">= <expr><literal type="number" pos:line="50" pos:column="27">0<pos:position pos:line="50" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="50" pos:column="29"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="51" pos:column="17">int<pos:position pos:line="51" pos:column="20"/></name></type> <name pos:line="51" pos:column="21">i<pos:position pos:line="51" pos:column="22"/></name></decl>;<pos:position pos:line="51" pos:column="23"/></decl_stmt>

		<expr_stmt><expr><operator pos:line="53" pos:column="17">*<pos:position pos:line="53" pos:column="18"/></operator><name pos:line="53" pos:column="18">dst<pos:position pos:line="53" pos:column="21"/></name><operator pos:line="53" pos:column="21">++<pos:position pos:line="53" pos:column="23"/></operator> <operator pos:line="53" pos:column="24">=<pos:position pos:line="53" pos:column="25"/></operator> <literal type="char" pos:line="53" pos:column="26">'\033'<pos:position pos:line="53" pos:column="32"/></literal></expr>;<pos:position pos:line="53" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="54" pos:column="17">*<pos:position pos:line="54" pos:column="18"/></operator><name pos:line="54" pos:column="18">dst<pos:position pos:line="54" pos:column="21"/></name><operator pos:line="54" pos:column="21">++<pos:position pos:line="54" pos:column="23"/></operator> <operator pos:line="54" pos:column="24">=<pos:position pos:line="54" pos:column="25"/></operator> <literal type="char" pos:line="54" pos:column="26">'['<pos:position pos:line="54" pos:column="29"/></literal></expr>;<pos:position pos:line="54" pos:column="30"/></expr_stmt>

		<for pos:line="56" pos:column="17">for <control pos:line="56" pos:column="21">(<init><expr><name pos:line="56" pos:column="22">i<pos:position pos:line="56" pos:column="23"/></name> <operator pos:line="56" pos:column="24">=<pos:position pos:line="56" pos:column="25"/></operator> <literal type="number" pos:line="56" pos:column="26">0<pos:position pos:line="56" pos:column="27"/></literal></expr>;<pos:position pos:line="56" pos:column="28"/></init> <condition><expr><name pos:line="56" pos:column="29">attr<pos:position pos:line="56" pos:column="33"/></name></expr>;<pos:position pos:line="56" pos:column="34"/></condition> <incr><expr><name pos:line="56" pos:column="35">i<pos:position pos:line="56" pos:column="36"/></name><operator pos:line="56" pos:column="36">++<pos:position pos:line="56" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="56" pos:column="39"/></control> <block pos:line="56" pos:column="40">{
			<decl_stmt><decl><type><name pos:line="57" pos:column="25">unsigned<pos:position pos:line="57" pos:column="33"/></name></type> <name pos:line="57" pos:column="34">bit<pos:position pos:line="57" pos:column="37"/></name> <init pos:line="57" pos:column="38">= <expr><operator pos:line="57" pos:column="40">(<pos:position pos:line="57" pos:column="41"/></operator><literal type="number" pos:line="57" pos:column="41">1<pos:position pos:line="57" pos:column="42"/></literal> <operator pos:line="57" pos:column="43">&lt;&lt;<pos:position pos:line="57" pos:column="51"/></operator> <name pos:line="57" pos:column="46">i<pos:position pos:line="57" pos:column="47"/></name><operator pos:line="57" pos:column="47">)<pos:position pos:line="57" pos:column="48"/></operator></expr></init></decl>;<pos:position pos:line="57" pos:column="49"/></decl_stmt>
			<if pos:line="58" pos:column="25">if <condition pos:line="58" pos:column="28">(<expr><operator pos:line="58" pos:column="29">!<pos:position pos:line="58" pos:column="30"/></operator><operator pos:line="58" pos:column="30">(<pos:position pos:line="58" pos:column="31"/></operator><name pos:line="58" pos:column="31">attr<pos:position pos:line="58" pos:column="35"/></name> <operator pos:line="58" pos:column="36">&amp;<pos:position pos:line="58" pos:column="41"/></operator> <name pos:line="58" pos:column="38">bit<pos:position pos:line="58" pos:column="41"/></name><operator pos:line="58" pos:column="41">)<pos:position pos:line="58" pos:column="42"/></operator></expr>)<pos:position pos:line="58" pos:column="43"/></condition><then pos:line="58" pos:column="43">
				<block type="pseudo"><continue pos:line="59" pos:column="33">continue;<pos:position pos:line="59" pos:column="42"/></continue></block></then></if>
			<expr_stmt><expr><name pos:line="60" pos:column="25">attr<pos:position pos:line="60" pos:column="29"/></name> <operator pos:line="60" pos:column="30">&amp;=<pos:position pos:line="60" pos:column="36"/></operator> <operator pos:line="60" pos:column="33">~<pos:position pos:line="60" pos:column="34"/></operator><name pos:line="60" pos:column="34">bit<pos:position pos:line="60" pos:column="37"/></name></expr>;<pos:position pos:line="60" pos:column="38"/></expr_stmt>
			<if pos:line="61" pos:column="25">if <condition pos:line="61" pos:column="28">(<expr><name pos:line="61" pos:column="29">sep<pos:position pos:line="61" pos:column="32"/></name><operator pos:line="61" pos:column="32">++<pos:position pos:line="61" pos:column="34"/></operator></expr>)<pos:position pos:line="61" pos:column="35"/></condition><then pos:line="61" pos:column="35">
				<block type="pseudo"><expr_stmt><expr><operator pos:line="62" pos:column="33">*<pos:position pos:line="62" pos:column="34"/></operator><name pos:line="62" pos:column="34">dst<pos:position pos:line="62" pos:column="37"/></name><operator pos:line="62" pos:column="37">++<pos:position pos:line="62" pos:column="39"/></operator> <operator pos:line="62" pos:column="40">=<pos:position pos:line="62" pos:column="41"/></operator> <literal type="char" pos:line="62" pos:column="42">';'<pos:position pos:line="62" pos:column="45"/></literal></expr>;<pos:position pos:line="62" pos:column="46"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name pos:line="63" pos:column="25">dst<pos:position pos:line="63" pos:column="28"/></name> <operator pos:line="63" pos:column="29">+=<pos:position pos:line="63" pos:column="31"/></operator> <call><name pos:line="63" pos:column="32">sprintf<pos:position pos:line="63" pos:column="39"/></name><argument_list pos:line="63" pos:column="39">(<argument><expr><name pos:line="63" pos:column="40">dst<pos:position pos:line="63" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="45">"%d"<pos:position pos:line="63" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="63" pos:column="51">i<pos:position pos:line="63" pos:column="52"/></name></expr></argument>)<pos:position pos:line="63" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="54"/></expr_stmt>
		}<pos:position pos:line="64" pos:column="18"/></block></for>
		<if pos:line="65" pos:column="17">if <condition pos:line="65" pos:column="20">(<expr><operator pos:line="65" pos:column="21">!<pos:position pos:line="65" pos:column="22"/></operator><call><name pos:line="65" pos:column="22">color_empty<pos:position pos:line="65" pos:column="33"/></name><argument_list pos:line="65" pos:column="33">(<argument><expr><operator pos:line="65" pos:column="34">&amp;<pos:position pos:line="65" pos:column="39"/></operator><name pos:line="65" pos:column="35">fg<pos:position pos:line="65" pos:column="37"/></name></expr></argument>)<pos:position pos:line="65" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="65" pos:column="39"/></condition><then pos:line="65" pos:column="39"> <block pos:line="65" pos:column="40">{
			<if pos:line="66" pos:column="25">if <condition pos:line="66" pos:column="28">(<expr><name pos:line="66" pos:column="29">sep<pos:position pos:line="66" pos:column="32"/></name><operator pos:line="66" pos:column="32">++<pos:position pos:line="66" pos:column="34"/></operator></expr>)<pos:position pos:line="66" pos:column="35"/></condition><then pos:line="66" pos:column="35">
				<block type="pseudo"><expr_stmt><expr><operator pos:line="67" pos:column="33">*<pos:position pos:line="67" pos:column="34"/></operator><name pos:line="67" pos:column="34">dst<pos:position pos:line="67" pos:column="37"/></name><operator pos:line="67" pos:column="37">++<pos:position pos:line="67" pos:column="39"/></operator> <operator pos:line="67" pos:column="40">=<pos:position pos:line="67" pos:column="41"/></operator> <literal type="char" pos:line="67" pos:column="42">';'<pos:position pos:line="67" pos:column="45"/></literal></expr>;<pos:position pos:line="67" pos:column="46"/></expr_stmt></block></then></if>
			<comment type="block" pos:line="68" pos:column="25">/* foreground colors are all in the 3x range */</comment>
			<expr_stmt><expr><name pos:line="69" pos:column="25">dst<pos:position pos:line="69" pos:column="28"/></name> <operator pos:line="69" pos:column="29">=<pos:position pos:line="69" pos:column="30"/></operator> <call><name pos:line="69" pos:column="31">color_output<pos:position pos:line="69" pos:column="43"/></name><argument_list pos:line="69" pos:column="43">(<argument><expr><name pos:line="69" pos:column="44">dst<pos:position pos:line="69" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="69" pos:column="49">&amp;<pos:position pos:line="69" pos:column="54"/></operator><name pos:line="69" pos:column="50">fg<pos:position pos:line="69" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="69" pos:column="54">'3'<pos:position pos:line="69" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="59"/></expr_stmt>
		}<pos:position pos:line="70" pos:column="18"/></block></then></if>
		<if pos:line="71" pos:column="17">if <condition pos:line="71" pos:column="20">(<expr><operator pos:line="71" pos:column="21">!<pos:position pos:line="71" pos:column="22"/></operator><call><name pos:line="71" pos:column="22">color_empty<pos:position pos:line="71" pos:column="33"/></name><argument_list pos:line="71" pos:column="33">(<argument><expr><operator pos:line="71" pos:column="34">&amp;<pos:position pos:line="71" pos:column="39"/></operator><name pos:line="71" pos:column="35">bg<pos:position pos:line="71" pos:column="37"/></name></expr></argument>)<pos:position pos:line="71" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="71" pos:column="39"/></condition><then pos:line="71" pos:column="39"> <block pos:line="71" pos:column="40">{
			<if pos:line="72" pos:column="25">if <condition pos:line="72" pos:column="28">(<expr><name pos:line="72" pos:column="29">sep<pos:position pos:line="72" pos:column="32"/></name><operator pos:line="72" pos:column="32">++<pos:position pos:line="72" pos:column="34"/></operator></expr>)<pos:position pos:line="72" pos:column="35"/></condition><then pos:line="72" pos:column="35">
				<block type="pseudo"><expr_stmt><expr><operator pos:line="73" pos:column="33">*<pos:position pos:line="73" pos:column="34"/></operator><name pos:line="73" pos:column="34">dst<pos:position pos:line="73" pos:column="37"/></name><operator pos:line="73" pos:column="37">++<pos:position pos:line="73" pos:column="39"/></operator> <operator pos:line="73" pos:column="40">=<pos:position pos:line="73" pos:column="41"/></operator> <literal type="char" pos:line="73" pos:column="42">';'<pos:position pos:line="73" pos:column="45"/></literal></expr>;<pos:position pos:line="73" pos:column="46"/></expr_stmt></block></then></if>
			<comment type="block" pos:line="74" pos:column="25">/* background colors are all in the 4x range */</comment>
			<expr_stmt><expr><name pos:line="75" pos:column="25">dst<pos:position pos:line="75" pos:column="28"/></name> <operator pos:line="75" pos:column="29">=<pos:position pos:line="75" pos:column="30"/></operator> <call><name pos:line="75" pos:column="31">color_output<pos:position pos:line="75" pos:column="43"/></name><argument_list pos:line="75" pos:column="43">(<argument><expr><name pos:line="75" pos:column="44">dst<pos:position pos:line="75" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="75" pos:column="49">&amp;<pos:position pos:line="75" pos:column="54"/></operator><name pos:line="75" pos:column="50">bg<pos:position pos:line="75" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="75" pos:column="54">'4'<pos:position pos:line="75" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="59"/></expr_stmt>
		}<pos:position pos:line="76" pos:column="18"/></block></then></if>
		<expr_stmt><expr><operator pos:line="77" pos:column="17">*<pos:position pos:line="77" pos:column="18"/></operator><name pos:line="77" pos:column="18">dst<pos:position pos:line="77" pos:column="21"/></name><operator pos:line="77" pos:column="21">++<pos:position pos:line="77" pos:column="23"/></operator> <operator pos:line="77" pos:column="24">=<pos:position pos:line="77" pos:column="25"/></operator> <literal type="char" pos:line="77" pos:column="26">'m'<pos:position pos:line="77" pos:column="29"/></literal></expr>;<pos:position pos:line="77" pos:column="30"/></expr_stmt>
	}<pos:position pos:line="78" pos:column="10"/></block></then></if>
	<expr_stmt><expr><operator pos:line="79" pos:column="9">*<pos:position pos:line="79" pos:column="10"/></operator><name pos:line="79" pos:column="10">dst<pos:position pos:line="79" pos:column="13"/></name> <operator pos:line="79" pos:column="14">=<pos:position pos:line="79" pos:column="15"/></operator> <literal type="number" pos:line="79" pos:column="16">0<pos:position pos:line="79" pos:column="17"/></literal></expr>;<pos:position pos:line="79" pos:column="18"/></expr_stmt>
	<return pos:line="80" pos:column="9">return <expr><literal type="number" pos:line="80" pos:column="16">0<pos:position pos:line="80" pos:column="17"/></literal></expr>;<pos:position pos:line="80" pos:column="18"/></return>
<label><name pos:line="81" pos:column="1">bad<pos:position pos:line="81" pos:column="4"/></name>:<pos:position pos:line="81" pos:column="5"/></label>
	<return pos:line="82" pos:column="9">return <expr><call><name pos:line="82" pos:column="16">error<pos:position pos:line="82" pos:column="21"/></name><argument_list pos:line="82" pos:column="21">(<argument><expr><call><name pos:line="82" pos:column="22">_<pos:position pos:line="82" pos:column="23"/></name><argument_list pos:line="82" pos:column="23">(<argument><expr><literal type="string" pos:line="82" pos:column="24">"invalid color value: %.*s"<pos:position pos:line="82" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="82" pos:column="54">value_len<pos:position pos:line="82" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="65">value<pos:position pos:line="82" pos:column="70"/></name></expr></argument>)<pos:position pos:line="82" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="72"/></return>
}<pos:position pos:line="83" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5082_git-2.5.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_cherry_pick<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">int<pos:position pos:line="1" pos:column="24"/></name></type> <name pos:line="1" pos:column="25">argc<pos:position pos:line="1" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="31">const<pos:position pos:line="1" pos:column="36"/></specifier> <name pos:line="1" pos:column="37">char<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier><modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">argv<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="50">const<pos:position pos:line="1" pos:column="55"/></specifier> <name pos:line="1" pos:column="56">char<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">prefix<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">replay_opts<pos:position pos:line="3" pos:column="27"/></name></name></type> <name pos:line="3" pos:column="28">opts<pos:position pos:line="3" pos:column="32"/></name></decl>;<pos:position pos:line="3" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">res<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="6" pos:column="9">memset<pos:position pos:line="6" pos:column="15"/></name><argument_list pos:line="6" pos:column="15">(<argument><expr><operator pos:line="6" pos:column="16">&amp;<pos:position pos:line="6" pos:column="21"/></operator><name pos:line="6" pos:column="17">opts<pos:position pos:line="6" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="23">0<pos:position pos:line="6" pos:column="24"/></literal></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="26">sizeof<argument_list pos:line="6" pos:column="32">(<argument><expr><name pos:line="6" pos:column="33">opts<pos:position pos:line="6" pos:column="37"/></name></expr></argument>)<pos:position pos:line="6" pos:column="38"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="7" pos:column="9">opts<pos:position pos:line="7" pos:column="13"/></name><operator pos:line="7" pos:column="13">.<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">action<pos:position pos:line="7" pos:column="20"/></name></name> <operator pos:line="7" pos:column="21">=<pos:position pos:line="7" pos:column="22"/></operator> <name pos:line="7" pos:column="23">REPLAY_PICK<pos:position pos:line="7" pos:column="34"/></name></expr>;<pos:position pos:line="7" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="8" pos:column="9">git_config<pos:position pos:line="8" pos:column="19"/></name><argument_list pos:line="8" pos:column="19">(<argument><expr><name pos:line="8" pos:column="20">git_default_config<pos:position pos:line="8" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="40">NULL<pos:position pos:line="8" pos:column="44"/></name></expr></argument>)<pos:position pos:line="8" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="9" pos:column="9">parse_args<pos:position pos:line="9" pos:column="19"/></name><argument_list pos:line="9" pos:column="19">(<argument><expr><name pos:line="9" pos:column="20">argc<pos:position pos:line="9" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="26">argv<pos:position pos:line="9" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="32">&amp;<pos:position pos:line="9" pos:column="37"/></operator><name pos:line="9" pos:column="33">opts<pos:position pos:line="9" pos:column="37"/></name></expr></argument>)<pos:position pos:line="9" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><name pos:line="10" pos:column="9">res<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">=<pos:position pos:line="10" pos:column="14"/></operator> <call><name pos:line="10" pos:column="15">sequencer_pick_revisions<pos:position pos:line="10" pos:column="39"/></name><argument_list pos:line="10" pos:column="39">(<argument><expr><operator pos:line="10" pos:column="40">&amp;<pos:position pos:line="10" pos:column="45"/></operator><name pos:line="10" pos:column="41">opts<pos:position pos:line="10" pos:column="45"/></name></expr></argument>)<pos:position pos:line="10" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="47"/></expr_stmt>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">res<pos:position pos:line="11" pos:column="16"/></name> <operator pos:line="11" pos:column="17">&lt;<pos:position pos:line="11" pos:column="21"/></operator> <literal type="number" pos:line="11" pos:column="19">0<pos:position pos:line="11" pos:column="20"/></literal></expr>)<pos:position pos:line="11" pos:column="21"/></condition><then pos:line="11" pos:column="21">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="17">die<pos:position pos:line="12" pos:column="20"/></name><argument_list pos:line="12" pos:column="20">(<argument><expr><call><name pos:line="12" pos:column="21">_<pos:position pos:line="12" pos:column="22"/></name><argument_list pos:line="12" pos:column="22">(<argument><expr><literal type="string" pos:line="12" pos:column="23">"cherry-pick failed"<pos:position pos:line="12" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="46"/></expr_stmt></block></then></if>
	<return pos:line="13" pos:column="9">return <expr><name pos:line="13" pos:column="16">res<pos:position pos:line="13" pos:column="19"/></name></expr>;<pos:position pos:line="13" pos:column="20"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

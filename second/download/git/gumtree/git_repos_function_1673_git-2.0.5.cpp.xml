<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1673_git-2.0.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">execv_git_cmd<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><specifier pos:line="1" pos:column="19">const<pos:position pos:line="1" pos:column="24"/></specifier> <name pos:line="1" pos:column="25">char<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier><modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">argv<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="37"/></parameter_list> <block pos:line="1" pos:column="38">{
	<decl_stmt><decl><type><specifier pos:line="2" pos:column="9">const<pos:position pos:line="2" pos:column="14"/></specifier> <name pos:line="2" pos:column="15">char<pos:position pos:line="2" pos:column="19"/></name> <modifier pos:line="2" pos:column="20">*<pos:position pos:line="2" pos:column="21"/></modifier><modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier></type><name pos:line="2" pos:column="22">nargv<pos:position pos:line="2" pos:column="27"/></name> <init pos:line="2" pos:column="28">= <expr><call><name pos:line="2" pos:column="30">prepare_git_cmd<pos:position pos:line="2" pos:column="45"/></name><argument_list pos:line="2" pos:column="45">(<argument><expr><name pos:line="2" pos:column="46">argv<pos:position pos:line="2" pos:column="50"/></name></expr></argument>)<pos:position pos:line="2" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="2" pos:column="52"/></decl_stmt>
	<expr_stmt><expr><call><name pos:line="3" pos:column="9">trace_argv_printf<pos:position pos:line="3" pos:column="26"/></name><argument_list pos:line="3" pos:column="26">(<argument><expr><name pos:line="3" pos:column="27">nargv<pos:position pos:line="3" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="3" pos:column="34">"trace: exec:"<pos:position pos:line="3" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="50"/></expr_stmt>

	<comment type="block" pos:line="5" pos:column="9">/* execvp() can only ever return if it fails */</comment>
	<expr_stmt><expr><call><name pos:line="6" pos:column="9">sane_execvp<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><literal type="string" pos:line="6" pos:column="21">"git"<pos:position pos:line="6" pos:column="26"/></literal></expr></argument>, <argument><expr><operator pos:line="6" pos:column="28">(<pos:position pos:line="6" pos:column="29"/></operator><name pos:line="6" pos:column="29">char<pos:position pos:line="6" pos:column="33"/></name> <operator pos:line="6" pos:column="34">*<pos:position pos:line="6" pos:column="35"/></operator><operator pos:line="6" pos:column="35">*<pos:position pos:line="6" pos:column="36"/></operator><operator pos:line="6" pos:column="36">)<pos:position pos:line="6" pos:column="37"/></operator><name pos:line="6" pos:column="37">nargv<pos:position pos:line="6" pos:column="42"/></name></expr></argument>)<pos:position pos:line="6" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="44"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="8" pos:column="9">trace_printf<pos:position pos:line="8" pos:column="21"/></name><argument_list pos:line="8" pos:column="21">(<argument><expr><literal type="string" pos:line="8" pos:column="22">"trace: exec failed: %s\n"<pos:position pos:line="8" pos:column="48"/></literal></expr></argument>, <argument><expr><call><name pos:line="8" pos:column="50">strerror<pos:position pos:line="8" pos:column="58"/></name><argument_list pos:line="8" pos:column="58">(<argument><expr><name pos:line="8" pos:column="59">errno<pos:position pos:line="8" pos:column="64"/></name></expr></argument>)<pos:position pos:line="8" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="67"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="10" pos:column="9">free<pos:position pos:line="10" pos:column="13"/></name><argument_list pos:line="10" pos:column="13">(<argument><expr><name pos:line="10" pos:column="14">nargv<pos:position pos:line="10" pos:column="19"/></name></expr></argument>)<pos:position pos:line="10" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="21"/></expr_stmt>
	<return pos:line="11" pos:column="9">return <expr><operator pos:line="11" pos:column="16">-<pos:position pos:line="11" pos:column="17"/></operator><literal type="number" pos:line="11" pos:column="17">1<pos:position pos:line="11" pos:column="18"/></literal></expr>;<pos:position pos:line="11" pos:column="19"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

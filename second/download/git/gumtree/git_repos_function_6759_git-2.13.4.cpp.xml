<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6759_git-2.13.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">FORCEINLINE<pos:position pos:line="1" pos:column="19"/></name> <name pos:line="1" pos:column="20">void<pos:position pos:line="1" pos:column="24"/></name></type> <name pos:line="1" pos:column="25">win32_release_lock<pos:position pos:line="1" pos:column="43"/></name> <parameter_list pos:line="1" pos:column="44">(<parameter><decl><type><name pos:line="1" pos:column="45">MLOCK_T<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">sl<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list> <block pos:line="1" pos:column="58">{
  <expr_stmt><expr><call><name pos:line="2" pos:column="3">assert<pos:position pos:line="2" pos:column="9"/></name><argument_list pos:line="2" pos:column="9">(<argument><expr><name><name pos:line="2" pos:column="10">sl<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">-&gt;<pos:position pos:line="2" pos:column="17"/></operator><name pos:line="2" pos:column="14">threadid<pos:position pos:line="2" pos:column="22"/></name></name> <operator pos:line="2" pos:column="23">==<pos:position pos:line="2" pos:column="25"/></operator> <name pos:line="2" pos:column="26">CURRENT_THREAD<pos:position pos:line="2" pos:column="40"/></name></expr></argument>)<pos:position pos:line="2" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="2" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="3" pos:column="3">assert<pos:position pos:line="3" pos:column="9"/></name><argument_list pos:line="3" pos:column="9">(<argument><expr><name><name pos:line="3" pos:column="10">sl<pos:position pos:line="3" pos:column="12"/></name><operator pos:line="3" pos:column="12">-&gt;<pos:position pos:line="3" pos:column="17"/></operator><name pos:line="3" pos:column="14">l<pos:position pos:line="3" pos:column="15"/></name></name> <operator pos:line="3" pos:column="16">!=<pos:position pos:line="3" pos:column="18"/></operator> <literal type="number" pos:line="3" pos:column="19">0<pos:position pos:line="3" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="22"/></expr_stmt>
  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><operator pos:line="4" pos:column="7">--<pos:position pos:line="4" pos:column="9"/></operator><name><name pos:line="4" pos:column="9">sl<pos:position pos:line="4" pos:column="11"/></name><operator pos:line="4" pos:column="11">-&gt;<pos:position pos:line="4" pos:column="16"/></operator><name pos:line="4" pos:column="13">c<pos:position pos:line="4" pos:column="14"/></name></name> <operator pos:line="4" pos:column="15">==<pos:position pos:line="4" pos:column="17"/></operator> <literal type="number" pos:line="4" pos:column="18">0<pos:position pos:line="4" pos:column="19"/></literal></expr>)<pos:position pos:line="4" pos:column="20"/></condition><then pos:line="4" pos:column="20"> <block pos:line="4" pos:column="21">{
    <expr_stmt><expr><name><name pos:line="5" pos:column="5">sl<pos:position pos:line="5" pos:column="7"/></name><operator pos:line="5" pos:column="7">-&gt;<pos:position pos:line="5" pos:column="12"/></operator><name pos:line="5" pos:column="9">threadid<pos:position pos:line="5" pos:column="17"/></name></name> <operator pos:line="5" pos:column="18">=<pos:position pos:line="5" pos:column="19"/></operator> <literal type="number" pos:line="5" pos:column="20">0<pos:position pos:line="5" pos:column="21"/></literal></expr>;<pos:position pos:line="5" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">interlockedexchange<pos:position pos:line="6" pos:column="24"/></name> <argument_list pos:line="6" pos:column="25">(<argument><expr><operator pos:line="6" pos:column="26">&amp;<pos:position pos:line="6" pos:column="31"/></operator><name><name pos:line="6" pos:column="27">sl<pos:position pos:line="6" pos:column="29"/></name><operator pos:line="6" pos:column="29">-&gt;<pos:position pos:line="6" pos:column="34"/></operator><name pos:line="6" pos:column="31">l<pos:position pos:line="6" pos:column="32"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="34">0<pos:position pos:line="6" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="37"/></expr_stmt>
  }<pos:position pos:line="7" pos:column="4"/></block></then></if>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1159_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">strbuf_utf8_replace<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name><name pos:line="1" pos:column="26">struct<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">strbuf<pos:position pos:line="1" pos:column="39"/></name></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">sb_src<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">int<pos:position pos:line="1" pos:column="52"/></name></type> <name pos:line="1" pos:column="53">pos<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">int<pos:position pos:line="1" pos:column="61"/></name></type> <name pos:line="1" pos:column="62">width<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>,
			 <parameter><decl><type><specifier pos:line="2" pos:column="26">const<pos:position pos:line="2" pos:column="31"/></specifier> <name pos:line="2" pos:column="32">char<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="38">subst<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="44"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">strbuf<pos:position pos:line="4" pos:column="22"/></name></name></type> <name pos:line="4" pos:column="23">sb_dst<pos:position pos:line="4" pos:column="29"/></name> <init pos:line="4" pos:column="30">= <expr><name pos:line="4" pos:column="32">STRBUF_INIT<pos:position pos:line="4" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">src<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><name><name pos:line="5" pos:column="21">sb_src<pos:position pos:line="5" pos:column="27"/></name><operator pos:line="5" pos:column="27">-&gt;<pos:position pos:line="5" pos:column="32"/></operator><name pos:line="5" pos:column="29">buf<pos:position pos:line="5" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">end<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><name pos:line="6" pos:column="21">src<pos:position pos:line="6" pos:column="24"/></name> <operator pos:line="6" pos:column="25">+<pos:position pos:line="6" pos:column="26"/></operator> <name><name pos:line="6" pos:column="27">sb_src<pos:position pos:line="6" pos:column="33"/></name><operator pos:line="6" pos:column="33">-&gt;<pos:position pos:line="6" pos:column="38"/></operator><name pos:line="6" pos:column="35">len<pos:position pos:line="6" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">dst<pos:position pos:line="7" pos:column="18"/></name></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">w<pos:position pos:line="8" pos:column="14"/></name> <init pos:line="8" pos:column="15">= <expr><literal type="number" pos:line="8" pos:column="17">0<pos:position pos:line="8" pos:column="18"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="20">subst_len<pos:position pos:line="8" pos:column="29"/></name> <init pos:line="8" pos:column="30">= <expr><literal type="number" pos:line="8" pos:column="32">0<pos:position pos:line="8" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="34"/></decl_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">subst<pos:position pos:line="10" pos:column="18"/></name></expr>)<pos:position pos:line="10" pos:column="19"/></condition><then pos:line="10" pos:column="19">
		<block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="17">subst_len<pos:position pos:line="11" pos:column="26"/></name> <operator pos:line="11" pos:column="27">=<pos:position pos:line="11" pos:column="28"/></operator> <call><name pos:line="11" pos:column="29">strlen<pos:position pos:line="11" pos:column="35"/></name><argument_list pos:line="11" pos:column="35">(<argument><expr><name pos:line="11" pos:column="36">subst<pos:position pos:line="11" pos:column="41"/></name></expr></argument>)<pos:position pos:line="11" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="43"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="12" pos:column="9">strbuf_grow<pos:position pos:line="12" pos:column="20"/></name><argument_list pos:line="12" pos:column="20">(<argument><expr><operator pos:line="12" pos:column="21">&amp;<pos:position pos:line="12" pos:column="26"/></operator><name pos:line="12" pos:column="22">sb_dst<pos:position pos:line="12" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="30">sb_src<pos:position pos:line="12" pos:column="36"/></name><operator pos:line="12" pos:column="36">-&gt;<pos:position pos:line="12" pos:column="41"/></operator><name pos:line="12" pos:column="38">len<pos:position pos:line="12" pos:column="41"/></name></name> <operator pos:line="12" pos:column="42">+<pos:position pos:line="12" pos:column="43"/></operator> <name pos:line="12" pos:column="44">subst_len<pos:position pos:line="12" pos:column="53"/></name></expr></argument>)<pos:position pos:line="12" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><name pos:line="13" pos:column="9">dst<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">=<pos:position pos:line="13" pos:column="14"/></operator> <name><name pos:line="13" pos:column="15">sb_dst<pos:position pos:line="13" pos:column="21"/></name><operator pos:line="13" pos:column="21">.<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="22">buf<pos:position pos:line="13" pos:column="25"/></name></name></expr>;<pos:position pos:line="13" pos:column="26"/></expr_stmt>

	<while pos:line="15" pos:column="9">while <condition pos:line="15" pos:column="15">(<expr><name pos:line="15" pos:column="16">src<pos:position pos:line="15" pos:column="19"/></name> <operator pos:line="15" pos:column="20">&lt;<pos:position pos:line="15" pos:column="24"/></operator> <name pos:line="15" pos:column="22">end<pos:position pos:line="15" pos:column="25"/></name></expr>)<pos:position pos:line="15" pos:column="26"/></condition> <block pos:line="15" pos:column="27">{
		<decl_stmt><decl><type><name pos:line="16" pos:column="17">char<pos:position pos:line="16" pos:column="21"/></name> <modifier pos:line="16" pos:column="22">*<pos:position pos:line="16" pos:column="23"/></modifier></type><name pos:line="16" pos:column="23">old<pos:position pos:line="16" pos:column="26"/></name></decl>;<pos:position pos:line="16" pos:column="27"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="17" pos:column="17">size_t<pos:position pos:line="17" pos:column="23"/></name></type> <name pos:line="17" pos:column="24">n<pos:position pos:line="17" pos:column="25"/></name></decl>;<pos:position pos:line="17" pos:column="26"/></decl_stmt>

		<while pos:line="19" pos:column="17">while <condition pos:line="19" pos:column="23">(<expr><operator pos:line="19" pos:column="24">(<pos:position pos:line="19" pos:column="25"/></operator><name pos:line="19" pos:column="25">n<pos:position pos:line="19" pos:column="26"/></name> <operator pos:line="19" pos:column="27">=<pos:position pos:line="19" pos:column="28"/></operator> <call><name pos:line="19" pos:column="29">display_mode_esc_sequence_len<pos:position pos:line="19" pos:column="58"/></name><argument_list pos:line="19" pos:column="58">(<argument><expr><name pos:line="19" pos:column="59">src<pos:position pos:line="19" pos:column="62"/></name></expr></argument>)<pos:position pos:line="19" pos:column="63"/></argument_list></call><operator pos:line="19" pos:column="63">)<pos:position pos:line="19" pos:column="64"/></operator></expr>)<pos:position pos:line="19" pos:column="65"/></condition> <block pos:line="19" pos:column="66">{
			<expr_stmt><expr><call><name pos:line="20" pos:column="25">memcpy<pos:position pos:line="20" pos:column="31"/></name><argument_list pos:line="20" pos:column="31">(<argument><expr><name pos:line="20" pos:column="32">dst<pos:position pos:line="20" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="37">src<pos:position pos:line="20" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="42">n<pos:position pos:line="20" pos:column="43"/></name></expr></argument>)<pos:position pos:line="20" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="45"/></expr_stmt>
			<expr_stmt><expr><name pos:line="21" pos:column="25">src<pos:position pos:line="21" pos:column="28"/></name> <operator pos:line="21" pos:column="29">+=<pos:position pos:line="21" pos:column="31"/></operator> <name pos:line="21" pos:column="32">n<pos:position pos:line="21" pos:column="33"/></name></expr>;<pos:position pos:line="21" pos:column="34"/></expr_stmt>
			<expr_stmt><expr><name pos:line="22" pos:column="25">dst<pos:position pos:line="22" pos:column="28"/></name> <operator pos:line="22" pos:column="29">+=<pos:position pos:line="22" pos:column="31"/></operator> <name pos:line="22" pos:column="32">n<pos:position pos:line="22" pos:column="33"/></name></expr>;<pos:position pos:line="22" pos:column="34"/></expr_stmt>
		}<pos:position pos:line="23" pos:column="18"/></block></while>

		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><name pos:line="25" pos:column="21">src<pos:position pos:line="25" pos:column="24"/></name> <operator pos:line="25" pos:column="25">&gt;=<pos:position pos:line="25" pos:column="30"/></operator> <name pos:line="25" pos:column="28">end<pos:position pos:line="25" pos:column="31"/></name></expr>)<pos:position pos:line="25" pos:column="32"/></condition><then pos:line="25" pos:column="32">
			<block type="pseudo"><break pos:line="26" pos:column="25">break;<pos:position pos:line="26" pos:column="31"/></break></block></then></if>

		<expr_stmt><expr><name pos:line="28" pos:column="17">old<pos:position pos:line="28" pos:column="20"/></name> <operator pos:line="28" pos:column="21">=<pos:position pos:line="28" pos:column="22"/></operator> <name pos:line="28" pos:column="23">src<pos:position pos:line="28" pos:column="26"/></name></expr>;<pos:position pos:line="28" pos:column="27"/></expr_stmt>
		<expr_stmt><expr><name pos:line="29" pos:column="17">n<pos:position pos:line="29" pos:column="18"/></name> <operator pos:line="29" pos:column="19">=<pos:position pos:line="29" pos:column="20"/></operator> <call><name pos:line="29" pos:column="21">utf8_width<pos:position pos:line="29" pos:column="31"/></name><argument_list pos:line="29" pos:column="31">(<argument><expr><operator pos:line="29" pos:column="32">(<pos:position pos:line="29" pos:column="33"/></operator><specifier pos:line="29" pos:column="33">const<pos:position pos:line="29" pos:column="38"/></specifier> <name pos:line="29" pos:column="39">char<pos:position pos:line="29" pos:column="43"/></name><operator pos:line="29" pos:column="43">*<pos:position pos:line="29" pos:column="44"/></operator><operator pos:line="29" pos:column="44">*<pos:position pos:line="29" pos:column="45"/></operator><operator pos:line="29" pos:column="45">)<pos:position pos:line="29" pos:column="46"/></operator><operator pos:line="29" pos:column="46">&amp;<pos:position pos:line="29" pos:column="51"/></operator><name pos:line="29" pos:column="47">src<pos:position pos:line="29" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="52">NULL<pos:position pos:line="29" pos:column="56"/></name></expr></argument>)<pos:position pos:line="29" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="58"/></expr_stmt>
		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><operator pos:line="30" pos:column="21">!<pos:position pos:line="30" pos:column="22"/></operator><name pos:line="30" pos:column="22">src<pos:position pos:line="30" pos:column="25"/></name></expr>)<pos:position pos:line="30" pos:column="26"/></condition><then pos:line="30" pos:column="26"> 	<comment type="block" pos:line="30" pos:column="33">/* broken utf-8, do nothing */</comment>
			<block type="pseudo"><return pos:line="31" pos:column="25">return;<pos:position pos:line="31" pos:column="32"/></return></block></then></if>
		<if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><name pos:line="32" pos:column="21">n<pos:position pos:line="32" pos:column="22"/></name> <operator pos:line="32" pos:column="23">&amp;&amp;<pos:position pos:line="32" pos:column="33"/></operator> <name pos:line="32" pos:column="26">w<pos:position pos:line="32" pos:column="27"/></name> <operator pos:line="32" pos:column="28">&gt;=<pos:position pos:line="32" pos:column="33"/></operator> <name pos:line="32" pos:column="31">pos<pos:position pos:line="32" pos:column="34"/></name> <operator pos:line="32" pos:column="35">&amp;&amp;<pos:position pos:line="32" pos:column="45"/></operator> <name pos:line="32" pos:column="38">w<pos:position pos:line="32" pos:column="39"/></name> <operator pos:line="32" pos:column="40">&lt;<pos:position pos:line="32" pos:column="44"/></operator> <name pos:line="32" pos:column="42">pos<pos:position pos:line="32" pos:column="45"/></name> <operator pos:line="32" pos:column="46">+<pos:position pos:line="32" pos:column="47"/></operator> <name pos:line="32" pos:column="48">width<pos:position pos:line="32" pos:column="53"/></name></expr>)<pos:position pos:line="32" pos:column="54"/></condition><then pos:line="32" pos:column="54"> <block pos:line="32" pos:column="55">{
			<if pos:line="33" pos:column="25">if <condition pos:line="33" pos:column="28">(<expr><name pos:line="33" pos:column="29">subst<pos:position pos:line="33" pos:column="34"/></name></expr>)<pos:position pos:line="33" pos:column="35"/></condition><then pos:line="33" pos:column="35"> <block pos:line="33" pos:column="36">{
				<expr_stmt><expr><call><name pos:line="34" pos:column="33">memcpy<pos:position pos:line="34" pos:column="39"/></name><argument_list pos:line="34" pos:column="39">(<argument><expr><name pos:line="34" pos:column="40">dst<pos:position pos:line="34" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="45">subst<pos:position pos:line="34" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="52">subst_len<pos:position pos:line="34" pos:column="61"/></name></expr></argument>)<pos:position pos:line="34" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="63"/></expr_stmt>
				<expr_stmt><expr><name pos:line="35" pos:column="33">dst<pos:position pos:line="35" pos:column="36"/></name> <operator pos:line="35" pos:column="37">+=<pos:position pos:line="35" pos:column="39"/></operator> <name pos:line="35" pos:column="40">subst_len<pos:position pos:line="35" pos:column="49"/></name></expr>;<pos:position pos:line="35" pos:column="50"/></expr_stmt>
				<expr_stmt><expr><name pos:line="36" pos:column="33">subst<pos:position pos:line="36" pos:column="38"/></name> <operator pos:line="36" pos:column="39">=<pos:position pos:line="36" pos:column="40"/></operator> <name pos:line="36" pos:column="41">NULL<pos:position pos:line="36" pos:column="45"/></name></expr>;<pos:position pos:line="36" pos:column="46"/></expr_stmt>
			}<pos:position pos:line="37" pos:column="26"/></block></then></if>
			<expr_stmt><expr><name pos:line="38" pos:column="25">w<pos:position pos:line="38" pos:column="26"/></name> <operator pos:line="38" pos:column="27">+=<pos:position pos:line="38" pos:column="29"/></operator> <name pos:line="38" pos:column="30">n<pos:position pos:line="38" pos:column="31"/></name></expr>;<pos:position pos:line="38" pos:column="32"/></expr_stmt>
			<continue pos:line="39" pos:column="25">continue;<pos:position pos:line="39" pos:column="34"/></continue>
		}<pos:position pos:line="40" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="41" pos:column="17">memcpy<pos:position pos:line="41" pos:column="23"/></name><argument_list pos:line="41" pos:column="23">(<argument><expr><name pos:line="41" pos:column="24">dst<pos:position pos:line="41" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="29">old<pos:position pos:line="41" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="34">src<pos:position pos:line="41" pos:column="37"/></name> <operator pos:line="41" pos:column="38">-<pos:position pos:line="41" pos:column="39"/></operator> <name pos:line="41" pos:column="40">old<pos:position pos:line="41" pos:column="43"/></name></expr></argument>)<pos:position pos:line="41" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><name pos:line="42" pos:column="17">dst<pos:position pos:line="42" pos:column="20"/></name> <operator pos:line="42" pos:column="21">+=<pos:position pos:line="42" pos:column="23"/></operator> <name pos:line="42" pos:column="24">src<pos:position pos:line="42" pos:column="27"/></name> <operator pos:line="42" pos:column="28">-<pos:position pos:line="42" pos:column="29"/></operator> <name pos:line="42" pos:column="30">old<pos:position pos:line="42" pos:column="33"/></name></expr>;<pos:position pos:line="42" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><name pos:line="43" pos:column="17">w<pos:position pos:line="43" pos:column="18"/></name> <operator pos:line="43" pos:column="19">+=<pos:position pos:line="43" pos:column="21"/></operator> <name pos:line="43" pos:column="22">n<pos:position pos:line="43" pos:column="23"/></name></expr>;<pos:position pos:line="43" pos:column="24"/></expr_stmt>
	}<pos:position pos:line="44" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="45" pos:column="9">strbuf_setlen<pos:position pos:line="45" pos:column="22"/></name><argument_list pos:line="45" pos:column="22">(<argument><expr><operator pos:line="45" pos:column="23">&amp;<pos:position pos:line="45" pos:column="28"/></operator><name pos:line="45" pos:column="24">sb_dst<pos:position pos:line="45" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="32">dst<pos:position pos:line="45" pos:column="35"/></name> <operator pos:line="45" pos:column="36">-<pos:position pos:line="45" pos:column="37"/></operator> <name><name pos:line="45" pos:column="38">sb_dst<pos:position pos:line="45" pos:column="44"/></name><operator pos:line="45" pos:column="44">.<pos:position pos:line="45" pos:column="45"/></operator><name pos:line="45" pos:column="45">buf<pos:position pos:line="45" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="50"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="46" pos:column="9">strbuf_swap<pos:position pos:line="46" pos:column="20"/></name><argument_list pos:line="46" pos:column="20">(<argument><expr><name pos:line="46" pos:column="21">sb_src<pos:position pos:line="46" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="29">&amp;<pos:position pos:line="46" pos:column="34"/></operator><name pos:line="46" pos:column="30">sb_dst<pos:position pos:line="46" pos:column="36"/></name></expr></argument>)<pos:position pos:line="46" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="47" pos:column="9">strbuf_release<pos:position pos:line="47" pos:column="23"/></name><argument_list pos:line="47" pos:column="23">(<argument><expr><operator pos:line="47" pos:column="24">&amp;<pos:position pos:line="47" pos:column="29"/></operator><name pos:line="47" pos:column="25">sb_dst<pos:position pos:line="47" pos:column="31"/></name></expr></argument>)<pos:position pos:line="47" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="33"/></expr_stmt>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

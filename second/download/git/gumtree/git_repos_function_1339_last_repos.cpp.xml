<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1339_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">gitdiff_verify_name<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">apply_state<pos:position pos:line="1" pos:column="50"/></name></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">state<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>,
			       <parameter><decl><type><specifier pos:line="2" pos:column="32">const<pos:position pos:line="2" pos:column="37"/></specifier> <name pos:line="2" pos:column="38">char<pos:position pos:line="2" pos:column="42"/></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">line<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>,
			       <parameter><decl><type><name pos:line="3" pos:column="32">int<pos:position pos:line="3" pos:column="35"/></name></type> <name pos:line="3" pos:column="36">isnull<pos:position pos:line="3" pos:column="42"/></name></decl></parameter>,
			       <parameter><decl><type><name pos:line="4" pos:column="32">char<pos:position pos:line="4" pos:column="36"/></name> <modifier pos:line="4" pos:column="37">*<pos:position pos:line="4" pos:column="38"/></modifier><modifier pos:line="4" pos:column="38">*<pos:position pos:line="4" pos:column="39"/></modifier></type><name pos:line="4" pos:column="39">name<pos:position pos:line="4" pos:column="43"/></name></decl></parameter>,
			       <parameter><decl><type><name pos:line="5" pos:column="32">int<pos:position pos:line="5" pos:column="35"/></name></type> <name pos:line="5" pos:column="36">side<pos:position pos:line="5" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="41"/></parameter_list>
<block pos:line="6" pos:column="1">{
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><operator pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></operator><name pos:line="7" pos:column="15">name<pos:position pos:line="7" pos:column="19"/></name> <operator pos:line="7" pos:column="20">&amp;&amp;<pos:position pos:line="7" pos:column="30"/></operator> <operator pos:line="7" pos:column="23">!<pos:position pos:line="7" pos:column="24"/></operator><name pos:line="7" pos:column="24">isnull<pos:position pos:line="7" pos:column="30"/></name></expr>)<pos:position pos:line="7" pos:column="31"/></condition><then pos:line="7" pos:column="31"> <block pos:line="7" pos:column="32">{
		<expr_stmt><expr><operator pos:line="8" pos:column="17">*<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="18">name<pos:position pos:line="8" pos:column="22"/></name> <operator pos:line="8" pos:column="23">=<pos:position pos:line="8" pos:column="24"/></operator> <call><name pos:line="8" pos:column="25">find_name<pos:position pos:line="8" pos:column="34"/></name><argument_list pos:line="8" pos:column="34">(<argument><expr><name pos:line="8" pos:column="35">state<pos:position pos:line="8" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="42">line<pos:position pos:line="8" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="48">NULL<pos:position pos:line="8" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="54">state<pos:position pos:line="8" pos:column="59"/></name><operator pos:line="8" pos:column="59">-&gt;<pos:position pos:line="8" pos:column="64"/></operator><name pos:line="8" pos:column="61">p_value<pos:position pos:line="8" pos:column="68"/></name></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="70">TERM_TAB<pos:position pos:line="8" pos:column="78"/></name></expr></argument>)<pos:position pos:line="8" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="80"/></expr_stmt>
		<return pos:line="9" pos:column="17">return <expr><literal type="number" pos:line="9" pos:column="24">0<pos:position pos:line="9" pos:column="25"/></literal></expr>;<pos:position pos:line="9" pos:column="26"/></return>
	}<pos:position pos:line="10" pos:column="10"/></block></then></if>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">*<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">name<pos:position pos:line="12" pos:column="18"/></name></expr>)<pos:position pos:line="12" pos:column="19"/></condition><then pos:line="12" pos:column="19"> <block pos:line="12" pos:column="20">{
		<decl_stmt><decl><type><name pos:line="13" pos:column="17">char<pos:position pos:line="13" pos:column="21"/></name> <modifier pos:line="13" pos:column="22">*<pos:position pos:line="13" pos:column="23"/></modifier></type><name pos:line="13" pos:column="23">another<pos:position pos:line="13" pos:column="30"/></name></decl>;<pos:position pos:line="13" pos:column="31"/></decl_stmt>
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><name pos:line="14" pos:column="21">isnull<pos:position pos:line="14" pos:column="27"/></name></expr>)<pos:position pos:line="14" pos:column="28"/></condition><then pos:line="14" pos:column="28">
			<block type="pseudo"><return pos:line="15" pos:column="25">return <expr><call><name pos:line="15" pos:column="32">error<pos:position pos:line="15" pos:column="37"/></name><argument_list pos:line="15" pos:column="37">(<argument><expr><call><name pos:line="15" pos:column="38">_<pos:position pos:line="15" pos:column="39"/></name><argument_list pos:line="15" pos:column="39">(<argument><expr><literal type="string" pos:line="15" pos:column="40">"git apply: bad git-diff - expected /dev/null, got %s on line %d"<pos:position pos:line="15" pos:column="105"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="106"/></argument_list></call></expr></argument>,
				     <argument><expr><operator pos:line="16" pos:column="38">*<pos:position pos:line="16" pos:column="39"/></operator><name pos:line="16" pos:column="39">name<pos:position pos:line="16" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="45">state<pos:position pos:line="16" pos:column="50"/></name><operator pos:line="16" pos:column="50">-&gt;<pos:position pos:line="16" pos:column="55"/></operator><name pos:line="16" pos:column="52">linenr<pos:position pos:line="16" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="60"/></return></block></then></if>
		<expr_stmt><expr><name pos:line="17" pos:column="17">another<pos:position pos:line="17" pos:column="24"/></name> <operator pos:line="17" pos:column="25">=<pos:position pos:line="17" pos:column="26"/></operator> <call><name pos:line="17" pos:column="27">find_name<pos:position pos:line="17" pos:column="36"/></name><argument_list pos:line="17" pos:column="36">(<argument><expr><name pos:line="17" pos:column="37">state<pos:position pos:line="17" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="44">line<pos:position pos:line="17" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="50">NULL<pos:position pos:line="17" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="56">state<pos:position pos:line="17" pos:column="61"/></name><operator pos:line="17" pos:column="61">-&gt;<pos:position pos:line="17" pos:column="66"/></operator><name pos:line="17" pos:column="63">p_value<pos:position pos:line="17" pos:column="70"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="72">TERM_TAB<pos:position pos:line="17" pos:column="80"/></name></expr></argument>)<pos:position pos:line="17" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="82"/></expr_stmt>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><operator pos:line="18" pos:column="21">!<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="22">another<pos:position pos:line="18" pos:column="29"/></name> <operator pos:line="18" pos:column="30">||<pos:position pos:line="18" pos:column="32"/></operator> <call><name pos:line="18" pos:column="33">strcmp<pos:position pos:line="18" pos:column="39"/></name><argument_list pos:line="18" pos:column="39">(<argument><expr><name pos:line="18" pos:column="40">another<pos:position pos:line="18" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="49">*<pos:position pos:line="18" pos:column="50"/></operator><name pos:line="18" pos:column="50">name<pos:position pos:line="18" pos:column="54"/></name></expr></argument>)<pos:position pos:line="18" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="56"/></condition><then pos:line="18" pos:column="56"> <block pos:line="18" pos:column="57">{
			<expr_stmt><expr><call><name pos:line="19" pos:column="25">free<pos:position pos:line="19" pos:column="29"/></name><argument_list pos:line="19" pos:column="29">(<argument><expr><name pos:line="19" pos:column="30">another<pos:position pos:line="19" pos:column="37"/></name></expr></argument>)<pos:position pos:line="19" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="39"/></expr_stmt>
			<return pos:line="20" pos:column="25">return <expr><call><name pos:line="20" pos:column="32">error<pos:position pos:line="20" pos:column="37"/></name><argument_list pos:line="20" pos:column="37">(<argument><expr><ternary><condition><expr><operator pos:line="20" pos:column="38">(<pos:position pos:line="20" pos:column="39"/></operator><name pos:line="20" pos:column="39">side<pos:position pos:line="20" pos:column="43"/></name> <operator pos:line="20" pos:column="44">==<pos:position pos:line="20" pos:column="46"/></operator> <name pos:line="20" pos:column="47">DIFF_NEW_NAME<pos:position pos:line="20" pos:column="60"/></name><operator pos:line="20" pos:column="60">)<pos:position pos:line="20" pos:column="61"/></operator></expr> ?<pos:position pos:line="20" pos:column="63"/></condition><then pos:line="20" pos:column="63">
			    <expr><call><name pos:line="21" pos:column="29">_<pos:position pos:line="21" pos:column="30"/></name><argument_list pos:line="21" pos:column="30">(<argument><expr><literal type="string" pos:line="21" pos:column="31">"git apply: bad git-diff - inconsistent new filename on line %d"<pos:position pos:line="21" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="96"/></argument_list></call></expr> <pos:position pos:line="21" pos:column="97"/></then><else pos:line="21" pos:column="97">:
			    <expr><call><name pos:line="22" pos:column="29">_<pos:position pos:line="22" pos:column="30"/></name><argument_list pos:line="22" pos:column="30">(<argument><expr><literal type="string" pos:line="22" pos:column="31">"git apply: bad git-diff - inconsistent old filename on line %d"<pos:position pos:line="22" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="96"/></argument_list></call></expr></else></ternary></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="98">state<pos:position pos:line="22" pos:column="103"/></name><operator pos:line="22" pos:column="103">-&gt;<pos:position pos:line="22" pos:column="108"/></operator><name pos:line="22" pos:column="105">linenr<pos:position pos:line="22" pos:column="111"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="112"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="113"/></return>
		}<pos:position pos:line="23" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="24" pos:column="17">free<pos:position pos:line="24" pos:column="21"/></name><argument_list pos:line="24" pos:column="21">(<argument><expr><name pos:line="24" pos:column="22">another<pos:position pos:line="24" pos:column="29"/></name></expr></argument>)<pos:position pos:line="24" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="25" pos:column="10"/></block></then> <else pos:line="25" pos:column="11">else <block pos:line="25" pos:column="16">{
		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><operator pos:line="26" pos:column="21">!<pos:position pos:line="26" pos:column="22"/></operator><call><name pos:line="26" pos:column="22">starts_with<pos:position pos:line="26" pos:column="33"/></name><argument_list pos:line="26" pos:column="33">(<argument><expr><name pos:line="26" pos:column="34">line<pos:position pos:line="26" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="40">"/dev/null\n"<pos:position pos:line="26" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="55"/></condition><then pos:line="26" pos:column="55">
			<block type="pseudo"><return pos:line="27" pos:column="25">return <expr><call><name pos:line="27" pos:column="32">error<pos:position pos:line="27" pos:column="37"/></name><argument_list pos:line="27" pos:column="37">(<argument><expr><call><name pos:line="27" pos:column="38">_<pos:position pos:line="27" pos:column="39"/></name><argument_list pos:line="27" pos:column="39">(<argument><expr><literal type="string" pos:line="27" pos:column="40">"git apply: bad git-diff - expected /dev/null on line %d"<pos:position pos:line="27" pos:column="97"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="98"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="100">state<pos:position pos:line="27" pos:column="105"/></name><operator pos:line="27" pos:column="105">-&gt;<pos:position pos:line="27" pos:column="110"/></operator><name pos:line="27" pos:column="107">linenr<pos:position pos:line="27" pos:column="113"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="114"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="115"/></return></block></then></if>
	}<pos:position pos:line="28" pos:column="10"/></block></else></if>

	<return pos:line="30" pos:column="9">return <expr><literal type="number" pos:line="30" pos:column="16">0<pos:position pos:line="30" pos:column="17"/></literal></expr>;<pos:position pos:line="30" pos:column="18"/></return>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

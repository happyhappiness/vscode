<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1719.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">add<pos:position pos:line="1" pos:column="15"/></name><parameter_list pos:line="1" pos:column="15">(<parameter><decl><type><name pos:line="1" pos:column="16">int<pos:position pos:line="1" pos:column="19"/></name></type> <name pos:line="1" pos:column="20">argc<pos:position pos:line="1" pos:column="24"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier><modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">argv<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="45">const<pos:position pos:line="1" pos:column="50"/></specifier> <name pos:line="1" pos:column="51">char<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">prefix<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">retval<pos:position pos:line="3" pos:column="19"/></name> <init pos:line="3" pos:column="20">= <expr><literal type="number" pos:line="3" pos:column="22">0<pos:position pos:line="3" pos:column="23"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="25">force<pos:position pos:line="3" pos:column="30"/></name> <init pos:line="3" pos:column="31">= <expr><literal type="number" pos:line="3" pos:column="33">0<pos:position pos:line="3" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">object_ref<pos:position pos:line="4" pos:column="31"/></name></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">notes_tree<pos:position pos:line="5" pos:column="26"/></name></name> <modifier pos:line="5" pos:column="27">*<pos:position pos:line="5" pos:column="28"/></modifier></type><name pos:line="5" pos:column="28">t<pos:position pos:line="5" pos:column="29"/></name></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">unsigned<pos:position pos:line="6" pos:column="17"/></name> <name pos:line="6" pos:column="18">char<pos:position pos:line="6" pos:column="22"/></name></type> <name><name pos:line="6" pos:column="23">object<pos:position pos:line="6" pos:column="29"/></name><index pos:line="6" pos:column="29">[<expr><literal type="number" pos:line="6" pos:column="30">20<pos:position pos:line="6" pos:column="32"/></literal></expr>]<pos:position pos:line="6" pos:column="33"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="6" pos:column="35">new_note<pos:position pos:line="6" pos:column="43"/></name><index pos:line="6" pos:column="43">[<expr><literal type="number" pos:line="6" pos:column="44">20<pos:position pos:line="6" pos:column="46"/></literal></expr>]<pos:position pos:line="6" pos:column="47"/></index></name></decl>;<pos:position pos:line="6" pos:column="48"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name></type> <name><name pos:line="7" pos:column="14">logmsg<pos:position pos:line="7" pos:column="20"/></name><index pos:line="7" pos:column="20">[<expr><literal type="number" pos:line="7" pos:column="21">100<pos:position pos:line="7" pos:column="24"/></literal></expr>]<pos:position pos:line="7" pos:column="25"/></index></name></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="8" pos:column="9">const<pos:position pos:line="8" pos:column="14"/></specifier> <name pos:line="8" pos:column="15">unsigned<pos:position pos:line="8" pos:column="23"/></name> <name pos:line="8" pos:column="24">char<pos:position pos:line="8" pos:column="28"/></name> <modifier pos:line="8" pos:column="29">*<pos:position pos:line="8" pos:column="30"/></modifier></type><name pos:line="8" pos:column="30">note<pos:position pos:line="8" pos:column="34"/></name></decl>;<pos:position pos:line="8" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">msg_arg<pos:position pos:line="9" pos:column="23"/></name></name></type> <name pos:line="9" pos:column="24">msg<pos:position pos:line="9" pos:column="27"/></name> <init pos:line="9" pos:column="28">= <expr><block pos:line="9" pos:column="30">{ <expr><literal type="number" pos:line="9" pos:column="32">0<pos:position pos:line="9" pos:column="33"/></literal></expr>, <expr><literal type="number" pos:line="9" pos:column="35">0<pos:position pos:line="9" pos:column="36"/></literal></expr>, <expr><name pos:line="9" pos:column="38">STRBUF_INIT<pos:position pos:line="9" pos:column="49"/></name></expr> }<pos:position pos:line="9" pos:column="51"/></block></expr></init></decl>;<pos:position pos:line="9" pos:column="52"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="10" pos:column="9">struct<pos:position pos:line="10" pos:column="15"/></name> <name pos:line="10" pos:column="16">option<pos:position pos:line="10" pos:column="22"/></name></name></type> <name><name pos:line="10" pos:column="23">options<pos:position pos:line="10" pos:column="30"/></name><index pos:line="10" pos:column="30">[]<pos:position pos:line="10" pos:column="32"/></index></name> <init pos:line="10" pos:column="33">= <expr><block pos:line="10" pos:column="35">{
		<expr><block pos:line="11" pos:column="17">{ <expr><name pos:line="11" pos:column="19">OPTION_CALLBACK<pos:position pos:line="11" pos:column="34"/></name></expr>, <expr><literal type="char" pos:line="11" pos:column="36">'m'<pos:position pos:line="11" pos:column="39"/></literal></expr>, <expr><literal type="string" pos:line="11" pos:column="41">"message"<pos:position pos:line="11" pos:column="50"/></literal></expr>, <expr><operator pos:line="11" pos:column="52">&amp;<pos:position pos:line="11" pos:column="57"/></operator><name pos:line="11" pos:column="53">msg<pos:position pos:line="11" pos:column="56"/></name></expr>, <expr><call><name pos:line="11" pos:column="58">N_<pos:position pos:line="11" pos:column="60"/></name><argument_list pos:line="11" pos:column="60">(<argument><expr><literal type="string" pos:line="11" pos:column="61">"message"<pos:position pos:line="11" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="71"/></argument_list></call></expr>,
			<expr><call><name pos:line="12" pos:column="25">N_<pos:position pos:line="12" pos:column="27"/></name><argument_list pos:line="12" pos:column="27">(<argument><expr><literal type="string" pos:line="12" pos:column="28">"note contents as a string"<pos:position pos:line="12" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="56"/></argument_list></call></expr>, <expr><name pos:line="12" pos:column="58">PARSE_OPT_NONEG<pos:position pos:line="12" pos:column="73"/></name></expr>,
			<expr><name pos:line="13" pos:column="25">parse_msg_arg<pos:position pos:line="13" pos:column="38"/></name></expr>}<pos:position pos:line="13" pos:column="39"/></block></expr>,
		<expr><block pos:line="14" pos:column="17">{ <expr><name pos:line="14" pos:column="19">OPTION_CALLBACK<pos:position pos:line="14" pos:column="34"/></name></expr>, <expr><literal type="char" pos:line="14" pos:column="36">'F'<pos:position pos:line="14" pos:column="39"/></literal></expr>, <expr><literal type="string" pos:line="14" pos:column="41">"file"<pos:position pos:line="14" pos:column="47"/></literal></expr>, <expr><operator pos:line="14" pos:column="49">&amp;<pos:position pos:line="14" pos:column="54"/></operator><name pos:line="14" pos:column="50">msg<pos:position pos:line="14" pos:column="53"/></name></expr>, <expr><call><name pos:line="14" pos:column="55">N_<pos:position pos:line="14" pos:column="57"/></name><argument_list pos:line="14" pos:column="57">(<argument><expr><literal type="string" pos:line="14" pos:column="58">"file"<pos:position pos:line="14" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="65"/></argument_list></call></expr>,
			<expr><call><name pos:line="15" pos:column="25">N_<pos:position pos:line="15" pos:column="27"/></name><argument_list pos:line="15" pos:column="27">(<argument><expr><literal type="string" pos:line="15" pos:column="28">"note contents in a file"<pos:position pos:line="15" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="54"/></argument_list></call></expr>, <expr><name pos:line="15" pos:column="56">PARSE_OPT_NONEG<pos:position pos:line="15" pos:column="71"/></name></expr>,
			<expr><name pos:line="16" pos:column="25">parse_file_arg<pos:position pos:line="16" pos:column="39"/></name></expr>}<pos:position pos:line="16" pos:column="40"/></block></expr>,
		<expr><block pos:line="17" pos:column="17">{ <expr><name pos:line="17" pos:column="19">OPTION_CALLBACK<pos:position pos:line="17" pos:column="34"/></name></expr>, <expr><literal type="char" pos:line="17" pos:column="36">'c'<pos:position pos:line="17" pos:column="39"/></literal></expr>, <expr><literal type="string" pos:line="17" pos:column="41">"reedit-message"<pos:position pos:line="17" pos:column="57"/></literal></expr>, <expr><operator pos:line="17" pos:column="59">&amp;<pos:position pos:line="17" pos:column="64"/></operator><name pos:line="17" pos:column="60">msg<pos:position pos:line="17" pos:column="63"/></name></expr>, <expr><call><name pos:line="17" pos:column="65">N_<pos:position pos:line="17" pos:column="67"/></name><argument_list pos:line="17" pos:column="67">(<argument><expr><literal type="string" pos:line="17" pos:column="68">"object"<pos:position pos:line="17" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="77"/></argument_list></call></expr>,
			<expr><call><name pos:line="18" pos:column="25">N_<pos:position pos:line="18" pos:column="27"/></name><argument_list pos:line="18" pos:column="27">(<argument><expr><literal type="string" pos:line="18" pos:column="28">"reuse and edit specified note object"<pos:position pos:line="18" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="67"/></argument_list></call></expr>, <expr><name pos:line="18" pos:column="69">PARSE_OPT_NONEG<pos:position pos:line="18" pos:column="84"/></name></expr>,
			<expr><name pos:line="19" pos:column="25">parse_reedit_arg<pos:position pos:line="19" pos:column="41"/></name></expr>}<pos:position pos:line="19" pos:column="42"/></block></expr>,
		<expr><block pos:line="20" pos:column="17">{ <expr><name pos:line="20" pos:column="19">OPTION_CALLBACK<pos:position pos:line="20" pos:column="34"/></name></expr>, <expr><literal type="char" pos:line="20" pos:column="36">'C'<pos:position pos:line="20" pos:column="39"/></literal></expr>, <expr><literal type="string" pos:line="20" pos:column="41">"reuse-message"<pos:position pos:line="20" pos:column="56"/></literal></expr>, <expr><operator pos:line="20" pos:column="58">&amp;<pos:position pos:line="20" pos:column="63"/></operator><name pos:line="20" pos:column="59">msg<pos:position pos:line="20" pos:column="62"/></name></expr>, <expr><call><name pos:line="20" pos:column="64">N_<pos:position pos:line="20" pos:column="66"/></name><argument_list pos:line="20" pos:column="66">(<argument><expr><literal type="string" pos:line="20" pos:column="67">"object"<pos:position pos:line="20" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="76"/></argument_list></call></expr>,
			<expr><call><name pos:line="21" pos:column="25">N_<pos:position pos:line="21" pos:column="27"/></name><argument_list pos:line="21" pos:column="27">(<argument><expr><literal type="string" pos:line="21" pos:column="28">"reuse specified note object"<pos:position pos:line="21" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="58"/></argument_list></call></expr>, <expr><name pos:line="21" pos:column="60">PARSE_OPT_NONEG<pos:position pos:line="21" pos:column="75"/></name></expr>,
			<expr><name pos:line="22" pos:column="25">parse_reuse_arg<pos:position pos:line="22" pos:column="40"/></name></expr>}<pos:position pos:line="22" pos:column="41"/></block></expr>,
		<expr><call><name pos:line="23" pos:column="17">OPT__FORCE<pos:position pos:line="23" pos:column="27"/></name><argument_list pos:line="23" pos:column="27">(<argument><expr><operator pos:line="23" pos:column="28">&amp;<pos:position pos:line="23" pos:column="33"/></operator><name pos:line="23" pos:column="29">force<pos:position pos:line="23" pos:column="34"/></name></expr></argument>, <argument><expr><call><name pos:line="23" pos:column="36">N_<pos:position pos:line="23" pos:column="38"/></name><argument_list pos:line="23" pos:column="38">(<argument><expr><literal type="string" pos:line="23" pos:column="39">"replace existing notes"<pos:position pos:line="23" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="65"/></argument_list></call></expr>,
		<macro><name pos:line="24" pos:column="17">OPT_END<pos:position pos:line="24" pos:column="24"/></name><argument_list pos:line="24" pos:column="24">()<pos:position pos:line="24" pos:column="26"/></argument_list></macro>
	}<pos:position pos:line="25" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="25" pos:column="11"/></decl_stmt>

	<expr_stmt><expr><name pos:line="27" pos:column="9">argc<pos:position pos:line="27" pos:column="13"/></name> <operator pos:line="27" pos:column="14">=<pos:position pos:line="27" pos:column="15"/></operator> <call><name pos:line="27" pos:column="16">parse_options<pos:position pos:line="27" pos:column="29"/></name><argument_list pos:line="27" pos:column="29">(<argument><expr><name pos:line="27" pos:column="30">argc<pos:position pos:line="27" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="36">argv<pos:position pos:line="27" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="42">prefix<pos:position pos:line="27" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="50">options<pos:position pos:line="27" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="59">git_notes_add_usage<pos:position pos:line="27" pos:column="78"/></name></expr></argument>,
			     <argument><expr><name pos:line="28" pos:column="30">PARSE_OPT_KEEP_ARGV0<pos:position pos:line="28" pos:column="50"/></name></expr></argument>)<pos:position pos:line="28" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="52"/></expr_stmt>

	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><literal type="number" pos:line="30" pos:column="13">2<pos:position pos:line="30" pos:column="14"/></literal> <operator pos:line="30" pos:column="15">&lt;<pos:position pos:line="30" pos:column="19"/></operator> <name pos:line="30" pos:column="17">argc<pos:position pos:line="30" pos:column="21"/></name></expr>)<pos:position pos:line="30" pos:column="22"/></condition><then pos:line="30" pos:column="22"> <block pos:line="30" pos:column="23">{
		<expr_stmt><expr><call><name pos:line="31" pos:column="17">error<pos:position pos:line="31" pos:column="22"/></name><argument_list pos:line="31" pos:column="22">(<argument><expr><call><name pos:line="31" pos:column="23">_<pos:position pos:line="31" pos:column="24"/></name><argument_list pos:line="31" pos:column="24">(<argument><expr><literal type="string" pos:line="31" pos:column="25">"too many parameters"<pos:position pos:line="31" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="32" pos:column="17">usage_with_options<pos:position pos:line="32" pos:column="35"/></name><argument_list pos:line="32" pos:column="35">(<argument><expr><name pos:line="32" pos:column="36">git_notes_add_usage<pos:position pos:line="32" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="57">options<pos:position pos:line="32" pos:column="64"/></name></expr></argument>)<pos:position pos:line="32" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="66"/></expr_stmt>
	}<pos:position pos:line="33" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="35" pos:column="9">object_ref<pos:position pos:line="35" pos:column="19"/></name> <operator pos:line="35" pos:column="20">=<pos:position pos:line="35" pos:column="21"/></operator> <ternary><condition><expr><name pos:line="35" pos:column="22">argc<pos:position pos:line="35" pos:column="26"/></name> <operator pos:line="35" pos:column="27">&gt;<pos:position pos:line="35" pos:column="31"/></operator> <literal type="number" pos:line="35" pos:column="29">1<pos:position pos:line="35" pos:column="30"/></literal></expr> ?<pos:position pos:line="35" pos:column="32"/></condition><then pos:line="35" pos:column="32"> <expr><name><name pos:line="35" pos:column="33">argv<pos:position pos:line="35" pos:column="37"/></name><index pos:line="35" pos:column="37">[<expr><literal type="number" pos:line="35" pos:column="38">1<pos:position pos:line="35" pos:column="39"/></literal></expr>]<pos:position pos:line="35" pos:column="40"/></index></name></expr> <pos:position pos:line="35" pos:column="41"/></then><else pos:line="35" pos:column="41">: <expr><literal type="string" pos:line="35" pos:column="43">"HEAD"<pos:position pos:line="35" pos:column="49"/></literal></expr></else></ternary></expr>;<pos:position pos:line="35" pos:column="50"/></expr_stmt>

	<if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><call><name pos:line="37" pos:column="13">get_sha1<pos:position pos:line="37" pos:column="21"/></name><argument_list pos:line="37" pos:column="21">(<argument><expr><name pos:line="37" pos:column="22">object_ref<pos:position pos:line="37" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="34">object<pos:position pos:line="37" pos:column="40"/></name></expr></argument>)<pos:position pos:line="37" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="42"/></condition><then pos:line="37" pos:column="42">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="38" pos:column="17">die<pos:position pos:line="38" pos:column="20"/></name><argument_list pos:line="38" pos:column="20">(<argument><expr><call><name pos:line="38" pos:column="21">_<pos:position pos:line="38" pos:column="22"/></name><argument_list pos:line="38" pos:column="22">(<argument><expr><literal type="string" pos:line="38" pos:column="23">"Failed to resolve '%s' as a valid ref."<pos:position pos:line="38" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="38" pos:column="66">object_ref<pos:position pos:line="38" pos:column="76"/></name></expr></argument>)<pos:position pos:line="38" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="78"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="40" pos:column="9">t<pos:position pos:line="40" pos:column="10"/></name> <operator pos:line="40" pos:column="11">=<pos:position pos:line="40" pos:column="12"/></operator> <call><name pos:line="40" pos:column="13">init_notes_check<pos:position pos:line="40" pos:column="29"/></name><argument_list pos:line="40" pos:column="29">(<argument><expr><literal type="string" pos:line="40" pos:column="30">"add"<pos:position pos:line="40" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><name pos:line="41" pos:column="9">note<pos:position pos:line="41" pos:column="13"/></name> <operator pos:line="41" pos:column="14">=<pos:position pos:line="41" pos:column="15"/></operator> <call><name pos:line="41" pos:column="16">get_note<pos:position pos:line="41" pos:column="24"/></name><argument_list pos:line="41" pos:column="24">(<argument><expr><name pos:line="41" pos:column="25">t<pos:position pos:line="41" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="28">object<pos:position pos:line="41" pos:column="34"/></name></expr></argument>)<pos:position pos:line="41" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="36"/></expr_stmt>

	<if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><name pos:line="43" pos:column="13">note<pos:position pos:line="43" pos:column="17"/></name></expr>)<pos:position pos:line="43" pos:column="18"/></condition><then pos:line="43" pos:column="18"> <block pos:line="43" pos:column="19">{
		<if pos:line="44" pos:column="17">if <condition pos:line="44" pos:column="20">(<expr><operator pos:line="44" pos:column="21">!<pos:position pos:line="44" pos:column="22"/></operator><name pos:line="44" pos:column="22">force<pos:position pos:line="44" pos:column="27"/></name></expr>)<pos:position pos:line="44" pos:column="28"/></condition><then pos:line="44" pos:column="28"> <block pos:line="44" pos:column="29">{
			<if pos:line="45" pos:column="25">if <condition pos:line="45" pos:column="28">(<expr><operator pos:line="45" pos:column="29">!<pos:position pos:line="45" pos:column="30"/></operator><name><name pos:line="45" pos:column="30">msg<pos:position pos:line="45" pos:column="33"/></name><operator pos:line="45" pos:column="33">.<pos:position pos:line="45" pos:column="34"/></operator><name pos:line="45" pos:column="34">given<pos:position pos:line="45" pos:column="39"/></name></name></expr>)<pos:position pos:line="45" pos:column="40"/></condition><then pos:line="45" pos:column="40"> <block pos:line="45" pos:column="41">{
				<comment type="block" pos:line="46" pos:column="33">/*
				 * Redirect to "edit" subcommand.
				 *
				 * We only end up here if none of -m/-F/-c/-C
				 * or -f are given. The original args are
				 * therefore still in argv[0-1].
				 */</comment>
				<expr_stmt><expr><name><name pos:line="53" pos:column="33">argv<pos:position pos:line="53" pos:column="37"/></name><index pos:line="53" pos:column="37">[<expr><literal type="number" pos:line="53" pos:column="38">0<pos:position pos:line="53" pos:column="39"/></literal></expr>]<pos:position pos:line="53" pos:column="40"/></index></name> <operator pos:line="53" pos:column="41">=<pos:position pos:line="53" pos:column="42"/></operator> <literal type="string" pos:line="53" pos:column="43">"edit"<pos:position pos:line="53" pos:column="49"/></literal></expr>;<pos:position pos:line="53" pos:column="50"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="54" pos:column="33">free_notes<pos:position pos:line="54" pos:column="43"/></name><argument_list pos:line="54" pos:column="43">(<argument><expr><name pos:line="54" pos:column="44">t<pos:position pos:line="54" pos:column="45"/></name></expr></argument>)<pos:position pos:line="54" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="47"/></expr_stmt>
				<return pos:line="55" pos:column="33">return <expr><call><name pos:line="55" pos:column="40">append_edit<pos:position pos:line="55" pos:column="51"/></name><argument_list pos:line="55" pos:column="51">(<argument><expr><name pos:line="55" pos:column="52">argc<pos:position pos:line="55" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="58">argv<pos:position pos:line="55" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="64">prefix<pos:position pos:line="55" pos:column="70"/></name></expr></argument>)<pos:position pos:line="55" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="72"/></return>
			}<pos:position pos:line="56" pos:column="26"/></block></then></if>
			<expr_stmt><expr><name pos:line="57" pos:column="25">retval<pos:position pos:line="57" pos:column="31"/></name> <operator pos:line="57" pos:column="32">=<pos:position pos:line="57" pos:column="33"/></operator> <call><name pos:line="57" pos:column="34">error<pos:position pos:line="57" pos:column="39"/></name><argument_list pos:line="57" pos:column="39">(<argument><expr><call><name pos:line="57" pos:column="40">_<pos:position pos:line="57" pos:column="41"/></name><argument_list pos:line="57" pos:column="41">(<argument><expr><literal type="string" pos:line="57" pos:column="42">"Cannot add notes. Found existing notes "<pos:position pos:line="57" pos:column="83"/></literal>
				       <literal type="string" pos:line="58" pos:column="40">"for object %s. Use '-f' to overwrite "<pos:position pos:line="58" pos:column="79"/></literal>
				       <literal type="string" pos:line="59" pos:column="40">"existing notes"<pos:position pos:line="59" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="57"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="59" pos:column="59">sha1_to_hex<pos:position pos:line="59" pos:column="70"/></name><argument_list pos:line="59" pos:column="70">(<argument><expr><name pos:line="59" pos:column="71">object<pos:position pos:line="59" pos:column="77"/></name></expr></argument>)<pos:position pos:line="59" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="59" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="80"/></expr_stmt>
			<goto pos:line="60" pos:column="25">goto <name pos:line="60" pos:column="30">out<pos:position pos:line="60" pos:column="33"/></name>;<pos:position pos:line="60" pos:column="34"/></goto>
		}<pos:position pos:line="61" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="62" pos:column="17">fprintf<pos:position pos:line="62" pos:column="24"/></name><argument_list pos:line="62" pos:column="24">(<argument><expr><name pos:line="62" pos:column="25">stderr<pos:position pos:line="62" pos:column="31"/></name></expr></argument>, <argument><expr><call><name pos:line="62" pos:column="33">_<pos:position pos:line="62" pos:column="34"/></name><argument_list pos:line="62" pos:column="34">(<argument><expr><literal type="string" pos:line="62" pos:column="35">"Overwriting existing notes for object %s\n"<pos:position pos:line="62" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="80"/></argument_list></call></expr></argument>,
			<argument><expr><call><name pos:line="63" pos:column="25">sha1_to_hex<pos:position pos:line="63" pos:column="36"/></name><argument_list pos:line="63" pos:column="36">(<argument><expr><name pos:line="63" pos:column="37">object<pos:position pos:line="63" pos:column="43"/></name></expr></argument>)<pos:position pos:line="63" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="63" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="46"/></expr_stmt>
	}<pos:position pos:line="64" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="66" pos:column="9">create_note<pos:position pos:line="66" pos:column="20"/></name><argument_list pos:line="66" pos:column="20">(<argument><expr><name pos:line="66" pos:column="21">object<pos:position pos:line="66" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="66" pos:column="29">&amp;<pos:position pos:line="66" pos:column="34"/></operator><name pos:line="66" pos:column="30">msg<pos:position pos:line="66" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="66" pos:column="35">0<pos:position pos:line="66" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="66" pos:column="38">note<pos:position pos:line="66" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="44">new_note<pos:position pos:line="66" pos:column="52"/></name></expr></argument>)<pos:position pos:line="66" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="54"/></expr_stmt>

	<if pos:line="68" pos:column="9">if <condition pos:line="68" pos:column="12">(<expr><call><name pos:line="68" pos:column="13">is_null_sha1<pos:position pos:line="68" pos:column="25"/></name><argument_list pos:line="68" pos:column="25">(<argument><expr><name pos:line="68" pos:column="26">new_note<pos:position pos:line="68" pos:column="34"/></name></expr></argument>)<pos:position pos:line="68" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="68" pos:column="36"/></condition><then pos:line="68" pos:column="36">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="69" pos:column="17">remove_note<pos:position pos:line="69" pos:column="28"/></name><argument_list pos:line="69" pos:column="28">(<argument><expr><name pos:line="69" pos:column="29">t<pos:position pos:line="69" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="32">object<pos:position pos:line="69" pos:column="38"/></name></expr></argument>)<pos:position pos:line="69" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="40"/></expr_stmt></block></then>
	<elseif pos:line="70" pos:column="9">else <if pos:line="70" pos:column="14">if <condition pos:line="70" pos:column="17">(<expr><call><name pos:line="70" pos:column="18">add_note<pos:position pos:line="70" pos:column="26"/></name><argument_list pos:line="70" pos:column="26">(<argument><expr><name pos:line="70" pos:column="27">t<pos:position pos:line="70" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="30">object<pos:position pos:line="70" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="38">new_note<pos:position pos:line="70" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="48">combine_notes_overwrite<pos:position pos:line="70" pos:column="71"/></name></expr></argument>)<pos:position pos:line="70" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="70" pos:column="73"/></condition><then pos:line="70" pos:column="73">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="71" pos:column="17">die<pos:position pos:line="71" pos:column="20"/></name><argument_list pos:line="71" pos:column="20">(<argument><expr><literal type="string" pos:line="71" pos:column="21">"BUG: combine_notes_overwrite failed"<pos:position pos:line="71" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="60"/></expr_stmt></block></then></if></elseif></if>

	<expr_stmt><expr><call><name pos:line="73" pos:column="9">snprintf<pos:position pos:line="73" pos:column="17"/></name><argument_list pos:line="73" pos:column="17">(<argument><expr><name pos:line="73" pos:column="18">logmsg<pos:position pos:line="73" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="73" pos:column="26">sizeof<argument_list pos:line="73" pos:column="32">(<argument><expr><name pos:line="73" pos:column="33">logmsg<pos:position pos:line="73" pos:column="39"/></name></expr></argument>)<pos:position pos:line="73" pos:column="40"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="42">"Notes %s by 'git notes %s'"<pos:position pos:line="73" pos:column="70"/></literal></expr></argument>,
		 <argument><expr><ternary><condition><expr><call><name pos:line="74" pos:column="18">is_null_sha1<pos:position pos:line="74" pos:column="30"/></name><argument_list pos:line="74" pos:column="30">(<argument><expr><name pos:line="74" pos:column="31">new_note<pos:position pos:line="74" pos:column="39"/></name></expr></argument>)<pos:position pos:line="74" pos:column="40"/></argument_list></call></expr> ?<pos:position pos:line="74" pos:column="42"/></condition><then pos:line="74" pos:column="42"> <expr><literal type="string" pos:line="74" pos:column="43">"removed"<pos:position pos:line="74" pos:column="52"/></literal></expr> <pos:position pos:line="74" pos:column="53"/></then><else pos:line="74" pos:column="53">: <expr><literal type="string" pos:line="74" pos:column="55">"added"<pos:position pos:line="74" pos:column="62"/></literal></expr></else></ternary></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="64">"add"<pos:position pos:line="74" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="71"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="75" pos:column="9">commit_notes<pos:position pos:line="75" pos:column="21"/></name><argument_list pos:line="75" pos:column="21">(<argument><expr><name pos:line="75" pos:column="22">t<pos:position pos:line="75" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="25">logmsg<pos:position pos:line="75" pos:column="31"/></name></expr></argument>)<pos:position pos:line="75" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="33"/></expr_stmt>
<label><name pos:line="76" pos:column="1">out<pos:position pos:line="76" pos:column="4"/></name>:<pos:position pos:line="76" pos:column="5"/></label>
	<expr_stmt><expr><call><name pos:line="77" pos:column="9">free_notes<pos:position pos:line="77" pos:column="19"/></name><argument_list pos:line="77" pos:column="19">(<argument><expr><name pos:line="77" pos:column="20">t<pos:position pos:line="77" pos:column="21"/></name></expr></argument>)<pos:position pos:line="77" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="23"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="78" pos:column="9">strbuf_release<pos:position pos:line="78" pos:column="23"/></name><argument_list pos:line="78" pos:column="23">(<argument><expr><operator pos:line="78" pos:column="24">&amp;<pos:position pos:line="78" pos:column="29"/></operator><operator pos:line="78" pos:column="25">(<pos:position pos:line="78" pos:column="26"/></operator><name><name pos:line="78" pos:column="26">msg<pos:position pos:line="78" pos:column="29"/></name><operator pos:line="78" pos:column="29">.<pos:position pos:line="78" pos:column="30"/></operator><name pos:line="78" pos:column="30">buf<pos:position pos:line="78" pos:column="33"/></name></name><operator pos:line="78" pos:column="33">)<pos:position pos:line="78" pos:column="34"/></operator></expr></argument>)<pos:position pos:line="78" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="36"/></expr_stmt>
	<return pos:line="79" pos:column="9">return <expr><name pos:line="79" pos:column="16">retval<pos:position pos:line="79" pos:column="22"/></name></expr>;<pos:position pos:line="79" pos:column="23"/></return>
}<pos:position pos:line="80" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1759_git-2.5.6.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">check_filename<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><specifier pos:line="1" pos:column="20">const<pos:position pos:line="1" pos:column="25"/></specifier> <name pos:line="1" pos:column="26">char<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">prefix<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="40">const<pos:position pos:line="1" pos:column="45"/></specifier> <name pos:line="1" pos:column="46">char<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">arg<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">name<pos:position pos:line="3" pos:column="25"/></name></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">stat<pos:position pos:line="4" pos:column="20"/></name></name></type> <name pos:line="4" pos:column="21">st<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><call><name pos:line="6" pos:column="13">starts_with<pos:position pos:line="6" pos:column="24"/></name><argument_list pos:line="6" pos:column="24">(<argument><expr><name pos:line="6" pos:column="25">arg<pos:position pos:line="6" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="30">":/"<pos:position pos:line="6" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="36"/></condition><then pos:line="6" pos:column="36"> <block pos:line="6" pos:column="37">{
		<if pos:line="7" pos:column="17">if <condition pos:line="7" pos:column="20">(<expr><name><name pos:line="7" pos:column="21">arg<pos:position pos:line="7" pos:column="24"/></name><index pos:line="7" pos:column="24">[<expr><literal type="number" pos:line="7" pos:column="25">2<pos:position pos:line="7" pos:column="26"/></literal></expr>]<pos:position pos:line="7" pos:column="27"/></index></name> <operator pos:line="7" pos:column="28">==<pos:position pos:line="7" pos:column="30"/></operator> <literal type="char" pos:line="7" pos:column="31">'\0'<pos:position pos:line="7" pos:column="35"/></literal></expr>)<pos:position pos:line="7" pos:column="36"/></condition><then pos:line="7" pos:column="36"> <comment type="block" pos:line="7" pos:column="37">/* ":/" is root dir, always exists */</comment>
			<block type="pseudo"><return pos:line="8" pos:column="25">return <expr><literal type="number" pos:line="8" pos:column="32">1<pos:position pos:line="8" pos:column="33"/></literal></expr>;<pos:position pos:line="8" pos:column="34"/></return></block></then></if>
		<expr_stmt><expr><name pos:line="9" pos:column="17">name<pos:position pos:line="9" pos:column="21"/></name> <operator pos:line="9" pos:column="22">=<pos:position pos:line="9" pos:column="23"/></operator> <name pos:line="9" pos:column="24">arg<pos:position pos:line="9" pos:column="27"/></name> <operator pos:line="9" pos:column="28">+<pos:position pos:line="9" pos:column="29"/></operator> <literal type="number" pos:line="9" pos:column="30">2<pos:position pos:line="9" pos:column="31"/></literal></expr>;<pos:position pos:line="9" pos:column="32"/></expr_stmt>
	}<pos:position pos:line="10" pos:column="10"/></block></then> <elseif pos:line="10" pos:column="11">else <if pos:line="10" pos:column="16">if <condition pos:line="10" pos:column="19">(<expr><operator pos:line="10" pos:column="20">!<pos:position pos:line="10" pos:column="21"/></operator><call><name pos:line="10" pos:column="21">no_wildcard<pos:position pos:line="10" pos:column="32"/></name><argument_list pos:line="10" pos:column="32">(<argument><expr><name pos:line="10" pos:column="33">arg<pos:position pos:line="10" pos:column="36"/></name></expr></argument>)<pos:position pos:line="10" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="38"/></condition><then pos:line="10" pos:column="38">
		<block type="pseudo"><return pos:line="11" pos:column="17">return <expr><literal type="number" pos:line="11" pos:column="24">1<pos:position pos:line="11" pos:column="25"/></literal></expr>;<pos:position pos:line="11" pos:column="26"/></return></block></then></if></elseif>
	<elseif pos:line="12" pos:column="9">else <if pos:line="12" pos:column="14">if <condition pos:line="12" pos:column="17">(<expr><name pos:line="12" pos:column="18">prefix<pos:position pos:line="12" pos:column="24"/></name></expr>)<pos:position pos:line="12" pos:column="25"/></condition><then pos:line="12" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="17">name<pos:position pos:line="13" pos:column="21"/></name> <operator pos:line="13" pos:column="22">=<pos:position pos:line="13" pos:column="23"/></operator> <call><name pos:line="13" pos:column="24">prefix_filename<pos:position pos:line="13" pos:column="39"/></name><argument_list pos:line="13" pos:column="39">(<argument><expr><name pos:line="13" pos:column="40">prefix<pos:position pos:line="13" pos:column="46"/></name></expr></argument>, <argument><expr><call><name pos:line="13" pos:column="48">strlen<pos:position pos:line="13" pos:column="54"/></name><argument_list pos:line="13" pos:column="54">(<argument><expr><name pos:line="13" pos:column="55">prefix<pos:position pos:line="13" pos:column="61"/></name></expr></argument>)<pos:position pos:line="13" pos:column="62"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="13" pos:column="64">arg<pos:position pos:line="13" pos:column="67"/></name></expr></argument>)<pos:position pos:line="13" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="69"/></expr_stmt></block></then></if></elseif>
	<else pos:line="14" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="17">name<pos:position pos:line="15" pos:column="21"/></name> <operator pos:line="15" pos:column="22">=<pos:position pos:line="15" pos:column="23"/></operator> <name pos:line="15" pos:column="24">arg<pos:position pos:line="15" pos:column="27"/></name></expr>;<pos:position pos:line="15" pos:column="28"/></expr_stmt></block></else></if>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><operator pos:line="16" pos:column="13">!<pos:position pos:line="16" pos:column="14"/></operator><call><name pos:line="16" pos:column="14">lstat<pos:position pos:line="16" pos:column="19"/></name><argument_list pos:line="16" pos:column="19">(<argument><expr><name pos:line="16" pos:column="20">name<pos:position pos:line="16" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="26">&amp;<pos:position pos:line="16" pos:column="31"/></operator><name pos:line="16" pos:column="27">st<pos:position pos:line="16" pos:column="29"/></name></expr></argument>)<pos:position pos:line="16" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="31"/></condition><then pos:line="16" pos:column="31">
		<block type="pseudo"><return pos:line="17" pos:column="17">return <expr><literal type="number" pos:line="17" pos:column="24">1<pos:position pos:line="17" pos:column="25"/></literal></expr>;<pos:position pos:line="17" pos:column="26"/></return></block></then></if> <comment type="block" pos:line="17" pos:column="27">/* file exists */</comment>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">errno<pos:position pos:line="18" pos:column="18"/></name> <operator pos:line="18" pos:column="19">==<pos:position pos:line="18" pos:column="21"/></operator> <name pos:line="18" pos:column="22">ENOENT<pos:position pos:line="18" pos:column="28"/></name> <operator pos:line="18" pos:column="29">||<pos:position pos:line="18" pos:column="31"/></operator> <name pos:line="18" pos:column="32">errno<pos:position pos:line="18" pos:column="37"/></name> <operator pos:line="18" pos:column="38">==<pos:position pos:line="18" pos:column="40"/></operator> <name pos:line="18" pos:column="41">ENOTDIR<pos:position pos:line="18" pos:column="48"/></name></expr>)<pos:position pos:line="18" pos:column="49"/></condition><then pos:line="18" pos:column="49">
		<block type="pseudo"><return pos:line="19" pos:column="17">return <expr><literal type="number" pos:line="19" pos:column="24">0<pos:position pos:line="19" pos:column="25"/></literal></expr>;<pos:position pos:line="19" pos:column="26"/></return></block></then></if> <comment type="block" pos:line="19" pos:column="27">/* file does not exist */</comment>
	<expr_stmt><expr><call><name pos:line="20" pos:column="9">die_errno<pos:position pos:line="20" pos:column="18"/></name><argument_list pos:line="20" pos:column="18">(<argument><expr><literal type="string" pos:line="20" pos:column="19">"failed to stat '%s'"<pos:position pos:line="20" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="42">arg<pos:position pos:line="20" pos:column="45"/></name></expr></argument>)<pos:position pos:line="20" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="47"/></expr_stmt>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

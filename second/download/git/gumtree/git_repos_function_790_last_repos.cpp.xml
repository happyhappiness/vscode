<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_790_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">display<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name><name pos:line="1" pos:column="20">struct<pos:position pos:line="1" pos:column="26"/></name> <name pos:line="1" pos:column="27">progress<pos:position pos:line="1" pos:column="35"/></name></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">progress<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">unsigned<pos:position pos:line="1" pos:column="55"/></name></type> <name pos:line="1" pos:column="56">n<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="59">const<pos:position pos:line="1" pos:column="64"/></specifier> <name pos:line="1" pos:column="65">char<pos:position pos:line="1" pos:column="69"/></name> <modifier pos:line="1" pos:column="70">*<pos:position pos:line="1" pos:column="71"/></modifier></type><name pos:line="1" pos:column="71">done<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="76"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">eol<pos:position pos:line="3" pos:column="24"/></name></decl>, <modifier pos:line="3" pos:column="26">*<pos:position pos:line="3" pos:column="27"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="27">tp<pos:position pos:line="3" pos:column="29"/></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name><name pos:line="5" pos:column="13">progress<pos:position pos:line="5" pos:column="21"/></name><operator pos:line="5" pos:column="21">-&gt;<pos:position pos:line="5" pos:column="26"/></operator><name pos:line="5" pos:column="23">delay<pos:position pos:line="5" pos:column="28"/></name></name></expr>)<pos:position pos:line="5" pos:column="29"/></condition><then pos:line="5" pos:column="29"> <block pos:line="5" pos:column="30">{
		<if pos:line="6" pos:column="17">if <condition pos:line="6" pos:column="20">(<expr><operator pos:line="6" pos:column="21">!<pos:position pos:line="6" pos:column="22"/></operator><name pos:line="6" pos:column="22">progress_update<pos:position pos:line="6" pos:column="37"/></name> <operator pos:line="6" pos:column="38">||<pos:position pos:line="6" pos:column="40"/></operator> <operator pos:line="6" pos:column="41">--<pos:position pos:line="6" pos:column="43"/></operator><name><name pos:line="6" pos:column="43">progress<pos:position pos:line="6" pos:column="51"/></name><operator pos:line="6" pos:column="51">-&gt;<pos:position pos:line="6" pos:column="56"/></operator><name pos:line="6" pos:column="53">delay<pos:position pos:line="6" pos:column="58"/></name></name></expr>)<pos:position pos:line="6" pos:column="59"/></condition><then pos:line="6" pos:column="59">
			<block type="pseudo"><return pos:line="7" pos:column="25">return <expr><literal type="number" pos:line="7" pos:column="32">0<pos:position pos:line="7" pos:column="33"/></literal></expr>;<pos:position pos:line="7" pos:column="34"/></return></block></then></if>
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><name><name pos:line="8" pos:column="21">progress<pos:position pos:line="8" pos:column="29"/></name><operator pos:line="8" pos:column="29">-&gt;<pos:position pos:line="8" pos:column="34"/></operator><name pos:line="8" pos:column="31">total<pos:position pos:line="8" pos:column="36"/></name></name></expr>)<pos:position pos:line="8" pos:column="37"/></condition><then pos:line="8" pos:column="37"> <block pos:line="8" pos:column="38">{
			<decl_stmt><decl><type><name pos:line="9" pos:column="25">unsigned<pos:position pos:line="9" pos:column="33"/></name></type> <name pos:line="9" pos:column="34">percent<pos:position pos:line="9" pos:column="41"/></name> <init pos:line="9" pos:column="42">= <expr><name pos:line="9" pos:column="44">n<pos:position pos:line="9" pos:column="45"/></name> <operator pos:line="9" pos:column="46">*<pos:position pos:line="9" pos:column="47"/></operator> <literal type="number" pos:line="9" pos:column="48">100<pos:position pos:line="9" pos:column="51"/></literal> <operator pos:line="9" pos:column="52">/<pos:position pos:line="9" pos:column="53"/></operator> <name><name pos:line="9" pos:column="54">progress<pos:position pos:line="9" pos:column="62"/></name><operator pos:line="9" pos:column="62">-&gt;<pos:position pos:line="9" pos:column="67"/></operator><name pos:line="9" pos:column="64">total<pos:position pos:line="9" pos:column="69"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="70"/></decl_stmt>
			<if pos:line="10" pos:column="25">if <condition pos:line="10" pos:column="28">(<expr><name pos:line="10" pos:column="29">percent<pos:position pos:line="10" pos:column="36"/></name> <operator pos:line="10" pos:column="37">&gt;<pos:position pos:line="10" pos:column="41"/></operator> <name><name pos:line="10" pos:column="39">progress<pos:position pos:line="10" pos:column="47"/></name><operator pos:line="10" pos:column="47">-&gt;<pos:position pos:line="10" pos:column="52"/></operator><name pos:line="10" pos:column="49">delayed_percent_treshold<pos:position pos:line="10" pos:column="73"/></name></name></expr>)<pos:position pos:line="10" pos:column="74"/></condition><then pos:line="10" pos:column="74"> <block pos:line="10" pos:column="75">{
				<comment type="block" pos:line="11" pos:column="33">/* inhibit this progress report entirely */</comment>
				<expr_stmt><expr><call><name pos:line="12" pos:column="33">clear_progress_signal<pos:position pos:line="12" pos:column="54"/></name><argument_list pos:line="12" pos:column="54">()<pos:position pos:line="12" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="57"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="13" pos:column="33">progress<pos:position pos:line="13" pos:column="41"/></name><operator pos:line="13" pos:column="41">-&gt;<pos:position pos:line="13" pos:column="46"/></operator><name pos:line="13" pos:column="43">delay<pos:position pos:line="13" pos:column="48"/></name></name> <operator pos:line="13" pos:column="49">=<pos:position pos:line="13" pos:column="50"/></operator> <operator pos:line="13" pos:column="51">-<pos:position pos:line="13" pos:column="52"/></operator><literal type="number" pos:line="13" pos:column="52">1<pos:position pos:line="13" pos:column="53"/></literal></expr>;<pos:position pos:line="13" pos:column="54"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="14" pos:column="33">progress<pos:position pos:line="14" pos:column="41"/></name><operator pos:line="14" pos:column="41">-&gt;<pos:position pos:line="14" pos:column="46"/></operator><name pos:line="14" pos:column="43">total<pos:position pos:line="14" pos:column="48"/></name></name> <operator pos:line="14" pos:column="49">=<pos:position pos:line="14" pos:column="50"/></operator> <literal type="number" pos:line="14" pos:column="51">0<pos:position pos:line="14" pos:column="52"/></literal></expr>;<pos:position pos:line="14" pos:column="53"/></expr_stmt>
				<return pos:line="15" pos:column="33">return <expr><literal type="number" pos:line="15" pos:column="40">0<pos:position pos:line="15" pos:column="41"/></literal></expr>;<pos:position pos:line="15" pos:column="42"/></return>
			}<pos:position pos:line="16" pos:column="26"/></block></then></if>
		}<pos:position pos:line="17" pos:column="18"/></block></then></if>
	}<pos:position pos:line="18" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name><name pos:line="20" pos:column="9">progress<pos:position pos:line="20" pos:column="17"/></name><operator pos:line="20" pos:column="17">-&gt;<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="19">last_value<pos:position pos:line="20" pos:column="29"/></name></name> <operator pos:line="20" pos:column="30">=<pos:position pos:line="20" pos:column="31"/></operator> <name pos:line="20" pos:column="32">n<pos:position pos:line="20" pos:column="33"/></name></expr>;<pos:position pos:line="20" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><name pos:line="21" pos:column="9">tp<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">=<pos:position pos:line="21" pos:column="13"/></operator> <ternary><condition><expr><operator pos:line="21" pos:column="14">(<pos:position pos:line="21" pos:column="15"/></operator><name><name pos:line="21" pos:column="15">progress<pos:position pos:line="21" pos:column="23"/></name><operator pos:line="21" pos:column="23">-&gt;<pos:position pos:line="21" pos:column="28"/></operator><name pos:line="21" pos:column="25">throughput<pos:position pos:line="21" pos:column="35"/></name></name><operator pos:line="21" pos:column="35">)<pos:position pos:line="21" pos:column="36"/></operator></expr> ?<pos:position pos:line="21" pos:column="38"/></condition><then pos:line="21" pos:column="38"> <expr><name><name pos:line="21" pos:column="39">progress<pos:position pos:line="21" pos:column="47"/></name><operator pos:line="21" pos:column="47">-&gt;<pos:position pos:line="21" pos:column="52"/></operator><name pos:line="21" pos:column="49">throughput<pos:position pos:line="21" pos:column="59"/></name><operator pos:line="21" pos:column="59">-&gt;<pos:position pos:line="21" pos:column="64"/></operator><name pos:line="21" pos:column="61">display<pos:position pos:line="21" pos:column="68"/></name><operator pos:line="21" pos:column="68">.<pos:position pos:line="21" pos:column="69"/></operator><name pos:line="21" pos:column="69">buf<pos:position pos:line="21" pos:column="72"/></name></name></expr> <pos:position pos:line="21" pos:column="73"/></then><else pos:line="21" pos:column="73">: <expr><literal type="string" pos:line="21" pos:column="75">""<pos:position pos:line="21" pos:column="77"/></literal></expr></else></ternary></expr>;<pos:position pos:line="21" pos:column="78"/></expr_stmt>
	<expr_stmt><expr><name pos:line="22" pos:column="9">eol<pos:position pos:line="22" pos:column="12"/></name> <operator pos:line="22" pos:column="13">=<pos:position pos:line="22" pos:column="14"/></operator> <ternary><condition><expr><name pos:line="22" pos:column="15">done<pos:position pos:line="22" pos:column="19"/></name></expr> ?<pos:position pos:line="22" pos:column="21"/></condition><then pos:line="22" pos:column="21"> <expr><name pos:line="22" pos:column="22">done<pos:position pos:line="22" pos:column="26"/></name></expr> <pos:position pos:line="22" pos:column="27"/></then><else pos:line="22" pos:column="27">: <expr><literal type="string" pos:line="22" pos:column="29">"   \r"<pos:position pos:line="22" pos:column="36"/></literal></expr></else></ternary></expr>;<pos:position pos:line="22" pos:column="37"/></expr_stmt>
	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name><name pos:line="23" pos:column="13">progress<pos:position pos:line="23" pos:column="21"/></name><operator pos:line="23" pos:column="21">-&gt;<pos:position pos:line="23" pos:column="26"/></operator><name pos:line="23" pos:column="23">total<pos:position pos:line="23" pos:column="28"/></name></name></expr>)<pos:position pos:line="23" pos:column="29"/></condition><then pos:line="23" pos:column="29"> <block pos:line="23" pos:column="30">{
		<decl_stmt><decl><type><name pos:line="24" pos:column="17">unsigned<pos:position pos:line="24" pos:column="25"/></name></type> <name pos:line="24" pos:column="26">percent<pos:position pos:line="24" pos:column="33"/></name> <init pos:line="24" pos:column="34">= <expr><name pos:line="24" pos:column="36">n<pos:position pos:line="24" pos:column="37"/></name> <operator pos:line="24" pos:column="38">*<pos:position pos:line="24" pos:column="39"/></operator> <literal type="number" pos:line="24" pos:column="40">100<pos:position pos:line="24" pos:column="43"/></literal> <operator pos:line="24" pos:column="44">/<pos:position pos:line="24" pos:column="45"/></operator> <name><name pos:line="24" pos:column="46">progress<pos:position pos:line="24" pos:column="54"/></name><operator pos:line="24" pos:column="54">-&gt;<pos:position pos:line="24" pos:column="59"/></operator><name pos:line="24" pos:column="56">total<pos:position pos:line="24" pos:column="61"/></name></name></expr></init></decl>;<pos:position pos:line="24" pos:column="62"/></decl_stmt>
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><name pos:line="25" pos:column="21">percent<pos:position pos:line="25" pos:column="28"/></name> <operator pos:line="25" pos:column="29">!=<pos:position pos:line="25" pos:column="31"/></operator> <name><name pos:line="25" pos:column="32">progress<pos:position pos:line="25" pos:column="40"/></name><operator pos:line="25" pos:column="40">-&gt;<pos:position pos:line="25" pos:column="45"/></operator><name pos:line="25" pos:column="42">last_percent<pos:position pos:line="25" pos:column="54"/></name></name> <operator pos:line="25" pos:column="55">||<pos:position pos:line="25" pos:column="57"/></operator> <name pos:line="25" pos:column="58">progress_update<pos:position pos:line="25" pos:column="73"/></name></expr>)<pos:position pos:line="25" pos:column="74"/></condition><then pos:line="25" pos:column="74"> <block pos:line="25" pos:column="75">{
			<expr_stmt><expr><name><name pos:line="26" pos:column="25">progress<pos:position pos:line="26" pos:column="33"/></name><operator pos:line="26" pos:column="33">-&gt;<pos:position pos:line="26" pos:column="38"/></operator><name pos:line="26" pos:column="35">last_percent<pos:position pos:line="26" pos:column="47"/></name></name> <operator pos:line="26" pos:column="48">=<pos:position pos:line="26" pos:column="49"/></operator> <name pos:line="26" pos:column="50">percent<pos:position pos:line="26" pos:column="57"/></name></expr>;<pos:position pos:line="26" pos:column="58"/></expr_stmt>
			<if pos:line="27" pos:column="25">if <condition pos:line="27" pos:column="28">(<expr><call><name pos:line="27" pos:column="29">is_foreground_fd<pos:position pos:line="27" pos:column="45"/></name><argument_list pos:line="27" pos:column="45">(<argument><expr><call><name pos:line="27" pos:column="46">fileno<pos:position pos:line="27" pos:column="52"/></name><argument_list pos:line="27" pos:column="52">(<argument><expr><name pos:line="27" pos:column="53">stderr<pos:position pos:line="27" pos:column="59"/></name></expr></argument>)<pos:position pos:line="27" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="61"/></argument_list></call> <operator pos:line="27" pos:column="62">||<pos:position pos:line="27" pos:column="64"/></operator> <name pos:line="27" pos:column="65">done<pos:position pos:line="27" pos:column="69"/></name></expr>)<pos:position pos:line="27" pos:column="70"/></condition><then pos:line="27" pos:column="70"> <block pos:line="27" pos:column="71">{
				<expr_stmt><expr><call><name pos:line="28" pos:column="33">fprintf<pos:position pos:line="28" pos:column="40"/></name><argument_list pos:line="28" pos:column="40">(<argument><expr><name pos:line="28" pos:column="41">stderr<pos:position pos:line="28" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="49">"%s: %3u%% (%u/%u)%s%s"<pos:position pos:line="28" pos:column="72"/></literal></expr></argument>,
					<argument><expr><name><name pos:line="29" pos:column="41">progress<pos:position pos:line="29" pos:column="49"/></name><operator pos:line="29" pos:column="49">-&gt;<pos:position pos:line="29" pos:column="54"/></operator><name pos:line="29" pos:column="51">title<pos:position pos:line="29" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="58">percent<pos:position pos:line="29" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="67">n<pos:position pos:line="29" pos:column="68"/></name></expr></argument>,
					<argument><expr><name><name pos:line="30" pos:column="41">progress<pos:position pos:line="30" pos:column="49"/></name><operator pos:line="30" pos:column="49">-&gt;<pos:position pos:line="30" pos:column="54"/></operator><name pos:line="30" pos:column="51">total<pos:position pos:line="30" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="58">tp<pos:position pos:line="30" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="62">eol<pos:position pos:line="30" pos:column="65"/></name></expr></argument>)<pos:position pos:line="30" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="67"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="31" pos:column="33">fflush<pos:position pos:line="31" pos:column="39"/></name><argument_list pos:line="31" pos:column="39">(<argument><expr><name pos:line="31" pos:column="40">stderr<pos:position pos:line="31" pos:column="46"/></name></expr></argument>)<pos:position pos:line="31" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="48"/></expr_stmt>
			}<pos:position pos:line="32" pos:column="26"/></block></then></if>
			<expr_stmt><expr><name pos:line="33" pos:column="25">progress_update<pos:position pos:line="33" pos:column="40"/></name> <operator pos:line="33" pos:column="41">=<pos:position pos:line="33" pos:column="42"/></operator> <literal type="number" pos:line="33" pos:column="43">0<pos:position pos:line="33" pos:column="44"/></literal></expr>;<pos:position pos:line="33" pos:column="45"/></expr_stmt>
			<return pos:line="34" pos:column="25">return <expr><literal type="number" pos:line="34" pos:column="32">1<pos:position pos:line="34" pos:column="33"/></literal></expr>;<pos:position pos:line="34" pos:column="34"/></return>
		}<pos:position pos:line="35" pos:column="18"/></block></then></if>
	}<pos:position pos:line="36" pos:column="10"/></block></then> <elseif pos:line="36" pos:column="11">else <if pos:line="36" pos:column="16">if <condition pos:line="36" pos:column="19">(<expr><name pos:line="36" pos:column="20">progress_update<pos:position pos:line="36" pos:column="35"/></name></expr>)<pos:position pos:line="36" pos:column="36"/></condition><then pos:line="36" pos:column="36"> <block pos:line="36" pos:column="37">{
		<if pos:line="37" pos:column="17">if <condition pos:line="37" pos:column="20">(<expr><call><name pos:line="37" pos:column="21">is_foreground_fd<pos:position pos:line="37" pos:column="37"/></name><argument_list pos:line="37" pos:column="37">(<argument><expr><call><name pos:line="37" pos:column="38">fileno<pos:position pos:line="37" pos:column="44"/></name><argument_list pos:line="37" pos:column="44">(<argument><expr><name pos:line="37" pos:column="45">stderr<pos:position pos:line="37" pos:column="51"/></name></expr></argument>)<pos:position pos:line="37" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="37" pos:column="53"/></argument_list></call> <operator pos:line="37" pos:column="54">||<pos:position pos:line="37" pos:column="56"/></operator> <name pos:line="37" pos:column="57">done<pos:position pos:line="37" pos:column="61"/></name></expr>)<pos:position pos:line="37" pos:column="62"/></condition><then pos:line="37" pos:column="62"> <block pos:line="37" pos:column="63">{
			<expr_stmt><expr><call><name pos:line="38" pos:column="25">fprintf<pos:position pos:line="38" pos:column="32"/></name><argument_list pos:line="38" pos:column="32">(<argument><expr><name pos:line="38" pos:column="33">stderr<pos:position pos:line="38" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="41">"%s: %u%s%s"<pos:position pos:line="38" pos:column="53"/></literal></expr></argument>,
				<argument><expr><name><name pos:line="39" pos:column="33">progress<pos:position pos:line="39" pos:column="41"/></name><operator pos:line="39" pos:column="41">-&gt;<pos:position pos:line="39" pos:column="46"/></operator><name pos:line="39" pos:column="43">title<pos:position pos:line="39" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="50">n<pos:position pos:line="39" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="53">tp<pos:position pos:line="39" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="57">eol<pos:position pos:line="39" pos:column="60"/></name></expr></argument>)<pos:position pos:line="39" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="62"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="40" pos:column="25">fflush<pos:position pos:line="40" pos:column="31"/></name><argument_list pos:line="40" pos:column="31">(<argument><expr><name pos:line="40" pos:column="32">stderr<pos:position pos:line="40" pos:column="38"/></name></expr></argument>)<pos:position pos:line="40" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="40"/></expr_stmt>
		}<pos:position pos:line="41" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="42" pos:column="17">progress_update<pos:position pos:line="42" pos:column="32"/></name> <operator pos:line="42" pos:column="33">=<pos:position pos:line="42" pos:column="34"/></operator> <literal type="number" pos:line="42" pos:column="35">0<pos:position pos:line="42" pos:column="36"/></literal></expr>;<pos:position pos:line="42" pos:column="37"/></expr_stmt>
		<return pos:line="43" pos:column="17">return <expr><literal type="number" pos:line="43" pos:column="24">1<pos:position pos:line="43" pos:column="25"/></literal></expr>;<pos:position pos:line="43" pos:column="26"/></return>
	}<pos:position pos:line="44" pos:column="10"/></block></then></if></elseif></if>

	<return pos:line="46" pos:column="9">return <expr><literal type="number" pos:line="46" pos:column="16">0<pos:position pos:line="46" pos:column="17"/></literal></expr>;<pos:position pos:line="46" pos:column="18"/></return>
}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

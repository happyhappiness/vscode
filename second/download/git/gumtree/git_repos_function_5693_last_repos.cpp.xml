<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5693_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_log<pos:position pos:line="1" pos:column="12"/></name><parameter_list pos:line="1" pos:column="12">(<parameter><decl><type><name pos:line="1" pos:column="13">int<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">argc<pos:position pos:line="1" pos:column="21"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="23">const<pos:position pos:line="1" pos:column="28"/></specifier> <name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier><modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">argv<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="42">const<pos:position pos:line="1" pos:column="47"/></specifier> <name pos:line="1" pos:column="48">char<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">prefix<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">rev_info<pos:position pos:line="3" pos:column="24"/></name></name></type> <name pos:line="3" pos:column="25">rev<pos:position pos:line="3" pos:column="28"/></name></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">setup_revision_opt<pos:position pos:line="4" pos:column="34"/></name></name></type> <name pos:line="4" pos:column="35">opt<pos:position pos:line="4" pos:column="38"/></name></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="6" pos:column="9">init_log_defaults<pos:position pos:line="6" pos:column="26"/></name><argument_list pos:line="6" pos:column="26">()<pos:position pos:line="6" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="7" pos:column="9">git_config<pos:position pos:line="7" pos:column="19"/></name><argument_list pos:line="7" pos:column="19">(<argument><expr><name pos:line="7" pos:column="20">git_log_config<pos:position pos:line="7" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="36">NULL<pos:position pos:line="7" pos:column="40"/></name></expr></argument>)<pos:position pos:line="7" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="42"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="9" pos:column="9">init_revisions<pos:position pos:line="9" pos:column="23"/></name><argument_list pos:line="9" pos:column="23">(<argument><expr><operator pos:line="9" pos:column="24">&amp;<pos:position pos:line="9" pos:column="29"/></operator><name pos:line="9" pos:column="25">rev<pos:position pos:line="9" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="30">prefix<pos:position pos:line="9" pos:column="36"/></name></expr></argument>)<pos:position pos:line="9" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="10" pos:column="9">rev<pos:position pos:line="10" pos:column="12"/></name><operator pos:line="10" pos:column="12">.<pos:position pos:line="10" pos:column="13"/></operator><name pos:line="10" pos:column="13">always_show_header<pos:position pos:line="10" pos:column="31"/></name></name> <operator pos:line="10" pos:column="32">=<pos:position pos:line="10" pos:column="33"/></operator> <literal type="number" pos:line="10" pos:column="34">1<pos:position pos:line="10" pos:column="35"/></literal></expr>;<pos:position pos:line="10" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="11" pos:column="9">memset<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><operator pos:line="11" pos:column="16">&amp;<pos:position pos:line="11" pos:column="21"/></operator><name pos:line="11" pos:column="17">opt<pos:position pos:line="11" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="22">0<pos:position pos:line="11" pos:column="23"/></literal></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="25">sizeof<argument_list pos:line="11" pos:column="31">(<argument><expr><name pos:line="11" pos:column="32">opt<pos:position pos:line="11" pos:column="35"/></name></expr></argument>)<pos:position pos:line="11" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="12" pos:column="9">opt<pos:position pos:line="12" pos:column="12"/></name><operator pos:line="12" pos:column="12">.<pos:position pos:line="12" pos:column="13"/></operator><name pos:line="12" pos:column="13">def<pos:position pos:line="12" pos:column="16"/></name></name> <operator pos:line="12" pos:column="17">=<pos:position pos:line="12" pos:column="18"/></operator> <literal type="string" pos:line="12" pos:column="19">"HEAD"<pos:position pos:line="12" pos:column="25"/></literal></expr>;<pos:position pos:line="12" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="13" pos:column="9">opt<pos:position pos:line="13" pos:column="12"/></name><operator pos:line="13" pos:column="12">.<pos:position pos:line="13" pos:column="13"/></operator><name pos:line="13" pos:column="13">revarg_opt<pos:position pos:line="13" pos:column="23"/></name></name> <operator pos:line="13" pos:column="24">=<pos:position pos:line="13" pos:column="25"/></operator> <name pos:line="13" pos:column="26">REVARG_COMMITTISH<pos:position pos:line="13" pos:column="43"/></name></expr>;<pos:position pos:line="13" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="14" pos:column="9">opt<pos:position pos:line="14" pos:column="12"/></name><operator pos:line="14" pos:column="12">.<pos:position pos:line="14" pos:column="13"/></operator><name pos:line="14" pos:column="13">tweak<pos:position pos:line="14" pos:column="18"/></name></name> <operator pos:line="14" pos:column="19">=<pos:position pos:line="14" pos:column="20"/></operator> <name pos:line="14" pos:column="21">log_setup_revisions_tweak<pos:position pos:line="14" pos:column="46"/></name></expr>;<pos:position pos:line="14" pos:column="47"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="15" pos:column="9">cmd_log_init<pos:position pos:line="15" pos:column="21"/></name><argument_list pos:line="15" pos:column="21">(<argument><expr><name pos:line="15" pos:column="22">argc<pos:position pos:line="15" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="28">argv<pos:position pos:line="15" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="34">prefix<pos:position pos:line="15" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="42">&amp;<pos:position pos:line="15" pos:column="47"/></operator><name pos:line="15" pos:column="43">rev<pos:position pos:line="15" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="48">&amp;<pos:position pos:line="15" pos:column="53"/></operator><name pos:line="15" pos:column="49">opt<pos:position pos:line="15" pos:column="52"/></name></expr></argument>)<pos:position pos:line="15" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="54"/></expr_stmt>
	<return pos:line="16" pos:column="9">return <expr><call><name pos:line="16" pos:column="16">cmd_log_walk<pos:position pos:line="16" pos:column="28"/></name><argument_list pos:line="16" pos:column="28">(<argument><expr><operator pos:line="16" pos:column="29">&amp;<pos:position pos:line="16" pos:column="34"/></operator><name pos:line="16" pos:column="30">rev<pos:position pos:line="16" pos:column="33"/></name></expr></argument>)<pos:position pos:line="16" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="35"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

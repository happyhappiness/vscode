<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4453_git-2.1.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">version_cmp<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">a<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="39">const<pos:position pos:line="1" pos:column="44"/></specifier> <name pos:line="1" pos:column="45">char<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">b<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<while pos:line="3" pos:column="9">while <condition pos:line="3" pos:column="15">(<expr><literal type="number" pos:line="3" pos:column="16">1<pos:position pos:line="3" pos:column="17"/></literal></expr>)<pos:position pos:line="3" pos:column="18"/></condition> <block pos:line="3" pos:column="19">{
		<decl_stmt><decl><type><name pos:line="4" pos:column="17">int<pos:position pos:line="4" pos:column="20"/></name></type> <name pos:line="4" pos:column="21">va<pos:position pos:line="4" pos:column="23"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="25">vb<pos:position pos:line="4" pos:column="27"/></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>

		<expr_stmt><expr><name pos:line="6" pos:column="17">a<pos:position pos:line="6" pos:column="18"/></name> <operator pos:line="6" pos:column="19">=<pos:position pos:line="6" pos:column="20"/></operator> <call><name pos:line="6" pos:column="21">find_digit_prefix<pos:position pos:line="6" pos:column="38"/></name><argument_list pos:line="6" pos:column="38">(<argument><expr><name pos:line="6" pos:column="39">a<pos:position pos:line="6" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="42">&amp;<pos:position pos:line="6" pos:column="47"/></operator><name pos:line="6" pos:column="43">va<pos:position pos:line="6" pos:column="45"/></name></expr></argument>)<pos:position pos:line="6" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><name pos:line="7" pos:column="17">b<pos:position pos:line="7" pos:column="18"/></name> <operator pos:line="7" pos:column="19">=<pos:position pos:line="7" pos:column="20"/></operator> <call><name pos:line="7" pos:column="21">find_digit_prefix<pos:position pos:line="7" pos:column="38"/></name><argument_list pos:line="7" pos:column="38">(<argument><expr><name pos:line="7" pos:column="39">b<pos:position pos:line="7" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="42">&amp;<pos:position pos:line="7" pos:column="47"/></operator><name pos:line="7" pos:column="43">vb<pos:position pos:line="7" pos:column="45"/></name></expr></argument>)<pos:position pos:line="7" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="47"/></expr_stmt>
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><name pos:line="8" pos:column="21">va<pos:position pos:line="8" pos:column="23"/></name> <operator pos:line="8" pos:column="24">!=<pos:position pos:line="8" pos:column="26"/></operator> <name pos:line="8" pos:column="27">vb<pos:position pos:line="8" pos:column="29"/></name></expr>)<pos:position pos:line="8" pos:column="30"/></condition><then pos:line="8" pos:column="30">
			<block type="pseudo"><return pos:line="9" pos:column="25">return <expr><name pos:line="9" pos:column="32">va<pos:position pos:line="9" pos:column="34"/></name> <operator pos:line="9" pos:column="35">-<pos:position pos:line="9" pos:column="36"/></operator> <name pos:line="9" pos:column="37">vb<pos:position pos:line="9" pos:column="39"/></name></expr>;<pos:position pos:line="9" pos:column="40"/></return></block></then></if>

		<while pos:line="11" pos:column="17">while <condition pos:line="11" pos:column="23">(<expr><literal type="number" pos:line="11" pos:column="24">1<pos:position pos:line="11" pos:column="25"/></literal></expr>)<pos:position pos:line="11" pos:column="26"/></condition> <block pos:line="11" pos:column="27">{
			<decl_stmt><decl><type><name pos:line="12" pos:column="25">int<pos:position pos:line="12" pos:column="28"/></name></type> <name pos:line="12" pos:column="29">ca<pos:position pos:line="12" pos:column="31"/></name> <init pos:line="12" pos:column="32">= <expr><operator pos:line="12" pos:column="34">*<pos:position pos:line="12" pos:column="35"/></operator><name pos:line="12" pos:column="35">a<pos:position pos:line="12" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="37"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="13" pos:column="25">int<pos:position pos:line="13" pos:column="28"/></name></type> <name pos:line="13" pos:column="29">cb<pos:position pos:line="13" pos:column="31"/></name> <init pos:line="13" pos:column="32">= <expr><operator pos:line="13" pos:column="34">*<pos:position pos:line="13" pos:column="35"/></operator><name pos:line="13" pos:column="35">b<pos:position pos:line="13" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="37"/></decl_stmt>
			<if pos:line="14" pos:column="25">if <condition pos:line="14" pos:column="28">(<expr><literal type="char" pos:line="14" pos:column="29">'0'<pos:position pos:line="14" pos:column="32"/></literal> <operator pos:line="14" pos:column="33">&lt;=<pos:position pos:line="14" pos:column="38"/></operator> <name pos:line="14" pos:column="36">ca<pos:position pos:line="14" pos:column="38"/></name> <operator pos:line="14" pos:column="39">&amp;&amp;<pos:position pos:line="14" pos:column="49"/></operator> <name pos:line="14" pos:column="42">ca<pos:position pos:line="14" pos:column="44"/></name> <operator pos:line="14" pos:column="45">&lt;=<pos:position pos:line="14" pos:column="50"/></operator> <literal type="char" pos:line="14" pos:column="48">'9'<pos:position pos:line="14" pos:column="51"/></literal></expr>)<pos:position pos:line="14" pos:column="52"/></condition><then pos:line="14" pos:column="52">
				<block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="33">ca<pos:position pos:line="15" pos:column="35"/></name> <operator pos:line="15" pos:column="36">=<pos:position pos:line="15" pos:column="37"/></operator> <literal type="number" pos:line="15" pos:column="38">0<pos:position pos:line="15" pos:column="39"/></literal></expr>;<pos:position pos:line="15" pos:column="40"/></expr_stmt></block></then></if>
			<if pos:line="16" pos:column="25">if <condition pos:line="16" pos:column="28">(<expr><literal type="char" pos:line="16" pos:column="29">'0'<pos:position pos:line="16" pos:column="32"/></literal> <operator pos:line="16" pos:column="33">&lt;=<pos:position pos:line="16" pos:column="38"/></operator> <name pos:line="16" pos:column="36">cb<pos:position pos:line="16" pos:column="38"/></name> <operator pos:line="16" pos:column="39">&amp;&amp;<pos:position pos:line="16" pos:column="49"/></operator> <name pos:line="16" pos:column="42">cb<pos:position pos:line="16" pos:column="44"/></name> <operator pos:line="16" pos:column="45">&lt;=<pos:position pos:line="16" pos:column="50"/></operator> <literal type="char" pos:line="16" pos:column="48">'9'<pos:position pos:line="16" pos:column="51"/></literal></expr>)<pos:position pos:line="16" pos:column="52"/></condition><then pos:line="16" pos:column="52">
				<block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="33">cb<pos:position pos:line="17" pos:column="35"/></name> <operator pos:line="17" pos:column="36">=<pos:position pos:line="17" pos:column="37"/></operator> <literal type="number" pos:line="17" pos:column="38">0<pos:position pos:line="17" pos:column="39"/></literal></expr>;<pos:position pos:line="17" pos:column="40"/></expr_stmt></block></then></if>
			<if pos:line="18" pos:column="25">if <condition pos:line="18" pos:column="28">(<expr><name pos:line="18" pos:column="29">ca<pos:position pos:line="18" pos:column="31"/></name> <operator pos:line="18" pos:column="32">!=<pos:position pos:line="18" pos:column="34"/></operator> <name pos:line="18" pos:column="35">cb<pos:position pos:line="18" pos:column="37"/></name></expr>)<pos:position pos:line="18" pos:column="38"/></condition><then pos:line="18" pos:column="38">
				<block type="pseudo"><return pos:line="19" pos:column="33">return <expr><name pos:line="19" pos:column="40">ca<pos:position pos:line="19" pos:column="42"/></name> <operator pos:line="19" pos:column="43">-<pos:position pos:line="19" pos:column="44"/></operator> <name pos:line="19" pos:column="45">cb<pos:position pos:line="19" pos:column="47"/></name></expr>;<pos:position pos:line="19" pos:column="48"/></return></block></then></if>
			<if pos:line="20" pos:column="25">if <condition pos:line="20" pos:column="28">(<expr><operator pos:line="20" pos:column="29">!<pos:position pos:line="20" pos:column="30"/></operator><name pos:line="20" pos:column="30">ca<pos:position pos:line="20" pos:column="32"/></name></expr>)<pos:position pos:line="20" pos:column="33"/></condition><then pos:line="20" pos:column="33">
				<block type="pseudo"><break pos:line="21" pos:column="33">break;<pos:position pos:line="21" pos:column="39"/></break></block></then></if>
			<expr_stmt><expr><name pos:line="22" pos:column="25">a<pos:position pos:line="22" pos:column="26"/></name><operator pos:line="22" pos:column="26">++<pos:position pos:line="22" pos:column="28"/></operator></expr>;<pos:position pos:line="22" pos:column="29"/></expr_stmt>
			<expr_stmt><expr><name pos:line="23" pos:column="25">b<pos:position pos:line="23" pos:column="26"/></name><operator pos:line="23" pos:column="26">++<pos:position pos:line="23" pos:column="28"/></operator></expr>;<pos:position pos:line="23" pos:column="29"/></expr_stmt>
		}<pos:position pos:line="24" pos:column="18"/></block></while>
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><operator pos:line="25" pos:column="21">!<pos:position pos:line="25" pos:column="22"/></operator><operator pos:line="25" pos:column="22">*<pos:position pos:line="25" pos:column="23"/></operator><name pos:line="25" pos:column="23">a<pos:position pos:line="25" pos:column="24"/></name> <operator pos:line="25" pos:column="25">&amp;&amp;<pos:position pos:line="25" pos:column="35"/></operator> <operator pos:line="25" pos:column="28">!<pos:position pos:line="25" pos:column="29"/></operator><operator pos:line="25" pos:column="29">*<pos:position pos:line="25" pos:column="30"/></operator><name pos:line="25" pos:column="30">b<pos:position pos:line="25" pos:column="31"/></name></expr>)<pos:position pos:line="25" pos:column="32"/></condition><then pos:line="25" pos:column="32">
			<block type="pseudo"><return pos:line="26" pos:column="25">return <expr><literal type="number" pos:line="26" pos:column="32">0<pos:position pos:line="26" pos:column="33"/></literal></expr>;<pos:position pos:line="26" pos:column="34"/></return></block></then></if>
	}<pos:position pos:line="27" pos:column="10"/></block></while>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5900_git-2.10.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">resolve_gitlink_ref<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">path<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="43">const<pos:position pos:line="1" pos:column="48"/></specifier> <name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">refname<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="64">unsigned<pos:position pos:line="1" pos:column="72"/></name> <name pos:line="1" pos:column="73">char<pos:position pos:line="1" pos:column="77"/></name> <modifier pos:line="1" pos:column="78">*<pos:position pos:line="1" pos:column="79"/></modifier></type><name pos:line="1" pos:column="79">sha1<pos:position pos:line="1" pos:column="83"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="84"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">len<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><call><name pos:line="3" pos:column="19">strlen<pos:position pos:line="3" pos:column="25"/></name><argument_list pos:line="3" pos:column="25">(<argument><expr><name pos:line="3" pos:column="26">path<pos:position pos:line="3" pos:column="30"/></name></expr></argument>)<pos:position pos:line="3" pos:column="31"/></argument_list></call></expr></init></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="33">retval<pos:position pos:line="3" pos:column="39"/></name></decl>;<pos:position pos:line="3" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">strbuf<pos:position pos:line="4" pos:column="22"/></name></name></type> <name pos:line="4" pos:column="23">submodule<pos:position pos:line="4" pos:column="32"/></name> <init pos:line="4" pos:column="33">= <expr><name pos:line="4" pos:column="35">STRBUF_INIT<pos:position pos:line="4" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">ref_cache<pos:position pos:line="5" pos:column="25"/></name></name> <modifier pos:line="5" pos:column="26">*<pos:position pos:line="5" pos:column="27"/></modifier></type><name pos:line="5" pos:column="27">refs<pos:position pos:line="5" pos:column="31"/></name></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>

	<while pos:line="7" pos:column="9">while <condition pos:line="7" pos:column="15">(<expr><name pos:line="7" pos:column="16">len<pos:position pos:line="7" pos:column="19"/></name> <operator pos:line="7" pos:column="20">&amp;&amp;<pos:position pos:line="7" pos:column="30"/></operator> <name><name pos:line="7" pos:column="23">path<pos:position pos:line="7" pos:column="27"/></name><index pos:line="7" pos:column="27">[<expr><name pos:line="7" pos:column="28">len<pos:position pos:line="7" pos:column="31"/></name><operator pos:line="7" pos:column="31">-<pos:position pos:line="7" pos:column="32"/></operator><literal type="number" pos:line="7" pos:column="32">1<pos:position pos:line="7" pos:column="33"/></literal></expr>]<pos:position pos:line="7" pos:column="34"/></index></name> <operator pos:line="7" pos:column="35">==<pos:position pos:line="7" pos:column="37"/></operator> <literal type="char" pos:line="7" pos:column="38">'/'<pos:position pos:line="7" pos:column="41"/></literal></expr>)<pos:position pos:line="7" pos:column="42"/></condition>
		<block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="17">len<pos:position pos:line="8" pos:column="20"/></name><operator pos:line="8" pos:column="20">--<pos:position pos:line="8" pos:column="22"/></operator></expr>;<pos:position pos:line="8" pos:column="23"/></expr_stmt></block></while>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">!<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">len<pos:position pos:line="9" pos:column="17"/></name></expr>)<pos:position pos:line="9" pos:column="18"/></condition><then pos:line="9" pos:column="18">
		<block type="pseudo"><return pos:line="10" pos:column="17">return <expr><operator pos:line="10" pos:column="24">-<pos:position pos:line="10" pos:column="25"/></operator><literal type="number" pos:line="10" pos:column="25">1<pos:position pos:line="10" pos:column="26"/></literal></expr>;<pos:position pos:line="10" pos:column="27"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="12" pos:column="9">strbuf_add<pos:position pos:line="12" pos:column="19"/></name><argument_list pos:line="12" pos:column="19">(<argument><expr><operator pos:line="12" pos:column="20">&amp;<pos:position pos:line="12" pos:column="25"/></operator><name pos:line="12" pos:column="21">submodule<pos:position pos:line="12" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="32">path<pos:position pos:line="12" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="38">len<pos:position pos:line="12" pos:column="41"/></name></expr></argument>)<pos:position pos:line="12" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><name pos:line="13" pos:column="9">refs<pos:position pos:line="13" pos:column="13"/></name> <operator pos:line="13" pos:column="14">=<pos:position pos:line="13" pos:column="15"/></operator> <call><name pos:line="13" pos:column="16">get_ref_cache<pos:position pos:line="13" pos:column="29"/></name><argument_list pos:line="13" pos:column="29">(<argument><expr><name><name pos:line="13" pos:column="30">submodule<pos:position pos:line="13" pos:column="39"/></name><operator pos:line="13" pos:column="39">.<pos:position pos:line="13" pos:column="40"/></operator><name pos:line="13" pos:column="40">buf<pos:position pos:line="13" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="45"/></expr_stmt>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">!<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="14">refs<pos:position pos:line="14" pos:column="18"/></name></expr>)<pos:position pos:line="14" pos:column="19"/></condition><then pos:line="14" pos:column="19"> <block pos:line="14" pos:column="20">{
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">strbuf_release<pos:position pos:line="15" pos:column="31"/></name><argument_list pos:line="15" pos:column="31">(<argument><expr><operator pos:line="15" pos:column="32">&amp;<pos:position pos:line="15" pos:column="37"/></operator><name pos:line="15" pos:column="33">submodule<pos:position pos:line="15" pos:column="42"/></name></expr></argument>)<pos:position pos:line="15" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="44"/></expr_stmt>
		<return pos:line="16" pos:column="17">return <expr><operator pos:line="16" pos:column="24">-<pos:position pos:line="16" pos:column="25"/></operator><literal type="number" pos:line="16" pos:column="25">1<pos:position pos:line="16" pos:column="26"/></literal></expr>;<pos:position pos:line="16" pos:column="27"/></return>
	}<pos:position pos:line="17" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="18" pos:column="9">strbuf_release<pos:position pos:line="18" pos:column="23"/></name><argument_list pos:line="18" pos:column="23">(<argument><expr><operator pos:line="18" pos:column="24">&amp;<pos:position pos:line="18" pos:column="29"/></operator><name pos:line="18" pos:column="25">submodule<pos:position pos:line="18" pos:column="34"/></name></expr></argument>)<pos:position pos:line="18" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="36"/></expr_stmt>

	<expr_stmt><expr><name pos:line="20" pos:column="9">retval<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">=<pos:position pos:line="20" pos:column="17"/></operator> <call><name pos:line="20" pos:column="18">resolve_gitlink_ref_recursive<pos:position pos:line="20" pos:column="47"/></name><argument_list pos:line="20" pos:column="47">(<argument><expr><name pos:line="20" pos:column="48">refs<pos:position pos:line="20" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="54">refname<pos:position pos:line="20" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="63">sha1<pos:position pos:line="20" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="69">0<pos:position pos:line="20" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="72"/></expr_stmt>
	<return pos:line="21" pos:column="9">return <expr><name pos:line="21" pos:column="16">retval<pos:position pos:line="21" pos:column="22"/></name></expr>;<pos:position pos:line="21" pos:column="23"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

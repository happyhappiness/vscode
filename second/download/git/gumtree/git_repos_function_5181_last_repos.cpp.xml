<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5181_last_repos.cpp" pos:tabs="8"><decl_stmt><decl><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">report_tracking<pos:position pos:line="1" pos:column="28"/></name><argument_list pos:line="1" pos:column="28">(<argument><expr pos:line="1" pos:column="29">struct <name pos:line="1" pos:column="36">branch_info<pos:position pos:line="1" pos:column="47"/></name> <operator pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></operator><operator pos:line="1" pos:column="49">new<pos:position pos:line="1" pos:column="52"/></operator></expr></argument>)<pos:position pos:line="1" pos:column="53"/></argument_list>
<argument_list pos:line="2" pos:column="1">{
	<argument><expr pos:line="3" pos:column="9">struct <name pos:line="3" pos:column="16">strbuf<pos:position pos:line="3" pos:column="22"/></name> <name pos:line="3" pos:column="23">sb<pos:position pos:line="3" pos:column="25"/></name> <operator pos:line="3" pos:column="26">=<pos:position pos:line="3" pos:column="27"/></operator> <name pos:line="3" pos:column="28">STRBUF_INIT<pos:position pos:line="3" pos:column="39"/></name></expr></argument>;
	<argument><expr pos:line="4" pos:column="9">struct <name pos:line="4" pos:column="16">branch<pos:position pos:line="4" pos:column="22"/></name> <operator pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></operator><name pos:line="4" pos:column="24">branch<pos:position pos:line="4" pos:column="30"/></name> <operator pos:line="4" pos:column="31">=<pos:position pos:line="4" pos:column="32"/></operator> <call><name pos:line="4" pos:column="33">branch_get<pos:position pos:line="4" pos:column="43"/></name><argument_list pos:line="4" pos:column="43">(<argument><expr><operator pos:line="4" pos:column="44">new<pos:position pos:line="4" pos:column="47"/></operator><operator pos:line="4" pos:column="47">-&gt;<pos:position pos:line="4" pos:column="52"/></operator><name pos:line="4" pos:column="49">name<pos:position pos:line="4" pos:column="53"/></name></expr></argument>)<pos:position pos:line="4" pos:column="54"/></argument_list></call></expr></argument>;

	if <argument><expr><operator pos:line="6" pos:column="12">(<pos:position pos:line="6" pos:column="13"/></operator><operator pos:line="6" pos:column="13">!<pos:position pos:line="6" pos:column="14"/></operator><call><name pos:line="6" pos:column="14">format_tracking_info<pos:position pos:line="6" pos:column="34"/></name><argument_list pos:line="6" pos:column="34">(<argument><expr><name pos:line="6" pos:column="35">branch<pos:position pos:line="6" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="43">&amp;<pos:position pos:line="6" pos:column="48"/></operator><name pos:line="6" pos:column="44">sb<pos:position pos:line="6" pos:column="46"/></name></expr></argument>)<pos:position pos:line="6" pos:column="47"/></argument_list></call><operator pos:line="6" pos:column="47">)<pos:position pos:line="6" pos:column="48"/></operator></expr></argument>
		<return pos:line="7" pos:column="17">return;<pos:position pos:line="7" pos:column="24"/></return></argument_list></decl></decl_stmt>
	<expr_stmt><expr><call><name pos:line="8" pos:column="9">fputs<pos:position pos:line="8" pos:column="14"/></name><argument_list pos:line="8" pos:column="14">(<argument><expr><name><name pos:line="8" pos:column="15">sb<pos:position pos:line="8" pos:column="17"/></name><operator pos:line="8" pos:column="17">.<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="18">buf<pos:position pos:line="8" pos:column="21"/></name></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="23">stdout<pos:position pos:line="8" pos:column="29"/></name></expr></argument>)<pos:position pos:line="8" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="9" pos:column="9">strbuf_release<pos:position pos:line="9" pos:column="23"/></name><argument_list pos:line="9" pos:column="23">(<argument><expr><operator pos:line="9" pos:column="24">&amp;<pos:position pos:line="9" pos:column="29"/></operator><name pos:line="9" pos:column="25">sb<pos:position pos:line="9" pos:column="27"/></name></expr></argument>)<pos:position pos:line="9" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="29"/></expr_stmt>
}</unit>

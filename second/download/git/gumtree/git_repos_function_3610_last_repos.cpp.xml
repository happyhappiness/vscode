<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3610_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">sha1write<pos:position pos:line="1" pos:column="15"/></name><parameter_list pos:line="1" pos:column="15">(<parameter><decl><type><name><name pos:line="1" pos:column="16">struct<pos:position pos:line="1" pos:column="22"/></name> <name pos:line="1" pos:column="23">sha1file<pos:position pos:line="1" pos:column="31"/></name></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">f<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="36">const<pos:position pos:line="1" pos:column="41"/></specifier> <name pos:line="1" pos:column="42">void<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">buf<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">unsigned<pos:position pos:line="1" pos:column="61"/></name> <name pos:line="1" pos:column="62">int<pos:position pos:line="1" pos:column="65"/></name></type> <name pos:line="1" pos:column="66">count<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="72"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<while pos:line="3" pos:column="9">while <condition pos:line="3" pos:column="15">(<expr><name pos:line="3" pos:column="16">count<pos:position pos:line="3" pos:column="21"/></name></expr>)<pos:position pos:line="3" pos:column="22"/></condition> <block pos:line="3" pos:column="23">{
		<decl_stmt><decl><type><name pos:line="4" pos:column="17">unsigned<pos:position pos:line="4" pos:column="25"/></name></type> <name pos:line="4" pos:column="26">offset<pos:position pos:line="4" pos:column="32"/></name> <init pos:line="4" pos:column="33">= <expr><name><name pos:line="4" pos:column="35">f<pos:position pos:line="4" pos:column="36"/></name><operator pos:line="4" pos:column="36">-&gt;<pos:position pos:line="4" pos:column="41"/></operator><name pos:line="4" pos:column="38">offset<pos:position pos:line="4" pos:column="44"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="45"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="5" pos:column="17">unsigned<pos:position pos:line="5" pos:column="25"/></name></type> <name pos:line="5" pos:column="26">left<pos:position pos:line="5" pos:column="30"/></name> <init pos:line="5" pos:column="31">= <expr><sizeof pos:line="5" pos:column="33">sizeof<argument_list pos:line="5" pos:column="39">(<argument><expr><name><name pos:line="5" pos:column="40">f<pos:position pos:line="5" pos:column="41"/></name><operator pos:line="5" pos:column="41">-&gt;<pos:position pos:line="5" pos:column="46"/></operator><name pos:line="5" pos:column="43">buffer<pos:position pos:line="5" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="50"/></argument_list></sizeof> <operator pos:line="5" pos:column="51">-<pos:position pos:line="5" pos:column="52"/></operator> <name pos:line="5" pos:column="53">offset<pos:position pos:line="5" pos:column="59"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="60"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="6" pos:column="17">unsigned<pos:position pos:line="6" pos:column="25"/></name></type> <name pos:line="6" pos:column="26">nr<pos:position pos:line="6" pos:column="28"/></name> <init pos:line="6" pos:column="29">= <expr><ternary><condition><expr><name pos:line="6" pos:column="31">count<pos:position pos:line="6" pos:column="36"/></name> <operator pos:line="6" pos:column="37">&gt;<pos:position pos:line="6" pos:column="41"/></operator> <name pos:line="6" pos:column="39">left<pos:position pos:line="6" pos:column="43"/></name></expr> ?<pos:position pos:line="6" pos:column="45"/></condition><then pos:line="6" pos:column="45"> <expr><name pos:line="6" pos:column="46">left<pos:position pos:line="6" pos:column="50"/></name></expr> <pos:position pos:line="6" pos:column="51"/></then><else pos:line="6" pos:column="51">: <expr><name pos:line="6" pos:column="53">count<pos:position pos:line="6" pos:column="58"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="6" pos:column="59"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="7" pos:column="17">const<pos:position pos:line="7" pos:column="22"/></specifier> <name pos:line="7" pos:column="23">void<pos:position pos:line="7" pos:column="27"/></name> <modifier pos:line="7" pos:column="28">*<pos:position pos:line="7" pos:column="29"/></modifier></type><name pos:line="7" pos:column="29">data<pos:position pos:line="7" pos:column="33"/></name></decl>;<pos:position pos:line="7" pos:column="34"/></decl_stmt>

		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><name><name pos:line="9" pos:column="21">f<pos:position pos:line="9" pos:column="22"/></name><operator pos:line="9" pos:column="22">-&gt;<pos:position pos:line="9" pos:column="27"/></operator><name pos:line="9" pos:column="24">do_crc<pos:position pos:line="9" pos:column="30"/></name></name></expr>)<pos:position pos:line="9" pos:column="31"/></condition><then pos:line="9" pos:column="31">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="10" pos:column="25">f<pos:position pos:line="10" pos:column="26"/></name><operator pos:line="10" pos:column="26">-&gt;<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="28">crc32<pos:position pos:line="10" pos:column="33"/></name></name> <operator pos:line="10" pos:column="34">=<pos:position pos:line="10" pos:column="35"/></operator> <call><name pos:line="10" pos:column="36">crc32<pos:position pos:line="10" pos:column="41"/></name><argument_list pos:line="10" pos:column="41">(<argument><expr><name><name pos:line="10" pos:column="42">f<pos:position pos:line="10" pos:column="43"/></name><operator pos:line="10" pos:column="43">-&gt;<pos:position pos:line="10" pos:column="48"/></operator><name pos:line="10" pos:column="45">crc32<pos:position pos:line="10" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="52">buf<pos:position pos:line="10" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="57">nr<pos:position pos:line="10" pos:column="59"/></name></expr></argument>)<pos:position pos:line="10" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="61"/></expr_stmt></block></then></if>

		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><name pos:line="12" pos:column="21">nr<pos:position pos:line="12" pos:column="23"/></name> <operator pos:line="12" pos:column="24">==<pos:position pos:line="12" pos:column="26"/></operator> <sizeof pos:line="12" pos:column="27">sizeof<argument_list pos:line="12" pos:column="33">(<argument><expr><name><name pos:line="12" pos:column="34">f<pos:position pos:line="12" pos:column="35"/></name><operator pos:line="12" pos:column="35">-&gt;<pos:position pos:line="12" pos:column="40"/></operator><name pos:line="12" pos:column="37">buffer<pos:position pos:line="12" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="44"/></argument_list></sizeof></expr>)<pos:position pos:line="12" pos:column="45"/></condition><then pos:line="12" pos:column="45"> <block pos:line="12" pos:column="46">{
			<comment type="block" pos:line="13" pos:column="25">/* process full buffer directly without copy */</comment>
			<expr_stmt><expr><name pos:line="14" pos:column="25">data<pos:position pos:line="14" pos:column="29"/></name> <operator pos:line="14" pos:column="30">=<pos:position pos:line="14" pos:column="31"/></operator> <name pos:line="14" pos:column="32">buf<pos:position pos:line="14" pos:column="35"/></name></expr>;<pos:position pos:line="14" pos:column="36"/></expr_stmt>
		}<pos:position pos:line="15" pos:column="18"/></block></then> <else pos:line="15" pos:column="19">else <block pos:line="15" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="16" pos:column="25">memcpy<pos:position pos:line="16" pos:column="31"/></name><argument_list pos:line="16" pos:column="31">(<argument><expr><name><name pos:line="16" pos:column="32">f<pos:position pos:line="16" pos:column="33"/></name><operator pos:line="16" pos:column="33">-&gt;<pos:position pos:line="16" pos:column="38"/></operator><name pos:line="16" pos:column="35">buffer<pos:position pos:line="16" pos:column="41"/></name></name> <operator pos:line="16" pos:column="42">+<pos:position pos:line="16" pos:column="43"/></operator> <name pos:line="16" pos:column="44">offset<pos:position pos:line="16" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="52">buf<pos:position pos:line="16" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="57">nr<pos:position pos:line="16" pos:column="59"/></name></expr></argument>)<pos:position pos:line="16" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="61"/></expr_stmt>
			<expr_stmt><expr><name pos:line="17" pos:column="25">data<pos:position pos:line="17" pos:column="29"/></name> <operator pos:line="17" pos:column="30">=<pos:position pos:line="17" pos:column="31"/></operator> <name><name pos:line="17" pos:column="32">f<pos:position pos:line="17" pos:column="33"/></name><operator pos:line="17" pos:column="33">-&gt;<pos:position pos:line="17" pos:column="38"/></operator><name pos:line="17" pos:column="35">buffer<pos:position pos:line="17" pos:column="41"/></name></name></expr>;<pos:position pos:line="17" pos:column="42"/></expr_stmt>
		}<pos:position pos:line="18" pos:column="18"/></block></else></if>

		<expr_stmt><expr><name pos:line="20" pos:column="17">count<pos:position pos:line="20" pos:column="22"/></name> <operator pos:line="20" pos:column="23">-=<pos:position pos:line="20" pos:column="25"/></operator> <name pos:line="20" pos:column="26">nr<pos:position pos:line="20" pos:column="28"/></name></expr>;<pos:position pos:line="20" pos:column="29"/></expr_stmt>
		<expr_stmt><expr><name pos:line="21" pos:column="17">offset<pos:position pos:line="21" pos:column="23"/></name> <operator pos:line="21" pos:column="24">+=<pos:position pos:line="21" pos:column="26"/></operator> <name pos:line="21" pos:column="27">nr<pos:position pos:line="21" pos:column="29"/></name></expr>;<pos:position pos:line="21" pos:column="30"/></expr_stmt>
		<expr_stmt><expr><name pos:line="22" pos:column="17">buf<pos:position pos:line="22" pos:column="20"/></name> <operator pos:line="22" pos:column="21">=<pos:position pos:line="22" pos:column="22"/></operator> <operator pos:line="22" pos:column="23">(<pos:position pos:line="22" pos:column="24"/></operator><name pos:line="22" pos:column="24">char<pos:position pos:line="22" pos:column="28"/></name> <operator pos:line="22" pos:column="29">*<pos:position pos:line="22" pos:column="30"/></operator><operator pos:line="22" pos:column="30">)<pos:position pos:line="22" pos:column="31"/></operator> <name pos:line="22" pos:column="32">buf<pos:position pos:line="22" pos:column="35"/></name> <operator pos:line="22" pos:column="36">+<pos:position pos:line="22" pos:column="37"/></operator> <name pos:line="22" pos:column="38">nr<pos:position pos:line="22" pos:column="40"/></name></expr>;<pos:position pos:line="22" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><name pos:line="23" pos:column="17">left<pos:position pos:line="23" pos:column="21"/></name> <operator pos:line="23" pos:column="22">-=<pos:position pos:line="23" pos:column="24"/></operator> <name pos:line="23" pos:column="25">nr<pos:position pos:line="23" pos:column="27"/></name></expr>;<pos:position pos:line="23" pos:column="28"/></expr_stmt>
		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><operator pos:line="24" pos:column="21">!<pos:position pos:line="24" pos:column="22"/></operator><name pos:line="24" pos:column="22">left<pos:position pos:line="24" pos:column="26"/></name></expr>)<pos:position pos:line="24" pos:column="27"/></condition><then pos:line="24" pos:column="27"> <block pos:line="24" pos:column="28">{
			<expr_stmt><expr><call><name pos:line="25" pos:column="25">git_SHA1_Update<pos:position pos:line="25" pos:column="40"/></name><argument_list pos:line="25" pos:column="40">(<argument><expr><operator pos:line="25" pos:column="41">&amp;<pos:position pos:line="25" pos:column="46"/></operator><name><name pos:line="25" pos:column="42">f<pos:position pos:line="25" pos:column="43"/></name><operator pos:line="25" pos:column="43">-&gt;<pos:position pos:line="25" pos:column="48"/></operator><name pos:line="25" pos:column="45">ctx<pos:position pos:line="25" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="50">data<pos:position pos:line="25" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="56">offset<pos:position pos:line="25" pos:column="62"/></name></expr></argument>)<pos:position pos:line="25" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="64"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="26" pos:column="25">flush<pos:position pos:line="26" pos:column="30"/></name><argument_list pos:line="26" pos:column="30">(<argument><expr><name pos:line="26" pos:column="31">f<pos:position pos:line="26" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="34">data<pos:position pos:line="26" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="40">offset<pos:position pos:line="26" pos:column="46"/></name></expr></argument>)<pos:position pos:line="26" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="48"/></expr_stmt>
			<expr_stmt><expr><name pos:line="27" pos:column="25">offset<pos:position pos:line="27" pos:column="31"/></name> <operator pos:line="27" pos:column="32">=<pos:position pos:line="27" pos:column="33"/></operator> <literal type="number" pos:line="27" pos:column="34">0<pos:position pos:line="27" pos:column="35"/></literal></expr>;<pos:position pos:line="27" pos:column="36"/></expr_stmt>
		}<pos:position pos:line="28" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name><name pos:line="29" pos:column="17">f<pos:position pos:line="29" pos:column="18"/></name><operator pos:line="29" pos:column="18">-&gt;<pos:position pos:line="29" pos:column="23"/></operator><name pos:line="29" pos:column="20">offset<pos:position pos:line="29" pos:column="26"/></name></name> <operator pos:line="29" pos:column="27">=<pos:position pos:line="29" pos:column="28"/></operator> <name pos:line="29" pos:column="29">offset<pos:position pos:line="29" pos:column="35"/></name></expr>;<pos:position pos:line="29" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="30" pos:column="10"/></block></while>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

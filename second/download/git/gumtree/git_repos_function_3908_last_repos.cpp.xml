<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3908_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">strbuf<pos:position pos:line="1" pos:column="21"/></name></name> <modifier pos:line="1" pos:column="22">*<pos:position pos:line="1" pos:column="23"/></modifier></type><name pos:line="1" pos:column="23">diff_output_prefix_callback<pos:position pos:line="1" pos:column="50"/></name><parameter_list pos:line="1" pos:column="50">(<parameter><decl><type><name><name pos:line="1" pos:column="51">struct<pos:position pos:line="1" pos:column="57"/></name> <name pos:line="1" pos:column="58">diff_options<pos:position pos:line="1" pos:column="70"/></name></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">opt<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="77">void<pos:position pos:line="1" pos:column="81"/></name> <modifier pos:line="1" pos:column="82">*<pos:position pos:line="1" pos:column="83"/></modifier></type><name pos:line="1" pos:column="83">data<pos:position pos:line="1" pos:column="87"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="88"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">git_graph<pos:position pos:line="3" pos:column="25"/></name></name> <modifier pos:line="3" pos:column="26">*<pos:position pos:line="3" pos:column="27"/></modifier></type><name pos:line="3" pos:column="27">graph<pos:position pos:line="3" pos:column="32"/></name> <init pos:line="3" pos:column="33">= <expr><name pos:line="3" pos:column="35">data<pos:position pos:line="3" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="4" pos:column="9">static<pos:position pos:line="4" pos:column="15"/></specifier> <type><name><name pos:line="4" pos:column="16">struct<pos:position pos:line="4" pos:column="22"/></name> <name pos:line="4" pos:column="23">strbuf<pos:position pos:line="4" pos:column="29"/></name></name></type> <name pos:line="4" pos:column="30">msgbuf<pos:position pos:line="4" pos:column="36"/></name> <init pos:line="4" pos:column="37">= <expr><name pos:line="4" pos:column="39">STRBUF_INIT<pos:position pos:line="4" pos:column="50"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="51"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="6" pos:column="9">assert<pos:position pos:line="6" pos:column="15"/></name><argument_list pos:line="6" pos:column="15">(<argument><expr><name pos:line="6" pos:column="16">opt<pos:position pos:line="6" pos:column="19"/></name></expr></argument>)<pos:position pos:line="6" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="21"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="8" pos:column="9">strbuf_reset<pos:position pos:line="8" pos:column="21"/></name><argument_list pos:line="8" pos:column="21">(<argument><expr><operator pos:line="8" pos:column="22">&amp;<pos:position pos:line="8" pos:column="27"/></operator><name pos:line="8" pos:column="23">msgbuf<pos:position pos:line="8" pos:column="29"/></name></expr></argument>)<pos:position pos:line="8" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="31"/></expr_stmt>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name><name pos:line="9" pos:column="13">opt<pos:position pos:line="9" pos:column="16"/></name><operator pos:line="9" pos:column="16">-&gt;<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="18">line_prefix<pos:position pos:line="9" pos:column="29"/></name></name></expr>)<pos:position pos:line="9" pos:column="30"/></condition><then pos:line="9" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="17">strbuf_add<pos:position pos:line="10" pos:column="27"/></name><argument_list pos:line="10" pos:column="27">(<argument><expr><operator pos:line="10" pos:column="28">&amp;<pos:position pos:line="10" pos:column="33"/></operator><name pos:line="10" pos:column="29">msgbuf<pos:position pos:line="10" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="37">opt<pos:position pos:line="10" pos:column="40"/></name><operator pos:line="10" pos:column="40">-&gt;<pos:position pos:line="10" pos:column="45"/></operator><name pos:line="10" pos:column="42">line_prefix<pos:position pos:line="10" pos:column="53"/></name></name></expr></argument>,
			   <argument><expr><name><name pos:line="11" pos:column="28">opt<pos:position pos:line="11" pos:column="31"/></name><operator pos:line="11" pos:column="31">-&gt;<pos:position pos:line="11" pos:column="36"/></operator><name pos:line="11" pos:column="33">line_prefix_length<pos:position pos:line="11" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="53"/></expr_stmt></block></then></if>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">graph<pos:position pos:line="12" pos:column="18"/></name></expr>)<pos:position pos:line="12" pos:column="19"/></condition><then pos:line="12" pos:column="19">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="17">graph_padding_line<pos:position pos:line="13" pos:column="35"/></name><argument_list pos:line="13" pos:column="35">(<argument><expr><name pos:line="13" pos:column="36">graph<pos:position pos:line="13" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="43">&amp;<pos:position pos:line="13" pos:column="48"/></operator><name pos:line="13" pos:column="44">msgbuf<pos:position pos:line="13" pos:column="50"/></name></expr></argument>)<pos:position pos:line="13" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="52"/></expr_stmt></block></then></if>
	<return pos:line="14" pos:column="9">return <expr><operator pos:line="14" pos:column="16">&amp;<pos:position pos:line="14" pos:column="21"/></operator><name pos:line="14" pos:column="17">msgbuf<pos:position pos:line="14" pos:column="23"/></name></expr>;<pos:position pos:line="14" pos:column="24"/></return>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

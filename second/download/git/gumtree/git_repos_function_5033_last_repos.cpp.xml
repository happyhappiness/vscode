<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5033_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_interpret_trailers<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">int<pos:position pos:line="1" pos:column="31"/></name></type> <name pos:line="1" pos:column="32">argc<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="38">const<pos:position pos:line="1" pos:column="43"/></specifier> <name pos:line="1" pos:column="44">char<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier><modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">argv<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="57">const<pos:position pos:line="1" pos:column="62"/></specifier> <name pos:line="1" pos:column="63">char<pos:position pos:line="1" pos:column="67"/></name> <modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier></type><name pos:line="1" pos:column="69">prefix<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="76"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">in_place<pos:position pos:line="3" pos:column="21"/></name> <init pos:line="3" pos:column="22">= <expr><literal type="number" pos:line="3" pos:column="24">0<pos:position pos:line="3" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">trim_empty<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><literal type="number" pos:line="4" pos:column="26">0<pos:position pos:line="4" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">string_list<pos:position pos:line="5" pos:column="27"/></name></name></type> <name pos:line="5" pos:column="28">trailers<pos:position pos:line="5" pos:column="36"/></name> <init pos:line="5" pos:column="37">= <expr><name pos:line="5" pos:column="39">STRING_LIST_INIT_NODUP<pos:position pos:line="5" pos:column="61"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="62"/></decl_stmt>

	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">option<pos:position pos:line="7" pos:column="22"/></name></name></type> <name><name pos:line="7" pos:column="23">options<pos:position pos:line="7" pos:column="30"/></name><index pos:line="7" pos:column="30">[]<pos:position pos:line="7" pos:column="32"/></index></name> <init pos:line="7" pos:column="33">= <expr><block pos:line="7" pos:column="35">{
		<expr><call><name pos:line="8" pos:column="17">OPT_BOOL<pos:position pos:line="8" pos:column="25"/></name><argument_list pos:line="8" pos:column="25">(<argument><expr><literal type="number" pos:line="8" pos:column="26">0<pos:position pos:line="8" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="29">"in-place"<pos:position pos:line="8" pos:column="39"/></literal></expr></argument>, <argument><expr><operator pos:line="8" pos:column="41">&amp;<pos:position pos:line="8" pos:column="46"/></operator><name pos:line="8" pos:column="42">in_place<pos:position pos:line="8" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="8" pos:column="52">N_<pos:position pos:line="8" pos:column="54"/></name><argument_list pos:line="8" pos:column="54">(<argument><expr><literal type="string" pos:line="8" pos:column="55">"edit files in place"<pos:position pos:line="8" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="78"/></argument_list></call></expr>,
		<expr><call><name pos:line="9" pos:column="17">OPT_BOOL<pos:position pos:line="9" pos:column="25"/></name><argument_list pos:line="9" pos:column="25">(<argument><expr><literal type="number" pos:line="9" pos:column="26">0<pos:position pos:line="9" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="29">"trim-empty"<pos:position pos:line="9" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="9" pos:column="43">&amp;<pos:position pos:line="9" pos:column="48"/></operator><name pos:line="9" pos:column="44">trim_empty<pos:position pos:line="9" pos:column="54"/></name></expr></argument>, <argument><expr><call><name pos:line="9" pos:column="56">N_<pos:position pos:line="9" pos:column="58"/></name><argument_list pos:line="9" pos:column="58">(<argument><expr><literal type="string" pos:line="9" pos:column="59">"trim empty trailers"<pos:position pos:line="9" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="81"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="82"/></argument_list></call></expr>,
		<expr><call><name pos:line="10" pos:column="17">OPT_STRING_LIST<pos:position pos:line="10" pos:column="32"/></name><argument_list pos:line="10" pos:column="32">(<argument><expr><literal type="number" pos:line="10" pos:column="33">0<pos:position pos:line="10" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="36">"trailer"<pos:position pos:line="10" pos:column="45"/></literal></expr></argument>, <argument><expr><operator pos:line="10" pos:column="47">&amp;<pos:position pos:line="10" pos:column="52"/></operator><name pos:line="10" pos:column="48">trailers<pos:position pos:line="10" pos:column="56"/></name></expr></argument>, <argument><expr><call><name pos:line="10" pos:column="58">N_<pos:position pos:line="10" pos:column="60"/></name><argument_list pos:line="10" pos:column="60">(<argument><expr><literal type="string" pos:line="10" pos:column="61">"trailer"<pos:position pos:line="10" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="71"/></argument_list></call></expr></argument>,
				<argument><expr><call><name pos:line="11" pos:column="33">N_<pos:position pos:line="11" pos:column="35"/></name><argument_list pos:line="11" pos:column="35">(<argument><expr><literal type="string" pos:line="11" pos:column="36">"trailer(s) to add"<pos:position pos:line="11" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="57"/></argument_list></call></expr>,
		<macro><name pos:line="12" pos:column="17">OPT_END<pos:position pos:line="12" pos:column="24"/></name><argument_list pos:line="12" pos:column="24">()<pos:position pos:line="12" pos:column="26"/></argument_list></macro>
	}<pos:position pos:line="13" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="13" pos:column="11"/></decl_stmt>

	<expr_stmt><expr><name pos:line="15" pos:column="9">argc<pos:position pos:line="15" pos:column="13"/></name> <operator pos:line="15" pos:column="14">=<pos:position pos:line="15" pos:column="15"/></operator> <call><name pos:line="15" pos:column="16">parse_options<pos:position pos:line="15" pos:column="29"/></name><argument_list pos:line="15" pos:column="29">(<argument><expr><name pos:line="15" pos:column="30">argc<pos:position pos:line="15" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="36">argv<pos:position pos:line="15" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="42">prefix<pos:position pos:line="15" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="50">options<pos:position pos:line="15" pos:column="57"/></name></expr></argument>,
			     <argument><expr><name pos:line="16" pos:column="30">git_interpret_trailers_usage<pos:position pos:line="16" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="60">0<pos:position pos:line="16" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="63"/></expr_stmt>

	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">argc<pos:position pos:line="18" pos:column="17"/></name></expr>)<pos:position pos:line="18" pos:column="18"/></condition><then pos:line="18" pos:column="18"> <block pos:line="18" pos:column="19">{
		<decl_stmt><decl><type><name pos:line="19" pos:column="17">int<pos:position pos:line="19" pos:column="20"/></name></type> <name pos:line="19" pos:column="21">i<pos:position pos:line="19" pos:column="22"/></name></decl>;<pos:position pos:line="19" pos:column="23"/></decl_stmt>
		<for pos:line="20" pos:column="17">for <control pos:line="20" pos:column="21">(<init><expr><name pos:line="20" pos:column="22">i<pos:position pos:line="20" pos:column="23"/></name> <operator pos:line="20" pos:column="24">=<pos:position pos:line="20" pos:column="25"/></operator> <literal type="number" pos:line="20" pos:column="26">0<pos:position pos:line="20" pos:column="27"/></literal></expr>;<pos:position pos:line="20" pos:column="28"/></init> <condition><expr><name pos:line="20" pos:column="29">i<pos:position pos:line="20" pos:column="30"/></name> <operator pos:line="20" pos:column="31">&lt;<pos:position pos:line="20" pos:column="35"/></operator> <name pos:line="20" pos:column="33">argc<pos:position pos:line="20" pos:column="37"/></name></expr>;<pos:position pos:line="20" pos:column="38"/></condition> <incr><expr><name pos:line="20" pos:column="39">i<pos:position pos:line="20" pos:column="40"/></name><operator pos:line="20" pos:column="40">++<pos:position pos:line="20" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="20" pos:column="43"/></control>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="25">process_trailers<pos:position pos:line="21" pos:column="41"/></name><argument_list pos:line="21" pos:column="41">(<argument><expr><name><name pos:line="21" pos:column="42">argv<pos:position pos:line="21" pos:column="46"/></name><index pos:line="21" pos:column="46">[<expr><name pos:line="21" pos:column="47">i<pos:position pos:line="21" pos:column="48"/></name></expr>]<pos:position pos:line="21" pos:column="49"/></index></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="51">in_place<pos:position pos:line="21" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="61">trim_empty<pos:position pos:line="21" pos:column="71"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="73">&amp;<pos:position pos:line="21" pos:column="78"/></operator><name pos:line="21" pos:column="74">trailers<pos:position pos:line="21" pos:column="82"/></name></expr></argument>)<pos:position pos:line="21" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="84"/></expr_stmt></block></for>
	}<pos:position pos:line="22" pos:column="10"/></block></then> <else pos:line="22" pos:column="11">else <block pos:line="22" pos:column="16">{
		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><name pos:line="23" pos:column="21">in_place<pos:position pos:line="23" pos:column="29"/></name></expr>)<pos:position pos:line="23" pos:column="30"/></condition><then pos:line="23" pos:column="30">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="25">die<pos:position pos:line="24" pos:column="28"/></name><argument_list pos:line="24" pos:column="28">(<argument><expr><call><name pos:line="24" pos:column="29">_<pos:position pos:line="24" pos:column="30"/></name><argument_list pos:line="24" pos:column="30">(<argument><expr><literal type="string" pos:line="24" pos:column="31">"no input file given for in-place editing"<pos:position pos:line="24" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="76"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="25" pos:column="17">process_trailers<pos:position pos:line="25" pos:column="33"/></name><argument_list pos:line="25" pos:column="33">(<argument><expr><name pos:line="25" pos:column="34">NULL<pos:position pos:line="25" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="40">in_place<pos:position pos:line="25" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="50">trim_empty<pos:position pos:line="25" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="62">&amp;<pos:position pos:line="25" pos:column="67"/></operator><name pos:line="25" pos:column="63">trailers<pos:position pos:line="25" pos:column="71"/></name></expr></argument>)<pos:position pos:line="25" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="73"/></expr_stmt>
	}<pos:position pos:line="26" pos:column="10"/></block></else></if>

	<expr_stmt><expr><call><name pos:line="28" pos:column="9">string_list_clear<pos:position pos:line="28" pos:column="26"/></name><argument_list pos:line="28" pos:column="26">(<argument><expr><operator pos:line="28" pos:column="27">&amp;<pos:position pos:line="28" pos:column="32"/></operator><name pos:line="28" pos:column="28">trailers<pos:position pos:line="28" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="38">0<pos:position pos:line="28" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="41"/></expr_stmt>

	<return pos:line="30" pos:column="9">return <expr><literal type="number" pos:line="30" pos:column="16">0<pos:position pos:line="30" pos:column="17"/></literal></expr>;<pos:position pos:line="30" pos:column="18"/></return>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

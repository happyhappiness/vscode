<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1896_git-2.12.5.cpp" pos:tabs="8"><decl_stmt><decl><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">show_new_file<pos:position pos:line="1" pos:column="26"/></name><argument_list pos:line="1" pos:column="26">(<argument><expr pos:line="1" pos:column="27">struct <name pos:line="1" pos:column="34">rev_info<pos:position pos:line="1" pos:column="42"/></name> <operator pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></operator><name pos:line="1" pos:column="44">revs<pos:position pos:line="1" pos:column="48"/></name></expr></argument>,
			  <argument><expr><specifier pos:line="2" pos:column="27">const<pos:position pos:line="2" pos:column="32"/></specifier> struct <name pos:line="2" pos:column="40">cache_entry<pos:position pos:line="2" pos:column="51"/></name> <operator pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></operator><operator pos:line="2" pos:column="53">new<pos:position pos:line="2" pos:column="56"/></operator></expr></argument>,
			  <argument><expr><name pos:line="3" pos:column="27">int<pos:position pos:line="3" pos:column="30"/></name> <name pos:line="3" pos:column="31">cached<pos:position pos:line="3" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="39">int<pos:position pos:line="3" pos:column="42"/></name> <name pos:line="3" pos:column="43">match_missing<pos:position pos:line="3" pos:column="56"/></name></expr></argument>)<pos:position pos:line="3" pos:column="57"/></argument_list>
<argument_list pos:line="4" pos:column="1">{
	<argument><expr><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">unsigned<pos:position pos:line="5" pos:column="23"/></name> <name pos:line="5" pos:column="24">char<pos:position pos:line="5" pos:column="28"/></name> <operator pos:line="5" pos:column="29">*<pos:position pos:line="5" pos:column="30"/></operator><name pos:line="5" pos:column="30">sha1<pos:position pos:line="5" pos:column="34"/></name></expr></argument>;
	<argument><expr><name pos:line="6" pos:column="9">unsigned<pos:position pos:line="6" pos:column="17"/></name> <name pos:line="6" pos:column="18">int<pos:position pos:line="6" pos:column="21"/></name> <name pos:line="6" pos:column="22">mode<pos:position pos:line="6" pos:column="26"/></name></expr></argument>;
	<argument><expr><name pos:line="7" pos:column="9">unsigned<pos:position pos:line="7" pos:column="17"/></name> <name pos:line="7" pos:column="18">dirty_submodule<pos:position pos:line="7" pos:column="33"/></name> <operator pos:line="7" pos:column="34">=<pos:position pos:line="7" pos:column="35"/></operator> <literal type="number" pos:line="7" pos:column="36">0<pos:position pos:line="7" pos:column="37"/></literal></expr></argument>;

	<comment type="block" pos:line="9" pos:column="9">/*
	 * New file in the index: it might actually be different in
	 * the working tree.
	 */</comment>
	if <argument><expr><operator pos:line="13" pos:column="12">(<pos:position pos:line="13" pos:column="13"/></operator><call><name pos:line="13" pos:column="13">get_stat_data<pos:position pos:line="13" pos:column="26"/></name><argument_list pos:line="13" pos:column="26">(<argument><expr><operator pos:line="13" pos:column="27">new<pos:position pos:line="13" pos:column="30"/></operator></expr></argument>, <argument><expr><operator pos:line="13" pos:column="32">&amp;<pos:position pos:line="13" pos:column="37"/></operator><name pos:line="13" pos:column="33">sha1<pos:position pos:line="13" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="39">&amp;<pos:position pos:line="13" pos:column="44"/></operator><name pos:line="13" pos:column="40">mode<pos:position pos:line="13" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="46">cached<pos:position pos:line="13" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="54">match_missing<pos:position pos:line="13" pos:column="67"/></name></expr></argument>,
	    <argument><expr><operator pos:line="14" pos:column="13">&amp;<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="14">dirty_submodule<pos:position pos:line="14" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="31">&amp;<pos:position pos:line="14" pos:column="36"/></operator><name><name pos:line="14" pos:column="32">revs<pos:position pos:line="14" pos:column="36"/></name><operator pos:line="14" pos:column="36">-&gt;<pos:position pos:line="14" pos:column="41"/></operator><name pos:line="14" pos:column="38">diffopt<pos:position pos:line="14" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="46"/></argument_list></call> <operator pos:line="14" pos:column="47">&lt;<pos:position pos:line="14" pos:column="51"/></operator> <literal type="number" pos:line="14" pos:column="49">0<pos:position pos:line="14" pos:column="50"/></literal><operator pos:line="14" pos:column="50">)<pos:position pos:line="14" pos:column="51"/></operator></expr></argument>
		<return pos:line="15" pos:column="17">return;<pos:position pos:line="15" pos:column="24"/></return></argument_list></decl></decl_stmt>

	<expr_stmt><expr><call><name pos:line="17" pos:column="9">diff_index_show_file<pos:position pos:line="17" pos:column="29"/></name><argument_list pos:line="17" pos:column="29">(<argument><expr><name pos:line="17" pos:column="30">revs<pos:position pos:line="17" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="36">"+"<pos:position pos:line="17" pos:column="39"/></literal></expr></argument>, <argument><expr><operator pos:line="17" pos:column="41">new<pos:position pos:line="17" pos:column="44"/></operator></expr></argument>, <argument><expr><name pos:line="17" pos:column="46">sha1<pos:position pos:line="17" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="52">!<pos:position pos:line="17" pos:column="53"/></operator><call><name pos:line="17" pos:column="53">is_null_sha1<pos:position pos:line="17" pos:column="65"/></name><argument_list pos:line="17" pos:column="65">(<argument><expr><name pos:line="17" pos:column="66">sha1<pos:position pos:line="17" pos:column="70"/></name></expr></argument>)<pos:position pos:line="17" pos:column="71"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="17" pos:column="73">mode<pos:position pos:line="17" pos:column="77"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="79">dirty_submodule<pos:position pos:line="17" pos:column="94"/></name></expr></argument>)<pos:position pos:line="17" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="96"/></expr_stmt>
}</unit>

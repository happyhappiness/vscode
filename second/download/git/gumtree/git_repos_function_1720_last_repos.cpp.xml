<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1720_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">do_worktree_path<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><specifier pos:line="1" pos:column="30">const<pos:position pos:line="1" pos:column="35"/></specifier> <name><name pos:line="1" pos:column="36">struct<pos:position pos:line="1" pos:column="42"/></name> <name pos:line="1" pos:column="43">repository<pos:position pos:line="1" pos:column="53"/></name></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">repo<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>,
			     <parameter><decl><type><name><name pos:line="2" pos:column="30">struct<pos:position pos:line="2" pos:column="36"/></name> <name pos:line="2" pos:column="37">strbuf<pos:position pos:line="2" pos:column="43"/></name></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">buf<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>,
			     <parameter><decl><type><specifier pos:line="3" pos:column="30">const<pos:position pos:line="3" pos:column="35"/></specifier> <name pos:line="3" pos:column="36">char<pos:position pos:line="3" pos:column="40"/></name> <modifier pos:line="3" pos:column="41">*<pos:position pos:line="3" pos:column="42"/></modifier></type><name pos:line="3" pos:column="42">fmt<pos:position pos:line="3" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="47">va_list<pos:position pos:line="3" pos:column="54"/></name></type> <name pos:line="3" pos:column="55">args<pos:position pos:line="3" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="60"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="5" pos:column="9">strbuf_addstr<pos:position pos:line="5" pos:column="22"/></name><argument_list pos:line="5" pos:column="22">(<argument><expr><name pos:line="5" pos:column="23">buf<pos:position pos:line="5" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="5" pos:column="28">repo<pos:position pos:line="5" pos:column="32"/></name><operator pos:line="5" pos:column="32">-&gt;<pos:position pos:line="5" pos:column="37"/></operator><name pos:line="5" pos:column="34">worktree<pos:position pos:line="5" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="44"/></expr_stmt>
	<if pos:line="6" pos:column="9">if<condition pos:line="6" pos:column="11">(<expr><name><name pos:line="6" pos:column="12">buf<pos:position pos:line="6" pos:column="15"/></name><operator pos:line="6" pos:column="15">-&gt;<pos:position pos:line="6" pos:column="20"/></operator><name pos:line="6" pos:column="17">len<pos:position pos:line="6" pos:column="20"/></name></name> <operator pos:line="6" pos:column="21">&amp;&amp;<pos:position pos:line="6" pos:column="31"/></operator> <operator pos:line="6" pos:column="24">!<pos:position pos:line="6" pos:column="25"/></operator><call><name pos:line="6" pos:column="25">is_dir_sep<pos:position pos:line="6" pos:column="35"/></name><argument_list pos:line="6" pos:column="35">(<argument><expr><name><name pos:line="6" pos:column="36">buf<pos:position pos:line="6" pos:column="39"/></name><operator pos:line="6" pos:column="39">-&gt;<pos:position pos:line="6" pos:column="44"/></operator><name pos:line="6" pos:column="41">buf<pos:position pos:line="6" pos:column="44"/></name><index pos:line="6" pos:column="44">[<expr><name><name pos:line="6" pos:column="45">buf<pos:position pos:line="6" pos:column="48"/></name><operator pos:line="6" pos:column="48">-&gt;<pos:position pos:line="6" pos:column="53"/></operator><name pos:line="6" pos:column="50">len<pos:position pos:line="6" pos:column="53"/></name></name> <operator pos:line="6" pos:column="54">-<pos:position pos:line="6" pos:column="55"/></operator> <literal type="number" pos:line="6" pos:column="56">1<pos:position pos:line="6" pos:column="57"/></literal></expr>]<pos:position pos:line="6" pos:column="58"/></index></name></expr></argument>)<pos:position pos:line="6" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="60"/></condition><then pos:line="6" pos:column="60">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="17">strbuf_addch<pos:position pos:line="7" pos:column="29"/></name><argument_list pos:line="7" pos:column="29">(<argument><expr><name pos:line="7" pos:column="30">buf<pos:position pos:line="7" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="7" pos:column="35">'/'<pos:position pos:line="7" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="40"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="9" pos:column="9">strbuf_vaddf<pos:position pos:line="9" pos:column="21"/></name><argument_list pos:line="9" pos:column="21">(<argument><expr><name pos:line="9" pos:column="22">buf<pos:position pos:line="9" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="27">fmt<pos:position pos:line="9" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="32">args<pos:position pos:line="9" pos:column="36"/></name></expr></argument>)<pos:position pos:line="9" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="10" pos:column="9">strbuf_cleanup_path<pos:position pos:line="10" pos:column="28"/></name><argument_list pos:line="10" pos:column="28">(<argument><expr><name pos:line="10" pos:column="29">buf<pos:position pos:line="10" pos:column="32"/></name></expr></argument>)<pos:position pos:line="10" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="34"/></expr_stmt>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4517_git-2.3.7.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">prune_cache<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">prefix<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="44"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">pos<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><call><name pos:line="3" pos:column="19">cache_name_pos<pos:position pos:line="3" pos:column="33"/></name><argument_list pos:line="3" pos:column="33">(<argument><expr><name pos:line="3" pos:column="34">prefix<pos:position pos:line="3" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="42">max_prefix_len<pos:position pos:line="3" pos:column="56"/></name></expr></argument>)<pos:position pos:line="3" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="58"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">unsigned<pos:position pos:line="4" pos:column="17"/></name> <name pos:line="4" pos:column="18">int<pos:position pos:line="4" pos:column="21"/></name></type> <name pos:line="4" pos:column="22">first<pos:position pos:line="4" pos:column="27"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="29">last<pos:position pos:line="4" pos:column="33"/></name></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name pos:line="6" pos:column="13">pos<pos:position pos:line="6" pos:column="16"/></name> <operator pos:line="6" pos:column="17">&lt;<pos:position pos:line="6" pos:column="21"/></operator> <literal type="number" pos:line="6" pos:column="19">0<pos:position pos:line="6" pos:column="20"/></literal></expr>)<pos:position pos:line="6" pos:column="21"/></condition><then pos:line="6" pos:column="21">
		<block type="pseudo"><expr_stmt><expr><name pos:line="7" pos:column="17">pos<pos:position pos:line="7" pos:column="20"/></name> <operator pos:line="7" pos:column="21">=<pos:position pos:line="7" pos:column="22"/></operator> <operator pos:line="7" pos:column="23">-<pos:position pos:line="7" pos:column="24"/></operator><name pos:line="7" pos:column="24">pos<pos:position pos:line="7" pos:column="27"/></name><operator pos:line="7" pos:column="27">-<pos:position pos:line="7" pos:column="28"/></operator><literal type="number" pos:line="7" pos:column="28">1<pos:position pos:line="7" pos:column="29"/></literal></expr>;<pos:position pos:line="7" pos:column="30"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="8" pos:column="9">memmove<pos:position pos:line="8" pos:column="16"/></name><argument_list pos:line="8" pos:column="16">(<argument><expr><name pos:line="8" pos:column="17">active_cache<pos:position pos:line="8" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="31">active_cache<pos:position pos:line="8" pos:column="43"/></name> <operator pos:line="8" pos:column="44">+<pos:position pos:line="8" pos:column="45"/></operator> <name pos:line="8" pos:column="46">pos<pos:position pos:line="8" pos:column="49"/></name></expr></argument>,
		<argument><expr><operator pos:line="9" pos:column="17">(<pos:position pos:line="9" pos:column="18"/></operator><name pos:line="9" pos:column="18">active_nr<pos:position pos:line="9" pos:column="27"/></name> <operator pos:line="9" pos:column="28">-<pos:position pos:line="9" pos:column="29"/></operator> <name pos:line="9" pos:column="30">pos<pos:position pos:line="9" pos:column="33"/></name><operator pos:line="9" pos:column="33">)<pos:position pos:line="9" pos:column="34"/></operator> <operator pos:line="9" pos:column="35">*<pos:position pos:line="9" pos:column="36"/></operator> <sizeof pos:line="9" pos:column="37">sizeof<argument_list pos:line="9" pos:column="43">(<argument><expr pos:line="9" pos:column="44">struct <name pos:line="9" pos:column="51">cache_entry<pos:position pos:line="9" pos:column="62"/></name> <operator pos:line="9" pos:column="63">*<pos:position pos:line="9" pos:column="64"/></operator></expr></argument>)<pos:position pos:line="9" pos:column="65"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="67"/></expr_stmt>
	<expr_stmt><expr><name pos:line="10" pos:column="9">active_nr<pos:position pos:line="10" pos:column="18"/></name> <operator pos:line="10" pos:column="19">-=<pos:position pos:line="10" pos:column="21"/></operator> <name pos:line="10" pos:column="22">pos<pos:position pos:line="10" pos:column="25"/></name></expr>;<pos:position pos:line="10" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name pos:line="11" pos:column="9">first<pos:position pos:line="11" pos:column="14"/></name> <operator pos:line="11" pos:column="15">=<pos:position pos:line="11" pos:column="16"/></operator> <literal type="number" pos:line="11" pos:column="17">0<pos:position pos:line="11" pos:column="18"/></literal></expr>;<pos:position pos:line="11" pos:column="19"/></expr_stmt>
	<expr_stmt><expr><name pos:line="12" pos:column="9">last<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">=<pos:position pos:line="12" pos:column="15"/></operator> <name pos:line="12" pos:column="16">active_nr<pos:position pos:line="12" pos:column="25"/></name></expr>;<pos:position pos:line="12" pos:column="26"/></expr_stmt>
	<while pos:line="13" pos:column="9">while <condition pos:line="13" pos:column="15">(<expr><name pos:line="13" pos:column="16">last<pos:position pos:line="13" pos:column="20"/></name> <operator pos:line="13" pos:column="21">&gt;<pos:position pos:line="13" pos:column="25"/></operator> <name pos:line="13" pos:column="23">first<pos:position pos:line="13" pos:column="28"/></name></expr>)<pos:position pos:line="13" pos:column="29"/></condition> <block pos:line="13" pos:column="30">{
		<decl_stmt><decl><type><name pos:line="14" pos:column="17">int<pos:position pos:line="14" pos:column="20"/></name></type> <name pos:line="14" pos:column="21">next<pos:position pos:line="14" pos:column="25"/></name> <init pos:line="14" pos:column="26">= <expr><operator pos:line="14" pos:column="28">(<pos:position pos:line="14" pos:column="29"/></operator><name pos:line="14" pos:column="29">last<pos:position pos:line="14" pos:column="33"/></name> <operator pos:line="14" pos:column="34">+<pos:position pos:line="14" pos:column="35"/></operator> <name pos:line="14" pos:column="36">first<pos:position pos:line="14" pos:column="41"/></name><operator pos:line="14" pos:column="41">)<pos:position pos:line="14" pos:column="42"/></operator> <operator pos:line="14" pos:column="43">&gt;&gt;<pos:position pos:line="14" pos:column="48"/></operator> <literal type="number" pos:line="14" pos:column="46">1<pos:position pos:line="14" pos:column="47"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="48"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="15" pos:column="17">const<pos:position pos:line="15" pos:column="22"/></specifier> <name><name pos:line="15" pos:column="23">struct<pos:position pos:line="15" pos:column="29"/></name> <name pos:line="15" pos:column="30">cache_entry<pos:position pos:line="15" pos:column="41"/></name></name> <modifier pos:line="15" pos:column="42">*<pos:position pos:line="15" pos:column="43"/></modifier></type><name pos:line="15" pos:column="43">ce<pos:position pos:line="15" pos:column="45"/></name> <init pos:line="15" pos:column="46">= <expr><name><name pos:line="15" pos:column="48">active_cache<pos:position pos:line="15" pos:column="60"/></name><index pos:line="15" pos:column="60">[<expr><name pos:line="15" pos:column="61">next<pos:position pos:line="15" pos:column="65"/></name></expr>]<pos:position pos:line="15" pos:column="66"/></index></name></expr></init></decl>;<pos:position pos:line="15" pos:column="67"/></decl_stmt>
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><operator pos:line="16" pos:column="21">!<pos:position pos:line="16" pos:column="22"/></operator><call><name pos:line="16" pos:column="22">strncmp<pos:position pos:line="16" pos:column="29"/></name><argument_list pos:line="16" pos:column="29">(<argument><expr><name><name pos:line="16" pos:column="30">ce<pos:position pos:line="16" pos:column="32"/></name><operator pos:line="16" pos:column="32">-&gt;<pos:position pos:line="16" pos:column="37"/></operator><name pos:line="16" pos:column="34">name<pos:position pos:line="16" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="40">prefix<pos:position pos:line="16" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="48">max_prefix_len<pos:position pos:line="16" pos:column="62"/></name></expr></argument>)<pos:position pos:line="16" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="64"/></condition><then pos:line="16" pos:column="64"> <block pos:line="16" pos:column="65">{
			<expr_stmt><expr><name pos:line="17" pos:column="25">first<pos:position pos:line="17" pos:column="30"/></name> <operator pos:line="17" pos:column="31">=<pos:position pos:line="17" pos:column="32"/></operator> <name pos:line="17" pos:column="33">next<pos:position pos:line="17" pos:column="37"/></name><operator pos:line="17" pos:column="37">+<pos:position pos:line="17" pos:column="38"/></operator><literal type="number" pos:line="17" pos:column="38">1<pos:position pos:line="17" pos:column="39"/></literal></expr>;<pos:position pos:line="17" pos:column="40"/></expr_stmt>
			<continue pos:line="18" pos:column="25">continue;<pos:position pos:line="18" pos:column="34"/></continue>
		}<pos:position pos:line="19" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="20" pos:column="17">last<pos:position pos:line="20" pos:column="21"/></name> <operator pos:line="20" pos:column="22">=<pos:position pos:line="20" pos:column="23"/></operator> <name pos:line="20" pos:column="24">next<pos:position pos:line="20" pos:column="28"/></name></expr>;<pos:position pos:line="20" pos:column="29"/></expr_stmt>
	}<pos:position pos:line="21" pos:column="10"/></block></while>
	<expr_stmt><expr><name pos:line="22" pos:column="9">active_nr<pos:position pos:line="22" pos:column="18"/></name> <operator pos:line="22" pos:column="19">=<pos:position pos:line="22" pos:column="20"/></operator> <name pos:line="22" pos:column="21">last<pos:position pos:line="22" pos:column="25"/></name></expr>;<pos:position pos:line="22" pos:column="26"/></expr_stmt>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1393_git-2.5.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">trim_common_tail<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">mmfile_t<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">a<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">mmfile_t<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">b<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">long<pos:position pos:line="1" pos:column="60"/></name></type> <name pos:line="1" pos:column="61">ctx<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">int<pos:position pos:line="3" pos:column="18"/></name></type> <name pos:line="3" pos:column="19">blk<pos:position pos:line="3" pos:column="22"/></name> <init pos:line="3" pos:column="23">= <expr><literal type="number" pos:line="3" pos:column="25">1024<pos:position pos:line="3" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">long<pos:position pos:line="4" pos:column="13"/></name></type> <name pos:line="4" pos:column="14">trimmed<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><literal type="number" pos:line="4" pos:column="24">0<pos:position pos:line="4" pos:column="25"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="27">recovered<pos:position pos:line="4" pos:column="36"/></name> <init pos:line="4" pos:column="37">= <expr><literal type="number" pos:line="4" pos:column="39">0<pos:position pos:line="4" pos:column="40"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">ap<pos:position pos:line="5" pos:column="17"/></name> <init pos:line="5" pos:column="18">= <expr><name><name pos:line="5" pos:column="20">a<pos:position pos:line="5" pos:column="21"/></name><operator pos:line="5" pos:column="21">-&gt;<pos:position pos:line="5" pos:column="26"/></operator><name pos:line="5" pos:column="23">ptr<pos:position pos:line="5" pos:column="26"/></name></name> <operator pos:line="5" pos:column="27">+<pos:position pos:line="5" pos:column="28"/></operator> <name><name pos:line="5" pos:column="29">a<pos:position pos:line="5" pos:column="30"/></name><operator pos:line="5" pos:column="30">-&gt;<pos:position pos:line="5" pos:column="35"/></operator><name pos:line="5" pos:column="32">size<pos:position pos:line="5" pos:column="36"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">bp<pos:position pos:line="6" pos:column="17"/></name> <init pos:line="6" pos:column="18">= <expr><name><name pos:line="6" pos:column="20">b<pos:position pos:line="6" pos:column="21"/></name><operator pos:line="6" pos:column="21">-&gt;<pos:position pos:line="6" pos:column="26"/></operator><name pos:line="6" pos:column="23">ptr<pos:position pos:line="6" pos:column="26"/></name></name> <operator pos:line="6" pos:column="27">+<pos:position pos:line="6" pos:column="28"/></operator> <name><name pos:line="6" pos:column="29">b<pos:position pos:line="6" pos:column="30"/></name><operator pos:line="6" pos:column="30">-&gt;<pos:position pos:line="6" pos:column="35"/></operator><name pos:line="6" pos:column="32">size<pos:position pos:line="6" pos:column="36"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">long<pos:position pos:line="7" pos:column="13"/></name></type> <name pos:line="7" pos:column="14">smaller<pos:position pos:line="7" pos:column="21"/></name> <init pos:line="7" pos:column="22">= <expr><ternary><condition><expr><operator pos:line="7" pos:column="24">(<pos:position pos:line="7" pos:column="25"/></operator><name><name pos:line="7" pos:column="25">a<pos:position pos:line="7" pos:column="26"/></name><operator pos:line="7" pos:column="26">-&gt;<pos:position pos:line="7" pos:column="31"/></operator><name pos:line="7" pos:column="28">size<pos:position pos:line="7" pos:column="32"/></name></name> <operator pos:line="7" pos:column="33">&lt;<pos:position pos:line="7" pos:column="37"/></operator> <name><name pos:line="7" pos:column="35">b<pos:position pos:line="7" pos:column="36"/></name><operator pos:line="7" pos:column="36">-&gt;<pos:position pos:line="7" pos:column="41"/></operator><name pos:line="7" pos:column="38">size<pos:position pos:line="7" pos:column="42"/></name></name><operator pos:line="7" pos:column="42">)<pos:position pos:line="7" pos:column="43"/></operator></expr> ?<pos:position pos:line="7" pos:column="45"/></condition><then pos:line="7" pos:column="45"> <expr><name><name pos:line="7" pos:column="46">a<pos:position pos:line="7" pos:column="47"/></name><operator pos:line="7" pos:column="47">-&gt;<pos:position pos:line="7" pos:column="52"/></operator><name pos:line="7" pos:column="49">size<pos:position pos:line="7" pos:column="53"/></name></name></expr> <pos:position pos:line="7" pos:column="54"/></then><else pos:line="7" pos:column="54">: <expr><name><name pos:line="7" pos:column="56">b<pos:position pos:line="7" pos:column="57"/></name><operator pos:line="7" pos:column="57">-&gt;<pos:position pos:line="7" pos:column="62"/></operator><name pos:line="7" pos:column="59">size<pos:position pos:line="7" pos:column="63"/></name></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="7" pos:column="64"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">ctx<pos:position pos:line="9" pos:column="16"/></name></expr>)<pos:position pos:line="9" pos:column="17"/></condition><then pos:line="9" pos:column="17">
		<block type="pseudo"><return pos:line="10" pos:column="17">return;<pos:position pos:line="10" pos:column="24"/></return></block></then></if>

	<while pos:line="12" pos:column="9">while <condition pos:line="12" pos:column="15">(<expr><name pos:line="12" pos:column="16">blk<pos:position pos:line="12" pos:column="19"/></name> <operator pos:line="12" pos:column="20">+<pos:position pos:line="12" pos:column="21"/></operator> <name pos:line="12" pos:column="22">trimmed<pos:position pos:line="12" pos:column="29"/></name> <operator pos:line="12" pos:column="30">&lt;=<pos:position pos:line="12" pos:column="35"/></operator> <name pos:line="12" pos:column="33">smaller<pos:position pos:line="12" pos:column="40"/></name> <operator pos:line="12" pos:column="41">&amp;&amp;<pos:position pos:line="12" pos:column="51"/></operator> <operator pos:line="12" pos:column="44">!<pos:position pos:line="12" pos:column="45"/></operator><call><name pos:line="12" pos:column="45">memcmp<pos:position pos:line="12" pos:column="51"/></name><argument_list pos:line="12" pos:column="51">(<argument><expr><name pos:line="12" pos:column="52">ap<pos:position pos:line="12" pos:column="54"/></name> <operator pos:line="12" pos:column="55">-<pos:position pos:line="12" pos:column="56"/></operator> <name pos:line="12" pos:column="57">blk<pos:position pos:line="12" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="62">bp<pos:position pos:line="12" pos:column="64"/></name> <operator pos:line="12" pos:column="65">-<pos:position pos:line="12" pos:column="66"/></operator> <name pos:line="12" pos:column="67">blk<pos:position pos:line="12" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="72">blk<pos:position pos:line="12" pos:column="75"/></name></expr></argument>)<pos:position pos:line="12" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="77"/></condition> <block pos:line="12" pos:column="78">{
		<expr_stmt><expr><name pos:line="13" pos:column="17">trimmed<pos:position pos:line="13" pos:column="24"/></name> <operator pos:line="13" pos:column="25">+=<pos:position pos:line="13" pos:column="27"/></operator> <name pos:line="13" pos:column="28">blk<pos:position pos:line="13" pos:column="31"/></name></expr>;<pos:position pos:line="13" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><name pos:line="14" pos:column="17">ap<pos:position pos:line="14" pos:column="19"/></name> <operator pos:line="14" pos:column="20">-=<pos:position pos:line="14" pos:column="22"/></operator> <name pos:line="14" pos:column="23">blk<pos:position pos:line="14" pos:column="26"/></name></expr>;<pos:position pos:line="14" pos:column="27"/></expr_stmt>
		<expr_stmt><expr><name pos:line="15" pos:column="17">bp<pos:position pos:line="15" pos:column="19"/></name> <operator pos:line="15" pos:column="20">-=<pos:position pos:line="15" pos:column="22"/></operator> <name pos:line="15" pos:column="23">blk<pos:position pos:line="15" pos:column="26"/></name></expr>;<pos:position pos:line="15" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="16" pos:column="10"/></block></while>

	<while pos:line="18" pos:column="9">while <condition pos:line="18" pos:column="15">(<expr><name pos:line="18" pos:column="16">recovered<pos:position pos:line="18" pos:column="25"/></name> <operator pos:line="18" pos:column="26">&lt;<pos:position pos:line="18" pos:column="30"/></operator> <name pos:line="18" pos:column="28">trimmed<pos:position pos:line="18" pos:column="35"/></name></expr>)<pos:position pos:line="18" pos:column="36"/></condition>
		<block type="pseudo"><if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><name><name pos:line="19" pos:column="21">ap<pos:position pos:line="19" pos:column="23"/></name><index pos:line="19" pos:column="23">[<expr><name pos:line="19" pos:column="24">recovered<pos:position pos:line="19" pos:column="33"/></name><operator pos:line="19" pos:column="33">++<pos:position pos:line="19" pos:column="35"/></operator></expr>]<pos:position pos:line="19" pos:column="36"/></index></name> <operator pos:line="19" pos:column="37">==<pos:position pos:line="19" pos:column="39"/></operator> <literal type="char" pos:line="19" pos:column="40">'\n'<pos:position pos:line="19" pos:column="44"/></literal></expr>)<pos:position pos:line="19" pos:column="45"/></condition><then pos:line="19" pos:column="45">
			<block type="pseudo"><break pos:line="20" pos:column="25">break;<pos:position pos:line="20" pos:column="31"/></break></block></then></if></block></while>
	<expr_stmt><expr><name><name pos:line="21" pos:column="9">a<pos:position pos:line="21" pos:column="10"/></name><operator pos:line="21" pos:column="10">-&gt;<pos:position pos:line="21" pos:column="15"/></operator><name pos:line="21" pos:column="12">size<pos:position pos:line="21" pos:column="16"/></name></name> <operator pos:line="21" pos:column="17">-=<pos:position pos:line="21" pos:column="19"/></operator> <name pos:line="21" pos:column="20">trimmed<pos:position pos:line="21" pos:column="27"/></name> <operator pos:line="21" pos:column="28">-<pos:position pos:line="21" pos:column="29"/></operator> <name pos:line="21" pos:column="30">recovered<pos:position pos:line="21" pos:column="39"/></name></expr>;<pos:position pos:line="21" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="22" pos:column="9">b<pos:position pos:line="22" pos:column="10"/></name><operator pos:line="22" pos:column="10">-&gt;<pos:position pos:line="22" pos:column="15"/></operator><name pos:line="22" pos:column="12">size<pos:position pos:line="22" pos:column="16"/></name></name> <operator pos:line="22" pos:column="17">-=<pos:position pos:line="22" pos:column="19"/></operator> <name pos:line="22" pos:column="20">trimmed<pos:position pos:line="22" pos:column="27"/></name> <operator pos:line="22" pos:column="28">-<pos:position pos:line="22" pos:column="29"/></operator> <name pos:line="22" pos:column="30">recovered<pos:position pos:line="22" pos:column="39"/></name></expr>;<pos:position pos:line="22" pos:column="40"/></expr_stmt>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

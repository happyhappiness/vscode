<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5282_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">git_commit_config<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><specifier pos:line="1" pos:column="30">const<pos:position pos:line="1" pos:column="35"/></specifier> <name pos:line="1" pos:column="36">char<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">k<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="45">const<pos:position pos:line="1" pos:column="50"/></specifier> <name pos:line="1" pos:column="51">char<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">v<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="60">void<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">cb<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">wt_status<pos:position pos:line="3" pos:column="25"/></name></name> <modifier pos:line="3" pos:column="26">*<pos:position pos:line="3" pos:column="27"/></modifier></type><name pos:line="3" pos:column="27">s<pos:position pos:line="3" pos:column="28"/></name> <init pos:line="3" pos:column="29">= <expr><name pos:line="3" pos:column="31">cb<pos:position pos:line="3" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">status<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">!<pos:position pos:line="6" pos:column="14"/></operator><call><name pos:line="6" pos:column="14">strcmp<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><name pos:line="6" pos:column="21">k<pos:position pos:line="6" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="24">"commit.template"<pos:position pos:line="6" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="43"/></condition><then pos:line="6" pos:column="43">
		<block type="pseudo"><return pos:line="7" pos:column="17">return <expr><call><name pos:line="7" pos:column="24">git_config_pathname<pos:position pos:line="7" pos:column="43"/></name><argument_list pos:line="7" pos:column="43">(<argument><expr><operator pos:line="7" pos:column="44">&amp;<pos:position pos:line="7" pos:column="49"/></operator><name pos:line="7" pos:column="45">template_file<pos:position pos:line="7" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="60">k<pos:position pos:line="7" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="63">v<pos:position pos:line="7" pos:column="64"/></name></expr></argument>)<pos:position pos:line="7" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="66"/></return></block></then></if>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">!<pos:position pos:line="8" pos:column="14"/></operator><call><name pos:line="8" pos:column="14">strcmp<pos:position pos:line="8" pos:column="20"/></name><argument_list pos:line="8" pos:column="20">(<argument><expr><name pos:line="8" pos:column="21">k<pos:position pos:line="8" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="24">"commit.status"<pos:position pos:line="8" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="41"/></condition><then pos:line="8" pos:column="41"> <block pos:line="8" pos:column="42">{
		<expr_stmt><expr><name pos:line="9" pos:column="17">include_status<pos:position pos:line="9" pos:column="31"/></name> <operator pos:line="9" pos:column="32">=<pos:position pos:line="9" pos:column="33"/></operator> <call><name pos:line="9" pos:column="34">git_config_bool<pos:position pos:line="9" pos:column="49"/></name><argument_list pos:line="9" pos:column="49">(<argument><expr><name pos:line="9" pos:column="50">k<pos:position pos:line="9" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="53">v<pos:position pos:line="9" pos:column="54"/></name></expr></argument>)<pos:position pos:line="9" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="56"/></expr_stmt>
		<return pos:line="10" pos:column="17">return <expr><literal type="number" pos:line="10" pos:column="24">0<pos:position pos:line="10" pos:column="25"/></literal></expr>;<pos:position pos:line="10" pos:column="26"/></return>
	}<pos:position pos:line="11" pos:column="10"/></block></then></if>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">!<pos:position pos:line="12" pos:column="14"/></operator><call><name pos:line="12" pos:column="14">strcmp<pos:position pos:line="12" pos:column="20"/></name><argument_list pos:line="12" pos:column="20">(<argument><expr><name pos:line="12" pos:column="21">k<pos:position pos:line="12" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="24">"commit.cleanup"<pos:position pos:line="12" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="42"/></condition><then pos:line="12" pos:column="42">
		<block type="pseudo"><return pos:line="13" pos:column="17">return <expr><call><name pos:line="13" pos:column="24">git_config_string<pos:position pos:line="13" pos:column="41"/></name><argument_list pos:line="13" pos:column="41">(<argument><expr><operator pos:line="13" pos:column="42">&amp;<pos:position pos:line="13" pos:column="47"/></operator><name pos:line="13" pos:column="43">cleanup_arg<pos:position pos:line="13" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="56">k<pos:position pos:line="13" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="59">v<pos:position pos:line="13" pos:column="60"/></name></expr></argument>)<pos:position pos:line="13" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="62"/></return></block></then></if>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">!<pos:position pos:line="14" pos:column="14"/></operator><call><name pos:line="14" pos:column="14">strcmp<pos:position pos:line="14" pos:column="20"/></name><argument_list pos:line="14" pos:column="20">(<argument><expr><name pos:line="14" pos:column="21">k<pos:position pos:line="14" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="24">"commit.gpgsign"<pos:position pos:line="14" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="42"/></condition><then pos:line="14" pos:column="42"> <block pos:line="14" pos:column="43">{
		<expr_stmt><expr><name pos:line="15" pos:column="17">sign_commit<pos:position pos:line="15" pos:column="28"/></name> <operator pos:line="15" pos:column="29">=<pos:position pos:line="15" pos:column="30"/></operator> <ternary><condition><expr><call><name pos:line="15" pos:column="31">git_config_bool<pos:position pos:line="15" pos:column="46"/></name><argument_list pos:line="15" pos:column="46">(<argument><expr><name pos:line="15" pos:column="47">k<pos:position pos:line="15" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="50">v<pos:position pos:line="15" pos:column="51"/></name></expr></argument>)<pos:position pos:line="15" pos:column="52"/></argument_list></call></expr> ?<pos:position pos:line="15" pos:column="54"/></condition><then pos:line="15" pos:column="54"> <expr><literal type="string" pos:line="15" pos:column="55">""<pos:position pos:line="15" pos:column="57"/></literal></expr> <pos:position pos:line="15" pos:column="58"/></then><else pos:line="15" pos:column="58">: <expr><name pos:line="15" pos:column="60">NULL<pos:position pos:line="15" pos:column="64"/></name></expr></else></ternary></expr>;<pos:position pos:line="15" pos:column="65"/></expr_stmt>
		<return pos:line="16" pos:column="17">return <expr><literal type="number" pos:line="16" pos:column="24">0<pos:position pos:line="16" pos:column="25"/></literal></expr>;<pos:position pos:line="16" pos:column="26"/></return>
	}<pos:position pos:line="17" pos:column="10"/></block></then></if>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><operator pos:line="18" pos:column="13">!<pos:position pos:line="18" pos:column="14"/></operator><call><name pos:line="18" pos:column="14">strcmp<pos:position pos:line="18" pos:column="20"/></name><argument_list pos:line="18" pos:column="20">(<argument><expr><name pos:line="18" pos:column="21">k<pos:position pos:line="18" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="24">"commit.verbose"<pos:position pos:line="18" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="42"/></condition><then pos:line="18" pos:column="42"> <block pos:line="18" pos:column="43">{
		<decl_stmt><decl><type><name pos:line="19" pos:column="17">int<pos:position pos:line="19" pos:column="20"/></name></type> <name pos:line="19" pos:column="21">is_bool<pos:position pos:line="19" pos:column="28"/></name></decl>;<pos:position pos:line="19" pos:column="29"/></decl_stmt>
		<expr_stmt><expr><name pos:line="20" pos:column="17">config_commit_verbose<pos:position pos:line="20" pos:column="38"/></name> <operator pos:line="20" pos:column="39">=<pos:position pos:line="20" pos:column="40"/></operator> <call><name pos:line="20" pos:column="41">git_config_bool_or_int<pos:position pos:line="20" pos:column="63"/></name><argument_list pos:line="20" pos:column="63">(<argument><expr><name pos:line="20" pos:column="64">k<pos:position pos:line="20" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="67">v<pos:position pos:line="20" pos:column="68"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="70">&amp;<pos:position pos:line="20" pos:column="75"/></operator><name pos:line="20" pos:column="71">is_bool<pos:position pos:line="20" pos:column="78"/></name></expr></argument>)<pos:position pos:line="20" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="80"/></expr_stmt>
		<return pos:line="21" pos:column="17">return <expr><literal type="number" pos:line="21" pos:column="24">0<pos:position pos:line="21" pos:column="25"/></literal></expr>;<pos:position pos:line="21" pos:column="26"/></return>
	}<pos:position pos:line="22" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="24" pos:column="9">status<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">=<pos:position pos:line="24" pos:column="17"/></operator> <call><name pos:line="24" pos:column="18">git_gpg_config<pos:position pos:line="24" pos:column="32"/></name><argument_list pos:line="24" pos:column="32">(<argument><expr><name pos:line="24" pos:column="33">k<pos:position pos:line="24" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="36">v<pos:position pos:line="24" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="39">NULL<pos:position pos:line="24" pos:column="43"/></name></expr></argument>)<pos:position pos:line="24" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="45"/></expr_stmt>
	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">status<pos:position pos:line="25" pos:column="19"/></name></expr>)<pos:position pos:line="25" pos:column="20"/></condition><then pos:line="25" pos:column="20">
		<block type="pseudo"><return pos:line="26" pos:column="17">return <expr><name pos:line="26" pos:column="24">status<pos:position pos:line="26" pos:column="30"/></name></expr>;<pos:position pos:line="26" pos:column="31"/></return></block></then></if>
	<return pos:line="27" pos:column="9">return <expr><call><name pos:line="27" pos:column="16">git_status_config<pos:position pos:line="27" pos:column="33"/></name><argument_list pos:line="27" pos:column="33">(<argument><expr><name pos:line="27" pos:column="34">k<pos:position pos:line="27" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="37">v<pos:position pos:line="27" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="40">s<pos:position pos:line="27" pos:column="41"/></name></expr></argument>)<pos:position pos:line="27" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="43"/></return>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1263_git-2.11.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">add_index_file<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">apply_state<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">state<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>,
			   <parameter><decl><type><specifier pos:line="2" pos:column="28">const<pos:position pos:line="2" pos:column="33"/></specifier> <name pos:line="2" pos:column="34">char<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type><name pos:line="2" pos:column="40">path<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>,
			   <parameter><decl><type><name pos:line="3" pos:column="28">unsigned<pos:position pos:line="3" pos:column="36"/></name></type> <name pos:line="3" pos:column="37">mode<pos:position pos:line="3" pos:column="41"/></name></decl></parameter>,
			   <parameter><decl><type><name pos:line="4" pos:column="28">void<pos:position pos:line="4" pos:column="32"/></name> <modifier pos:line="4" pos:column="33">*<pos:position pos:line="4" pos:column="34"/></modifier></type><name pos:line="4" pos:column="34">buf<pos:position pos:line="4" pos:column="37"/></name></decl></parameter>,
			   <parameter><decl><type><name pos:line="5" pos:column="28">unsigned<pos:position pos:line="5" pos:column="36"/></name> <name pos:line="5" pos:column="37">long<pos:position pos:line="5" pos:column="41"/></name></type> <name pos:line="5" pos:column="42">size<pos:position pos:line="5" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="47"/></parameter_list>
 <block pos:line="6" pos:column="2">{
	 <decl_stmt><decl><type><name><name pos:line="7" pos:column="10">struct<pos:position pos:line="7" pos:column="16"/></name> <name pos:line="7" pos:column="17">stat<pos:position pos:line="7" pos:column="21"/></name></name></type> <name pos:line="7" pos:column="22">st<pos:position pos:line="7" pos:column="24"/></name></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>
	 <decl_stmt><decl><type><name><name pos:line="8" pos:column="10">struct<pos:position pos:line="8" pos:column="16"/></name> <name pos:line="8" pos:column="17">cache_entry<pos:position pos:line="8" pos:column="28"/></name></name> <modifier pos:line="8" pos:column="29">*<pos:position pos:line="8" pos:column="30"/></modifier></type><name pos:line="8" pos:column="30">ce<pos:position pos:line="8" pos:column="32"/></name></decl>;<pos:position pos:line="8" pos:column="33"/></decl_stmt>
	 <decl_stmt><decl><type><name pos:line="9" pos:column="10">int<pos:position pos:line="9" pos:column="13"/></name></type> <name pos:line="9" pos:column="14">namelen<pos:position pos:line="9" pos:column="21"/></name> <init pos:line="9" pos:column="22">= <expr><call><name pos:line="9" pos:column="24">strlen<pos:position pos:line="9" pos:column="30"/></name><argument_list pos:line="9" pos:column="30">(<argument><expr><name pos:line="9" pos:column="31">path<pos:position pos:line="9" pos:column="35"/></name></expr></argument>)<pos:position pos:line="9" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="37"/></decl_stmt>
	 <decl_stmt><decl><type><name pos:line="10" pos:column="10">unsigned<pos:position pos:line="10" pos:column="18"/></name></type> <name pos:line="10" pos:column="19">ce_size<pos:position pos:line="10" pos:column="26"/></name> <init pos:line="10" pos:column="27">= <expr><call><name pos:line="10" pos:column="29">cache_entry_size<pos:position pos:line="10" pos:column="45"/></name><argument_list pos:line="10" pos:column="45">(<argument><expr><name pos:line="10" pos:column="46">namelen<pos:position pos:line="10" pos:column="53"/></name></expr></argument>)<pos:position pos:line="10" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="55"/></decl_stmt>

	 <if pos:line="12" pos:column="10">if <condition pos:line="12" pos:column="13">(<expr><operator pos:line="12" pos:column="14">!<pos:position pos:line="12" pos:column="15"/></operator><name><name pos:line="12" pos:column="15">state<pos:position pos:line="12" pos:column="20"/></name><operator pos:line="12" pos:column="20">-&gt;<pos:position pos:line="12" pos:column="25"/></operator><name pos:line="12" pos:column="22">update_index<pos:position pos:line="12" pos:column="34"/></name></name></expr>)<pos:position pos:line="12" pos:column="35"/></condition><then pos:line="12" pos:column="35">
		 <block type="pseudo"><return pos:line="13" pos:column="18">return <expr><literal type="number" pos:line="13" pos:column="25">0<pos:position pos:line="13" pos:column="26"/></literal></expr>;<pos:position pos:line="13" pos:column="27"/></return></block></then></if>

	 <expr_stmt><expr><name pos:line="15" pos:column="10">ce<pos:position pos:line="15" pos:column="12"/></name> <operator pos:line="15" pos:column="13">=<pos:position pos:line="15" pos:column="14"/></operator> <call><name pos:line="15" pos:column="15">xcalloc<pos:position pos:line="15" pos:column="22"/></name><argument_list pos:line="15" pos:column="22">(<argument><expr><literal type="number" pos:line="15" pos:column="23">1<pos:position pos:line="15" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="26">ce_size<pos:position pos:line="15" pos:column="33"/></name></expr></argument>)<pos:position pos:line="15" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="35"/></expr_stmt>
	 <expr_stmt><expr><call><name pos:line="16" pos:column="10">memcpy<pos:position pos:line="16" pos:column="16"/></name><argument_list pos:line="16" pos:column="16">(<argument><expr><name><name pos:line="16" pos:column="17">ce<pos:position pos:line="16" pos:column="19"/></name><operator pos:line="16" pos:column="19">-&gt;<pos:position pos:line="16" pos:column="24"/></operator><name pos:line="16" pos:column="21">name<pos:position pos:line="16" pos:column="25"/></name></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="27">path<pos:position pos:line="16" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="33">namelen<pos:position pos:line="16" pos:column="40"/></name></expr></argument>)<pos:position pos:line="16" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="42"/></expr_stmt>
	 <expr_stmt><expr><name><name pos:line="17" pos:column="10">ce<pos:position pos:line="17" pos:column="12"/></name><operator pos:line="17" pos:column="12">-&gt;<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="14">ce_mode<pos:position pos:line="17" pos:column="21"/></name></name> <operator pos:line="17" pos:column="22">=<pos:position pos:line="17" pos:column="23"/></operator> <call><name pos:line="17" pos:column="24">create_ce_mode<pos:position pos:line="17" pos:column="38"/></name><argument_list pos:line="17" pos:column="38">(<argument><expr><name pos:line="17" pos:column="39">mode<pos:position pos:line="17" pos:column="43"/></name></expr></argument>)<pos:position pos:line="17" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="45"/></expr_stmt>
	 <expr_stmt><expr><name><name pos:line="18" pos:column="10">ce<pos:position pos:line="18" pos:column="12"/></name><operator pos:line="18" pos:column="12">-&gt;<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="14">ce_flags<pos:position pos:line="18" pos:column="22"/></name></name> <operator pos:line="18" pos:column="23">=<pos:position pos:line="18" pos:column="24"/></operator> <call><name pos:line="18" pos:column="25">create_ce_flags<pos:position pos:line="18" pos:column="40"/></name><argument_list pos:line="18" pos:column="40">(<argument><expr><literal type="number" pos:line="18" pos:column="41">0<pos:position pos:line="18" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="44"/></expr_stmt>
	 <expr_stmt><expr><name><name pos:line="19" pos:column="10">ce<pos:position pos:line="19" pos:column="12"/></name><operator pos:line="19" pos:column="12">-&gt;<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="14">ce_namelen<pos:position pos:line="19" pos:column="24"/></name></name> <operator pos:line="19" pos:column="25">=<pos:position pos:line="19" pos:column="26"/></operator> <name pos:line="19" pos:column="27">namelen<pos:position pos:line="19" pos:column="34"/></name></expr>;<pos:position pos:line="19" pos:column="35"/></expr_stmt>
	 <if pos:line="20" pos:column="10">if <condition pos:line="20" pos:column="13">(<expr><call><name pos:line="20" pos:column="14">S_ISGITLINK<pos:position pos:line="20" pos:column="25"/></name><argument_list pos:line="20" pos:column="25">(<argument><expr><name pos:line="20" pos:column="26">mode<pos:position pos:line="20" pos:column="30"/></name></expr></argument>)<pos:position pos:line="20" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="32"/></condition><then pos:line="20" pos:column="32"> <block pos:line="20" pos:column="33">{
		 <decl_stmt><decl><type><specifier pos:line="21" pos:column="18">const<pos:position pos:line="21" pos:column="23"/></specifier> <name pos:line="21" pos:column="24">char<pos:position pos:line="21" pos:column="28"/></name> <modifier pos:line="21" pos:column="29">*<pos:position pos:line="21" pos:column="30"/></modifier></type><name pos:line="21" pos:column="30">s<pos:position pos:line="21" pos:column="31"/></name></decl>;<pos:position pos:line="21" pos:column="32"/></decl_stmt>

		 <if pos:line="23" pos:column="18">if <condition pos:line="23" pos:column="21">(<expr><operator pos:line="23" pos:column="22">!<pos:position pos:line="23" pos:column="23"/></operator><call><name pos:line="23" pos:column="23">skip_prefix<pos:position pos:line="23" pos:column="34"/></name><argument_list pos:line="23" pos:column="34">(<argument><expr><name pos:line="23" pos:column="35">buf<pos:position pos:line="23" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="40">"Subproject commit "<pos:position pos:line="23" pos:column="60"/></literal></expr></argument>, <argument><expr><operator pos:line="23" pos:column="62">&amp;<pos:position pos:line="23" pos:column="67"/></operator><name pos:line="23" pos:column="63">s<pos:position pos:line="23" pos:column="64"/></name></expr></argument>)<pos:position pos:line="23" pos:column="65"/></argument_list></call> <operator pos:line="23" pos:column="66">||<pos:position pos:line="23" pos:column="68"/></operator>
		     <call><name pos:line="24" pos:column="22">get_oid_hex<pos:position pos:line="24" pos:column="33"/></name><argument_list pos:line="24" pos:column="33">(<argument><expr><name pos:line="24" pos:column="34">s<pos:position pos:line="24" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="37">&amp;<pos:position pos:line="24" pos:column="42"/></operator><name><name pos:line="24" pos:column="38">ce<pos:position pos:line="24" pos:column="40"/></name><operator pos:line="24" pos:column="40">-&gt;<pos:position pos:line="24" pos:column="45"/></operator><name pos:line="24" pos:column="42">oid<pos:position pos:line="24" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="47"/></condition><then pos:line="24" pos:column="47"> <block pos:line="24" pos:column="48">{
			<expr_stmt><expr><call><name pos:line="25" pos:column="25">free<pos:position pos:line="25" pos:column="29"/></name><argument_list pos:line="25" pos:column="29">(<argument><expr><name pos:line="25" pos:column="30">ce<pos:position pos:line="25" pos:column="32"/></name></expr></argument>)<pos:position pos:line="25" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="34"/></expr_stmt>
			<return pos:line="26" pos:column="25">return <expr><call><name pos:line="26" pos:column="32">error<pos:position pos:line="26" pos:column="37"/></name><argument_list pos:line="26" pos:column="37">(<argument><expr><call><name pos:line="26" pos:column="38">_<pos:position pos:line="26" pos:column="39"/></name><argument_list pos:line="26" pos:column="39">(<argument><expr><literal type="string" pos:line="26" pos:column="40">"corrupt patch for submodule %s"<pos:position pos:line="26" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="73"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="26" pos:column="75">path<pos:position pos:line="26" pos:column="79"/></name></expr></argument>)<pos:position pos:line="26" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="81"/></return>
		}<pos:position pos:line="27" pos:column="18"/></block></then></if>
	}<pos:position pos:line="28" pos:column="10"/></block></then> <else pos:line="28" pos:column="11">else <block pos:line="28" pos:column="16">{
		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><operator pos:line="29" pos:column="21">!<pos:position pos:line="29" pos:column="22"/></operator><name><name pos:line="29" pos:column="22">state<pos:position pos:line="29" pos:column="27"/></name><operator pos:line="29" pos:column="27">-&gt;<pos:position pos:line="29" pos:column="32"/></operator><name pos:line="29" pos:column="29">cached<pos:position pos:line="29" pos:column="35"/></name></name></expr>)<pos:position pos:line="29" pos:column="36"/></condition><then pos:line="29" pos:column="36"> <block pos:line="29" pos:column="37">{
			<if pos:line="30" pos:column="25">if <condition pos:line="30" pos:column="28">(<expr><call><name pos:line="30" pos:column="29">lstat<pos:position pos:line="30" pos:column="34"/></name><argument_list pos:line="30" pos:column="34">(<argument><expr><name pos:line="30" pos:column="35">path<pos:position pos:line="30" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="41">&amp;<pos:position pos:line="30" pos:column="46"/></operator><name pos:line="30" pos:column="42">st<pos:position pos:line="30" pos:column="44"/></name></expr></argument>)<pos:position pos:line="30" pos:column="45"/></argument_list></call> <operator pos:line="30" pos:column="46">&lt;<pos:position pos:line="30" pos:column="50"/></operator> <literal type="number" pos:line="30" pos:column="48">0<pos:position pos:line="30" pos:column="49"/></literal></expr>)<pos:position pos:line="30" pos:column="50"/></condition><then pos:line="30" pos:column="50"> <block pos:line="30" pos:column="51">{
				<expr_stmt><expr><call><name pos:line="31" pos:column="33">free<pos:position pos:line="31" pos:column="37"/></name><argument_list pos:line="31" pos:column="37">(<argument><expr><name pos:line="31" pos:column="38">ce<pos:position pos:line="31" pos:column="40"/></name></expr></argument>)<pos:position pos:line="31" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="42"/></expr_stmt>
				<return pos:line="32" pos:column="33">return <expr><call><name pos:line="32" pos:column="40">error_errno<pos:position pos:line="32" pos:column="51"/></name><argument_list pos:line="32" pos:column="51">(<argument><expr><call><name pos:line="32" pos:column="52">_<pos:position pos:line="32" pos:column="53"/></name><argument_list pos:line="32" pos:column="53">(<argument><expr><literal type="string" pos:line="32" pos:column="54">"unable to stat newly "<pos:position pos:line="32" pos:column="77"/></literal>
						     <literal type="string" pos:line="33" pos:column="54">"created file '%s'"<pos:position pos:line="33" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="74"/></argument_list></call></expr></argument>,
						   <argument><expr><name pos:line="34" pos:column="52">path<pos:position pos:line="34" pos:column="56"/></name></expr></argument>)<pos:position pos:line="34" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="58"/></return>
			}<pos:position pos:line="35" pos:column="26"/></block></then></if>
			<expr_stmt><expr><call><name pos:line="36" pos:column="25">fill_stat_cache_info<pos:position pos:line="36" pos:column="45"/></name><argument_list pos:line="36" pos:column="45">(<argument><expr><name pos:line="36" pos:column="46">ce<pos:position pos:line="36" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="50">&amp;<pos:position pos:line="36" pos:column="55"/></operator><name pos:line="36" pos:column="51">st<pos:position pos:line="36" pos:column="53"/></name></expr></argument>)<pos:position pos:line="36" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="55"/></expr_stmt>
		}<pos:position pos:line="37" pos:column="18"/></block></then></if>
		<if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><call><name pos:line="38" pos:column="21">write_sha1_file<pos:position pos:line="38" pos:column="36"/></name><argument_list pos:line="38" pos:column="36">(<argument><expr><name pos:line="38" pos:column="37">buf<pos:position pos:line="38" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="42">size<pos:position pos:line="38" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="48">blob_type<pos:position pos:line="38" pos:column="57"/></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="59">ce<pos:position pos:line="38" pos:column="61"/></name><operator pos:line="38" pos:column="61">-&gt;<pos:position pos:line="38" pos:column="66"/></operator><name pos:line="38" pos:column="63">oid<pos:position pos:line="38" pos:column="66"/></name><operator pos:line="38" pos:column="66">.<pos:position pos:line="38" pos:column="67"/></operator><name pos:line="38" pos:column="67">hash<pos:position pos:line="38" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="72"/></argument_list></call> <operator pos:line="38" pos:column="73">&lt;<pos:position pos:line="38" pos:column="77"/></operator> <literal type="number" pos:line="38" pos:column="75">0<pos:position pos:line="38" pos:column="76"/></literal></expr>)<pos:position pos:line="38" pos:column="77"/></condition><then pos:line="38" pos:column="77"> <block pos:line="38" pos:column="78">{
			<expr_stmt><expr><call><name pos:line="39" pos:column="25">free<pos:position pos:line="39" pos:column="29"/></name><argument_list pos:line="39" pos:column="29">(<argument><expr><name pos:line="39" pos:column="30">ce<pos:position pos:line="39" pos:column="32"/></name></expr></argument>)<pos:position pos:line="39" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="34"/></expr_stmt>
			<return pos:line="40" pos:column="25">return <expr><call><name pos:line="40" pos:column="32">error<pos:position pos:line="40" pos:column="37"/></name><argument_list pos:line="40" pos:column="37">(<argument><expr><call><name pos:line="40" pos:column="38">_<pos:position pos:line="40" pos:column="39"/></name><argument_list pos:line="40" pos:column="39">(<argument><expr><literal type="string" pos:line="40" pos:column="40">"unable to create backing store "<pos:position pos:line="40" pos:column="73"/></literal>
				       <literal type="string" pos:line="41" pos:column="40">"for newly created file %s"<pos:position pos:line="41" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="68"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="41" pos:column="70">path<pos:position pos:line="41" pos:column="74"/></name></expr></argument>)<pos:position pos:line="41" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="76"/></return>
		}<pos:position pos:line="42" pos:column="18"/></block></then></if>
	}<pos:position pos:line="43" pos:column="10"/></block></else></if>
	<if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><call><name pos:line="44" pos:column="13">add_cache_entry<pos:position pos:line="44" pos:column="28"/></name><argument_list pos:line="44" pos:column="28">(<argument><expr><name pos:line="44" pos:column="29">ce<pos:position pos:line="44" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="33">ADD_CACHE_OK_TO_ADD<pos:position pos:line="44" pos:column="52"/></name></expr></argument>)<pos:position pos:line="44" pos:column="53"/></argument_list></call> <operator pos:line="44" pos:column="54">&lt;<pos:position pos:line="44" pos:column="58"/></operator> <literal type="number" pos:line="44" pos:column="56">0<pos:position pos:line="44" pos:column="57"/></literal></expr>)<pos:position pos:line="44" pos:column="58"/></condition><then pos:line="44" pos:column="58"> <block pos:line="44" pos:column="59">{
		<expr_stmt><expr><call><name pos:line="45" pos:column="17">free<pos:position pos:line="45" pos:column="21"/></name><argument_list pos:line="45" pos:column="21">(<argument><expr><name pos:line="45" pos:column="22">ce<pos:position pos:line="45" pos:column="24"/></name></expr></argument>)<pos:position pos:line="45" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="26"/></expr_stmt>
		<return pos:line="46" pos:column="17">return <expr><call><name pos:line="46" pos:column="24">error<pos:position pos:line="46" pos:column="29"/></name><argument_list pos:line="46" pos:column="29">(<argument><expr><call><name pos:line="46" pos:column="30">_<pos:position pos:line="46" pos:column="31"/></name><argument_list pos:line="46" pos:column="31">(<argument><expr><literal type="string" pos:line="46" pos:column="32">"unable to add cache entry for %s"<pos:position pos:line="46" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="67"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="46" pos:column="69">path<pos:position pos:line="46" pos:column="73"/></name></expr></argument>)<pos:position pos:line="46" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="75"/></return>
	}<pos:position pos:line="47" pos:column="10"/></block></then></if>

	<return pos:line="49" pos:column="9">return <expr><literal type="number" pos:line="49" pos:column="16">0<pos:position pos:line="49" pos:column="17"/></literal></expr>;<pos:position pos:line="49" pos:column="18"/></return>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

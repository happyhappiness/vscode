<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1190_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">repo_submodule_init<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">repository<pos:position pos:line="1" pos:column="42"/></name></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">submodule<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>,
			<parameter><decl><type><name><name pos:line="2" pos:column="25">struct<pos:position pos:line="2" pos:column="31"/></name> <name pos:line="2" pos:column="32">repository<pos:position pos:line="2" pos:column="42"/></name></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">superproject<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>,
			<parameter><decl><type><specifier pos:line="3" pos:column="25">const<pos:position pos:line="3" pos:column="30"/></specifier> <name pos:line="3" pos:column="31">char<pos:position pos:line="3" pos:column="35"/></name> <modifier pos:line="3" pos:column="36">*<pos:position pos:line="3" pos:column="37"/></modifier></type><name pos:line="3" pos:column="37">path<pos:position pos:line="3" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="42"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name><name pos:line="5" pos:column="15">struct<pos:position pos:line="5" pos:column="21"/></name> <name pos:line="5" pos:column="22">submodule<pos:position pos:line="5" pos:column="31"/></name></name> <modifier pos:line="5" pos:column="32">*<pos:position pos:line="5" pos:column="33"/></modifier></type><name pos:line="5" pos:column="33">sub<pos:position pos:line="5" pos:column="36"/></name></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">strbuf<pos:position pos:line="6" pos:column="22"/></name></name></type> <name pos:line="6" pos:column="23">gitdir<pos:position pos:line="6" pos:column="29"/></name> <init pos:line="6" pos:column="30">= <expr><name pos:line="6" pos:column="32">STRBUF_INIT<pos:position pos:line="6" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">strbuf<pos:position pos:line="7" pos:column="22"/></name></name></type> <name pos:line="7" pos:column="23">worktree<pos:position pos:line="7" pos:column="31"/></name> <init pos:line="7" pos:column="32">= <expr><name pos:line="7" pos:column="34">STRBUF_INIT<pos:position pos:line="7" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">ret<pos:position pos:line="8" pos:column="16"/></name> <init pos:line="8" pos:column="17">= <expr><literal type="number" pos:line="8" pos:column="19">0<pos:position pos:line="8" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>

	<expr_stmt><expr><name pos:line="10" pos:column="9">sub<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">=<pos:position pos:line="10" pos:column="14"/></operator> <call><name pos:line="10" pos:column="15">submodule_from_cache<pos:position pos:line="10" pos:column="35"/></name><argument_list pos:line="10" pos:column="35">(<argument><expr><name pos:line="10" pos:column="36">superproject<pos:position pos:line="10" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="50">null_sha1<pos:position pos:line="10" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="61">path<pos:position pos:line="10" pos:column="65"/></name></expr></argument>)<pos:position pos:line="10" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="67"/></expr_stmt>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">sub<pos:position pos:line="11" pos:column="17"/></name></expr>)<pos:position pos:line="11" pos:column="18"/></condition><then pos:line="11" pos:column="18"> <block pos:line="11" pos:column="19">{
		<expr_stmt><expr><name pos:line="12" pos:column="17">ret<pos:position pos:line="12" pos:column="20"/></name> <operator pos:line="12" pos:column="21">=<pos:position pos:line="12" pos:column="22"/></operator> <operator pos:line="12" pos:column="23">-<pos:position pos:line="12" pos:column="24"/></operator><literal type="number" pos:line="12" pos:column="24">1<pos:position pos:line="12" pos:column="25"/></literal></expr>;<pos:position pos:line="12" pos:column="26"/></expr_stmt>
		<goto pos:line="13" pos:column="17">goto <name pos:line="13" pos:column="22">out<pos:position pos:line="13" pos:column="25"/></name>;<pos:position pos:line="13" pos:column="26"/></goto>
	}<pos:position pos:line="14" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="16" pos:column="9">strbuf_repo_worktree_path<pos:position pos:line="16" pos:column="34"/></name><argument_list pos:line="16" pos:column="34">(<argument><expr><operator pos:line="16" pos:column="35">&amp;<pos:position pos:line="16" pos:column="40"/></operator><name pos:line="16" pos:column="36">gitdir<pos:position pos:line="16" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="44">superproject<pos:position pos:line="16" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="58">"%s/.git"<pos:position pos:line="16" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="69">path<pos:position pos:line="16" pos:column="73"/></name></expr></argument>)<pos:position pos:line="16" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="75"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="17" pos:column="9">strbuf_repo_worktree_path<pos:position pos:line="17" pos:column="34"/></name><argument_list pos:line="17" pos:column="34">(<argument><expr><operator pos:line="17" pos:column="35">&amp;<pos:position pos:line="17" pos:column="40"/></operator><name pos:line="17" pos:column="36">worktree<pos:position pos:line="17" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="46">superproject<pos:position pos:line="17" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="60">"%s"<pos:position pos:line="17" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="66">path<pos:position pos:line="17" pos:column="70"/></name></expr></argument>)<pos:position pos:line="17" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="72"/></expr_stmt>

	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><call><name pos:line="19" pos:column="13">repo_init<pos:position pos:line="19" pos:column="22"/></name><argument_list pos:line="19" pos:column="22">(<argument><expr><name pos:line="19" pos:column="23">submodule<pos:position pos:line="19" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="34">gitdir<pos:position pos:line="19" pos:column="40"/></name><operator pos:line="19" pos:column="40">.<pos:position pos:line="19" pos:column="41"/></operator><name pos:line="19" pos:column="41">buf<pos:position pos:line="19" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="46">worktree<pos:position pos:line="19" pos:column="54"/></name><operator pos:line="19" pos:column="54">.<pos:position pos:line="19" pos:column="55"/></operator><name pos:line="19" pos:column="55">buf<pos:position pos:line="19" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="60"/></condition><then pos:line="19" pos:column="60"> <block pos:line="19" pos:column="61">{
		<comment type="block" pos:line="20" pos:column="17">/*
		 * If initilization fails then it may be due to the submodule
		 * not being populated in the superproject's worktree.  Instead
		 * we can try to initilize the submodule by finding it's gitdir
		 * in the superproject's 'modules' directory.  In this case the
		 * submodule would not have a worktree.
		 */</comment>
		<expr_stmt><expr><call><name pos:line="27" pos:column="17">strbuf_reset<pos:position pos:line="27" pos:column="29"/></name><argument_list pos:line="27" pos:column="29">(<argument><expr><operator pos:line="27" pos:column="30">&amp;<pos:position pos:line="27" pos:column="35"/></operator><name pos:line="27" pos:column="31">gitdir<pos:position pos:line="27" pos:column="37"/></name></expr></argument>)<pos:position pos:line="27" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="28" pos:column="17">strbuf_repo_git_path<pos:position pos:line="28" pos:column="37"/></name><argument_list pos:line="28" pos:column="37">(<argument><expr><operator pos:line="28" pos:column="38">&amp;<pos:position pos:line="28" pos:column="43"/></operator><name pos:line="28" pos:column="39">gitdir<pos:position pos:line="28" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="47">superproject<pos:position pos:line="28" pos:column="59"/></name></expr></argument>,
				     <argument><expr><literal type="string" pos:line="29" pos:column="38">"modules/%s"<pos:position pos:line="29" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="52">sub<pos:position pos:line="29" pos:column="55"/></name><operator pos:line="29" pos:column="55">-&gt;<pos:position pos:line="29" pos:column="60"/></operator><name pos:line="29" pos:column="57">name<pos:position pos:line="29" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="63"/></expr_stmt>

		<if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><call><name pos:line="31" pos:column="21">repo_init<pos:position pos:line="31" pos:column="30"/></name><argument_list pos:line="31" pos:column="30">(<argument><expr><name pos:line="31" pos:column="31">submodule<pos:position pos:line="31" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="42">gitdir<pos:position pos:line="31" pos:column="48"/></name><operator pos:line="31" pos:column="48">.<pos:position pos:line="31" pos:column="49"/></operator><name pos:line="31" pos:column="49">buf<pos:position pos:line="31" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="54">NULL<pos:position pos:line="31" pos:column="58"/></name></expr></argument>)<pos:position pos:line="31" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="60"/></condition><then pos:line="31" pos:column="60"> <block pos:line="31" pos:column="61">{
			<expr_stmt><expr><name pos:line="32" pos:column="25">ret<pos:position pos:line="32" pos:column="28"/></name> <operator pos:line="32" pos:column="29">=<pos:position pos:line="32" pos:column="30"/></operator> <operator pos:line="32" pos:column="31">-<pos:position pos:line="32" pos:column="32"/></operator><literal type="number" pos:line="32" pos:column="32">1<pos:position pos:line="32" pos:column="33"/></literal></expr>;<pos:position pos:line="32" pos:column="34"/></expr_stmt>
			<goto pos:line="33" pos:column="25">goto <name pos:line="33" pos:column="30">out<pos:position pos:line="33" pos:column="33"/></name>;<pos:position pos:line="33" pos:column="34"/></goto>
		}<pos:position pos:line="34" pos:column="18"/></block></then></if>
	}<pos:position pos:line="35" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name><name pos:line="37" pos:column="9">submodule<pos:position pos:line="37" pos:column="18"/></name><operator pos:line="37" pos:column="18">-&gt;<pos:position pos:line="37" pos:column="23"/></operator><name pos:line="37" pos:column="20">submodule_prefix<pos:position pos:line="37" pos:column="36"/></name></name> <operator pos:line="37" pos:column="37">=<pos:position pos:line="37" pos:column="38"/></operator> <call><name pos:line="37" pos:column="39">xstrfmt<pos:position pos:line="37" pos:column="46"/></name><argument_list pos:line="37" pos:column="46">(<argument><expr><literal type="string" pos:line="37" pos:column="47">"%s%s/"<pos:position pos:line="37" pos:column="54"/></literal></expr></argument>,
					      <argument><expr><ternary><condition><expr><name><name pos:line="38" pos:column="47">superproject<pos:position pos:line="38" pos:column="59"/></name><operator pos:line="38" pos:column="59">-&gt;<pos:position pos:line="38" pos:column="64"/></operator><name pos:line="38" pos:column="61">submodule_prefix<pos:position pos:line="38" pos:column="77"/></name></name></expr> ?<pos:position pos:line="38" pos:column="79"/></condition><then pos:line="38" pos:column="79">
					      <expr><name><name pos:line="39" pos:column="47">superproject<pos:position pos:line="39" pos:column="59"/></name><operator pos:line="39" pos:column="59">-&gt;<pos:position pos:line="39" pos:column="64"/></operator><name pos:line="39" pos:column="61">submodule_prefix<pos:position pos:line="39" pos:column="77"/></name></name></expr> <pos:position pos:line="39" pos:column="78"/></then><else pos:line="39" pos:column="78">:
					      <expr><literal type="string" pos:line="40" pos:column="47">""<pos:position pos:line="40" pos:column="49"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="40" pos:column="51">path<pos:position pos:line="40" pos:column="55"/></name></expr></argument>)<pos:position pos:line="40" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="57"/></expr_stmt>

<label><name pos:line="42" pos:column="1">out<pos:position pos:line="42" pos:column="4"/></name>:<pos:position pos:line="42" pos:column="5"/></label>
	<expr_stmt><expr><call><name pos:line="43" pos:column="9">strbuf_release<pos:position pos:line="43" pos:column="23"/></name><argument_list pos:line="43" pos:column="23">(<argument><expr><operator pos:line="43" pos:column="24">&amp;<pos:position pos:line="43" pos:column="29"/></operator><name pos:line="43" pos:column="25">gitdir<pos:position pos:line="43" pos:column="31"/></name></expr></argument>)<pos:position pos:line="43" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="44" pos:column="9">strbuf_release<pos:position pos:line="44" pos:column="23"/></name><argument_list pos:line="44" pos:column="23">(<argument><expr><operator pos:line="44" pos:column="24">&amp;<pos:position pos:line="44" pos:column="29"/></operator><name pos:line="44" pos:column="25">worktree<pos:position pos:line="44" pos:column="33"/></name></expr></argument>)<pos:position pos:line="44" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="35"/></expr_stmt>
	<return pos:line="45" pos:column="9">return <expr><name pos:line="45" pos:column="16">ret<pos:position pos:line="45" pos:column="19"/></name></expr>;<pos:position pos:line="45" pos:column="20"/></return>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

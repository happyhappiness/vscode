<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1552.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">create_bundle<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><name><name pos:line="1" pos:column="19">struct<pos:position pos:line="1" pos:column="25"/></name> <name pos:line="1" pos:column="26">bundle_header<pos:position pos:line="1" pos:column="39"/></name></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">header<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="49">const<pos:position pos:line="1" pos:column="54"/></specifier> <name pos:line="1" pos:column="55">char<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">path<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>,
		  <parameter><decl><type><name pos:line="2" pos:column="19">int<pos:position pos:line="2" pos:column="22"/></name></type> <name pos:line="2" pos:column="23">argc<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="29">const<pos:position pos:line="2" pos:column="34"/></specifier> <name pos:line="2" pos:column="35">char<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier><modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">argv<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="47"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="4" pos:column="9">static<pos:position pos:line="4" pos:column="15"/></specifier> <type><name><name pos:line="4" pos:column="16">struct<pos:position pos:line="4" pos:column="22"/></name> <name pos:line="4" pos:column="23">lock_file<pos:position pos:line="4" pos:column="32"/></name></name></type> <name pos:line="4" pos:column="33">lock<pos:position pos:line="4" pos:column="37"/></name></decl>;<pos:position pos:line="4" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">bundle_fd<pos:position pos:line="5" pos:column="22"/></name> <init pos:line="5" pos:column="23">= <expr><operator pos:line="5" pos:column="25">-<pos:position pos:line="5" pos:column="26"/></operator><literal type="number" pos:line="5" pos:column="26">1<pos:position pos:line="5" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">bundle_to_stdout<pos:position pos:line="6" pos:column="29"/></name></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">i<pos:position pos:line="7" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="16">ref_count<pos:position pos:line="7" pos:column="25"/></name> <init pos:line="7" pos:column="26">= <expr><literal type="number" pos:line="7" pos:column="28">0<pos:position pos:line="7" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">strbuf<pos:position pos:line="8" pos:column="22"/></name></name></type> <name pos:line="8" pos:column="23">buf<pos:position pos:line="8" pos:column="26"/></name> <init pos:line="8" pos:column="27">= <expr><name pos:line="8" pos:column="29">STRBUF_INIT<pos:position pos:line="8" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">rev_info<pos:position pos:line="9" pos:column="24"/></name></name></type> <name pos:line="9" pos:column="25">revs<pos:position pos:line="9" pos:column="29"/></name></decl>;<pos:position pos:line="9" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="10" pos:column="9">struct<pos:position pos:line="10" pos:column="15"/></name> <name pos:line="10" pos:column="16">child_process<pos:position pos:line="10" pos:column="29"/></name></name></type> <name pos:line="10" pos:column="30">rls<pos:position pos:line="10" pos:column="33"/></name></decl>;<pos:position pos:line="10" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">FILE<pos:position pos:line="11" pos:column="13"/></name> <modifier pos:line="11" pos:column="14">*<pos:position pos:line="11" pos:column="15"/></modifier></type><name pos:line="11" pos:column="15">rls_fout<pos:position pos:line="11" pos:column="23"/></name></decl>;<pos:position pos:line="11" pos:column="24"/></decl_stmt>

	<expr_stmt><expr><name pos:line="13" pos:column="9">bundle_to_stdout<pos:position pos:line="13" pos:column="25"/></name> <operator pos:line="13" pos:column="26">=<pos:position pos:line="13" pos:column="27"/></operator> <operator pos:line="13" pos:column="28">!<pos:position pos:line="13" pos:column="29"/></operator><call><name pos:line="13" pos:column="29">strcmp<pos:position pos:line="13" pos:column="35"/></name><argument_list pos:line="13" pos:column="35">(<argument><expr><name pos:line="13" pos:column="36">path<pos:position pos:line="13" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="42">"-"<pos:position pos:line="13" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="47"/></expr_stmt>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">bundle_to_stdout<pos:position pos:line="14" pos:column="29"/></name></expr>)<pos:position pos:line="14" pos:column="30"/></condition><then pos:line="14" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="17">bundle_fd<pos:position pos:line="15" pos:column="26"/></name> <operator pos:line="15" pos:column="27">=<pos:position pos:line="15" pos:column="28"/></operator> <literal type="number" pos:line="15" pos:column="29">1<pos:position pos:line="15" pos:column="30"/></literal></expr>;<pos:position pos:line="15" pos:column="31"/></expr_stmt></block></then>
	<else pos:line="16" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="17">bundle_fd<pos:position pos:line="17" pos:column="26"/></name> <operator pos:line="17" pos:column="27">=<pos:position pos:line="17" pos:column="28"/></operator> <call><name pos:line="17" pos:column="29">hold_lock_file_for_update<pos:position pos:line="17" pos:column="54"/></name><argument_list pos:line="17" pos:column="54">(<argument><expr><operator pos:line="17" pos:column="55">&amp;<pos:position pos:line="17" pos:column="60"/></operator><name pos:line="17" pos:column="56">lock<pos:position pos:line="17" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="62">path<pos:position pos:line="17" pos:column="66"/></name></expr></argument>,
						      <argument><expr><name pos:line="18" pos:column="55">LOCK_DIE_ON_ERROR<pos:position pos:line="18" pos:column="72"/></name></expr></argument>)<pos:position pos:line="18" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="74"/></expr_stmt></block></else></if>

	<comment type="block" pos:line="20" pos:column="9">/* write signature */</comment>
	<expr_stmt><expr><call><name pos:line="21" pos:column="9">write_or_die<pos:position pos:line="21" pos:column="21"/></name><argument_list pos:line="21" pos:column="21">(<argument><expr><name pos:line="21" pos:column="22">bundle_fd<pos:position pos:line="21" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="33">bundle_signature<pos:position pos:line="21" pos:column="49"/></name></expr></argument>, <argument><expr><call><name pos:line="21" pos:column="51">strlen<pos:position pos:line="21" pos:column="57"/></name><argument_list pos:line="21" pos:column="57">(<argument><expr><name pos:line="21" pos:column="58">bundle_signature<pos:position pos:line="21" pos:column="74"/></name></expr></argument>)<pos:position pos:line="21" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="77"/></expr_stmt>

	<comment type="block" pos:line="23" pos:column="9">/* init revs to list objects for pack-objects later */</comment>
	<expr_stmt><expr><name pos:line="24" pos:column="9">save_commit_buffer<pos:position pos:line="24" pos:column="27"/></name> <operator pos:line="24" pos:column="28">=<pos:position pos:line="24" pos:column="29"/></operator> <literal type="number" pos:line="24" pos:column="30">0<pos:position pos:line="24" pos:column="31"/></literal></expr>;<pos:position pos:line="24" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="25" pos:column="9">init_revisions<pos:position pos:line="25" pos:column="23"/></name><argument_list pos:line="25" pos:column="23">(<argument><expr><operator pos:line="25" pos:column="24">&amp;<pos:position pos:line="25" pos:column="29"/></operator><name pos:line="25" pos:column="25">revs<pos:position pos:line="25" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="31">NULL<pos:position pos:line="25" pos:column="35"/></name></expr></argument>)<pos:position pos:line="25" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="37"/></expr_stmt>

	<comment type="block" pos:line="27" pos:column="9">/* write prerequisites */</comment>
	<expr_stmt><expr><call><name pos:line="28" pos:column="9">memset<pos:position pos:line="28" pos:column="15"/></name><argument_list pos:line="28" pos:column="15">(<argument><expr><operator pos:line="28" pos:column="16">&amp;<pos:position pos:line="28" pos:column="21"/></operator><name pos:line="28" pos:column="17">rls<pos:position pos:line="28" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="22">0<pos:position pos:line="28" pos:column="23"/></literal></expr></argument>, <argument><expr><sizeof pos:line="28" pos:column="25">sizeof<argument_list pos:line="28" pos:column="31">(<argument><expr><name pos:line="28" pos:column="32">rls<pos:position pos:line="28" pos:column="35"/></name></expr></argument>)<pos:position pos:line="28" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="28" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="29" pos:column="9">argv_array_pushl<pos:position pos:line="29" pos:column="25"/></name><argument_list pos:line="29" pos:column="25">(<argument><expr><operator pos:line="29" pos:column="26">&amp;<pos:position pos:line="29" pos:column="31"/></operator><name><name pos:line="29" pos:column="27">rls<pos:position pos:line="29" pos:column="30"/></name><operator pos:line="29" pos:column="30">.<pos:position pos:line="29" pos:column="31"/></operator><name pos:line="29" pos:column="31">args<pos:position pos:line="29" pos:column="35"/></name></name></expr></argument>,
			 <argument><expr><literal type="string" pos:line="30" pos:column="26">"rev-list"<pos:position pos:line="30" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="38">"--boundary"<pos:position pos:line="30" pos:column="50"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="52">"--pretty=oneline"<pos:position pos:line="30" pos:column="70"/></literal></expr></argument>,
			 <argument><expr><name pos:line="31" pos:column="26">NULL<pos:position pos:line="31" pos:column="30"/></name></expr></argument>)<pos:position pos:line="31" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="32"/></expr_stmt>
	<for pos:line="32" pos:column="9">for <control pos:line="32" pos:column="13">(<init><expr><name pos:line="32" pos:column="14">i<pos:position pos:line="32" pos:column="15"/></name> <operator pos:line="32" pos:column="16">=<pos:position pos:line="32" pos:column="17"/></operator> <literal type="number" pos:line="32" pos:column="18">1<pos:position pos:line="32" pos:column="19"/></literal></expr>;<pos:position pos:line="32" pos:column="20"/></init> <condition><expr><name pos:line="32" pos:column="21">i<pos:position pos:line="32" pos:column="22"/></name> <operator pos:line="32" pos:column="23">&lt;<pos:position pos:line="32" pos:column="27"/></operator> <name pos:line="32" pos:column="25">argc<pos:position pos:line="32" pos:column="29"/></name></expr>;<pos:position pos:line="32" pos:column="30"/></condition> <incr><expr><name pos:line="32" pos:column="31">i<pos:position pos:line="32" pos:column="32"/></name><operator pos:line="32" pos:column="32">++<pos:position pos:line="32" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="32" pos:column="35"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="33" pos:column="17">argv_array_push<pos:position pos:line="33" pos:column="32"/></name><argument_list pos:line="33" pos:column="32">(<argument><expr><operator pos:line="33" pos:column="33">&amp;<pos:position pos:line="33" pos:column="38"/></operator><name><name pos:line="33" pos:column="34">rls<pos:position pos:line="33" pos:column="37"/></name><operator pos:line="33" pos:column="37">.<pos:position pos:line="33" pos:column="38"/></operator><name pos:line="33" pos:column="38">args<pos:position pos:line="33" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="44">argv<pos:position pos:line="33" pos:column="48"/></name><index pos:line="33" pos:column="48">[<expr><name pos:line="33" pos:column="49">i<pos:position pos:line="33" pos:column="50"/></name></expr>]<pos:position pos:line="33" pos:column="51"/></index></name></expr></argument>)<pos:position pos:line="33" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="53"/></expr_stmt></block></for>
	<expr_stmt><expr><name><name pos:line="34" pos:column="9">rls<pos:position pos:line="34" pos:column="12"/></name><operator pos:line="34" pos:column="12">.<pos:position pos:line="34" pos:column="13"/></operator><name pos:line="34" pos:column="13">out<pos:position pos:line="34" pos:column="16"/></name></name> <operator pos:line="34" pos:column="17">=<pos:position pos:line="34" pos:column="18"/></operator> <operator pos:line="34" pos:column="19">-<pos:position pos:line="34" pos:column="20"/></operator><literal type="number" pos:line="34" pos:column="20">1<pos:position pos:line="34" pos:column="21"/></literal></expr>;<pos:position pos:line="34" pos:column="22"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="35" pos:column="9">rls<pos:position pos:line="35" pos:column="12"/></name><operator pos:line="35" pos:column="12">.<pos:position pos:line="35" pos:column="13"/></operator><name pos:line="35" pos:column="13">git_cmd<pos:position pos:line="35" pos:column="20"/></name></name> <operator pos:line="35" pos:column="21">=<pos:position pos:line="35" pos:column="22"/></operator> <literal type="number" pos:line="35" pos:column="23">1<pos:position pos:line="35" pos:column="24"/></literal></expr>;<pos:position pos:line="35" pos:column="25"/></expr_stmt>
	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><call><name pos:line="36" pos:column="13">start_command<pos:position pos:line="36" pos:column="26"/></name><argument_list pos:line="36" pos:column="26">(<argument><expr><operator pos:line="36" pos:column="27">&amp;<pos:position pos:line="36" pos:column="32"/></operator><name pos:line="36" pos:column="28">rls<pos:position pos:line="36" pos:column="31"/></name></expr></argument>)<pos:position pos:line="36" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="33"/></condition><then pos:line="36" pos:column="33">
		<block type="pseudo"><return pos:line="37" pos:column="17">return <expr><operator pos:line="37" pos:column="24">-<pos:position pos:line="37" pos:column="25"/></operator><literal type="number" pos:line="37" pos:column="25">1<pos:position pos:line="37" pos:column="26"/></literal></expr>;<pos:position pos:line="37" pos:column="27"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="38" pos:column="9">rls_fout<pos:position pos:line="38" pos:column="17"/></name> <operator pos:line="38" pos:column="18">=<pos:position pos:line="38" pos:column="19"/></operator> <call><name pos:line="38" pos:column="20">xfdopen<pos:position pos:line="38" pos:column="27"/></name><argument_list pos:line="38" pos:column="27">(<argument><expr><name><name pos:line="38" pos:column="28">rls<pos:position pos:line="38" pos:column="31"/></name><operator pos:line="38" pos:column="31">.<pos:position pos:line="38" pos:column="32"/></operator><name pos:line="38" pos:column="32">out<pos:position pos:line="38" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="37">"r"<pos:position pos:line="38" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="42"/></expr_stmt>
	<while pos:line="39" pos:column="9">while <condition pos:line="39" pos:column="15">(<expr><call><name pos:line="39" pos:column="16">strbuf_getwholeline<pos:position pos:line="39" pos:column="35"/></name><argument_list pos:line="39" pos:column="35">(<argument><expr><operator pos:line="39" pos:column="36">&amp;<pos:position pos:line="39" pos:column="41"/></operator><name pos:line="39" pos:column="37">buf<pos:position pos:line="39" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="42">rls_fout<pos:position pos:line="39" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="39" pos:column="52">'\n'<pos:position pos:line="39" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="57"/></argument_list></call> <operator pos:line="39" pos:column="58">!=<pos:position pos:line="39" pos:column="60"/></operator> <name pos:line="39" pos:column="61">EOF<pos:position pos:line="39" pos:column="64"/></name></expr>)<pos:position pos:line="39" pos:column="65"/></condition> <block pos:line="39" pos:column="66">{
		<decl_stmt><decl><type><name pos:line="40" pos:column="17">unsigned<pos:position pos:line="40" pos:column="25"/></name> <name pos:line="40" pos:column="26">char<pos:position pos:line="40" pos:column="30"/></name></type> <name><name pos:line="40" pos:column="31">sha1<pos:position pos:line="40" pos:column="35"/></name><index pos:line="40" pos:column="35">[<expr><literal type="number" pos:line="40" pos:column="36">20<pos:position pos:line="40" pos:column="38"/></literal></expr>]<pos:position pos:line="40" pos:column="39"/></index></name></decl>;<pos:position pos:line="40" pos:column="40"/></decl_stmt>
		<if pos:line="41" pos:column="17">if <condition pos:line="41" pos:column="20">(<expr><name><name pos:line="41" pos:column="21">buf<pos:position pos:line="41" pos:column="24"/></name><operator pos:line="41" pos:column="24">.<pos:position pos:line="41" pos:column="25"/></operator><name pos:line="41" pos:column="25">len<pos:position pos:line="41" pos:column="28"/></name></name> <operator pos:line="41" pos:column="29">&gt;<pos:position pos:line="41" pos:column="33"/></operator> <literal type="number" pos:line="41" pos:column="31">0<pos:position pos:line="41" pos:column="32"/></literal> <operator pos:line="41" pos:column="33">&amp;&amp;<pos:position pos:line="41" pos:column="43"/></operator> <name><name pos:line="41" pos:column="36">buf<pos:position pos:line="41" pos:column="39"/></name><operator pos:line="41" pos:column="39">.<pos:position pos:line="41" pos:column="40"/></operator><name pos:line="41" pos:column="40">buf<pos:position pos:line="41" pos:column="43"/></name><index pos:line="41" pos:column="43">[<expr><literal type="number" pos:line="41" pos:column="44">0<pos:position pos:line="41" pos:column="45"/></literal></expr>]<pos:position pos:line="41" pos:column="46"/></index></name> <operator pos:line="41" pos:column="47">==<pos:position pos:line="41" pos:column="49"/></operator> <literal type="char" pos:line="41" pos:column="50">'-'<pos:position pos:line="41" pos:column="53"/></literal></expr>)<pos:position pos:line="41" pos:column="54"/></condition><then pos:line="41" pos:column="54"> <block pos:line="41" pos:column="55">{
			<expr_stmt><expr><call><name pos:line="42" pos:column="25">write_or_die<pos:position pos:line="42" pos:column="37"/></name><argument_list pos:line="42" pos:column="37">(<argument><expr><name pos:line="42" pos:column="38">bundle_fd<pos:position pos:line="42" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="49">buf<pos:position pos:line="42" pos:column="52"/></name><operator pos:line="42" pos:column="52">.<pos:position pos:line="42" pos:column="53"/></operator><name pos:line="42" pos:column="53">buf<pos:position pos:line="42" pos:column="56"/></name></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="58">buf<pos:position pos:line="42" pos:column="61"/></name><operator pos:line="42" pos:column="61">.<pos:position pos:line="42" pos:column="62"/></operator><name pos:line="42" pos:column="62">len<pos:position pos:line="42" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="67"/></expr_stmt>
			<if pos:line="43" pos:column="25">if <condition pos:line="43" pos:column="28">(<expr><operator pos:line="43" pos:column="29">!<pos:position pos:line="43" pos:column="30"/></operator><call><name pos:line="43" pos:column="30">get_sha1_hex<pos:position pos:line="43" pos:column="42"/></name><argument_list pos:line="43" pos:column="42">(<argument><expr><name><name pos:line="43" pos:column="43">buf<pos:position pos:line="43" pos:column="46"/></name><operator pos:line="43" pos:column="46">.<pos:position pos:line="43" pos:column="47"/></operator><name pos:line="43" pos:column="47">buf<pos:position pos:line="43" pos:column="50"/></name></name> <operator pos:line="43" pos:column="51">+<pos:position pos:line="43" pos:column="52"/></operator> <literal type="number" pos:line="43" pos:column="53">1<pos:position pos:line="43" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="56">sha1<pos:position pos:line="43" pos:column="60"/></name></expr></argument>)<pos:position pos:line="43" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="62"/></condition><then pos:line="43" pos:column="62"> <block pos:line="43" pos:column="63">{
				<decl_stmt><decl><type><name><name pos:line="44" pos:column="33">struct<pos:position pos:line="44" pos:column="39"/></name> <name pos:line="44" pos:column="40">object<pos:position pos:line="44" pos:column="46"/></name></name> <modifier pos:line="44" pos:column="47">*<pos:position pos:line="44" pos:column="48"/></modifier></type><name pos:line="44" pos:column="48">object<pos:position pos:line="44" pos:column="54"/></name> <init pos:line="44" pos:column="55">= <expr><call><name pos:line="44" pos:column="57">parse_object_or_die<pos:position pos:line="44" pos:column="76"/></name><argument_list pos:line="44" pos:column="76">(<argument><expr><name pos:line="44" pos:column="77">sha1<pos:position pos:line="44" pos:column="81"/></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="83">buf<pos:position pos:line="44" pos:column="86"/></name><operator pos:line="44" pos:column="86">.<pos:position pos:line="44" pos:column="87"/></operator><name pos:line="44" pos:column="87">buf<pos:position pos:line="44" pos:column="90"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="91"/></argument_list></call></expr></init></decl>;<pos:position pos:line="44" pos:column="92"/></decl_stmt>
				<expr_stmt><expr><name><name pos:line="45" pos:column="33">object<pos:position pos:line="45" pos:column="39"/></name><operator pos:line="45" pos:column="39">-&gt;<pos:position pos:line="45" pos:column="44"/></operator><name pos:line="45" pos:column="41">flags<pos:position pos:line="45" pos:column="46"/></name></name> <operator pos:line="45" pos:column="47">|=<pos:position pos:line="45" pos:column="49"/></operator> <name pos:line="45" pos:column="50">UNINTERESTING<pos:position pos:line="45" pos:column="63"/></name></expr>;<pos:position pos:line="45" pos:column="64"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="46" pos:column="33">add_pending_object<pos:position pos:line="46" pos:column="51"/></name><argument_list pos:line="46" pos:column="51">(<argument><expr><operator pos:line="46" pos:column="52">&amp;<pos:position pos:line="46" pos:column="57"/></operator><name pos:line="46" pos:column="53">revs<pos:position pos:line="46" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="59">object<pos:position pos:line="46" pos:column="65"/></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="67">buf<pos:position pos:line="46" pos:column="70"/></name><operator pos:line="46" pos:column="70">.<pos:position pos:line="46" pos:column="71"/></operator><name pos:line="46" pos:column="71">buf<pos:position pos:line="46" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="76"/></expr_stmt>
			}<pos:position pos:line="47" pos:column="26"/></block></then></if>
		}<pos:position pos:line="48" pos:column="18"/></block></then> <elseif pos:line="48" pos:column="19">else <if pos:line="48" pos:column="24">if <condition pos:line="48" pos:column="27">(<expr><operator pos:line="48" pos:column="28">!<pos:position pos:line="48" pos:column="29"/></operator><call><name pos:line="48" pos:column="29">get_sha1_hex<pos:position pos:line="48" pos:column="41"/></name><argument_list pos:line="48" pos:column="41">(<argument><expr><name><name pos:line="48" pos:column="42">buf<pos:position pos:line="48" pos:column="45"/></name><operator pos:line="48" pos:column="45">.<pos:position pos:line="48" pos:column="46"/></operator><name pos:line="48" pos:column="46">buf<pos:position pos:line="48" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="51">sha1<pos:position pos:line="48" pos:column="55"/></name></expr></argument>)<pos:position pos:line="48" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="57"/></condition><then pos:line="48" pos:column="57"> <block pos:line="48" pos:column="58">{
			<decl_stmt><decl><type><name><name pos:line="49" pos:column="25">struct<pos:position pos:line="49" pos:column="31"/></name> <name pos:line="49" pos:column="32">object<pos:position pos:line="49" pos:column="38"/></name></name> <modifier pos:line="49" pos:column="39">*<pos:position pos:line="49" pos:column="40"/></modifier></type><name pos:line="49" pos:column="40">object<pos:position pos:line="49" pos:column="46"/></name> <init pos:line="49" pos:column="47">= <expr><call><name pos:line="49" pos:column="49">parse_object_or_die<pos:position pos:line="49" pos:column="68"/></name><argument_list pos:line="49" pos:column="68">(<argument><expr><name pos:line="49" pos:column="69">sha1<pos:position pos:line="49" pos:column="73"/></name></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="75">buf<pos:position pos:line="49" pos:column="78"/></name><operator pos:line="49" pos:column="78">.<pos:position pos:line="49" pos:column="79"/></operator><name pos:line="49" pos:column="79">buf<pos:position pos:line="49" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="83"/></argument_list></call></expr></init></decl>;<pos:position pos:line="49" pos:column="84"/></decl_stmt>
			<expr_stmt><expr><name><name pos:line="50" pos:column="25">object<pos:position pos:line="50" pos:column="31"/></name><operator pos:line="50" pos:column="31">-&gt;<pos:position pos:line="50" pos:column="36"/></operator><name pos:line="50" pos:column="33">flags<pos:position pos:line="50" pos:column="38"/></name></name> <operator pos:line="50" pos:column="39">|=<pos:position pos:line="50" pos:column="41"/></operator> <name pos:line="50" pos:column="42">SHOWN<pos:position pos:line="50" pos:column="47"/></name></expr>;<pos:position pos:line="50" pos:column="48"/></expr_stmt>
		}<pos:position pos:line="51" pos:column="18"/></block></then></if></elseif></if>
	}<pos:position pos:line="52" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="53" pos:column="9">strbuf_release<pos:position pos:line="53" pos:column="23"/></name><argument_list pos:line="53" pos:column="23">(<argument><expr><operator pos:line="53" pos:column="24">&amp;<pos:position pos:line="53" pos:column="29"/></operator><name pos:line="53" pos:column="25">buf<pos:position pos:line="53" pos:column="28"/></name></expr></argument>)<pos:position pos:line="53" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="54" pos:column="9">fclose<pos:position pos:line="54" pos:column="15"/></name><argument_list pos:line="54" pos:column="15">(<argument><expr><name pos:line="54" pos:column="16">rls_fout<pos:position pos:line="54" pos:column="24"/></name></expr></argument>)<pos:position pos:line="54" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="26"/></expr_stmt>
	<if pos:line="55" pos:column="9">if <condition pos:line="55" pos:column="12">(<expr><call><name pos:line="55" pos:column="13">finish_command<pos:position pos:line="55" pos:column="27"/></name><argument_list pos:line="55" pos:column="27">(<argument><expr><operator pos:line="55" pos:column="28">&amp;<pos:position pos:line="55" pos:column="33"/></operator><name pos:line="55" pos:column="29">rls<pos:position pos:line="55" pos:column="32"/></name></expr></argument>)<pos:position pos:line="55" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="55" pos:column="34"/></condition><then pos:line="55" pos:column="34">
		<block type="pseudo"><return pos:line="56" pos:column="17">return <expr><call><name pos:line="56" pos:column="24">error<pos:position pos:line="56" pos:column="29"/></name><argument_list pos:line="56" pos:column="29">(<argument><expr><call><name pos:line="56" pos:column="30">_<pos:position pos:line="56" pos:column="31"/></name><argument_list pos:line="56" pos:column="31">(<argument><expr><literal type="string" pos:line="56" pos:column="32">"rev-list died"<pos:position pos:line="56" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="56" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="50"/></return></block></then></if>

	<comment type="block" pos:line="58" pos:column="9">/* write references */</comment>
	<expr_stmt><expr><name pos:line="59" pos:column="9">argc<pos:position pos:line="59" pos:column="13"/></name> <operator pos:line="59" pos:column="14">=<pos:position pos:line="59" pos:column="15"/></operator> <call><name pos:line="59" pos:column="16">setup_revisions<pos:position pos:line="59" pos:column="31"/></name><argument_list pos:line="59" pos:column="31">(<argument><expr><name pos:line="59" pos:column="32">argc<pos:position pos:line="59" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="38">argv<pos:position pos:line="59" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="59" pos:column="44">&amp;<pos:position pos:line="59" pos:column="49"/></operator><name pos:line="59" pos:column="45">revs<pos:position pos:line="59" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="51">NULL<pos:position pos:line="59" pos:column="55"/></name></expr></argument>)<pos:position pos:line="59" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="57"/></expr_stmt>

	<if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><name pos:line="61" pos:column="13">argc<pos:position pos:line="61" pos:column="17"/></name> <operator pos:line="61" pos:column="18">&gt;<pos:position pos:line="61" pos:column="22"/></operator> <literal type="number" pos:line="61" pos:column="20">1<pos:position pos:line="61" pos:column="21"/></literal></expr>)<pos:position pos:line="61" pos:column="22"/></condition><then pos:line="61" pos:column="22">
		<block type="pseudo"><return pos:line="62" pos:column="17">return <expr><call><name pos:line="62" pos:column="24">error<pos:position pos:line="62" pos:column="29"/></name><argument_list pos:line="62" pos:column="29">(<argument><expr><call><name pos:line="62" pos:column="30">_<pos:position pos:line="62" pos:column="31"/></name><argument_list pos:line="62" pos:column="31">(<argument><expr><literal type="string" pos:line="62" pos:column="32">"unrecognized argument: %s"<pos:position pos:line="62" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="60"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="62">argv<pos:position pos:line="62" pos:column="66"/></name><index pos:line="62" pos:column="66">[<expr><literal type="number" pos:line="62" pos:column="67">1<pos:position pos:line="62" pos:column="68"/></literal></expr>]<pos:position pos:line="62" pos:column="69"/></index></name></expr></argument>)<pos:position pos:line="62" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="71"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="64" pos:column="9">object_array_remove_duplicates<pos:position pos:line="64" pos:column="39"/></name><argument_list pos:line="64" pos:column="39">(<argument><expr><operator pos:line="64" pos:column="40">&amp;<pos:position pos:line="64" pos:column="45"/></operator><name><name pos:line="64" pos:column="41">revs<pos:position pos:line="64" pos:column="45"/></name><operator pos:line="64" pos:column="45">.<pos:position pos:line="64" pos:column="46"/></operator><name pos:line="64" pos:column="46">pending<pos:position pos:line="64" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="55"/></expr_stmt>

	<for pos:line="66" pos:column="9">for <control pos:line="66" pos:column="13">(<init><expr><name pos:line="66" pos:column="14">i<pos:position pos:line="66" pos:column="15"/></name> <operator pos:line="66" pos:column="16">=<pos:position pos:line="66" pos:column="17"/></operator> <literal type="number" pos:line="66" pos:column="18">0<pos:position pos:line="66" pos:column="19"/></literal></expr>;<pos:position pos:line="66" pos:column="20"/></init> <condition><expr><name pos:line="66" pos:column="21">i<pos:position pos:line="66" pos:column="22"/></name> <operator pos:line="66" pos:column="23">&lt;<pos:position pos:line="66" pos:column="27"/></operator> <name><name pos:line="66" pos:column="25">revs<pos:position pos:line="66" pos:column="29"/></name><operator pos:line="66" pos:column="29">.<pos:position pos:line="66" pos:column="30"/></operator><name pos:line="66" pos:column="30">pending<pos:position pos:line="66" pos:column="37"/></name><operator pos:line="66" pos:column="37">.<pos:position pos:line="66" pos:column="38"/></operator><name pos:line="66" pos:column="38">nr<pos:position pos:line="66" pos:column="40"/></name></name></expr>;<pos:position pos:line="66" pos:column="41"/></condition> <incr><expr><name pos:line="66" pos:column="42">i<pos:position pos:line="66" pos:column="43"/></name><operator pos:line="66" pos:column="43">++<pos:position pos:line="66" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="66" pos:column="46"/></control> <block pos:line="66" pos:column="47">{
		<decl_stmt><decl><type><name><name pos:line="67" pos:column="17">struct<pos:position pos:line="67" pos:column="23"/></name> <name pos:line="67" pos:column="24">object_array_entry<pos:position pos:line="67" pos:column="42"/></name></name> <modifier pos:line="67" pos:column="43">*<pos:position pos:line="67" pos:column="44"/></modifier></type><name pos:line="67" pos:column="44">e<pos:position pos:line="67" pos:column="45"/></name> <init pos:line="67" pos:column="46">= <expr><name><name pos:line="67" pos:column="48">revs<pos:position pos:line="67" pos:column="52"/></name><operator pos:line="67" pos:column="52">.<pos:position pos:line="67" pos:column="53"/></operator><name pos:line="67" pos:column="53">pending<pos:position pos:line="67" pos:column="60"/></name><operator pos:line="67" pos:column="60">.<pos:position pos:line="67" pos:column="61"/></operator><name pos:line="67" pos:column="61">objects<pos:position pos:line="67" pos:column="68"/></name></name> <operator pos:line="67" pos:column="69">+<pos:position pos:line="67" pos:column="70"/></operator> <name pos:line="67" pos:column="71">i<pos:position pos:line="67" pos:column="72"/></name></expr></init></decl>;<pos:position pos:line="67" pos:column="73"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="68" pos:column="17">unsigned<pos:position pos:line="68" pos:column="25"/></name> <name pos:line="68" pos:column="26">char<pos:position pos:line="68" pos:column="30"/></name></type> <name><name pos:line="68" pos:column="31">sha1<pos:position pos:line="68" pos:column="35"/></name><index pos:line="68" pos:column="35">[<expr><literal type="number" pos:line="68" pos:column="36">20<pos:position pos:line="68" pos:column="38"/></literal></expr>]<pos:position pos:line="68" pos:column="39"/></index></name></decl>;<pos:position pos:line="68" pos:column="40"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="69" pos:column="17">char<pos:position pos:line="69" pos:column="21"/></name> <modifier pos:line="69" pos:column="22">*<pos:position pos:line="69" pos:column="23"/></modifier></type><name pos:line="69" pos:column="23">ref<pos:position pos:line="69" pos:column="26"/></name></decl>;<pos:position pos:line="69" pos:column="27"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="70" pos:column="17">const<pos:position pos:line="70" pos:column="22"/></specifier> <name pos:line="70" pos:column="23">char<pos:position pos:line="70" pos:column="27"/></name> <modifier pos:line="70" pos:column="28">*<pos:position pos:line="70" pos:column="29"/></modifier></type><name pos:line="70" pos:column="29">display_ref<pos:position pos:line="70" pos:column="40"/></name></decl>;<pos:position pos:line="70" pos:column="41"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="71" pos:column="17">int<pos:position pos:line="71" pos:column="20"/></name></type> <name pos:line="71" pos:column="21">flag<pos:position pos:line="71" pos:column="25"/></name></decl>;<pos:position pos:line="71" pos:column="26"/></decl_stmt>

		<if pos:line="73" pos:column="17">if <condition pos:line="73" pos:column="20">(<expr><name><name pos:line="73" pos:column="21">e<pos:position pos:line="73" pos:column="22"/></name><operator pos:line="73" pos:column="22">-&gt;<pos:position pos:line="73" pos:column="27"/></operator><name pos:line="73" pos:column="24">item<pos:position pos:line="73" pos:column="28"/></name><operator pos:line="73" pos:column="28">-&gt;<pos:position pos:line="73" pos:column="33"/></operator><name pos:line="73" pos:column="30">flags<pos:position pos:line="73" pos:column="35"/></name></name> <operator pos:line="73" pos:column="36">&amp;<pos:position pos:line="73" pos:column="41"/></operator> <name pos:line="73" pos:column="38">UNINTERESTING<pos:position pos:line="73" pos:column="51"/></name></expr>)<pos:position pos:line="73" pos:column="52"/></condition><then pos:line="73" pos:column="52">
			<block type="pseudo"><continue pos:line="74" pos:column="25">continue;<pos:position pos:line="74" pos:column="34"/></continue></block></then></if>
		<if pos:line="75" pos:column="17">if <condition pos:line="75" pos:column="20">(<expr><call><name pos:line="75" pos:column="21">dwim_ref<pos:position pos:line="75" pos:column="29"/></name><argument_list pos:line="75" pos:column="29">(<argument><expr><name><name pos:line="75" pos:column="30">e<pos:position pos:line="75" pos:column="31"/></name><operator pos:line="75" pos:column="31">-&gt;<pos:position pos:line="75" pos:column="36"/></operator><name pos:line="75" pos:column="33">name<pos:position pos:line="75" pos:column="37"/></name></name></expr></argument>, <argument><expr><call><name pos:line="75" pos:column="39">strlen<pos:position pos:line="75" pos:column="45"/></name><argument_list pos:line="75" pos:column="45">(<argument><expr><name><name pos:line="75" pos:column="46">e<pos:position pos:line="75" pos:column="47"/></name><operator pos:line="75" pos:column="47">-&gt;<pos:position pos:line="75" pos:column="52"/></operator><name pos:line="75" pos:column="49">name<pos:position pos:line="75" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="75" pos:column="54"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="75" pos:column="56">sha1<pos:position pos:line="75" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="75" pos:column="62">&amp;<pos:position pos:line="75" pos:column="67"/></operator><name pos:line="75" pos:column="63">ref<pos:position pos:line="75" pos:column="66"/></name></expr></argument>)<pos:position pos:line="75" pos:column="67"/></argument_list></call> <operator pos:line="75" pos:column="68">!=<pos:position pos:line="75" pos:column="70"/></operator> <literal type="number" pos:line="75" pos:column="71">1<pos:position pos:line="75" pos:column="72"/></literal></expr>)<pos:position pos:line="75" pos:column="73"/></condition><then pos:line="75" pos:column="73">
			<block type="pseudo"><continue pos:line="76" pos:column="25">continue;<pos:position pos:line="76" pos:column="34"/></continue></block></then></if>
		<if pos:line="77" pos:column="17">if <condition pos:line="77" pos:column="20">(<expr><call><name pos:line="77" pos:column="21">read_ref_full<pos:position pos:line="77" pos:column="34"/></name><argument_list pos:line="77" pos:column="34">(<argument><expr><name><name pos:line="77" pos:column="35">e<pos:position pos:line="77" pos:column="36"/></name><operator pos:line="77" pos:column="36">-&gt;<pos:position pos:line="77" pos:column="41"/></operator><name pos:line="77" pos:column="38">name<pos:position pos:line="77" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="44">sha1<pos:position pos:line="77" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="77" pos:column="50">1<pos:position pos:line="77" pos:column="51"/></literal></expr></argument>, <argument><expr><operator pos:line="77" pos:column="53">&amp;<pos:position pos:line="77" pos:column="58"/></operator><name pos:line="77" pos:column="54">flag<pos:position pos:line="77" pos:column="58"/></name></expr></argument>)<pos:position pos:line="77" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="77" pos:column="60"/></condition><then pos:line="77" pos:column="60">
			<block type="pseudo"><expr_stmt><expr><name pos:line="78" pos:column="25">flag<pos:position pos:line="78" pos:column="29"/></name> <operator pos:line="78" pos:column="30">=<pos:position pos:line="78" pos:column="31"/></operator> <literal type="number" pos:line="78" pos:column="32">0<pos:position pos:line="78" pos:column="33"/></literal></expr>;<pos:position pos:line="78" pos:column="34"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="79" pos:column="17">display_ref<pos:position pos:line="79" pos:column="28"/></name> <operator pos:line="79" pos:column="29">=<pos:position pos:line="79" pos:column="30"/></operator> <ternary><condition><expr><operator pos:line="79" pos:column="31">(<pos:position pos:line="79" pos:column="32"/></operator><name pos:line="79" pos:column="32">flag<pos:position pos:line="79" pos:column="36"/></name> <operator pos:line="79" pos:column="37">&amp;<pos:position pos:line="79" pos:column="42"/></operator> <name pos:line="79" pos:column="39">REF_ISSYMREF<pos:position pos:line="79" pos:column="51"/></name><operator pos:line="79" pos:column="51">)<pos:position pos:line="79" pos:column="52"/></operator></expr> ?<pos:position pos:line="79" pos:column="54"/></condition><then pos:line="79" pos:column="54"> <expr><name><name pos:line="79" pos:column="55">e<pos:position pos:line="79" pos:column="56"/></name><operator pos:line="79" pos:column="56">-&gt;<pos:position pos:line="79" pos:column="61"/></operator><name pos:line="79" pos:column="58">name<pos:position pos:line="79" pos:column="62"/></name></name></expr> <pos:position pos:line="79" pos:column="63"/></then><else pos:line="79" pos:column="63">: <expr><name pos:line="79" pos:column="65">ref<pos:position pos:line="79" pos:column="68"/></name></expr></else></ternary></expr>;<pos:position pos:line="79" pos:column="69"/></expr_stmt>

		<if pos:line="81" pos:column="17">if <condition pos:line="81" pos:column="20">(<expr><name><name pos:line="81" pos:column="21">e<pos:position pos:line="81" pos:column="22"/></name><operator pos:line="81" pos:column="22">-&gt;<pos:position pos:line="81" pos:column="27"/></operator><name pos:line="81" pos:column="24">item<pos:position pos:line="81" pos:column="28"/></name><operator pos:line="81" pos:column="28">-&gt;<pos:position pos:line="81" pos:column="33"/></operator><name pos:line="81" pos:column="30">type<pos:position pos:line="81" pos:column="34"/></name></name> <operator pos:line="81" pos:column="35">==<pos:position pos:line="81" pos:column="37"/></operator> <name pos:line="81" pos:column="38">OBJ_TAG<pos:position pos:line="81" pos:column="45"/></name> <operator pos:line="81" pos:column="46">&amp;&amp;<pos:position pos:line="81" pos:column="56"/></operator>
				<operator pos:line="82" pos:column="33">!<pos:position pos:line="82" pos:column="34"/></operator><call><name pos:line="82" pos:column="34">is_tag_in_date_range<pos:position pos:line="82" pos:column="54"/></name><argument_list pos:line="82" pos:column="54">(<argument><expr><name><name pos:line="82" pos:column="55">e<pos:position pos:line="82" pos:column="56"/></name><operator pos:line="82" pos:column="56">-&gt;<pos:position pos:line="82" pos:column="61"/></operator><name pos:line="82" pos:column="58">item<pos:position pos:line="82" pos:column="62"/></name></name></expr></argument>, <argument><expr><operator pos:line="82" pos:column="64">&amp;<pos:position pos:line="82" pos:column="69"/></operator><name pos:line="82" pos:column="65">revs<pos:position pos:line="82" pos:column="69"/></name></expr></argument>)<pos:position pos:line="82" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="82" pos:column="71"/></condition><then pos:line="82" pos:column="71"> <block pos:line="82" pos:column="72">{
			<expr_stmt><expr><name><name pos:line="83" pos:column="25">e<pos:position pos:line="83" pos:column="26"/></name><operator pos:line="83" pos:column="26">-&gt;<pos:position pos:line="83" pos:column="31"/></operator><name pos:line="83" pos:column="28">item<pos:position pos:line="83" pos:column="32"/></name><operator pos:line="83" pos:column="32">-&gt;<pos:position pos:line="83" pos:column="37"/></operator><name pos:line="83" pos:column="34">flags<pos:position pos:line="83" pos:column="39"/></name></name> <operator pos:line="83" pos:column="40">|=<pos:position pos:line="83" pos:column="42"/></operator> <name pos:line="83" pos:column="43">UNINTERESTING<pos:position pos:line="83" pos:column="56"/></name></expr>;<pos:position pos:line="83" pos:column="57"/></expr_stmt>
			<continue pos:line="84" pos:column="25">continue;<pos:position pos:line="84" pos:column="34"/></continue>
		}<pos:position pos:line="85" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="87" pos:column="17">/*
		 * Make sure the refs we wrote out is correct; --max-count and
		 * other limiting options could have prevented all the tips
		 * from getting output.
		 *
		 * Non commit objects such as tags and blobs do not have
		 * this issue as they are not affected by those extra
		 * constraints.
		 */</comment>
		<if pos:line="96" pos:column="17">if <condition pos:line="96" pos:column="20">(<expr><operator pos:line="96" pos:column="21">!<pos:position pos:line="96" pos:column="22"/></operator><operator pos:line="96" pos:column="22">(<pos:position pos:line="96" pos:column="23"/></operator><name><name pos:line="96" pos:column="23">e<pos:position pos:line="96" pos:column="24"/></name><operator pos:line="96" pos:column="24">-&gt;<pos:position pos:line="96" pos:column="29"/></operator><name pos:line="96" pos:column="26">item<pos:position pos:line="96" pos:column="30"/></name><operator pos:line="96" pos:column="30">-&gt;<pos:position pos:line="96" pos:column="35"/></operator><name pos:line="96" pos:column="32">flags<pos:position pos:line="96" pos:column="37"/></name></name> <operator pos:line="96" pos:column="38">&amp;<pos:position pos:line="96" pos:column="43"/></operator> <name pos:line="96" pos:column="40">SHOWN<pos:position pos:line="96" pos:column="45"/></name><operator pos:line="96" pos:column="45">)<pos:position pos:line="96" pos:column="46"/></operator> <operator pos:line="96" pos:column="47">&amp;&amp;<pos:position pos:line="96" pos:column="57"/></operator> <name><name pos:line="96" pos:column="50">e<pos:position pos:line="96" pos:column="51"/></name><operator pos:line="96" pos:column="51">-&gt;<pos:position pos:line="96" pos:column="56"/></operator><name pos:line="96" pos:column="53">item<pos:position pos:line="96" pos:column="57"/></name><operator pos:line="96" pos:column="57">-&gt;<pos:position pos:line="96" pos:column="62"/></operator><name pos:line="96" pos:column="59">type<pos:position pos:line="96" pos:column="63"/></name></name> <operator pos:line="96" pos:column="64">==<pos:position pos:line="96" pos:column="66"/></operator> <name pos:line="96" pos:column="67">OBJ_COMMIT<pos:position pos:line="96" pos:column="77"/></name></expr>)<pos:position pos:line="96" pos:column="78"/></condition><then pos:line="96" pos:column="78"> <block pos:line="96" pos:column="79">{
			<expr_stmt><expr><call><name pos:line="97" pos:column="25">warning<pos:position pos:line="97" pos:column="32"/></name><argument_list pos:line="97" pos:column="32">(<argument><expr><call><name pos:line="97" pos:column="33">_<pos:position pos:line="97" pos:column="34"/></name><argument_list pos:line="97" pos:column="34">(<argument><expr><literal type="string" pos:line="97" pos:column="35">"ref '%s' is excluded by the rev-list options"<pos:position pos:line="97" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="97" pos:column="82"/></argument_list></call></expr></argument>,
				<argument><expr><name><name pos:line="98" pos:column="33">e<pos:position pos:line="98" pos:column="34"/></name><operator pos:line="98" pos:column="34">-&gt;<pos:position pos:line="98" pos:column="39"/></operator><name pos:line="98" pos:column="36">name<pos:position pos:line="98" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="98" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="42"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="99" pos:column="25">free<pos:position pos:line="99" pos:column="29"/></name><argument_list pos:line="99" pos:column="29">(<argument><expr><name pos:line="99" pos:column="30">ref<pos:position pos:line="99" pos:column="33"/></name></expr></argument>)<pos:position pos:line="99" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="35"/></expr_stmt>
			<continue pos:line="100" pos:column="25">continue;<pos:position pos:line="100" pos:column="34"/></continue>
		}<pos:position pos:line="101" pos:column="18"/></block></then></if>
		<comment type="block" pos:line="102" pos:column="17">/*
		 * If you run "git bundle create bndl v1.0..v2.0", the
		 * name of the positive ref is "v2.0" but that is the
		 * commit that is referenced by the tag, and not the tag
		 * itself.
		 */</comment>
		<if pos:line="108" pos:column="17">if <condition pos:line="108" pos:column="20">(<expr><call><name pos:line="108" pos:column="21">hashcmp<pos:position pos:line="108" pos:column="28"/></name><argument_list pos:line="108" pos:column="28">(<argument><expr><name pos:line="108" pos:column="29">sha1<pos:position pos:line="108" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="108" pos:column="35">e<pos:position pos:line="108" pos:column="36"/></name><operator pos:line="108" pos:column="36">-&gt;<pos:position pos:line="108" pos:column="41"/></operator><name pos:line="108" pos:column="38">item<pos:position pos:line="108" pos:column="42"/></name><operator pos:line="108" pos:column="42">-&gt;<pos:position pos:line="108" pos:column="47"/></operator><name pos:line="108" pos:column="44">sha1<pos:position pos:line="108" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="108" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="108" pos:column="50"/></condition><then pos:line="108" pos:column="50"> <block pos:line="108" pos:column="51">{
			<comment type="block" pos:line="109" pos:column="25">/*
			 * Is this the positive end of a range expressed
			 * in terms of a tag (e.g. v2.0 from the range
			 * "v1.0..v2.0")?
			 */</comment>
			<decl_stmt><decl><type><name><name pos:line="114" pos:column="25">struct<pos:position pos:line="114" pos:column="31"/></name> <name pos:line="114" pos:column="32">commit<pos:position pos:line="114" pos:column="38"/></name></name> <modifier pos:line="114" pos:column="39">*<pos:position pos:line="114" pos:column="40"/></modifier></type><name pos:line="114" pos:column="40">one<pos:position pos:line="114" pos:column="43"/></name> <init pos:line="114" pos:column="44">= <expr><call><name pos:line="114" pos:column="46">lookup_commit_reference<pos:position pos:line="114" pos:column="69"/></name><argument_list pos:line="114" pos:column="69">(<argument><expr><name pos:line="114" pos:column="70">sha1<pos:position pos:line="114" pos:column="74"/></name></expr></argument>)<pos:position pos:line="114" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="114" pos:column="76"/></decl_stmt>
			<decl_stmt><decl><type><name><name pos:line="115" pos:column="25">struct<pos:position pos:line="115" pos:column="31"/></name> <name pos:line="115" pos:column="32">object<pos:position pos:line="115" pos:column="38"/></name></name> <modifier pos:line="115" pos:column="39">*<pos:position pos:line="115" pos:column="40"/></modifier></type><name pos:line="115" pos:column="40">obj<pos:position pos:line="115" pos:column="43"/></name></decl>;<pos:position pos:line="115" pos:column="44"/></decl_stmt>

			<if pos:line="117" pos:column="25">if <condition pos:line="117" pos:column="28">(<expr><name><name pos:line="117" pos:column="29">e<pos:position pos:line="117" pos:column="30"/></name><operator pos:line="117" pos:column="30">-&gt;<pos:position pos:line="117" pos:column="35"/></operator><name pos:line="117" pos:column="32">item<pos:position pos:line="117" pos:column="36"/></name></name> <operator pos:line="117" pos:column="37">==<pos:position pos:line="117" pos:column="39"/></operator> <operator pos:line="117" pos:column="40">&amp;<pos:position pos:line="117" pos:column="45"/></operator><operator pos:line="117" pos:column="41">(<pos:position pos:line="117" pos:column="42"/></operator><name><name pos:line="117" pos:column="42">one<pos:position pos:line="117" pos:column="45"/></name><operator pos:line="117" pos:column="45">-&gt;<pos:position pos:line="117" pos:column="50"/></operator><name pos:line="117" pos:column="47">object<pos:position pos:line="117" pos:column="53"/></name></name><operator pos:line="117" pos:column="53">)<pos:position pos:line="117" pos:column="54"/></operator></expr>)<pos:position pos:line="117" pos:column="55"/></condition><then pos:line="117" pos:column="55"> <block pos:line="117" pos:column="56">{
				<comment type="block" pos:line="118" pos:column="33">/*
				 * Need to include e-&gt;name as an
				 * independent ref to the pack-objects
				 * input, so that the tag is included
				 * in the output; otherwise we would
				 * end up triggering "empty bundle"
				 * error.
				 */</comment>
				<expr_stmt><expr><name pos:line="126" pos:column="33">obj<pos:position pos:line="126" pos:column="36"/></name> <operator pos:line="126" pos:column="37">=<pos:position pos:line="126" pos:column="38"/></operator> <call><name pos:line="126" pos:column="39">parse_object_or_die<pos:position pos:line="126" pos:column="58"/></name><argument_list pos:line="126" pos:column="58">(<argument><expr><name pos:line="126" pos:column="59">sha1<pos:position pos:line="126" pos:column="63"/></name></expr></argument>, <argument><expr><name><name pos:line="126" pos:column="65">e<pos:position pos:line="126" pos:column="66"/></name><operator pos:line="126" pos:column="66">-&gt;<pos:position pos:line="126" pos:column="71"/></operator><name pos:line="126" pos:column="68">name<pos:position pos:line="126" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="126" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="74"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="127" pos:column="33">obj<pos:position pos:line="127" pos:column="36"/></name><operator pos:line="127" pos:column="36">-&gt;<pos:position pos:line="127" pos:column="41"/></operator><name pos:line="127" pos:column="38">flags<pos:position pos:line="127" pos:column="43"/></name></name> <operator pos:line="127" pos:column="44">|=<pos:position pos:line="127" pos:column="46"/></operator> <name pos:line="127" pos:column="47">SHOWN<pos:position pos:line="127" pos:column="52"/></name></expr>;<pos:position pos:line="127" pos:column="53"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="128" pos:column="33">add_pending_object<pos:position pos:line="128" pos:column="51"/></name><argument_list pos:line="128" pos:column="51">(<argument><expr><operator pos:line="128" pos:column="52">&amp;<pos:position pos:line="128" pos:column="57"/></operator><name pos:line="128" pos:column="53">revs<pos:position pos:line="128" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="128" pos:column="59">obj<pos:position pos:line="128" pos:column="62"/></name></expr></argument>, <argument><expr><name><name pos:line="128" pos:column="64">e<pos:position pos:line="128" pos:column="65"/></name><operator pos:line="128" pos:column="65">-&gt;<pos:position pos:line="128" pos:column="70"/></operator><name pos:line="128" pos:column="67">name<pos:position pos:line="128" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="128" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="73"/></expr_stmt>
			}<pos:position pos:line="129" pos:column="26"/></block></then></if>
			<expr_stmt><expr><call><name pos:line="130" pos:column="25">free<pos:position pos:line="130" pos:column="29"/></name><argument_list pos:line="130" pos:column="29">(<argument><expr><name pos:line="130" pos:column="30">ref<pos:position pos:line="130" pos:column="33"/></name></expr></argument>)<pos:position pos:line="130" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="35"/></expr_stmt>
			<continue pos:line="131" pos:column="25">continue;<pos:position pos:line="131" pos:column="34"/></continue>
		}<pos:position pos:line="132" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="134" pos:column="17">ref_count<pos:position pos:line="134" pos:column="26"/></name><operator pos:line="134" pos:column="26">++<pos:position pos:line="134" pos:column="28"/></operator></expr>;<pos:position pos:line="134" pos:column="29"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="135" pos:column="17">write_or_die<pos:position pos:line="135" pos:column="29"/></name><argument_list pos:line="135" pos:column="29">(<argument><expr><name pos:line="135" pos:column="30">bundle_fd<pos:position pos:line="135" pos:column="39"/></name></expr></argument>, <argument><expr><call><name pos:line="135" pos:column="41">sha1_to_hex<pos:position pos:line="135" pos:column="52"/></name><argument_list pos:line="135" pos:column="52">(<argument><expr><name><name pos:line="135" pos:column="53">e<pos:position pos:line="135" pos:column="54"/></name><operator pos:line="135" pos:column="54">-&gt;<pos:position pos:line="135" pos:column="59"/></operator><name pos:line="135" pos:column="56">item<pos:position pos:line="135" pos:column="60"/></name><operator pos:line="135" pos:column="60">-&gt;<pos:position pos:line="135" pos:column="65"/></operator><name pos:line="135" pos:column="62">sha1<pos:position pos:line="135" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="135" pos:column="67"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="135" pos:column="69">40<pos:position pos:line="135" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="135" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="73"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="136" pos:column="17">write_or_die<pos:position pos:line="136" pos:column="29"/></name><argument_list pos:line="136" pos:column="29">(<argument><expr><name pos:line="136" pos:column="30">bundle_fd<pos:position pos:line="136" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="136" pos:column="41">" "<pos:position pos:line="136" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="136" pos:column="46">1<pos:position pos:line="136" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="136" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="137" pos:column="17">write_or_die<pos:position pos:line="137" pos:column="29"/></name><argument_list pos:line="137" pos:column="29">(<argument><expr><name pos:line="137" pos:column="30">bundle_fd<pos:position pos:line="137" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="137" pos:column="41">display_ref<pos:position pos:line="137" pos:column="52"/></name></expr></argument>, <argument><expr><call><name pos:line="137" pos:column="54">strlen<pos:position pos:line="137" pos:column="60"/></name><argument_list pos:line="137" pos:column="60">(<argument><expr><name pos:line="137" pos:column="61">display_ref<pos:position pos:line="137" pos:column="72"/></name></expr></argument>)<pos:position pos:line="137" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="137" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="75"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="138" pos:column="17">write_or_die<pos:position pos:line="138" pos:column="29"/></name><argument_list pos:line="138" pos:column="29">(<argument><expr><name pos:line="138" pos:column="30">bundle_fd<pos:position pos:line="138" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="138" pos:column="41">"\n"<pos:position pos:line="138" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="138" pos:column="47">1<pos:position pos:line="138" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="138" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="50"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="139" pos:column="17">free<pos:position pos:line="139" pos:column="21"/></name><argument_list pos:line="139" pos:column="21">(<argument><expr><name pos:line="139" pos:column="22">ref<pos:position pos:line="139" pos:column="25"/></name></expr></argument>)<pos:position pos:line="139" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="140" pos:column="10"/></block></for>
	<if pos:line="141" pos:column="9">if <condition pos:line="141" pos:column="12">(<expr><operator pos:line="141" pos:column="13">!<pos:position pos:line="141" pos:column="14"/></operator><name pos:line="141" pos:column="14">ref_count<pos:position pos:line="141" pos:column="23"/></name></expr>)<pos:position pos:line="141" pos:column="24"/></condition><then pos:line="141" pos:column="24">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="142" pos:column="17">die<pos:position pos:line="142" pos:column="20"/></name><argument_list pos:line="142" pos:column="20">(<argument><expr><call><name pos:line="142" pos:column="21">_<pos:position pos:line="142" pos:column="22"/></name><argument_list pos:line="142" pos:column="22">(<argument><expr><literal type="string" pos:line="142" pos:column="23">"Refusing to create empty bundle."<pos:position pos:line="142" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="142" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="142" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="60"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="144" pos:column="9">/* end header */</comment>
	<expr_stmt><expr><call><name pos:line="145" pos:column="9">write_or_die<pos:position pos:line="145" pos:column="21"/></name><argument_list pos:line="145" pos:column="21">(<argument><expr><name pos:line="145" pos:column="22">bundle_fd<pos:position pos:line="145" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="145" pos:column="33">"\n"<pos:position pos:line="145" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="145" pos:column="39">1<pos:position pos:line="145" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="145" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="42"/></expr_stmt>

	<comment type="block" pos:line="147" pos:column="9">/* write pack */</comment>
	<expr_stmt><expr><call><name pos:line="148" pos:column="9">memset<pos:position pos:line="148" pos:column="15"/></name><argument_list pos:line="148" pos:column="15">(<argument><expr><operator pos:line="148" pos:column="16">&amp;<pos:position pos:line="148" pos:column="21"/></operator><name pos:line="148" pos:column="17">rls<pos:position pos:line="148" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="148" pos:column="22">0<pos:position pos:line="148" pos:column="23"/></literal></expr></argument>, <argument><expr><sizeof pos:line="148" pos:column="25">sizeof<argument_list pos:line="148" pos:column="31">(<argument><expr><name pos:line="148" pos:column="32">rls<pos:position pos:line="148" pos:column="35"/></name></expr></argument>)<pos:position pos:line="148" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="148" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="149" pos:column="9">argv_array_pushl<pos:position pos:line="149" pos:column="25"/></name><argument_list pos:line="149" pos:column="25">(<argument><expr><operator pos:line="149" pos:column="26">&amp;<pos:position pos:line="149" pos:column="31"/></operator><name><name pos:line="149" pos:column="27">rls<pos:position pos:line="149" pos:column="30"/></name><operator pos:line="149" pos:column="30">.<pos:position pos:line="149" pos:column="31"/></operator><name pos:line="149" pos:column="31">args<pos:position pos:line="149" pos:column="35"/></name></name></expr></argument>,
			 <argument><expr><literal type="string" pos:line="150" pos:column="26">"pack-objects"<pos:position pos:line="150" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="150" pos:column="42">"--all-progress-implied"<pos:position pos:line="150" pos:column="66"/></literal></expr></argument>,
			 <argument><expr><literal type="string" pos:line="151" pos:column="26">"--stdout"<pos:position pos:line="151" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="151" pos:column="38">"--thin"<pos:position pos:line="151" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="151" pos:column="48">"--delta-base-offset"<pos:position pos:line="151" pos:column="69"/></literal></expr></argument>,
			 <argument><expr><name pos:line="152" pos:column="26">NULL<pos:position pos:line="152" pos:column="30"/></name></expr></argument>)<pos:position pos:line="152" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="153" pos:column="9">rls<pos:position pos:line="153" pos:column="12"/></name><operator pos:line="153" pos:column="12">.<pos:position pos:line="153" pos:column="13"/></operator><name pos:line="153" pos:column="13">in<pos:position pos:line="153" pos:column="15"/></name></name> <operator pos:line="153" pos:column="16">=<pos:position pos:line="153" pos:column="17"/></operator> <operator pos:line="153" pos:column="18">-<pos:position pos:line="153" pos:column="19"/></operator><literal type="number" pos:line="153" pos:column="19">1<pos:position pos:line="153" pos:column="20"/></literal></expr>;<pos:position pos:line="153" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="154" pos:column="9">rls<pos:position pos:line="154" pos:column="12"/></name><operator pos:line="154" pos:column="12">.<pos:position pos:line="154" pos:column="13"/></operator><name pos:line="154" pos:column="13">out<pos:position pos:line="154" pos:column="16"/></name></name> <operator pos:line="154" pos:column="17">=<pos:position pos:line="154" pos:column="18"/></operator> <name pos:line="154" pos:column="19">bundle_fd<pos:position pos:line="154" pos:column="28"/></name></expr>;<pos:position pos:line="154" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="155" pos:column="9">rls<pos:position pos:line="155" pos:column="12"/></name><operator pos:line="155" pos:column="12">.<pos:position pos:line="155" pos:column="13"/></operator><name pos:line="155" pos:column="13">git_cmd<pos:position pos:line="155" pos:column="20"/></name></name> <operator pos:line="155" pos:column="21">=<pos:position pos:line="155" pos:column="22"/></operator> <literal type="number" pos:line="155" pos:column="23">1<pos:position pos:line="155" pos:column="24"/></literal></expr>;<pos:position pos:line="155" pos:column="25"/></expr_stmt>
	<if pos:line="156" pos:column="9">if <condition pos:line="156" pos:column="12">(<expr><call><name pos:line="156" pos:column="13">start_command<pos:position pos:line="156" pos:column="26"/></name><argument_list pos:line="156" pos:column="26">(<argument><expr><operator pos:line="156" pos:column="27">&amp;<pos:position pos:line="156" pos:column="32"/></operator><name pos:line="156" pos:column="28">rls<pos:position pos:line="156" pos:column="31"/></name></expr></argument>)<pos:position pos:line="156" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="156" pos:column="33"/></condition><then pos:line="156" pos:column="33">
		<block type="pseudo"><return pos:line="157" pos:column="17">return <expr><call><name pos:line="157" pos:column="24">error<pos:position pos:line="157" pos:column="29"/></name><argument_list pos:line="157" pos:column="29">(<argument><expr><call><name pos:line="157" pos:column="30">_<pos:position pos:line="157" pos:column="31"/></name><argument_list pos:line="157" pos:column="31">(<argument><expr><literal type="string" pos:line="157" pos:column="32">"Could not spawn pack-objects"<pos:position pos:line="157" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="157" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="157" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="65"/></return></block></then></if>

	<comment type="block" pos:line="159" pos:column="9">/*
	 * start_command closed bundle_fd if it was &gt; 1
	 * so set the lock fd to -1 so commit_lock_file()
	 * won't fail trying to close it.
	 */</comment>
	<expr_stmt><expr><name><name pos:line="164" pos:column="9">lock<pos:position pos:line="164" pos:column="13"/></name><operator pos:line="164" pos:column="13">.<pos:position pos:line="164" pos:column="14"/></operator><name pos:line="164" pos:column="14">fd<pos:position pos:line="164" pos:column="16"/></name></name> <operator pos:line="164" pos:column="17">=<pos:position pos:line="164" pos:column="18"/></operator> <operator pos:line="164" pos:column="19">-<pos:position pos:line="164" pos:column="20"/></operator><literal type="number" pos:line="164" pos:column="20">1<pos:position pos:line="164" pos:column="21"/></literal></expr>;<pos:position pos:line="164" pos:column="22"/></expr_stmt>

	<for pos:line="166" pos:column="9">for <control pos:line="166" pos:column="13">(<init><expr><name pos:line="166" pos:column="14">i<pos:position pos:line="166" pos:column="15"/></name> <operator pos:line="166" pos:column="16">=<pos:position pos:line="166" pos:column="17"/></operator> <literal type="number" pos:line="166" pos:column="18">0<pos:position pos:line="166" pos:column="19"/></literal></expr>;<pos:position pos:line="166" pos:column="20"/></init> <condition><expr><name pos:line="166" pos:column="21">i<pos:position pos:line="166" pos:column="22"/></name> <operator pos:line="166" pos:column="23">&lt;<pos:position pos:line="166" pos:column="27"/></operator> <name><name pos:line="166" pos:column="25">revs<pos:position pos:line="166" pos:column="29"/></name><operator pos:line="166" pos:column="29">.<pos:position pos:line="166" pos:column="30"/></operator><name pos:line="166" pos:column="30">pending<pos:position pos:line="166" pos:column="37"/></name><operator pos:line="166" pos:column="37">.<pos:position pos:line="166" pos:column="38"/></operator><name pos:line="166" pos:column="38">nr<pos:position pos:line="166" pos:column="40"/></name></name></expr>;<pos:position pos:line="166" pos:column="41"/></condition> <incr><expr><name pos:line="166" pos:column="42">i<pos:position pos:line="166" pos:column="43"/></name><operator pos:line="166" pos:column="43">++<pos:position pos:line="166" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="166" pos:column="46"/></control> <block pos:line="166" pos:column="47">{
		<decl_stmt><decl><type><name><name pos:line="167" pos:column="17">struct<pos:position pos:line="167" pos:column="23"/></name> <name pos:line="167" pos:column="24">object<pos:position pos:line="167" pos:column="30"/></name></name> <modifier pos:line="167" pos:column="31">*<pos:position pos:line="167" pos:column="32"/></modifier></type><name pos:line="167" pos:column="32">object<pos:position pos:line="167" pos:column="38"/></name> <init pos:line="167" pos:column="39">= <expr><name><name pos:line="167" pos:column="41">revs<pos:position pos:line="167" pos:column="45"/></name><operator pos:line="167" pos:column="45">.<pos:position pos:line="167" pos:column="46"/></operator><name pos:line="167" pos:column="46">pending<pos:position pos:line="167" pos:column="53"/></name><operator pos:line="167" pos:column="53">.<pos:position pos:line="167" pos:column="54"/></operator><name pos:line="167" pos:column="54">objects<pos:position pos:line="167" pos:column="61"/></name><index pos:line="167" pos:column="61">[<expr><name pos:line="167" pos:column="62">i<pos:position pos:line="167" pos:column="63"/></name></expr>]<pos:position pos:line="167" pos:column="64"/></index></name><operator pos:line="167" pos:column="64">.<pos:position pos:line="167" pos:column="65"/></operator><name pos:line="167" pos:column="65">item<pos:position pos:line="167" pos:column="69"/></name></expr></init></decl>;<pos:position pos:line="167" pos:column="70"/></decl_stmt>
		<if pos:line="168" pos:column="17">if <condition pos:line="168" pos:column="20">(<expr><name><name pos:line="168" pos:column="21">object<pos:position pos:line="168" pos:column="27"/></name><operator pos:line="168" pos:column="27">-&gt;<pos:position pos:line="168" pos:column="32"/></operator><name pos:line="168" pos:column="29">flags<pos:position pos:line="168" pos:column="34"/></name></name> <operator pos:line="168" pos:column="35">&amp;<pos:position pos:line="168" pos:column="40"/></operator> <name pos:line="168" pos:column="37">UNINTERESTING<pos:position pos:line="168" pos:column="50"/></name></expr>)<pos:position pos:line="168" pos:column="51"/></condition><then pos:line="168" pos:column="51">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="169" pos:column="25">write_or_die<pos:position pos:line="169" pos:column="37"/></name><argument_list pos:line="169" pos:column="37">(<argument><expr><name><name pos:line="169" pos:column="38">rls<pos:position pos:line="169" pos:column="41"/></name><operator pos:line="169" pos:column="41">.<pos:position pos:line="169" pos:column="42"/></operator><name pos:line="169" pos:column="42">in<pos:position pos:line="169" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="169" pos:column="46">"^"<pos:position pos:line="169" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="169" pos:column="51">1<pos:position pos:line="169" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="169" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="54"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="170" pos:column="17">write_or_die<pos:position pos:line="170" pos:column="29"/></name><argument_list pos:line="170" pos:column="29">(<argument><expr><name><name pos:line="170" pos:column="30">rls<pos:position pos:line="170" pos:column="33"/></name><operator pos:line="170" pos:column="33">.<pos:position pos:line="170" pos:column="34"/></operator><name pos:line="170" pos:column="34">in<pos:position pos:line="170" pos:column="36"/></name></name></expr></argument>, <argument><expr><call><name pos:line="170" pos:column="38">sha1_to_hex<pos:position pos:line="170" pos:column="49"/></name><argument_list pos:line="170" pos:column="49">(<argument><expr><name><name pos:line="170" pos:column="50">object<pos:position pos:line="170" pos:column="56"/></name><operator pos:line="170" pos:column="56">-&gt;<pos:position pos:line="170" pos:column="61"/></operator><name pos:line="170" pos:column="58">sha1<pos:position pos:line="170" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="170" pos:column="63"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="170" pos:column="65">40<pos:position pos:line="170" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="170" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="170" pos:column="69"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="171" pos:column="17">write_or_die<pos:position pos:line="171" pos:column="29"/></name><argument_list pos:line="171" pos:column="29">(<argument><expr><name><name pos:line="171" pos:column="30">rls<pos:position pos:line="171" pos:column="33"/></name><operator pos:line="171" pos:column="33">.<pos:position pos:line="171" pos:column="34"/></operator><name pos:line="171" pos:column="34">in<pos:position pos:line="171" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="171" pos:column="38">"\n"<pos:position pos:line="171" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="171" pos:column="44">1<pos:position pos:line="171" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="171" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="171" pos:column="47"/></expr_stmt>
	}<pos:position pos:line="172" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="173" pos:column="9">close<pos:position pos:line="173" pos:column="14"/></name><argument_list pos:line="173" pos:column="14">(<argument><expr><name><name pos:line="173" pos:column="15">rls<pos:position pos:line="173" pos:column="18"/></name><operator pos:line="173" pos:column="18">.<pos:position pos:line="173" pos:column="19"/></operator><name pos:line="173" pos:column="19">in<pos:position pos:line="173" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="173" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="173" pos:column="23"/></expr_stmt>
	<if pos:line="174" pos:column="9">if <condition pos:line="174" pos:column="12">(<expr><call><name pos:line="174" pos:column="13">finish_command<pos:position pos:line="174" pos:column="27"/></name><argument_list pos:line="174" pos:column="27">(<argument><expr><operator pos:line="174" pos:column="28">&amp;<pos:position pos:line="174" pos:column="33"/></operator><name pos:line="174" pos:column="29">rls<pos:position pos:line="174" pos:column="32"/></name></expr></argument>)<pos:position pos:line="174" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="174" pos:column="34"/></condition><then pos:line="174" pos:column="34">
		<block type="pseudo"><return pos:line="175" pos:column="17">return <expr><call><name pos:line="175" pos:column="24">error<pos:position pos:line="175" pos:column="29"/></name><argument_list pos:line="175" pos:column="29">(<argument><expr><call><name pos:line="175" pos:column="30">_<pos:position pos:line="175" pos:column="31"/></name><argument_list pos:line="175" pos:column="31">(<argument><expr><literal type="string" pos:line="175" pos:column="32">"pack-objects died"<pos:position pos:line="175" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="175" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="175" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="54"/></return></block></then></if>
	<if pos:line="176" pos:column="9">if <condition pos:line="176" pos:column="12">(<expr><operator pos:line="176" pos:column="13">!<pos:position pos:line="176" pos:column="14"/></operator><name pos:line="176" pos:column="14">bundle_to_stdout<pos:position pos:line="176" pos:column="30"/></name></expr>)<pos:position pos:line="176" pos:column="31"/></condition><then pos:line="176" pos:column="31"> <block pos:line="176" pos:column="32">{
		<if pos:line="177" pos:column="17">if <condition pos:line="177" pos:column="20">(<expr><call><name pos:line="177" pos:column="21">commit_lock_file<pos:position pos:line="177" pos:column="37"/></name><argument_list pos:line="177" pos:column="37">(<argument><expr><operator pos:line="177" pos:column="38">&amp;<pos:position pos:line="177" pos:column="43"/></operator><name pos:line="177" pos:column="39">lock<pos:position pos:line="177" pos:column="43"/></name></expr></argument>)<pos:position pos:line="177" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="177" pos:column="45"/></condition><then pos:line="177" pos:column="45">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="178" pos:column="25">die_errno<pos:position pos:line="178" pos:column="34"/></name><argument_list pos:line="178" pos:column="34">(<argument><expr><call><name pos:line="178" pos:column="35">_<pos:position pos:line="178" pos:column="36"/></name><argument_list pos:line="178" pos:column="36">(<argument><expr><literal type="string" pos:line="178" pos:column="37">"cannot create '%s'"<pos:position pos:line="178" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="178" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="178" pos:column="60">path<pos:position pos:line="178" pos:column="64"/></name></expr></argument>)<pos:position pos:line="178" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="178" pos:column="66"/></expr_stmt></block></then></if>
	}<pos:position pos:line="179" pos:column="10"/></block></then></if>
	<return pos:line="180" pos:column="9">return <expr><literal type="number" pos:line="180" pos:column="16">0<pos:position pos:line="180" pos:column="17"/></literal></expr>;<pos:position pos:line="180" pos:column="18"/></return>
}<pos:position pos:line="181" pos:column="2"/></block></function></unit>

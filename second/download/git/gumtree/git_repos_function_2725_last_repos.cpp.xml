<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2725_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">strbuf_humanise_bytes<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name><name pos:line="1" pos:column="28">struct<pos:position pos:line="1" pos:column="34"/></name> <name pos:line="1" pos:column="35">strbuf<pos:position pos:line="1" pos:column="41"/></name></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">buf<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">off_t<pos:position pos:line="1" pos:column="53"/></name></type> <name pos:line="1" pos:column="54">bytes<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><name pos:line="3" pos:column="13">bytes<pos:position pos:line="3" pos:column="18"/></name> <operator pos:line="3" pos:column="19">&gt;<pos:position pos:line="3" pos:column="23"/></operator> <literal type="number" pos:line="3" pos:column="21">1<pos:position pos:line="3" pos:column="22"/></literal> <operator pos:line="3" pos:column="23">&lt;&lt;<pos:position pos:line="3" pos:column="31"/></operator> <literal type="number" pos:line="3" pos:column="26">30<pos:position pos:line="3" pos:column="28"/></literal></expr>)<pos:position pos:line="3" pos:column="29"/></condition><then pos:line="3" pos:column="29"> <block pos:line="3" pos:column="30">{
		<expr_stmt><expr><call><name pos:line="4" pos:column="17">strbuf_addf<pos:position pos:line="4" pos:column="28"/></name><argument_list pos:line="4" pos:column="28">(<argument><expr><name pos:line="4" pos:column="29">buf<pos:position pos:line="4" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="34">"%u.%2.2u GiB"<pos:position pos:line="4" pos:column="48"/></literal></expr></argument>,
			    <argument><expr><call pos:line="5" pos:column="29">(<name pos:line="5" pos:column="30">int<pos:position pos:line="5" pos:column="33"/></name>)<argument_list pos:line="5" pos:column="34">(<argument><expr><name pos:line="5" pos:column="35">bytes<pos:position pos:line="5" pos:column="40"/></name> <operator pos:line="5" pos:column="41">&gt;&gt;<pos:position pos:line="5" pos:column="46"/></operator> <literal type="number" pos:line="5" pos:column="44">30<pos:position pos:line="5" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="47"/></argument_list></call></expr></argument>,
			    <argument><expr><call pos:line="6" pos:column="29">(<name pos:line="6" pos:column="30">int<pos:position pos:line="6" pos:column="33"/></name>)<argument_list pos:line="6" pos:column="34">(<argument><expr><name pos:line="6" pos:column="35">bytes<pos:position pos:line="6" pos:column="40"/></name> <operator pos:line="6" pos:column="41">&amp;<pos:position pos:line="6" pos:column="46"/></operator> <operator pos:line="6" pos:column="43">(<pos:position pos:line="6" pos:column="44"/></operator><operator pos:line="6" pos:column="44">(<pos:position pos:line="6" pos:column="45"/></operator><literal type="number" pos:line="6" pos:column="45">1<pos:position pos:line="6" pos:column="46"/></literal> <operator pos:line="6" pos:column="47">&lt;&lt;<pos:position pos:line="6" pos:column="55"/></operator> <literal type="number" pos:line="6" pos:column="50">30<pos:position pos:line="6" pos:column="52"/></literal><operator pos:line="6" pos:column="52">)<pos:position pos:line="6" pos:column="53"/></operator> <operator pos:line="6" pos:column="54">-<pos:position pos:line="6" pos:column="55"/></operator> <literal type="number" pos:line="6" pos:column="56">1<pos:position pos:line="6" pos:column="57"/></literal><operator pos:line="6" pos:column="57">)<pos:position pos:line="6" pos:column="58"/></operator></expr></argument>)<pos:position pos:line="6" pos:column="59"/></argument_list></call> <operator pos:line="6" pos:column="60">/<pos:position pos:line="6" pos:column="61"/></operator> <literal type="number" pos:line="6" pos:column="62">10737419<pos:position pos:line="6" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="72"/></expr_stmt>
	}<pos:position pos:line="7" pos:column="10"/></block></then> <elseif pos:line="7" pos:column="11">else <if pos:line="7" pos:column="16">if <condition pos:line="7" pos:column="19">(<expr><name pos:line="7" pos:column="20">bytes<pos:position pos:line="7" pos:column="25"/></name> <operator pos:line="7" pos:column="26">&gt;<pos:position pos:line="7" pos:column="30"/></operator> <literal type="number" pos:line="7" pos:column="28">1<pos:position pos:line="7" pos:column="29"/></literal> <operator pos:line="7" pos:column="30">&lt;&lt;<pos:position pos:line="7" pos:column="38"/></operator> <literal type="number" pos:line="7" pos:column="33">20<pos:position pos:line="7" pos:column="35"/></literal></expr>)<pos:position pos:line="7" pos:column="36"/></condition><then pos:line="7" pos:column="36"> <block pos:line="7" pos:column="37">{
		<decl_stmt><decl><type><name pos:line="8" pos:column="17">int<pos:position pos:line="8" pos:column="20"/></name></type> <name pos:line="8" pos:column="21">x<pos:position pos:line="8" pos:column="22"/></name> <init pos:line="8" pos:column="23">= <expr><name pos:line="8" pos:column="25">bytes<pos:position pos:line="8" pos:column="30"/></name> <operator pos:line="8" pos:column="31">+<pos:position pos:line="8" pos:column="32"/></operator> <literal type="number" pos:line="8" pos:column="33">5243<pos:position pos:line="8" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="38"/></decl_stmt>  <comment type="block" pos:line="8" pos:column="40">/* for rounding */</comment>
		<expr_stmt><expr><call><name pos:line="9" pos:column="17">strbuf_addf<pos:position pos:line="9" pos:column="28"/></name><argument_list pos:line="9" pos:column="28">(<argument><expr><name pos:line="9" pos:column="29">buf<pos:position pos:line="9" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="34">"%u.%2.2u MiB"<pos:position pos:line="9" pos:column="48"/></literal></expr></argument>,
			    <argument><expr><name pos:line="10" pos:column="29">x<pos:position pos:line="10" pos:column="30"/></name> <operator pos:line="10" pos:column="31">&gt;&gt;<pos:position pos:line="10" pos:column="36"/></operator> <literal type="number" pos:line="10" pos:column="34">20<pos:position pos:line="10" pos:column="36"/></literal></expr></argument>, <argument><expr><operator pos:line="10" pos:column="38">(<pos:position pos:line="10" pos:column="39"/></operator><operator pos:line="10" pos:column="39">(<pos:position pos:line="10" pos:column="40"/></operator><name pos:line="10" pos:column="40">x<pos:position pos:line="10" pos:column="41"/></name> <operator pos:line="10" pos:column="42">&amp;<pos:position pos:line="10" pos:column="47"/></operator> <operator pos:line="10" pos:column="44">(<pos:position pos:line="10" pos:column="45"/></operator><operator pos:line="10" pos:column="45">(<pos:position pos:line="10" pos:column="46"/></operator><literal type="number" pos:line="10" pos:column="46">1<pos:position pos:line="10" pos:column="47"/></literal> <operator pos:line="10" pos:column="48">&lt;&lt;<pos:position pos:line="10" pos:column="56"/></operator> <literal type="number" pos:line="10" pos:column="51">20<pos:position pos:line="10" pos:column="53"/></literal><operator pos:line="10" pos:column="53">)<pos:position pos:line="10" pos:column="54"/></operator> <operator pos:line="10" pos:column="55">-<pos:position pos:line="10" pos:column="56"/></operator> <literal type="number" pos:line="10" pos:column="57">1<pos:position pos:line="10" pos:column="58"/></literal><operator pos:line="10" pos:column="58">)<pos:position pos:line="10" pos:column="59"/></operator><operator pos:line="10" pos:column="59">)<pos:position pos:line="10" pos:column="60"/></operator> <operator pos:line="10" pos:column="61">*<pos:position pos:line="10" pos:column="62"/></operator> <literal type="number" pos:line="10" pos:column="63">100<pos:position pos:line="10" pos:column="66"/></literal><operator pos:line="10" pos:column="66">)<pos:position pos:line="10" pos:column="67"/></operator> <operator pos:line="10" pos:column="68">&gt;&gt;<pos:position pos:line="10" pos:column="73"/></operator> <literal type="number" pos:line="10" pos:column="71">20<pos:position pos:line="10" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="75"/></expr_stmt>
	}<pos:position pos:line="11" pos:column="10"/></block></then></if></elseif> <elseif pos:line="11" pos:column="11">else <if pos:line="11" pos:column="16">if <condition pos:line="11" pos:column="19">(<expr><name pos:line="11" pos:column="20">bytes<pos:position pos:line="11" pos:column="25"/></name> <operator pos:line="11" pos:column="26">&gt;<pos:position pos:line="11" pos:column="30"/></operator> <literal type="number" pos:line="11" pos:column="28">1<pos:position pos:line="11" pos:column="29"/></literal> <operator pos:line="11" pos:column="30">&lt;&lt;<pos:position pos:line="11" pos:column="38"/></operator> <literal type="number" pos:line="11" pos:column="33">10<pos:position pos:line="11" pos:column="35"/></literal></expr>)<pos:position pos:line="11" pos:column="36"/></condition><then pos:line="11" pos:column="36"> <block pos:line="11" pos:column="37">{
		<decl_stmt><decl><type><name pos:line="12" pos:column="17">int<pos:position pos:line="12" pos:column="20"/></name></type> <name pos:line="12" pos:column="21">x<pos:position pos:line="12" pos:column="22"/></name> <init pos:line="12" pos:column="23">= <expr><name pos:line="12" pos:column="25">bytes<pos:position pos:line="12" pos:column="30"/></name> <operator pos:line="12" pos:column="31">+<pos:position pos:line="12" pos:column="32"/></operator> <literal type="number" pos:line="12" pos:column="33">5<pos:position pos:line="12" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="35"/></decl_stmt>  <comment type="block" pos:line="12" pos:column="37">/* for rounding */</comment>
		<expr_stmt><expr><call><name pos:line="13" pos:column="17">strbuf_addf<pos:position pos:line="13" pos:column="28"/></name><argument_list pos:line="13" pos:column="28">(<argument><expr><name pos:line="13" pos:column="29">buf<pos:position pos:line="13" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="34">"%u.%2.2u KiB"<pos:position pos:line="13" pos:column="48"/></literal></expr></argument>,
			    <argument><expr><name pos:line="14" pos:column="29">x<pos:position pos:line="14" pos:column="30"/></name> <operator pos:line="14" pos:column="31">&gt;&gt;<pos:position pos:line="14" pos:column="36"/></operator> <literal type="number" pos:line="14" pos:column="34">10<pos:position pos:line="14" pos:column="36"/></literal></expr></argument>, <argument><expr><operator pos:line="14" pos:column="38">(<pos:position pos:line="14" pos:column="39"/></operator><operator pos:line="14" pos:column="39">(<pos:position pos:line="14" pos:column="40"/></operator><name pos:line="14" pos:column="40">x<pos:position pos:line="14" pos:column="41"/></name> <operator pos:line="14" pos:column="42">&amp;<pos:position pos:line="14" pos:column="47"/></operator> <operator pos:line="14" pos:column="44">(<pos:position pos:line="14" pos:column="45"/></operator><operator pos:line="14" pos:column="45">(<pos:position pos:line="14" pos:column="46"/></operator><literal type="number" pos:line="14" pos:column="46">1<pos:position pos:line="14" pos:column="47"/></literal> <operator pos:line="14" pos:column="48">&lt;&lt;<pos:position pos:line="14" pos:column="56"/></operator> <literal type="number" pos:line="14" pos:column="51">10<pos:position pos:line="14" pos:column="53"/></literal><operator pos:line="14" pos:column="53">)<pos:position pos:line="14" pos:column="54"/></operator> <operator pos:line="14" pos:column="55">-<pos:position pos:line="14" pos:column="56"/></operator> <literal type="number" pos:line="14" pos:column="57">1<pos:position pos:line="14" pos:column="58"/></literal><operator pos:line="14" pos:column="58">)<pos:position pos:line="14" pos:column="59"/></operator><operator pos:line="14" pos:column="59">)<pos:position pos:line="14" pos:column="60"/></operator> <operator pos:line="14" pos:column="61">*<pos:position pos:line="14" pos:column="62"/></operator> <literal type="number" pos:line="14" pos:column="63">100<pos:position pos:line="14" pos:column="66"/></literal><operator pos:line="14" pos:column="66">)<pos:position pos:line="14" pos:column="67"/></operator> <operator pos:line="14" pos:column="68">&gt;&gt;<pos:position pos:line="14" pos:column="73"/></operator> <literal type="number" pos:line="14" pos:column="71">10<pos:position pos:line="14" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="75"/></expr_stmt>
	}<pos:position pos:line="15" pos:column="10"/></block></then></if></elseif> <else pos:line="15" pos:column="11">else <block pos:line="15" pos:column="16">{
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">strbuf_addf<pos:position pos:line="16" pos:column="28"/></name><argument_list pos:line="16" pos:column="28">(<argument><expr><name pos:line="16" pos:column="29">buf<pos:position pos:line="16" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="34">"%u bytes"<pos:position pos:line="16" pos:column="44"/></literal></expr></argument>, <argument><expr><operator pos:line="16" pos:column="46">(<pos:position pos:line="16" pos:column="47"/></operator><name pos:line="16" pos:column="47">int<pos:position pos:line="16" pos:column="50"/></name><operator pos:line="16" pos:column="50">)<pos:position pos:line="16" pos:column="51"/></operator><name pos:line="16" pos:column="51">bytes<pos:position pos:line="16" pos:column="56"/></name></expr></argument>)<pos:position pos:line="16" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="58"/></expr_stmt>
	}<pos:position pos:line="17" pos:column="10"/></block></else></if>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

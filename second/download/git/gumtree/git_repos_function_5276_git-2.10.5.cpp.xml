<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5276_git-2.10.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">do_fetch<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name><name pos:line="1" pos:column="21">struct<pos:position pos:line="1" pos:column="27"/></name> <name pos:line="1" pos:column="28">transport<pos:position pos:line="1" pos:column="37"/></name></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">transport<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>,
		    <parameter><decl><type><name><name pos:line="2" pos:column="21">struct<pos:position pos:line="2" pos:column="27"/></name> <name pos:line="2" pos:column="28">refspec<pos:position pos:line="2" pos:column="35"/></name></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">refs<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="43">int<pos:position pos:line="2" pos:column="46"/></name></type> <name pos:line="2" pos:column="47">ref_count<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="57"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">string_list<pos:position pos:line="4" pos:column="27"/></name></name></type> <name pos:line="4" pos:column="28">existing_refs<pos:position pos:line="4" pos:column="41"/></name> <init pos:line="4" pos:column="42">= <expr><name pos:line="4" pos:column="44">STRING_LIST_INIT_DUP<pos:position pos:line="4" pos:column="64"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="65"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">ref<pos:position pos:line="5" pos:column="19"/></name></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">ref_map<pos:position pos:line="5" pos:column="28"/></name></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">ref<pos:position pos:line="6" pos:column="19"/></name></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">rm<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">autotags<pos:position pos:line="7" pos:column="21"/></name> <init pos:line="7" pos:column="22">= <expr><operator pos:line="7" pos:column="24">(<pos:position pos:line="7" pos:column="25"/></operator><name><name pos:line="7" pos:column="25">transport<pos:position pos:line="7" pos:column="34"/></name><operator pos:line="7" pos:column="34">-&gt;<pos:position pos:line="7" pos:column="39"/></operator><name pos:line="7" pos:column="36">remote<pos:position pos:line="7" pos:column="42"/></name><operator pos:line="7" pos:column="42">-&gt;<pos:position pos:line="7" pos:column="47"/></operator><name pos:line="7" pos:column="44">fetch_tags<pos:position pos:line="7" pos:column="54"/></name></name> <operator pos:line="7" pos:column="55">==<pos:position pos:line="7" pos:column="57"/></operator> <literal type="number" pos:line="7" pos:column="58">1<pos:position pos:line="7" pos:column="59"/></literal><operator pos:line="7" pos:column="59">)<pos:position pos:line="7" pos:column="60"/></operator></expr></init></decl>;<pos:position pos:line="7" pos:column="61"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">retcode<pos:position pos:line="8" pos:column="20"/></name> <init pos:line="8" pos:column="21">= <expr><literal type="number" pos:line="8" pos:column="23">0<pos:position pos:line="8" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="10" pos:column="9">for_each_ref<pos:position pos:line="10" pos:column="21"/></name><argument_list pos:line="10" pos:column="21">(<argument><expr><name pos:line="10" pos:column="22">add_existing<pos:position pos:line="10" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="36">&amp;<pos:position pos:line="10" pos:column="41"/></operator><name pos:line="10" pos:column="37">existing_refs<pos:position pos:line="10" pos:column="50"/></name></expr></argument>)<pos:position pos:line="10" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="52"/></expr_stmt>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">tags<pos:position pos:line="12" pos:column="17"/></name> <operator pos:line="12" pos:column="18">==<pos:position pos:line="12" pos:column="20"/></operator> <name pos:line="12" pos:column="21">TAGS_DEFAULT<pos:position pos:line="12" pos:column="33"/></name></expr>)<pos:position pos:line="12" pos:column="34"/></condition><then pos:line="12" pos:column="34"> <block pos:line="12" pos:column="35">{
		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><name><name pos:line="13" pos:column="21">transport<pos:position pos:line="13" pos:column="30"/></name><operator pos:line="13" pos:column="30">-&gt;<pos:position pos:line="13" pos:column="35"/></operator><name pos:line="13" pos:column="32">remote<pos:position pos:line="13" pos:column="38"/></name><operator pos:line="13" pos:column="38">-&gt;<pos:position pos:line="13" pos:column="43"/></operator><name pos:line="13" pos:column="40">fetch_tags<pos:position pos:line="13" pos:column="50"/></name></name> <operator pos:line="13" pos:column="51">==<pos:position pos:line="13" pos:column="53"/></operator> <literal type="number" pos:line="13" pos:column="54">2<pos:position pos:line="13" pos:column="55"/></literal></expr>)<pos:position pos:line="13" pos:column="56"/></condition><then pos:line="13" pos:column="56">
			<block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="25">tags<pos:position pos:line="14" pos:column="29"/></name> <operator pos:line="14" pos:column="30">=<pos:position pos:line="14" pos:column="31"/></operator> <name pos:line="14" pos:column="32">TAGS_SET<pos:position pos:line="14" pos:column="40"/></name></expr>;<pos:position pos:line="14" pos:column="41"/></expr_stmt></block></then></if>
		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><name><name pos:line="15" pos:column="21">transport<pos:position pos:line="15" pos:column="30"/></name><operator pos:line="15" pos:column="30">-&gt;<pos:position pos:line="15" pos:column="35"/></operator><name pos:line="15" pos:column="32">remote<pos:position pos:line="15" pos:column="38"/></name><operator pos:line="15" pos:column="38">-&gt;<pos:position pos:line="15" pos:column="43"/></operator><name pos:line="15" pos:column="40">fetch_tags<pos:position pos:line="15" pos:column="50"/></name></name> <operator pos:line="15" pos:column="51">==<pos:position pos:line="15" pos:column="53"/></operator> <operator pos:line="15" pos:column="54">-<pos:position pos:line="15" pos:column="55"/></operator><literal type="number" pos:line="15" pos:column="55">1<pos:position pos:line="15" pos:column="56"/></literal></expr>)<pos:position pos:line="15" pos:column="57"/></condition><then pos:line="15" pos:column="57">
			<block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="25">tags<pos:position pos:line="16" pos:column="29"/></name> <operator pos:line="16" pos:column="30">=<pos:position pos:line="16" pos:column="31"/></operator> <name pos:line="16" pos:column="32">TAGS_UNSET<pos:position pos:line="16" pos:column="42"/></name></expr>;<pos:position pos:line="16" pos:column="43"/></expr_stmt></block></then></if>
	}<pos:position pos:line="17" pos:column="10"/></block></then></if>

	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><operator pos:line="19" pos:column="13">!<pos:position pos:line="19" pos:column="14"/></operator><name><name pos:line="19" pos:column="14">transport<pos:position pos:line="19" pos:column="23"/></name><operator pos:line="19" pos:column="23">-&gt;<pos:position pos:line="19" pos:column="28"/></operator><name pos:line="19" pos:column="25">get_refs_list<pos:position pos:line="19" pos:column="38"/></name></name> <operator pos:line="19" pos:column="39">||<pos:position pos:line="19" pos:column="41"/></operator> <operator pos:line="19" pos:column="42">!<pos:position pos:line="19" pos:column="43"/></operator><name><name pos:line="19" pos:column="43">transport<pos:position pos:line="19" pos:column="52"/></name><operator pos:line="19" pos:column="52">-&gt;<pos:position pos:line="19" pos:column="57"/></operator><name pos:line="19" pos:column="54">fetch<pos:position pos:line="19" pos:column="59"/></name></name></expr>)<pos:position pos:line="19" pos:column="60"/></condition><then pos:line="19" pos:column="60">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="17">die<pos:position pos:line="20" pos:column="20"/></name><argument_list pos:line="20" pos:column="20">(<argument><expr><call><name pos:line="20" pos:column="21">_<pos:position pos:line="20" pos:column="22"/></name><argument_list pos:line="20" pos:column="22">(<argument><expr><literal type="string" pos:line="20" pos:column="23">"Don't know how to fetch from %s"<pos:position pos:line="20" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="57"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="59">transport<pos:position pos:line="20" pos:column="68"/></name><operator pos:line="20" pos:column="68">-&gt;<pos:position pos:line="20" pos:column="73"/></operator><name pos:line="20" pos:column="70">url<pos:position pos:line="20" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="75"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="22" pos:column="9">/* if not appending, truncate FETCH_HEAD */</comment>
	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><operator pos:line="23" pos:column="13">!<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="14">append<pos:position pos:line="23" pos:column="20"/></name> <operator pos:line="23" pos:column="21">&amp;&amp;<pos:position pos:line="23" pos:column="31"/></operator> <operator pos:line="23" pos:column="24">!<pos:position pos:line="23" pos:column="25"/></operator><name pos:line="23" pos:column="25">dry_run<pos:position pos:line="23" pos:column="32"/></name></expr>)<pos:position pos:line="23" pos:column="33"/></condition><then pos:line="23" pos:column="33"> <block pos:line="23" pos:column="34">{
		<expr_stmt><expr><name pos:line="24" pos:column="17">retcode<pos:position pos:line="24" pos:column="24"/></name> <operator pos:line="24" pos:column="25">=<pos:position pos:line="24" pos:column="26"/></operator> <call><name pos:line="24" pos:column="27">truncate_fetch_head<pos:position pos:line="24" pos:column="46"/></name><argument_list pos:line="24" pos:column="46">()<pos:position pos:line="24" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="49"/></expr_stmt>
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><name pos:line="25" pos:column="21">retcode<pos:position pos:line="25" pos:column="28"/></name></expr>)<pos:position pos:line="25" pos:column="29"/></condition><then pos:line="25" pos:column="29">
			<block type="pseudo"><goto pos:line="26" pos:column="25">goto <name pos:line="26" pos:column="30">cleanup<pos:position pos:line="26" pos:column="37"/></name>;<pos:position pos:line="26" pos:column="38"/></goto></block></then></if>
	}<pos:position pos:line="27" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="29" pos:column="9">ref_map<pos:position pos:line="29" pos:column="16"/></name> <operator pos:line="29" pos:column="17">=<pos:position pos:line="29" pos:column="18"/></operator> <call><name pos:line="29" pos:column="19">get_ref_map<pos:position pos:line="29" pos:column="30"/></name><argument_list pos:line="29" pos:column="30">(<argument><expr><name pos:line="29" pos:column="31">transport<pos:position pos:line="29" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="42">refs<pos:position pos:line="29" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="48">ref_count<pos:position pos:line="29" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="59">tags<pos:position pos:line="29" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="65">&amp;<pos:position pos:line="29" pos:column="70"/></operator><name pos:line="29" pos:column="66">autotags<pos:position pos:line="29" pos:column="74"/></name></expr></argument>)<pos:position pos:line="29" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="76"/></expr_stmt>
	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><operator pos:line="30" pos:column="13">!<pos:position pos:line="30" pos:column="14"/></operator><name pos:line="30" pos:column="14">update_head_ok<pos:position pos:line="30" pos:column="28"/></name></expr>)<pos:position pos:line="30" pos:column="29"/></condition><then pos:line="30" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="17">check_not_current_branch<pos:position pos:line="31" pos:column="41"/></name><argument_list pos:line="31" pos:column="41">(<argument><expr><name pos:line="31" pos:column="42">ref_map<pos:position pos:line="31" pos:column="49"/></name></expr></argument>)<pos:position pos:line="31" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="51"/></expr_stmt></block></then></if>

	<for pos:line="33" pos:column="9">for <control pos:line="33" pos:column="13">(<init><expr><name pos:line="33" pos:column="14">rm<pos:position pos:line="33" pos:column="16"/></name> <operator pos:line="33" pos:column="17">=<pos:position pos:line="33" pos:column="18"/></operator> <name pos:line="33" pos:column="19">ref_map<pos:position pos:line="33" pos:column="26"/></name></expr>;<pos:position pos:line="33" pos:column="27"/></init> <condition><expr><name pos:line="33" pos:column="28">rm<pos:position pos:line="33" pos:column="30"/></name></expr>;<pos:position pos:line="33" pos:column="31"/></condition> <incr><expr><name pos:line="33" pos:column="32">rm<pos:position pos:line="33" pos:column="34"/></name> <operator pos:line="33" pos:column="35">=<pos:position pos:line="33" pos:column="36"/></operator> <name><name pos:line="33" pos:column="37">rm<pos:position pos:line="33" pos:column="39"/></name><operator pos:line="33" pos:column="39">-&gt;<pos:position pos:line="33" pos:column="44"/></operator><name pos:line="33" pos:column="41">next<pos:position pos:line="33" pos:column="45"/></name></name></expr></incr>)<pos:position pos:line="33" pos:column="46"/></control> <block pos:line="33" pos:column="47">{
		<if pos:line="34" pos:column="17">if <condition pos:line="34" pos:column="20">(<expr><name><name pos:line="34" pos:column="21">rm<pos:position pos:line="34" pos:column="23"/></name><operator pos:line="34" pos:column="23">-&gt;<pos:position pos:line="34" pos:column="28"/></operator><name pos:line="34" pos:column="25">peer_ref<pos:position pos:line="34" pos:column="33"/></name></name></expr>)<pos:position pos:line="34" pos:column="34"/></condition><then pos:line="34" pos:column="34"> <block pos:line="34" pos:column="35">{
			<decl_stmt><decl><type><name><name pos:line="35" pos:column="25">struct<pos:position pos:line="35" pos:column="31"/></name> <name pos:line="35" pos:column="32">string_list_item<pos:position pos:line="35" pos:column="48"/></name></name> <modifier pos:line="35" pos:column="49">*<pos:position pos:line="35" pos:column="50"/></modifier></type><name pos:line="35" pos:column="50">peer_item<pos:position pos:line="35" pos:column="59"/></name> <init pos:line="35" pos:column="60">=
				<expr><call><name pos:line="36" pos:column="33">string_list_lookup<pos:position pos:line="36" pos:column="51"/></name><argument_list pos:line="36" pos:column="51">(<argument><expr><operator pos:line="36" pos:column="52">&amp;<pos:position pos:line="36" pos:column="57"/></operator><name pos:line="36" pos:column="53">existing_refs<pos:position pos:line="36" pos:column="66"/></name></expr></argument>,
						   <argument><expr><name><name pos:line="37" pos:column="52">rm<pos:position pos:line="37" pos:column="54"/></name><operator pos:line="37" pos:column="54">-&gt;<pos:position pos:line="37" pos:column="59"/></operator><name pos:line="37" pos:column="56">peer_ref<pos:position pos:line="37" pos:column="64"/></name><operator pos:line="37" pos:column="64">-&gt;<pos:position pos:line="37" pos:column="69"/></operator><name pos:line="37" pos:column="66">name<pos:position pos:line="37" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="37" pos:column="72"/></decl_stmt>
			<if pos:line="38" pos:column="25">if <condition pos:line="38" pos:column="28">(<expr><name pos:line="38" pos:column="29">peer_item<pos:position pos:line="38" pos:column="38"/></name></expr>)<pos:position pos:line="38" pos:column="39"/></condition><then pos:line="38" pos:column="39"> <block pos:line="38" pos:column="40">{
				<decl_stmt><decl><type><name><name pos:line="39" pos:column="33">struct<pos:position pos:line="39" pos:column="39"/></name> <name pos:line="39" pos:column="40">object_id<pos:position pos:line="39" pos:column="49"/></name></name> <modifier pos:line="39" pos:column="50">*<pos:position pos:line="39" pos:column="51"/></modifier></type><name pos:line="39" pos:column="51">old_oid<pos:position pos:line="39" pos:column="58"/></name> <init pos:line="39" pos:column="59">= <expr><name><name pos:line="39" pos:column="61">peer_item<pos:position pos:line="39" pos:column="70"/></name><operator pos:line="39" pos:column="70">-&gt;<pos:position pos:line="39" pos:column="75"/></operator><name pos:line="39" pos:column="72">util<pos:position pos:line="39" pos:column="76"/></name></name></expr></init></decl>;<pos:position pos:line="39" pos:column="77"/></decl_stmt>
				<expr_stmt><expr><call><name pos:line="40" pos:column="33">oidcpy<pos:position pos:line="40" pos:column="39"/></name><argument_list pos:line="40" pos:column="39">(<argument><expr><operator pos:line="40" pos:column="40">&amp;<pos:position pos:line="40" pos:column="45"/></operator><name><name pos:line="40" pos:column="41">rm<pos:position pos:line="40" pos:column="43"/></name><operator pos:line="40" pos:column="43">-&gt;<pos:position pos:line="40" pos:column="48"/></operator><name pos:line="40" pos:column="45">peer_ref<pos:position pos:line="40" pos:column="53"/></name><operator pos:line="40" pos:column="53">-&gt;<pos:position pos:line="40" pos:column="58"/></operator><name pos:line="40" pos:column="55">old_oid<pos:position pos:line="40" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="64">old_oid<pos:position pos:line="40" pos:column="71"/></name></expr></argument>)<pos:position pos:line="40" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="73"/></expr_stmt>
			}<pos:position pos:line="41" pos:column="26"/></block></then></if>
		}<pos:position pos:line="42" pos:column="18"/></block></then></if>
	}<pos:position pos:line="43" pos:column="10"/></block></for>

	<if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><name pos:line="45" pos:column="13">tags<pos:position pos:line="45" pos:column="17"/></name> <operator pos:line="45" pos:column="18">==<pos:position pos:line="45" pos:column="20"/></operator> <name pos:line="45" pos:column="21">TAGS_DEFAULT<pos:position pos:line="45" pos:column="33"/></name> <operator pos:line="45" pos:column="34">&amp;&amp;<pos:position pos:line="45" pos:column="44"/></operator> <name pos:line="45" pos:column="37">autotags<pos:position pos:line="45" pos:column="45"/></name></expr>)<pos:position pos:line="45" pos:column="46"/></condition><then pos:line="45" pos:column="46">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="46" pos:column="17">transport_set_option<pos:position pos:line="46" pos:column="37"/></name><argument_list pos:line="46" pos:column="37">(<argument><expr><name pos:line="46" pos:column="38">transport<pos:position pos:line="46" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="49">TRANS_OPT_FOLLOWTAGS<pos:position pos:line="46" pos:column="69"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="71">"1"<pos:position pos:line="46" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="76"/></expr_stmt></block></then></if>
	<if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><name pos:line="47" pos:column="13">prune<pos:position pos:line="47" pos:column="18"/></name></expr>)<pos:position pos:line="47" pos:column="19"/></condition><then pos:line="47" pos:column="19"> <block pos:line="47" pos:column="20">{
		<comment type="block" pos:line="48" pos:column="17">/*
		 * We only prune based on refspecs specified
		 * explicitly (via command line or configuration); we
		 * don't care whether --tags was specified.
		 */</comment>
		<if pos:line="53" pos:column="17">if <condition pos:line="53" pos:column="20">(<expr><name pos:line="53" pos:column="21">ref_count<pos:position pos:line="53" pos:column="30"/></name></expr>)<pos:position pos:line="53" pos:column="31"/></condition><then pos:line="53" pos:column="31"> <block pos:line="53" pos:column="32">{
			<expr_stmt><expr><call><name pos:line="54" pos:column="25">prune_refs<pos:position pos:line="54" pos:column="35"/></name><argument_list pos:line="54" pos:column="35">(<argument><expr><name pos:line="54" pos:column="36">refs<pos:position pos:line="54" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="42">ref_count<pos:position pos:line="54" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="53">ref_map<pos:position pos:line="54" pos:column="60"/></name></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="62">transport<pos:position pos:line="54" pos:column="71"/></name><operator pos:line="54" pos:column="71">-&gt;<pos:position pos:line="54" pos:column="76"/></operator><name pos:line="54" pos:column="73">url<pos:position pos:line="54" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="78"/></expr_stmt>
		}<pos:position pos:line="55" pos:column="18"/></block></then> <else pos:line="55" pos:column="19">else <block pos:line="55" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="56" pos:column="25">prune_refs<pos:position pos:line="56" pos:column="35"/></name><argument_list pos:line="56" pos:column="35">(<argument><expr><name><name pos:line="56" pos:column="36">transport<pos:position pos:line="56" pos:column="45"/></name><operator pos:line="56" pos:column="45">-&gt;<pos:position pos:line="56" pos:column="50"/></operator><name pos:line="56" pos:column="47">remote<pos:position pos:line="56" pos:column="53"/></name><operator pos:line="56" pos:column="53">-&gt;<pos:position pos:line="56" pos:column="58"/></operator><name pos:line="56" pos:column="55">fetch<pos:position pos:line="56" pos:column="60"/></name></name></expr></argument>,
				   <argument><expr><name><name pos:line="57" pos:column="36">transport<pos:position pos:line="57" pos:column="45"/></name><operator pos:line="57" pos:column="45">-&gt;<pos:position pos:line="57" pos:column="50"/></operator><name pos:line="57" pos:column="47">remote<pos:position pos:line="57" pos:column="53"/></name><operator pos:line="57" pos:column="53">-&gt;<pos:position pos:line="57" pos:column="58"/></operator><name pos:line="57" pos:column="55">fetch_refspec_nr<pos:position pos:line="57" pos:column="71"/></name></name></expr></argument>,
				   <argument><expr><name pos:line="58" pos:column="36">ref_map<pos:position pos:line="58" pos:column="43"/></name></expr></argument>,
				   <argument><expr><name><name pos:line="59" pos:column="36">transport<pos:position pos:line="59" pos:column="45"/></name><operator pos:line="59" pos:column="45">-&gt;<pos:position pos:line="59" pos:column="50"/></operator><name pos:line="59" pos:column="47">url<pos:position pos:line="59" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="52"/></expr_stmt>
		}<pos:position pos:line="60" pos:column="18"/></block></else></if>
	}<pos:position pos:line="61" pos:column="10"/></block></then></if>
	<if pos:line="62" pos:column="9">if <condition pos:line="62" pos:column="12">(<expr><call><name pos:line="62" pos:column="13">fetch_refs<pos:position pos:line="62" pos:column="23"/></name><argument_list pos:line="62" pos:column="23">(<argument><expr><name pos:line="62" pos:column="24">transport<pos:position pos:line="62" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="35">ref_map<pos:position pos:line="62" pos:column="42"/></name></expr></argument>)<pos:position pos:line="62" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="62" pos:column="44"/></condition><then pos:line="62" pos:column="44"> <block pos:line="62" pos:column="45">{
		<expr_stmt><expr><call><name pos:line="63" pos:column="17">free_refs<pos:position pos:line="63" pos:column="26"/></name><argument_list pos:line="63" pos:column="26">(<argument><expr><name pos:line="63" pos:column="27">ref_map<pos:position pos:line="63" pos:column="34"/></name></expr></argument>)<pos:position pos:line="63" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><name pos:line="64" pos:column="17">retcode<pos:position pos:line="64" pos:column="24"/></name> <operator pos:line="64" pos:column="25">=<pos:position pos:line="64" pos:column="26"/></operator> <literal type="number" pos:line="64" pos:column="27">1<pos:position pos:line="64" pos:column="28"/></literal></expr>;<pos:position pos:line="64" pos:column="29"/></expr_stmt>
		<goto pos:line="65" pos:column="17">goto <name pos:line="65" pos:column="22">cleanup<pos:position pos:line="65" pos:column="29"/></name>;<pos:position pos:line="65" pos:column="30"/></goto>
	}<pos:position pos:line="66" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="67" pos:column="9">free_refs<pos:position pos:line="67" pos:column="18"/></name><argument_list pos:line="67" pos:column="18">(<argument><expr><name pos:line="67" pos:column="19">ref_map<pos:position pos:line="67" pos:column="26"/></name></expr></argument>)<pos:position pos:line="67" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="28"/></expr_stmt>

	<comment type="block" pos:line="69" pos:column="9">/* if neither --no-tags nor --tags was specified, do automated tag
	 * following ... */</comment>
	<if pos:line="71" pos:column="9">if <condition pos:line="71" pos:column="12">(<expr><name pos:line="71" pos:column="13">tags<pos:position pos:line="71" pos:column="17"/></name> <operator pos:line="71" pos:column="18">==<pos:position pos:line="71" pos:column="20"/></operator> <name pos:line="71" pos:column="21">TAGS_DEFAULT<pos:position pos:line="71" pos:column="33"/></name> <operator pos:line="71" pos:column="34">&amp;&amp;<pos:position pos:line="71" pos:column="44"/></operator> <name pos:line="71" pos:column="37">autotags<pos:position pos:line="71" pos:column="45"/></name></expr>)<pos:position pos:line="71" pos:column="46"/></condition><then pos:line="71" pos:column="46"> <block pos:line="71" pos:column="47">{
		<decl_stmt><decl><type><name><name pos:line="72" pos:column="17">struct<pos:position pos:line="72" pos:column="23"/></name> <name pos:line="72" pos:column="24">ref<pos:position pos:line="72" pos:column="27"/></name></name> <modifier pos:line="72" pos:column="28">*<pos:position pos:line="72" pos:column="29"/></modifier><modifier pos:line="72" pos:column="29">*<pos:position pos:line="72" pos:column="30"/></modifier></type><name pos:line="72" pos:column="30">tail<pos:position pos:line="72" pos:column="34"/></name> <init pos:line="72" pos:column="35">= <expr><operator pos:line="72" pos:column="37">&amp;<pos:position pos:line="72" pos:column="42"/></operator><name pos:line="72" pos:column="38">ref_map<pos:position pos:line="72" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="72" pos:column="46"/></decl_stmt>
		<expr_stmt><expr><name pos:line="73" pos:column="17">ref_map<pos:position pos:line="73" pos:column="24"/></name> <operator pos:line="73" pos:column="25">=<pos:position pos:line="73" pos:column="26"/></operator> <name pos:line="73" pos:column="27">NULL<pos:position pos:line="73" pos:column="31"/></name></expr>;<pos:position pos:line="73" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="74" pos:column="17">find_non_local_tags<pos:position pos:line="74" pos:column="36"/></name><argument_list pos:line="74" pos:column="36">(<argument><expr><name pos:line="74" pos:column="37">transport<pos:position pos:line="74" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="74" pos:column="48">&amp;<pos:position pos:line="74" pos:column="53"/></operator><name pos:line="74" pos:column="49">ref_map<pos:position pos:line="74" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="74" pos:column="58">&amp;<pos:position pos:line="74" pos:column="63"/></operator><name pos:line="74" pos:column="59">tail<pos:position pos:line="74" pos:column="63"/></name></expr></argument>)<pos:position pos:line="74" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="65"/></expr_stmt>
		<if pos:line="75" pos:column="17">if <condition pos:line="75" pos:column="20">(<expr><name pos:line="75" pos:column="21">ref_map<pos:position pos:line="75" pos:column="28"/></name></expr>)<pos:position pos:line="75" pos:column="29"/></condition><then pos:line="75" pos:column="29">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="76" pos:column="25">backfill_tags<pos:position pos:line="76" pos:column="38"/></name><argument_list pos:line="76" pos:column="38">(<argument><expr><name pos:line="76" pos:column="39">transport<pos:position pos:line="76" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="50">ref_map<pos:position pos:line="76" pos:column="57"/></name></expr></argument>)<pos:position pos:line="76" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="59"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="77" pos:column="17">free_refs<pos:position pos:line="77" pos:column="26"/></name><argument_list pos:line="77" pos:column="26">(<argument><expr><name pos:line="77" pos:column="27">ref_map<pos:position pos:line="77" pos:column="34"/></name></expr></argument>)<pos:position pos:line="77" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="78" pos:column="10"/></block></then></if>

 <label><name pos:line="80" pos:column="2">cleanup<pos:position pos:line="80" pos:column="9"/></name>:<pos:position pos:line="80" pos:column="10"/></label>
	<expr_stmt><expr><call><name pos:line="81" pos:column="9">string_list_clear<pos:position pos:line="81" pos:column="26"/></name><argument_list pos:line="81" pos:column="26">(<argument><expr><operator pos:line="81" pos:column="27">&amp;<pos:position pos:line="81" pos:column="32"/></operator><name pos:line="81" pos:column="28">existing_refs<pos:position pos:line="81" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="81" pos:column="43">1<pos:position pos:line="81" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="46"/></expr_stmt>
	<return pos:line="82" pos:column="9">return <expr><name pos:line="82" pos:column="16">retcode<pos:position pos:line="82" pos:column="23"/></name></expr>;<pos:position pos:line="82" pos:column="24"/></return>
}<pos:position pos:line="83" pos:column="2"/></block></function></unit>

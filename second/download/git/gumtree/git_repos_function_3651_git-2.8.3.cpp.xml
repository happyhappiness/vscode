<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3651_git-2.8.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">show_pre_context<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name><name pos:line="1" pos:column="30">struct<pos:position pos:line="1" pos:column="36"/></name> <name pos:line="1" pos:column="37">grep_opt<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">opt<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="52">struct<pos:position pos:line="1" pos:column="58"/></name> <name pos:line="1" pos:column="59">grep_source<pos:position pos:line="1" pos:column="70"/></name></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">gs<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>,
			     <parameter><decl><type><name pos:line="2" pos:column="30">char<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">bol<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="41">char<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">end<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="52">unsigned<pos:position pos:line="2" pos:column="60"/></name></type> <name pos:line="2" pos:column="61">lno<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="65"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">unsigned<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">cur<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><name pos:line="4" pos:column="24">lno<pos:position pos:line="4" pos:column="27"/></name></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="29">from<pos:position pos:line="4" pos:column="33"/></name> <init pos:line="4" pos:column="34">= <expr><literal type="number" pos:line="4" pos:column="36">1<pos:position pos:line="4" pos:column="37"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="39">funcname_lno<pos:position pos:line="4" pos:column="51"/></name> <init pos:line="4" pos:column="52">= <expr><literal type="number" pos:line="4" pos:column="54">0<pos:position pos:line="4" pos:column="55"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="56"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">funcname_needed<pos:position pos:line="5" pos:column="28"/></name> <init pos:line="5" pos:column="29">= <expr><operator pos:line="5" pos:column="31">!<pos:position pos:line="5" pos:column="32"/></operator><operator pos:line="5" pos:column="32">!<pos:position pos:line="5" pos:column="33"/></operator><name><name pos:line="5" pos:column="33">opt<pos:position pos:line="5" pos:column="36"/></name><operator pos:line="5" pos:column="36">-&gt;<pos:position pos:line="5" pos:column="41"/></operator><name pos:line="5" pos:column="38">funcname<pos:position pos:line="5" pos:column="46"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="47"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name><name pos:line="7" pos:column="13">opt<pos:position pos:line="7" pos:column="16"/></name><operator pos:line="7" pos:column="16">-&gt;<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="18">funcbody<pos:position pos:line="7" pos:column="26"/></name></name> <operator pos:line="7" pos:column="27">&amp;&amp;<pos:position pos:line="7" pos:column="37"/></operator> <operator pos:line="7" pos:column="30">!<pos:position pos:line="7" pos:column="31"/></operator><call><name pos:line="7" pos:column="31">match_funcname<pos:position pos:line="7" pos:column="45"/></name><argument_list pos:line="7" pos:column="45">(<argument><expr><name pos:line="7" pos:column="46">opt<pos:position pos:line="7" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="51">gs<pos:position pos:line="7" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="55">bol<pos:position pos:line="7" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="60">end<pos:position pos:line="7" pos:column="63"/></name></expr></argument>)<pos:position pos:line="7" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="65"/></condition><then pos:line="7" pos:column="65">
		<block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="17">funcname_needed<pos:position pos:line="8" pos:column="32"/></name> <operator pos:line="8" pos:column="33">=<pos:position pos:line="8" pos:column="34"/></operator> <literal type="number" pos:line="8" pos:column="35">2<pos:position pos:line="8" pos:column="36"/></literal></expr>;<pos:position pos:line="8" pos:column="37"/></expr_stmt></block></then></if>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name><name pos:line="10" pos:column="13">opt<pos:position pos:line="10" pos:column="16"/></name><operator pos:line="10" pos:column="16">-&gt;<pos:position pos:line="10" pos:column="21"/></operator><name pos:line="10" pos:column="18">pre_context<pos:position pos:line="10" pos:column="29"/></name></name> <operator pos:line="10" pos:column="30">&lt;<pos:position pos:line="10" pos:column="34"/></operator> <name pos:line="10" pos:column="32">lno<pos:position pos:line="10" pos:column="35"/></name></expr>)<pos:position pos:line="10" pos:column="36"/></condition><then pos:line="10" pos:column="36">
		<block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="17">from<pos:position pos:line="11" pos:column="21"/></name> <operator pos:line="11" pos:column="22">=<pos:position pos:line="11" pos:column="23"/></operator> <name pos:line="11" pos:column="24">lno<pos:position pos:line="11" pos:column="27"/></name> <operator pos:line="11" pos:column="28">-<pos:position pos:line="11" pos:column="29"/></operator> <name><name pos:line="11" pos:column="30">opt<pos:position pos:line="11" pos:column="33"/></name><operator pos:line="11" pos:column="33">-&gt;<pos:position pos:line="11" pos:column="38"/></operator><name pos:line="11" pos:column="35">pre_context<pos:position pos:line="11" pos:column="46"/></name></name></expr>;<pos:position pos:line="11" pos:column="47"/></expr_stmt></block></then></if>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">from<pos:position pos:line="12" pos:column="17"/></name> <operator pos:line="12" pos:column="18">&lt;=<pos:position pos:line="12" pos:column="23"/></operator> <name><name pos:line="12" pos:column="21">opt<pos:position pos:line="12" pos:column="24"/></name><operator pos:line="12" pos:column="24">-&gt;<pos:position pos:line="12" pos:column="29"/></operator><name pos:line="12" pos:column="26">last_shown<pos:position pos:line="12" pos:column="36"/></name></name></expr>)<pos:position pos:line="12" pos:column="37"/></condition><then pos:line="12" pos:column="37">
		<block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="17">from<pos:position pos:line="13" pos:column="21"/></name> <operator pos:line="13" pos:column="22">=<pos:position pos:line="13" pos:column="23"/></operator> <name><name pos:line="13" pos:column="24">opt<pos:position pos:line="13" pos:column="27"/></name><operator pos:line="13" pos:column="27">-&gt;<pos:position pos:line="13" pos:column="32"/></operator><name pos:line="13" pos:column="29">last_shown<pos:position pos:line="13" pos:column="39"/></name></name> <operator pos:line="13" pos:column="40">+<pos:position pos:line="13" pos:column="41"/></operator> <literal type="number" pos:line="13" pos:column="42">1<pos:position pos:line="13" pos:column="43"/></literal></expr>;<pos:position pos:line="13" pos:column="44"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="15" pos:column="9">/* Rewind. */</comment>
	<while pos:line="16" pos:column="9">while <condition pos:line="16" pos:column="15">(<expr><name pos:line="16" pos:column="16">bol<pos:position pos:line="16" pos:column="19"/></name> <operator pos:line="16" pos:column="20">&gt;<pos:position pos:line="16" pos:column="24"/></operator> <name><name pos:line="16" pos:column="22">gs<pos:position pos:line="16" pos:column="24"/></name><operator pos:line="16" pos:column="24">-&gt;<pos:position pos:line="16" pos:column="29"/></operator><name pos:line="16" pos:column="26">buf<pos:position pos:line="16" pos:column="29"/></name></name> <operator pos:line="16" pos:column="30">&amp;&amp;<pos:position pos:line="16" pos:column="40"/></operator>
	       <name pos:line="17" pos:column="16">cur<pos:position pos:line="17" pos:column="19"/></name> <operator pos:line="17" pos:column="20">&gt;<pos:position pos:line="17" pos:column="24"/></operator> <operator pos:line="17" pos:column="22">(<pos:position pos:line="17" pos:column="23"/></operator><ternary><condition><expr><name pos:line="17" pos:column="23">funcname_needed<pos:position pos:line="17" pos:column="38"/></name> <operator pos:line="17" pos:column="39">==<pos:position pos:line="17" pos:column="41"/></operator> <literal type="number" pos:line="17" pos:column="42">2<pos:position pos:line="17" pos:column="43"/></literal></expr> ?<pos:position pos:line="17" pos:column="45"/></condition><then pos:line="17" pos:column="45"> <expr><name><name pos:line="17" pos:column="46">opt<pos:position pos:line="17" pos:column="49"/></name><operator pos:line="17" pos:column="49">-&gt;<pos:position pos:line="17" pos:column="54"/></operator><name pos:line="17" pos:column="51">last_shown<pos:position pos:line="17" pos:column="61"/></name></name> <operator pos:line="17" pos:column="62">+<pos:position pos:line="17" pos:column="63"/></operator> <literal type="number" pos:line="17" pos:column="64">1<pos:position pos:line="17" pos:column="65"/></literal></expr> <pos:position pos:line="17" pos:column="66"/></then><else pos:line="17" pos:column="66">: <expr><name pos:line="17" pos:column="68">from<pos:position pos:line="17" pos:column="72"/></name></expr></else></ternary><operator pos:line="17" pos:column="72">)<pos:position pos:line="17" pos:column="73"/></operator></expr>)<pos:position pos:line="17" pos:column="74"/></condition> <block pos:line="17" pos:column="75">{
		<decl_stmt><decl><type><name pos:line="18" pos:column="17">char<pos:position pos:line="18" pos:column="21"/></name> <modifier pos:line="18" pos:column="22">*<pos:position pos:line="18" pos:column="23"/></modifier></type><name pos:line="18" pos:column="23">eol<pos:position pos:line="18" pos:column="26"/></name> <init pos:line="18" pos:column="27">= <expr><operator pos:line="18" pos:column="29">--<pos:position pos:line="18" pos:column="31"/></operator><name pos:line="18" pos:column="31">bol<pos:position pos:line="18" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="18" pos:column="35"/></decl_stmt>

		<while pos:line="20" pos:column="17">while <condition pos:line="20" pos:column="23">(<expr><name pos:line="20" pos:column="24">bol<pos:position pos:line="20" pos:column="27"/></name> <operator pos:line="20" pos:column="28">&gt;<pos:position pos:line="20" pos:column="32"/></operator> <name><name pos:line="20" pos:column="30">gs<pos:position pos:line="20" pos:column="32"/></name><operator pos:line="20" pos:column="32">-&gt;<pos:position pos:line="20" pos:column="37"/></operator><name pos:line="20" pos:column="34">buf<pos:position pos:line="20" pos:column="37"/></name></name> <operator pos:line="20" pos:column="38">&amp;&amp;<pos:position pos:line="20" pos:column="48"/></operator> <name><name pos:line="20" pos:column="41">bol<pos:position pos:line="20" pos:column="44"/></name><index pos:line="20" pos:column="44">[<expr><operator pos:line="20" pos:column="45">-<pos:position pos:line="20" pos:column="46"/></operator><literal type="number" pos:line="20" pos:column="46">1<pos:position pos:line="20" pos:column="47"/></literal></expr>]<pos:position pos:line="20" pos:column="48"/></index></name> <operator pos:line="20" pos:column="49">!=<pos:position pos:line="20" pos:column="51"/></operator> <literal type="char" pos:line="20" pos:column="52">'\n'<pos:position pos:line="20" pos:column="56"/></literal></expr>)<pos:position pos:line="20" pos:column="57"/></condition>
			<block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="25">bol<pos:position pos:line="21" pos:column="28"/></name><operator pos:line="21" pos:column="28">--<pos:position pos:line="21" pos:column="30"/></operator></expr>;<pos:position pos:line="21" pos:column="31"/></expr_stmt></block></while>
		<expr_stmt><expr><name pos:line="22" pos:column="17">cur<pos:position pos:line="22" pos:column="20"/></name><operator pos:line="22" pos:column="20">--<pos:position pos:line="22" pos:column="22"/></operator></expr>;<pos:position pos:line="22" pos:column="23"/></expr_stmt>
		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><name pos:line="23" pos:column="21">funcname_needed<pos:position pos:line="23" pos:column="36"/></name> <operator pos:line="23" pos:column="37">&amp;&amp;<pos:position pos:line="23" pos:column="47"/></operator> <call><name pos:line="23" pos:column="40">match_funcname<pos:position pos:line="23" pos:column="54"/></name><argument_list pos:line="23" pos:column="54">(<argument><expr><name pos:line="23" pos:column="55">opt<pos:position pos:line="23" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="60">gs<pos:position pos:line="23" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="64">bol<pos:position pos:line="23" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="69">eol<pos:position pos:line="23" pos:column="72"/></name></expr></argument>)<pos:position pos:line="23" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="74"/></condition><then pos:line="23" pos:column="74"> <block pos:line="23" pos:column="75">{
			<expr_stmt><expr><name pos:line="24" pos:column="25">funcname_lno<pos:position pos:line="24" pos:column="37"/></name> <operator pos:line="24" pos:column="38">=<pos:position pos:line="24" pos:column="39"/></operator> <name pos:line="24" pos:column="40">cur<pos:position pos:line="24" pos:column="43"/></name></expr>;<pos:position pos:line="24" pos:column="44"/></expr_stmt>
			<expr_stmt><expr><name pos:line="25" pos:column="25">funcname_needed<pos:position pos:line="25" pos:column="40"/></name> <operator pos:line="25" pos:column="41">=<pos:position pos:line="25" pos:column="42"/></operator> <literal type="number" pos:line="25" pos:column="43">0<pos:position pos:line="25" pos:column="44"/></literal></expr>;<pos:position pos:line="25" pos:column="45"/></expr_stmt>
		}<pos:position pos:line="26" pos:column="18"/></block></then></if>
	}<pos:position pos:line="27" pos:column="10"/></block></while>

	<comment type="block" pos:line="29" pos:column="9">/* We need to look even further back to find a function signature. */</comment>
	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name><name pos:line="30" pos:column="13">opt<pos:position pos:line="30" pos:column="16"/></name><operator pos:line="30" pos:column="16">-&gt;<pos:position pos:line="30" pos:column="21"/></operator><name pos:line="30" pos:column="18">funcname<pos:position pos:line="30" pos:column="26"/></name></name> <operator pos:line="30" pos:column="27">&amp;&amp;<pos:position pos:line="30" pos:column="37"/></operator> <name pos:line="30" pos:column="30">funcname_needed<pos:position pos:line="30" pos:column="45"/></name></expr>)<pos:position pos:line="30" pos:column="46"/></condition><then pos:line="30" pos:column="46">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="17">show_funcname_line<pos:position pos:line="31" pos:column="35"/></name><argument_list pos:line="31" pos:column="35">(<argument><expr><name pos:line="31" pos:column="36">opt<pos:position pos:line="31" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="41">gs<pos:position pos:line="31" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="45">bol<pos:position pos:line="31" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="50">cur<pos:position pos:line="31" pos:column="53"/></name></expr></argument>)<pos:position pos:line="31" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="55"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="33" pos:column="9">/* Back forward. */</comment>
	<while pos:line="34" pos:column="9">while <condition pos:line="34" pos:column="15">(<expr><name pos:line="34" pos:column="16">cur<pos:position pos:line="34" pos:column="19"/></name> <operator pos:line="34" pos:column="20">&lt;<pos:position pos:line="34" pos:column="24"/></operator> <name pos:line="34" pos:column="22">lno<pos:position pos:line="34" pos:column="25"/></name></expr>)<pos:position pos:line="34" pos:column="26"/></condition> <block pos:line="34" pos:column="27">{
		<decl_stmt><decl><type><name pos:line="35" pos:column="17">char<pos:position pos:line="35" pos:column="21"/></name> <modifier pos:line="35" pos:column="22">*<pos:position pos:line="35" pos:column="23"/></modifier></type><name pos:line="35" pos:column="23">eol<pos:position pos:line="35" pos:column="26"/></name> <init pos:line="35" pos:column="27">= <expr><name pos:line="35" pos:column="29">bol<pos:position pos:line="35" pos:column="32"/></name></expr></init></decl>, <decl><type ref="prev"/><name pos:line="35" pos:column="34">sign<pos:position pos:line="35" pos:column="38"/></name> <init pos:line="35" pos:column="39">= <expr><ternary><condition><expr><operator pos:line="35" pos:column="41">(<pos:position pos:line="35" pos:column="42"/></operator><name pos:line="35" pos:column="42">cur<pos:position pos:line="35" pos:column="45"/></name> <operator pos:line="35" pos:column="46">==<pos:position pos:line="35" pos:column="48"/></operator> <name pos:line="35" pos:column="49">funcname_lno<pos:position pos:line="35" pos:column="61"/></name><operator pos:line="35" pos:column="61">)<pos:position pos:line="35" pos:column="62"/></operator></expr> ?<pos:position pos:line="35" pos:column="64"/></condition><then pos:line="35" pos:column="64"> <expr><literal type="char" pos:line="35" pos:column="65">'='<pos:position pos:line="35" pos:column="68"/></literal></expr> <pos:position pos:line="35" pos:column="69"/></then><else pos:line="35" pos:column="69">: <expr><literal type="char" pos:line="35" pos:column="71">'-'<pos:position pos:line="35" pos:column="74"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="35" pos:column="75"/></decl_stmt>

		<while pos:line="37" pos:column="17">while <condition pos:line="37" pos:column="23">(<expr><operator pos:line="37" pos:column="24">*<pos:position pos:line="37" pos:column="25"/></operator><name pos:line="37" pos:column="25">eol<pos:position pos:line="37" pos:column="28"/></name> <operator pos:line="37" pos:column="29">!=<pos:position pos:line="37" pos:column="31"/></operator> <literal type="char" pos:line="37" pos:column="32">'\n'<pos:position pos:line="37" pos:column="36"/></literal></expr>)<pos:position pos:line="37" pos:column="37"/></condition>
			<block type="pseudo"><expr_stmt><expr><name pos:line="38" pos:column="25">eol<pos:position pos:line="38" pos:column="28"/></name><operator pos:line="38" pos:column="28">++<pos:position pos:line="38" pos:column="30"/></operator></expr>;<pos:position pos:line="38" pos:column="31"/></expr_stmt></block></while>
		<expr_stmt><expr><call><name pos:line="39" pos:column="17">show_line<pos:position pos:line="39" pos:column="26"/></name><argument_list pos:line="39" pos:column="26">(<argument><expr><name pos:line="39" pos:column="27">opt<pos:position pos:line="39" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="32">bol<pos:position pos:line="39" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="37">eol<pos:position pos:line="39" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="42">gs<pos:position pos:line="39" pos:column="44"/></name><operator pos:line="39" pos:column="44">-&gt;<pos:position pos:line="39" pos:column="49"/></operator><name pos:line="39" pos:column="46">name<pos:position pos:line="39" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="52">cur<pos:position pos:line="39" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="57">sign<pos:position pos:line="39" pos:column="61"/></name></expr></argument>)<pos:position pos:line="39" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="63"/></expr_stmt>
		<expr_stmt><expr><name pos:line="40" pos:column="17">bol<pos:position pos:line="40" pos:column="20"/></name> <operator pos:line="40" pos:column="21">=<pos:position pos:line="40" pos:column="22"/></operator> <name pos:line="40" pos:column="23">eol<pos:position pos:line="40" pos:column="26"/></name> <operator pos:line="40" pos:column="27">+<pos:position pos:line="40" pos:column="28"/></operator> <literal type="number" pos:line="40" pos:column="29">1<pos:position pos:line="40" pos:column="30"/></literal></expr>;<pos:position pos:line="40" pos:column="31"/></expr_stmt>
		<expr_stmt><expr><name pos:line="41" pos:column="17">cur<pos:position pos:line="41" pos:column="20"/></name><operator pos:line="41" pos:column="20">++<pos:position pos:line="41" pos:column="22"/></operator></expr>;<pos:position pos:line="41" pos:column="23"/></expr_stmt>
	}<pos:position pos:line="42" pos:column="10"/></block></while>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

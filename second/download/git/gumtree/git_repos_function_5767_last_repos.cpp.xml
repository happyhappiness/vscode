<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5767_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">backfill_tags<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">transport<pos:position pos:line="1" pos:column="43"/></name></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">transport<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="56">struct<pos:position pos:line="1" pos:column="62"/></name> <name pos:line="1" pos:column="63">ref<pos:position pos:line="1" pos:column="66"/></name></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">ref_map<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="76"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">cannot_reuse<pos:position pos:line="3" pos:column="25"/></name></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>

	<comment type="block" pos:line="5" pos:column="9">/*
	 * Once we have set TRANS_OPT_DEEPEN_SINCE, we can't unset it
	 * when remote helper is used (setting it to an empty string
	 * is not unsetting). We could extend the remote helper
	 * protocol for that, but for now, just force a new connection
	 * without deepen-since. Similar story for deepen-not.
	 */</comment>
	<expr_stmt><expr><name pos:line="12" pos:column="9">cannot_reuse<pos:position pos:line="12" pos:column="21"/></name> <operator pos:line="12" pos:column="22">=<pos:position pos:line="12" pos:column="23"/></operator> <name><name pos:line="12" pos:column="24">transport<pos:position pos:line="12" pos:column="33"/></name><operator pos:line="12" pos:column="33">-&gt;<pos:position pos:line="12" pos:column="38"/></operator><name pos:line="12" pos:column="35">cannot_reuse<pos:position pos:line="12" pos:column="47"/></name></name> <operator pos:line="12" pos:column="48">||<pos:position pos:line="12" pos:column="50"/></operator>
		<name pos:line="13" pos:column="17">deepen_since<pos:position pos:line="13" pos:column="29"/></name> <operator pos:line="13" pos:column="30">||<pos:position pos:line="13" pos:column="32"/></operator> <name><name pos:line="13" pos:column="33">deepen_not<pos:position pos:line="13" pos:column="43"/></name><operator pos:line="13" pos:column="43">.<pos:position pos:line="13" pos:column="44"/></operator><name pos:line="13" pos:column="44">nr<pos:position pos:line="13" pos:column="46"/></name></name></expr>;<pos:position pos:line="13" pos:column="47"/></expr_stmt>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">cannot_reuse<pos:position pos:line="14" pos:column="25"/></name></expr>)<pos:position pos:line="14" pos:column="26"/></condition><then pos:line="14" pos:column="26"> <block pos:line="14" pos:column="27">{
		<expr_stmt><expr><name pos:line="15" pos:column="17">gsecondary<pos:position pos:line="15" pos:column="27"/></name> <operator pos:line="15" pos:column="28">=<pos:position pos:line="15" pos:column="29"/></operator> <call><name pos:line="15" pos:column="30">prepare_transport<pos:position pos:line="15" pos:column="47"/></name><argument_list pos:line="15" pos:column="47">(<argument><expr><name><name pos:line="15" pos:column="48">transport<pos:position pos:line="15" pos:column="57"/></name><operator pos:line="15" pos:column="57">-&gt;<pos:position pos:line="15" pos:column="62"/></operator><name pos:line="15" pos:column="59">remote<pos:position pos:line="15" pos:column="65"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="67">0<pos:position pos:line="15" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="70"/></expr_stmt>
		<expr_stmt><expr><name pos:line="16" pos:column="17">transport<pos:position pos:line="16" pos:column="26"/></name> <operator pos:line="16" pos:column="27">=<pos:position pos:line="16" pos:column="28"/></operator> <name pos:line="16" pos:column="29">gsecondary<pos:position pos:line="16" pos:column="39"/></name></expr>;<pos:position pos:line="16" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="17" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="19" pos:column="9">transport_set_option<pos:position pos:line="19" pos:column="29"/></name><argument_list pos:line="19" pos:column="29">(<argument><expr><name pos:line="19" pos:column="30">transport<pos:position pos:line="19" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="41">TRANS_OPT_FOLLOWTAGS<pos:position pos:line="19" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="63">NULL<pos:position pos:line="19" pos:column="67"/></name></expr></argument>)<pos:position pos:line="19" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="69"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="20" pos:column="9">transport_set_option<pos:position pos:line="20" pos:column="29"/></name><argument_list pos:line="20" pos:column="29">(<argument><expr><name pos:line="20" pos:column="30">transport<pos:position pos:line="20" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="41">TRANS_OPT_DEPTH<pos:position pos:line="20" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="58">"0"<pos:position pos:line="20" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="63"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="21" pos:column="9">transport_set_option<pos:position pos:line="21" pos:column="29"/></name><argument_list pos:line="21" pos:column="29">(<argument><expr><name pos:line="21" pos:column="30">transport<pos:position pos:line="21" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="41">TRANS_OPT_DEEPEN_RELATIVE<pos:position pos:line="21" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="68">NULL<pos:position pos:line="21" pos:column="72"/></name></expr></argument>)<pos:position pos:line="21" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="74"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="22" pos:column="9">fetch_refs<pos:position pos:line="22" pos:column="19"/></name><argument_list pos:line="22" pos:column="19">(<argument><expr><name pos:line="22" pos:column="20">transport<pos:position pos:line="22" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="31">ref_map<pos:position pos:line="22" pos:column="38"/></name></expr></argument>)<pos:position pos:line="22" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="40"/></expr_stmt>

	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name pos:line="24" pos:column="13">gsecondary<pos:position pos:line="24" pos:column="23"/></name></expr>)<pos:position pos:line="24" pos:column="24"/></condition><then pos:line="24" pos:column="24"> <block pos:line="24" pos:column="25">{
		<expr_stmt><expr><call><name pos:line="25" pos:column="17">transport_disconnect<pos:position pos:line="25" pos:column="37"/></name><argument_list pos:line="25" pos:column="37">(<argument><expr><name pos:line="25" pos:column="38">gsecondary<pos:position pos:line="25" pos:column="48"/></name></expr></argument>)<pos:position pos:line="25" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="50"/></expr_stmt>
		<expr_stmt><expr><name pos:line="26" pos:column="17">gsecondary<pos:position pos:line="26" pos:column="27"/></name> <operator pos:line="26" pos:column="28">=<pos:position pos:line="26" pos:column="29"/></operator> <name pos:line="26" pos:column="30">NULL<pos:position pos:line="26" pos:column="34"/></name></expr>;<pos:position pos:line="26" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="27" pos:column="10"/></block></then></if>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5759_git-2.4.10.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">mchunkptr<pos:position pos:line="1" pos:column="17"/></name></type> <name pos:line="1" pos:column="18">mmap_resize<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">mstate<pos:position pos:line="1" pos:column="36"/></name></type> <name pos:line="1" pos:column="37">m<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">mchunkptr<pos:position pos:line="1" pos:column="49"/></name></type> <name pos:line="1" pos:column="50">oldp<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">size_t<pos:position pos:line="1" pos:column="62"/></name></type> <name pos:line="1" pos:column="63">nb<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list> <block pos:line="1" pos:column="67">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">size_t<pos:position pos:line="2" pos:column="9"/></name></type> <name pos:line="2" pos:column="10">oldsize<pos:position pos:line="2" pos:column="17"/></name> <init pos:line="2" pos:column="18">= <expr><call><name pos:line="2" pos:column="20">chunksize<pos:position pos:line="2" pos:column="29"/></name><argument_list pos:line="2" pos:column="29">(<argument><expr><name pos:line="2" pos:column="30">oldp<pos:position pos:line="2" pos:column="34"/></name></expr></argument>)<pos:position pos:line="2" pos:column="35"/></argument_list></call></expr></init></decl>;<pos:position pos:line="2" pos:column="36"/></decl_stmt>
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><call><name pos:line="3" pos:column="7">is_small<pos:position pos:line="3" pos:column="15"/></name><argument_list pos:line="3" pos:column="15">(<argument><expr><name pos:line="3" pos:column="16">nb<pos:position pos:line="3" pos:column="18"/></name></expr></argument>)<pos:position pos:line="3" pos:column="19"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="20"/></condition><then pos:line="3" pos:column="20"> <comment type="block" pos:line="3" pos:column="21">/* Can't shrink mmap regions below small size */</comment>
    <block type="pseudo"><return pos:line="4" pos:column="5">return <expr><literal type="number" pos:line="4" pos:column="12">0<pos:position pos:line="4" pos:column="13"/></literal></expr>;<pos:position pos:line="4" pos:column="14"/></return></block></then></if>
  <comment type="block" pos:line="5" pos:column="3">/* Keep old chunk if big enough but not too big */</comment>
  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name pos:line="6" pos:column="7">oldsize<pos:position pos:line="6" pos:column="14"/></name> <operator pos:line="6" pos:column="15">&gt;=<pos:position pos:line="6" pos:column="20"/></operator> <name pos:line="6" pos:column="18">nb<pos:position pos:line="6" pos:column="20"/></name> <operator pos:line="6" pos:column="21">+<pos:position pos:line="6" pos:column="22"/></operator> <name pos:line="6" pos:column="23">SIZE_T_SIZE<pos:position pos:line="6" pos:column="34"/></name> <operator pos:line="6" pos:column="35">&amp;&amp;<pos:position pos:line="6" pos:column="45"/></operator>
      <operator pos:line="7" pos:column="7">(<pos:position pos:line="7" pos:column="8"/></operator><name pos:line="7" pos:column="8">oldsize<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">-<pos:position pos:line="7" pos:column="17"/></operator> <name pos:line="7" pos:column="18">nb<pos:position pos:line="7" pos:column="20"/></name><operator pos:line="7" pos:column="20">)<pos:position pos:line="7" pos:column="21"/></operator> <operator pos:line="7" pos:column="22">&lt;=<pos:position pos:line="7" pos:column="27"/></operator> <operator pos:line="7" pos:column="25">(<pos:position pos:line="7" pos:column="26"/></operator><name><name pos:line="7" pos:column="26">mparams<pos:position pos:line="7" pos:column="33"/></name><operator pos:line="7" pos:column="33">.<pos:position pos:line="7" pos:column="34"/></operator><name pos:line="7" pos:column="34">granularity<pos:position pos:line="7" pos:column="45"/></name></name> <operator pos:line="7" pos:column="46">&lt;&lt;<pos:position pos:line="7" pos:column="54"/></operator> <literal type="number" pos:line="7" pos:column="49">1<pos:position pos:line="7" pos:column="50"/></literal><operator pos:line="7" pos:column="50">)<pos:position pos:line="7" pos:column="51"/></operator></expr>)<pos:position pos:line="7" pos:column="52"/></condition><then pos:line="7" pos:column="52">
    <block type="pseudo"><return pos:line="8" pos:column="5">return <expr><name pos:line="8" pos:column="12">oldp<pos:position pos:line="8" pos:column="16"/></name></expr>;<pos:position pos:line="8" pos:column="17"/></return></block></then>
  <else pos:line="9" pos:column="3">else <block pos:line="9" pos:column="8">{
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">size_t<pos:position pos:line="10" pos:column="11"/></name></type> <name pos:line="10" pos:column="12">offset<pos:position pos:line="10" pos:column="18"/></name> <init pos:line="10" pos:column="19">= <expr><name><name pos:line="10" pos:column="21">oldp<pos:position pos:line="10" pos:column="25"/></name><operator pos:line="10" pos:column="25">-&gt;<pos:position pos:line="10" pos:column="30"/></operator><name pos:line="10" pos:column="27">prev_foot<pos:position pos:line="10" pos:column="36"/></name></name> <operator pos:line="10" pos:column="37">&amp;<pos:position pos:line="10" pos:column="42"/></operator> <operator pos:line="10" pos:column="39">~<pos:position pos:line="10" pos:column="40"/></operator><name pos:line="10" pos:column="40">IS_MMAPPED_BIT<pos:position pos:line="10" pos:column="54"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="55"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">size_t<pos:position pos:line="11" pos:column="11"/></name></type> <name pos:line="11" pos:column="12">oldmmsize<pos:position pos:line="11" pos:column="21"/></name> <init pos:line="11" pos:column="22">= <expr><name pos:line="11" pos:column="24">oldsize<pos:position pos:line="11" pos:column="31"/></name> <operator pos:line="11" pos:column="32">+<pos:position pos:line="11" pos:column="33"/></operator> <name pos:line="11" pos:column="34">offset<pos:position pos:line="11" pos:column="40"/></name> <operator pos:line="11" pos:column="41">+<pos:position pos:line="11" pos:column="42"/></operator> <name pos:line="11" pos:column="43">MMAP_FOOT_PAD<pos:position pos:line="11" pos:column="56"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="57"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">size_t<pos:position pos:line="12" pos:column="11"/></name></type> <name pos:line="12" pos:column="12">newmmsize<pos:position pos:line="12" pos:column="21"/></name> <init pos:line="12" pos:column="22">= <expr><call><name pos:line="12" pos:column="24">mmap_align<pos:position pos:line="12" pos:column="34"/></name><argument_list pos:line="12" pos:column="34">(<argument><expr><name pos:line="12" pos:column="35">nb<pos:position pos:line="12" pos:column="37"/></name> <operator pos:line="12" pos:column="38">+<pos:position pos:line="12" pos:column="39"/></operator> <name pos:line="12" pos:column="40">SIX_SIZE_T_SIZES<pos:position pos:line="12" pos:column="56"/></name> <operator pos:line="12" pos:column="57">+<pos:position pos:line="12" pos:column="58"/></operator> <name pos:line="12" pos:column="59">CHUNK_ALIGN_MASK<pos:position pos:line="12" pos:column="75"/></name></expr></argument>)<pos:position pos:line="12" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="77"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">char<pos:position pos:line="13" pos:column="9"/></name><modifier pos:line="13" pos:column="9">*<pos:position pos:line="13" pos:column="10"/></modifier></type> <name pos:line="13" pos:column="11">cp<pos:position pos:line="13" pos:column="13"/></name> <init pos:line="13" pos:column="14">= <expr><operator pos:line="13" pos:column="16">(<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="17">char<pos:position pos:line="13" pos:column="21"/></name><operator pos:line="13" pos:column="21">*<pos:position pos:line="13" pos:column="22"/></operator><operator pos:line="13" pos:column="22">)<pos:position pos:line="13" pos:column="23"/></operator><call><name pos:line="13" pos:column="23">CALL_MREMAP<pos:position pos:line="13" pos:column="34"/></name><argument_list pos:line="13" pos:column="34">(<argument><expr><operator pos:line="13" pos:column="35">(<pos:position pos:line="13" pos:column="36"/></operator><name pos:line="13" pos:column="36">char<pos:position pos:line="13" pos:column="40"/></name><operator pos:line="13" pos:column="40">*<pos:position pos:line="13" pos:column="41"/></operator><operator pos:line="13" pos:column="41">)<pos:position pos:line="13" pos:column="42"/></operator><name pos:line="13" pos:column="42">oldp<pos:position pos:line="13" pos:column="46"/></name> <operator pos:line="13" pos:column="47">-<pos:position pos:line="13" pos:column="48"/></operator> <name pos:line="13" pos:column="49">offset<pos:position pos:line="13" pos:column="55"/></name></expr></argument>,
				  <argument><expr><name pos:line="14" pos:column="35">oldmmsize<pos:position pos:line="14" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="46">newmmsize<pos:position pos:line="14" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="57">1<pos:position pos:line="14" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="60"/></decl_stmt>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">cp<pos:position pos:line="15" pos:column="11"/></name> <operator pos:line="15" pos:column="12">!=<pos:position pos:line="15" pos:column="14"/></operator> <name pos:line="15" pos:column="15">CMFAIL<pos:position pos:line="15" pos:column="21"/></name></expr>)<pos:position pos:line="15" pos:column="22"/></condition><then pos:line="15" pos:column="22"> <block pos:line="15" pos:column="23">{
      <decl_stmt><decl><type><name pos:line="16" pos:column="7">mchunkptr<pos:position pos:line="16" pos:column="16"/></name></type> <name pos:line="16" pos:column="17">newp<pos:position pos:line="16" pos:column="21"/></name> <init pos:line="16" pos:column="22">= <expr><call pos:line="16" pos:column="24">(<name pos:line="16" pos:column="25">mchunkptr<pos:position pos:line="16" pos:column="34"/></name>)<argument_list pos:line="16" pos:column="35">(<argument><expr><name pos:line="16" pos:column="36">cp<pos:position pos:line="16" pos:column="38"/></name> <operator pos:line="16" pos:column="39">+<pos:position pos:line="16" pos:column="40"/></operator> <name pos:line="16" pos:column="41">offset<pos:position pos:line="16" pos:column="47"/></name></expr></argument>)<pos:position pos:line="16" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="16" pos:column="49"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="17" pos:column="7">size_t<pos:position pos:line="17" pos:column="13"/></name></type> <name pos:line="17" pos:column="14">psize<pos:position pos:line="17" pos:column="19"/></name> <init pos:line="17" pos:column="20">= <expr><name pos:line="17" pos:column="22">newmmsize<pos:position pos:line="17" pos:column="31"/></name> <operator pos:line="17" pos:column="32">-<pos:position pos:line="17" pos:column="33"/></operator> <name pos:line="17" pos:column="34">offset<pos:position pos:line="17" pos:column="40"/></name> <operator pos:line="17" pos:column="41">-<pos:position pos:line="17" pos:column="42"/></operator> <name pos:line="17" pos:column="43">MMAP_FOOT_PAD<pos:position pos:line="17" pos:column="56"/></name></expr></init></decl>;<pos:position pos:line="17" pos:column="57"/></decl_stmt>
      <expr_stmt><expr><name><name pos:line="18" pos:column="7">newp<pos:position pos:line="18" pos:column="11"/></name><operator pos:line="18" pos:column="11">-&gt;<pos:position pos:line="18" pos:column="16"/></operator><name pos:line="18" pos:column="13">head<pos:position pos:line="18" pos:column="17"/></name></name> <operator pos:line="18" pos:column="18">=<pos:position pos:line="18" pos:column="19"/></operator> <operator pos:line="18" pos:column="20">(<pos:position pos:line="18" pos:column="21"/></operator><name pos:line="18" pos:column="21">psize<pos:position pos:line="18" pos:column="26"/></name><operator pos:line="18" pos:column="26">|<pos:position pos:line="18" pos:column="27"/></operator><name pos:line="18" pos:column="27">CINUSE_BIT<pos:position pos:line="18" pos:column="37"/></name><operator pos:line="18" pos:column="37">)<pos:position pos:line="18" pos:column="38"/></operator></expr>;<pos:position pos:line="18" pos:column="39"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="19" pos:column="7">mark_inuse_foot<pos:position pos:line="19" pos:column="22"/></name><argument_list pos:line="19" pos:column="22">(<argument><expr><name pos:line="19" pos:column="23">m<pos:position pos:line="19" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="26">newp<pos:position pos:line="19" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="32">psize<pos:position pos:line="19" pos:column="37"/></name></expr></argument>)<pos:position pos:line="19" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="39"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="20" pos:column="7">chunk_plus_offset<pos:position pos:line="20" pos:column="24"/></name><argument_list pos:line="20" pos:column="24">(<argument><expr><name pos:line="20" pos:column="25">newp<pos:position pos:line="20" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="31">psize<pos:position pos:line="20" pos:column="36"/></name></expr></argument>)<pos:position pos:line="20" pos:column="37"/></argument_list></call><operator pos:line="20" pos:column="37">-&gt;<pos:position pos:line="20" pos:column="42"/></operator><name pos:line="20" pos:column="39">head<pos:position pos:line="20" pos:column="43"/></name> <operator pos:line="20" pos:column="44">=<pos:position pos:line="20" pos:column="45"/></operator> <name pos:line="20" pos:column="46">FENCEPOST_HEAD<pos:position pos:line="20" pos:column="60"/></name></expr>;<pos:position pos:line="20" pos:column="61"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="21" pos:column="7">chunk_plus_offset<pos:position pos:line="21" pos:column="24"/></name><argument_list pos:line="21" pos:column="24">(<argument><expr><name pos:line="21" pos:column="25">newp<pos:position pos:line="21" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="31">psize<pos:position pos:line="21" pos:column="36"/></name><operator pos:line="21" pos:column="36">+<pos:position pos:line="21" pos:column="37"/></operator><name pos:line="21" pos:column="37">SIZE_T_SIZE<pos:position pos:line="21" pos:column="48"/></name></expr></argument>)<pos:position pos:line="21" pos:column="49"/></argument_list></call><operator pos:line="21" pos:column="49">-&gt;<pos:position pos:line="21" pos:column="54"/></operator><name pos:line="21" pos:column="51">head<pos:position pos:line="21" pos:column="55"/></name> <operator pos:line="21" pos:column="56">=<pos:position pos:line="21" pos:column="57"/></operator> <literal type="number" pos:line="21" pos:column="58">0<pos:position pos:line="21" pos:column="59"/></literal></expr>;<pos:position pos:line="21" pos:column="60"/></expr_stmt>

      <if pos:line="23" pos:column="7">if <condition pos:line="23" pos:column="10">(<expr><name pos:line="23" pos:column="11">cp<pos:position pos:line="23" pos:column="13"/></name> <operator pos:line="23" pos:column="14">&lt;<pos:position pos:line="23" pos:column="18"/></operator> <name><name pos:line="23" pos:column="16">m<pos:position pos:line="23" pos:column="17"/></name><operator pos:line="23" pos:column="17">-&gt;<pos:position pos:line="23" pos:column="22"/></operator><name pos:line="23" pos:column="19">least_addr<pos:position pos:line="23" pos:column="29"/></name></name></expr>)<pos:position pos:line="23" pos:column="30"/></condition><then pos:line="23" pos:column="30">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="24" pos:column="9">m<pos:position pos:line="24" pos:column="10"/></name><operator pos:line="24" pos:column="10">-&gt;<pos:position pos:line="24" pos:column="15"/></operator><name pos:line="24" pos:column="12">least_addr<pos:position pos:line="24" pos:column="22"/></name></name> <operator pos:line="24" pos:column="23">=<pos:position pos:line="24" pos:column="24"/></operator> <name pos:line="24" pos:column="25">cp<pos:position pos:line="24" pos:column="27"/></name></expr>;<pos:position pos:line="24" pos:column="28"/></expr_stmt></block></then></if>
      <if pos:line="25" pos:column="7">if <condition pos:line="25" pos:column="10">(<expr><operator pos:line="25" pos:column="11">(<pos:position pos:line="25" pos:column="12"/></operator><name><name pos:line="25" pos:column="12">m<pos:position pos:line="25" pos:column="13"/></name><operator pos:line="25" pos:column="13">-&gt;<pos:position pos:line="25" pos:column="18"/></operator><name pos:line="25" pos:column="15">footprint<pos:position pos:line="25" pos:column="24"/></name></name> <operator pos:line="25" pos:column="25">+=<pos:position pos:line="25" pos:column="27"/></operator> <name pos:line="25" pos:column="28">newmmsize<pos:position pos:line="25" pos:column="37"/></name> <operator pos:line="25" pos:column="38">-<pos:position pos:line="25" pos:column="39"/></operator> <name pos:line="25" pos:column="40">oldmmsize<pos:position pos:line="25" pos:column="49"/></name><operator pos:line="25" pos:column="49">)<pos:position pos:line="25" pos:column="50"/></operator> <operator pos:line="25" pos:column="51">&gt;<pos:position pos:line="25" pos:column="55"/></operator> <name><name pos:line="25" pos:column="53">m<pos:position pos:line="25" pos:column="54"/></name><operator pos:line="25" pos:column="54">-&gt;<pos:position pos:line="25" pos:column="59"/></operator><name pos:line="25" pos:column="56">max_footprint<pos:position pos:line="25" pos:column="69"/></name></name></expr>)<pos:position pos:line="25" pos:column="70"/></condition><then pos:line="25" pos:column="70">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="26" pos:column="9">m<pos:position pos:line="26" pos:column="10"/></name><operator pos:line="26" pos:column="10">-&gt;<pos:position pos:line="26" pos:column="15"/></operator><name pos:line="26" pos:column="12">max_footprint<pos:position pos:line="26" pos:column="25"/></name></name> <operator pos:line="26" pos:column="26">=<pos:position pos:line="26" pos:column="27"/></operator> <name><name pos:line="26" pos:column="28">m<pos:position pos:line="26" pos:column="29"/></name><operator pos:line="26" pos:column="29">-&gt;<pos:position pos:line="26" pos:column="34"/></operator><name pos:line="26" pos:column="31">footprint<pos:position pos:line="26" pos:column="40"/></name></name></expr>;<pos:position pos:line="26" pos:column="41"/></expr_stmt></block></then></if>
      <expr_stmt><expr><call><name pos:line="27" pos:column="7">check_mmapped_chunk<pos:position pos:line="27" pos:column="26"/></name><argument_list pos:line="27" pos:column="26">(<argument><expr><name pos:line="27" pos:column="27">m<pos:position pos:line="27" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="30">newp<pos:position pos:line="27" pos:column="34"/></name></expr></argument>)<pos:position pos:line="27" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="36"/></expr_stmt>
      <return pos:line="28" pos:column="7">return <expr><name pos:line="28" pos:column="14">newp<pos:position pos:line="28" pos:column="18"/></name></expr>;<pos:position pos:line="28" pos:column="19"/></return>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>
  }<pos:position pos:line="30" pos:column="4"/></block></else></if>
  <return pos:line="31" pos:column="3">return <expr><literal type="number" pos:line="31" pos:column="10">0<pos:position pos:line="31" pos:column="11"/></literal></expr>;<pos:position pos:line="31" pos:column="12"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

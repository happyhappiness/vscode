<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2942.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">sockopt_callback<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">void<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">client<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">curl_socket_t<pos:position pos:line="1" pos:column="56"/></name></type> <name pos:line="1" pos:column="57">fd<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="61">curlsocktype<pos:position pos:line="1" pos:column="73"/></name></type> <name pos:line="1" pos:column="74">type<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="79"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">ka<pos:position pos:line="3" pos:column="15"/></name> <init pos:line="3" pos:column="16">= <expr><literal type="number" pos:line="3" pos:column="18">1<pos:position pos:line="3" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">rc<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">socklen_t<pos:position pos:line="5" pos:column="18"/></name></type> <name pos:line="5" pos:column="19">len<pos:position pos:line="5" pos:column="22"/></name> <init pos:line="5" pos:column="23">= <expr><operator pos:line="5" pos:column="25">(<pos:position pos:line="5" pos:column="26"/></operator><name pos:line="5" pos:column="26">socklen_t<pos:position pos:line="5" pos:column="35"/></name><operator pos:line="5" pos:column="35">)<pos:position pos:line="5" pos:column="36"/></operator><sizeof pos:line="5" pos:column="36">sizeof<argument_list pos:line="5" pos:column="42">(<argument><expr><name pos:line="5" pos:column="43">ka<pos:position pos:line="5" pos:column="45"/></name></expr></argument>)<pos:position pos:line="5" pos:column="46"/></argument_list></sizeof></expr></init></decl>;<pos:position pos:line="5" pos:column="47"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">type<pos:position pos:line="7" pos:column="17"/></name> <operator pos:line="7" pos:column="18">!=<pos:position pos:line="7" pos:column="20"/></operator> <name pos:line="7" pos:column="21">CURLSOCKTYPE_IPCXN<pos:position pos:line="7" pos:column="39"/></name></expr>)<pos:position pos:line="7" pos:column="40"/></condition><then pos:line="7" pos:column="40">
		<block type="pseudo"><return pos:line="8" pos:column="17">return <expr><literal type="number" pos:line="8" pos:column="24">0<pos:position pos:line="8" pos:column="25"/></literal></expr>;<pos:position pos:line="8" pos:column="26"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="10" pos:column="9">rc<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">=<pos:position pos:line="10" pos:column="13"/></operator> <call><name pos:line="10" pos:column="14">setsockopt<pos:position pos:line="10" pos:column="24"/></name><argument_list pos:line="10" pos:column="24">(<argument><expr><name pos:line="10" pos:column="25">fd<pos:position pos:line="10" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="29">SOL_SOCKET<pos:position pos:line="10" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="41">SO_KEEPALIVE<pos:position pos:line="10" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="55">(<pos:position pos:line="10" pos:column="56"/></operator><name pos:line="10" pos:column="56">void<pos:position pos:line="10" pos:column="60"/></name> <operator pos:line="10" pos:column="61">*<pos:position pos:line="10" pos:column="62"/></operator><operator pos:line="10" pos:column="62">)<pos:position pos:line="10" pos:column="63"/></operator><operator pos:line="10" pos:column="63">&amp;<pos:position pos:line="10" pos:column="68"/></operator><name pos:line="10" pos:column="64">ka<pos:position pos:line="10" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="68">len<pos:position pos:line="10" pos:column="71"/></name></expr></argument>)<pos:position pos:line="10" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="73"/></expr_stmt>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">rc<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">&lt;<pos:position pos:line="11" pos:column="20"/></operator> <literal type="number" pos:line="11" pos:column="18">0<pos:position pos:line="11" pos:column="19"/></literal></expr>)<pos:position pos:line="11" pos:column="20"/></condition><then pos:line="11" pos:column="20">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="17">warning<pos:position pos:line="12" pos:column="24"/></name><argument_list pos:line="12" pos:column="24">(<argument><expr><literal type="string" pos:line="12" pos:column="25">"unable to set SO_KEEPALIVE on socket %s"<pos:position pos:line="12" pos:column="66"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="13" pos:column="25">strerror<pos:position pos:line="13" pos:column="33"/></name><argument_list pos:line="13" pos:column="33">(<argument><expr><name pos:line="13" pos:column="34">errno<pos:position pos:line="13" pos:column="39"/></name></expr></argument>)<pos:position pos:line="13" pos:column="40"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="42"/></expr_stmt></block></then></if>

	<return pos:line="15" pos:column="9">return <expr><literal type="number" pos:line="15" pos:column="16">0<pos:position pos:line="15" pos:column="17"/></literal></expr>;<pos:position pos:line="15" pos:column="18"/></return> <comment type="block" pos:line="15" pos:column="19">/* CURL_SOCKOPT_OK only exists since curl 7.21.5 */</comment>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

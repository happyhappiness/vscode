<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3176_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">lf_to_crlf_filter_fn<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name><name pos:line="1" pos:column="33">struct<pos:position pos:line="1" pos:column="39"/></name> <name pos:line="1" pos:column="40">stream_filter<pos:position pos:line="1" pos:column="53"/></name></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">filter<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>,
				<parameter><decl><type><specifier pos:line="2" pos:column="33">const<pos:position pos:line="2" pos:column="38"/></specifier> <name pos:line="2" pos:column="39">char<pos:position pos:line="2" pos:column="43"/></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">input<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="52">size_t<pos:position pos:line="2" pos:column="58"/></name> <modifier pos:line="2" pos:column="59">*<pos:position pos:line="2" pos:column="60"/></modifier></type><name pos:line="2" pos:column="60">isize_p<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>,
				<parameter><decl><type><name pos:line="3" pos:column="33">char<pos:position pos:line="3" pos:column="37"/></name> <modifier pos:line="3" pos:column="38">*<pos:position pos:line="3" pos:column="39"/></modifier></type><name pos:line="3" pos:column="39">output<pos:position pos:line="3" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="47">size_t<pos:position pos:line="3" pos:column="53"/></name> <modifier pos:line="3" pos:column="54">*<pos:position pos:line="3" pos:column="55"/></modifier></type><name pos:line="3" pos:column="55">osize_p<pos:position pos:line="3" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="63"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">size_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">count<pos:position pos:line="5" pos:column="21"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="23">o<pos:position pos:line="5" pos:column="24"/></name> <init pos:line="5" pos:column="25">= <expr><literal type="number" pos:line="5" pos:column="27">0<pos:position pos:line="5" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">lf_to_crlf_filter<pos:position pos:line="6" pos:column="33"/></name></name> <modifier pos:line="6" pos:column="34">*<pos:position pos:line="6" pos:column="35"/></modifier></type><name pos:line="6" pos:column="35">lf_to_crlf<pos:position pos:line="6" pos:column="45"/></name> <init pos:line="6" pos:column="46">= <expr><operator pos:line="6" pos:column="48">(<pos:position pos:line="6" pos:column="49"/></operator>struct <name pos:line="6" pos:column="56">lf_to_crlf_filter<pos:position pos:line="6" pos:column="73"/></name> <operator pos:line="6" pos:column="74">*<pos:position pos:line="6" pos:column="75"/></operator><operator pos:line="6" pos:column="75">)<pos:position pos:line="6" pos:column="76"/></operator><name pos:line="6" pos:column="76">filter<pos:position pos:line="6" pos:column="82"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="83"/></decl_stmt>

	<comment type="block" pos:line="8" pos:column="9">/*
	 * We may be holding onto the CR to see if it is followed by a
	 * LF, in which case we would need to go to the main loop.
	 * Otherwise, just emit it to the output stream.
	 */</comment>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name><name pos:line="13" pos:column="13">lf_to_crlf<pos:position pos:line="13" pos:column="23"/></name><operator pos:line="13" pos:column="23">-&gt;<pos:position pos:line="13" pos:column="28"/></operator><name pos:line="13" pos:column="25">has_held<pos:position pos:line="13" pos:column="33"/></name></name> <operator pos:line="13" pos:column="34">&amp;&amp;<pos:position pos:line="13" pos:column="44"/></operator> <operator pos:line="13" pos:column="37">(<pos:position pos:line="13" pos:column="38"/></operator><name><name pos:line="13" pos:column="38">lf_to_crlf<pos:position pos:line="13" pos:column="48"/></name><operator pos:line="13" pos:column="48">-&gt;<pos:position pos:line="13" pos:column="53"/></operator><name pos:line="13" pos:column="50">held<pos:position pos:line="13" pos:column="54"/></name></name> <operator pos:line="13" pos:column="55">!=<pos:position pos:line="13" pos:column="57"/></operator> <literal type="char" pos:line="13" pos:column="58">'\r'<pos:position pos:line="13" pos:column="62"/></literal> <operator pos:line="13" pos:column="63">||<pos:position pos:line="13" pos:column="65"/></operator> <operator pos:line="13" pos:column="66">!<pos:position pos:line="13" pos:column="67"/></operator><name pos:line="13" pos:column="67">input<pos:position pos:line="13" pos:column="72"/></name><operator pos:line="13" pos:column="72">)<pos:position pos:line="13" pos:column="73"/></operator></expr>)<pos:position pos:line="13" pos:column="74"/></condition><then pos:line="13" pos:column="74"> <block pos:line="13" pos:column="75">{
		<expr_stmt><expr><name><name pos:line="14" pos:column="17">output<pos:position pos:line="14" pos:column="23"/></name><index pos:line="14" pos:column="23">[<expr><name pos:line="14" pos:column="24">o<pos:position pos:line="14" pos:column="25"/></name><operator pos:line="14" pos:column="25">++<pos:position pos:line="14" pos:column="27"/></operator></expr>]<pos:position pos:line="14" pos:column="28"/></index></name> <operator pos:line="14" pos:column="29">=<pos:position pos:line="14" pos:column="30"/></operator> <name><name pos:line="14" pos:column="31">lf_to_crlf<pos:position pos:line="14" pos:column="41"/></name><operator pos:line="14" pos:column="41">-&gt;<pos:position pos:line="14" pos:column="46"/></operator><name pos:line="14" pos:column="43">held<pos:position pos:line="14" pos:column="47"/></name></name></expr>;<pos:position pos:line="14" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="15" pos:column="17">lf_to_crlf<pos:position pos:line="15" pos:column="27"/></name><operator pos:line="15" pos:column="27">-&gt;<pos:position pos:line="15" pos:column="32"/></operator><name pos:line="15" pos:column="29">has_held<pos:position pos:line="15" pos:column="37"/></name></name> <operator pos:line="15" pos:column="38">=<pos:position pos:line="15" pos:column="39"/></operator> <literal type="number" pos:line="15" pos:column="40">0<pos:position pos:line="15" pos:column="41"/></literal></expr>;<pos:position pos:line="15" pos:column="42"/></expr_stmt>
	}<pos:position pos:line="16" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="18" pos:column="9">/* We are told to drain */</comment>
	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><operator pos:line="19" pos:column="13">!<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="14">input<pos:position pos:line="19" pos:column="19"/></name></expr>)<pos:position pos:line="19" pos:column="20"/></condition><then pos:line="19" pos:column="20"> <block pos:line="19" pos:column="21">{
		<expr_stmt><expr><operator pos:line="20" pos:column="17">*<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="18">osize_p<pos:position pos:line="20" pos:column="25"/></name> <operator pos:line="20" pos:column="26">-=<pos:position pos:line="20" pos:column="28"/></operator> <name pos:line="20" pos:column="29">o<pos:position pos:line="20" pos:column="30"/></name></expr>;<pos:position pos:line="20" pos:column="31"/></expr_stmt>
		<return pos:line="21" pos:column="17">return <expr><literal type="number" pos:line="21" pos:column="24">0<pos:position pos:line="21" pos:column="25"/></literal></expr>;<pos:position pos:line="21" pos:column="26"/></return>
	}<pos:position pos:line="22" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="24" pos:column="9">count<pos:position pos:line="24" pos:column="14"/></name> <operator pos:line="24" pos:column="15">=<pos:position pos:line="24" pos:column="16"/></operator> <operator pos:line="24" pos:column="17">*<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="18">isize_p<pos:position pos:line="24" pos:column="25"/></name></expr>;<pos:position pos:line="24" pos:column="26"/></expr_stmt>
	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">count<pos:position pos:line="25" pos:column="18"/></name> <operator pos:line="25" pos:column="19">||<pos:position pos:line="25" pos:column="21"/></operator> <name><name pos:line="25" pos:column="22">lf_to_crlf<pos:position pos:line="25" pos:column="32"/></name><operator pos:line="25" pos:column="32">-&gt;<pos:position pos:line="25" pos:column="37"/></operator><name pos:line="25" pos:column="34">has_held<pos:position pos:line="25" pos:column="42"/></name></name></expr>)<pos:position pos:line="25" pos:column="43"/></condition><then pos:line="25" pos:column="43"> <block pos:line="25" pos:column="44">{
		<decl_stmt><decl><type><name pos:line="26" pos:column="17">size_t<pos:position pos:line="26" pos:column="23"/></name></type> <name pos:line="26" pos:column="24">i<pos:position pos:line="26" pos:column="25"/></name></decl>;<pos:position pos:line="26" pos:column="26"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="27" pos:column="17">int<pos:position pos:line="27" pos:column="20"/></name></type> <name pos:line="27" pos:column="21">was_cr<pos:position pos:line="27" pos:column="27"/></name> <init pos:line="27" pos:column="28">= <expr><literal type="number" pos:line="27" pos:column="30">0<pos:position pos:line="27" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="27" pos:column="32"/></decl_stmt>

		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><name><name pos:line="29" pos:column="21">lf_to_crlf<pos:position pos:line="29" pos:column="31"/></name><operator pos:line="29" pos:column="31">-&gt;<pos:position pos:line="29" pos:column="36"/></operator><name pos:line="29" pos:column="33">has_held<pos:position pos:line="29" pos:column="41"/></name></name></expr>)<pos:position pos:line="29" pos:column="42"/></condition><then pos:line="29" pos:column="42"> <block pos:line="29" pos:column="43">{
			<expr_stmt><expr><name pos:line="30" pos:column="25">was_cr<pos:position pos:line="30" pos:column="31"/></name> <operator pos:line="30" pos:column="32">=<pos:position pos:line="30" pos:column="33"/></operator> <literal type="number" pos:line="30" pos:column="34">1<pos:position pos:line="30" pos:column="35"/></literal></expr>;<pos:position pos:line="30" pos:column="36"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="31" pos:column="25">lf_to_crlf<pos:position pos:line="31" pos:column="35"/></name><operator pos:line="31" pos:column="35">-&gt;<pos:position pos:line="31" pos:column="40"/></operator><name pos:line="31" pos:column="37">has_held<pos:position pos:line="31" pos:column="45"/></name></name> <operator pos:line="31" pos:column="46">=<pos:position pos:line="31" pos:column="47"/></operator> <literal type="number" pos:line="31" pos:column="48">0<pos:position pos:line="31" pos:column="49"/></literal></expr>;<pos:position pos:line="31" pos:column="50"/></expr_stmt>
		}<pos:position pos:line="32" pos:column="18"/></block></then></if>

		<for pos:line="34" pos:column="17">for <control pos:line="34" pos:column="21">(<init><expr><name pos:line="34" pos:column="22">i<pos:position pos:line="34" pos:column="23"/></name> <operator pos:line="34" pos:column="24">=<pos:position pos:line="34" pos:column="25"/></operator> <literal type="number" pos:line="34" pos:column="26">0<pos:position pos:line="34" pos:column="27"/></literal></expr>;<pos:position pos:line="34" pos:column="28"/></init> <condition><expr><name pos:line="34" pos:column="29">o<pos:position pos:line="34" pos:column="30"/></name> <operator pos:line="34" pos:column="31">&lt;<pos:position pos:line="34" pos:column="35"/></operator> <operator pos:line="34" pos:column="33">*<pos:position pos:line="34" pos:column="34"/></operator><name pos:line="34" pos:column="34">osize_p<pos:position pos:line="34" pos:column="41"/></name> <operator pos:line="34" pos:column="42">&amp;&amp;<pos:position pos:line="34" pos:column="52"/></operator> <name pos:line="34" pos:column="45">i<pos:position pos:line="34" pos:column="46"/></name> <operator pos:line="34" pos:column="47">&lt;<pos:position pos:line="34" pos:column="51"/></operator> <name pos:line="34" pos:column="49">count<pos:position pos:line="34" pos:column="54"/></name></expr>;<pos:position pos:line="34" pos:column="55"/></condition> <incr><expr><name pos:line="34" pos:column="56">i<pos:position pos:line="34" pos:column="57"/></name><operator pos:line="34" pos:column="57">++<pos:position pos:line="34" pos:column="59"/></operator></expr></incr>)<pos:position pos:line="34" pos:column="60"/></control> <block pos:line="34" pos:column="61">{
			<decl_stmt><decl><type><name pos:line="35" pos:column="25">char<pos:position pos:line="35" pos:column="29"/></name></type> <name pos:line="35" pos:column="30">ch<pos:position pos:line="35" pos:column="32"/></name> <init pos:line="35" pos:column="33">= <expr><name><name pos:line="35" pos:column="35">input<pos:position pos:line="35" pos:column="40"/></name><index pos:line="35" pos:column="40">[<expr><name pos:line="35" pos:column="41">i<pos:position pos:line="35" pos:column="42"/></name></expr>]<pos:position pos:line="35" pos:column="43"/></index></name></expr></init></decl>;<pos:position pos:line="35" pos:column="44"/></decl_stmt>

			<if pos:line="37" pos:column="25">if <condition pos:line="37" pos:column="28">(<expr><name pos:line="37" pos:column="29">ch<pos:position pos:line="37" pos:column="31"/></name> <operator pos:line="37" pos:column="32">==<pos:position pos:line="37" pos:column="34"/></operator> <literal type="char" pos:line="37" pos:column="35">'\n'<pos:position pos:line="37" pos:column="39"/></literal></expr>)<pos:position pos:line="37" pos:column="40"/></condition><then pos:line="37" pos:column="40"> <block pos:line="37" pos:column="41">{
				<expr_stmt><expr><name><name pos:line="38" pos:column="33">output<pos:position pos:line="38" pos:column="39"/></name><index pos:line="38" pos:column="39">[<expr><name pos:line="38" pos:column="40">o<pos:position pos:line="38" pos:column="41"/></name><operator pos:line="38" pos:column="41">++<pos:position pos:line="38" pos:column="43"/></operator></expr>]<pos:position pos:line="38" pos:column="44"/></index></name> <operator pos:line="38" pos:column="45">=<pos:position pos:line="38" pos:column="46"/></operator> <literal type="char" pos:line="38" pos:column="47">'\r'<pos:position pos:line="38" pos:column="51"/></literal></expr>;<pos:position pos:line="38" pos:column="52"/></expr_stmt>
			}<pos:position pos:line="39" pos:column="26"/></block></then> <elseif pos:line="39" pos:column="27">else <if pos:line="39" pos:column="32">if <condition pos:line="39" pos:column="35">(<expr><name pos:line="39" pos:column="36">was_cr<pos:position pos:line="39" pos:column="42"/></name></expr>)<pos:position pos:line="39" pos:column="43"/></condition><then pos:line="39" pos:column="43"> <block pos:line="39" pos:column="44">{
				<comment type="block" pos:line="40" pos:column="33">/*
				 * Previous round saw CR and it is not followed
				 * by a LF; emit the CR before processing the
				 * current character.
				 */</comment>
				<expr_stmt><expr><name><name pos:line="45" pos:column="33">output<pos:position pos:line="45" pos:column="39"/></name><index pos:line="45" pos:column="39">[<expr><name pos:line="45" pos:column="40">o<pos:position pos:line="45" pos:column="41"/></name><operator pos:line="45" pos:column="41">++<pos:position pos:line="45" pos:column="43"/></operator></expr>]<pos:position pos:line="45" pos:column="44"/></index></name> <operator pos:line="45" pos:column="45">=<pos:position pos:line="45" pos:column="46"/></operator> <literal type="char" pos:line="45" pos:column="47">'\r'<pos:position pos:line="45" pos:column="51"/></literal></expr>;<pos:position pos:line="45" pos:column="52"/></expr_stmt>
			}<pos:position pos:line="46" pos:column="26"/></block></then></if></elseif></if>

			<comment type="block" pos:line="48" pos:column="25">/*
			 * We may have consumed the last output slot,
			 * in which case we need to break out of this
			 * loop; hold the current character before
			 * returning.
			 */</comment>
			<if pos:line="54" pos:column="25">if <condition pos:line="54" pos:column="28">(<expr><operator pos:line="54" pos:column="29">*<pos:position pos:line="54" pos:column="30"/></operator><name pos:line="54" pos:column="30">osize_p<pos:position pos:line="54" pos:column="37"/></name> <operator pos:line="54" pos:column="38">&lt;=<pos:position pos:line="54" pos:column="43"/></operator> <name pos:line="54" pos:column="41">o<pos:position pos:line="54" pos:column="42"/></name></expr>)<pos:position pos:line="54" pos:column="43"/></condition><then pos:line="54" pos:column="43"> <block pos:line="54" pos:column="44">{
				<expr_stmt><expr><name><name pos:line="55" pos:column="33">lf_to_crlf<pos:position pos:line="55" pos:column="43"/></name><operator pos:line="55" pos:column="43">-&gt;<pos:position pos:line="55" pos:column="48"/></operator><name pos:line="55" pos:column="45">has_held<pos:position pos:line="55" pos:column="53"/></name></name> <operator pos:line="55" pos:column="54">=<pos:position pos:line="55" pos:column="55"/></operator> <literal type="number" pos:line="55" pos:column="56">1<pos:position pos:line="55" pos:column="57"/></literal></expr>;<pos:position pos:line="55" pos:column="58"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="56" pos:column="33">lf_to_crlf<pos:position pos:line="56" pos:column="43"/></name><operator pos:line="56" pos:column="43">-&gt;<pos:position pos:line="56" pos:column="48"/></operator><name pos:line="56" pos:column="45">held<pos:position pos:line="56" pos:column="49"/></name></name> <operator pos:line="56" pos:column="50">=<pos:position pos:line="56" pos:column="51"/></operator> <name pos:line="56" pos:column="52">ch<pos:position pos:line="56" pos:column="54"/></name></expr>;<pos:position pos:line="56" pos:column="55"/></expr_stmt>
				<continue pos:line="57" pos:column="33">continue;<pos:position pos:line="57" pos:column="42"/></continue> <comment type="block" pos:line="57" pos:column="43">/* break but increment i */</comment>
			}<pos:position pos:line="58" pos:column="26"/></block></then></if>

			<if pos:line="60" pos:column="25">if <condition pos:line="60" pos:column="28">(<expr><name pos:line="60" pos:column="29">ch<pos:position pos:line="60" pos:column="31"/></name> <operator pos:line="60" pos:column="32">==<pos:position pos:line="60" pos:column="34"/></operator> <literal type="char" pos:line="60" pos:column="35">'\r'<pos:position pos:line="60" pos:column="39"/></literal></expr>)<pos:position pos:line="60" pos:column="40"/></condition><then pos:line="60" pos:column="40"> <block pos:line="60" pos:column="41">{
				<expr_stmt><expr><name pos:line="61" pos:column="33">was_cr<pos:position pos:line="61" pos:column="39"/></name> <operator pos:line="61" pos:column="40">=<pos:position pos:line="61" pos:column="41"/></operator> <literal type="number" pos:line="61" pos:column="42">1<pos:position pos:line="61" pos:column="43"/></literal></expr>;<pos:position pos:line="61" pos:column="44"/></expr_stmt>
				<continue pos:line="62" pos:column="33">continue;<pos:position pos:line="62" pos:column="42"/></continue>
			}<pos:position pos:line="63" pos:column="26"/></block></then></if>

			<expr_stmt><expr><name pos:line="65" pos:column="25">was_cr<pos:position pos:line="65" pos:column="31"/></name> <operator pos:line="65" pos:column="32">=<pos:position pos:line="65" pos:column="33"/></operator> <literal type="number" pos:line="65" pos:column="34">0<pos:position pos:line="65" pos:column="35"/></literal></expr>;<pos:position pos:line="65" pos:column="36"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="66" pos:column="25">output<pos:position pos:line="66" pos:column="31"/></name><index pos:line="66" pos:column="31">[<expr><name pos:line="66" pos:column="32">o<pos:position pos:line="66" pos:column="33"/></name><operator pos:line="66" pos:column="33">++<pos:position pos:line="66" pos:column="35"/></operator></expr>]<pos:position pos:line="66" pos:column="36"/></index></name> <operator pos:line="66" pos:column="37">=<pos:position pos:line="66" pos:column="38"/></operator> <name pos:line="66" pos:column="39">ch<pos:position pos:line="66" pos:column="41"/></name></expr>;<pos:position pos:line="66" pos:column="42"/></expr_stmt>
		}<pos:position pos:line="67" pos:column="18"/></block></for>

		<expr_stmt><expr><operator pos:line="69" pos:column="17">*<pos:position pos:line="69" pos:column="18"/></operator><name pos:line="69" pos:column="18">osize_p<pos:position pos:line="69" pos:column="25"/></name> <operator pos:line="69" pos:column="26">-=<pos:position pos:line="69" pos:column="28"/></operator> <name pos:line="69" pos:column="29">o<pos:position pos:line="69" pos:column="30"/></name></expr>;<pos:position pos:line="69" pos:column="31"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="70" pos:column="17">*<pos:position pos:line="70" pos:column="18"/></operator><name pos:line="70" pos:column="18">isize_p<pos:position pos:line="70" pos:column="25"/></name> <operator pos:line="70" pos:column="26">-=<pos:position pos:line="70" pos:column="28"/></operator> <name pos:line="70" pos:column="29">i<pos:position pos:line="70" pos:column="30"/></name></expr>;<pos:position pos:line="70" pos:column="31"/></expr_stmt>

		<if pos:line="72" pos:column="17">if <condition pos:line="72" pos:column="20">(<expr><operator pos:line="72" pos:column="21">!<pos:position pos:line="72" pos:column="22"/></operator><name><name pos:line="72" pos:column="22">lf_to_crlf<pos:position pos:line="72" pos:column="32"/></name><operator pos:line="72" pos:column="32">-&gt;<pos:position pos:line="72" pos:column="37"/></operator><name pos:line="72" pos:column="34">has_held<pos:position pos:line="72" pos:column="42"/></name></name> <operator pos:line="72" pos:column="43">&amp;&amp;<pos:position pos:line="72" pos:column="53"/></operator> <name pos:line="72" pos:column="46">was_cr<pos:position pos:line="72" pos:column="52"/></name></expr>)<pos:position pos:line="72" pos:column="53"/></condition><then pos:line="72" pos:column="53"> <block pos:line="72" pos:column="54">{
			<expr_stmt><expr><name><name pos:line="73" pos:column="25">lf_to_crlf<pos:position pos:line="73" pos:column="35"/></name><operator pos:line="73" pos:column="35">-&gt;<pos:position pos:line="73" pos:column="40"/></operator><name pos:line="73" pos:column="37">has_held<pos:position pos:line="73" pos:column="45"/></name></name> <operator pos:line="73" pos:column="46">=<pos:position pos:line="73" pos:column="47"/></operator> <literal type="number" pos:line="73" pos:column="48">1<pos:position pos:line="73" pos:column="49"/></literal></expr>;<pos:position pos:line="73" pos:column="50"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="74" pos:column="25">lf_to_crlf<pos:position pos:line="74" pos:column="35"/></name><operator pos:line="74" pos:column="35">-&gt;<pos:position pos:line="74" pos:column="40"/></operator><name pos:line="74" pos:column="37">held<pos:position pos:line="74" pos:column="41"/></name></name> <operator pos:line="74" pos:column="42">=<pos:position pos:line="74" pos:column="43"/></operator> <literal type="char" pos:line="74" pos:column="44">'\r'<pos:position pos:line="74" pos:column="48"/></literal></expr>;<pos:position pos:line="74" pos:column="49"/></expr_stmt>
		}<pos:position pos:line="75" pos:column="18"/></block></then></if>
	}<pos:position pos:line="76" pos:column="10"/></block></then></if>
	<return pos:line="77" pos:column="9">return <expr><literal type="number" pos:line="77" pos:column="16">0<pos:position pos:line="77" pos:column="17"/></literal></expr>;<pos:position pos:line="77" pos:column="18"/></return>
}<pos:position pos:line="78" pos:column="2"/></block></function></unit>

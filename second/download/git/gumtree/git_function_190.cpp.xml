<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_190.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">wt_status_print_cached_header<pos:position pos:line="1" pos:column="42"/></name><parameter_list pos:line="1" pos:column="42">(<parameter><decl><type><name><name pos:line="1" pos:column="43">struct<pos:position pos:line="1" pos:column="49"/></name> <name pos:line="1" pos:column="50">wt_status<pos:position pos:line="1" pos:column="59"/></name></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">s<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="63"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">c<pos:position pos:line="3" pos:column="22"/></name> <init pos:line="3" pos:column="23">= <expr><call><name pos:line="3" pos:column="25">color<pos:position pos:line="3" pos:column="30"/></name><argument_list pos:line="3" pos:column="30">(<argument><expr><name pos:line="3" pos:column="31">WT_STATUS_HEADER<pos:position pos:line="3" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="49">s<pos:position pos:line="3" pos:column="50"/></name></expr></argument>)<pos:position pos:line="3" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="52"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="5" pos:column="9">status_printf_ln<pos:position pos:line="5" pos:column="25"/></name><argument_list pos:line="5" pos:column="25">(<argument><expr><name pos:line="5" pos:column="26">s<pos:position pos:line="5" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="29">c<pos:position pos:line="5" pos:column="30"/></name></expr></argument>, <argument><expr><call><name pos:line="5" pos:column="32">_<pos:position pos:line="5" pos:column="33"/></name><argument_list pos:line="5" pos:column="33">(<argument><expr><literal type="string" pos:line="5" pos:column="34">"Changes to be committed:"<pos:position pos:line="5" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="63"/></expr_stmt>
	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">!<pos:position pos:line="6" pos:column="14"/></operator><name><name pos:line="6" pos:column="14">s<pos:position pos:line="6" pos:column="15"/></name><operator pos:line="6" pos:column="15">-&gt;<pos:position pos:line="6" pos:column="20"/></operator><name pos:line="6" pos:column="17">hints<pos:position pos:line="6" pos:column="22"/></name></name></expr>)<pos:position pos:line="6" pos:column="23"/></condition><then pos:line="6" pos:column="23">
		<block type="pseudo"><return pos:line="7" pos:column="17">return;<pos:position pos:line="7" pos:column="24"/></return></block></then></if>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name><name pos:line="8" pos:column="13">s<pos:position pos:line="8" pos:column="14"/></name><operator pos:line="8" pos:column="14">-&gt;<pos:position pos:line="8" pos:column="19"/></operator><name pos:line="8" pos:column="16">whence<pos:position pos:line="8" pos:column="22"/></name></name> <operator pos:line="8" pos:column="23">!=<pos:position pos:line="8" pos:column="25"/></operator> <name pos:line="8" pos:column="26">FROM_COMMIT<pos:position pos:line="8" pos:column="37"/></name></expr>)<pos:position pos:line="8" pos:column="38"/></condition><then pos:line="8" pos:column="38">
		<block type="pseudo"><empty_stmt pos:line="9" pos:column="17">;<pos:position pos:line="9" pos:column="18"/></empty_stmt></block></then> <comment type="block" pos:line="9" pos:column="19">/* NEEDSWORK: use "git reset --unresolve"??? */</comment>
	<elseif pos:line="10" pos:column="9">else <if pos:line="10" pos:column="14">if <condition pos:line="10" pos:column="17">(<expr><operator pos:line="10" pos:column="18">!<pos:position pos:line="10" pos:column="19"/></operator><name><name pos:line="10" pos:column="19">s<pos:position pos:line="10" pos:column="20"/></name><operator pos:line="10" pos:column="20">-&gt;<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="22">is_initial<pos:position pos:line="10" pos:column="32"/></name></name></expr>)<pos:position pos:line="10" pos:column="33"/></condition><then pos:line="10" pos:column="33">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="17">status_printf_ln<pos:position pos:line="11" pos:column="33"/></name><argument_list pos:line="11" pos:column="33">(<argument><expr><name pos:line="11" pos:column="34">s<pos:position pos:line="11" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="37">c<pos:position pos:line="11" pos:column="38"/></name></expr></argument>, <argument><expr><call><name pos:line="11" pos:column="40">_<pos:position pos:line="11" pos:column="41"/></name><argument_list pos:line="11" pos:column="41">(<argument><expr><literal type="string" pos:line="11" pos:column="42">"  (use \"git reset %s &lt;file&gt;...\" to unstage)"<pos:position pos:line="11" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="90"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="92">s<pos:position pos:line="11" pos:column="93"/></name><operator pos:line="11" pos:column="93">-&gt;<pos:position pos:line="11" pos:column="98"/></operator><name pos:line="11" pos:column="95">reference<pos:position pos:line="11" pos:column="104"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="106"/></expr_stmt></block></then></if></elseif>
	<else pos:line="12" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="17">status_printf_ln<pos:position pos:line="13" pos:column="33"/></name><argument_list pos:line="13" pos:column="33">(<argument><expr><name pos:line="13" pos:column="34">s<pos:position pos:line="13" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="37">c<pos:position pos:line="13" pos:column="38"/></name></expr></argument>, <argument><expr><call><name pos:line="13" pos:column="40">_<pos:position pos:line="13" pos:column="41"/></name><argument_list pos:line="13" pos:column="41">(<argument><expr><literal type="string" pos:line="13" pos:column="42">"  (use \"git rm --cached &lt;file&gt;...\" to unstage)"<pos:position pos:line="13" pos:column="98"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="93"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="95"/></expr_stmt></block></else></if>
	<expr_stmt><expr><call><name pos:line="14" pos:column="9">status_printf_ln<pos:position pos:line="14" pos:column="25"/></name><argument_list pos:line="14" pos:column="25">(<argument><expr><name pos:line="14" pos:column="26">s<pos:position pos:line="14" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="29">c<pos:position pos:line="14" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="32">""<pos:position pos:line="14" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="36"/></expr_stmt>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

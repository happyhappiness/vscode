<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3589_git-2.7.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">grep_expr<pos:position pos:line="1" pos:column="24"/></name></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name pos:line="1" pos:column="26">prep_header_patterns<pos:position pos:line="1" pos:column="46"/></name><parameter_list pos:line="1" pos:column="46">(<parameter><decl><type><name><name pos:line="1" pos:column="47">struct<pos:position pos:line="1" pos:column="53"/></name> <name pos:line="1" pos:column="54">grep_opt<pos:position pos:line="1" pos:column="62"/></name></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">opt<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">grep_pat<pos:position pos:line="3" pos:column="24"/></name></name> <modifier pos:line="3" pos:column="25">*<pos:position pos:line="3" pos:column="26"/></modifier></type><name pos:line="3" pos:column="26">p<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">grep_expr<pos:position pos:line="4" pos:column="25"/></name></name> <modifier pos:line="4" pos:column="26">*<pos:position pos:line="4" pos:column="27"/></modifier></type><name pos:line="4" pos:column="27">header_expr<pos:position pos:line="4" pos:column="38"/></name></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">grep_expr<pos:position pos:line="5" pos:column="25"/></name></name> <modifier pos:line="5" pos:column="26">*<pos:position pos:line="5" pos:column="27"/></modifier></type><argument_list pos:line="5" pos:column="27">(<argument><expr><name><name pos:line="5" pos:column="28">header_group<pos:position pos:line="5" pos:column="40"/></name><index pos:line="5" pos:column="40">[<expr><name pos:line="5" pos:column="41">GREP_HEADER_FIELD_MAX<pos:position pos:line="5" pos:column="62"/></name></expr>]<pos:position pos:line="5" pos:column="63"/></index></name></expr></argument>)<pos:position pos:line="5" pos:column="64"/></argument_list></decl>;<pos:position pos:line="5" pos:column="65"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">enum<pos:position pos:line="6" pos:column="13"/></name> <name pos:line="6" pos:column="14">grep_header_field<pos:position pos:line="6" pos:column="31"/></name></name></type> <name pos:line="6" pos:column="32">fld<pos:position pos:line="6" pos:column="35"/></name></decl>;<pos:position pos:line="6" pos:column="36"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">!<pos:position pos:line="8" pos:column="14"/></operator><name><name pos:line="8" pos:column="14">opt<pos:position pos:line="8" pos:column="17"/></name><operator pos:line="8" pos:column="17">-&gt;<pos:position pos:line="8" pos:column="22"/></operator><name pos:line="8" pos:column="19">header_list<pos:position pos:line="8" pos:column="30"/></name></name></expr>)<pos:position pos:line="8" pos:column="31"/></condition><then pos:line="8" pos:column="31">
		<block type="pseudo"><return pos:line="9" pos:column="17">return <expr><name pos:line="9" pos:column="24">NULL<pos:position pos:line="9" pos:column="28"/></name></expr>;<pos:position pos:line="9" pos:column="29"/></return></block></then></if>

	<for pos:line="11" pos:column="9">for <control pos:line="11" pos:column="13">(<init><expr><name pos:line="11" pos:column="14">p<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <name><name pos:line="11" pos:column="18">opt<pos:position pos:line="11" pos:column="21"/></name><operator pos:line="11" pos:column="21">-&gt;<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="23">header_list<pos:position pos:line="11" pos:column="34"/></name></name></expr>;<pos:position pos:line="11" pos:column="35"/></init> <condition><expr><name pos:line="11" pos:column="36">p<pos:position pos:line="11" pos:column="37"/></name></expr>;<pos:position pos:line="11" pos:column="38"/></condition> <incr><expr><name pos:line="11" pos:column="39">p<pos:position pos:line="11" pos:column="40"/></name> <operator pos:line="11" pos:column="41">=<pos:position pos:line="11" pos:column="42"/></operator> <name><name pos:line="11" pos:column="43">p<pos:position pos:line="11" pos:column="44"/></name><operator pos:line="11" pos:column="44">-&gt;<pos:position pos:line="11" pos:column="49"/></operator><name pos:line="11" pos:column="46">next<pos:position pos:line="11" pos:column="50"/></name></name></expr></incr>)<pos:position pos:line="11" pos:column="51"/></control> <block pos:line="11" pos:column="52">{
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><name><name pos:line="12" pos:column="21">p<pos:position pos:line="12" pos:column="22"/></name><operator pos:line="12" pos:column="22">-&gt;<pos:position pos:line="12" pos:column="27"/></operator><name pos:line="12" pos:column="24">token<pos:position pos:line="12" pos:column="29"/></name></name> <operator pos:line="12" pos:column="30">!=<pos:position pos:line="12" pos:column="32"/></operator> <name pos:line="12" pos:column="33">GREP_PATTERN_HEAD<pos:position pos:line="12" pos:column="50"/></name></expr>)<pos:position pos:line="12" pos:column="51"/></condition><then pos:line="12" pos:column="51">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="25">die<pos:position pos:line="13" pos:column="28"/></name><argument_list pos:line="13" pos:column="28">(<argument><expr><literal type="string" pos:line="13" pos:column="29">"bug: a non-header pattern in grep header list."<pos:position pos:line="13" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="79"/></expr_stmt></block></then></if>
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><name><name pos:line="14" pos:column="21">p<pos:position pos:line="14" pos:column="22"/></name><operator pos:line="14" pos:column="22">-&gt;<pos:position pos:line="14" pos:column="27"/></operator><name pos:line="14" pos:column="24">field<pos:position pos:line="14" pos:column="29"/></name></name> <operator pos:line="14" pos:column="30">&lt;<pos:position pos:line="14" pos:column="34"/></operator> <name pos:line="14" pos:column="32">GREP_HEADER_FIELD_MIN<pos:position pos:line="14" pos:column="53"/></name> <operator pos:line="14" pos:column="54">||<pos:position pos:line="14" pos:column="56"/></operator>
		    <name pos:line="15" pos:column="21">GREP_HEADER_FIELD_MAX<pos:position pos:line="15" pos:column="42"/></name> <operator pos:line="15" pos:column="43">&lt;=<pos:position pos:line="15" pos:column="48"/></operator> <name><name pos:line="15" pos:column="46">p<pos:position pos:line="15" pos:column="47"/></name><operator pos:line="15" pos:column="47">-&gt;<pos:position pos:line="15" pos:column="52"/></operator><name pos:line="15" pos:column="49">field<pos:position pos:line="15" pos:column="54"/></name></name></expr>)<pos:position pos:line="15" pos:column="55"/></condition><then pos:line="15" pos:column="55">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="25">die<pos:position pos:line="16" pos:column="28"/></name><argument_list pos:line="16" pos:column="28">(<argument><expr><literal type="string" pos:line="16" pos:column="29">"bug: unknown header field %d"<pos:position pos:line="16" pos:column="59"/></literal></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="61">p<pos:position pos:line="16" pos:column="62"/></name><operator pos:line="16" pos:column="62">-&gt;<pos:position pos:line="16" pos:column="67"/></operator><name pos:line="16" pos:column="64">field<pos:position pos:line="16" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="71"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="17" pos:column="17">compile_regexp<pos:position pos:line="17" pos:column="31"/></name><argument_list pos:line="17" pos:column="31">(<argument><expr><name pos:line="17" pos:column="32">p<pos:position pos:line="17" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="35">opt<pos:position pos:line="17" pos:column="38"/></name></expr></argument>)<pos:position pos:line="17" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="18" pos:column="10"/></block></for>

	<for pos:line="20" pos:column="9">for <control pos:line="20" pos:column="13">(<init><expr><name pos:line="20" pos:column="14">fld<pos:position pos:line="20" pos:column="17"/></name> <operator pos:line="20" pos:column="18">=<pos:position pos:line="20" pos:column="19"/></operator> <literal type="number" pos:line="20" pos:column="20">0<pos:position pos:line="20" pos:column="21"/></literal></expr>;<pos:position pos:line="20" pos:column="22"/></init> <condition><expr><name pos:line="20" pos:column="23">fld<pos:position pos:line="20" pos:column="26"/></name> <operator pos:line="20" pos:column="27">&lt;<pos:position pos:line="20" pos:column="31"/></operator> <name pos:line="20" pos:column="29">GREP_HEADER_FIELD_MAX<pos:position pos:line="20" pos:column="50"/></name></expr>;<pos:position pos:line="20" pos:column="51"/></condition> <incr><expr><name pos:line="20" pos:column="52">fld<pos:position pos:line="20" pos:column="55"/></name><operator pos:line="20" pos:column="55">++<pos:position pos:line="20" pos:column="57"/></operator></expr></incr>)<pos:position pos:line="20" pos:column="58"/></control>
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="21" pos:column="17">header_group<pos:position pos:line="21" pos:column="29"/></name><index pos:line="21" pos:column="29">[<expr><name pos:line="21" pos:column="30">fld<pos:position pos:line="21" pos:column="33"/></name></expr>]<pos:position pos:line="21" pos:column="34"/></index></name> <operator pos:line="21" pos:column="35">=<pos:position pos:line="21" pos:column="36"/></operator> <name pos:line="21" pos:column="37">NULL<pos:position pos:line="21" pos:column="41"/></name></expr>;<pos:position pos:line="21" pos:column="42"/></expr_stmt></block></for>

	<for pos:line="23" pos:column="9">for <control pos:line="23" pos:column="13">(<init><expr><name pos:line="23" pos:column="14">p<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">=<pos:position pos:line="23" pos:column="17"/></operator> <name><name pos:line="23" pos:column="18">opt<pos:position pos:line="23" pos:column="21"/></name><operator pos:line="23" pos:column="21">-&gt;<pos:position pos:line="23" pos:column="26"/></operator><name pos:line="23" pos:column="23">header_list<pos:position pos:line="23" pos:column="34"/></name></name></expr>;<pos:position pos:line="23" pos:column="35"/></init> <condition><expr><name pos:line="23" pos:column="36">p<pos:position pos:line="23" pos:column="37"/></name></expr>;<pos:position pos:line="23" pos:column="38"/></condition> <incr><expr><name pos:line="23" pos:column="39">p<pos:position pos:line="23" pos:column="40"/></name> <operator pos:line="23" pos:column="41">=<pos:position pos:line="23" pos:column="42"/></operator> <name><name pos:line="23" pos:column="43">p<pos:position pos:line="23" pos:column="44"/></name><operator pos:line="23" pos:column="44">-&gt;<pos:position pos:line="23" pos:column="49"/></operator><name pos:line="23" pos:column="46">next<pos:position pos:line="23" pos:column="50"/></name></name></expr></incr>)<pos:position pos:line="23" pos:column="51"/></control> <block pos:line="23" pos:column="52">{
		<decl_stmt><decl><type><name><name pos:line="24" pos:column="17">struct<pos:position pos:line="24" pos:column="23"/></name> <name pos:line="24" pos:column="24">grep_expr<pos:position pos:line="24" pos:column="33"/></name></name> <modifier pos:line="24" pos:column="34">*<pos:position pos:line="24" pos:column="35"/></modifier></type><name pos:line="24" pos:column="35">h<pos:position pos:line="24" pos:column="36"/></name></decl>;<pos:position pos:line="24" pos:column="37"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="25" pos:column="17">struct<pos:position pos:line="25" pos:column="23"/></name> <name pos:line="25" pos:column="24">grep_pat<pos:position pos:line="25" pos:column="32"/></name></name> <modifier pos:line="25" pos:column="33">*<pos:position pos:line="25" pos:column="34"/></modifier></type><name pos:line="25" pos:column="34">pp<pos:position pos:line="25" pos:column="36"/></name> <init pos:line="25" pos:column="37">= <expr><name pos:line="25" pos:column="39">p<pos:position pos:line="25" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="25" pos:column="41"/></decl_stmt>

		<expr_stmt><expr><name pos:line="27" pos:column="17">h<pos:position pos:line="27" pos:column="18"/></name> <operator pos:line="27" pos:column="19">=<pos:position pos:line="27" pos:column="20"/></operator> <call><name pos:line="27" pos:column="21">compile_pattern_atom<pos:position pos:line="27" pos:column="41"/></name><argument_list pos:line="27" pos:column="41">(<argument><expr><operator pos:line="27" pos:column="42">&amp;<pos:position pos:line="27" pos:column="47"/></operator><name pos:line="27" pos:column="43">pp<pos:position pos:line="27" pos:column="45"/></name></expr></argument>)<pos:position pos:line="27" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="47"/></expr_stmt>
		<if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><operator pos:line="28" pos:column="21">!<pos:position pos:line="28" pos:column="22"/></operator><name pos:line="28" pos:column="22">h<pos:position pos:line="28" pos:column="23"/></name> <operator pos:line="28" pos:column="24">||<pos:position pos:line="28" pos:column="26"/></operator> <name pos:line="28" pos:column="27">pp<pos:position pos:line="28" pos:column="29"/></name> <operator pos:line="28" pos:column="30">!=<pos:position pos:line="28" pos:column="32"/></operator> <name><name pos:line="28" pos:column="33">p<pos:position pos:line="28" pos:column="34"/></name><operator pos:line="28" pos:column="34">-&gt;<pos:position pos:line="28" pos:column="39"/></operator><name pos:line="28" pos:column="36">next<pos:position pos:line="28" pos:column="40"/></name></name></expr>)<pos:position pos:line="28" pos:column="41"/></condition><then pos:line="28" pos:column="41">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="25">die<pos:position pos:line="29" pos:column="28"/></name><argument_list pos:line="29" pos:column="28">(<argument><expr><literal type="string" pos:line="29" pos:column="29">"bug: malformed header expr"<pos:position pos:line="29" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="59"/></expr_stmt></block></then></if>
		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><operator pos:line="30" pos:column="21">!<pos:position pos:line="30" pos:column="22"/></operator><name><name pos:line="30" pos:column="22">header_group<pos:position pos:line="30" pos:column="34"/></name><index pos:line="30" pos:column="34">[<expr><name><name pos:line="30" pos:column="35">p<pos:position pos:line="30" pos:column="36"/></name><operator pos:line="30" pos:column="36">-&gt;<pos:position pos:line="30" pos:column="41"/></operator><name pos:line="30" pos:column="38">field<pos:position pos:line="30" pos:column="43"/></name></name></expr>]<pos:position pos:line="30" pos:column="44"/></index></name></expr>)<pos:position pos:line="30" pos:column="45"/></condition><then pos:line="30" pos:column="45"> <block pos:line="30" pos:column="46">{
			<expr_stmt><expr><name><name pos:line="31" pos:column="25">header_group<pos:position pos:line="31" pos:column="37"/></name><index pos:line="31" pos:column="37">[<expr><name><name pos:line="31" pos:column="38">p<pos:position pos:line="31" pos:column="39"/></name><operator pos:line="31" pos:column="39">-&gt;<pos:position pos:line="31" pos:column="44"/></operator><name pos:line="31" pos:column="41">field<pos:position pos:line="31" pos:column="46"/></name></name></expr>]<pos:position pos:line="31" pos:column="47"/></index></name> <operator pos:line="31" pos:column="48">=<pos:position pos:line="31" pos:column="49"/></operator> <name pos:line="31" pos:column="50">h<pos:position pos:line="31" pos:column="51"/></name></expr>;<pos:position pos:line="31" pos:column="52"/></expr_stmt>
			<continue pos:line="32" pos:column="25">continue;<pos:position pos:line="32" pos:column="34"/></continue>
		}<pos:position pos:line="33" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name><name pos:line="34" pos:column="17">header_group<pos:position pos:line="34" pos:column="29"/></name><index pos:line="34" pos:column="29">[<expr><name><name pos:line="34" pos:column="30">p<pos:position pos:line="34" pos:column="31"/></name><operator pos:line="34" pos:column="31">-&gt;<pos:position pos:line="34" pos:column="36"/></operator><name pos:line="34" pos:column="33">field<pos:position pos:line="34" pos:column="38"/></name></name></expr>]<pos:position pos:line="34" pos:column="39"/></index></name> <operator pos:line="34" pos:column="40">=<pos:position pos:line="34" pos:column="41"/></operator> <call><name pos:line="34" pos:column="42">grep_or_expr<pos:position pos:line="34" pos:column="54"/></name><argument_list pos:line="34" pos:column="54">(<argument><expr><name pos:line="34" pos:column="55">h<pos:position pos:line="34" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="58">header_group<pos:position pos:line="34" pos:column="70"/></name><index pos:line="34" pos:column="70">[<expr><name><name pos:line="34" pos:column="71">p<pos:position pos:line="34" pos:column="72"/></name><operator pos:line="34" pos:column="72">-&gt;<pos:position pos:line="34" pos:column="77"/></operator><name pos:line="34" pos:column="74">field<pos:position pos:line="34" pos:column="79"/></name></name></expr>]<pos:position pos:line="34" pos:column="80"/></index></name></expr></argument>)<pos:position pos:line="34" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="82"/></expr_stmt>
	}<pos:position pos:line="35" pos:column="10"/></block></for>

	<expr_stmt><expr><name pos:line="37" pos:column="9">header_expr<pos:position pos:line="37" pos:column="20"/></name> <operator pos:line="37" pos:column="21">=<pos:position pos:line="37" pos:column="22"/></operator> <name pos:line="37" pos:column="23">NULL<pos:position pos:line="37" pos:column="27"/></name></expr>;<pos:position pos:line="37" pos:column="28"/></expr_stmt>

	<for pos:line="39" pos:column="9">for <control pos:line="39" pos:column="13">(<init><expr><name pos:line="39" pos:column="14">fld<pos:position pos:line="39" pos:column="17"/></name> <operator pos:line="39" pos:column="18">=<pos:position pos:line="39" pos:column="19"/></operator> <literal type="number" pos:line="39" pos:column="20">0<pos:position pos:line="39" pos:column="21"/></literal></expr>;<pos:position pos:line="39" pos:column="22"/></init> <condition><expr><name pos:line="39" pos:column="23">fld<pos:position pos:line="39" pos:column="26"/></name> <operator pos:line="39" pos:column="27">&lt;<pos:position pos:line="39" pos:column="31"/></operator> <name pos:line="39" pos:column="29">GREP_HEADER_FIELD_MAX<pos:position pos:line="39" pos:column="50"/></name></expr>;<pos:position pos:line="39" pos:column="51"/></condition> <incr><expr><name pos:line="39" pos:column="52">fld<pos:position pos:line="39" pos:column="55"/></name><operator pos:line="39" pos:column="55">++<pos:position pos:line="39" pos:column="57"/></operator></expr></incr>)<pos:position pos:line="39" pos:column="58"/></control> <block pos:line="39" pos:column="59">{
		<if pos:line="40" pos:column="17">if <condition pos:line="40" pos:column="20">(<expr><operator pos:line="40" pos:column="21">!<pos:position pos:line="40" pos:column="22"/></operator><name><name pos:line="40" pos:column="22">header_group<pos:position pos:line="40" pos:column="34"/></name><index pos:line="40" pos:column="34">[<expr><name pos:line="40" pos:column="35">fld<pos:position pos:line="40" pos:column="38"/></name></expr>]<pos:position pos:line="40" pos:column="39"/></index></name></expr>)<pos:position pos:line="40" pos:column="40"/></condition><then pos:line="40" pos:column="40">
			<block type="pseudo"><continue pos:line="41" pos:column="25">continue;<pos:position pos:line="41" pos:column="34"/></continue></block></then></if>
		<if pos:line="42" pos:column="17">if <condition pos:line="42" pos:column="20">(<expr><operator pos:line="42" pos:column="21">!<pos:position pos:line="42" pos:column="22"/></operator><name pos:line="42" pos:column="22">header_expr<pos:position pos:line="42" pos:column="33"/></name></expr>)<pos:position pos:line="42" pos:column="34"/></condition><then pos:line="42" pos:column="34">
			<block type="pseudo"><expr_stmt><expr><name pos:line="43" pos:column="25">header_expr<pos:position pos:line="43" pos:column="36"/></name> <operator pos:line="43" pos:column="37">=<pos:position pos:line="43" pos:column="38"/></operator> <call><name pos:line="43" pos:column="39">grep_true_expr<pos:position pos:line="43" pos:column="53"/></name><argument_list pos:line="43" pos:column="53">()<pos:position pos:line="43" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="56"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="44" pos:column="17">header_expr<pos:position pos:line="44" pos:column="28"/></name> <operator pos:line="44" pos:column="29">=<pos:position pos:line="44" pos:column="30"/></operator> <call><name pos:line="44" pos:column="31">grep_or_expr<pos:position pos:line="44" pos:column="43"/></name><argument_list pos:line="44" pos:column="43">(<argument><expr><name><name pos:line="44" pos:column="44">header_group<pos:position pos:line="44" pos:column="56"/></name><index pos:line="44" pos:column="56">[<expr><name pos:line="44" pos:column="57">fld<pos:position pos:line="44" pos:column="60"/></name></expr>]<pos:position pos:line="44" pos:column="61"/></index></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="63">header_expr<pos:position pos:line="44" pos:column="74"/></name></expr></argument>)<pos:position pos:line="44" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="76"/></expr_stmt>
	}<pos:position pos:line="45" pos:column="10"/></block></for>
	<return pos:line="46" pos:column="9">return <expr><name pos:line="46" pos:column="16">header_expr<pos:position pos:line="46" pos:column="27"/></name></expr>;<pos:position pos:line="46" pos:column="28"/></return>
}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_127.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ansi_emulate<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">str<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">FILE<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">stream<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">rv<pos:position pos:line="3" pos:column="15"/></name> <init pos:line="3" pos:column="16">= <expr><literal type="number" pos:line="3" pos:column="18">0<pos:position pos:line="3" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">pos<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><name pos:line="4" pos:column="27">str<pos:position pos:line="4" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>

	<while pos:line="6" pos:column="9">while <condition pos:line="6" pos:column="15">(<expr><operator pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="17">pos<pos:position pos:line="6" pos:column="20"/></name></expr>)<pos:position pos:line="6" pos:column="21"/></condition> <block pos:line="6" pos:column="22">{
		<expr_stmt><expr><name pos:line="7" pos:column="17">pos<pos:position pos:line="7" pos:column="20"/></name> <operator pos:line="7" pos:column="21">=<pos:position pos:line="7" pos:column="22"/></operator> <call><name pos:line="7" pos:column="23">strstr<pos:position pos:line="7" pos:column="29"/></name><argument_list pos:line="7" pos:column="29">(<argument><expr><name pos:line="7" pos:column="30">str<pos:position pos:line="7" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="35">"\033["<pos:position pos:line="7" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="44"/></expr_stmt>
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><name pos:line="8" pos:column="21">pos<pos:position pos:line="8" pos:column="24"/></name></expr>)<pos:position pos:line="8" pos:column="25"/></condition><then pos:line="8" pos:column="25"> <block pos:line="8" pos:column="26">{
			<decl_stmt><decl><type><name pos:line="9" pos:column="25">size_t<pos:position pos:line="9" pos:column="31"/></name></type> <name pos:line="9" pos:column="32">len<pos:position pos:line="9" pos:column="35"/></name> <init pos:line="9" pos:column="36">= <expr><name pos:line="9" pos:column="38">pos<pos:position pos:line="9" pos:column="41"/></name> <operator pos:line="9" pos:column="42">-<pos:position pos:line="9" pos:column="43"/></operator> <name pos:line="9" pos:column="44">str<pos:position pos:line="9" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="48"/></decl_stmt>

			<if pos:line="11" pos:column="25">if <condition pos:line="11" pos:column="28">(<expr><name pos:line="11" pos:column="29">len<pos:position pos:line="11" pos:column="32"/></name></expr>)<pos:position pos:line="11" pos:column="33"/></condition><then pos:line="11" pos:column="33"> <block pos:line="11" pos:column="34">{
				<decl_stmt><decl><type><name pos:line="12" pos:column="33">size_t<pos:position pos:line="12" pos:column="39"/></name></type> <name pos:line="12" pos:column="40">out_len<pos:position pos:line="12" pos:column="47"/></name> <init pos:line="12" pos:column="48">= <expr><call><name pos:line="12" pos:column="50">fwrite<pos:position pos:line="12" pos:column="56"/></name><argument_list pos:line="12" pos:column="56">(<argument><expr><name pos:line="12" pos:column="57">str<pos:position pos:line="12" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="62">1<pos:position pos:line="12" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="65">len<pos:position pos:line="12" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="70">stream<pos:position pos:line="12" pos:column="76"/></name></expr></argument>)<pos:position pos:line="12" pos:column="77"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="78"/></decl_stmt>
				<expr_stmt><expr><name pos:line="13" pos:column="33">rv<pos:position pos:line="13" pos:column="35"/></name> <operator pos:line="13" pos:column="36">+=<pos:position pos:line="13" pos:column="38"/></operator> <name pos:line="13" pos:column="39">out_len<pos:position pos:line="13" pos:column="46"/></name></expr>;<pos:position pos:line="13" pos:column="47"/></expr_stmt>
				<if pos:line="14" pos:column="33">if <condition pos:line="14" pos:column="36">(<expr><name pos:line="14" pos:column="37">out_len<pos:position pos:line="14" pos:column="44"/></name> <operator pos:line="14" pos:column="45">&lt;<pos:position pos:line="14" pos:column="49"/></operator> <name pos:line="14" pos:column="47">len<pos:position pos:line="14" pos:column="50"/></name></expr>)<pos:position pos:line="14" pos:column="51"/></condition><then pos:line="14" pos:column="51">
					<block type="pseudo"><return pos:line="15" pos:column="41">return <expr><name pos:line="15" pos:column="48">rv<pos:position pos:line="15" pos:column="50"/></name></expr>;<pos:position pos:line="15" pos:column="51"/></return></block></then></if>
			}<pos:position pos:line="16" pos:column="26"/></block></then></if>

			<expr_stmt><expr><name pos:line="18" pos:column="25">str<pos:position pos:line="18" pos:column="28"/></name> <operator pos:line="18" pos:column="29">=<pos:position pos:line="18" pos:column="30"/></operator> <name pos:line="18" pos:column="31">pos<pos:position pos:line="18" pos:column="34"/></name> <operator pos:line="18" pos:column="35">+<pos:position pos:line="18" pos:column="36"/></operator> <literal type="number" pos:line="18" pos:column="37">2<pos:position pos:line="18" pos:column="38"/></literal></expr>;<pos:position pos:line="18" pos:column="39"/></expr_stmt>
			<expr_stmt><expr><name pos:line="19" pos:column="25">rv<pos:position pos:line="19" pos:column="27"/></name> <operator pos:line="19" pos:column="28">+=<pos:position pos:line="19" pos:column="30"/></operator> <literal type="number" pos:line="19" pos:column="31">2<pos:position pos:line="19" pos:column="32"/></literal></expr>;<pos:position pos:line="19" pos:column="33"/></expr_stmt>

			<expr_stmt><expr><call><name pos:line="21" pos:column="25">fflush<pos:position pos:line="21" pos:column="31"/></name><argument_list pos:line="21" pos:column="31">(<argument><expr><name pos:line="21" pos:column="32">stream<pos:position pos:line="21" pos:column="38"/></name></expr></argument>)<pos:position pos:line="21" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="40"/></expr_stmt>

			<expr_stmt><expr><name pos:line="23" pos:column="25">pos<pos:position pos:line="23" pos:column="28"/></name> <operator pos:line="23" pos:column="29">=<pos:position pos:line="23" pos:column="30"/></operator> <call><name pos:line="23" pos:column="31">set_attr<pos:position pos:line="23" pos:column="39"/></name><argument_list pos:line="23" pos:column="39">(<argument><expr><name pos:line="23" pos:column="40">str<pos:position pos:line="23" pos:column="43"/></name></expr></argument>)<pos:position pos:line="23" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="45"/></expr_stmt>
			<expr_stmt><expr><name pos:line="24" pos:column="25">rv<pos:position pos:line="24" pos:column="27"/></name> <operator pos:line="24" pos:column="28">+=<pos:position pos:line="24" pos:column="30"/></operator> <name pos:line="24" pos:column="31">pos<pos:position pos:line="24" pos:column="34"/></name> <operator pos:line="24" pos:column="35">-<pos:position pos:line="24" pos:column="36"/></operator> <name pos:line="24" pos:column="37">str<pos:position pos:line="24" pos:column="40"/></name></expr>;<pos:position pos:line="24" pos:column="41"/></expr_stmt>
			<expr_stmt><expr><name pos:line="25" pos:column="25">str<pos:position pos:line="25" pos:column="28"/></name> <operator pos:line="25" pos:column="29">=<pos:position pos:line="25" pos:column="30"/></operator> <name pos:line="25" pos:column="31">pos<pos:position pos:line="25" pos:column="34"/></name></expr>;<pos:position pos:line="25" pos:column="35"/></expr_stmt>
		}<pos:position pos:line="26" pos:column="18"/></block></then> <else pos:line="26" pos:column="19">else <block pos:line="26" pos:column="24">{
			<expr_stmt><expr><name pos:line="27" pos:column="25">rv<pos:position pos:line="27" pos:column="27"/></name> <operator pos:line="27" pos:column="28">+=<pos:position pos:line="27" pos:column="30"/></operator> <call><name pos:line="27" pos:column="31">strlen<pos:position pos:line="27" pos:column="37"/></name><argument_list pos:line="27" pos:column="37">(<argument><expr><name pos:line="27" pos:column="38">str<pos:position pos:line="27" pos:column="41"/></name></expr></argument>)<pos:position pos:line="27" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="43"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="28" pos:column="25">fputs<pos:position pos:line="28" pos:column="30"/></name><argument_list pos:line="28" pos:column="30">(<argument><expr><name pos:line="28" pos:column="31">str<pos:position pos:line="28" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="36">stream<pos:position pos:line="28" pos:column="42"/></name></expr></argument>)<pos:position pos:line="28" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="44"/></expr_stmt>
			<return pos:line="29" pos:column="25">return <expr><name pos:line="29" pos:column="32">rv<pos:position pos:line="29" pos:column="34"/></name></expr>;<pos:position pos:line="29" pos:column="35"/></return>
		}<pos:position pos:line="30" pos:column="18"/></block></else></if>
	}<pos:position pos:line="31" pos:column="10"/></block></while>
	<return pos:line="32" pos:column="9">return <expr><name pos:line="32" pos:column="16">rv<pos:position pos:line="32" pos:column="18"/></name></expr>;<pos:position pos:line="32" pos:column="19"/></return>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2476.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">add_remote_info_ref<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name><name pos:line="1" pos:column="33">struct<pos:position pos:line="1" pos:column="39"/></name> <name pos:line="1" pos:column="40">remote_ls_ctx<pos:position pos:line="1" pos:column="53"/></name></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">ls<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="58"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">strbuf<pos:position pos:line="3" pos:column="22"/></name></name> <modifier pos:line="3" pos:column="23">*<pos:position pos:line="3" pos:column="24"/></modifier></type><name pos:line="3" pos:column="24">buf<pos:position pos:line="3" pos:column="27"/></name> <init pos:line="3" pos:column="28">= <expr><operator pos:line="3" pos:column="30">(<pos:position pos:line="3" pos:column="31"/></operator>struct <name pos:line="3" pos:column="38">strbuf<pos:position pos:line="3" pos:column="44"/></name> <operator pos:line="3" pos:column="45">*<pos:position pos:line="3" pos:column="46"/></operator><operator pos:line="3" pos:column="46">)<pos:position pos:line="3" pos:column="47"/></operator><name><name pos:line="3" pos:column="47">ls<pos:position pos:line="3" pos:column="49"/></name><operator pos:line="3" pos:column="49">-&gt;<pos:position pos:line="3" pos:column="54"/></operator><name pos:line="3" pos:column="51">userData<pos:position pos:line="3" pos:column="59"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="60"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">object<pos:position pos:line="4" pos:column="22"/></name></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">o<pos:position pos:line="4" pos:column="25"/></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">len<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">ref_info<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">ref<pos:position pos:line="7" pos:column="19"/></name></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">ref<pos:position pos:line="7" pos:column="24"/></name></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>

	<expr_stmt><expr><name pos:line="9" pos:column="9">ref<pos:position pos:line="9" pos:column="12"/></name> <operator pos:line="9" pos:column="13">=<pos:position pos:line="9" pos:column="14"/></operator> <call><name pos:line="9" pos:column="15">alloc_ref<pos:position pos:line="9" pos:column="24"/></name><argument_list pos:line="9" pos:column="24">(<argument><expr><name><name pos:line="9" pos:column="25">ls<pos:position pos:line="9" pos:column="27"/></name><operator pos:line="9" pos:column="27">-&gt;<pos:position pos:line="9" pos:column="32"/></operator><name pos:line="9" pos:column="29">dentry_name<pos:position pos:line="9" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="42"/></expr_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><call><name pos:line="11" pos:column="13">http_fetch_ref<pos:position pos:line="11" pos:column="27"/></name><argument_list pos:line="11" pos:column="27">(<argument><expr><name><name pos:line="11" pos:column="28">repo<pos:position pos:line="11" pos:column="32"/></name><operator pos:line="11" pos:column="32">-&gt;<pos:position pos:line="11" pos:column="37"/></operator><name pos:line="11" pos:column="34">url<pos:position pos:line="11" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="39">ref<pos:position pos:line="11" pos:column="42"/></name></expr></argument>)<pos:position pos:line="11" pos:column="43"/></argument_list></call> <operator pos:line="11" pos:column="44">!=<pos:position pos:line="11" pos:column="46"/></operator> <literal type="number" pos:line="11" pos:column="47">0<pos:position pos:line="11" pos:column="48"/></literal></expr>)<pos:position pos:line="11" pos:column="49"/></condition><then pos:line="11" pos:column="49"> <block pos:line="11" pos:column="50">{
		<expr_stmt><expr><call><name pos:line="12" pos:column="17">fprintf<pos:position pos:line="12" pos:column="24"/></name><argument_list pos:line="12" pos:column="24">(<argument><expr><name pos:line="12" pos:column="25">stderr<pos:position pos:line="12" pos:column="31"/></name></expr></argument>,
			<argument><expr><literal type="string" pos:line="13" pos:column="25">"Unable to fetch ref %s from %s\n"<pos:position pos:line="13" pos:column="59"/></literal></expr></argument>,
			<argument><expr><name><name pos:line="14" pos:column="25">ls<pos:position pos:line="14" pos:column="27"/></name><operator pos:line="14" pos:column="27">-&gt;<pos:position pos:line="14" pos:column="32"/></operator><name pos:line="14" pos:column="29">dentry_name<pos:position pos:line="14" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="42">repo<pos:position pos:line="14" pos:column="46"/></name><operator pos:line="14" pos:column="46">-&gt;<pos:position pos:line="14" pos:column="51"/></operator><name pos:line="14" pos:column="48">url<pos:position pos:line="14" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="53"/></expr_stmt>
		<expr_stmt><expr><name pos:line="15" pos:column="17">aborted<pos:position pos:line="15" pos:column="24"/></name> <operator pos:line="15" pos:column="25">=<pos:position pos:line="15" pos:column="26"/></operator> <literal type="number" pos:line="15" pos:column="27">1<pos:position pos:line="15" pos:column="28"/></literal></expr>;<pos:position pos:line="15" pos:column="29"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">free<pos:position pos:line="16" pos:column="21"/></name><argument_list pos:line="16" pos:column="21">(<argument><expr><name pos:line="16" pos:column="22">ref<pos:position pos:line="16" pos:column="25"/></name></expr></argument>)<pos:position pos:line="16" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="27"/></expr_stmt>
		<return pos:line="17" pos:column="17">return;<pos:position pos:line="17" pos:column="24"/></return>
	}<pos:position pos:line="18" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="20" pos:column="9">o<pos:position pos:line="20" pos:column="10"/></name> <operator pos:line="20" pos:column="11">=<pos:position pos:line="20" pos:column="12"/></operator> <call><name pos:line="20" pos:column="13">parse_object<pos:position pos:line="20" pos:column="25"/></name><argument_list pos:line="20" pos:column="25">(<argument><expr><name><name pos:line="20" pos:column="26">ref<pos:position pos:line="20" pos:column="29"/></name><operator pos:line="20" pos:column="29">-&gt;<pos:position pos:line="20" pos:column="34"/></operator><name pos:line="20" pos:column="31">old_sha1<pos:position pos:line="20" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="41"/></expr_stmt>
	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><operator pos:line="21" pos:column="13">!<pos:position pos:line="21" pos:column="14"/></operator><name pos:line="21" pos:column="14">o<pos:position pos:line="21" pos:column="15"/></name></expr>)<pos:position pos:line="21" pos:column="16"/></condition><then pos:line="21" pos:column="16"> <block pos:line="21" pos:column="17">{
		<expr_stmt><expr><call><name pos:line="22" pos:column="17">fprintf<pos:position pos:line="22" pos:column="24"/></name><argument_list pos:line="22" pos:column="24">(<argument><expr><name pos:line="22" pos:column="25">stderr<pos:position pos:line="22" pos:column="31"/></name></expr></argument>,
			<argument><expr><literal type="string" pos:line="23" pos:column="25">"Unable to parse object %s for remote ref %s\n"<pos:position pos:line="23" pos:column="72"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="24" pos:column="25">sha1_to_hex<pos:position pos:line="24" pos:column="36"/></name><argument_list pos:line="24" pos:column="36">(<argument><expr><name><name pos:line="24" pos:column="37">ref<pos:position pos:line="24" pos:column="40"/></name><operator pos:line="24" pos:column="40">-&gt;<pos:position pos:line="24" pos:column="45"/></operator><name pos:line="24" pos:column="42">old_sha1<pos:position pos:line="24" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="51"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="53">ls<pos:position pos:line="24" pos:column="55"/></name><operator pos:line="24" pos:column="55">-&gt;<pos:position pos:line="24" pos:column="60"/></operator><name pos:line="24" pos:column="57">dentry_name<pos:position pos:line="24" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="70"/></expr_stmt>
		<expr_stmt><expr><name pos:line="25" pos:column="17">aborted<pos:position pos:line="25" pos:column="24"/></name> <operator pos:line="25" pos:column="25">=<pos:position pos:line="25" pos:column="26"/></operator> <literal type="number" pos:line="25" pos:column="27">1<pos:position pos:line="25" pos:column="28"/></literal></expr>;<pos:position pos:line="25" pos:column="29"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="26" pos:column="17">free<pos:position pos:line="26" pos:column="21"/></name><argument_list pos:line="26" pos:column="21">(<argument><expr><name pos:line="26" pos:column="22">ref<pos:position pos:line="26" pos:column="25"/></name></expr></argument>)<pos:position pos:line="26" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="27"/></expr_stmt>
		<return pos:line="27" pos:column="17">return;<pos:position pos:line="27" pos:column="24"/></return>
	}<pos:position pos:line="28" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="30" pos:column="9">len<pos:position pos:line="30" pos:column="12"/></name> <operator pos:line="30" pos:column="13">=<pos:position pos:line="30" pos:column="14"/></operator> <call><name pos:line="30" pos:column="15">strlen<pos:position pos:line="30" pos:column="21"/></name><argument_list pos:line="30" pos:column="21">(<argument><expr><name><name pos:line="30" pos:column="22">ls<pos:position pos:line="30" pos:column="24"/></name><operator pos:line="30" pos:column="24">-&gt;<pos:position pos:line="30" pos:column="29"/></operator><name pos:line="30" pos:column="26">dentry_name<pos:position pos:line="30" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="38"/></argument_list></call> <operator pos:line="30" pos:column="39">+<pos:position pos:line="30" pos:column="40"/></operator> <literal type="number" pos:line="30" pos:column="41">42<pos:position pos:line="30" pos:column="43"/></literal></expr>;<pos:position pos:line="30" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><name pos:line="31" pos:column="9">ref_info<pos:position pos:line="31" pos:column="17"/></name> <operator pos:line="31" pos:column="18">=<pos:position pos:line="31" pos:column="19"/></operator> <call><name pos:line="31" pos:column="20">xcalloc<pos:position pos:line="31" pos:column="27"/></name><argument_list pos:line="31" pos:column="27">(<argument><expr><name pos:line="31" pos:column="28">len<pos:position pos:line="31" pos:column="31"/></name> <operator pos:line="31" pos:column="32">+<pos:position pos:line="31" pos:column="33"/></operator> <literal type="number" pos:line="31" pos:column="34">1<pos:position pos:line="31" pos:column="35"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="37">1<pos:position pos:line="31" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="32" pos:column="9">sprintf<pos:position pos:line="32" pos:column="16"/></name><argument_list pos:line="32" pos:column="16">(<argument><expr><name pos:line="32" pos:column="17">ref_info<pos:position pos:line="32" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="27">"%s	%s\n"<pos:position pos:line="32" pos:column="36"/></literal></expr></argument>,
		<argument><expr><call><name pos:line="33" pos:column="17">sha1_to_hex<pos:position pos:line="33" pos:column="28"/></name><argument_list pos:line="33" pos:column="28">(<argument><expr><name><name pos:line="33" pos:column="29">ref<pos:position pos:line="33" pos:column="32"/></name><operator pos:line="33" pos:column="32">-&gt;<pos:position pos:line="33" pos:column="37"/></operator><name pos:line="33" pos:column="34">old_sha1<pos:position pos:line="33" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="43"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="45">ls<pos:position pos:line="33" pos:column="47"/></name><operator pos:line="33" pos:column="47">-&gt;<pos:position pos:line="33" pos:column="52"/></operator><name pos:line="33" pos:column="49">dentry_name<pos:position pos:line="33" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="62"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="34" pos:column="9">fwrite_buffer<pos:position pos:line="34" pos:column="22"/></name><argument_list pos:line="34" pos:column="22">(<argument><expr><name pos:line="34" pos:column="23">ref_info<pos:position pos:line="34" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="33">1<pos:position pos:line="34" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="36">len<pos:position pos:line="34" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="41">buf<pos:position pos:line="34" pos:column="44"/></name></expr></argument>)<pos:position pos:line="34" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="35" pos:column="9">free<pos:position pos:line="35" pos:column="13"/></name><argument_list pos:line="35" pos:column="13">(<argument><expr><name pos:line="35" pos:column="14">ref_info<pos:position pos:line="35" pos:column="22"/></name></expr></argument>)<pos:position pos:line="35" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="24"/></expr_stmt>

	<if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><name><name pos:line="37" pos:column="13">o<pos:position pos:line="37" pos:column="14"/></name><operator pos:line="37" pos:column="14">-&gt;<pos:position pos:line="37" pos:column="19"/></operator><name pos:line="37" pos:column="16">type<pos:position pos:line="37" pos:column="20"/></name></name> <operator pos:line="37" pos:column="21">==<pos:position pos:line="37" pos:column="23"/></operator> <name pos:line="37" pos:column="24">OBJ_TAG<pos:position pos:line="37" pos:column="31"/></name></expr>)<pos:position pos:line="37" pos:column="32"/></condition><then pos:line="37" pos:column="32"> <block pos:line="37" pos:column="33">{
		<expr_stmt><expr><name pos:line="38" pos:column="17">o<pos:position pos:line="38" pos:column="18"/></name> <operator pos:line="38" pos:column="19">=<pos:position pos:line="38" pos:column="20"/></operator> <call><name pos:line="38" pos:column="21">deref_tag<pos:position pos:line="38" pos:column="30"/></name><argument_list pos:line="38" pos:column="30">(<argument><expr><name pos:line="38" pos:column="31">o<pos:position pos:line="38" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="34">ls<pos:position pos:line="38" pos:column="36"/></name><operator pos:line="38" pos:column="36">-&gt;<pos:position pos:line="38" pos:column="41"/></operator><name pos:line="38" pos:column="38">dentry_name<pos:position pos:line="38" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="51">0<pos:position pos:line="38" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="54"/></expr_stmt>
		<if pos:line="39" pos:column="17">if <condition pos:line="39" pos:column="20">(<expr><name pos:line="39" pos:column="21">o<pos:position pos:line="39" pos:column="22"/></name></expr>)<pos:position pos:line="39" pos:column="23"/></condition><then pos:line="39" pos:column="23"> <block pos:line="39" pos:column="24">{
			<expr_stmt><expr><name pos:line="40" pos:column="25">len<pos:position pos:line="40" pos:column="28"/></name> <operator pos:line="40" pos:column="29">=<pos:position pos:line="40" pos:column="30"/></operator> <call><name pos:line="40" pos:column="31">strlen<pos:position pos:line="40" pos:column="37"/></name><argument_list pos:line="40" pos:column="37">(<argument><expr><name><name pos:line="40" pos:column="38">ls<pos:position pos:line="40" pos:column="40"/></name><operator pos:line="40" pos:column="40">-&gt;<pos:position pos:line="40" pos:column="45"/></operator><name pos:line="40" pos:column="42">dentry_name<pos:position pos:line="40" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="54"/></argument_list></call> <operator pos:line="40" pos:column="55">+<pos:position pos:line="40" pos:column="56"/></operator> <literal type="number" pos:line="40" pos:column="57">45<pos:position pos:line="40" pos:column="59"/></literal></expr>;<pos:position pos:line="40" pos:column="60"/></expr_stmt>
			<expr_stmt><expr><name pos:line="41" pos:column="25">ref_info<pos:position pos:line="41" pos:column="33"/></name> <operator pos:line="41" pos:column="34">=<pos:position pos:line="41" pos:column="35"/></operator> <call><name pos:line="41" pos:column="36">xcalloc<pos:position pos:line="41" pos:column="43"/></name><argument_list pos:line="41" pos:column="43">(<argument><expr><name pos:line="41" pos:column="44">len<pos:position pos:line="41" pos:column="47"/></name> <operator pos:line="41" pos:column="48">+<pos:position pos:line="41" pos:column="49"/></operator> <literal type="number" pos:line="41" pos:column="50">1<pos:position pos:line="41" pos:column="51"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="53">1<pos:position pos:line="41" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="56"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="42" pos:column="25">sprintf<pos:position pos:line="42" pos:column="32"/></name><argument_list pos:line="42" pos:column="32">(<argument><expr><name pos:line="42" pos:column="33">ref_info<pos:position pos:line="42" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="43">"%s	%s^{}\n"<pos:position pos:line="42" pos:column="55"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="43" pos:column="33">sha1_to_hex<pos:position pos:line="43" pos:column="44"/></name><argument_list pos:line="43" pos:column="44">(<argument><expr><name><name pos:line="43" pos:column="45">o<pos:position pos:line="43" pos:column="46"/></name><operator pos:line="43" pos:column="46">-&gt;<pos:position pos:line="43" pos:column="51"/></operator><name pos:line="43" pos:column="48">sha1<pos:position pos:line="43" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="55">ls<pos:position pos:line="43" pos:column="57"/></name><operator pos:line="43" pos:column="57">-&gt;<pos:position pos:line="43" pos:column="62"/></operator><name pos:line="43" pos:column="59">dentry_name<pos:position pos:line="43" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="72"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="44" pos:column="25">fwrite_buffer<pos:position pos:line="44" pos:column="38"/></name><argument_list pos:line="44" pos:column="38">(<argument><expr><name pos:line="44" pos:column="39">ref_info<pos:position pos:line="44" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="49">1<pos:position pos:line="44" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="52">len<pos:position pos:line="44" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="57">buf<pos:position pos:line="44" pos:column="60"/></name></expr></argument>)<pos:position pos:line="44" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="62"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="45" pos:column="25">free<pos:position pos:line="45" pos:column="29"/></name><argument_list pos:line="45" pos:column="29">(<argument><expr><name pos:line="45" pos:column="30">ref_info<pos:position pos:line="45" pos:column="38"/></name></expr></argument>)<pos:position pos:line="45" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="40"/></expr_stmt>
		}<pos:position pos:line="46" pos:column="18"/></block></then></if>
	}<pos:position pos:line="47" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="48" pos:column="9">free<pos:position pos:line="48" pos:column="13"/></name><argument_list pos:line="48" pos:column="13">(<argument><expr><name pos:line="48" pos:column="14">ref<pos:position pos:line="48" pos:column="17"/></name></expr></argument>)<pos:position pos:line="48" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="19"/></expr_stmt>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

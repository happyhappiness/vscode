<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3125_git-2.6.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">merge_content<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name><name pos:line="1" pos:column="26">struct<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">merge_options<pos:position pos:line="1" pos:column="46"/></name></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">o<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>,
			 <parameter><decl><type><specifier pos:line="2" pos:column="26">const<pos:position pos:line="2" pos:column="31"/></specifier> <name pos:line="2" pos:column="32">char<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="38">path<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>,
			 <parameter><decl><type><name pos:line="3" pos:column="26">unsigned<pos:position pos:line="3" pos:column="34"/></name> <name pos:line="3" pos:column="35">char<pos:position pos:line="3" pos:column="39"/></name> <modifier pos:line="3" pos:column="40">*<pos:position pos:line="3" pos:column="41"/></modifier></type><name pos:line="3" pos:column="41">o_sha<pos:position pos:line="3" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="48">int<pos:position pos:line="3" pos:column="51"/></name></type> <name pos:line="3" pos:column="52">o_mode<pos:position pos:line="3" pos:column="58"/></name></decl></parameter>,
			 <parameter><decl><type><name pos:line="4" pos:column="26">unsigned<pos:position pos:line="4" pos:column="34"/></name> <name pos:line="4" pos:column="35">char<pos:position pos:line="4" pos:column="39"/></name> <modifier pos:line="4" pos:column="40">*<pos:position pos:line="4" pos:column="41"/></modifier></type><name pos:line="4" pos:column="41">a_sha<pos:position pos:line="4" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="4" pos:column="48">int<pos:position pos:line="4" pos:column="51"/></name></type> <name pos:line="4" pos:column="52">a_mode<pos:position pos:line="4" pos:column="58"/></name></decl></parameter>,
			 <parameter><decl><type><name pos:line="5" pos:column="26">unsigned<pos:position pos:line="5" pos:column="34"/></name> <name pos:line="5" pos:column="35">char<pos:position pos:line="5" pos:column="39"/></name> <modifier pos:line="5" pos:column="40">*<pos:position pos:line="5" pos:column="41"/></modifier></type><name pos:line="5" pos:column="41">b_sha<pos:position pos:line="5" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="5" pos:column="48">int<pos:position pos:line="5" pos:column="51"/></name></type> <name pos:line="5" pos:column="52">b_mode<pos:position pos:line="5" pos:column="58"/></name></decl></parameter>,
			 <parameter><decl><type><name><name pos:line="6" pos:column="26">struct<pos:position pos:line="6" pos:column="32"/></name> <name pos:line="6" pos:column="33">rename_conflict_info<pos:position pos:line="6" pos:column="53"/></name></name> <modifier pos:line="6" pos:column="54">*<pos:position pos:line="6" pos:column="55"/></modifier></type><name pos:line="6" pos:column="55">rename_conflict_info<pos:position pos:line="6" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="6" pos:column="76"/></parameter_list>
<block pos:line="7" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="8" pos:column="9">const<pos:position pos:line="8" pos:column="14"/></specifier> <name pos:line="8" pos:column="15">char<pos:position pos:line="8" pos:column="19"/></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">reason<pos:position pos:line="8" pos:column="27"/></name> <init pos:line="8" pos:column="28">= <expr><call><name pos:line="8" pos:column="30">_<pos:position pos:line="8" pos:column="31"/></name><argument_list pos:line="8" pos:column="31">(<argument><expr><literal type="string" pos:line="8" pos:column="32">"content"<pos:position pos:line="8" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="42"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="43"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="9" pos:column="9">const<pos:position pos:line="9" pos:column="14"/></specifier> <name pos:line="9" pos:column="15">char<pos:position pos:line="9" pos:column="19"/></name> <modifier pos:line="9" pos:column="20">*<pos:position pos:line="9" pos:column="21"/></modifier></type><name pos:line="9" pos:column="21">path1<pos:position pos:line="9" pos:column="26"/></name> <init pos:line="9" pos:column="27">= <expr><name pos:line="9" pos:column="29">NULL<pos:position pos:line="9" pos:column="33"/></name></expr></init></decl>, <modifier pos:line="9" pos:column="35">*<pos:position pos:line="9" pos:column="36"/></modifier><decl><type ref="prev"/><name pos:line="9" pos:column="36">path2<pos:position pos:line="9" pos:column="41"/></name> <init pos:line="9" pos:column="42">= <expr><name pos:line="9" pos:column="44">NULL<pos:position pos:line="9" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="49"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="10" pos:column="9">struct<pos:position pos:line="10" pos:column="15"/></name> <name pos:line="10" pos:column="16">merge_file_info<pos:position pos:line="10" pos:column="31"/></name></name></type> <name pos:line="10" pos:column="32">mfi<pos:position pos:line="10" pos:column="35"/></name></decl>;<pos:position pos:line="10" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="11" pos:column="9">struct<pos:position pos:line="11" pos:column="15"/></name> <name pos:line="11" pos:column="16">diff_filespec<pos:position pos:line="11" pos:column="29"/></name></name></type> <name pos:line="11" pos:column="30">one<pos:position pos:line="11" pos:column="33"/></name></decl>, <decl><type ref="prev"/><name pos:line="11" pos:column="35">a<pos:position pos:line="11" pos:column="36"/></name></decl>, <decl><type ref="prev"/><name pos:line="11" pos:column="38">b<pos:position pos:line="11" pos:column="39"/></name></decl>;<pos:position pos:line="11" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">unsigned<pos:position pos:line="12" pos:column="17"/></name></type> <name pos:line="12" pos:column="18">df_conflict_remains<pos:position pos:line="12" pos:column="37"/></name> <init pos:line="12" pos:column="38">= <expr><literal type="number" pos:line="12" pos:column="40">0<pos:position pos:line="12" pos:column="41"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="42"/></decl_stmt>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">!<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="14">o_sha<pos:position pos:line="14" pos:column="19"/></name></expr>)<pos:position pos:line="14" pos:column="20"/></condition><then pos:line="14" pos:column="20"> <block pos:line="14" pos:column="21">{
		<expr_stmt><expr><name pos:line="15" pos:column="17">reason<pos:position pos:line="15" pos:column="23"/></name> <operator pos:line="15" pos:column="24">=<pos:position pos:line="15" pos:column="25"/></operator> <call><name pos:line="15" pos:column="26">_<pos:position pos:line="15" pos:column="27"/></name><argument_list pos:line="15" pos:column="27">(<argument><expr><literal type="string" pos:line="15" pos:column="28">"add/add"<pos:position pos:line="15" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><name pos:line="16" pos:column="17">o_sha<pos:position pos:line="16" pos:column="22"/></name> <operator pos:line="16" pos:column="23">=<pos:position pos:line="16" pos:column="24"/></operator> <operator pos:line="16" pos:column="25">(<pos:position pos:line="16" pos:column="26"/></operator><name pos:line="16" pos:column="26">unsigned<pos:position pos:line="16" pos:column="34"/></name> <name pos:line="16" pos:column="35">char<pos:position pos:line="16" pos:column="39"/></name> <operator pos:line="16" pos:column="40">*<pos:position pos:line="16" pos:column="41"/></operator><operator pos:line="16" pos:column="41">)<pos:position pos:line="16" pos:column="42"/></operator><name pos:line="16" pos:column="42">null_sha1<pos:position pos:line="16" pos:column="51"/></name></expr>;<pos:position pos:line="16" pos:column="52"/></expr_stmt>
	}<pos:position pos:line="17" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name><name pos:line="18" pos:column="9">one<pos:position pos:line="18" pos:column="12"/></name><operator pos:line="18" pos:column="12">.<pos:position pos:line="18" pos:column="13"/></operator><name pos:line="18" pos:column="13">path<pos:position pos:line="18" pos:column="17"/></name></name> <operator pos:line="18" pos:column="18">=<pos:position pos:line="18" pos:column="19"/></operator> <name><name pos:line="18" pos:column="20">a<pos:position pos:line="18" pos:column="21"/></name><operator pos:line="18" pos:column="21">.<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="22">path<pos:position pos:line="18" pos:column="26"/></name></name> <operator pos:line="18" pos:column="27">=<pos:position pos:line="18" pos:column="28"/></operator> <name><name pos:line="18" pos:column="29">b<pos:position pos:line="18" pos:column="30"/></name><operator pos:line="18" pos:column="30">.<pos:position pos:line="18" pos:column="31"/></operator><name pos:line="18" pos:column="31">path<pos:position pos:line="18" pos:column="35"/></name></name> <operator pos:line="18" pos:column="36">=<pos:position pos:line="18" pos:column="37"/></operator> <operator pos:line="18" pos:column="38">(<pos:position pos:line="18" pos:column="39"/></operator><name pos:line="18" pos:column="39">char<pos:position pos:line="18" pos:column="43"/></name> <operator pos:line="18" pos:column="44">*<pos:position pos:line="18" pos:column="45"/></operator><operator pos:line="18" pos:column="45">)<pos:position pos:line="18" pos:column="46"/></operator><name pos:line="18" pos:column="46">path<pos:position pos:line="18" pos:column="50"/></name></expr>;<pos:position pos:line="18" pos:column="51"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="19" pos:column="9">hashcpy<pos:position pos:line="19" pos:column="16"/></name><argument_list pos:line="19" pos:column="16">(<argument><expr><name><name pos:line="19" pos:column="17">one<pos:position pos:line="19" pos:column="20"/></name><operator pos:line="19" pos:column="20">.<pos:position pos:line="19" pos:column="21"/></operator><name pos:line="19" pos:column="21">sha1<pos:position pos:line="19" pos:column="25"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="27">o_sha<pos:position pos:line="19" pos:column="32"/></name></expr></argument>)<pos:position pos:line="19" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="20" pos:column="9">one<pos:position pos:line="20" pos:column="12"/></name><operator pos:line="20" pos:column="12">.<pos:position pos:line="20" pos:column="13"/></operator><name pos:line="20" pos:column="13">mode<pos:position pos:line="20" pos:column="17"/></name></name> <operator pos:line="20" pos:column="18">=<pos:position pos:line="20" pos:column="19"/></operator> <name pos:line="20" pos:column="20">o_mode<pos:position pos:line="20" pos:column="26"/></name></expr>;<pos:position pos:line="20" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="21" pos:column="9">hashcpy<pos:position pos:line="21" pos:column="16"/></name><argument_list pos:line="21" pos:column="16">(<argument><expr><name><name pos:line="21" pos:column="17">a<pos:position pos:line="21" pos:column="18"/></name><operator pos:line="21" pos:column="18">.<pos:position pos:line="21" pos:column="19"/></operator><name pos:line="21" pos:column="19">sha1<pos:position pos:line="21" pos:column="23"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="25">a_sha<pos:position pos:line="21" pos:column="30"/></name></expr></argument>)<pos:position pos:line="21" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="22" pos:column="9">a<pos:position pos:line="22" pos:column="10"/></name><operator pos:line="22" pos:column="10">.<pos:position pos:line="22" pos:column="11"/></operator><name pos:line="22" pos:column="11">mode<pos:position pos:line="22" pos:column="15"/></name></name> <operator pos:line="22" pos:column="16">=<pos:position pos:line="22" pos:column="17"/></operator> <name pos:line="22" pos:column="18">a_mode<pos:position pos:line="22" pos:column="24"/></name></expr>;<pos:position pos:line="22" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="23" pos:column="9">hashcpy<pos:position pos:line="23" pos:column="16"/></name><argument_list pos:line="23" pos:column="16">(<argument><expr><name><name pos:line="23" pos:column="17">b<pos:position pos:line="23" pos:column="18"/></name><operator pos:line="23" pos:column="18">.<pos:position pos:line="23" pos:column="19"/></operator><name pos:line="23" pos:column="19">sha1<pos:position pos:line="23" pos:column="23"/></name></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="25">b_sha<pos:position pos:line="23" pos:column="30"/></name></expr></argument>)<pos:position pos:line="23" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="24" pos:column="9">b<pos:position pos:line="24" pos:column="10"/></name><operator pos:line="24" pos:column="10">.<pos:position pos:line="24" pos:column="11"/></operator><name pos:line="24" pos:column="11">mode<pos:position pos:line="24" pos:column="15"/></name></name> <operator pos:line="24" pos:column="16">=<pos:position pos:line="24" pos:column="17"/></operator> <name pos:line="24" pos:column="18">b_mode<pos:position pos:line="24" pos:column="24"/></name></expr>;<pos:position pos:line="24" pos:column="25"/></expr_stmt>

	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name pos:line="26" pos:column="13">rename_conflict_info<pos:position pos:line="26" pos:column="33"/></name></expr>)<pos:position pos:line="26" pos:column="34"/></condition><then pos:line="26" pos:column="34"> <block pos:line="26" pos:column="35">{
		<decl_stmt><decl><type><name><name pos:line="27" pos:column="17">struct<pos:position pos:line="27" pos:column="23"/></name> <name pos:line="27" pos:column="24">diff_filepair<pos:position pos:line="27" pos:column="37"/></name></name> <modifier pos:line="27" pos:column="38">*<pos:position pos:line="27" pos:column="39"/></modifier></type><name pos:line="27" pos:column="39">pair1<pos:position pos:line="27" pos:column="44"/></name> <init pos:line="27" pos:column="45">= <expr><name><name pos:line="27" pos:column="47">rename_conflict_info<pos:position pos:line="27" pos:column="67"/></name><operator pos:line="27" pos:column="67">-&gt;<pos:position pos:line="27" pos:column="72"/></operator><name pos:line="27" pos:column="69">pair1<pos:position pos:line="27" pos:column="74"/></name></name></expr></init></decl>;<pos:position pos:line="27" pos:column="75"/></decl_stmt>

		<expr_stmt><expr><name pos:line="29" pos:column="17">path1<pos:position pos:line="29" pos:column="22"/></name> <operator pos:line="29" pos:column="23">=<pos:position pos:line="29" pos:column="24"/></operator> <ternary><condition><expr><operator pos:line="29" pos:column="25">(<pos:position pos:line="29" pos:column="26"/></operator><name><name pos:line="29" pos:column="26">o<pos:position pos:line="29" pos:column="27"/></name><operator pos:line="29" pos:column="27">-&gt;<pos:position pos:line="29" pos:column="32"/></operator><name pos:line="29" pos:column="29">branch1<pos:position pos:line="29" pos:column="36"/></name></name> <operator pos:line="29" pos:column="37">==<pos:position pos:line="29" pos:column="39"/></operator> <name><name pos:line="29" pos:column="40">rename_conflict_info<pos:position pos:line="29" pos:column="60"/></name><operator pos:line="29" pos:column="60">-&gt;<pos:position pos:line="29" pos:column="65"/></operator><name pos:line="29" pos:column="62">branch1<pos:position pos:line="29" pos:column="69"/></name></name><operator pos:line="29" pos:column="69">)<pos:position pos:line="29" pos:column="70"/></operator></expr> ?<pos:position pos:line="29" pos:column="72"/></condition><then pos:line="29" pos:column="72">
			<expr><name><name pos:line="30" pos:column="25">pair1<pos:position pos:line="30" pos:column="30"/></name><operator pos:line="30" pos:column="30">-&gt;<pos:position pos:line="30" pos:column="35"/></operator><name pos:line="30" pos:column="32">two<pos:position pos:line="30" pos:column="35"/></name><operator pos:line="30" pos:column="35">-&gt;<pos:position pos:line="30" pos:column="40"/></operator><name pos:line="30" pos:column="37">path<pos:position pos:line="30" pos:column="41"/></name></name></expr> <pos:position pos:line="30" pos:column="42"/></then><else pos:line="30" pos:column="42">: <expr><name><name pos:line="30" pos:column="44">pair1<pos:position pos:line="30" pos:column="49"/></name><operator pos:line="30" pos:column="49">-&gt;<pos:position pos:line="30" pos:column="54"/></operator><name pos:line="30" pos:column="51">one<pos:position pos:line="30" pos:column="54"/></name><operator pos:line="30" pos:column="54">-&gt;<pos:position pos:line="30" pos:column="59"/></operator><name pos:line="30" pos:column="56">path<pos:position pos:line="30" pos:column="60"/></name></name></expr></else></ternary></expr>;<pos:position pos:line="30" pos:column="61"/></expr_stmt>
		<comment type="block" pos:line="31" pos:column="17">/* If rename_conflict_info-&gt;pair2 != NULL, we are in
		 * RENAME_ONE_FILE_TO_ONE case.  Otherwise, we have a
		 * normal rename.
		 */</comment>
		<expr_stmt><expr><name pos:line="35" pos:column="17">path2<pos:position pos:line="35" pos:column="22"/></name> <operator pos:line="35" pos:column="23">=<pos:position pos:line="35" pos:column="24"/></operator> <ternary><condition><expr><operator pos:line="35" pos:column="25">(<pos:position pos:line="35" pos:column="26"/></operator><name><name pos:line="35" pos:column="26">rename_conflict_info<pos:position pos:line="35" pos:column="46"/></name><operator pos:line="35" pos:column="46">-&gt;<pos:position pos:line="35" pos:column="51"/></operator><name pos:line="35" pos:column="48">pair2<pos:position pos:line="35" pos:column="53"/></name></name> <operator pos:line="35" pos:column="54">||<pos:position pos:line="35" pos:column="56"/></operator>
			 <name><name pos:line="36" pos:column="26">o<pos:position pos:line="36" pos:column="27"/></name><operator pos:line="36" pos:column="27">-&gt;<pos:position pos:line="36" pos:column="32"/></operator><name pos:line="36" pos:column="29">branch2<pos:position pos:line="36" pos:column="36"/></name></name> <operator pos:line="36" pos:column="37">==<pos:position pos:line="36" pos:column="39"/></operator> <name><name pos:line="36" pos:column="40">rename_conflict_info<pos:position pos:line="36" pos:column="60"/></name><operator pos:line="36" pos:column="60">-&gt;<pos:position pos:line="36" pos:column="65"/></operator><name pos:line="36" pos:column="62">branch1<pos:position pos:line="36" pos:column="69"/></name></name><operator pos:line="36" pos:column="69">)<pos:position pos:line="36" pos:column="70"/></operator></expr> ?<pos:position pos:line="36" pos:column="72"/></condition><then pos:line="36" pos:column="72">
			<expr><name><name pos:line="37" pos:column="25">pair1<pos:position pos:line="37" pos:column="30"/></name><operator pos:line="37" pos:column="30">-&gt;<pos:position pos:line="37" pos:column="35"/></operator><name pos:line="37" pos:column="32">two<pos:position pos:line="37" pos:column="35"/></name><operator pos:line="37" pos:column="35">-&gt;<pos:position pos:line="37" pos:column="40"/></operator><name pos:line="37" pos:column="37">path<pos:position pos:line="37" pos:column="41"/></name></name></expr> <pos:position pos:line="37" pos:column="42"/></then><else pos:line="37" pos:column="42">: <expr><name><name pos:line="37" pos:column="44">pair1<pos:position pos:line="37" pos:column="49"/></name><operator pos:line="37" pos:column="49">-&gt;<pos:position pos:line="37" pos:column="54"/></operator><name pos:line="37" pos:column="51">one<pos:position pos:line="37" pos:column="54"/></name><operator pos:line="37" pos:column="54">-&gt;<pos:position pos:line="37" pos:column="59"/></operator><name pos:line="37" pos:column="56">path<pos:position pos:line="37" pos:column="60"/></name></name></expr></else></ternary></expr>;<pos:position pos:line="37" pos:column="61"/></expr_stmt>

		<if pos:line="39" pos:column="17">if <condition pos:line="39" pos:column="20">(<expr><call><name pos:line="39" pos:column="21">dir_in_way<pos:position pos:line="39" pos:column="31"/></name><argument_list pos:line="39" pos:column="31">(<argument><expr><name pos:line="39" pos:column="32">path<pos:position pos:line="39" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="38">!<pos:position pos:line="39" pos:column="39"/></operator><name><name pos:line="39" pos:column="39">o<pos:position pos:line="39" pos:column="40"/></name><operator pos:line="39" pos:column="40">-&gt;<pos:position pos:line="39" pos:column="45"/></operator><name pos:line="39" pos:column="42">call_depth<pos:position pos:line="39" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="54"/></condition><then pos:line="39" pos:column="54">
			<block type="pseudo"><expr_stmt><expr><name pos:line="40" pos:column="25">df_conflict_remains<pos:position pos:line="40" pos:column="44"/></name> <operator pos:line="40" pos:column="45">=<pos:position pos:line="40" pos:column="46"/></operator> <literal type="number" pos:line="40" pos:column="47">1<pos:position pos:line="40" pos:column="48"/></literal></expr>;<pos:position pos:line="40" pos:column="49"/></expr_stmt></block></then></if>
	}<pos:position pos:line="41" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="42" pos:column="9">mfi<pos:position pos:line="42" pos:column="12"/></name> <operator pos:line="42" pos:column="13">=<pos:position pos:line="42" pos:column="14"/></operator> <call><name pos:line="42" pos:column="15">merge_file_special_markers<pos:position pos:line="42" pos:column="41"/></name><argument_list pos:line="42" pos:column="41">(<argument><expr><name pos:line="42" pos:column="42">o<pos:position pos:line="42" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="45">&amp;<pos:position pos:line="42" pos:column="50"/></operator><name pos:line="42" pos:column="46">one<pos:position pos:line="42" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="51">&amp;<pos:position pos:line="42" pos:column="56"/></operator><name pos:line="42" pos:column="52">a<pos:position pos:line="42" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="55">&amp;<pos:position pos:line="42" pos:column="60"/></operator><name pos:line="42" pos:column="56">b<pos:position pos:line="42" pos:column="57"/></name></expr></argument>,
					 <argument><expr><name><name pos:line="43" pos:column="42">o<pos:position pos:line="43" pos:column="43"/></name><operator pos:line="43" pos:column="43">-&gt;<pos:position pos:line="43" pos:column="48"/></operator><name pos:line="43" pos:column="45">branch1<pos:position pos:line="43" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="54">path1<pos:position pos:line="43" pos:column="59"/></name></expr></argument>,
					 <argument><expr><name><name pos:line="44" pos:column="42">o<pos:position pos:line="44" pos:column="43"/></name><operator pos:line="44" pos:column="43">-&gt;<pos:position pos:line="44" pos:column="48"/></operator><name pos:line="44" pos:column="45">branch2<pos:position pos:line="44" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="54">path2<pos:position pos:line="44" pos:column="59"/></name></expr></argument>)<pos:position pos:line="44" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="61"/></expr_stmt>

	<if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><name><name pos:line="46" pos:column="13">mfi<pos:position pos:line="46" pos:column="16"/></name><operator pos:line="46" pos:column="16">.<pos:position pos:line="46" pos:column="17"/></operator><name pos:line="46" pos:column="17">clean<pos:position pos:line="46" pos:column="22"/></name></name> <operator pos:line="46" pos:column="23">&amp;&amp;<pos:position pos:line="46" pos:column="33"/></operator> <operator pos:line="46" pos:column="26">!<pos:position pos:line="46" pos:column="27"/></operator><name pos:line="46" pos:column="27">df_conflict_remains<pos:position pos:line="46" pos:column="46"/></name> <operator pos:line="46" pos:column="47">&amp;&amp;<pos:position pos:line="46" pos:column="57"/></operator>
	    <call><name pos:line="47" pos:column="13">sha_eq<pos:position pos:line="47" pos:column="19"/></name><argument_list pos:line="47" pos:column="19">(<argument><expr><name><name pos:line="47" pos:column="20">mfi<pos:position pos:line="47" pos:column="23"/></name><operator pos:line="47" pos:column="23">.<pos:position pos:line="47" pos:column="24"/></operator><name pos:line="47" pos:column="24">sha<pos:position pos:line="47" pos:column="27"/></name></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="29">a_sha<pos:position pos:line="47" pos:column="34"/></name></expr></argument>)<pos:position pos:line="47" pos:column="35"/></argument_list></call> <operator pos:line="47" pos:column="36">&amp;&amp;<pos:position pos:line="47" pos:column="46"/></operator> <name><name pos:line="47" pos:column="39">mfi<pos:position pos:line="47" pos:column="42"/></name><operator pos:line="47" pos:column="42">.<pos:position pos:line="47" pos:column="43"/></operator><name pos:line="47" pos:column="43">mode<pos:position pos:line="47" pos:column="47"/></name></name> <operator pos:line="47" pos:column="48">==<pos:position pos:line="47" pos:column="50"/></operator> <name pos:line="47" pos:column="51">a_mode<pos:position pos:line="47" pos:column="57"/></name></expr>)<pos:position pos:line="47" pos:column="58"/></condition><then pos:line="47" pos:column="58"> <block pos:line="47" pos:column="59">{
		<decl_stmt><decl><type><name pos:line="48" pos:column="17">int<pos:position pos:line="48" pos:column="20"/></name></type> <name pos:line="48" pos:column="21">path_renamed_outside_HEAD<pos:position pos:line="48" pos:column="46"/></name></decl>;<pos:position pos:line="48" pos:column="47"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="49" pos:column="17">output<pos:position pos:line="49" pos:column="23"/></name><argument_list pos:line="49" pos:column="23">(<argument><expr><name pos:line="49" pos:column="24">o<pos:position pos:line="49" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="49" pos:column="27">3<pos:position pos:line="49" pos:column="28"/></literal></expr></argument>, <argument><expr><call><name pos:line="49" pos:column="30">_<pos:position pos:line="49" pos:column="31"/></name><argument_list pos:line="49" pos:column="31">(<argument><expr><literal type="string" pos:line="49" pos:column="32">"Skipped %s (merged same as existing)"<pos:position pos:line="49" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="71"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="49" pos:column="73">path<pos:position pos:line="49" pos:column="77"/></name></expr></argument>)<pos:position pos:line="49" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="79"/></expr_stmt>
		<comment type="block" pos:line="50" pos:column="17">/*
		 * The content merge resulted in the same file contents we
		 * already had.  We can return early if those file contents
		 * are recorded at the correct path (which may not be true
		 * if the merge involves a rename).
		 */</comment>
		<expr_stmt><expr><name pos:line="56" pos:column="17">path_renamed_outside_HEAD<pos:position pos:line="56" pos:column="42"/></name> <operator pos:line="56" pos:column="43">=<pos:position pos:line="56" pos:column="44"/></operator> <operator pos:line="56" pos:column="45">!<pos:position pos:line="56" pos:column="46"/></operator><name pos:line="56" pos:column="46">path2<pos:position pos:line="56" pos:column="51"/></name> <operator pos:line="56" pos:column="52">||<pos:position pos:line="56" pos:column="54"/></operator> <operator pos:line="56" pos:column="55">!<pos:position pos:line="56" pos:column="56"/></operator><call><name pos:line="56" pos:column="56">strcmp<pos:position pos:line="56" pos:column="62"/></name><argument_list pos:line="56" pos:column="62">(<argument><expr><name pos:line="56" pos:column="63">path<pos:position pos:line="56" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="69">path2<pos:position pos:line="56" pos:column="74"/></name></expr></argument>)<pos:position pos:line="56" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="76"/></expr_stmt>
		<if pos:line="57" pos:column="17">if <condition pos:line="57" pos:column="20">(<expr><operator pos:line="57" pos:column="21">!<pos:position pos:line="57" pos:column="22"/></operator><name pos:line="57" pos:column="22">path_renamed_outside_HEAD<pos:position pos:line="57" pos:column="47"/></name></expr>)<pos:position pos:line="57" pos:column="48"/></condition><then pos:line="57" pos:column="48"> <block pos:line="57" pos:column="49">{
			<expr_stmt><expr><call><name pos:line="58" pos:column="25">add_cacheinfo<pos:position pos:line="58" pos:column="38"/></name><argument_list pos:line="58" pos:column="38">(<argument><expr><name><name pos:line="58" pos:column="39">mfi<pos:position pos:line="58" pos:column="42"/></name><operator pos:line="58" pos:column="42">.<pos:position pos:line="58" pos:column="43"/></operator><name pos:line="58" pos:column="43">mode<pos:position pos:line="58" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="49">mfi<pos:position pos:line="58" pos:column="52"/></name><operator pos:line="58" pos:column="52">.<pos:position pos:line="58" pos:column="53"/></operator><name pos:line="58" pos:column="53">sha<pos:position pos:line="58" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="58">path<pos:position pos:line="58" pos:column="62"/></name></expr></argument>,
				      <argument><expr><literal type="number" pos:line="59" pos:column="39">0<pos:position pos:line="59" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="59" pos:column="42">(<pos:position pos:line="59" pos:column="43"/></operator><operator pos:line="59" pos:column="43">!<pos:position pos:line="59" pos:column="44"/></operator><name><name pos:line="59" pos:column="44">o<pos:position pos:line="59" pos:column="45"/></name><operator pos:line="59" pos:column="45">-&gt;<pos:position pos:line="59" pos:column="50"/></operator><name pos:line="59" pos:column="47">call_depth<pos:position pos:line="59" pos:column="57"/></name></name><operator pos:line="59" pos:column="57">)<pos:position pos:line="59" pos:column="58"/></operator></expr></argument>, <argument><expr><literal type="number" pos:line="59" pos:column="60">0<pos:position pos:line="59" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="63"/></expr_stmt>
			<return pos:line="60" pos:column="25">return <expr><name><name pos:line="60" pos:column="32">mfi<pos:position pos:line="60" pos:column="35"/></name><operator pos:line="60" pos:column="35">.<pos:position pos:line="60" pos:column="36"/></operator><name pos:line="60" pos:column="36">clean<pos:position pos:line="60" pos:column="41"/></name></name></expr>;<pos:position pos:line="60" pos:column="42"/></return>
		}<pos:position pos:line="61" pos:column="18"/></block></then></if>
	}<pos:position pos:line="62" pos:column="10"/></block></then> <else pos:line="62" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="63" pos:column="17">output<pos:position pos:line="63" pos:column="23"/></name><argument_list pos:line="63" pos:column="23">(<argument><expr><name pos:line="63" pos:column="24">o<pos:position pos:line="63" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="63" pos:column="27">2<pos:position pos:line="63" pos:column="28"/></literal></expr></argument>, <argument><expr><call><name pos:line="63" pos:column="30">_<pos:position pos:line="63" pos:column="31"/></name><argument_list pos:line="63" pos:column="31">(<argument><expr><literal type="string" pos:line="63" pos:column="32">"Auto-merging %s"<pos:position pos:line="63" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="50"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="63" pos:column="52">path<pos:position pos:line="63" pos:column="56"/></name></expr></argument>)<pos:position pos:line="63" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="58"/></expr_stmt></block></else></if>

	<if pos:line="65" pos:column="9">if <condition pos:line="65" pos:column="12">(<expr><operator pos:line="65" pos:column="13">!<pos:position pos:line="65" pos:column="14"/></operator><name><name pos:line="65" pos:column="14">mfi<pos:position pos:line="65" pos:column="17"/></name><operator pos:line="65" pos:column="17">.<pos:position pos:line="65" pos:column="18"/></operator><name pos:line="65" pos:column="18">clean<pos:position pos:line="65" pos:column="23"/></name></name></expr>)<pos:position pos:line="65" pos:column="24"/></condition><then pos:line="65" pos:column="24"> <block pos:line="65" pos:column="25">{
		<if pos:line="66" pos:column="17">if <condition pos:line="66" pos:column="20">(<expr><call><name pos:line="66" pos:column="21">S_ISGITLINK<pos:position pos:line="66" pos:column="32"/></name><argument_list pos:line="66" pos:column="32">(<argument><expr><name><name pos:line="66" pos:column="33">mfi<pos:position pos:line="66" pos:column="36"/></name><operator pos:line="66" pos:column="36">.<pos:position pos:line="66" pos:column="37"/></operator><name pos:line="66" pos:column="37">mode<pos:position pos:line="66" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="66" pos:column="43"/></condition><then pos:line="66" pos:column="43">
			<block type="pseudo"><expr_stmt><expr><name pos:line="67" pos:column="25">reason<pos:position pos:line="67" pos:column="31"/></name> <operator pos:line="67" pos:column="32">=<pos:position pos:line="67" pos:column="33"/></operator> <call><name pos:line="67" pos:column="34">_<pos:position pos:line="67" pos:column="35"/></name><argument_list pos:line="67" pos:column="35">(<argument><expr><literal type="string" pos:line="67" pos:column="36">"submodule"<pos:position pos:line="67" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="49"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="68" pos:column="17">output<pos:position pos:line="68" pos:column="23"/></name><argument_list pos:line="68" pos:column="23">(<argument><expr><name pos:line="68" pos:column="24">o<pos:position pos:line="68" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="68" pos:column="27">1<pos:position pos:line="68" pos:column="28"/></literal></expr></argument>, <argument><expr><call><name pos:line="68" pos:column="30">_<pos:position pos:line="68" pos:column="31"/></name><argument_list pos:line="68" pos:column="31">(<argument><expr><literal type="string" pos:line="68" pos:column="32">"CONFLICT (%s): Merge conflict in %s"<pos:position pos:line="68" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="70"/></argument_list></call></expr></argument>,
				<argument><expr><name pos:line="69" pos:column="33">reason<pos:position pos:line="69" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="41">path<pos:position pos:line="69" pos:column="45"/></name></expr></argument>)<pos:position pos:line="69" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="47"/></expr_stmt>
		<if pos:line="70" pos:column="17">if <condition pos:line="70" pos:column="20">(<expr><name pos:line="70" pos:column="21">rename_conflict_info<pos:position pos:line="70" pos:column="41"/></name> <operator pos:line="70" pos:column="42">&amp;&amp;<pos:position pos:line="70" pos:column="52"/></operator> <operator pos:line="70" pos:column="45">!<pos:position pos:line="70" pos:column="46"/></operator><name pos:line="70" pos:column="46">df_conflict_remains<pos:position pos:line="70" pos:column="65"/></name></expr>)<pos:position pos:line="70" pos:column="66"/></condition><then pos:line="70" pos:column="66">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="71" pos:column="25">update_stages<pos:position pos:line="71" pos:column="38"/></name><argument_list pos:line="71" pos:column="38">(<argument><expr><name pos:line="71" pos:column="39">path<pos:position pos:line="71" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="71" pos:column="45">&amp;<pos:position pos:line="71" pos:column="50"/></operator><name pos:line="71" pos:column="46">one<pos:position pos:line="71" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="71" pos:column="51">&amp;<pos:position pos:line="71" pos:column="56"/></operator><name pos:line="71" pos:column="52">a<pos:position pos:line="71" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="71" pos:column="55">&amp;<pos:position pos:line="71" pos:column="60"/></operator><name pos:line="71" pos:column="56">b<pos:position pos:line="71" pos:column="57"/></name></expr></argument>)<pos:position pos:line="71" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="59"/></expr_stmt></block></then></if>
	}<pos:position pos:line="72" pos:column="10"/></block></then></if>

	<if pos:line="74" pos:column="9">if <condition pos:line="74" pos:column="12">(<expr><name pos:line="74" pos:column="13">df_conflict_remains<pos:position pos:line="74" pos:column="32"/></name></expr>)<pos:position pos:line="74" pos:column="33"/></condition><then pos:line="74" pos:column="33"> <block pos:line="74" pos:column="34">{
		<decl_stmt><decl><type><name pos:line="75" pos:column="17">char<pos:position pos:line="75" pos:column="21"/></name> <modifier pos:line="75" pos:column="22">*<pos:position pos:line="75" pos:column="23"/></modifier></type><name pos:line="75" pos:column="23">new_path<pos:position pos:line="75" pos:column="31"/></name></decl>;<pos:position pos:line="75" pos:column="32"/></decl_stmt>
		<if pos:line="76" pos:column="17">if <condition pos:line="76" pos:column="20">(<expr><name><name pos:line="76" pos:column="21">o<pos:position pos:line="76" pos:column="22"/></name><operator pos:line="76" pos:column="22">-&gt;<pos:position pos:line="76" pos:column="27"/></operator><name pos:line="76" pos:column="24">call_depth<pos:position pos:line="76" pos:column="34"/></name></name></expr>)<pos:position pos:line="76" pos:column="35"/></condition><then pos:line="76" pos:column="35"> <block pos:line="76" pos:column="36">{
			<expr_stmt><expr><call><name pos:line="77" pos:column="25">remove_file_from_cache<pos:position pos:line="77" pos:column="47"/></name><argument_list pos:line="77" pos:column="47">(<argument><expr><name pos:line="77" pos:column="48">path<pos:position pos:line="77" pos:column="52"/></name></expr></argument>)<pos:position pos:line="77" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="54"/></expr_stmt>
		}<pos:position pos:line="78" pos:column="18"/></block></then> <else pos:line="78" pos:column="19">else <block pos:line="78" pos:column="24">{
			<if pos:line="79" pos:column="25">if <condition pos:line="79" pos:column="28">(<expr><operator pos:line="79" pos:column="29">!<pos:position pos:line="79" pos:column="30"/></operator><name><name pos:line="79" pos:column="30">mfi<pos:position pos:line="79" pos:column="33"/></name><operator pos:line="79" pos:column="33">.<pos:position pos:line="79" pos:column="34"/></operator><name pos:line="79" pos:column="34">clean<pos:position pos:line="79" pos:column="39"/></name></name></expr>)<pos:position pos:line="79" pos:column="40"/></condition><then pos:line="79" pos:column="40">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="80" pos:column="33">update_stages<pos:position pos:line="80" pos:column="46"/></name><argument_list pos:line="80" pos:column="46">(<argument><expr><name pos:line="80" pos:column="47">path<pos:position pos:line="80" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="80" pos:column="53">&amp;<pos:position pos:line="80" pos:column="58"/></operator><name pos:line="80" pos:column="54">one<pos:position pos:line="80" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="80" pos:column="59">&amp;<pos:position pos:line="80" pos:column="64"/></operator><name pos:line="80" pos:column="60">a<pos:position pos:line="80" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="80" pos:column="63">&amp;<pos:position pos:line="80" pos:column="68"/></operator><name pos:line="80" pos:column="64">b<pos:position pos:line="80" pos:column="65"/></name></expr></argument>)<pos:position pos:line="80" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="67"/></expr_stmt></block></then>
			<else pos:line="81" pos:column="25">else <block pos:line="81" pos:column="30">{
				<decl_stmt><decl><type><name pos:line="82" pos:column="33">int<pos:position pos:line="82" pos:column="36"/></name></type> <name pos:line="82" pos:column="37">file_from_stage2<pos:position pos:line="82" pos:column="53"/></name> <init pos:line="82" pos:column="54">= <expr><call><name pos:line="82" pos:column="56">was_tracked<pos:position pos:line="82" pos:column="67"/></name><argument_list pos:line="82" pos:column="67">(<argument><expr><name pos:line="82" pos:column="68">path<pos:position pos:line="82" pos:column="72"/></name></expr></argument>)<pos:position pos:line="82" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="82" pos:column="74"/></decl_stmt>
				<decl_stmt><decl><type><name><name pos:line="83" pos:column="33">struct<pos:position pos:line="83" pos:column="39"/></name> <name pos:line="83" pos:column="40">diff_filespec<pos:position pos:line="83" pos:column="53"/></name></name></type> <name pos:line="83" pos:column="54">merged<pos:position pos:line="83" pos:column="60"/></name></decl>;<pos:position pos:line="83" pos:column="61"/></decl_stmt>
				<expr_stmt><expr><call><name pos:line="84" pos:column="33">hashcpy<pos:position pos:line="84" pos:column="40"/></name><argument_list pos:line="84" pos:column="40">(<argument><expr><name><name pos:line="84" pos:column="41">merged<pos:position pos:line="84" pos:column="47"/></name><operator pos:line="84" pos:column="47">.<pos:position pos:line="84" pos:column="48"/></operator><name pos:line="84" pos:column="48">sha1<pos:position pos:line="84" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="84" pos:column="54">mfi<pos:position pos:line="84" pos:column="57"/></name><operator pos:line="84" pos:column="57">.<pos:position pos:line="84" pos:column="58"/></operator><name pos:line="84" pos:column="58">sha<pos:position pos:line="84" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="84" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="63"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="85" pos:column="33">merged<pos:position pos:line="85" pos:column="39"/></name><operator pos:line="85" pos:column="39">.<pos:position pos:line="85" pos:column="40"/></operator><name pos:line="85" pos:column="40">mode<pos:position pos:line="85" pos:column="44"/></name></name> <operator pos:line="85" pos:column="45">=<pos:position pos:line="85" pos:column="46"/></operator> <name><name pos:line="85" pos:column="47">mfi<pos:position pos:line="85" pos:column="50"/></name><operator pos:line="85" pos:column="50">.<pos:position pos:line="85" pos:column="51"/></operator><name pos:line="85" pos:column="51">mode<pos:position pos:line="85" pos:column="55"/></name></name></expr>;<pos:position pos:line="85" pos:column="56"/></expr_stmt>

				<expr_stmt><expr><call><name pos:line="87" pos:column="33">update_stages<pos:position pos:line="87" pos:column="46"/></name><argument_list pos:line="87" pos:column="46">(<argument><expr><name pos:line="87" pos:column="47">path<pos:position pos:line="87" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="53">NULL<pos:position pos:line="87" pos:column="57"/></name></expr></argument>,
					      <argument><expr><ternary><condition><expr><name pos:line="88" pos:column="47">file_from_stage2<pos:position pos:line="88" pos:column="63"/></name></expr> ?<pos:position pos:line="88" pos:column="65"/></condition><then pos:line="88" pos:column="65"> <expr><operator pos:line="88" pos:column="66">&amp;<pos:position pos:line="88" pos:column="71"/></operator><name pos:line="88" pos:column="67">merged<pos:position pos:line="88" pos:column="73"/></name></expr> <pos:position pos:line="88" pos:column="74"/></then><else pos:line="88" pos:column="74">: <expr><name pos:line="88" pos:column="76">NULL<pos:position pos:line="88" pos:column="80"/></name></expr></else></ternary></expr></argument>,
					      <argument><expr><ternary><condition><expr><name pos:line="89" pos:column="47">file_from_stage2<pos:position pos:line="89" pos:column="63"/></name></expr> ?<pos:position pos:line="89" pos:column="65"/></condition><then pos:line="89" pos:column="65"> <expr><name pos:line="89" pos:column="66">NULL<pos:position pos:line="89" pos:column="70"/></name></expr> <pos:position pos:line="89" pos:column="71"/></then><else pos:line="89" pos:column="71">: <expr><operator pos:line="89" pos:column="73">&amp;<pos:position pos:line="89" pos:column="78"/></operator><name pos:line="89" pos:column="74">merged<pos:position pos:line="89" pos:column="80"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="89" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="82"/></expr_stmt>
			}<pos:position pos:line="90" pos:column="26"/></block></else></if>

		}<pos:position pos:line="92" pos:column="18"/></block></else></if>
		<expr_stmt><expr><name pos:line="93" pos:column="17">new_path<pos:position pos:line="93" pos:column="25"/></name> <operator pos:line="93" pos:column="26">=<pos:position pos:line="93" pos:column="27"/></operator> <call><name pos:line="93" pos:column="28">unique_path<pos:position pos:line="93" pos:column="39"/></name><argument_list pos:line="93" pos:column="39">(<argument><expr><name pos:line="93" pos:column="40">o<pos:position pos:line="93" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="43">path<pos:position pos:line="93" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="93" pos:column="49">rename_conflict_info<pos:position pos:line="93" pos:column="69"/></name><operator pos:line="93" pos:column="69">-&gt;<pos:position pos:line="93" pos:column="74"/></operator><name pos:line="93" pos:column="71">branch1<pos:position pos:line="93" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="93" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="80"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="94" pos:column="17">output<pos:position pos:line="94" pos:column="23"/></name><argument_list pos:line="94" pos:column="23">(<argument><expr><name pos:line="94" pos:column="24">o<pos:position pos:line="94" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="94" pos:column="27">1<pos:position pos:line="94" pos:column="28"/></literal></expr></argument>, <argument><expr><call><name pos:line="94" pos:column="30">_<pos:position pos:line="94" pos:column="31"/></name><argument_list pos:line="94" pos:column="31">(<argument><expr><literal type="string" pos:line="94" pos:column="32">"Adding as %s instead"<pos:position pos:line="94" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="94" pos:column="55"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="94" pos:column="57">new_path<pos:position pos:line="94" pos:column="65"/></name></expr></argument>)<pos:position pos:line="94" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="67"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="95" pos:column="17">update_file<pos:position pos:line="95" pos:column="28"/></name><argument_list pos:line="95" pos:column="28">(<argument><expr><name pos:line="95" pos:column="29">o<pos:position pos:line="95" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="95" pos:column="32">0<pos:position pos:line="95" pos:column="33"/></literal></expr></argument>, <argument><expr><name><name pos:line="95" pos:column="35">mfi<pos:position pos:line="95" pos:column="38"/></name><operator pos:line="95" pos:column="38">.<pos:position pos:line="95" pos:column="39"/></operator><name pos:line="95" pos:column="39">sha<pos:position pos:line="95" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="95" pos:column="44">mfi<pos:position pos:line="95" pos:column="47"/></name><operator pos:line="95" pos:column="47">.<pos:position pos:line="95" pos:column="48"/></operator><name pos:line="95" pos:column="48">mode<pos:position pos:line="95" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="54">new_path<pos:position pos:line="95" pos:column="62"/></name></expr></argument>)<pos:position pos:line="95" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="64"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="96" pos:column="17">free<pos:position pos:line="96" pos:column="21"/></name><argument_list pos:line="96" pos:column="21">(<argument><expr><name pos:line="96" pos:column="22">new_path<pos:position pos:line="96" pos:column="30"/></name></expr></argument>)<pos:position pos:line="96" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="97" pos:column="17">mfi<pos:position pos:line="97" pos:column="20"/></name><operator pos:line="97" pos:column="20">.<pos:position pos:line="97" pos:column="21"/></operator><name pos:line="97" pos:column="21">clean<pos:position pos:line="97" pos:column="26"/></name></name> <operator pos:line="97" pos:column="27">=<pos:position pos:line="97" pos:column="28"/></operator> <literal type="number" pos:line="97" pos:column="29">0<pos:position pos:line="97" pos:column="30"/></literal></expr>;<pos:position pos:line="97" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="98" pos:column="10"/></block></then> <else pos:line="98" pos:column="11">else <block pos:line="98" pos:column="16">{
		<expr_stmt><expr><call><name pos:line="99" pos:column="17">update_file<pos:position pos:line="99" pos:column="28"/></name><argument_list pos:line="99" pos:column="28">(<argument><expr><name pos:line="99" pos:column="29">o<pos:position pos:line="99" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="99" pos:column="32">mfi<pos:position pos:line="99" pos:column="35"/></name><operator pos:line="99" pos:column="35">.<pos:position pos:line="99" pos:column="36"/></operator><name pos:line="99" pos:column="36">clean<pos:position pos:line="99" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="99" pos:column="43">mfi<pos:position pos:line="99" pos:column="46"/></name><operator pos:line="99" pos:column="46">.<pos:position pos:line="99" pos:column="47"/></operator><name pos:line="99" pos:column="47">sha<pos:position pos:line="99" pos:column="50"/></name></name></expr></argument>, <argument><expr><name><name pos:line="99" pos:column="52">mfi<pos:position pos:line="99" pos:column="55"/></name><operator pos:line="99" pos:column="55">.<pos:position pos:line="99" pos:column="56"/></operator><name pos:line="99" pos:column="56">mode<pos:position pos:line="99" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="62">path<pos:position pos:line="99" pos:column="66"/></name></expr></argument>)<pos:position pos:line="99" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="68"/></expr_stmt>
	}<pos:position pos:line="100" pos:column="10"/></block></else></if>
	<return pos:line="101" pos:column="9">return <expr><name><name pos:line="101" pos:column="16">mfi<pos:position pos:line="101" pos:column="19"/></name><operator pos:line="101" pos:column="19">.<pos:position pos:line="101" pos:column="20"/></operator><name pos:line="101" pos:column="20">clean<pos:position pos:line="101" pos:column="25"/></name></name></expr>;<pos:position pos:line="101" pos:column="26"/></return>

}<pos:position pos:line="103" pos:column="2"/></block></function></unit>

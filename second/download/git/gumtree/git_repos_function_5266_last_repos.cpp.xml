<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5266_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">adjust_comment_line_char<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><specifier pos:line="1" pos:column="38">const<pos:position pos:line="1" pos:column="43"/></specifier> <name><name pos:line="1" pos:column="44">struct<pos:position pos:line="1" pos:column="50"/></name> <name pos:line="1" pos:column="51">strbuf<pos:position pos:line="1" pos:column="57"/></name></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">sb<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name></type> <name><name pos:line="3" pos:column="14">candidates<pos:position pos:line="3" pos:column="24"/></name><index pos:line="3" pos:column="24">[]<pos:position pos:line="3" pos:column="26"/></index></name> <init pos:line="3" pos:column="27">= <expr><literal type="string" pos:line="3" pos:column="29">"#;@!$%^&amp;|:"<pos:position pos:line="3" pos:column="45"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">candidate<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">p<pos:position pos:line="5" pos:column="22"/></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>

	<expr_stmt><expr><name pos:line="7" pos:column="9">comment_line_char<pos:position pos:line="7" pos:column="26"/></name> <operator pos:line="7" pos:column="27">=<pos:position pos:line="7" pos:column="28"/></operator> <name><name pos:line="7" pos:column="29">candidates<pos:position pos:line="7" pos:column="39"/></name><index pos:line="7" pos:column="39">[<expr><literal type="number" pos:line="7" pos:column="40">0<pos:position pos:line="7" pos:column="41"/></literal></expr>]<pos:position pos:line="7" pos:column="42"/></index></name></expr>;<pos:position pos:line="7" pos:column="43"/></expr_stmt>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">!<pos:position pos:line="8" pos:column="14"/></operator><call><name pos:line="8" pos:column="14">memchr<pos:position pos:line="8" pos:column="20"/></name><argument_list pos:line="8" pos:column="20">(<argument><expr><name><name pos:line="8" pos:column="21">sb<pos:position pos:line="8" pos:column="23"/></name><operator pos:line="8" pos:column="23">-&gt;<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="25">buf<pos:position pos:line="8" pos:column="28"/></name></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="30">comment_line_char<pos:position pos:line="8" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="49">sb<pos:position pos:line="8" pos:column="51"/></name><operator pos:line="8" pos:column="51">-&gt;<pos:position pos:line="8" pos:column="56"/></operator><name pos:line="8" pos:column="53">len<pos:position pos:line="8" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="58"/></condition><then pos:line="8" pos:column="58">
		<block type="pseudo"><return pos:line="9" pos:column="17">return;<pos:position pos:line="9" pos:column="24"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="11" pos:column="9">p<pos:position pos:line="11" pos:column="10"/></name> <operator pos:line="11" pos:column="11">=<pos:position pos:line="11" pos:column="12"/></operator> <name><name pos:line="11" pos:column="13">sb<pos:position pos:line="11" pos:column="15"/></name><operator pos:line="11" pos:column="15">-&gt;<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="17">buf<pos:position pos:line="11" pos:column="20"/></name></name></expr>;<pos:position pos:line="11" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><name pos:line="12" pos:column="9">candidate<pos:position pos:line="12" pos:column="18"/></name> <operator pos:line="12" pos:column="19">=<pos:position pos:line="12" pos:column="20"/></operator> <call><name pos:line="12" pos:column="21">strchr<pos:position pos:line="12" pos:column="27"/></name><argument_list pos:line="12" pos:column="27">(<argument><expr><name pos:line="12" pos:column="28">candidates<pos:position pos:line="12" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="40">*<pos:position pos:line="12" pos:column="41"/></operator><name pos:line="12" pos:column="41">p<pos:position pos:line="12" pos:column="42"/></name></expr></argument>)<pos:position pos:line="12" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="44"/></expr_stmt>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">candidate<pos:position pos:line="13" pos:column="22"/></name></expr>)<pos:position pos:line="13" pos:column="23"/></condition><then pos:line="13" pos:column="23">
		<block type="pseudo"><expr_stmt><expr><operator pos:line="14" pos:column="17">*<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="18">candidate<pos:position pos:line="14" pos:column="27"/></name> <operator pos:line="14" pos:column="28">=<pos:position pos:line="14" pos:column="29"/></operator> <literal type="char" pos:line="14" pos:column="30">' '<pos:position pos:line="14" pos:column="33"/></literal></expr>;<pos:position pos:line="14" pos:column="34"/></expr_stmt></block></then></if>
	<for pos:line="15" pos:column="9">for <control pos:line="15" pos:column="13">(<init><expr><name pos:line="15" pos:column="14">p<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <name><name pos:line="15" pos:column="18">sb<pos:position pos:line="15" pos:column="20"/></name><operator pos:line="15" pos:column="20">-&gt;<pos:position pos:line="15" pos:column="25"/></operator><name pos:line="15" pos:column="22">buf<pos:position pos:line="15" pos:column="25"/></name></name></expr>;<pos:position pos:line="15" pos:column="26"/></init> <condition><expr><operator pos:line="15" pos:column="27">*<pos:position pos:line="15" pos:column="28"/></operator><name pos:line="15" pos:column="28">p<pos:position pos:line="15" pos:column="29"/></name></expr>;<pos:position pos:line="15" pos:column="30"/></condition> <incr><expr><name pos:line="15" pos:column="31">p<pos:position pos:line="15" pos:column="32"/></name><operator pos:line="15" pos:column="32">++<pos:position pos:line="15" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="15" pos:column="35"/></control> <block pos:line="15" pos:column="36">{
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><operator pos:line="16" pos:column="21">(<pos:position pos:line="16" pos:column="22"/></operator><name><name pos:line="16" pos:column="22">p<pos:position pos:line="16" pos:column="23"/></name><index pos:line="16" pos:column="23">[<expr><literal type="number" pos:line="16" pos:column="24">0<pos:position pos:line="16" pos:column="25"/></literal></expr>]<pos:position pos:line="16" pos:column="26"/></index></name> <operator pos:line="16" pos:column="27">==<pos:position pos:line="16" pos:column="29"/></operator> <literal type="char" pos:line="16" pos:column="30">'\n'<pos:position pos:line="16" pos:column="34"/></literal> <operator pos:line="16" pos:column="35">||<pos:position pos:line="16" pos:column="37"/></operator> <name><name pos:line="16" pos:column="38">p<pos:position pos:line="16" pos:column="39"/></name><index pos:line="16" pos:column="39">[<expr><literal type="number" pos:line="16" pos:column="40">0<pos:position pos:line="16" pos:column="41"/></literal></expr>]<pos:position pos:line="16" pos:column="42"/></index></name> <operator pos:line="16" pos:column="43">==<pos:position pos:line="16" pos:column="45"/></operator> <literal type="char" pos:line="16" pos:column="46">'\r'<pos:position pos:line="16" pos:column="50"/></literal><operator pos:line="16" pos:column="50">)<pos:position pos:line="16" pos:column="51"/></operator> <operator pos:line="16" pos:column="52">&amp;&amp;<pos:position pos:line="16" pos:column="62"/></operator> <name><name pos:line="16" pos:column="55">p<pos:position pos:line="16" pos:column="56"/></name><index pos:line="16" pos:column="56">[<expr><literal type="number" pos:line="16" pos:column="57">1<pos:position pos:line="16" pos:column="58"/></literal></expr>]<pos:position pos:line="16" pos:column="59"/></index></name></expr>)<pos:position pos:line="16" pos:column="60"/></condition><then pos:line="16" pos:column="60"> <block pos:line="16" pos:column="61">{
			<expr_stmt><expr><name pos:line="17" pos:column="25">candidate<pos:position pos:line="17" pos:column="34"/></name> <operator pos:line="17" pos:column="35">=<pos:position pos:line="17" pos:column="36"/></operator> <call><name pos:line="17" pos:column="37">strchr<pos:position pos:line="17" pos:column="43"/></name><argument_list pos:line="17" pos:column="43">(<argument><expr><name pos:line="17" pos:column="44">candidates<pos:position pos:line="17" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="56">p<pos:position pos:line="17" pos:column="57"/></name><index pos:line="17" pos:column="57">[<expr><literal type="number" pos:line="17" pos:column="58">1<pos:position pos:line="17" pos:column="59"/></literal></expr>]<pos:position pos:line="17" pos:column="60"/></index></name></expr></argument>)<pos:position pos:line="17" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="62"/></expr_stmt>
			<if pos:line="18" pos:column="25">if <condition pos:line="18" pos:column="28">(<expr><name pos:line="18" pos:column="29">candidate<pos:position pos:line="18" pos:column="38"/></name></expr>)<pos:position pos:line="18" pos:column="39"/></condition><then pos:line="18" pos:column="39">
				<block type="pseudo"><expr_stmt><expr><operator pos:line="19" pos:column="33">*<pos:position pos:line="19" pos:column="34"/></operator><name pos:line="19" pos:column="34">candidate<pos:position pos:line="19" pos:column="43"/></name> <operator pos:line="19" pos:column="44">=<pos:position pos:line="19" pos:column="45"/></operator> <literal type="char" pos:line="19" pos:column="46">' '<pos:position pos:line="19" pos:column="49"/></literal></expr>;<pos:position pos:line="19" pos:column="50"/></expr_stmt></block></then></if>
		}<pos:position pos:line="20" pos:column="18"/></block></then></if>
	}<pos:position pos:line="21" pos:column="10"/></block></for>

	<for pos:line="23" pos:column="9">for <control pos:line="23" pos:column="13">(<init><expr><name pos:line="23" pos:column="14">p<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">=<pos:position pos:line="23" pos:column="17"/></operator> <name pos:line="23" pos:column="18">candidates<pos:position pos:line="23" pos:column="28"/></name></expr>;<pos:position pos:line="23" pos:column="29"/></init> <condition><expr><operator pos:line="23" pos:column="30">*<pos:position pos:line="23" pos:column="31"/></operator><name pos:line="23" pos:column="31">p<pos:position pos:line="23" pos:column="32"/></name> <operator pos:line="23" pos:column="33">==<pos:position pos:line="23" pos:column="35"/></operator> <literal type="char" pos:line="23" pos:column="36">' '<pos:position pos:line="23" pos:column="39"/></literal></expr>;<pos:position pos:line="23" pos:column="40"/></condition> <incr><expr><name pos:line="23" pos:column="41">p<pos:position pos:line="23" pos:column="42"/></name><operator pos:line="23" pos:column="42">++<pos:position pos:line="23" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="23" pos:column="45"/></control>
		<block type="pseudo"><empty_stmt pos:line="24" pos:column="17">;<pos:position pos:line="24" pos:column="18"/></empty_stmt></block></for>
	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><operator pos:line="25" pos:column="13">!<pos:position pos:line="25" pos:column="14"/></operator><operator pos:line="25" pos:column="14">*<pos:position pos:line="25" pos:column="15"/></operator><name pos:line="25" pos:column="15">p<pos:position pos:line="25" pos:column="16"/></name></expr>)<pos:position pos:line="25" pos:column="17"/></condition><then pos:line="25" pos:column="17">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="17">die<pos:position pos:line="26" pos:column="20"/></name><argument_list pos:line="26" pos:column="20">(<argument><expr><call><name pos:line="26" pos:column="21">_<pos:position pos:line="26" pos:column="22"/></name><argument_list pos:line="26" pos:column="22">(<argument><expr><literal type="string" pos:line="26" pos:column="23">"unable to select a comment character that is not used\n"<pos:position pos:line="26" pos:column="80"/></literal>
		      <literal type="string" pos:line="27" pos:column="23">"in the current commit message"<pos:position pos:line="27" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="57"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="28" pos:column="9">comment_line_char<pos:position pos:line="28" pos:column="26"/></name> <operator pos:line="28" pos:column="27">=<pos:position pos:line="28" pos:column="28"/></operator> <operator pos:line="28" pos:column="29">*<pos:position pos:line="28" pos:column="30"/></operator><name pos:line="28" pos:column="30">p<pos:position pos:line="28" pos:column="31"/></name></expr>;<pos:position pos:line="28" pos:column="32"/></expr_stmt>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

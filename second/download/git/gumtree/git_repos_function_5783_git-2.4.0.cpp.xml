<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5783_git-2.4.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name><modifier pos:line="1" pos:column="5">*<pos:position pos:line="1" pos:column="6"/></modifier><modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type> <name pos:line="1" pos:column="8">mspace_independent_comalloc<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">mspace<pos:position pos:line="1" pos:column="42"/></name></type> <name pos:line="1" pos:column="43">msp<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">size_t<pos:position pos:line="1" pos:column="54"/></name></type> <name pos:line="1" pos:column="55">n_elements<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>,
				   <parameter><decl><type><name pos:line="2" pos:column="36">size_t<pos:position pos:line="2" pos:column="42"/></name></type> <name><name pos:line="2" pos:column="43">sizes<pos:position pos:line="2" pos:column="48"/></name><index pos:line="2" pos:column="48">[]<pos:position pos:line="2" pos:column="50"/></index></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="52">void<pos:position pos:line="2" pos:column="56"/></name><modifier pos:line="2" pos:column="56">*<pos:position pos:line="2" pos:column="57"/></modifier></type> <name><name pos:line="2" pos:column="58">chunks<pos:position pos:line="2" pos:column="64"/></name><index pos:line="2" pos:column="64">[]<pos:position pos:line="2" pos:column="66"/></index></name></decl></parameter>)<pos:position pos:line="2" pos:column="67"/></parameter_list> <block pos:line="2" pos:column="68">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">mstate<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">ms<pos:position pos:line="3" pos:column="12"/></name> <init pos:line="3" pos:column="13">= <expr><operator pos:line="3" pos:column="15">(<pos:position pos:line="3" pos:column="16"/></operator><name pos:line="3" pos:column="16">mstate<pos:position pos:line="3" pos:column="22"/></name><operator pos:line="3" pos:column="22">)<pos:position pos:line="3" pos:column="23"/></operator><name pos:line="3" pos:column="23">msp<pos:position pos:line="3" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><operator pos:line="4" pos:column="7">!<pos:position pos:line="4" pos:column="8"/></operator><call><name pos:line="4" pos:column="8">ok_magic<pos:position pos:line="4" pos:column="16"/></name><argument_list pos:line="4" pos:column="16">(<argument><expr><name pos:line="4" pos:column="17">ms<pos:position pos:line="4" pos:column="19"/></name></expr></argument>)<pos:position pos:line="4" pos:column="20"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="21"/></condition><then pos:line="4" pos:column="21"> <block pos:line="4" pos:column="22">{
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">USAGE_ERROR_ACTION<pos:position pos:line="5" pos:column="23"/></name><argument_list pos:line="5" pos:column="23">(<argument><expr><name pos:line="5" pos:column="24">ms<pos:position pos:line="5" pos:column="26"/></name></expr></argument>,<argument><expr><name pos:line="5" pos:column="27">ms<pos:position pos:line="5" pos:column="29"/></name></expr></argument>)<pos:position pos:line="5" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="31"/></expr_stmt>
    <return pos:line="6" pos:column="5">return <expr><literal type="number" pos:line="6" pos:column="12">0<pos:position pos:line="6" pos:column="13"/></literal></expr>;<pos:position pos:line="6" pos:column="14"/></return>
  }<pos:position pos:line="7" pos:column="4"/></block></then></if>
  <return pos:line="8" pos:column="3">return <expr><call><name pos:line="8" pos:column="10">ialloc<pos:position pos:line="8" pos:column="16"/></name><argument_list pos:line="8" pos:column="16">(<argument><expr><name pos:line="8" pos:column="17">ms<pos:position pos:line="8" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="21">n_elements<pos:position pos:line="8" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="33">sizes<pos:position pos:line="8" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="40">0<pos:position pos:line="8" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="43">chunks<pos:position pos:line="8" pos:column="49"/></name></expr></argument>)<pos:position pos:line="8" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="51"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

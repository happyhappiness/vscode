<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3725_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">is_submodule_active<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">repository<pos:position pos:line="1" pos:column="42"/></name></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">repo<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="50">const<pos:position pos:line="1" pos:column="55"/></specifier> <name pos:line="1" pos:column="56">char<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">path<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="67"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">ret<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><literal type="number" pos:line="3" pos:column="19">0<pos:position pos:line="3" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">key<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name pos:line="4" pos:column="21">NULL<pos:position pos:line="4" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">value<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><name pos:line="5" pos:column="23">NULL<pos:position pos:line="5" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name><name pos:line="6" pos:column="15">struct<pos:position pos:line="6" pos:column="21"/></name> <name pos:line="6" pos:column="22">string_list<pos:position pos:line="6" pos:column="33"/></name></name> <modifier pos:line="6" pos:column="34">*<pos:position pos:line="6" pos:column="35"/></modifier></type><name pos:line="6" pos:column="35">sl<pos:position pos:line="6" pos:column="37"/></name></decl>;<pos:position pos:line="6" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name><name pos:line="7" pos:column="15">struct<pos:position pos:line="7" pos:column="21"/></name> <name pos:line="7" pos:column="22">submodule<pos:position pos:line="7" pos:column="31"/></name></name> <modifier pos:line="7" pos:column="32">*<pos:position pos:line="7" pos:column="33"/></modifier></type><name pos:line="7" pos:column="33">module<pos:position pos:line="7" pos:column="39"/></name></decl>;<pos:position pos:line="7" pos:column="40"/></decl_stmt>

	<expr_stmt><expr><name pos:line="9" pos:column="9">module<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">=<pos:position pos:line="9" pos:column="17"/></operator> <call><name pos:line="9" pos:column="18">submodule_from_cache<pos:position pos:line="9" pos:column="38"/></name><argument_list pos:line="9" pos:column="38">(<argument><expr><name pos:line="9" pos:column="39">repo<pos:position pos:line="9" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="45">null_sha1<pos:position pos:line="9" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="56">path<pos:position pos:line="9" pos:column="60"/></name></expr></argument>)<pos:position pos:line="9" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="62"/></expr_stmt>

	<comment type="block" pos:line="11" pos:column="9">/* early return if there isn't a path-&gt;module mapping */</comment>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">!<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">module<pos:position pos:line="12" pos:column="20"/></name></expr>)<pos:position pos:line="12" pos:column="21"/></condition><then pos:line="12" pos:column="21">
		<block type="pseudo"><return pos:line="13" pos:column="17">return <expr><literal type="number" pos:line="13" pos:column="24">0<pos:position pos:line="13" pos:column="25"/></literal></expr>;<pos:position pos:line="13" pos:column="26"/></return></block></then></if>

	<comment type="block" pos:line="15" pos:column="9">/* submodule.&lt;name&gt;.active is set */</comment>
	<expr_stmt><expr><name pos:line="16" pos:column="9">key<pos:position pos:line="16" pos:column="12"/></name> <operator pos:line="16" pos:column="13">=<pos:position pos:line="16" pos:column="14"/></operator> <call><name pos:line="16" pos:column="15">xstrfmt<pos:position pos:line="16" pos:column="22"/></name><argument_list pos:line="16" pos:column="22">(<argument><expr><literal type="string" pos:line="16" pos:column="23">"submodule.%s.active"<pos:position pos:line="16" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="46">module<pos:position pos:line="16" pos:column="52"/></name><operator pos:line="16" pos:column="52">-&gt;<pos:position pos:line="16" pos:column="57"/></operator><name pos:line="16" pos:column="54">name<pos:position pos:line="16" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="60"/></expr_stmt>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><operator pos:line="17" pos:column="13">!<pos:position pos:line="17" pos:column="14"/></operator><call><name pos:line="17" pos:column="14">repo_config_get_bool<pos:position pos:line="17" pos:column="34"/></name><argument_list pos:line="17" pos:column="34">(<argument><expr><name pos:line="17" pos:column="35">repo<pos:position pos:line="17" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="41">key<pos:position pos:line="17" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="46">&amp;<pos:position pos:line="17" pos:column="51"/></operator><name pos:line="17" pos:column="47">ret<pos:position pos:line="17" pos:column="50"/></name></expr></argument>)<pos:position pos:line="17" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="52"/></condition><then pos:line="17" pos:column="52"> <block pos:line="17" pos:column="53">{
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">free<pos:position pos:line="18" pos:column="21"/></name><argument_list pos:line="18" pos:column="21">(<argument><expr><name pos:line="18" pos:column="22">key<pos:position pos:line="18" pos:column="25"/></name></expr></argument>)<pos:position pos:line="18" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="27"/></expr_stmt>
		<return pos:line="19" pos:column="17">return <expr><name pos:line="19" pos:column="24">ret<pos:position pos:line="19" pos:column="27"/></name></expr>;<pos:position pos:line="19" pos:column="28"/></return>
	}<pos:position pos:line="20" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="21" pos:column="9">free<pos:position pos:line="21" pos:column="13"/></name><argument_list pos:line="21" pos:column="13">(<argument><expr><name pos:line="21" pos:column="14">key<pos:position pos:line="21" pos:column="17"/></name></expr></argument>)<pos:position pos:line="21" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="19"/></expr_stmt>

	<comment type="block" pos:line="23" pos:column="9">/* submodule.active is set */</comment>
	<expr_stmt><expr><name pos:line="24" pos:column="9">sl<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">=<pos:position pos:line="24" pos:column="13"/></operator> <call><name pos:line="24" pos:column="14">repo_config_get_value_multi<pos:position pos:line="24" pos:column="41"/></name><argument_list pos:line="24" pos:column="41">(<argument><expr><name pos:line="24" pos:column="42">repo<pos:position pos:line="24" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="48">"submodule.active"<pos:position pos:line="24" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="68"/></expr_stmt>
	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">sl<pos:position pos:line="25" pos:column="15"/></name></expr>)<pos:position pos:line="25" pos:column="16"/></condition><then pos:line="25" pos:column="16"> <block pos:line="25" pos:column="17">{
		<decl_stmt><decl><type><name><name pos:line="26" pos:column="17">struct<pos:position pos:line="26" pos:column="23"/></name> <name pos:line="26" pos:column="24">pathspec<pos:position pos:line="26" pos:column="32"/></name></name></type> <name pos:line="26" pos:column="33">ps<pos:position pos:line="26" pos:column="35"/></name></decl>;<pos:position pos:line="26" pos:column="36"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="27" pos:column="17">struct<pos:position pos:line="27" pos:column="23"/></name> <name pos:line="27" pos:column="24">argv_array<pos:position pos:line="27" pos:column="34"/></name></name></type> <name pos:line="27" pos:column="35">args<pos:position pos:line="27" pos:column="39"/></name> <init pos:line="27" pos:column="40">= <expr><name pos:line="27" pos:column="42">ARGV_ARRAY_INIT<pos:position pos:line="27" pos:column="57"/></name></expr></init></decl>;<pos:position pos:line="27" pos:column="58"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="28" pos:column="17">const<pos:position pos:line="28" pos:column="22"/></specifier> <name><name pos:line="28" pos:column="23">struct<pos:position pos:line="28" pos:column="29"/></name> <name pos:line="28" pos:column="30">string_list_item<pos:position pos:line="28" pos:column="46"/></name></name> <modifier pos:line="28" pos:column="47">*<pos:position pos:line="28" pos:column="48"/></modifier></type><name pos:line="28" pos:column="48">item<pos:position pos:line="28" pos:column="52"/></name></decl>;<pos:position pos:line="28" pos:column="53"/></decl_stmt>

		<macro><name pos:line="30" pos:column="17">for_each_string_list_item<pos:position pos:line="30" pos:column="42"/></name><argument_list pos:line="30" pos:column="42">(<argument pos:line="30" pos:column="43">item<pos:position pos:line="30" pos:column="47"/></argument>, <argument pos:line="30" pos:column="49">sl<pos:position pos:line="30" pos:column="51"/></argument>)<pos:position pos:line="30" pos:column="52"/></argument_list></macro> <block pos:line="30" pos:column="53">{
			<expr_stmt><expr><call><name pos:line="31" pos:column="25">argv_array_push<pos:position pos:line="31" pos:column="40"/></name><argument_list pos:line="31" pos:column="40">(<argument><expr><operator pos:line="31" pos:column="41">&amp;<pos:position pos:line="31" pos:column="46"/></operator><name pos:line="31" pos:column="42">args<pos:position pos:line="31" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="48">item<pos:position pos:line="31" pos:column="52"/></name><operator pos:line="31" pos:column="52">-&gt;<pos:position pos:line="31" pos:column="57"/></operator><name pos:line="31" pos:column="54">string<pos:position pos:line="31" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="62"/></expr_stmt>
		}<pos:position pos:line="32" pos:column="18"/></block>

		<expr_stmt><expr><call><name pos:line="34" pos:column="17">parse_pathspec<pos:position pos:line="34" pos:column="31"/></name><argument_list pos:line="34" pos:column="31">(<argument><expr><operator pos:line="34" pos:column="32">&amp;<pos:position pos:line="34" pos:column="37"/></operator><name pos:line="34" pos:column="33">ps<pos:position pos:line="34" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="37">0<pos:position pos:line="34" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="40">0<pos:position pos:line="34" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="43">NULL<pos:position pos:line="34" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="49">args<pos:position pos:line="34" pos:column="53"/></name><operator pos:line="34" pos:column="53">.<pos:position pos:line="34" pos:column="54"/></operator><name pos:line="34" pos:column="54">argv<pos:position pos:line="34" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="60"/></expr_stmt>
		<expr_stmt><expr><name pos:line="35" pos:column="17">ret<pos:position pos:line="35" pos:column="20"/></name> <operator pos:line="35" pos:column="21">=<pos:position pos:line="35" pos:column="22"/></operator> <call><name pos:line="35" pos:column="23">match_pathspec<pos:position pos:line="35" pos:column="37"/></name><argument_list pos:line="35" pos:column="37">(<argument><expr><operator pos:line="35" pos:column="38">&amp;<pos:position pos:line="35" pos:column="43"/></operator><name pos:line="35" pos:column="39">ps<pos:position pos:line="35" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="43">path<pos:position pos:line="35" pos:column="47"/></name></expr></argument>, <argument><expr><call><name pos:line="35" pos:column="49">strlen<pos:position pos:line="35" pos:column="55"/></name><argument_list pos:line="35" pos:column="55">(<argument><expr><name pos:line="35" pos:column="56">path<pos:position pos:line="35" pos:column="60"/></name></expr></argument>)<pos:position pos:line="35" pos:column="61"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="63">0<pos:position pos:line="35" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="66">NULL<pos:position pos:line="35" pos:column="70"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="72">1<pos:position pos:line="35" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="75"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="37" pos:column="17">argv_array_clear<pos:position pos:line="37" pos:column="33"/></name><argument_list pos:line="37" pos:column="33">(<argument><expr><operator pos:line="37" pos:column="34">&amp;<pos:position pos:line="37" pos:column="39"/></operator><name pos:line="37" pos:column="35">args<pos:position pos:line="37" pos:column="39"/></name></expr></argument>)<pos:position pos:line="37" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="38" pos:column="17">clear_pathspec<pos:position pos:line="38" pos:column="31"/></name><argument_list pos:line="38" pos:column="31">(<argument><expr><operator pos:line="38" pos:column="32">&amp;<pos:position pos:line="38" pos:column="37"/></operator><name pos:line="38" pos:column="33">ps<pos:position pos:line="38" pos:column="35"/></name></expr></argument>)<pos:position pos:line="38" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="37"/></expr_stmt>
		<return pos:line="39" pos:column="17">return <expr><name pos:line="39" pos:column="24">ret<pos:position pos:line="39" pos:column="27"/></name></expr>;<pos:position pos:line="39" pos:column="28"/></return>
	}<pos:position pos:line="40" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="42" pos:column="9">/* fallback to checking if the URL is set */</comment>
	<expr_stmt><expr><name pos:line="43" pos:column="9">key<pos:position pos:line="43" pos:column="12"/></name> <operator pos:line="43" pos:column="13">=<pos:position pos:line="43" pos:column="14"/></operator> <call><name pos:line="43" pos:column="15">xstrfmt<pos:position pos:line="43" pos:column="22"/></name><argument_list pos:line="43" pos:column="22">(<argument><expr><literal type="string" pos:line="43" pos:column="23">"submodule.%s.url"<pos:position pos:line="43" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="43">module<pos:position pos:line="43" pos:column="49"/></name><operator pos:line="43" pos:column="49">-&gt;<pos:position pos:line="43" pos:column="54"/></operator><name pos:line="43" pos:column="51">name<pos:position pos:line="43" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="57"/></expr_stmt>
	<expr_stmt><expr><name pos:line="44" pos:column="9">ret<pos:position pos:line="44" pos:column="12"/></name> <operator pos:line="44" pos:column="13">=<pos:position pos:line="44" pos:column="14"/></operator> <operator pos:line="44" pos:column="15">!<pos:position pos:line="44" pos:column="16"/></operator><call><name pos:line="44" pos:column="16">repo_config_get_string<pos:position pos:line="44" pos:column="38"/></name><argument_list pos:line="44" pos:column="38">(<argument><expr><name pos:line="44" pos:column="39">repo<pos:position pos:line="44" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="45">key<pos:position pos:line="44" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="50">&amp;<pos:position pos:line="44" pos:column="55"/></operator><name pos:line="44" pos:column="51">value<pos:position pos:line="44" pos:column="56"/></name></expr></argument>)<pos:position pos:line="44" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="58"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="46" pos:column="9">free<pos:position pos:line="46" pos:column="13"/></name><argument_list pos:line="46" pos:column="13">(<argument><expr><name pos:line="46" pos:column="14">value<pos:position pos:line="46" pos:column="19"/></name></expr></argument>)<pos:position pos:line="46" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="47" pos:column="9">free<pos:position pos:line="47" pos:column="13"/></name><argument_list pos:line="47" pos:column="13">(<argument><expr><name pos:line="47" pos:column="14">key<pos:position pos:line="47" pos:column="17"/></name></expr></argument>)<pos:position pos:line="47" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="19"/></expr_stmt>
	<return pos:line="48" pos:column="9">return <expr><name pos:line="48" pos:column="16">ret<pos:position pos:line="48" pos:column="19"/></name></expr>;<pos:position pos:line="48" pos:column="20"/></return>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

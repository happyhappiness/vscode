<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4024_git-2.8.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">verify_notes_filepair<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name><name pos:line="1" pos:column="34">struct<pos:position pos:line="1" pos:column="40"/></name> <name pos:line="1" pos:column="41">diff_filepair<pos:position pos:line="1" pos:column="54"/></name></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">p<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="59">unsigned<pos:position pos:line="1" pos:column="67"/></name> <name pos:line="1" pos:column="68">char<pos:position pos:line="1" pos:column="72"/></name> <modifier pos:line="1" pos:column="73">*<pos:position pos:line="1" pos:column="74"/></modifier></type><name pos:line="1" pos:column="74">sha1<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="79"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<switch pos:line="3" pos:column="9">switch <condition pos:line="3" pos:column="16">(<expr><name><name pos:line="3" pos:column="17">p<pos:position pos:line="3" pos:column="18"/></name><operator pos:line="3" pos:column="18">-&gt;<pos:position pos:line="3" pos:column="23"/></operator><name pos:line="3" pos:column="20">status<pos:position pos:line="3" pos:column="26"/></name></name></expr>)<pos:position pos:line="3" pos:column="27"/></condition> <block pos:line="3" pos:column="28">{
	<case pos:line="4" pos:column="9">case <expr><name pos:line="4" pos:column="14">DIFF_STATUS_MODIFIED<pos:position pos:line="4" pos:column="34"/></name></expr>:<pos:position pos:line="4" pos:column="35"/></case>
		<expr_stmt><expr><call><name pos:line="5" pos:column="17">assert<pos:position pos:line="5" pos:column="23"/></name><argument_list pos:line="5" pos:column="23">(<argument><expr><name><name pos:line="5" pos:column="24">p<pos:position pos:line="5" pos:column="25"/></name><operator pos:line="5" pos:column="25">-&gt;<pos:position pos:line="5" pos:column="30"/></operator><name pos:line="5" pos:column="27">one<pos:position pos:line="5" pos:column="30"/></name><operator pos:line="5" pos:column="30">-&gt;<pos:position pos:line="5" pos:column="35"/></operator><name pos:line="5" pos:column="32">mode<pos:position pos:line="5" pos:column="36"/></name></name> <operator pos:line="5" pos:column="37">==<pos:position pos:line="5" pos:column="39"/></operator> <name><name pos:line="5" pos:column="40">p<pos:position pos:line="5" pos:column="41"/></name><operator pos:line="5" pos:column="41">-&gt;<pos:position pos:line="5" pos:column="46"/></operator><name pos:line="5" pos:column="43">two<pos:position pos:line="5" pos:column="46"/></name><operator pos:line="5" pos:column="46">-&gt;<pos:position pos:line="5" pos:column="51"/></operator><name pos:line="5" pos:column="48">mode<pos:position pos:line="5" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="54"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="6" pos:column="17">assert<pos:position pos:line="6" pos:column="23"/></name><argument_list pos:line="6" pos:column="23">(<argument><expr><operator pos:line="6" pos:column="24">!<pos:position pos:line="6" pos:column="25"/></operator><call><name pos:line="6" pos:column="25">is_null_sha1<pos:position pos:line="6" pos:column="37"/></name><argument_list pos:line="6" pos:column="37">(<argument><expr><name><name pos:line="6" pos:column="38">p<pos:position pos:line="6" pos:column="39"/></name><operator pos:line="6" pos:column="39">-&gt;<pos:position pos:line="6" pos:column="44"/></operator><name pos:line="6" pos:column="41">one<pos:position pos:line="6" pos:column="44"/></name><operator pos:line="6" pos:column="44">-&gt;<pos:position pos:line="6" pos:column="49"/></operator><name pos:line="6" pos:column="46">sha1<pos:position pos:line="6" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="53"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="7" pos:column="17">assert<pos:position pos:line="7" pos:column="23"/></name><argument_list pos:line="7" pos:column="23">(<argument><expr><operator pos:line="7" pos:column="24">!<pos:position pos:line="7" pos:column="25"/></operator><call><name pos:line="7" pos:column="25">is_null_sha1<pos:position pos:line="7" pos:column="37"/></name><argument_list pos:line="7" pos:column="37">(<argument><expr><name><name pos:line="7" pos:column="38">p<pos:position pos:line="7" pos:column="39"/></name><operator pos:line="7" pos:column="39">-&gt;<pos:position pos:line="7" pos:column="44"/></operator><name pos:line="7" pos:column="41">two<pos:position pos:line="7" pos:column="44"/></name><operator pos:line="7" pos:column="44">-&gt;<pos:position pos:line="7" pos:column="49"/></operator><name pos:line="7" pos:column="46">sha1<pos:position pos:line="7" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="53"/></expr_stmt>
		<break pos:line="8" pos:column="17">break;<pos:position pos:line="8" pos:column="23"/></break>
	<case pos:line="9" pos:column="9">case <expr><name pos:line="9" pos:column="14">DIFF_STATUS_ADDED<pos:position pos:line="9" pos:column="31"/></name></expr>:<pos:position pos:line="9" pos:column="32"/></case>
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">assert<pos:position pos:line="10" pos:column="23"/></name><argument_list pos:line="10" pos:column="23">(<argument><expr><call><name pos:line="10" pos:column="24">is_null_sha1<pos:position pos:line="10" pos:column="36"/></name><argument_list pos:line="10" pos:column="36">(<argument><expr><name><name pos:line="10" pos:column="37">p<pos:position pos:line="10" pos:column="38"/></name><operator pos:line="10" pos:column="38">-&gt;<pos:position pos:line="10" pos:column="43"/></operator><name pos:line="10" pos:column="40">one<pos:position pos:line="10" pos:column="43"/></name><operator pos:line="10" pos:column="43">-&gt;<pos:position pos:line="10" pos:column="48"/></operator><name pos:line="10" pos:column="45">sha1<pos:position pos:line="10" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="52"/></expr_stmt>
		<break pos:line="11" pos:column="17">break;<pos:position pos:line="11" pos:column="23"/></break>
	<case pos:line="12" pos:column="9">case <expr><name pos:line="12" pos:column="14">DIFF_STATUS_DELETED<pos:position pos:line="12" pos:column="33"/></name></expr>:<pos:position pos:line="12" pos:column="34"/></case>
		<expr_stmt><expr><call><name pos:line="13" pos:column="17">assert<pos:position pos:line="13" pos:column="23"/></name><argument_list pos:line="13" pos:column="23">(<argument><expr><call><name pos:line="13" pos:column="24">is_null_sha1<pos:position pos:line="13" pos:column="36"/></name><argument_list pos:line="13" pos:column="36">(<argument><expr><name><name pos:line="13" pos:column="37">p<pos:position pos:line="13" pos:column="38"/></name><operator pos:line="13" pos:column="38">-&gt;<pos:position pos:line="13" pos:column="43"/></operator><name pos:line="13" pos:column="40">two<pos:position pos:line="13" pos:column="43"/></name><operator pos:line="13" pos:column="43">-&gt;<pos:position pos:line="13" pos:column="48"/></operator><name pos:line="13" pos:column="45">sha1<pos:position pos:line="13" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="52"/></expr_stmt>
		<break pos:line="14" pos:column="17">break;<pos:position pos:line="14" pos:column="23"/></break>
	<default pos:line="15" pos:column="9">default:<pos:position pos:line="15" pos:column="17"/></default>
		<return pos:line="16" pos:column="17">return <expr><operator pos:line="16" pos:column="24">-<pos:position pos:line="16" pos:column="25"/></operator><literal type="number" pos:line="16" pos:column="25">1<pos:position pos:line="16" pos:column="26"/></literal></expr>;<pos:position pos:line="16" pos:column="27"/></return>
	}<pos:position pos:line="17" pos:column="10"/></block></switch>
	<expr_stmt><expr><call><name pos:line="18" pos:column="9">assert<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><operator pos:line="18" pos:column="16">!<pos:position pos:line="18" pos:column="17"/></operator><call><name pos:line="18" pos:column="17">strcmp<pos:position pos:line="18" pos:column="23"/></name><argument_list pos:line="18" pos:column="23">(<argument><expr><name><name pos:line="18" pos:column="24">p<pos:position pos:line="18" pos:column="25"/></name><operator pos:line="18" pos:column="25">-&gt;<pos:position pos:line="18" pos:column="30"/></operator><name pos:line="18" pos:column="27">one<pos:position pos:line="18" pos:column="30"/></name><operator pos:line="18" pos:column="30">-&gt;<pos:position pos:line="18" pos:column="35"/></operator><name pos:line="18" pos:column="32">path<pos:position pos:line="18" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="38">p<pos:position pos:line="18" pos:column="39"/></name><operator pos:line="18" pos:column="39">-&gt;<pos:position pos:line="18" pos:column="44"/></operator><name pos:line="18" pos:column="41">two<pos:position pos:line="18" pos:column="44"/></name><operator pos:line="18" pos:column="44">-&gt;<pos:position pos:line="18" pos:column="49"/></operator><name pos:line="18" pos:column="46">path<pos:position pos:line="18" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="53"/></expr_stmt>
	<return pos:line="19" pos:column="9">return <expr><call><name pos:line="19" pos:column="16">path_to_sha1<pos:position pos:line="19" pos:column="28"/></name><argument_list pos:line="19" pos:column="28">(<argument><expr><name><name pos:line="19" pos:column="29">p<pos:position pos:line="19" pos:column="30"/></name><operator pos:line="19" pos:column="30">-&gt;<pos:position pos:line="19" pos:column="35"/></operator><name pos:line="19" pos:column="32">one<pos:position pos:line="19" pos:column="35"/></name><operator pos:line="19" pos:column="35">-&gt;<pos:position pos:line="19" pos:column="40"/></operator><name pos:line="19" pos:column="37">path<pos:position pos:line="19" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="43">sha1<pos:position pos:line="19" pos:column="47"/></name></expr></argument>)<pos:position pos:line="19" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="49"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

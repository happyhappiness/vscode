<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4460_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">match_explicit<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">ref<pos:position pos:line="1" pos:column="37"/></name></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">src<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="44">struct<pos:position pos:line="1" pos:column="50"/></name> <name pos:line="1" pos:column="51">ref<pos:position pos:line="1" pos:column="54"/></name></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">dst<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>,
			  <parameter><decl><type><name><name pos:line="2" pos:column="27">struct<pos:position pos:line="2" pos:column="33"/></name> <name pos:line="2" pos:column="34">ref<pos:position pos:line="2" pos:column="37"/></name></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier><modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier><modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="41">dst_tail<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>,
			  <parameter><decl><type><name><name pos:line="3" pos:column="27">struct<pos:position pos:line="3" pos:column="33"/></name> <name pos:line="3" pos:column="34">refspec<pos:position pos:line="3" pos:column="41"/></name></name> <modifier pos:line="3" pos:column="42">*<pos:position pos:line="3" pos:column="43"/></modifier></type><name pos:line="3" pos:column="43">rs<pos:position pos:line="3" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="46"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">ref<pos:position pos:line="5" pos:column="19"/></name></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">matched_src<pos:position pos:line="5" pos:column="32"/></name></decl>, <modifier pos:line="5" pos:column="34">*<pos:position pos:line="5" pos:column="35"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="35">matched_dst<pos:position pos:line="5" pos:column="46"/></name></decl>;<pos:position pos:line="5" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">allocated_src<pos:position pos:line="6" pos:column="26"/></name></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>

	<decl_stmt><decl><type><specifier pos:line="8" pos:column="9">const<pos:position pos:line="8" pos:column="14"/></specifier> <name pos:line="8" pos:column="15">char<pos:position pos:line="8" pos:column="19"/></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">dst_value<pos:position pos:line="8" pos:column="30"/></name> <init pos:line="8" pos:column="31">= <expr><name><name pos:line="8" pos:column="33">rs<pos:position pos:line="8" pos:column="35"/></name><operator pos:line="8" pos:column="35">-&gt;<pos:position pos:line="8" pos:column="40"/></operator><name pos:line="8" pos:column="37">dst<pos:position pos:line="8" pos:column="40"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">char<pos:position pos:line="9" pos:column="13"/></name> <modifier pos:line="9" pos:column="14">*<pos:position pos:line="9" pos:column="15"/></modifier></type><name pos:line="9" pos:column="15">dst_guess<pos:position pos:line="9" pos:column="24"/></name></decl>;<pos:position pos:line="9" pos:column="25"/></decl_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name><name pos:line="11" pos:column="13">rs<pos:position pos:line="11" pos:column="15"/></name><operator pos:line="11" pos:column="15">-&gt;<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="17">pattern<pos:position pos:line="11" pos:column="24"/></name></name> <operator pos:line="11" pos:column="25">||<pos:position pos:line="11" pos:column="27"/></operator> <name><name pos:line="11" pos:column="28">rs<pos:position pos:line="11" pos:column="30"/></name><operator pos:line="11" pos:column="30">-&gt;<pos:position pos:line="11" pos:column="35"/></operator><name pos:line="11" pos:column="32">matching<pos:position pos:line="11" pos:column="40"/></name></name></expr>)<pos:position pos:line="11" pos:column="41"/></condition><then pos:line="11" pos:column="41">
		<block type="pseudo"><return pos:line="12" pos:column="17">return <expr><literal type="number" pos:line="12" pos:column="24">0<pos:position pos:line="12" pos:column="25"/></literal></expr>;<pos:position pos:line="12" pos:column="26"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="14" pos:column="9">matched_src<pos:position pos:line="14" pos:column="20"/></name> <operator pos:line="14" pos:column="21">=<pos:position pos:line="14" pos:column="22"/></operator> <name pos:line="14" pos:column="23">matched_dst<pos:position pos:line="14" pos:column="34"/></name> <operator pos:line="14" pos:column="35">=<pos:position pos:line="14" pos:column="36"/></operator> <name pos:line="14" pos:column="37">NULL<pos:position pos:line="14" pos:column="41"/></name></expr>;<pos:position pos:line="14" pos:column="42"/></expr_stmt>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><call><name pos:line="15" pos:column="13">match_explicit_lhs<pos:position pos:line="15" pos:column="31"/></name><argument_list pos:line="15" pos:column="31">(<argument><expr><name pos:line="15" pos:column="32">src<pos:position pos:line="15" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="37">rs<pos:position pos:line="15" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="41">&amp;<pos:position pos:line="15" pos:column="46"/></operator><name pos:line="15" pos:column="42">matched_src<pos:position pos:line="15" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="55">&amp;<pos:position pos:line="15" pos:column="60"/></operator><name pos:line="15" pos:column="56">allocated_src<pos:position pos:line="15" pos:column="69"/></name></expr></argument>)<pos:position pos:line="15" pos:column="70"/></argument_list></call> <operator pos:line="15" pos:column="71">&lt;<pos:position pos:line="15" pos:column="75"/></operator> <literal type="number" pos:line="15" pos:column="73">0<pos:position pos:line="15" pos:column="74"/></literal></expr>)<pos:position pos:line="15" pos:column="75"/></condition><then pos:line="15" pos:column="75">
		<block type="pseudo"><return pos:line="16" pos:column="17">return <expr><operator pos:line="16" pos:column="24">-<pos:position pos:line="16" pos:column="25"/></operator><literal type="number" pos:line="16" pos:column="25">1<pos:position pos:line="16" pos:column="26"/></literal></expr>;<pos:position pos:line="16" pos:column="27"/></return></block></then></if>

	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><operator pos:line="18" pos:column="13">!<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="14">dst_value<pos:position pos:line="18" pos:column="23"/></name></expr>)<pos:position pos:line="18" pos:column="24"/></condition><then pos:line="18" pos:column="24"> <block pos:line="18" pos:column="25">{
		<decl_stmt><decl><type><name><name pos:line="19" pos:column="17">struct<pos:position pos:line="19" pos:column="23"/></name> <name pos:line="19" pos:column="24">object_id<pos:position pos:line="19" pos:column="33"/></name></name></type> <name pos:line="19" pos:column="34">oid<pos:position pos:line="19" pos:column="37"/></name></decl>;<pos:position pos:line="19" pos:column="38"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="20" pos:column="17">int<pos:position pos:line="20" pos:column="20"/></name></type> <name pos:line="20" pos:column="21">flag<pos:position pos:line="20" pos:column="25"/></name></decl>;<pos:position pos:line="20" pos:column="26"/></decl_stmt>

		<expr_stmt><expr><name pos:line="22" pos:column="17">dst_value<pos:position pos:line="22" pos:column="26"/></name> <operator pos:line="22" pos:column="27">=<pos:position pos:line="22" pos:column="28"/></operator> <call><name pos:line="22" pos:column="29">resolve_ref_unsafe<pos:position pos:line="22" pos:column="47"/></name><argument_list pos:line="22" pos:column="47">(<argument><expr><name><name pos:line="22" pos:column="48">matched_src<pos:position pos:line="22" pos:column="59"/></name><operator pos:line="22" pos:column="59">-&gt;<pos:position pos:line="22" pos:column="64"/></operator><name pos:line="22" pos:column="61">name<pos:position pos:line="22" pos:column="65"/></name></name></expr></argument>,
					       <argument><expr><name pos:line="23" pos:column="48">RESOLVE_REF_READING<pos:position pos:line="23" pos:column="67"/></name></expr></argument>,
					       <argument><expr><name><name pos:line="24" pos:column="48">oid<pos:position pos:line="24" pos:column="51"/></name><operator pos:line="24" pos:column="51">.<pos:position pos:line="24" pos:column="52"/></operator><name pos:line="24" pos:column="52">hash<pos:position pos:line="24" pos:column="56"/></name></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="58">&amp;<pos:position pos:line="24" pos:column="63"/></operator><name pos:line="24" pos:column="59">flag<pos:position pos:line="24" pos:column="63"/></name></expr></argument>)<pos:position pos:line="24" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="65"/></expr_stmt>
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><operator pos:line="25" pos:column="21">!<pos:position pos:line="25" pos:column="22"/></operator><name pos:line="25" pos:column="22">dst_value<pos:position pos:line="25" pos:column="31"/></name> <operator pos:line="25" pos:column="32">||<pos:position pos:line="25" pos:column="34"/></operator>
		    <operator pos:line="26" pos:column="21">(<pos:position pos:line="26" pos:column="22"/></operator><operator pos:line="26" pos:column="22">(<pos:position pos:line="26" pos:column="23"/></operator><name pos:line="26" pos:column="23">flag<pos:position pos:line="26" pos:column="27"/></name> <operator pos:line="26" pos:column="28">&amp;<pos:position pos:line="26" pos:column="33"/></operator> <name pos:line="26" pos:column="30">REF_ISSYMREF<pos:position pos:line="26" pos:column="42"/></name><operator pos:line="26" pos:column="42">)<pos:position pos:line="26" pos:column="43"/></operator> <operator pos:line="26" pos:column="44">&amp;&amp;<pos:position pos:line="26" pos:column="54"/></operator>
		     <operator pos:line="27" pos:column="22">!<pos:position pos:line="27" pos:column="23"/></operator><call><name pos:line="27" pos:column="23">starts_with<pos:position pos:line="27" pos:column="34"/></name><argument_list pos:line="27" pos:column="34">(<argument><expr><name pos:line="27" pos:column="35">dst_value<pos:position pos:line="27" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="46">"refs/heads/"<pos:position pos:line="27" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="60"/></argument_list></call><operator pos:line="27" pos:column="60">)<pos:position pos:line="27" pos:column="61"/></operator></expr>)<pos:position pos:line="27" pos:column="62"/></condition><then pos:line="27" pos:column="62">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="25">die<pos:position pos:line="28" pos:column="28"/></name><argument_list pos:line="28" pos:column="28">(<argument><expr><literal type="string" pos:line="28" pos:column="29">"%s cannot be resolved to branch."<pos:position pos:line="28" pos:column="63"/></literal></expr></argument>,
			    <argument><expr><name><name pos:line="29" pos:column="29">matched_src<pos:position pos:line="29" pos:column="40"/></name><operator pos:line="29" pos:column="40">-&gt;<pos:position pos:line="29" pos:column="45"/></operator><name pos:line="29" pos:column="42">name<pos:position pos:line="29" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="48"/></expr_stmt></block></then></if>
	}<pos:position pos:line="30" pos:column="10"/></block></then></if>

	<switch pos:line="32" pos:column="9">switch <condition pos:line="32" pos:column="16">(<expr><call><name pos:line="32" pos:column="17">count_refspec_match<pos:position pos:line="32" pos:column="36"/></name><argument_list pos:line="32" pos:column="36">(<argument><expr><name pos:line="32" pos:column="37">dst_value<pos:position pos:line="32" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="48">dst<pos:position pos:line="32" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="53">&amp;<pos:position pos:line="32" pos:column="58"/></operator><name pos:line="32" pos:column="54">matched_dst<pos:position pos:line="32" pos:column="65"/></name></expr></argument>)<pos:position pos:line="32" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="67"/></condition> <block pos:line="32" pos:column="68">{
	<case pos:line="33" pos:column="9">case <expr><literal type="number" pos:line="33" pos:column="14">1<pos:position pos:line="33" pos:column="15"/></literal></expr>:<pos:position pos:line="33" pos:column="16"/></case>
		<break pos:line="34" pos:column="17">break;<pos:position pos:line="34" pos:column="23"/></break>
	<case pos:line="35" pos:column="9">case <expr><literal type="number" pos:line="35" pos:column="14">0<pos:position pos:line="35" pos:column="15"/></literal></expr>:<pos:position pos:line="35" pos:column="16"/></case>
		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><call><name pos:line="36" pos:column="21">starts_with<pos:position pos:line="36" pos:column="32"/></name><argument_list pos:line="36" pos:column="32">(<argument><expr><name pos:line="36" pos:column="33">dst_value<pos:position pos:line="36" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="44">"refs/"<pos:position pos:line="36" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="53"/></condition><then pos:line="36" pos:column="53">
			<block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="25">matched_dst<pos:position pos:line="37" pos:column="36"/></name> <operator pos:line="37" pos:column="37">=<pos:position pos:line="37" pos:column="38"/></operator> <call><name pos:line="37" pos:column="39">make_linked_ref<pos:position pos:line="37" pos:column="54"/></name><argument_list pos:line="37" pos:column="54">(<argument><expr><name pos:line="37" pos:column="55">dst_value<pos:position pos:line="37" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="66">dst_tail<pos:position pos:line="37" pos:column="74"/></name></expr></argument>)<pos:position pos:line="37" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="76"/></expr_stmt></block></then>
		<elseif pos:line="38" pos:column="17">else <if pos:line="38" pos:column="22">if <condition pos:line="38" pos:column="25">(<expr><call><name pos:line="38" pos:column="26">is_null_oid<pos:position pos:line="38" pos:column="37"/></name><argument_list pos:line="38" pos:column="37">(<argument><expr><operator pos:line="38" pos:column="38">&amp;<pos:position pos:line="38" pos:column="43"/></operator><name><name pos:line="38" pos:column="39">matched_src<pos:position pos:line="38" pos:column="50"/></name><operator pos:line="38" pos:column="50">-&gt;<pos:position pos:line="38" pos:column="55"/></operator><name pos:line="38" pos:column="52">new_oid<pos:position pos:line="38" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="61"/></condition><then pos:line="38" pos:column="61">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="39" pos:column="25">error<pos:position pos:line="39" pos:column="30"/></name><argument_list pos:line="39" pos:column="30">(<argument><expr><literal type="string" pos:line="39" pos:column="31">"unable to delete '%s': remote ref does not exist"<pos:position pos:line="39" pos:column="81"/></literal></expr></argument>,
			      <argument><expr><name pos:line="40" pos:column="31">dst_value<pos:position pos:line="40" pos:column="40"/></name></expr></argument>)<pos:position pos:line="40" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="42"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="41" pos:column="17">else <if pos:line="41" pos:column="22">if <condition pos:line="41" pos:column="25">(<expr><operator pos:line="41" pos:column="26">(<pos:position pos:line="41" pos:column="27"/></operator><name pos:line="41" pos:column="27">dst_guess<pos:position pos:line="41" pos:column="36"/></name> <operator pos:line="41" pos:column="37">=<pos:position pos:line="41" pos:column="38"/></operator> <call><name pos:line="41" pos:column="39">guess_ref<pos:position pos:line="41" pos:column="48"/></name><argument_list pos:line="41" pos:column="48">(<argument><expr><name pos:line="41" pos:column="49">dst_value<pos:position pos:line="41" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="60">matched_src<pos:position pos:line="41" pos:column="71"/></name></expr></argument>)<pos:position pos:line="41" pos:column="72"/></argument_list></call><operator pos:line="41" pos:column="72">)<pos:position pos:line="41" pos:column="73"/></operator></expr>)<pos:position pos:line="41" pos:column="74"/></condition><then pos:line="41" pos:column="74"> <block pos:line="41" pos:column="75">{
			<expr_stmt><expr><name pos:line="42" pos:column="25">matched_dst<pos:position pos:line="42" pos:column="36"/></name> <operator pos:line="42" pos:column="37">=<pos:position pos:line="42" pos:column="38"/></operator> <call><name pos:line="42" pos:column="39">make_linked_ref<pos:position pos:line="42" pos:column="54"/></name><argument_list pos:line="42" pos:column="54">(<argument><expr><name pos:line="42" pos:column="55">dst_guess<pos:position pos:line="42" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="66">dst_tail<pos:position pos:line="42" pos:column="74"/></name></expr></argument>)<pos:position pos:line="42" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="76"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="43" pos:column="25">free<pos:position pos:line="43" pos:column="29"/></name><argument_list pos:line="43" pos:column="29">(<argument><expr><name pos:line="43" pos:column="30">dst_guess<pos:position pos:line="43" pos:column="39"/></name></expr></argument>)<pos:position pos:line="43" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="41"/></expr_stmt>
		}<pos:position pos:line="44" pos:column="18"/></block></then></if></elseif> <else pos:line="44" pos:column="19">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="25">error<pos:position pos:line="45" pos:column="30"/></name><argument_list pos:line="45" pos:column="30">(<argument><expr><literal type="string" pos:line="45" pos:column="31">"unable to push to unqualified destination: %s\n"<pos:position pos:line="45" pos:column="80"/></literal>
			      <literal type="string" pos:line="46" pos:column="31">"The destination refspec neither matches an "<pos:position pos:line="46" pos:column="76"/></literal>
			      <literal type="string" pos:line="47" pos:column="31">"existing ref on the remote nor\n"<pos:position pos:line="47" pos:column="65"/></literal>
			      <literal type="string" pos:line="48" pos:column="31">"begins with refs/, and we are unable to "<pos:position pos:line="48" pos:column="73"/></literal>
			      <literal type="string" pos:line="49" pos:column="31">"guess a prefix based on the source ref."<pos:position pos:line="49" pos:column="72"/></literal></expr></argument>,
			      <argument><expr><name pos:line="50" pos:column="31">dst_value<pos:position pos:line="50" pos:column="40"/></name></expr></argument>)<pos:position pos:line="50" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="42"/></expr_stmt></block></else></if>
		<break pos:line="51" pos:column="17">break;<pos:position pos:line="51" pos:column="23"/></break>
	<default pos:line="52" pos:column="9">default:<pos:position pos:line="52" pos:column="17"/></default>
		<expr_stmt><expr><name pos:line="53" pos:column="17">matched_dst<pos:position pos:line="53" pos:column="28"/></name> <operator pos:line="53" pos:column="29">=<pos:position pos:line="53" pos:column="30"/></operator> <name pos:line="53" pos:column="31">NULL<pos:position pos:line="53" pos:column="35"/></name></expr>;<pos:position pos:line="53" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="54" pos:column="17">error<pos:position pos:line="54" pos:column="22"/></name><argument_list pos:line="54" pos:column="22">(<argument><expr><literal type="string" pos:line="54" pos:column="23">"dst refspec %s matches more than one."<pos:position pos:line="54" pos:column="62"/></literal></expr></argument>,
		      <argument><expr><name pos:line="55" pos:column="23">dst_value<pos:position pos:line="55" pos:column="32"/></name></expr></argument>)<pos:position pos:line="55" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="34"/></expr_stmt>
		<break pos:line="56" pos:column="17">break;<pos:position pos:line="56" pos:column="23"/></break>
	}<pos:position pos:line="57" pos:column="10"/></block></switch>
	<if pos:line="58" pos:column="9">if <condition pos:line="58" pos:column="12">(<expr><operator pos:line="58" pos:column="13">!<pos:position pos:line="58" pos:column="14"/></operator><name pos:line="58" pos:column="14">matched_dst<pos:position pos:line="58" pos:column="25"/></name></expr>)<pos:position pos:line="58" pos:column="26"/></condition><then pos:line="58" pos:column="26">
		<block type="pseudo"><return pos:line="59" pos:column="17">return <expr><operator pos:line="59" pos:column="24">-<pos:position pos:line="59" pos:column="25"/></operator><literal type="number" pos:line="59" pos:column="25">1<pos:position pos:line="59" pos:column="26"/></literal></expr>;<pos:position pos:line="59" pos:column="27"/></return></block></then></if>
	<if pos:line="60" pos:column="9">if <condition pos:line="60" pos:column="12">(<expr><name><name pos:line="60" pos:column="13">matched_dst<pos:position pos:line="60" pos:column="24"/></name><operator pos:line="60" pos:column="24">-&gt;<pos:position pos:line="60" pos:column="29"/></operator><name pos:line="60" pos:column="26">peer_ref<pos:position pos:line="60" pos:column="34"/></name></name></expr>)<pos:position pos:line="60" pos:column="35"/></condition><then pos:line="60" pos:column="35">
		<block type="pseudo"><return pos:line="61" pos:column="17">return <expr><call><name pos:line="61" pos:column="24">error<pos:position pos:line="61" pos:column="29"/></name><argument_list pos:line="61" pos:column="29">(<argument><expr><literal type="string" pos:line="61" pos:column="30">"dst ref %s receives from more than one src."<pos:position pos:line="61" pos:column="75"/></literal></expr></argument>,
		      <argument><expr><name><name pos:line="62" pos:column="23">matched_dst<pos:position pos:line="62" pos:column="34"/></name><operator pos:line="62" pos:column="34">-&gt;<pos:position pos:line="62" pos:column="39"/></operator><name pos:line="62" pos:column="36">name<pos:position pos:line="62" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="42"/></return></block></then>
	<else pos:line="63" pos:column="9">else <block pos:line="63" pos:column="14">{
		<expr_stmt><expr><name><name pos:line="64" pos:column="17">matched_dst<pos:position pos:line="64" pos:column="28"/></name><operator pos:line="64" pos:column="28">-&gt;<pos:position pos:line="64" pos:column="33"/></operator><name pos:line="64" pos:column="30">peer_ref<pos:position pos:line="64" pos:column="38"/></name></name> <operator pos:line="64" pos:column="39">=<pos:position pos:line="64" pos:column="40"/></operator> <ternary><condition><expr><name pos:line="64" pos:column="41">allocated_src<pos:position pos:line="64" pos:column="54"/></name></expr> ?<pos:position pos:line="64" pos:column="56"/></condition><then pos:line="64" pos:column="56">
					<expr><name pos:line="65" pos:column="41">matched_src<pos:position pos:line="65" pos:column="52"/></name></expr> <pos:position pos:line="65" pos:column="53"/></then><else pos:line="65" pos:column="53">:
					<expr><call><name pos:line="66" pos:column="41">copy_ref<pos:position pos:line="66" pos:column="49"/></name><argument_list pos:line="66" pos:column="49">(<argument><expr><name pos:line="66" pos:column="50">matched_src<pos:position pos:line="66" pos:column="61"/></name></expr></argument>)<pos:position pos:line="66" pos:column="62"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="66" pos:column="63"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="67" pos:column="17">matched_dst<pos:position pos:line="67" pos:column="28"/></name><operator pos:line="67" pos:column="28">-&gt;<pos:position pos:line="67" pos:column="33"/></operator><name pos:line="67" pos:column="30">force<pos:position pos:line="67" pos:column="35"/></name></name> <operator pos:line="67" pos:column="36">=<pos:position pos:line="67" pos:column="37"/></operator> <name><name pos:line="67" pos:column="38">rs<pos:position pos:line="67" pos:column="40"/></name><operator pos:line="67" pos:column="40">-&gt;<pos:position pos:line="67" pos:column="45"/></operator><name pos:line="67" pos:column="42">force<pos:position pos:line="67" pos:column="47"/></name></name></expr>;<pos:position pos:line="67" pos:column="48"/></expr_stmt>
	}<pos:position pos:line="68" pos:column="10"/></block></else></if>
	<return pos:line="69" pos:column="9">return <expr><literal type="number" pos:line="69" pos:column="16">0<pos:position pos:line="69" pos:column="17"/></literal></expr>;<pos:position pos:line="69" pos:column="18"/></return>
}<pos:position pos:line="70" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1521_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">url_decode_mem<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><specifier pos:line="1" pos:column="22">const<pos:position pos:line="1" pos:column="27"/></specifier> <name pos:line="1" pos:column="28">char<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">url<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">int<pos:position pos:line="1" pos:column="42"/></name></type> <name pos:line="1" pos:column="43">len<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">strbuf<pos:position pos:line="3" pos:column="22"/></name></name></type> <name pos:line="3" pos:column="23">out<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">= <expr><name pos:line="3" pos:column="29">STRBUF_INIT<pos:position pos:line="3" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">colon<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><call><name pos:line="4" pos:column="29">memchr<pos:position pos:line="4" pos:column="35"/></name><argument_list pos:line="4" pos:column="35">(<argument><expr><name pos:line="4" pos:column="36">url<pos:position pos:line="4" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="4" pos:column="41">':'<pos:position pos:line="4" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="46">len<pos:position pos:line="4" pos:column="49"/></name></expr></argument>)<pos:position pos:line="4" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="51"/></decl_stmt>

	<comment type="block" pos:line="6" pos:column="9">/* Skip protocol part if present */</comment>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">colon<pos:position pos:line="7" pos:column="18"/></name> <operator pos:line="7" pos:column="19">&amp;&amp;<pos:position pos:line="7" pos:column="29"/></operator> <name pos:line="7" pos:column="22">url<pos:position pos:line="7" pos:column="25"/></name> <operator pos:line="7" pos:column="26">&lt;<pos:position pos:line="7" pos:column="30"/></operator> <name pos:line="7" pos:column="28">colon<pos:position pos:line="7" pos:column="33"/></name></expr>)<pos:position pos:line="7" pos:column="34"/></condition><then pos:line="7" pos:column="34"> <block pos:line="7" pos:column="35">{
		<expr_stmt><expr><call><name pos:line="8" pos:column="17">strbuf_add<pos:position pos:line="8" pos:column="27"/></name><argument_list pos:line="8" pos:column="27">(<argument><expr><operator pos:line="8" pos:column="28">&amp;<pos:position pos:line="8" pos:column="33"/></operator><name pos:line="8" pos:column="29">out<pos:position pos:line="8" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="34">url<pos:position pos:line="8" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="39">colon<pos:position pos:line="8" pos:column="44"/></name> <operator pos:line="8" pos:column="45">-<pos:position pos:line="8" pos:column="46"/></operator> <name pos:line="8" pos:column="47">url<pos:position pos:line="8" pos:column="50"/></name></expr></argument>)<pos:position pos:line="8" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><name pos:line="9" pos:column="17">len<pos:position pos:line="9" pos:column="20"/></name> <operator pos:line="9" pos:column="21">-=<pos:position pos:line="9" pos:column="23"/></operator> <name pos:line="9" pos:column="24">colon<pos:position pos:line="9" pos:column="29"/></name> <operator pos:line="9" pos:column="30">-<pos:position pos:line="9" pos:column="31"/></operator> <name pos:line="9" pos:column="32">url<pos:position pos:line="9" pos:column="35"/></name></expr>;<pos:position pos:line="9" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><name pos:line="10" pos:column="17">url<pos:position pos:line="10" pos:column="20"/></name> <operator pos:line="10" pos:column="21">=<pos:position pos:line="10" pos:column="22"/></operator> <name pos:line="10" pos:column="23">colon<pos:position pos:line="10" pos:column="28"/></name></expr>;<pos:position pos:line="10" pos:column="29"/></expr_stmt>
	}<pos:position pos:line="11" pos:column="10"/></block></then></if>
	<return pos:line="12" pos:column="9">return <expr><call><name pos:line="12" pos:column="16">url_decode_internal<pos:position pos:line="12" pos:column="35"/></name><argument_list pos:line="12" pos:column="35">(<argument><expr><operator pos:line="12" pos:column="36">&amp;<pos:position pos:line="12" pos:column="41"/></operator><name pos:line="12" pos:column="37">url<pos:position pos:line="12" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="42">len<pos:position pos:line="12" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="47">NULL<pos:position pos:line="12" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="53">&amp;<pos:position pos:line="12" pos:column="58"/></operator><name pos:line="12" pos:column="54">out<pos:position pos:line="12" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="59">0<pos:position pos:line="12" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="62"/></return>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

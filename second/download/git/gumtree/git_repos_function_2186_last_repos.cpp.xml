<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2186_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">check_and_freshen_nonlocal<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><specifier pos:line="1" pos:column="39">const<pos:position pos:line="1" pos:column="44"/></specifier> <name pos:line="1" pos:column="45">unsigned<pos:position pos:line="1" pos:column="53"/></name> <name pos:line="1" pos:column="54">char<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">sha1<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="66">int<pos:position pos:line="1" pos:column="69"/></name></type> <name pos:line="1" pos:column="70">freshen<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="78"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">alternate_object_database<pos:position pos:line="3" pos:column="41"/></name></name> <modifier pos:line="3" pos:column="42">*<pos:position pos:line="3" pos:column="43"/></modifier></type><name pos:line="3" pos:column="43">alt<pos:position pos:line="3" pos:column="46"/></name></decl>;<pos:position pos:line="3" pos:column="47"/></decl_stmt>
	<expr_stmt><expr><call><name pos:line="4" pos:column="9">prepare_alt_odb<pos:position pos:line="4" pos:column="24"/></name><argument_list pos:line="4" pos:column="24">()<pos:position pos:line="4" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="27"/></expr_stmt>
	<for pos:line="5" pos:column="9">for <control pos:line="5" pos:column="13">(<init><expr><name pos:line="5" pos:column="14">alt<pos:position pos:line="5" pos:column="17"/></name> <operator pos:line="5" pos:column="18">=<pos:position pos:line="5" pos:column="19"/></operator> <name pos:line="5" pos:column="20">alt_odb_list<pos:position pos:line="5" pos:column="32"/></name></expr>;<pos:position pos:line="5" pos:column="33"/></init> <condition><expr><name pos:line="5" pos:column="34">alt<pos:position pos:line="5" pos:column="37"/></name></expr>;<pos:position pos:line="5" pos:column="38"/></condition> <incr><expr><name pos:line="5" pos:column="39">alt<pos:position pos:line="5" pos:column="42"/></name> <operator pos:line="5" pos:column="43">=<pos:position pos:line="5" pos:column="44"/></operator> <name><name pos:line="5" pos:column="45">alt<pos:position pos:line="5" pos:column="48"/></name><operator pos:line="5" pos:column="48">-&gt;<pos:position pos:line="5" pos:column="53"/></operator><name pos:line="5" pos:column="50">next<pos:position pos:line="5" pos:column="54"/></name></name></expr></incr>)<pos:position pos:line="5" pos:column="55"/></control> <block pos:line="5" pos:column="56">{
		<decl_stmt><decl><type><specifier pos:line="6" pos:column="17">const<pos:position pos:line="6" pos:column="22"/></specifier> <name pos:line="6" pos:column="23">char<pos:position pos:line="6" pos:column="27"/></name> <modifier pos:line="6" pos:column="28">*<pos:position pos:line="6" pos:column="29"/></modifier></type><name pos:line="6" pos:column="29">path<pos:position pos:line="6" pos:column="33"/></name> <init pos:line="6" pos:column="34">= <expr><call><name pos:line="6" pos:column="36">alt_sha1_path<pos:position pos:line="6" pos:column="49"/></name><argument_list pos:line="6" pos:column="49">(<argument><expr><name pos:line="6" pos:column="50">alt<pos:position pos:line="6" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="55">sha1<pos:position pos:line="6" pos:column="59"/></name></expr></argument>)<pos:position pos:line="6" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="61"/></decl_stmt>
		<if pos:line="7" pos:column="17">if <condition pos:line="7" pos:column="20">(<expr><call><name pos:line="7" pos:column="21">check_and_freshen_file<pos:position pos:line="7" pos:column="43"/></name><argument_list pos:line="7" pos:column="43">(<argument><expr><name pos:line="7" pos:column="44">path<pos:position pos:line="7" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="50">freshen<pos:position pos:line="7" pos:column="57"/></name></expr></argument>)<pos:position pos:line="7" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="59"/></condition><then pos:line="7" pos:column="59">
			<block type="pseudo"><return pos:line="8" pos:column="25">return <expr><literal type="number" pos:line="8" pos:column="32">1<pos:position pos:line="8" pos:column="33"/></literal></expr>;<pos:position pos:line="8" pos:column="34"/></return></block></then></if>
	}<pos:position pos:line="9" pos:column="10"/></block></for>
	<return pos:line="10" pos:column="9">return <expr><literal type="number" pos:line="10" pos:column="16">0<pos:position pos:line="10" pos:column="17"/></literal></expr>;<pos:position pos:line="10" pos:column="18"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

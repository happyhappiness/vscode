<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5906_git-2.13.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">module_list_compute<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">int<pos:position pos:line="1" pos:column="35"/></name></type> <name pos:line="1" pos:column="36">argc<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="42">const<pos:position pos:line="1" pos:column="47"/></specifier> <name pos:line="1" pos:column="48">char<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier><modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">argv<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>,
			       <parameter><decl><type><specifier pos:line="2" pos:column="32">const<pos:position pos:line="2" pos:column="37"/></specifier> <name pos:line="2" pos:column="38">char<pos:position pos:line="2" pos:column="42"/></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">prefix<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>,
			       <parameter><decl><type><name><name pos:line="3" pos:column="32">struct<pos:position pos:line="3" pos:column="38"/></name> <name pos:line="3" pos:column="39">pathspec<pos:position pos:line="3" pos:column="47"/></name></name> <modifier pos:line="3" pos:column="48">*<pos:position pos:line="3" pos:column="49"/></modifier></type><name pos:line="3" pos:column="49">pathspec<pos:position pos:line="3" pos:column="57"/></name></decl></parameter>,
			       <parameter><decl><type><name><name pos:line="4" pos:column="32">struct<pos:position pos:line="4" pos:column="38"/></name> <name pos:line="4" pos:column="39">module_list<pos:position pos:line="4" pos:column="50"/></name></name> <modifier pos:line="4" pos:column="51">*<pos:position pos:line="4" pos:column="52"/></modifier></type><name pos:line="4" pos:column="52">list<pos:position pos:line="4" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="57"/></parameter_list>
<block pos:line="5" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">i<pos:position pos:line="6" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="16">result<pos:position pos:line="6" pos:column="22"/></name> <init pos:line="6" pos:column="23">= <expr><literal type="number" pos:line="6" pos:column="25">0<pos:position pos:line="6" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">ps_matched<pos:position pos:line="7" pos:column="25"/></name> <init pos:line="7" pos:column="26">= <expr><name pos:line="7" pos:column="28">NULL<pos:position pos:line="7" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="33"/></decl_stmt>
	<expr_stmt><expr><call><name pos:line="8" pos:column="9">parse_pathspec<pos:position pos:line="8" pos:column="23"/></name><argument_list pos:line="8" pos:column="23">(<argument><expr><name pos:line="8" pos:column="24">pathspec<pos:position pos:line="8" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="34">0<pos:position pos:line="8" pos:column="35"/></literal></expr></argument>,
		       <argument><expr><name pos:line="9" pos:column="24">PATHSPEC_PREFER_FULL<pos:position pos:line="9" pos:column="44"/></name> <operator pos:line="9" pos:column="45">|<pos:position pos:line="9" pos:column="46"/></operator>
		       <name pos:line="10" pos:column="24">PATHSPEC_STRIP_SUBMODULE_SLASH_CHEAP<pos:position pos:line="10" pos:column="60"/></name></expr></argument>,
		       <argument><expr><name pos:line="11" pos:column="24">prefix<pos:position pos:line="11" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="32">argv<pos:position pos:line="11" pos:column="36"/></name></expr></argument>)<pos:position pos:line="11" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="38"/></expr_stmt>

	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name><name pos:line="13" pos:column="13">pathspec<pos:position pos:line="13" pos:column="21"/></name><operator pos:line="13" pos:column="21">-&gt;<pos:position pos:line="13" pos:column="26"/></operator><name pos:line="13" pos:column="23">nr<pos:position pos:line="13" pos:column="25"/></name></name></expr>)<pos:position pos:line="13" pos:column="26"/></condition><then pos:line="13" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="17">ps_matched<pos:position pos:line="14" pos:column="27"/></name> <operator pos:line="14" pos:column="28">=<pos:position pos:line="14" pos:column="29"/></operator> <call><name pos:line="14" pos:column="30">xcalloc<pos:position pos:line="14" pos:column="37"/></name><argument_list pos:line="14" pos:column="37">(<argument><expr><name><name pos:line="14" pos:column="38">pathspec<pos:position pos:line="14" pos:column="46"/></name><operator pos:line="14" pos:column="46">-&gt;<pos:position pos:line="14" pos:column="51"/></operator><name pos:line="14" pos:column="48">nr<pos:position pos:line="14" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="52">1<pos:position pos:line="14" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="55"/></expr_stmt></block></then></if>

	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><call><name pos:line="16" pos:column="13">read_cache<pos:position pos:line="16" pos:column="23"/></name><argument_list pos:line="16" pos:column="23">()<pos:position pos:line="16" pos:column="25"/></argument_list></call> <operator pos:line="16" pos:column="26">&lt;<pos:position pos:line="16" pos:column="30"/></operator> <literal type="number" pos:line="16" pos:column="28">0<pos:position pos:line="16" pos:column="29"/></literal></expr>)<pos:position pos:line="16" pos:column="30"/></condition><then pos:line="16" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="17">die<pos:position pos:line="17" pos:column="20"/></name><argument_list pos:line="17" pos:column="20">(<argument><expr><call><name pos:line="17" pos:column="21">_<pos:position pos:line="17" pos:column="22"/></name><argument_list pos:line="17" pos:column="22">(<argument><expr><literal type="string" pos:line="17" pos:column="23">"index file corrupt"<pos:position pos:line="17" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="46"/></expr_stmt></block></then></if>

	<for pos:line="19" pos:column="9">for <control pos:line="19" pos:column="13">(<init><expr><name pos:line="19" pos:column="14">i<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator> <literal type="number" pos:line="19" pos:column="18">0<pos:position pos:line="19" pos:column="19"/></literal></expr>;<pos:position pos:line="19" pos:column="20"/></init> <condition><expr><name pos:line="19" pos:column="21">i<pos:position pos:line="19" pos:column="22"/></name> <operator pos:line="19" pos:column="23">&lt;<pos:position pos:line="19" pos:column="27"/></operator> <name pos:line="19" pos:column="25">active_nr<pos:position pos:line="19" pos:column="34"/></name></expr>;<pos:position pos:line="19" pos:column="35"/></condition> <incr><expr><name pos:line="19" pos:column="36">i<pos:position pos:line="19" pos:column="37"/></name><operator pos:line="19" pos:column="37">++<pos:position pos:line="19" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="19" pos:column="40"/></control> <block pos:line="19" pos:column="41">{
		<decl_stmt><decl><type><specifier pos:line="20" pos:column="17">const<pos:position pos:line="20" pos:column="22"/></specifier> <name><name pos:line="20" pos:column="23">struct<pos:position pos:line="20" pos:column="29"/></name> <name pos:line="20" pos:column="30">cache_entry<pos:position pos:line="20" pos:column="41"/></name></name> <modifier pos:line="20" pos:column="42">*<pos:position pos:line="20" pos:column="43"/></modifier></type><name pos:line="20" pos:column="43">ce<pos:position pos:line="20" pos:column="45"/></name> <init pos:line="20" pos:column="46">= <expr><name><name pos:line="20" pos:column="48">active_cache<pos:position pos:line="20" pos:column="60"/></name><index pos:line="20" pos:column="60">[<expr><name pos:line="20" pos:column="61">i<pos:position pos:line="20" pos:column="62"/></name></expr>]<pos:position pos:line="20" pos:column="63"/></index></name></expr></init></decl>;<pos:position pos:line="20" pos:column="64"/></decl_stmt>

		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><operator pos:line="22" pos:column="21">!<pos:position pos:line="22" pos:column="22"/></operator><call><name pos:line="22" pos:column="22">match_pathspec<pos:position pos:line="22" pos:column="36"/></name><argument_list pos:line="22" pos:column="36">(<argument><expr><name pos:line="22" pos:column="37">pathspec<pos:position pos:line="22" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="47">ce<pos:position pos:line="22" pos:column="49"/></name><operator pos:line="22" pos:column="49">-&gt;<pos:position pos:line="22" pos:column="54"/></operator><name pos:line="22" pos:column="51">name<pos:position pos:line="22" pos:column="55"/></name></name></expr></argument>, <argument><expr><call><name pos:line="22" pos:column="57">ce_namelen<pos:position pos:line="22" pos:column="67"/></name><argument_list pos:line="22" pos:column="67">(<argument><expr><name pos:line="22" pos:column="68">ce<pos:position pos:line="22" pos:column="70"/></name></expr></argument>)<pos:position pos:line="22" pos:column="71"/></argument_list></call></expr></argument>,
				    <argument><expr><literal type="number" pos:line="23" pos:column="37">0<pos:position pos:line="23" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="40">ps_matched<pos:position pos:line="23" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="52">1<pos:position pos:line="23" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="54"/></argument_list></call> <operator pos:line="23" pos:column="55">||<pos:position pos:line="23" pos:column="57"/></operator>
		    <operator pos:line="24" pos:column="21">!<pos:position pos:line="24" pos:column="22"/></operator><call><name pos:line="24" pos:column="22">S_ISGITLINK<pos:position pos:line="24" pos:column="33"/></name><argument_list pos:line="24" pos:column="33">(<argument><expr><name><name pos:line="24" pos:column="34">ce<pos:position pos:line="24" pos:column="36"/></name><operator pos:line="24" pos:column="36">-&gt;<pos:position pos:line="24" pos:column="41"/></operator><name pos:line="24" pos:column="38">ce_mode<pos:position pos:line="24" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="47"/></condition><then pos:line="24" pos:column="47">
			<block type="pseudo"><continue pos:line="25" pos:column="25">continue;<pos:position pos:line="25" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><call><name pos:line="27" pos:column="17">ALLOC_GROW<pos:position pos:line="27" pos:column="27"/></name><argument_list pos:line="27" pos:column="27">(<argument><expr><name><name pos:line="27" pos:column="28">list<pos:position pos:line="27" pos:column="32"/></name><operator pos:line="27" pos:column="32">-&gt;<pos:position pos:line="27" pos:column="37"/></operator><name pos:line="27" pos:column="34">entries<pos:position pos:line="27" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="43">list<pos:position pos:line="27" pos:column="47"/></name><operator pos:line="27" pos:column="47">-&gt;<pos:position pos:line="27" pos:column="52"/></operator><name pos:line="27" pos:column="49">nr<pos:position pos:line="27" pos:column="51"/></name></name> <operator pos:line="27" pos:column="52">+<pos:position pos:line="27" pos:column="53"/></operator> <literal type="number" pos:line="27" pos:column="54">1<pos:position pos:line="27" pos:column="55"/></literal></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="57">list<pos:position pos:line="27" pos:column="61"/></name><operator pos:line="27" pos:column="61">-&gt;<pos:position pos:line="27" pos:column="66"/></operator><name pos:line="27" pos:column="63">alloc<pos:position pos:line="27" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="70"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="28" pos:column="17">list<pos:position pos:line="28" pos:column="21"/></name><operator pos:line="28" pos:column="21">-&gt;<pos:position pos:line="28" pos:column="26"/></operator><name pos:line="28" pos:column="23">entries<pos:position pos:line="28" pos:column="30"/></name><index pos:line="28" pos:column="30">[<expr><name><name pos:line="28" pos:column="31">list<pos:position pos:line="28" pos:column="35"/></name><operator pos:line="28" pos:column="35">-&gt;<pos:position pos:line="28" pos:column="40"/></operator><name pos:line="28" pos:column="37">nr<pos:position pos:line="28" pos:column="39"/></name></name><operator pos:line="28" pos:column="39">++<pos:position pos:line="28" pos:column="41"/></operator></expr>]<pos:position pos:line="28" pos:column="42"/></index></name> <operator pos:line="28" pos:column="43">=<pos:position pos:line="28" pos:column="44"/></operator> <name pos:line="28" pos:column="45">ce<pos:position pos:line="28" pos:column="47"/></name></expr>;<pos:position pos:line="28" pos:column="48"/></expr_stmt>
		<while pos:line="29" pos:column="17">while <condition pos:line="29" pos:column="23">(<expr><name pos:line="29" pos:column="24">i<pos:position pos:line="29" pos:column="25"/></name> <operator pos:line="29" pos:column="26">+<pos:position pos:line="29" pos:column="27"/></operator> <literal type="number" pos:line="29" pos:column="28">1<pos:position pos:line="29" pos:column="29"/></literal> <operator pos:line="29" pos:column="30">&lt;<pos:position pos:line="29" pos:column="34"/></operator> <name pos:line="29" pos:column="32">active_nr<pos:position pos:line="29" pos:column="41"/></name> <operator pos:line="29" pos:column="42">&amp;&amp;<pos:position pos:line="29" pos:column="52"/></operator>
		       <operator pos:line="30" pos:column="24">!<pos:position pos:line="30" pos:column="25"/></operator><call><name pos:line="30" pos:column="25">strcmp<pos:position pos:line="30" pos:column="31"/></name><argument_list pos:line="30" pos:column="31">(<argument><expr><name><name pos:line="30" pos:column="32">ce<pos:position pos:line="30" pos:column="34"/></name><operator pos:line="30" pos:column="34">-&gt;<pos:position pos:line="30" pos:column="39"/></operator><name pos:line="30" pos:column="36">name<pos:position pos:line="30" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="42">active_cache<pos:position pos:line="30" pos:column="54"/></name><index pos:line="30" pos:column="54">[<expr><name pos:line="30" pos:column="55">i<pos:position pos:line="30" pos:column="56"/></name> <operator pos:line="30" pos:column="57">+<pos:position pos:line="30" pos:column="58"/></operator> <literal type="number" pos:line="30" pos:column="59">1<pos:position pos:line="30" pos:column="60"/></literal></expr>]<pos:position pos:line="30" pos:column="61"/></index></name><operator pos:line="30" pos:column="61">-&gt;<pos:position pos:line="30" pos:column="66"/></operator><name pos:line="30" pos:column="63">name<pos:position pos:line="30" pos:column="67"/></name></expr></argument>)<pos:position pos:line="30" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="69"/></condition>
			<comment type="block" pos:line="31" pos:column="25">/*
			 * Skip entries with the same name in different stages
			 * to make sure an entry is returned only once.
			 */</comment>
			<block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="25">i<pos:position pos:line="35" pos:column="26"/></name><operator pos:line="35" pos:column="26">++<pos:position pos:line="35" pos:column="28"/></operator></expr>;<pos:position pos:line="35" pos:column="29"/></expr_stmt></block></while>
	}<pos:position pos:line="36" pos:column="10"/></block></for>

	<if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><name pos:line="38" pos:column="13">ps_matched<pos:position pos:line="38" pos:column="23"/></name> <operator pos:line="38" pos:column="24">&amp;&amp;<pos:position pos:line="38" pos:column="34"/></operator> <call><name pos:line="38" pos:column="27">report_path_error<pos:position pos:line="38" pos:column="44"/></name><argument_list pos:line="38" pos:column="44">(<argument><expr><name pos:line="38" pos:column="45">ps_matched<pos:position pos:line="38" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="57">pathspec<pos:position pos:line="38" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="67">prefix<pos:position pos:line="38" pos:column="73"/></name></expr></argument>)<pos:position pos:line="38" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="75"/></condition><then pos:line="38" pos:column="75">
		<block type="pseudo"><expr_stmt><expr><name pos:line="39" pos:column="17">result<pos:position pos:line="39" pos:column="23"/></name> <operator pos:line="39" pos:column="24">=<pos:position pos:line="39" pos:column="25"/></operator> <operator pos:line="39" pos:column="26">-<pos:position pos:line="39" pos:column="27"/></operator><literal type="number" pos:line="39" pos:column="27">1<pos:position pos:line="39" pos:column="28"/></literal></expr>;<pos:position pos:line="39" pos:column="29"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="41" pos:column="9">free<pos:position pos:line="41" pos:column="13"/></name><argument_list pos:line="41" pos:column="13">(<argument><expr><name pos:line="41" pos:column="14">ps_matched<pos:position pos:line="41" pos:column="24"/></name></expr></argument>)<pos:position pos:line="41" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="26"/></expr_stmt>

	<return pos:line="43" pos:column="9">return <expr><name pos:line="43" pos:column="16">result<pos:position pos:line="43" pos:column="22"/></name></expr>;<pos:position pos:line="43" pos:column="23"/></return>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

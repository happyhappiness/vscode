<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2175_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">link_alt_odb_entries<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><specifier pos:line="1" pos:column="34">const<pos:position pos:line="1" pos:column="39"/></specifier> <name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">alt<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">int<pos:position pos:line="1" pos:column="54"/></name></type> <name pos:line="1" pos:column="55">len<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="60">int<pos:position pos:line="1" pos:column="63"/></name></type> <name pos:line="1" pos:column="64">sep<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>,
				 <parameter><decl><type><specifier pos:line="2" pos:column="34">const<pos:position pos:line="2" pos:column="39"/></specifier> <name pos:line="2" pos:column="40">char<pos:position pos:line="2" pos:column="44"/></name> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="46">relative_base<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="61">int<pos:position pos:line="2" pos:column="64"/></name></type> <name pos:line="2" pos:column="65">depth<pos:position pos:line="2" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="71"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">strbuf<pos:position pos:line="4" pos:column="22"/></name></name></type> <name pos:line="4" pos:column="23">objdirbuf<pos:position pos:line="4" pos:column="32"/></name> <init pos:line="4" pos:column="33">= <expr><name pos:line="4" pos:column="35">STRBUF_INIT<pos:position pos:line="4" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">strbuf<pos:position pos:line="5" pos:column="22"/></name></name></type> <name pos:line="5" pos:column="23">entry<pos:position pos:line="5" pos:column="28"/></name> <init pos:line="5" pos:column="29">= <expr><name pos:line="5" pos:column="31">STRBUF_INIT<pos:position pos:line="5" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="43"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">depth<pos:position pos:line="7" pos:column="18"/></name> <operator pos:line="7" pos:column="19">&gt;<pos:position pos:line="7" pos:column="23"/></operator> <literal type="number" pos:line="7" pos:column="21">5<pos:position pos:line="7" pos:column="22"/></literal></expr>)<pos:position pos:line="7" pos:column="23"/></condition><then pos:line="7" pos:column="23"> <block pos:line="7" pos:column="24">{
		<expr_stmt><expr><call><name pos:line="8" pos:column="17">error<pos:position pos:line="8" pos:column="22"/></name><argument_list pos:line="8" pos:column="22">(<argument><expr><literal type="string" pos:line="8" pos:column="23">"%s: ignoring alternate object stores, nesting too deep."<pos:position pos:line="8" pos:column="80"/></literal></expr></argument>,
				<argument><expr><name pos:line="9" pos:column="33">relative_base<pos:position pos:line="9" pos:column="46"/></name></expr></argument>)<pos:position pos:line="9" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="48"/></expr_stmt>
		<return pos:line="10" pos:column="17">return;<pos:position pos:line="10" pos:column="24"/></return>
	}<pos:position pos:line="11" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="13" pos:column="9">strbuf_add_absolute_path<pos:position pos:line="13" pos:column="33"/></name><argument_list pos:line="13" pos:column="33">(<argument><expr><operator pos:line="13" pos:column="34">&amp;<pos:position pos:line="13" pos:column="39"/></operator><name pos:line="13" pos:column="35">objdirbuf<pos:position pos:line="13" pos:column="44"/></name></expr></argument>, <argument><expr><call><name pos:line="13" pos:column="46">get_object_directory<pos:position pos:line="13" pos:column="66"/></name><argument_list pos:line="13" pos:column="66">()<pos:position pos:line="13" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="70"/></expr_stmt>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><call><name pos:line="14" pos:column="13">strbuf_normalize_path<pos:position pos:line="14" pos:column="34"/></name><argument_list pos:line="14" pos:column="34">(<argument><expr><operator pos:line="14" pos:column="35">&amp;<pos:position pos:line="14" pos:column="40"/></operator><name pos:line="14" pos:column="36">objdirbuf<pos:position pos:line="14" pos:column="45"/></name></expr></argument>)<pos:position pos:line="14" pos:column="46"/></argument_list></call> <operator pos:line="14" pos:column="47">&lt;<pos:position pos:line="14" pos:column="51"/></operator> <literal type="number" pos:line="14" pos:column="49">0<pos:position pos:line="14" pos:column="50"/></literal></expr>)<pos:position pos:line="14" pos:column="51"/></condition><then pos:line="14" pos:column="51">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="17">die<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">(<argument><expr><literal type="string" pos:line="15" pos:column="21">"unable to normalize object directory: %s"<pos:position pos:line="15" pos:column="63"/></literal></expr></argument>,
		    <argument><expr><name><name pos:line="16" pos:column="21">objdirbuf<pos:position pos:line="16" pos:column="30"/></name><operator pos:line="16" pos:column="30">.<pos:position pos:line="16" pos:column="31"/></operator><name pos:line="16" pos:column="31">buf<pos:position pos:line="16" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="36"/></expr_stmt></block></then></if>

	<while pos:line="18" pos:column="9">while <condition pos:line="18" pos:column="15">(<expr><operator pos:line="18" pos:column="16">*<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="17">alt<pos:position pos:line="18" pos:column="20"/></name></expr>)<pos:position pos:line="18" pos:column="21"/></condition> <block pos:line="18" pos:column="22">{
		<expr_stmt><expr><name pos:line="19" pos:column="17">alt<pos:position pos:line="19" pos:column="20"/></name> <operator pos:line="19" pos:column="21">=<pos:position pos:line="19" pos:column="22"/></operator> <call><name pos:line="19" pos:column="23">parse_alt_odb_entry<pos:position pos:line="19" pos:column="42"/></name><argument_list pos:line="19" pos:column="42">(<argument><expr><name pos:line="19" pos:column="43">alt<pos:position pos:line="19" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="48">sep<pos:position pos:line="19" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="53">&amp;<pos:position pos:line="19" pos:column="58"/></operator><name pos:line="19" pos:column="54">entry<pos:position pos:line="19" pos:column="59"/></name></expr></argument>)<pos:position pos:line="19" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="61"/></expr_stmt>
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><operator pos:line="20" pos:column="21">!<pos:position pos:line="20" pos:column="22"/></operator><name><name pos:line="20" pos:column="22">entry<pos:position pos:line="20" pos:column="27"/></name><operator pos:line="20" pos:column="27">.<pos:position pos:line="20" pos:column="28"/></operator><name pos:line="20" pos:column="28">len<pos:position pos:line="20" pos:column="31"/></name></name></expr>)<pos:position pos:line="20" pos:column="32"/></condition><then pos:line="20" pos:column="32">
			<block type="pseudo"><continue pos:line="21" pos:column="25">continue;<pos:position pos:line="21" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><call><name pos:line="22" pos:column="17">link_alt_odb_entry<pos:position pos:line="22" pos:column="35"/></name><argument_list pos:line="22" pos:column="35">(<argument><expr><name><name pos:line="22" pos:column="36">entry<pos:position pos:line="22" pos:column="41"/></name><operator pos:line="22" pos:column="41">.<pos:position pos:line="22" pos:column="42"/></operator><name pos:line="22" pos:column="42">buf<pos:position pos:line="22" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="47">relative_base<pos:position pos:line="22" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="62">depth<pos:position pos:line="22" pos:column="67"/></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="69">objdirbuf<pos:position pos:line="22" pos:column="78"/></name><operator pos:line="22" pos:column="78">.<pos:position pos:line="22" pos:column="79"/></operator><name pos:line="22" pos:column="79">buf<pos:position pos:line="22" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="84"/></expr_stmt>
	}<pos:position pos:line="23" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="24" pos:column="9">strbuf_release<pos:position pos:line="24" pos:column="23"/></name><argument_list pos:line="24" pos:column="23">(<argument><expr><operator pos:line="24" pos:column="24">&amp;<pos:position pos:line="24" pos:column="29"/></operator><name pos:line="24" pos:column="25">entry<pos:position pos:line="24" pos:column="30"/></name></expr></argument>)<pos:position pos:line="24" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="25" pos:column="9">strbuf_release<pos:position pos:line="25" pos:column="23"/></name><argument_list pos:line="25" pos:column="23">(<argument><expr><operator pos:line="25" pos:column="24">&amp;<pos:position pos:line="25" pos:column="29"/></operator><name pos:line="25" pos:column="25">objdirbuf<pos:position pos:line="25" pos:column="34"/></name></expr></argument>)<pos:position pos:line="25" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="36"/></expr_stmt>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2754_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">usage_argh<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><specifier pos:line="1" pos:column="23">const<pos:position pos:line="1" pos:column="28"/></specifier> <name><name pos:line="1" pos:column="29">struct<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">option<pos:position pos:line="1" pos:column="42"/></name></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">opts<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">FILE<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">outfile<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">s<pos:position pos:line="3" pos:column="22"/></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">literal<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><operator pos:line="4" pos:column="23">(<pos:position pos:line="4" pos:column="24"/></operator><name><name pos:line="4" pos:column="24">opts<pos:position pos:line="4" pos:column="28"/></name><operator pos:line="4" pos:column="28">-&gt;<pos:position pos:line="4" pos:column="33"/></operator><name pos:line="4" pos:column="30">flags<pos:position pos:line="4" pos:column="35"/></name></name> <operator pos:line="4" pos:column="36">&amp;<pos:position pos:line="4" pos:column="41"/></operator> <name pos:line="4" pos:column="38">PARSE_OPT_LITERAL_ARGHELP<pos:position pos:line="4" pos:column="63"/></name><operator pos:line="4" pos:column="63">)<pos:position pos:line="4" pos:column="64"/></operator> <operator pos:line="4" pos:column="65">||<pos:position pos:line="4" pos:column="67"/></operator> <operator pos:line="4" pos:column="68">!<pos:position pos:line="4" pos:column="69"/></operator><name><name pos:line="4" pos:column="69">opts<pos:position pos:line="4" pos:column="73"/></name><operator pos:line="4" pos:column="73">-&gt;<pos:position pos:line="4" pos:column="78"/></operator><name pos:line="4" pos:column="75">argh<pos:position pos:line="4" pos:column="79"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="80"/></decl_stmt>
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name><name pos:line="5" pos:column="13">opts<pos:position pos:line="5" pos:column="17"/></name><operator pos:line="5" pos:column="17">-&gt;<pos:position pos:line="5" pos:column="22"/></operator><name pos:line="5" pos:column="19">flags<pos:position pos:line="5" pos:column="24"/></name></name> <operator pos:line="5" pos:column="25">&amp;<pos:position pos:line="5" pos:column="30"/></operator> <name pos:line="5" pos:column="27">PARSE_OPT_OPTARG<pos:position pos:line="5" pos:column="43"/></name></expr>)<pos:position pos:line="5" pos:column="44"/></condition><then pos:line="5" pos:column="44">
		<block type="pseudo"><if pos:line="6" pos:column="17">if <condition pos:line="6" pos:column="20">(<expr><name><name pos:line="6" pos:column="21">opts<pos:position pos:line="6" pos:column="25"/></name><operator pos:line="6" pos:column="25">-&gt;<pos:position pos:line="6" pos:column="30"/></operator><name pos:line="6" pos:column="27">long_name<pos:position pos:line="6" pos:column="36"/></name></name></expr>)<pos:position pos:line="6" pos:column="37"/></condition><then pos:line="6" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><name pos:line="7" pos:column="25">s<pos:position pos:line="7" pos:column="26"/></name> <operator pos:line="7" pos:column="27">=<pos:position pos:line="7" pos:column="28"/></operator> <ternary><condition><expr><name pos:line="7" pos:column="29">literal<pos:position pos:line="7" pos:column="36"/></name></expr> ?<pos:position pos:line="7" pos:column="38"/></condition><then pos:line="7" pos:column="38"> <expr><literal type="string" pos:line="7" pos:column="39">"[=%s]"<pos:position pos:line="7" pos:column="46"/></literal></expr> <pos:position pos:line="7" pos:column="47"/></then><else pos:line="7" pos:column="47">: <expr><literal type="string" pos:line="7" pos:column="49">"[=&lt;%s&gt;]"<pos:position pos:line="7" pos:column="64"/></literal></expr></else></ternary></expr>;<pos:position pos:line="7" pos:column="59"/></expr_stmt></block></then>
		<else pos:line="8" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="25">s<pos:position pos:line="9" pos:column="26"/></name> <operator pos:line="9" pos:column="27">=<pos:position pos:line="9" pos:column="28"/></operator> <ternary><condition><expr><name pos:line="9" pos:column="29">literal<pos:position pos:line="9" pos:column="36"/></name></expr> ?<pos:position pos:line="9" pos:column="38"/></condition><then pos:line="9" pos:column="38"> <expr><literal type="string" pos:line="9" pos:column="39">"[%s]"<pos:position pos:line="9" pos:column="45"/></literal></expr> <pos:position pos:line="9" pos:column="46"/></then><else pos:line="9" pos:column="46">: <expr><literal type="string" pos:line="9" pos:column="48">"[&lt;%s&gt;]"<pos:position pos:line="9" pos:column="62"/></literal></expr></else></ternary></expr>;<pos:position pos:line="9" pos:column="57"/></expr_stmt></block></else></if></block></then>
	<else pos:line="10" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="17">s<pos:position pos:line="11" pos:column="18"/></name> <operator pos:line="11" pos:column="19">=<pos:position pos:line="11" pos:column="20"/></operator> <ternary><condition><expr><name pos:line="11" pos:column="21">literal<pos:position pos:line="11" pos:column="28"/></name></expr> ?<pos:position pos:line="11" pos:column="30"/></condition><then pos:line="11" pos:column="30"> <expr><literal type="string" pos:line="11" pos:column="31">" %s"<pos:position pos:line="11" pos:column="36"/></literal></expr> <pos:position pos:line="11" pos:column="37"/></then><else pos:line="11" pos:column="37">: <expr><literal type="string" pos:line="11" pos:column="39">" &lt;%s&gt;"<pos:position pos:line="11" pos:column="52"/></literal></expr></else></ternary></expr>;<pos:position pos:line="11" pos:column="47"/></expr_stmt></block></else></if>
	<return pos:line="12" pos:column="9">return <expr><call><name pos:line="12" pos:column="16">utf8_fprintf<pos:position pos:line="12" pos:column="28"/></name><argument_list pos:line="12" pos:column="28">(<argument><expr><name pos:line="12" pos:column="29">outfile<pos:position pos:line="12" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="38">s<pos:position pos:line="12" pos:column="39"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="12" pos:column="41">opts<pos:position pos:line="12" pos:column="45"/></name><operator pos:line="12" pos:column="45">-&gt;<pos:position pos:line="12" pos:column="50"/></operator><name pos:line="12" pos:column="47">argh<pos:position pos:line="12" pos:column="51"/></name></name></expr> ?<pos:position pos:line="12" pos:column="53"/></condition><then pos:line="12" pos:column="53"> <expr><call><name pos:line="12" pos:column="54">_<pos:position pos:line="12" pos:column="55"/></name><argument_list pos:line="12" pos:column="55">(<argument><expr><name><name pos:line="12" pos:column="56">opts<pos:position pos:line="12" pos:column="60"/></name><operator pos:line="12" pos:column="60">-&gt;<pos:position pos:line="12" pos:column="65"/></operator><name pos:line="12" pos:column="62">argh<pos:position pos:line="12" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="67"/></argument_list></call></expr> <pos:position pos:line="12" pos:column="68"/></then><else pos:line="12" pos:column="68">: <expr><call><name pos:line="12" pos:column="70">_<pos:position pos:line="12" pos:column="71"/></name><argument_list pos:line="12" pos:column="71">(<argument><expr><literal type="string" pos:line="12" pos:column="72">"..."<pos:position pos:line="12" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="78"/></argument_list></call></expr></else></ternary></expr></argument>)<pos:position pos:line="12" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="80"/></return>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

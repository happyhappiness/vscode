<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_540_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">refname_atom_parser<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><specifier pos:line="1" pos:column="33">const<pos:position pos:line="1" pos:column="38"/></specifier> <name><name pos:line="1" pos:column="39">struct<pos:position pos:line="1" pos:column="45"/></name> <name pos:line="1" pos:column="46">ref_format<pos:position pos:line="1" pos:column="56"/></name></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">format<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="66">struct<pos:position pos:line="1" pos:column="72"/></name> <name pos:line="1" pos:column="73">used_atom<pos:position pos:line="1" pos:column="82"/></name></name> <modifier pos:line="1" pos:column="83">*<pos:position pos:line="1" pos:column="84"/></modifier></type><name pos:line="1" pos:column="84">atom<pos:position pos:line="1" pos:column="88"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="90">const<pos:position pos:line="1" pos:column="95"/></specifier> <name pos:line="1" pos:column="96">char<pos:position pos:line="1" pos:column="100"/></name> <modifier pos:line="1" pos:column="101">*<pos:position pos:line="1" pos:column="102"/></modifier></type><name pos:line="1" pos:column="102">arg<pos:position pos:line="1" pos:column="105"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="106"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="3" pos:column="9">refname_atom_parser_internal<pos:position pos:line="3" pos:column="37"/></name><argument_list pos:line="3" pos:column="37">(<argument><expr><operator pos:line="3" pos:column="38">&amp;<pos:position pos:line="3" pos:column="43"/></operator><name><name pos:line="3" pos:column="39">atom<pos:position pos:line="3" pos:column="43"/></name><operator pos:line="3" pos:column="43">-&gt;<pos:position pos:line="3" pos:column="48"/></operator><name pos:line="3" pos:column="45">u<pos:position pos:line="3" pos:column="46"/></name><operator pos:line="3" pos:column="46">.<pos:position pos:line="3" pos:column="47"/></operator><name pos:line="3" pos:column="47">refname<pos:position pos:line="3" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="56">arg<pos:position pos:line="3" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="3" pos:column="61">atom<pos:position pos:line="3" pos:column="65"/></name><operator pos:line="3" pos:column="65">-&gt;<pos:position pos:line="3" pos:column="70"/></operator><name pos:line="3" pos:column="67">name<pos:position pos:line="3" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="3" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="73"/></expr_stmt>
}<pos:position pos:line="4" pos:column="2"/></block></function></unit>

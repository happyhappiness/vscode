<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_223_git-2.4.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">rebuild_existing_bitmaps<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name><name pos:line="1" pos:column="30">struct<pos:position pos:line="1" pos:column="36"/></name> <name pos:line="1" pos:column="37">packing_data<pos:position pos:line="1" pos:column="49"/></name></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">mapping<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>,
			     <parameter><decl><type><name pos:line="2" pos:column="30">khash_sha1<pos:position pos:line="2" pos:column="40"/></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">reused_bitmaps<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>,
			     <parameter><decl><type><name pos:line="3" pos:column="30">int<pos:position pos:line="3" pos:column="33"/></name></type> <name pos:line="3" pos:column="34">show_progress<pos:position pos:line="3" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="48"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">uint32_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">i<pos:position pos:line="5" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="21">num_objects<pos:position pos:line="5" pos:column="32"/></name></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">uint32_t<pos:position pos:line="6" pos:column="17"/></name> <modifier pos:line="6" pos:column="18">*<pos:position pos:line="6" pos:column="19"/></modifier></type><name pos:line="6" pos:column="19">reposition<pos:position pos:line="6" pos:column="29"/></name></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">bitmap<pos:position pos:line="7" pos:column="22"/></name></name> <modifier pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></modifier></type><name pos:line="7" pos:column="24">rebuild<pos:position pos:line="7" pos:column="31"/></name></decl>;<pos:position pos:line="7" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">stored_bitmap<pos:position pos:line="8" pos:column="29"/></name></name> <modifier pos:line="8" pos:column="30">*<pos:position pos:line="8" pos:column="31"/></modifier></type><name pos:line="8" pos:column="31">stored<pos:position pos:line="8" pos:column="37"/></name></decl>;<pos:position pos:line="8" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">progress<pos:position pos:line="9" pos:column="24"/></name></name> <modifier pos:line="9" pos:column="25">*<pos:position pos:line="9" pos:column="26"/></modifier></type><name pos:line="9" pos:column="26">progress<pos:position pos:line="9" pos:column="34"/></name> <init pos:line="9" pos:column="35">= <expr><name pos:line="9" pos:column="37">NULL<pos:position pos:line="9" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="42"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="11" pos:column="9">khiter_t<pos:position pos:line="11" pos:column="17"/></name></type> <name pos:line="11" pos:column="18">hash_pos<pos:position pos:line="11" pos:column="26"/></name></decl>;<pos:position pos:line="11" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">int<pos:position pos:line="12" pos:column="12"/></name></type> <name pos:line="12" pos:column="13">hash_ret<pos:position pos:line="12" pos:column="21"/></name></decl>;<pos:position pos:line="12" pos:column="22"/></decl_stmt>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><call><name pos:line="14" pos:column="13">prepare_bitmap_git<pos:position pos:line="14" pos:column="31"/></name><argument_list pos:line="14" pos:column="31">()<pos:position pos:line="14" pos:column="33"/></argument_list></call> <operator pos:line="14" pos:column="34">&lt;<pos:position pos:line="14" pos:column="38"/></operator> <literal type="number" pos:line="14" pos:column="36">0<pos:position pos:line="14" pos:column="37"/></literal></expr>)<pos:position pos:line="14" pos:column="38"/></condition><then pos:line="14" pos:column="38">
		<block type="pseudo"><return pos:line="15" pos:column="17">return <expr><operator pos:line="15" pos:column="24">-<pos:position pos:line="15" pos:column="25"/></operator><literal type="number" pos:line="15" pos:column="25">1<pos:position pos:line="15" pos:column="26"/></literal></expr>;<pos:position pos:line="15" pos:column="27"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="17" pos:column="9">num_objects<pos:position pos:line="17" pos:column="20"/></name> <operator pos:line="17" pos:column="21">=<pos:position pos:line="17" pos:column="22"/></operator> <name><name pos:line="17" pos:column="23">bitmap_git<pos:position pos:line="17" pos:column="33"/></name><operator pos:line="17" pos:column="33">.<pos:position pos:line="17" pos:column="34"/></operator><name pos:line="17" pos:column="34">pack<pos:position pos:line="17" pos:column="38"/></name><operator pos:line="17" pos:column="38">-&gt;<pos:position pos:line="17" pos:column="43"/></operator><name pos:line="17" pos:column="40">num_objects<pos:position pos:line="17" pos:column="51"/></name></name></expr>;<pos:position pos:line="17" pos:column="52"/></expr_stmt>
	<expr_stmt><expr><name pos:line="18" pos:column="9">reposition<pos:position pos:line="18" pos:column="19"/></name> <operator pos:line="18" pos:column="20">=<pos:position pos:line="18" pos:column="21"/></operator> <call><name pos:line="18" pos:column="22">xcalloc<pos:position pos:line="18" pos:column="29"/></name><argument_list pos:line="18" pos:column="29">(<argument><expr><name pos:line="18" pos:column="30">num_objects<pos:position pos:line="18" pos:column="41"/></name></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="43">sizeof<argument_list pos:line="18" pos:column="49">(<argument><expr><name pos:line="18" pos:column="50">uint32_t<pos:position pos:line="18" pos:column="58"/></name></expr></argument>)<pos:position pos:line="18" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="18" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="61"/></expr_stmt>

	<for pos:line="20" pos:column="9">for <control pos:line="20" pos:column="13">(<init><expr><name pos:line="20" pos:column="14">i<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">=<pos:position pos:line="20" pos:column="17"/></operator> <literal type="number" pos:line="20" pos:column="18">0<pos:position pos:line="20" pos:column="19"/></literal></expr>;<pos:position pos:line="20" pos:column="20"/></init> <condition><expr><name pos:line="20" pos:column="21">i<pos:position pos:line="20" pos:column="22"/></name> <operator pos:line="20" pos:column="23">&lt;<pos:position pos:line="20" pos:column="27"/></operator> <name pos:line="20" pos:column="25">num_objects<pos:position pos:line="20" pos:column="36"/></name></expr>;<pos:position pos:line="20" pos:column="37"/></condition> <incr><expr><operator pos:line="20" pos:column="38">++<pos:position pos:line="20" pos:column="40"/></operator><name pos:line="20" pos:column="40">i<pos:position pos:line="20" pos:column="41"/></name></expr></incr>)<pos:position pos:line="20" pos:column="42"/></control> <block pos:line="20" pos:column="43">{
		<decl_stmt><decl><type><specifier pos:line="21" pos:column="17">const<pos:position pos:line="21" pos:column="22"/></specifier> <name pos:line="21" pos:column="23">unsigned<pos:position pos:line="21" pos:column="31"/></name> <name pos:line="21" pos:column="32">char<pos:position pos:line="21" pos:column="36"/></name> <modifier pos:line="21" pos:column="37">*<pos:position pos:line="21" pos:column="38"/></modifier></type><name pos:line="21" pos:column="38">sha1<pos:position pos:line="21" pos:column="42"/></name></decl>;<pos:position pos:line="21" pos:column="43"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="22" pos:column="17">struct<pos:position pos:line="22" pos:column="23"/></name> <name pos:line="22" pos:column="24">revindex_entry<pos:position pos:line="22" pos:column="38"/></name></name> <modifier pos:line="22" pos:column="39">*<pos:position pos:line="22" pos:column="40"/></modifier></type><name pos:line="22" pos:column="40">entry<pos:position pos:line="22" pos:column="45"/></name></decl>;<pos:position pos:line="22" pos:column="46"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="23" pos:column="17">struct<pos:position pos:line="23" pos:column="23"/></name> <name pos:line="23" pos:column="24">object_entry<pos:position pos:line="23" pos:column="36"/></name></name> <modifier pos:line="23" pos:column="37">*<pos:position pos:line="23" pos:column="38"/></modifier></type><name pos:line="23" pos:column="38">oe<pos:position pos:line="23" pos:column="40"/></name></decl>;<pos:position pos:line="23" pos:column="41"/></decl_stmt>

		<expr_stmt><expr><name pos:line="25" pos:column="17">entry<pos:position pos:line="25" pos:column="22"/></name> <operator pos:line="25" pos:column="23">=<pos:position pos:line="25" pos:column="24"/></operator> <operator pos:line="25" pos:column="25">&amp;<pos:position pos:line="25" pos:column="30"/></operator><name><name pos:line="25" pos:column="26">bitmap_git<pos:position pos:line="25" pos:column="36"/></name><operator pos:line="25" pos:column="36">.<pos:position pos:line="25" pos:column="37"/></operator><name pos:line="25" pos:column="37">reverse_index<pos:position pos:line="25" pos:column="50"/></name><operator pos:line="25" pos:column="50">-&gt;<pos:position pos:line="25" pos:column="55"/></operator><name pos:line="25" pos:column="52">revindex<pos:position pos:line="25" pos:column="60"/></name><index pos:line="25" pos:column="60">[<expr><name pos:line="25" pos:column="61">i<pos:position pos:line="25" pos:column="62"/></name></expr>]<pos:position pos:line="25" pos:column="63"/></index></name></expr>;<pos:position pos:line="25" pos:column="64"/></expr_stmt>
		<expr_stmt><expr><name pos:line="26" pos:column="17">sha1<pos:position pos:line="26" pos:column="21"/></name> <operator pos:line="26" pos:column="22">=<pos:position pos:line="26" pos:column="23"/></operator> <call><name pos:line="26" pos:column="24">nth_packed_object_sha1<pos:position pos:line="26" pos:column="46"/></name><argument_list pos:line="26" pos:column="46">(<argument><expr><name><name pos:line="26" pos:column="47">bitmap_git<pos:position pos:line="26" pos:column="57"/></name><operator pos:line="26" pos:column="57">.<pos:position pos:line="26" pos:column="58"/></operator><name pos:line="26" pos:column="58">pack<pos:position pos:line="26" pos:column="62"/></name></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="64">entry<pos:position pos:line="26" pos:column="69"/></name><operator pos:line="26" pos:column="69">-&gt;<pos:position pos:line="26" pos:column="74"/></operator><name pos:line="26" pos:column="71">nr<pos:position pos:line="26" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="75"/></expr_stmt>
		<expr_stmt><expr><name pos:line="27" pos:column="17">oe<pos:position pos:line="27" pos:column="19"/></name> <operator pos:line="27" pos:column="20">=<pos:position pos:line="27" pos:column="21"/></operator> <call><name pos:line="27" pos:column="22">packlist_find<pos:position pos:line="27" pos:column="35"/></name><argument_list pos:line="27" pos:column="35">(<argument><expr><name pos:line="27" pos:column="36">mapping<pos:position pos:line="27" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="45">sha1<pos:position pos:line="27" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="51">NULL<pos:position pos:line="27" pos:column="55"/></name></expr></argument>)<pos:position pos:line="27" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="57"/></expr_stmt>

		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><name pos:line="29" pos:column="21">oe<pos:position pos:line="29" pos:column="23"/></name></expr>)<pos:position pos:line="29" pos:column="24"/></condition><then pos:line="29" pos:column="24">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="30" pos:column="25">reposition<pos:position pos:line="30" pos:column="35"/></name><index pos:line="30" pos:column="35">[<expr><name pos:line="30" pos:column="36">i<pos:position pos:line="30" pos:column="37"/></name></expr>]<pos:position pos:line="30" pos:column="38"/></index></name> <operator pos:line="30" pos:column="39">=<pos:position pos:line="30" pos:column="40"/></operator> <name><name pos:line="30" pos:column="41">oe<pos:position pos:line="30" pos:column="43"/></name><operator pos:line="30" pos:column="43">-&gt;<pos:position pos:line="30" pos:column="48"/></operator><name pos:line="30" pos:column="45">in_pack_pos<pos:position pos:line="30" pos:column="56"/></name></name> <operator pos:line="30" pos:column="57">+<pos:position pos:line="30" pos:column="58"/></operator> <literal type="number" pos:line="30" pos:column="59">1<pos:position pos:line="30" pos:column="60"/></literal></expr>;<pos:position pos:line="30" pos:column="61"/></expr_stmt></block></then></if>
	}<pos:position pos:line="31" pos:column="10"/></block></for>

	<expr_stmt><expr><name pos:line="33" pos:column="9">rebuild<pos:position pos:line="33" pos:column="16"/></name> <operator pos:line="33" pos:column="17">=<pos:position pos:line="33" pos:column="18"/></operator> <call><name pos:line="33" pos:column="19">bitmap_new<pos:position pos:line="33" pos:column="29"/></name><argument_list pos:line="33" pos:column="29">()<pos:position pos:line="33" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name pos:line="34" pos:column="9">i<pos:position pos:line="34" pos:column="10"/></name> <operator pos:line="34" pos:column="11">=<pos:position pos:line="34" pos:column="12"/></operator> <literal type="number" pos:line="34" pos:column="13">0<pos:position pos:line="34" pos:column="14"/></literal></expr>;<pos:position pos:line="34" pos:column="15"/></expr_stmt>

	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name pos:line="36" pos:column="13">show_progress<pos:position pos:line="36" pos:column="26"/></name></expr>)<pos:position pos:line="36" pos:column="27"/></condition><then pos:line="36" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="17">progress<pos:position pos:line="37" pos:column="25"/></name> <operator pos:line="37" pos:column="26">=<pos:position pos:line="37" pos:column="27"/></operator> <call><name pos:line="37" pos:column="28">start_progress<pos:position pos:line="37" pos:column="42"/></name><argument_list pos:line="37" pos:column="42">(<argument><expr><literal type="string" pos:line="37" pos:column="43">"Reusing bitmaps"<pos:position pos:line="37" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="62">0<pos:position pos:line="37" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="65"/></expr_stmt></block></then></if>

	<macro><name pos:line="39" pos:column="9">kh_foreach_value<pos:position pos:line="39" pos:column="25"/></name><argument_list pos:line="39" pos:column="25">(<argument pos:line="39" pos:column="26">bitmap_git.bitmaps<pos:position pos:line="39" pos:column="44"/></argument>, <argument pos:line="39" pos:column="46">stored<pos:position pos:line="39" pos:column="52"/></argument>, <argument pos:line="39" pos:column="54">{
		if (stored-&gt;flags &amp; BITMAP_FLAG_REUSE) {
			if (!rebuild_bitmap(reposition,
					    lookup_stored_bitmap(stored),
					    rebuild)) {
				hash_pos = kh_put_sha1(reused_bitmaps,
						       stored-&gt;sha1,
						       &amp;hash_ret);
				kh_value(reused_bitmaps, hash_pos) =
					bitmap_to_ewah(rebuild);
			}
			bitmap_reset(rebuild);
			display_progress(progress, ++i);
		}
	}<pos:position pos:line="53" pos:column="10"/></argument>)<pos:position pos:line="53" pos:column="11"/></argument_list></macro><empty_stmt pos:line="53" pos:column="11">;<pos:position pos:line="53" pos:column="12"/></empty_stmt>

	<expr_stmt><expr><call><name pos:line="55" pos:column="9">stop_progress<pos:position pos:line="55" pos:column="22"/></name><argument_list pos:line="55" pos:column="22">(<argument><expr><operator pos:line="55" pos:column="23">&amp;<pos:position pos:line="55" pos:column="28"/></operator><name pos:line="55" pos:column="24">progress<pos:position pos:line="55" pos:column="32"/></name></expr></argument>)<pos:position pos:line="55" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="34"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="57" pos:column="9">free<pos:position pos:line="57" pos:column="13"/></name><argument_list pos:line="57" pos:column="13">(<argument><expr><name pos:line="57" pos:column="14">reposition<pos:position pos:line="57" pos:column="24"/></name></expr></argument>)<pos:position pos:line="57" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="58" pos:column="9">bitmap_free<pos:position pos:line="58" pos:column="20"/></name><argument_list pos:line="58" pos:column="20">(<argument><expr><name pos:line="58" pos:column="21">rebuild<pos:position pos:line="58" pos:column="28"/></name></expr></argument>)<pos:position pos:line="58" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="30"/></expr_stmt>
	<return pos:line="59" pos:column="9">return <expr><literal type="number" pos:line="59" pos:column="16">0<pos:position pos:line="59" pos:column="17"/></literal></expr>;<pos:position pos:line="59" pos:column="18"/></return>
}<pos:position pos:line="60" pos:column="2"/></block></function></unit>

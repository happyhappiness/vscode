<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5938_git-2.14.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <specifier pos:line="1" pos:column="8">inline<pos:position pos:line="1" pos:column="14"/></specifier> <type><name><name pos:line="1" pos:column="15">struct<pos:position pos:line="1" pos:column="21"/></name> <name pos:line="1" pos:column="22">llist_item<pos:position pos:line="1" pos:column="32"/></name></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type> <name pos:line="1" pos:column="35">llist_sorted_remove<pos:position pos:line="1" pos:column="54"/></name><parameter_list pos:line="1" pos:column="54">(<parameter><decl><type><name><name pos:line="1" pos:column="55">struct<pos:position pos:line="1" pos:column="61"/></name> <name pos:line="1" pos:column="62">llist<pos:position pos:line="1" pos:column="67"/></name></name> <modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier></type><name pos:line="1" pos:column="69">list<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="75">const<pos:position pos:line="1" pos:column="80"/></specifier> <name pos:line="1" pos:column="81">unsigned<pos:position pos:line="1" pos:column="89"/></name> <name pos:line="1" pos:column="90">char<pos:position pos:line="1" pos:column="94"/></name> <modifier pos:line="1" pos:column="95">*<pos:position pos:line="1" pos:column="96"/></modifier></type><name pos:line="1" pos:column="96">sha1<pos:position pos:line="1" pos:column="100"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="102">struct<pos:position pos:line="1" pos:column="108"/></name> <name pos:line="1" pos:column="109">llist_item<pos:position pos:line="1" pos:column="119"/></name></name> <modifier pos:line="1" pos:column="120">*<pos:position pos:line="1" pos:column="121"/></modifier></type><name pos:line="1" pos:column="121">hint<pos:position pos:line="1" pos:column="125"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="126"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">llist_item<pos:position pos:line="3" pos:column="26"/></name></name> <modifier pos:line="3" pos:column="27">*<pos:position pos:line="3" pos:column="28"/></modifier></type><name pos:line="3" pos:column="28">prev<pos:position pos:line="3" pos:column="32"/></name></decl>, <modifier pos:line="3" pos:column="34">*<pos:position pos:line="3" pos:column="35"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="35">l<pos:position pos:line="3" pos:column="36"/></name></decl>;<pos:position pos:line="3" pos:column="37"/></decl_stmt>

<label><name pos:line="5" pos:column="1">redo_from_start<pos:position pos:line="5" pos:column="16"/></name>:<pos:position pos:line="5" pos:column="17"/></label>
	<expr_stmt><expr><name pos:line="6" pos:column="9">l<pos:position pos:line="6" pos:column="10"/></name> <operator pos:line="6" pos:column="11">=<pos:position pos:line="6" pos:column="12"/></operator> <ternary><condition><expr><operator pos:line="6" pos:column="13">(<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="14">hint<pos:position pos:line="6" pos:column="18"/></name> <operator pos:line="6" pos:column="19">==<pos:position pos:line="6" pos:column="21"/></operator> <name pos:line="6" pos:column="22">NULL<pos:position pos:line="6" pos:column="26"/></name><operator pos:line="6" pos:column="26">)<pos:position pos:line="6" pos:column="27"/></operator></expr> ?<pos:position pos:line="6" pos:column="29"/></condition><then pos:line="6" pos:column="29"> <expr><name><name pos:line="6" pos:column="30">list<pos:position pos:line="6" pos:column="34"/></name><operator pos:line="6" pos:column="34">-&gt;<pos:position pos:line="6" pos:column="39"/></operator><name pos:line="6" pos:column="36">front<pos:position pos:line="6" pos:column="41"/></name></name></expr> <pos:position pos:line="6" pos:column="42"/></then><else pos:line="6" pos:column="42">: <expr><name pos:line="6" pos:column="44">hint<pos:position pos:line="6" pos:column="48"/></name></expr></else></ternary></expr>;<pos:position pos:line="6" pos:column="49"/></expr_stmt>
	<expr_stmt><expr><name pos:line="7" pos:column="9">prev<pos:position pos:line="7" pos:column="13"/></name> <operator pos:line="7" pos:column="14">=<pos:position pos:line="7" pos:column="15"/></operator> <name pos:line="7" pos:column="16">NULL<pos:position pos:line="7" pos:column="20"/></name></expr>;<pos:position pos:line="7" pos:column="21"/></expr_stmt>
	<while pos:line="8" pos:column="9">while <condition pos:line="8" pos:column="15">(<expr><name pos:line="8" pos:column="16">l<pos:position pos:line="8" pos:column="17"/></name></expr>)<pos:position pos:line="8" pos:column="18"/></condition> <block pos:line="8" pos:column="19">{
		<decl_stmt><decl><type><name pos:line="9" pos:column="17">int<pos:position pos:line="9" pos:column="20"/></name></type> <name pos:line="9" pos:column="21">cmp<pos:position pos:line="9" pos:column="24"/></name> <init pos:line="9" pos:column="25">= <expr><call><name pos:line="9" pos:column="27">hashcmp<pos:position pos:line="9" pos:column="34"/></name><argument_list pos:line="9" pos:column="34">(<argument><expr><name><name pos:line="9" pos:column="35">l<pos:position pos:line="9" pos:column="36"/></name><operator pos:line="9" pos:column="36">-&gt;<pos:position pos:line="9" pos:column="41"/></operator><name pos:line="9" pos:column="38">sha1<pos:position pos:line="9" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="44">sha1<pos:position pos:line="9" pos:column="48"/></name></expr></argument>)<pos:position pos:line="9" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="50"/></decl_stmt>
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><name pos:line="10" pos:column="21">cmp<pos:position pos:line="10" pos:column="24"/></name> <operator pos:line="10" pos:column="25">&gt;<pos:position pos:line="10" pos:column="29"/></operator> <literal type="number" pos:line="10" pos:column="27">0<pos:position pos:line="10" pos:column="28"/></literal></expr>)<pos:position pos:line="10" pos:column="29"/></condition><then pos:line="10" pos:column="29"> <comment type="block" pos:line="10" pos:column="30">/* not in list, since sorted */</comment>
			<block type="pseudo"><return pos:line="11" pos:column="25">return <expr><name pos:line="11" pos:column="32">prev<pos:position pos:line="11" pos:column="36"/></name></expr>;<pos:position pos:line="11" pos:column="37"/></return></block></then></if>
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><operator pos:line="12" pos:column="21">!<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="22">cmp<pos:position pos:line="12" pos:column="25"/></name></expr>)<pos:position pos:line="12" pos:column="26"/></condition><then pos:line="12" pos:column="26"> <block pos:line="12" pos:column="27">{ <comment type="block" pos:line="12" pos:column="29">/* found */</comment>
			<if pos:line="13" pos:column="25">if <condition pos:line="13" pos:column="28">(<expr><name pos:line="13" pos:column="29">prev<pos:position pos:line="13" pos:column="33"/></name> <operator pos:line="13" pos:column="34">==<pos:position pos:line="13" pos:column="36"/></operator> <name pos:line="13" pos:column="37">NULL<pos:position pos:line="13" pos:column="41"/></name></expr>)<pos:position pos:line="13" pos:column="42"/></condition><then pos:line="13" pos:column="42"> <block pos:line="13" pos:column="43">{
				<if pos:line="14" pos:column="33">if <condition pos:line="14" pos:column="36">(<expr><name pos:line="14" pos:column="37">hint<pos:position pos:line="14" pos:column="41"/></name> <operator pos:line="14" pos:column="42">!=<pos:position pos:line="14" pos:column="44"/></operator> <name pos:line="14" pos:column="45">NULL<pos:position pos:line="14" pos:column="49"/></name> <operator pos:line="14" pos:column="50">&amp;&amp;<pos:position pos:line="14" pos:column="60"/></operator> <name pos:line="14" pos:column="53">hint<pos:position pos:line="14" pos:column="57"/></name> <operator pos:line="14" pos:column="58">!=<pos:position pos:line="14" pos:column="60"/></operator> <name><name pos:line="14" pos:column="61">list<pos:position pos:line="14" pos:column="65"/></name><operator pos:line="14" pos:column="65">-&gt;<pos:position pos:line="14" pos:column="70"/></operator><name pos:line="14" pos:column="67">front<pos:position pos:line="14" pos:column="72"/></name></name></expr>)<pos:position pos:line="14" pos:column="73"/></condition><then pos:line="14" pos:column="73"> <block pos:line="14" pos:column="74">{
					<comment type="block" pos:line="15" pos:column="41">/* we don't know the previous element */</comment>
					<expr_stmt><expr><name pos:line="16" pos:column="41">hint<pos:position pos:line="16" pos:column="45"/></name> <operator pos:line="16" pos:column="46">=<pos:position pos:line="16" pos:column="47"/></operator> <name pos:line="16" pos:column="48">NULL<pos:position pos:line="16" pos:column="52"/></name></expr>;<pos:position pos:line="16" pos:column="53"/></expr_stmt>
					<goto pos:line="17" pos:column="41">goto <name pos:line="17" pos:column="46">redo_from_start<pos:position pos:line="17" pos:column="61"/></name>;<pos:position pos:line="17" pos:column="62"/></goto>
				}<pos:position pos:line="18" pos:column="34"/></block></then></if>
				<expr_stmt><expr><name><name pos:line="19" pos:column="33">list<pos:position pos:line="19" pos:column="37"/></name><operator pos:line="19" pos:column="37">-&gt;<pos:position pos:line="19" pos:column="42"/></operator><name pos:line="19" pos:column="39">front<pos:position pos:line="19" pos:column="44"/></name></name> <operator pos:line="19" pos:column="45">=<pos:position pos:line="19" pos:column="46"/></operator> <name><name pos:line="19" pos:column="47">l<pos:position pos:line="19" pos:column="48"/></name><operator pos:line="19" pos:column="48">-&gt;<pos:position pos:line="19" pos:column="53"/></operator><name pos:line="19" pos:column="50">next<pos:position pos:line="19" pos:column="54"/></name></name></expr>;<pos:position pos:line="19" pos:column="55"/></expr_stmt>
			}<pos:position pos:line="20" pos:column="26"/></block></then> <else pos:line="20" pos:column="27">else
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="21" pos:column="33">prev<pos:position pos:line="21" pos:column="37"/></name><operator pos:line="21" pos:column="37">-&gt;<pos:position pos:line="21" pos:column="42"/></operator><name pos:line="21" pos:column="39">next<pos:position pos:line="21" pos:column="43"/></name></name> <operator pos:line="21" pos:column="44">=<pos:position pos:line="21" pos:column="45"/></operator> <name><name pos:line="21" pos:column="46">l<pos:position pos:line="21" pos:column="47"/></name><operator pos:line="21" pos:column="47">-&gt;<pos:position pos:line="21" pos:column="52"/></operator><name pos:line="21" pos:column="49">next<pos:position pos:line="21" pos:column="53"/></name></name></expr>;<pos:position pos:line="21" pos:column="54"/></expr_stmt></block></else></if>
			<if pos:line="22" pos:column="25">if <condition pos:line="22" pos:column="28">(<expr><name pos:line="22" pos:column="29">l<pos:position pos:line="22" pos:column="30"/></name> <operator pos:line="22" pos:column="31">==<pos:position pos:line="22" pos:column="33"/></operator> <name><name pos:line="22" pos:column="34">list<pos:position pos:line="22" pos:column="38"/></name><operator pos:line="22" pos:column="38">-&gt;<pos:position pos:line="22" pos:column="43"/></operator><name pos:line="22" pos:column="40">back<pos:position pos:line="22" pos:column="44"/></name></name></expr>)<pos:position pos:line="22" pos:column="45"/></condition><then pos:line="22" pos:column="45">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="23" pos:column="33">list<pos:position pos:line="23" pos:column="37"/></name><operator pos:line="23" pos:column="37">-&gt;<pos:position pos:line="23" pos:column="42"/></operator><name pos:line="23" pos:column="39">back<pos:position pos:line="23" pos:column="43"/></name></name> <operator pos:line="23" pos:column="44">=<pos:position pos:line="23" pos:column="45"/></operator> <name pos:line="23" pos:column="46">prev<pos:position pos:line="23" pos:column="50"/></name></expr>;<pos:position pos:line="23" pos:column="51"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="24" pos:column="25">llist_item_put<pos:position pos:line="24" pos:column="39"/></name><argument_list pos:line="24" pos:column="39">(<argument><expr><name pos:line="24" pos:column="40">l<pos:position pos:line="24" pos:column="41"/></name></expr></argument>)<pos:position pos:line="24" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="43"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="25" pos:column="25">list<pos:position pos:line="25" pos:column="29"/></name><operator pos:line="25" pos:column="29">-&gt;<pos:position pos:line="25" pos:column="34"/></operator><name pos:line="25" pos:column="31">size<pos:position pos:line="25" pos:column="35"/></name></name><operator pos:line="25" pos:column="35">--<pos:position pos:line="25" pos:column="37"/></operator></expr>;<pos:position pos:line="25" pos:column="38"/></expr_stmt>
			<return pos:line="26" pos:column="25">return <expr><name pos:line="26" pos:column="32">prev<pos:position pos:line="26" pos:column="36"/></name></expr>;<pos:position pos:line="26" pos:column="37"/></return>
		}<pos:position pos:line="27" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="28" pos:column="17">prev<pos:position pos:line="28" pos:column="21"/></name> <operator pos:line="28" pos:column="22">=<pos:position pos:line="28" pos:column="23"/></operator> <name pos:line="28" pos:column="24">l<pos:position pos:line="28" pos:column="25"/></name></expr>;<pos:position pos:line="28" pos:column="26"/></expr_stmt>
		<expr_stmt><expr><name pos:line="29" pos:column="17">l<pos:position pos:line="29" pos:column="18"/></name> <operator pos:line="29" pos:column="19">=<pos:position pos:line="29" pos:column="20"/></operator> <name><name pos:line="29" pos:column="21">l<pos:position pos:line="29" pos:column="22"/></name><operator pos:line="29" pos:column="22">-&gt;<pos:position pos:line="29" pos:column="27"/></operator><name pos:line="29" pos:column="24">next<pos:position pos:line="29" pos:column="28"/></name></name></expr>;<pos:position pos:line="29" pos:column="29"/></expr_stmt>
	}<pos:position pos:line="30" pos:column="10"/></block></while>
	<return pos:line="31" pos:column="9">return <expr><name pos:line="31" pos:column="16">prev<pos:position pos:line="31" pos:column="20"/></name></expr>;<pos:position pos:line="31" pos:column="21"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

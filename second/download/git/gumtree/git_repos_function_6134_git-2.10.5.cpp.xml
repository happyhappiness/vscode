<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6134_git-2.10.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">detect_msys_tty<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">int<pos:position pos:line="1" pos:column="32"/></name></type> <name pos:line="1" pos:column="33">fd<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="36"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">ULONG<pos:position pos:line="3" pos:column="14"/></name></type> <name pos:line="3" pos:column="15">result<pos:position pos:line="3" pos:column="21"/></name></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">BYTE<pos:position pos:line="4" pos:column="13"/></name></type> <name><name pos:line="4" pos:column="14">buffer<pos:position pos:line="4" pos:column="20"/></name><index pos:line="4" pos:column="20">[<expr><literal type="number" pos:line="4" pos:column="21">1024<pos:position pos:line="4" pos:column="25"/></literal></expr>]<pos:position pos:line="4" pos:column="26"/></index></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">POBJECT_NAME_INFORMATION<pos:position pos:line="5" pos:column="33"/></name></type> <name pos:line="5" pos:column="34">nameinfo<pos:position pos:line="5" pos:column="42"/></name> <init pos:line="5" pos:column="43">= <expr><operator pos:line="5" pos:column="45">(<pos:position pos:line="5" pos:column="46"/></operator><name pos:line="5" pos:column="46">POBJECT_NAME_INFORMATION<pos:position pos:line="5" pos:column="70"/></name><operator pos:line="5" pos:column="70">)<pos:position pos:line="5" pos:column="71"/></operator> <name pos:line="5" pos:column="72">buffer<pos:position pos:line="5" pos:column="78"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="79"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">PWSTR<pos:position pos:line="6" pos:column="14"/></name></type> <name pos:line="6" pos:column="15">name<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>

	<comment type="block" pos:line="8" pos:column="9">/* check if fd is a pipe */</comment>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">HANDLE<pos:position pos:line="9" pos:column="15"/></name></type> <name pos:line="9" pos:column="16">h<pos:position pos:line="9" pos:column="17"/></name> <init pos:line="9" pos:column="18">= <expr><operator pos:line="9" pos:column="20">(<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="21">HANDLE<pos:position pos:line="9" pos:column="27"/></name><operator pos:line="9" pos:column="27">)<pos:position pos:line="9" pos:column="28"/></operator> <call><name pos:line="9" pos:column="29">_get_osfhandle<pos:position pos:line="9" pos:column="43"/></name><argument_list pos:line="9" pos:column="43">(<argument><expr><name pos:line="9" pos:column="44">fd<pos:position pos:line="9" pos:column="46"/></name></expr></argument>)<pos:position pos:line="9" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="48"/></decl_stmt>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><call><name pos:line="10" pos:column="13">GetFileType<pos:position pos:line="10" pos:column="24"/></name><argument_list pos:line="10" pos:column="24">(<argument><expr><name pos:line="10" pos:column="25">h<pos:position pos:line="10" pos:column="26"/></name></expr></argument>)<pos:position pos:line="10" pos:column="27"/></argument_list></call> <operator pos:line="10" pos:column="28">!=<pos:position pos:line="10" pos:column="30"/></operator> <name pos:line="10" pos:column="31">FILE_TYPE_PIPE<pos:position pos:line="10" pos:column="45"/></name></expr>)<pos:position pos:line="10" pos:column="46"/></condition><then pos:line="10" pos:column="46">
		<block type="pseudo"><return pos:line="11" pos:column="17">return;<pos:position pos:line="11" pos:column="24"/></return></block></then></if>

	<comment type="block" pos:line="13" pos:column="9">/* get pipe name */</comment>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">!<pos:position pos:line="14" pos:column="14"/></operator><call><name pos:line="14" pos:column="14">NT_SUCCESS<pos:position pos:line="14" pos:column="24"/></name><argument_list pos:line="14" pos:column="24">(<argument><expr><call><name pos:line="14" pos:column="25">NtQueryObject<pos:position pos:line="14" pos:column="38"/></name><argument_list pos:line="14" pos:column="38">(<argument><expr><name pos:line="14" pos:column="39">h<pos:position pos:line="14" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="42">ObjectNameInformation<pos:position pos:line="14" pos:column="63"/></name></expr></argument>,
			<argument><expr><name pos:line="15" pos:column="25">buffer<pos:position pos:line="15" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="33">sizeof<argument_list pos:line="15" pos:column="39">(<argument><expr><name pos:line="15" pos:column="40">buffer<pos:position pos:line="15" pos:column="46"/></name></expr></argument>)<pos:position pos:line="15" pos:column="47"/></argument_list></sizeof> <operator pos:line="15" pos:column="48">-<pos:position pos:line="15" pos:column="49"/></operator> <literal type="number" pos:line="15" pos:column="50">2<pos:position pos:line="15" pos:column="51"/></literal></expr></argument>, <argument><expr><operator pos:line="15" pos:column="53">&amp;<pos:position pos:line="15" pos:column="58"/></operator><name pos:line="15" pos:column="54">result<pos:position pos:line="15" pos:column="60"/></name></expr></argument>)<pos:position pos:line="15" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="63"/></condition><then pos:line="15" pos:column="63">
		<block type="pseudo"><return pos:line="16" pos:column="17">return;<pos:position pos:line="16" pos:column="24"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="17" pos:column="9">name<pos:position pos:line="17" pos:column="13"/></name> <operator pos:line="17" pos:column="14">=<pos:position pos:line="17" pos:column="15"/></operator> <name><name pos:line="17" pos:column="16">nameinfo<pos:position pos:line="17" pos:column="24"/></name><operator pos:line="17" pos:column="24">-&gt;<pos:position pos:line="17" pos:column="29"/></operator><name pos:line="17" pos:column="26">Name<pos:position pos:line="17" pos:column="30"/></name><operator pos:line="17" pos:column="30">.<pos:position pos:line="17" pos:column="31"/></operator><name pos:line="17" pos:column="31">Buffer<pos:position pos:line="17" pos:column="37"/></name></name></expr>;<pos:position pos:line="17" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="18" pos:column="9">name<pos:position pos:line="18" pos:column="13"/></name><index pos:line="18" pos:column="13">[<expr><name><name pos:line="18" pos:column="14">nameinfo<pos:position pos:line="18" pos:column="22"/></name><operator pos:line="18" pos:column="22">-&gt;<pos:position pos:line="18" pos:column="27"/></operator><name pos:line="18" pos:column="24">Name<pos:position pos:line="18" pos:column="28"/></name><operator pos:line="18" pos:column="28">.<pos:position pos:line="18" pos:column="29"/></operator><name pos:line="18" pos:column="29">Length<pos:position pos:line="18" pos:column="35"/></name></name></expr>]<pos:position pos:line="18" pos:column="36"/></index></name> <operator pos:line="18" pos:column="37">=<pos:position pos:line="18" pos:column="38"/></operator> <literal type="number" pos:line="18" pos:column="39">0<pos:position pos:line="18" pos:column="40"/></literal></expr>;<pos:position pos:line="18" pos:column="41"/></expr_stmt>

	<comment type="block" pos:line="20" pos:column="9">/* check if this could be a MSYS2 pty pipe ('msys-XXXX-ptyN-XX') */</comment>
	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><operator pos:line="21" pos:column="13">!<pos:position pos:line="21" pos:column="14"/></operator><call><name pos:line="21" pos:column="14">wcsstr<pos:position pos:line="21" pos:column="20"/></name><argument_list pos:line="21" pos:column="20">(<argument><expr><name pos:line="21" pos:column="21">name<pos:position pos:line="21" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="27">L"msys-"<pos:position pos:line="21" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="36"/></argument_list></call> <operator pos:line="21" pos:column="37">||<pos:position pos:line="21" pos:column="39"/></operator> <operator pos:line="21" pos:column="40">!<pos:position pos:line="21" pos:column="41"/></operator><call><name pos:line="21" pos:column="41">wcsstr<pos:position pos:line="21" pos:column="47"/></name><argument_list pos:line="21" pos:column="47">(<argument><expr><name pos:line="21" pos:column="48">name<pos:position pos:line="21" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="54">L"-pty"<pos:position pos:line="21" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="63"/></condition><then pos:line="21" pos:column="63">
		<block type="pseudo"><return pos:line="22" pos:column="17">return;<pos:position pos:line="22" pos:column="24"/></return></block></then></if>

	<comment type="block" pos:line="24" pos:column="9">/* init ioinfo size if we haven't done so */</comment>
	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><call><name pos:line="25" pos:column="13">init_sizeof_ioinfo<pos:position pos:line="25" pos:column="31"/></name><argument_list pos:line="25" pos:column="31">()<pos:position pos:line="25" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="34"/></condition><then pos:line="25" pos:column="34">
		<block type="pseudo"><return pos:line="26" pos:column="17">return;<pos:position pos:line="26" pos:column="24"/></return></block></then></if>

	<comment type="block" pos:line="28" pos:column="9">/* set FDEV flag, reset FPIPE flag */</comment>
	<expr_stmt><expr><call><name pos:line="29" pos:column="9">_pioinfo<pos:position pos:line="29" pos:column="17"/></name><argument_list pos:line="29" pos:column="17">(<argument><expr><name pos:line="29" pos:column="18">fd<pos:position pos:line="29" pos:column="20"/></name></expr></argument>)<pos:position pos:line="29" pos:column="21"/></argument_list></call><operator pos:line="29" pos:column="21">-&gt;<pos:position pos:line="29" pos:column="26"/></operator><name pos:line="29" pos:column="23">osflags<pos:position pos:line="29" pos:column="30"/></name> <operator pos:line="29" pos:column="31">&amp;=<pos:position pos:line="29" pos:column="37"/></operator> <operator pos:line="29" pos:column="34">~<pos:position pos:line="29" pos:column="35"/></operator><name pos:line="29" pos:column="35">FPIPE<pos:position pos:line="29" pos:column="40"/></name></expr>;<pos:position pos:line="29" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="30" pos:column="9">_pioinfo<pos:position pos:line="30" pos:column="17"/></name><argument_list pos:line="30" pos:column="17">(<argument><expr><name pos:line="30" pos:column="18">fd<pos:position pos:line="30" pos:column="20"/></name></expr></argument>)<pos:position pos:line="30" pos:column="21"/></argument_list></call><operator pos:line="30" pos:column="21">-&gt;<pos:position pos:line="30" pos:column="26"/></operator><name pos:line="30" pos:column="23">osflags<pos:position pos:line="30" pos:column="30"/></name> <operator pos:line="30" pos:column="31">|=<pos:position pos:line="30" pos:column="33"/></operator> <name pos:line="30" pos:column="34">FDEV<pos:position pos:line="30" pos:column="38"/></name></expr>;<pos:position pos:line="30" pos:column="39"/></expr_stmt>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

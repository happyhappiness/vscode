<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3652_git-2.7.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">handle_config<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">key<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="43">const<pos:position pos:line="1" pos:column="48"/></specifier> <name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">value<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="62">void<pos:position pos:line="1" pos:column="66"/></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">cb<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="71"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">name<pos:position pos:line="3" pos:column="25"/></name></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">subkey<pos:position pos:line="4" pos:column="27"/></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">remote<pos:position pos:line="5" pos:column="22"/></name></name> <modifier pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></modifier></type><name pos:line="5" pos:column="24">remote<pos:position pos:line="5" pos:column="30"/></name></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">branch<pos:position pos:line="6" pos:column="22"/></name></name> <modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier></type><name pos:line="6" pos:column="24">branch<pos:position pos:line="6" pos:column="30"/></name></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><call><name pos:line="7" pos:column="13">starts_with<pos:position pos:line="7" pos:column="24"/></name><argument_list pos:line="7" pos:column="24">(<argument><expr><name pos:line="7" pos:column="25">key<pos:position pos:line="7" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="30">"branch."<pos:position pos:line="7" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="41"/></condition><then pos:line="7" pos:column="41"> <block pos:line="7" pos:column="42">{
		<expr_stmt><expr><name pos:line="8" pos:column="17">name<pos:position pos:line="8" pos:column="21"/></name> <operator pos:line="8" pos:column="22">=<pos:position pos:line="8" pos:column="23"/></operator> <name pos:line="8" pos:column="24">key<pos:position pos:line="8" pos:column="27"/></name> <operator pos:line="8" pos:column="28">+<pos:position pos:line="8" pos:column="29"/></operator> <literal type="number" pos:line="8" pos:column="30">7<pos:position pos:line="8" pos:column="31"/></literal></expr>;<pos:position pos:line="8" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><name pos:line="9" pos:column="17">subkey<pos:position pos:line="9" pos:column="23"/></name> <operator pos:line="9" pos:column="24">=<pos:position pos:line="9" pos:column="25"/></operator> <call><name pos:line="9" pos:column="26">strrchr<pos:position pos:line="9" pos:column="33"/></name><argument_list pos:line="9" pos:column="33">(<argument><expr><name pos:line="9" pos:column="34">name<pos:position pos:line="9" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="9" pos:column="40">'.'<pos:position pos:line="9" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="45"/></expr_stmt>
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><operator pos:line="10" pos:column="21">!<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="22">subkey<pos:position pos:line="10" pos:column="28"/></name></expr>)<pos:position pos:line="10" pos:column="29"/></condition><then pos:line="10" pos:column="29">
			<block type="pseudo"><return pos:line="11" pos:column="25">return <expr><literal type="number" pos:line="11" pos:column="32">0<pos:position pos:line="11" pos:column="33"/></literal></expr>;<pos:position pos:line="11" pos:column="34"/></return></block></then></if>
		<expr_stmt><expr><name pos:line="12" pos:column="17">branch<pos:position pos:line="12" pos:column="23"/></name> <operator pos:line="12" pos:column="24">=<pos:position pos:line="12" pos:column="25"/></operator> <call><name pos:line="12" pos:column="26">make_branch<pos:position pos:line="12" pos:column="37"/></name><argument_list pos:line="12" pos:column="37">(<argument><expr><name pos:line="12" pos:column="38">name<pos:position pos:line="12" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="44">subkey<pos:position pos:line="12" pos:column="50"/></name> <operator pos:line="12" pos:column="51">-<pos:position pos:line="12" pos:column="52"/></operator> <name pos:line="12" pos:column="53">name<pos:position pos:line="12" pos:column="57"/></name></expr></argument>)<pos:position pos:line="12" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="59"/></expr_stmt>
		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><operator pos:line="13" pos:column="21">!<pos:position pos:line="13" pos:column="22"/></operator><call><name pos:line="13" pos:column="22">strcmp<pos:position pos:line="13" pos:column="28"/></name><argument_list pos:line="13" pos:column="28">(<argument><expr><name pos:line="13" pos:column="29">subkey<pos:position pos:line="13" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="37">".remote"<pos:position pos:line="13" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="48"/></condition><then pos:line="13" pos:column="48"> <block pos:line="13" pos:column="49">{
			<return pos:line="14" pos:column="25">return <expr><call><name pos:line="14" pos:column="32">git_config_string<pos:position pos:line="14" pos:column="49"/></name><argument_list pos:line="14" pos:column="49">(<argument><expr><operator pos:line="14" pos:column="50">&amp;<pos:position pos:line="14" pos:column="55"/></operator><name><name pos:line="14" pos:column="51">branch<pos:position pos:line="14" pos:column="57"/></name><operator pos:line="14" pos:column="57">-&gt;<pos:position pos:line="14" pos:column="62"/></operator><name pos:line="14" pos:column="59">remote_name<pos:position pos:line="14" pos:column="70"/></name></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="72">key<pos:position pos:line="14" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="77">value<pos:position pos:line="14" pos:column="82"/></name></expr></argument>)<pos:position pos:line="14" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="84"/></return>
		}<pos:position pos:line="15" pos:column="18"/></block></then> <elseif pos:line="15" pos:column="19">else <if pos:line="15" pos:column="24">if <condition pos:line="15" pos:column="27">(<expr><operator pos:line="15" pos:column="28">!<pos:position pos:line="15" pos:column="29"/></operator><call><name pos:line="15" pos:column="29">strcmp<pos:position pos:line="15" pos:column="35"/></name><argument_list pos:line="15" pos:column="35">(<argument><expr><name pos:line="15" pos:column="36">subkey<pos:position pos:line="15" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="44">".pushremote"<pos:position pos:line="15" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="59"/></condition><then pos:line="15" pos:column="59"> <block pos:line="15" pos:column="60">{
			<return pos:line="16" pos:column="25">return <expr><call><name pos:line="16" pos:column="32">git_config_string<pos:position pos:line="16" pos:column="49"/></name><argument_list pos:line="16" pos:column="49">(<argument><expr><operator pos:line="16" pos:column="50">&amp;<pos:position pos:line="16" pos:column="55"/></operator><name><name pos:line="16" pos:column="51">branch<pos:position pos:line="16" pos:column="57"/></name><operator pos:line="16" pos:column="57">-&gt;<pos:position pos:line="16" pos:column="62"/></operator><name pos:line="16" pos:column="59">pushremote_name<pos:position pos:line="16" pos:column="74"/></name></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="76">key<pos:position pos:line="16" pos:column="79"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="81">value<pos:position pos:line="16" pos:column="86"/></name></expr></argument>)<pos:position pos:line="16" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="88"/></return>
		}<pos:position pos:line="17" pos:column="18"/></block></then></if></elseif> <elseif pos:line="17" pos:column="19">else <if pos:line="17" pos:column="24">if <condition pos:line="17" pos:column="27">(<expr><operator pos:line="17" pos:column="28">!<pos:position pos:line="17" pos:column="29"/></operator><call><name pos:line="17" pos:column="29">strcmp<pos:position pos:line="17" pos:column="35"/></name><argument_list pos:line="17" pos:column="35">(<argument><expr><name pos:line="17" pos:column="36">subkey<pos:position pos:line="17" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="44">".merge"<pos:position pos:line="17" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="54"/></condition><then pos:line="17" pos:column="54"> <block pos:line="17" pos:column="55">{
			<if pos:line="18" pos:column="25">if <condition pos:line="18" pos:column="28">(<expr><operator pos:line="18" pos:column="29">!<pos:position pos:line="18" pos:column="30"/></operator><name pos:line="18" pos:column="30">value<pos:position pos:line="18" pos:column="35"/></name></expr>)<pos:position pos:line="18" pos:column="36"/></condition><then pos:line="18" pos:column="36">
				<block type="pseudo"><return pos:line="19" pos:column="33">return <expr><call><name pos:line="19" pos:column="40">config_error_nonbool<pos:position pos:line="19" pos:column="60"/></name><argument_list pos:line="19" pos:column="60">(<argument><expr><name pos:line="19" pos:column="61">key<pos:position pos:line="19" pos:column="64"/></name></expr></argument>)<pos:position pos:line="19" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="66"/></return></block></then></if>
			<expr_stmt><expr><call><name pos:line="20" pos:column="25">add_merge<pos:position pos:line="20" pos:column="34"/></name><argument_list pos:line="20" pos:column="34">(<argument><expr><name pos:line="20" pos:column="35">branch<pos:position pos:line="20" pos:column="41"/></name></expr></argument>, <argument><expr><call><name pos:line="20" pos:column="43">xstrdup<pos:position pos:line="20" pos:column="50"/></name><argument_list pos:line="20" pos:column="50">(<argument><expr><name pos:line="20" pos:column="51">value<pos:position pos:line="20" pos:column="56"/></name></expr></argument>)<pos:position pos:line="20" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="59"/></expr_stmt>
		}<pos:position pos:line="21" pos:column="18"/></block></then></if></elseif></if>
		<return pos:line="22" pos:column="17">return <expr><literal type="number" pos:line="22" pos:column="24">0<pos:position pos:line="22" pos:column="25"/></literal></expr>;<pos:position pos:line="22" pos:column="26"/></return>
	}<pos:position pos:line="23" pos:column="10"/></block></then></if>
	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><call><name pos:line="24" pos:column="13">starts_with<pos:position pos:line="24" pos:column="24"/></name><argument_list pos:line="24" pos:column="24">(<argument><expr><name pos:line="24" pos:column="25">key<pos:position pos:line="24" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="30">"url."<pos:position pos:line="24" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="38"/></condition><then pos:line="24" pos:column="38"> <block pos:line="24" pos:column="39">{
		<decl_stmt><decl><type><name><name pos:line="25" pos:column="17">struct<pos:position pos:line="25" pos:column="23"/></name> <name pos:line="25" pos:column="24">rewrite<pos:position pos:line="25" pos:column="31"/></name></name> <modifier pos:line="25" pos:column="32">*<pos:position pos:line="25" pos:column="33"/></modifier></type><name pos:line="25" pos:column="33">rewrite<pos:position pos:line="25" pos:column="40"/></name></decl>;<pos:position pos:line="25" pos:column="41"/></decl_stmt>
		<expr_stmt><expr><name pos:line="26" pos:column="17">name<pos:position pos:line="26" pos:column="21"/></name> <operator pos:line="26" pos:column="22">=<pos:position pos:line="26" pos:column="23"/></operator> <name pos:line="26" pos:column="24">key<pos:position pos:line="26" pos:column="27"/></name> <operator pos:line="26" pos:column="28">+<pos:position pos:line="26" pos:column="29"/></operator> <literal type="number" pos:line="26" pos:column="30">4<pos:position pos:line="26" pos:column="31"/></literal></expr>;<pos:position pos:line="26" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><name pos:line="27" pos:column="17">subkey<pos:position pos:line="27" pos:column="23"/></name> <operator pos:line="27" pos:column="24">=<pos:position pos:line="27" pos:column="25"/></operator> <call><name pos:line="27" pos:column="26">strrchr<pos:position pos:line="27" pos:column="33"/></name><argument_list pos:line="27" pos:column="33">(<argument><expr><name pos:line="27" pos:column="34">name<pos:position pos:line="27" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="27" pos:column="40">'.'<pos:position pos:line="27" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="45"/></expr_stmt>
		<if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><operator pos:line="28" pos:column="21">!<pos:position pos:line="28" pos:column="22"/></operator><name pos:line="28" pos:column="22">subkey<pos:position pos:line="28" pos:column="28"/></name></expr>)<pos:position pos:line="28" pos:column="29"/></condition><then pos:line="28" pos:column="29">
			<block type="pseudo"><return pos:line="29" pos:column="25">return <expr><literal type="number" pos:line="29" pos:column="32">0<pos:position pos:line="29" pos:column="33"/></literal></expr>;<pos:position pos:line="29" pos:column="34"/></return></block></then></if>
		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><operator pos:line="30" pos:column="21">!<pos:position pos:line="30" pos:column="22"/></operator><call><name pos:line="30" pos:column="22">strcmp<pos:position pos:line="30" pos:column="28"/></name><argument_list pos:line="30" pos:column="28">(<argument><expr><name pos:line="30" pos:column="29">subkey<pos:position pos:line="30" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="37">".insteadof"<pos:position pos:line="30" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="51"/></condition><then pos:line="30" pos:column="51"> <block pos:line="30" pos:column="52">{
			<expr_stmt><expr><name pos:line="31" pos:column="25">rewrite<pos:position pos:line="31" pos:column="32"/></name> <operator pos:line="31" pos:column="33">=<pos:position pos:line="31" pos:column="34"/></operator> <call><name pos:line="31" pos:column="35">make_rewrite<pos:position pos:line="31" pos:column="47"/></name><argument_list pos:line="31" pos:column="47">(<argument><expr><operator pos:line="31" pos:column="48">&amp;<pos:position pos:line="31" pos:column="53"/></operator><name pos:line="31" pos:column="49">rewrites<pos:position pos:line="31" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="59">name<pos:position pos:line="31" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="65">subkey<pos:position pos:line="31" pos:column="71"/></name> <operator pos:line="31" pos:column="72">-<pos:position pos:line="31" pos:column="73"/></operator> <name pos:line="31" pos:column="74">name<pos:position pos:line="31" pos:column="78"/></name></expr></argument>)<pos:position pos:line="31" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="80"/></expr_stmt>
			<if pos:line="32" pos:column="25">if <condition pos:line="32" pos:column="28">(<expr><operator pos:line="32" pos:column="29">!<pos:position pos:line="32" pos:column="30"/></operator><name pos:line="32" pos:column="30">value<pos:position pos:line="32" pos:column="35"/></name></expr>)<pos:position pos:line="32" pos:column="36"/></condition><then pos:line="32" pos:column="36">
				<block type="pseudo"><return pos:line="33" pos:column="33">return <expr><call><name pos:line="33" pos:column="40">config_error_nonbool<pos:position pos:line="33" pos:column="60"/></name><argument_list pos:line="33" pos:column="60">(<argument><expr><name pos:line="33" pos:column="61">key<pos:position pos:line="33" pos:column="64"/></name></expr></argument>)<pos:position pos:line="33" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="66"/></return></block></then></if>
			<expr_stmt><expr><call><name pos:line="34" pos:column="25">add_instead_of<pos:position pos:line="34" pos:column="39"/></name><argument_list pos:line="34" pos:column="39">(<argument><expr><name pos:line="34" pos:column="40">rewrite<pos:position pos:line="34" pos:column="47"/></name></expr></argument>, <argument><expr><call><name pos:line="34" pos:column="49">xstrdup<pos:position pos:line="34" pos:column="56"/></name><argument_list pos:line="34" pos:column="56">(<argument><expr><name pos:line="34" pos:column="57">value<pos:position pos:line="34" pos:column="62"/></name></expr></argument>)<pos:position pos:line="34" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="65"/></expr_stmt>
		}<pos:position pos:line="35" pos:column="18"/></block></then> <elseif pos:line="35" pos:column="19">else <if pos:line="35" pos:column="24">if <condition pos:line="35" pos:column="27">(<expr><operator pos:line="35" pos:column="28">!<pos:position pos:line="35" pos:column="29"/></operator><call><name pos:line="35" pos:column="29">strcmp<pos:position pos:line="35" pos:column="35"/></name><argument_list pos:line="35" pos:column="35">(<argument><expr><name pos:line="35" pos:column="36">subkey<pos:position pos:line="35" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="44">".pushinsteadof"<pos:position pos:line="35" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="62"/></condition><then pos:line="35" pos:column="62"> <block pos:line="35" pos:column="63">{
			<expr_stmt><expr><name pos:line="36" pos:column="25">rewrite<pos:position pos:line="36" pos:column="32"/></name> <operator pos:line="36" pos:column="33">=<pos:position pos:line="36" pos:column="34"/></operator> <call><name pos:line="36" pos:column="35">make_rewrite<pos:position pos:line="36" pos:column="47"/></name><argument_list pos:line="36" pos:column="47">(<argument><expr><operator pos:line="36" pos:column="48">&amp;<pos:position pos:line="36" pos:column="53"/></operator><name pos:line="36" pos:column="49">rewrites_push<pos:position pos:line="36" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="64">name<pos:position pos:line="36" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="70">subkey<pos:position pos:line="36" pos:column="76"/></name> <operator pos:line="36" pos:column="77">-<pos:position pos:line="36" pos:column="78"/></operator> <name pos:line="36" pos:column="79">name<pos:position pos:line="36" pos:column="83"/></name></expr></argument>)<pos:position pos:line="36" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="85"/></expr_stmt>
			<if pos:line="37" pos:column="25">if <condition pos:line="37" pos:column="28">(<expr><operator pos:line="37" pos:column="29">!<pos:position pos:line="37" pos:column="30"/></operator><name pos:line="37" pos:column="30">value<pos:position pos:line="37" pos:column="35"/></name></expr>)<pos:position pos:line="37" pos:column="36"/></condition><then pos:line="37" pos:column="36">
				<block type="pseudo"><return pos:line="38" pos:column="33">return <expr><call><name pos:line="38" pos:column="40">config_error_nonbool<pos:position pos:line="38" pos:column="60"/></name><argument_list pos:line="38" pos:column="60">(<argument><expr><name pos:line="38" pos:column="61">key<pos:position pos:line="38" pos:column="64"/></name></expr></argument>)<pos:position pos:line="38" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="66"/></return></block></then></if>
			<expr_stmt><expr><call><name pos:line="39" pos:column="25">add_instead_of<pos:position pos:line="39" pos:column="39"/></name><argument_list pos:line="39" pos:column="39">(<argument><expr><name pos:line="39" pos:column="40">rewrite<pos:position pos:line="39" pos:column="47"/></name></expr></argument>, <argument><expr><call><name pos:line="39" pos:column="49">xstrdup<pos:position pos:line="39" pos:column="56"/></name><argument_list pos:line="39" pos:column="56">(<argument><expr><name pos:line="39" pos:column="57">value<pos:position pos:line="39" pos:column="62"/></name></expr></argument>)<pos:position pos:line="39" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="39" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="65"/></expr_stmt>
		}<pos:position pos:line="40" pos:column="18"/></block></then></if></elseif></if>
	}<pos:position pos:line="41" pos:column="10"/></block></then></if>

	<if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><operator pos:line="43" pos:column="13">!<pos:position pos:line="43" pos:column="14"/></operator><call><name pos:line="43" pos:column="14">starts_with<pos:position pos:line="43" pos:column="25"/></name><argument_list pos:line="43" pos:column="25">(<argument><expr><name pos:line="43" pos:column="26">key<pos:position pos:line="43" pos:column="29"/></name></expr></argument>,  <argument><expr><literal type="string" pos:line="43" pos:column="32">"remote."<pos:position pos:line="43" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="43"/></condition><then pos:line="43" pos:column="43">
		<block type="pseudo"><return pos:line="44" pos:column="17">return <expr><literal type="number" pos:line="44" pos:column="24">0<pos:position pos:line="44" pos:column="25"/></literal></expr>;<pos:position pos:line="44" pos:column="26"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="45" pos:column="9">name<pos:position pos:line="45" pos:column="13"/></name> <operator pos:line="45" pos:column="14">=<pos:position pos:line="45" pos:column="15"/></operator> <name pos:line="45" pos:column="16">key<pos:position pos:line="45" pos:column="19"/></name> <operator pos:line="45" pos:column="20">+<pos:position pos:line="45" pos:column="21"/></operator> <literal type="number" pos:line="45" pos:column="22">7<pos:position pos:line="45" pos:column="23"/></literal></expr>;<pos:position pos:line="45" pos:column="24"/></expr_stmt>

	<comment type="block" pos:line="47" pos:column="9">/* Handle remote.* variables */</comment>
	<if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><operator pos:line="48" pos:column="13">!<pos:position pos:line="48" pos:column="14"/></operator><call><name pos:line="48" pos:column="14">strcmp<pos:position pos:line="48" pos:column="20"/></name><argument_list pos:line="48" pos:column="20">(<argument><expr><name pos:line="48" pos:column="21">name<pos:position pos:line="48" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="27">"pushdefault"<pos:position pos:line="48" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="42"/></condition><then pos:line="48" pos:column="42">
		<block type="pseudo"><return pos:line="49" pos:column="17">return <expr><call><name pos:line="49" pos:column="24">git_config_string<pos:position pos:line="49" pos:column="41"/></name><argument_list pos:line="49" pos:column="41">(<argument><expr><operator pos:line="49" pos:column="42">&amp;<pos:position pos:line="49" pos:column="47"/></operator><name pos:line="49" pos:column="43">pushremote_name<pos:position pos:line="49" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="60">key<pos:position pos:line="49" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="65">value<pos:position pos:line="49" pos:column="70"/></name></expr></argument>)<pos:position pos:line="49" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="72"/></return></block></then></if>

	<comment type="block" pos:line="51" pos:column="9">/* Handle remote.&lt;name&gt;.* variables */</comment>
	<if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><operator pos:line="52" pos:column="13">*<pos:position pos:line="52" pos:column="14"/></operator><name pos:line="52" pos:column="14">name<pos:position pos:line="52" pos:column="18"/></name> <operator pos:line="52" pos:column="19">==<pos:position pos:line="52" pos:column="21"/></operator> <literal type="char" pos:line="52" pos:column="22">'/'<pos:position pos:line="52" pos:column="25"/></literal></expr>)<pos:position pos:line="52" pos:column="26"/></condition><then pos:line="52" pos:column="26"> <block pos:line="52" pos:column="27">{
		<expr_stmt><expr><call><name pos:line="53" pos:column="17">warning<pos:position pos:line="53" pos:column="24"/></name><argument_list pos:line="53" pos:column="24">(<argument><expr><literal type="string" pos:line="53" pos:column="25">"Config remote shorthand cannot begin with '/': %s"<pos:position pos:line="53" pos:column="76"/></literal></expr></argument>,
			<argument><expr><name pos:line="54" pos:column="25">name<pos:position pos:line="54" pos:column="29"/></name></expr></argument>)<pos:position pos:line="54" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="31"/></expr_stmt>
		<return pos:line="55" pos:column="17">return <expr><literal type="number" pos:line="55" pos:column="24">0<pos:position pos:line="55" pos:column="25"/></literal></expr>;<pos:position pos:line="55" pos:column="26"/></return>
	}<pos:position pos:line="56" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="57" pos:column="9">subkey<pos:position pos:line="57" pos:column="15"/></name> <operator pos:line="57" pos:column="16">=<pos:position pos:line="57" pos:column="17"/></operator> <call><name pos:line="57" pos:column="18">strrchr<pos:position pos:line="57" pos:column="25"/></name><argument_list pos:line="57" pos:column="25">(<argument><expr><name pos:line="57" pos:column="26">name<pos:position pos:line="57" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="57" pos:column="32">'.'<pos:position pos:line="57" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="37"/></expr_stmt>
	<if pos:line="58" pos:column="9">if <condition pos:line="58" pos:column="12">(<expr><operator pos:line="58" pos:column="13">!<pos:position pos:line="58" pos:column="14"/></operator><name pos:line="58" pos:column="14">subkey<pos:position pos:line="58" pos:column="20"/></name></expr>)<pos:position pos:line="58" pos:column="21"/></condition><then pos:line="58" pos:column="21">
		<block type="pseudo"><return pos:line="59" pos:column="17">return <expr><literal type="number" pos:line="59" pos:column="24">0<pos:position pos:line="59" pos:column="25"/></literal></expr>;<pos:position pos:line="59" pos:column="26"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="60" pos:column="9">remote<pos:position pos:line="60" pos:column="15"/></name> <operator pos:line="60" pos:column="16">=<pos:position pos:line="60" pos:column="17"/></operator> <call><name pos:line="60" pos:column="18">make_remote<pos:position pos:line="60" pos:column="29"/></name><argument_list pos:line="60" pos:column="29">(<argument><expr><name pos:line="60" pos:column="30">name<pos:position pos:line="60" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="36">subkey<pos:position pos:line="60" pos:column="42"/></name> <operator pos:line="60" pos:column="43">-<pos:position pos:line="60" pos:column="44"/></operator> <name pos:line="60" pos:column="45">name<pos:position pos:line="60" pos:column="49"/></name></expr></argument>)<pos:position pos:line="60" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="51"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="61" pos:column="9">remote<pos:position pos:line="61" pos:column="15"/></name><operator pos:line="61" pos:column="15">-&gt;<pos:position pos:line="61" pos:column="20"/></operator><name pos:line="61" pos:column="17">origin<pos:position pos:line="61" pos:column="23"/></name></name> <operator pos:line="61" pos:column="24">=<pos:position pos:line="61" pos:column="25"/></operator> <name pos:line="61" pos:column="26">REMOTE_CONFIG<pos:position pos:line="61" pos:column="39"/></name></expr>;<pos:position pos:line="61" pos:column="40"/></expr_stmt>
	<if pos:line="62" pos:column="9">if <condition pos:line="62" pos:column="12">(<expr><operator pos:line="62" pos:column="13">!<pos:position pos:line="62" pos:column="14"/></operator><call><name pos:line="62" pos:column="14">strcmp<pos:position pos:line="62" pos:column="20"/></name><argument_list pos:line="62" pos:column="20">(<argument><expr><name pos:line="62" pos:column="21">subkey<pos:position pos:line="62" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="29">".mirror"<pos:position pos:line="62" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="62" pos:column="40"/></condition><then pos:line="62" pos:column="40">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="63" pos:column="17">remote<pos:position pos:line="63" pos:column="23"/></name><operator pos:line="63" pos:column="23">-&gt;<pos:position pos:line="63" pos:column="28"/></operator><name pos:line="63" pos:column="25">mirror<pos:position pos:line="63" pos:column="31"/></name></name> <operator pos:line="63" pos:column="32">=<pos:position pos:line="63" pos:column="33"/></operator> <call><name pos:line="63" pos:column="34">git_config_bool<pos:position pos:line="63" pos:column="49"/></name><argument_list pos:line="63" pos:column="49">(<argument><expr><name pos:line="63" pos:column="50">key<pos:position pos:line="63" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="55">value<pos:position pos:line="63" pos:column="60"/></name></expr></argument>)<pos:position pos:line="63" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="62"/></expr_stmt></block></then>
	<elseif pos:line="64" pos:column="9">else <if pos:line="64" pos:column="14">if <condition pos:line="64" pos:column="17">(<expr><operator pos:line="64" pos:column="18">!<pos:position pos:line="64" pos:column="19"/></operator><call><name pos:line="64" pos:column="19">strcmp<pos:position pos:line="64" pos:column="25"/></name><argument_list pos:line="64" pos:column="25">(<argument><expr><name pos:line="64" pos:column="26">subkey<pos:position pos:line="64" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="34">".skipdefaultupdate"<pos:position pos:line="64" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="64" pos:column="56"/></condition><then pos:line="64" pos:column="56">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="65" pos:column="17">remote<pos:position pos:line="65" pos:column="23"/></name><operator pos:line="65" pos:column="23">-&gt;<pos:position pos:line="65" pos:column="28"/></operator><name pos:line="65" pos:column="25">skip_default_update<pos:position pos:line="65" pos:column="44"/></name></name> <operator pos:line="65" pos:column="45">=<pos:position pos:line="65" pos:column="46"/></operator> <call><name pos:line="65" pos:column="47">git_config_bool<pos:position pos:line="65" pos:column="62"/></name><argument_list pos:line="65" pos:column="62">(<argument><expr><name pos:line="65" pos:column="63">key<pos:position pos:line="65" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="68">value<pos:position pos:line="65" pos:column="73"/></name></expr></argument>)<pos:position pos:line="65" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="75"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="66" pos:column="9">else <if pos:line="66" pos:column="14">if <condition pos:line="66" pos:column="17">(<expr><operator pos:line="66" pos:column="18">!<pos:position pos:line="66" pos:column="19"/></operator><call><name pos:line="66" pos:column="19">strcmp<pos:position pos:line="66" pos:column="25"/></name><argument_list pos:line="66" pos:column="25">(<argument><expr><name pos:line="66" pos:column="26">subkey<pos:position pos:line="66" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="34">".skipfetchall"<pos:position pos:line="66" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="66" pos:column="51"/></condition><then pos:line="66" pos:column="51">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="67" pos:column="17">remote<pos:position pos:line="67" pos:column="23"/></name><operator pos:line="67" pos:column="23">-&gt;<pos:position pos:line="67" pos:column="28"/></operator><name pos:line="67" pos:column="25">skip_default_update<pos:position pos:line="67" pos:column="44"/></name></name> <operator pos:line="67" pos:column="45">=<pos:position pos:line="67" pos:column="46"/></operator> <call><name pos:line="67" pos:column="47">git_config_bool<pos:position pos:line="67" pos:column="62"/></name><argument_list pos:line="67" pos:column="62">(<argument><expr><name pos:line="67" pos:column="63">key<pos:position pos:line="67" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="68">value<pos:position pos:line="67" pos:column="73"/></name></expr></argument>)<pos:position pos:line="67" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="75"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="68" pos:column="9">else <if pos:line="68" pos:column="14">if <condition pos:line="68" pos:column="17">(<expr><operator pos:line="68" pos:column="18">!<pos:position pos:line="68" pos:column="19"/></operator><call><name pos:line="68" pos:column="19">strcmp<pos:position pos:line="68" pos:column="25"/></name><argument_list pos:line="68" pos:column="25">(<argument><expr><name pos:line="68" pos:column="26">subkey<pos:position pos:line="68" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="34">".prune"<pos:position pos:line="68" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="68" pos:column="44"/></condition><then pos:line="68" pos:column="44">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="69" pos:column="17">remote<pos:position pos:line="69" pos:column="23"/></name><operator pos:line="69" pos:column="23">-&gt;<pos:position pos:line="69" pos:column="28"/></operator><name pos:line="69" pos:column="25">prune<pos:position pos:line="69" pos:column="30"/></name></name> <operator pos:line="69" pos:column="31">=<pos:position pos:line="69" pos:column="32"/></operator> <call><name pos:line="69" pos:column="33">git_config_bool<pos:position pos:line="69" pos:column="48"/></name><argument_list pos:line="69" pos:column="48">(<argument><expr><name pos:line="69" pos:column="49">key<pos:position pos:line="69" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="54">value<pos:position pos:line="69" pos:column="59"/></name></expr></argument>)<pos:position pos:line="69" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="61"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="70" pos:column="9">else <if pos:line="70" pos:column="14">if <condition pos:line="70" pos:column="17">(<expr><operator pos:line="70" pos:column="18">!<pos:position pos:line="70" pos:column="19"/></operator><call><name pos:line="70" pos:column="19">strcmp<pos:position pos:line="70" pos:column="25"/></name><argument_list pos:line="70" pos:column="25">(<argument><expr><name pos:line="70" pos:column="26">subkey<pos:position pos:line="70" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="34">".url"<pos:position pos:line="70" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="70" pos:column="42"/></condition><then pos:line="70" pos:column="42"> <block pos:line="70" pos:column="43">{
		<decl_stmt><decl><type><specifier pos:line="71" pos:column="17">const<pos:position pos:line="71" pos:column="22"/></specifier> <name pos:line="71" pos:column="23">char<pos:position pos:line="71" pos:column="27"/></name> <modifier pos:line="71" pos:column="28">*<pos:position pos:line="71" pos:column="29"/></modifier></type><name pos:line="71" pos:column="29">v<pos:position pos:line="71" pos:column="30"/></name></decl>;<pos:position pos:line="71" pos:column="31"/></decl_stmt>
		<if pos:line="72" pos:column="17">if <condition pos:line="72" pos:column="20">(<expr><call><name pos:line="72" pos:column="21">git_config_string<pos:position pos:line="72" pos:column="38"/></name><argument_list pos:line="72" pos:column="38">(<argument><expr><operator pos:line="72" pos:column="39">&amp;<pos:position pos:line="72" pos:column="44"/></operator><name pos:line="72" pos:column="40">v<pos:position pos:line="72" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="43">key<pos:position pos:line="72" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="48">value<pos:position pos:line="72" pos:column="53"/></name></expr></argument>)<pos:position pos:line="72" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="72" pos:column="55"/></condition><then pos:line="72" pos:column="55">
			<block type="pseudo"><return pos:line="73" pos:column="25">return <expr><operator pos:line="73" pos:column="32">-<pos:position pos:line="73" pos:column="33"/></operator><literal type="number" pos:line="73" pos:column="33">1<pos:position pos:line="73" pos:column="34"/></literal></expr>;<pos:position pos:line="73" pos:column="35"/></return></block></then></if>
		<expr_stmt><expr><call><name pos:line="74" pos:column="17">add_url<pos:position pos:line="74" pos:column="24"/></name><argument_list pos:line="74" pos:column="24">(<argument><expr><name pos:line="74" pos:column="25">remote<pos:position pos:line="74" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="33">v<pos:position pos:line="74" pos:column="34"/></name></expr></argument>)<pos:position pos:line="74" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="75" pos:column="10"/></block></then></if></elseif> <elseif pos:line="75" pos:column="11">else <if pos:line="75" pos:column="16">if <condition pos:line="75" pos:column="19">(<expr><operator pos:line="75" pos:column="20">!<pos:position pos:line="75" pos:column="21"/></operator><call><name pos:line="75" pos:column="21">strcmp<pos:position pos:line="75" pos:column="27"/></name><argument_list pos:line="75" pos:column="27">(<argument><expr><name pos:line="75" pos:column="28">subkey<pos:position pos:line="75" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="36">".pushurl"<pos:position pos:line="75" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="75" pos:column="48"/></condition><then pos:line="75" pos:column="48"> <block pos:line="75" pos:column="49">{
		<decl_stmt><decl><type><specifier pos:line="76" pos:column="17">const<pos:position pos:line="76" pos:column="22"/></specifier> <name pos:line="76" pos:column="23">char<pos:position pos:line="76" pos:column="27"/></name> <modifier pos:line="76" pos:column="28">*<pos:position pos:line="76" pos:column="29"/></modifier></type><name pos:line="76" pos:column="29">v<pos:position pos:line="76" pos:column="30"/></name></decl>;<pos:position pos:line="76" pos:column="31"/></decl_stmt>
		<if pos:line="77" pos:column="17">if <condition pos:line="77" pos:column="20">(<expr><call><name pos:line="77" pos:column="21">git_config_string<pos:position pos:line="77" pos:column="38"/></name><argument_list pos:line="77" pos:column="38">(<argument><expr><operator pos:line="77" pos:column="39">&amp;<pos:position pos:line="77" pos:column="44"/></operator><name pos:line="77" pos:column="40">v<pos:position pos:line="77" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="43">key<pos:position pos:line="77" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="48">value<pos:position pos:line="77" pos:column="53"/></name></expr></argument>)<pos:position pos:line="77" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="77" pos:column="55"/></condition><then pos:line="77" pos:column="55">
			<block type="pseudo"><return pos:line="78" pos:column="25">return <expr><operator pos:line="78" pos:column="32">-<pos:position pos:line="78" pos:column="33"/></operator><literal type="number" pos:line="78" pos:column="33">1<pos:position pos:line="78" pos:column="34"/></literal></expr>;<pos:position pos:line="78" pos:column="35"/></return></block></then></if>
		<expr_stmt><expr><call><name pos:line="79" pos:column="17">add_pushurl<pos:position pos:line="79" pos:column="28"/></name><argument_list pos:line="79" pos:column="28">(<argument><expr><name pos:line="79" pos:column="29">remote<pos:position pos:line="79" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="37">v<pos:position pos:line="79" pos:column="38"/></name></expr></argument>)<pos:position pos:line="79" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="80" pos:column="10"/></block></then></if></elseif> <elseif pos:line="80" pos:column="11">else <if pos:line="80" pos:column="16">if <condition pos:line="80" pos:column="19">(<expr><operator pos:line="80" pos:column="20">!<pos:position pos:line="80" pos:column="21"/></operator><call><name pos:line="80" pos:column="21">strcmp<pos:position pos:line="80" pos:column="27"/></name><argument_list pos:line="80" pos:column="27">(<argument><expr><name pos:line="80" pos:column="28">subkey<pos:position pos:line="80" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="36">".push"<pos:position pos:line="80" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="80" pos:column="45"/></condition><then pos:line="80" pos:column="45"> <block pos:line="80" pos:column="46">{
		<decl_stmt><decl><type><specifier pos:line="81" pos:column="17">const<pos:position pos:line="81" pos:column="22"/></specifier> <name pos:line="81" pos:column="23">char<pos:position pos:line="81" pos:column="27"/></name> <modifier pos:line="81" pos:column="28">*<pos:position pos:line="81" pos:column="29"/></modifier></type><name pos:line="81" pos:column="29">v<pos:position pos:line="81" pos:column="30"/></name></decl>;<pos:position pos:line="81" pos:column="31"/></decl_stmt>
		<if pos:line="82" pos:column="17">if <condition pos:line="82" pos:column="20">(<expr><call><name pos:line="82" pos:column="21">git_config_string<pos:position pos:line="82" pos:column="38"/></name><argument_list pos:line="82" pos:column="38">(<argument><expr><operator pos:line="82" pos:column="39">&amp;<pos:position pos:line="82" pos:column="44"/></operator><name pos:line="82" pos:column="40">v<pos:position pos:line="82" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="43">key<pos:position pos:line="82" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="48">value<pos:position pos:line="82" pos:column="53"/></name></expr></argument>)<pos:position pos:line="82" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="82" pos:column="55"/></condition><then pos:line="82" pos:column="55">
			<block type="pseudo"><return pos:line="83" pos:column="25">return <expr><operator pos:line="83" pos:column="32">-<pos:position pos:line="83" pos:column="33"/></operator><literal type="number" pos:line="83" pos:column="33">1<pos:position pos:line="83" pos:column="34"/></literal></expr>;<pos:position pos:line="83" pos:column="35"/></return></block></then></if>
		<expr_stmt><expr><call><name pos:line="84" pos:column="17">add_push_refspec<pos:position pos:line="84" pos:column="33"/></name><argument_list pos:line="84" pos:column="33">(<argument><expr><name pos:line="84" pos:column="34">remote<pos:position pos:line="84" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="42">v<pos:position pos:line="84" pos:column="43"/></name></expr></argument>)<pos:position pos:line="84" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="85" pos:column="10"/></block></then></if></elseif> <elseif pos:line="85" pos:column="11">else <if pos:line="85" pos:column="16">if <condition pos:line="85" pos:column="19">(<expr><operator pos:line="85" pos:column="20">!<pos:position pos:line="85" pos:column="21"/></operator><call><name pos:line="85" pos:column="21">strcmp<pos:position pos:line="85" pos:column="27"/></name><argument_list pos:line="85" pos:column="27">(<argument><expr><name pos:line="85" pos:column="28">subkey<pos:position pos:line="85" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="85" pos:column="36">".fetch"<pos:position pos:line="85" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="85" pos:column="46"/></condition><then pos:line="85" pos:column="46"> <block pos:line="85" pos:column="47">{
		<decl_stmt><decl><type><specifier pos:line="86" pos:column="17">const<pos:position pos:line="86" pos:column="22"/></specifier> <name pos:line="86" pos:column="23">char<pos:position pos:line="86" pos:column="27"/></name> <modifier pos:line="86" pos:column="28">*<pos:position pos:line="86" pos:column="29"/></modifier></type><name pos:line="86" pos:column="29">v<pos:position pos:line="86" pos:column="30"/></name></decl>;<pos:position pos:line="86" pos:column="31"/></decl_stmt>
		<if pos:line="87" pos:column="17">if <condition pos:line="87" pos:column="20">(<expr><call><name pos:line="87" pos:column="21">git_config_string<pos:position pos:line="87" pos:column="38"/></name><argument_list pos:line="87" pos:column="38">(<argument><expr><operator pos:line="87" pos:column="39">&amp;<pos:position pos:line="87" pos:column="44"/></operator><name pos:line="87" pos:column="40">v<pos:position pos:line="87" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="43">key<pos:position pos:line="87" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="48">value<pos:position pos:line="87" pos:column="53"/></name></expr></argument>)<pos:position pos:line="87" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="87" pos:column="55"/></condition><then pos:line="87" pos:column="55">
			<block type="pseudo"><return pos:line="88" pos:column="25">return <expr><operator pos:line="88" pos:column="32">-<pos:position pos:line="88" pos:column="33"/></operator><literal type="number" pos:line="88" pos:column="33">1<pos:position pos:line="88" pos:column="34"/></literal></expr>;<pos:position pos:line="88" pos:column="35"/></return></block></then></if>
		<expr_stmt><expr><call><name pos:line="89" pos:column="17">add_fetch_refspec<pos:position pos:line="89" pos:column="34"/></name><argument_list pos:line="89" pos:column="34">(<argument><expr><name pos:line="89" pos:column="35">remote<pos:position pos:line="89" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="43">v<pos:position pos:line="89" pos:column="44"/></name></expr></argument>)<pos:position pos:line="89" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="46"/></expr_stmt>
	}<pos:position pos:line="90" pos:column="10"/></block></then></if></elseif> <elseif pos:line="90" pos:column="11">else <if pos:line="90" pos:column="16">if <condition pos:line="90" pos:column="19">(<expr><operator pos:line="90" pos:column="20">!<pos:position pos:line="90" pos:column="21"/></operator><call><name pos:line="90" pos:column="21">strcmp<pos:position pos:line="90" pos:column="27"/></name><argument_list pos:line="90" pos:column="27">(<argument><expr><name pos:line="90" pos:column="28">subkey<pos:position pos:line="90" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="90" pos:column="36">".receivepack"<pos:position pos:line="90" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="90" pos:column="52"/></condition><then pos:line="90" pos:column="52"> <block pos:line="90" pos:column="53">{
		<decl_stmt><decl><type><specifier pos:line="91" pos:column="17">const<pos:position pos:line="91" pos:column="22"/></specifier> <name pos:line="91" pos:column="23">char<pos:position pos:line="91" pos:column="27"/></name> <modifier pos:line="91" pos:column="28">*<pos:position pos:line="91" pos:column="29"/></modifier></type><name pos:line="91" pos:column="29">v<pos:position pos:line="91" pos:column="30"/></name></decl>;<pos:position pos:line="91" pos:column="31"/></decl_stmt>
		<if pos:line="92" pos:column="17">if <condition pos:line="92" pos:column="20">(<expr><call><name pos:line="92" pos:column="21">git_config_string<pos:position pos:line="92" pos:column="38"/></name><argument_list pos:line="92" pos:column="38">(<argument><expr><operator pos:line="92" pos:column="39">&amp;<pos:position pos:line="92" pos:column="44"/></operator><name pos:line="92" pos:column="40">v<pos:position pos:line="92" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="43">key<pos:position pos:line="92" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="48">value<pos:position pos:line="92" pos:column="53"/></name></expr></argument>)<pos:position pos:line="92" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="92" pos:column="55"/></condition><then pos:line="92" pos:column="55">
			<block type="pseudo"><return pos:line="93" pos:column="25">return <expr><operator pos:line="93" pos:column="32">-<pos:position pos:line="93" pos:column="33"/></operator><literal type="number" pos:line="93" pos:column="33">1<pos:position pos:line="93" pos:column="34"/></literal></expr>;<pos:position pos:line="93" pos:column="35"/></return></block></then></if>
		<if pos:line="94" pos:column="17">if <condition pos:line="94" pos:column="20">(<expr><operator pos:line="94" pos:column="21">!<pos:position pos:line="94" pos:column="22"/></operator><name><name pos:line="94" pos:column="22">remote<pos:position pos:line="94" pos:column="28"/></name><operator pos:line="94" pos:column="28">-&gt;<pos:position pos:line="94" pos:column="33"/></operator><name pos:line="94" pos:column="30">receivepack<pos:position pos:line="94" pos:column="41"/></name></name></expr>)<pos:position pos:line="94" pos:column="42"/></condition><then pos:line="94" pos:column="42">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="95" pos:column="25">remote<pos:position pos:line="95" pos:column="31"/></name><operator pos:line="95" pos:column="31">-&gt;<pos:position pos:line="95" pos:column="36"/></operator><name pos:line="95" pos:column="33">receivepack<pos:position pos:line="95" pos:column="44"/></name></name> <operator pos:line="95" pos:column="45">=<pos:position pos:line="95" pos:column="46"/></operator> <name pos:line="95" pos:column="47">v<pos:position pos:line="95" pos:column="48"/></name></expr>;<pos:position pos:line="95" pos:column="49"/></expr_stmt></block></then>
		<else pos:line="96" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="97" pos:column="25">error<pos:position pos:line="97" pos:column="30"/></name><argument_list pos:line="97" pos:column="30">(<argument><expr><literal type="string" pos:line="97" pos:column="31">"more than one receivepack given, using the first"<pos:position pos:line="97" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="97" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="83"/></expr_stmt></block></else></if>
	}<pos:position pos:line="98" pos:column="10"/></block></then></if></elseif> <elseif pos:line="98" pos:column="11">else <if pos:line="98" pos:column="16">if <condition pos:line="98" pos:column="19">(<expr><operator pos:line="98" pos:column="20">!<pos:position pos:line="98" pos:column="21"/></operator><call><name pos:line="98" pos:column="21">strcmp<pos:position pos:line="98" pos:column="27"/></name><argument_list pos:line="98" pos:column="27">(<argument><expr><name pos:line="98" pos:column="28">subkey<pos:position pos:line="98" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="98" pos:column="36">".uploadpack"<pos:position pos:line="98" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="98" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="98" pos:column="51"/></condition><then pos:line="98" pos:column="51"> <block pos:line="98" pos:column="52">{
		<decl_stmt><decl><type><specifier pos:line="99" pos:column="17">const<pos:position pos:line="99" pos:column="22"/></specifier> <name pos:line="99" pos:column="23">char<pos:position pos:line="99" pos:column="27"/></name> <modifier pos:line="99" pos:column="28">*<pos:position pos:line="99" pos:column="29"/></modifier></type><name pos:line="99" pos:column="29">v<pos:position pos:line="99" pos:column="30"/></name></decl>;<pos:position pos:line="99" pos:column="31"/></decl_stmt>
		<if pos:line="100" pos:column="17">if <condition pos:line="100" pos:column="20">(<expr><call><name pos:line="100" pos:column="21">git_config_string<pos:position pos:line="100" pos:column="38"/></name><argument_list pos:line="100" pos:column="38">(<argument><expr><operator pos:line="100" pos:column="39">&amp;<pos:position pos:line="100" pos:column="44"/></operator><name pos:line="100" pos:column="40">v<pos:position pos:line="100" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="43">key<pos:position pos:line="100" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="48">value<pos:position pos:line="100" pos:column="53"/></name></expr></argument>)<pos:position pos:line="100" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="100" pos:column="55"/></condition><then pos:line="100" pos:column="55">
			<block type="pseudo"><return pos:line="101" pos:column="25">return <expr><operator pos:line="101" pos:column="32">-<pos:position pos:line="101" pos:column="33"/></operator><literal type="number" pos:line="101" pos:column="33">1<pos:position pos:line="101" pos:column="34"/></literal></expr>;<pos:position pos:line="101" pos:column="35"/></return></block></then></if>
		<if pos:line="102" pos:column="17">if <condition pos:line="102" pos:column="20">(<expr><operator pos:line="102" pos:column="21">!<pos:position pos:line="102" pos:column="22"/></operator><name><name pos:line="102" pos:column="22">remote<pos:position pos:line="102" pos:column="28"/></name><operator pos:line="102" pos:column="28">-&gt;<pos:position pos:line="102" pos:column="33"/></operator><name pos:line="102" pos:column="30">uploadpack<pos:position pos:line="102" pos:column="40"/></name></name></expr>)<pos:position pos:line="102" pos:column="41"/></condition><then pos:line="102" pos:column="41">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="103" pos:column="25">remote<pos:position pos:line="103" pos:column="31"/></name><operator pos:line="103" pos:column="31">-&gt;<pos:position pos:line="103" pos:column="36"/></operator><name pos:line="103" pos:column="33">uploadpack<pos:position pos:line="103" pos:column="43"/></name></name> <operator pos:line="103" pos:column="44">=<pos:position pos:line="103" pos:column="45"/></operator> <name pos:line="103" pos:column="46">v<pos:position pos:line="103" pos:column="47"/></name></expr>;<pos:position pos:line="103" pos:column="48"/></expr_stmt></block></then>
		<else pos:line="104" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="105" pos:column="25">error<pos:position pos:line="105" pos:column="30"/></name><argument_list pos:line="105" pos:column="30">(<argument><expr><literal type="string" pos:line="105" pos:column="31">"more than one uploadpack given, using the first"<pos:position pos:line="105" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="105" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="82"/></expr_stmt></block></else></if>
	}<pos:position pos:line="106" pos:column="10"/></block></then></if></elseif> <elseif pos:line="106" pos:column="11">else <if pos:line="106" pos:column="16">if <condition pos:line="106" pos:column="19">(<expr><operator pos:line="106" pos:column="20">!<pos:position pos:line="106" pos:column="21"/></operator><call><name pos:line="106" pos:column="21">strcmp<pos:position pos:line="106" pos:column="27"/></name><argument_list pos:line="106" pos:column="27">(<argument><expr><name pos:line="106" pos:column="28">subkey<pos:position pos:line="106" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="106" pos:column="36">".tagopt"<pos:position pos:line="106" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="106" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="106" pos:column="47"/></condition><then pos:line="106" pos:column="47"> <block pos:line="106" pos:column="48">{
		<if pos:line="107" pos:column="17">if <condition pos:line="107" pos:column="20">(<expr><operator pos:line="107" pos:column="21">!<pos:position pos:line="107" pos:column="22"/></operator><call><name pos:line="107" pos:column="22">strcmp<pos:position pos:line="107" pos:column="28"/></name><argument_list pos:line="107" pos:column="28">(<argument><expr><name pos:line="107" pos:column="29">value<pos:position pos:line="107" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="107" pos:column="36">"--no-tags"<pos:position pos:line="107" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="107" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="107" pos:column="49"/></condition><then pos:line="107" pos:column="49">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="108" pos:column="25">remote<pos:position pos:line="108" pos:column="31"/></name><operator pos:line="108" pos:column="31">-&gt;<pos:position pos:line="108" pos:column="36"/></operator><name pos:line="108" pos:column="33">fetch_tags<pos:position pos:line="108" pos:column="43"/></name></name> <operator pos:line="108" pos:column="44">=<pos:position pos:line="108" pos:column="45"/></operator> <operator pos:line="108" pos:column="46">-<pos:position pos:line="108" pos:column="47"/></operator><literal type="number" pos:line="108" pos:column="47">1<pos:position pos:line="108" pos:column="48"/></literal></expr>;<pos:position pos:line="108" pos:column="49"/></expr_stmt></block></then>
		<elseif pos:line="109" pos:column="17">else <if pos:line="109" pos:column="22">if <condition pos:line="109" pos:column="25">(<expr><operator pos:line="109" pos:column="26">!<pos:position pos:line="109" pos:column="27"/></operator><call><name pos:line="109" pos:column="27">strcmp<pos:position pos:line="109" pos:column="33"/></name><argument_list pos:line="109" pos:column="33">(<argument><expr><name pos:line="109" pos:column="34">value<pos:position pos:line="109" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="109" pos:column="41">"--tags"<pos:position pos:line="109" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="109" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="109" pos:column="51"/></condition><then pos:line="109" pos:column="51">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="110" pos:column="25">remote<pos:position pos:line="110" pos:column="31"/></name><operator pos:line="110" pos:column="31">-&gt;<pos:position pos:line="110" pos:column="36"/></operator><name pos:line="110" pos:column="33">fetch_tags<pos:position pos:line="110" pos:column="43"/></name></name> <operator pos:line="110" pos:column="44">=<pos:position pos:line="110" pos:column="45"/></operator> <literal type="number" pos:line="110" pos:column="46">2<pos:position pos:line="110" pos:column="47"/></literal></expr>;<pos:position pos:line="110" pos:column="48"/></expr_stmt></block></then></if></elseif></if>
	}<pos:position pos:line="111" pos:column="10"/></block></then></if></elseif> <elseif pos:line="111" pos:column="11">else <if pos:line="111" pos:column="16">if <condition pos:line="111" pos:column="19">(<expr><operator pos:line="111" pos:column="20">!<pos:position pos:line="111" pos:column="21"/></operator><call><name pos:line="111" pos:column="21">strcmp<pos:position pos:line="111" pos:column="27"/></name><argument_list pos:line="111" pos:column="27">(<argument><expr><name pos:line="111" pos:column="28">subkey<pos:position pos:line="111" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="111" pos:column="36">".proxy"<pos:position pos:line="111" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="111" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="111" pos:column="46"/></condition><then pos:line="111" pos:column="46"> <block pos:line="111" pos:column="47">{
		<return pos:line="112" pos:column="17">return <expr><call><name pos:line="112" pos:column="24">git_config_string<pos:position pos:line="112" pos:column="41"/></name><argument_list pos:line="112" pos:column="41">(<argument><expr><operator pos:line="112" pos:column="42">(<pos:position pos:line="112" pos:column="43"/></operator><specifier pos:line="112" pos:column="43">const<pos:position pos:line="112" pos:column="48"/></specifier> <name pos:line="112" pos:column="49">char<pos:position pos:line="112" pos:column="53"/></name> <operator pos:line="112" pos:column="54">*<pos:position pos:line="112" pos:column="55"/></operator><operator pos:line="112" pos:column="55">*<pos:position pos:line="112" pos:column="56"/></operator><operator pos:line="112" pos:column="56">)<pos:position pos:line="112" pos:column="57"/></operator><operator pos:line="112" pos:column="57">&amp;<pos:position pos:line="112" pos:column="62"/></operator><name><name pos:line="112" pos:column="58">remote<pos:position pos:line="112" pos:column="64"/></name><operator pos:line="112" pos:column="64">-&gt;<pos:position pos:line="112" pos:column="69"/></operator><name pos:line="112" pos:column="66">http_proxy<pos:position pos:line="112" pos:column="76"/></name></name></expr></argument>,
					 <argument><expr><name pos:line="113" pos:column="42">key<pos:position pos:line="113" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="47">value<pos:position pos:line="113" pos:column="52"/></name></expr></argument>)<pos:position pos:line="113" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="54"/></return>
	}<pos:position pos:line="114" pos:column="10"/></block></then></if></elseif> <elseif pos:line="114" pos:column="11">else <if pos:line="114" pos:column="16">if <condition pos:line="114" pos:column="19">(<expr><operator pos:line="114" pos:column="20">!<pos:position pos:line="114" pos:column="21"/></operator><call><name pos:line="114" pos:column="21">strcmp<pos:position pos:line="114" pos:column="27"/></name><argument_list pos:line="114" pos:column="27">(<argument><expr><name pos:line="114" pos:column="28">subkey<pos:position pos:line="114" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="114" pos:column="36">".vcs"<pos:position pos:line="114" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="114" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="114" pos:column="44"/></condition><then pos:line="114" pos:column="44"> <block pos:line="114" pos:column="45">{
		<return pos:line="115" pos:column="17">return <expr><call><name pos:line="115" pos:column="24">git_config_string<pos:position pos:line="115" pos:column="41"/></name><argument_list pos:line="115" pos:column="41">(<argument><expr><operator pos:line="115" pos:column="42">&amp;<pos:position pos:line="115" pos:column="47"/></operator><name><name pos:line="115" pos:column="43">remote<pos:position pos:line="115" pos:column="49"/></name><operator pos:line="115" pos:column="49">-&gt;<pos:position pos:line="115" pos:column="54"/></operator><name pos:line="115" pos:column="51">foreign_vcs<pos:position pos:line="115" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="64">key<pos:position pos:line="115" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="69">value<pos:position pos:line="115" pos:column="74"/></name></expr></argument>)<pos:position pos:line="115" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="76"/></return>
	}<pos:position pos:line="116" pos:column="10"/></block></then></if></elseif></if>
	<return pos:line="117" pos:column="9">return <expr><literal type="number" pos:line="117" pos:column="16">0<pos:position pos:line="117" pos:column="17"/></literal></expr>;<pos:position pos:line="117" pos:column="18"/></return>
}<pos:position pos:line="118" pos:column="2"/></block></function></unit>

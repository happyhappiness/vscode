<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4715_git-2.4.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">prepare_push_cert_nonce<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><specifier pos:line="1" pos:column="38">const<pos:position pos:line="1" pos:column="43"/></specifier> <name pos:line="1" pos:column="44">char<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">path<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">unsigned<pos:position pos:line="1" pos:column="64"/></name> <name pos:line="1" pos:column="65">long<pos:position pos:line="1" pos:column="69"/></name></type> <name pos:line="1" pos:column="70">stamp<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="76"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">strbuf<pos:position pos:line="3" pos:column="22"/></name></name></type> <name pos:line="3" pos:column="23">buf<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">= <expr><name pos:line="3" pos:column="29">STRBUF_INIT<pos:position pos:line="3" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">unsigned<pos:position pos:line="4" pos:column="17"/></name> <name pos:line="4" pos:column="18">char<pos:position pos:line="4" pos:column="22"/></name></type> <name><name pos:line="4" pos:column="23">sha1<pos:position pos:line="4" pos:column="27"/></name><index pos:line="4" pos:column="27">[<expr><literal type="number" pos:line="4" pos:column="28">20<pos:position pos:line="4" pos:column="30"/></literal></expr>]<pos:position pos:line="4" pos:column="31"/></index></name></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="6" pos:column="9">strbuf_addf<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><operator pos:line="6" pos:column="21">&amp;<pos:position pos:line="6" pos:column="26"/></operator><name pos:line="6" pos:column="22">buf<pos:position pos:line="6" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="27">"%s:%lu"<pos:position pos:line="6" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="37">path<pos:position pos:line="6" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="43">stamp<pos:position pos:line="6" pos:column="48"/></name></expr></argument>)<pos:position pos:line="6" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="50"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="7" pos:column="9">hmac_sha1<pos:position pos:line="7" pos:column="18"/></name><argument_list pos:line="7" pos:column="18">(<argument><expr><name pos:line="7" pos:column="19">sha1<pos:position pos:line="7" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="25">buf<pos:position pos:line="7" pos:column="28"/></name><operator pos:line="7" pos:column="28">.<pos:position pos:line="7" pos:column="29"/></operator><name pos:line="7" pos:column="29">buf<pos:position pos:line="7" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="34">buf<pos:position pos:line="7" pos:column="37"/></name><operator pos:line="7" pos:column="37">.<pos:position pos:line="7" pos:column="38"/></operator><name pos:line="7" pos:column="38">len<pos:position pos:line="7" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="43">cert_nonce_seed<pos:position pos:line="7" pos:column="58"/></name></expr></argument>, <argument><expr><call><name pos:line="7" pos:column="60">strlen<pos:position pos:line="7" pos:column="66"/></name><argument_list pos:line="7" pos:column="66">(<argument><expr><name pos:line="7" pos:column="67">cert_nonce_seed<pos:position pos:line="7" pos:column="82"/></name></expr></argument>)<pos:position pos:line="7" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="85"/></expr_stmt><empty_stmt pos:line="7" pos:column="85">;<pos:position pos:line="7" pos:column="86"/></empty_stmt>
	<expr_stmt><expr><call><name pos:line="8" pos:column="9">strbuf_release<pos:position pos:line="8" pos:column="23"/></name><argument_list pos:line="8" pos:column="23">(<argument><expr><operator pos:line="8" pos:column="24">&amp;<pos:position pos:line="8" pos:column="29"/></operator><name pos:line="8" pos:column="25">buf<pos:position pos:line="8" pos:column="28"/></name></expr></argument>)<pos:position pos:line="8" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="30"/></expr_stmt>

	<comment type="block" pos:line="10" pos:column="9">/* RFC 2104 5. HMAC-SHA1-80 */</comment>
	<expr_stmt><expr><call><name pos:line="11" pos:column="9">strbuf_addf<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">(<argument><expr><operator pos:line="11" pos:column="21">&amp;<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="22">buf<pos:position pos:line="11" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="27">"%lu-%.*s"<pos:position pos:line="11" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="39">stamp<pos:position pos:line="11" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="46">20<pos:position pos:line="11" pos:column="48"/></literal></expr></argument>, <argument><expr><call><name pos:line="11" pos:column="50">sha1_to_hex<pos:position pos:line="11" pos:column="61"/></name><argument_list pos:line="11" pos:column="61">(<argument><expr><name pos:line="11" pos:column="62">sha1<pos:position pos:line="11" pos:column="66"/></name></expr></argument>)<pos:position pos:line="11" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="69"/></expr_stmt>
	<return pos:line="12" pos:column="9">return <expr><call><name pos:line="12" pos:column="16">strbuf_detach<pos:position pos:line="12" pos:column="29"/></name><argument_list pos:line="12" pos:column="29">(<argument><expr><operator pos:line="12" pos:column="30">&amp;<pos:position pos:line="12" pos:column="35"/></operator><name pos:line="12" pos:column="31">buf<pos:position pos:line="12" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="36">NULL<pos:position pos:line="12" pos:column="40"/></name></expr></argument>)<pos:position pos:line="12" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="42"/></return>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

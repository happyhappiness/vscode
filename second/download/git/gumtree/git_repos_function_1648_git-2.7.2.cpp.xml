<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1648_git-2.7.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">uint32_t<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">find_object_pos<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><specifier pos:line="1" pos:column="33">const<pos:position pos:line="1" pos:column="38"/></specifier> <name pos:line="1" pos:column="39">unsigned<pos:position pos:line="1" pos:column="47"/></name> <name pos:line="1" pos:column="48">char<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">sha1<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="59"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">object_entry<pos:position pos:line="3" pos:column="28"/></name></name> <modifier pos:line="3" pos:column="29">*<pos:position pos:line="3" pos:column="30"/></modifier></type><name pos:line="3" pos:column="30">entry<pos:position pos:line="3" pos:column="35"/></name> <init pos:line="3" pos:column="36">= <expr><call><name pos:line="3" pos:column="38">packlist_find<pos:position pos:line="3" pos:column="51"/></name><argument_list pos:line="3" pos:column="51">(<argument><expr><name><name pos:line="3" pos:column="52">writer<pos:position pos:line="3" pos:column="58"/></name><operator pos:line="3" pos:column="58">.<pos:position pos:line="3" pos:column="59"/></operator><name pos:line="3" pos:column="59">to_pack<pos:position pos:line="3" pos:column="66"/></name></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="68">sha1<pos:position pos:line="3" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="74">NULL<pos:position pos:line="3" pos:column="78"/></name></expr></argument>)<pos:position pos:line="3" pos:column="79"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="80"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">entry<pos:position pos:line="5" pos:column="19"/></name></expr>)<pos:position pos:line="5" pos:column="20"/></condition><then pos:line="5" pos:column="20"> <block pos:line="5" pos:column="21">{
		<expr_stmt><expr><call><name pos:line="6" pos:column="17">die<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><literal type="string" pos:line="6" pos:column="21">"Failed to write bitmap index. Packfile doesn't have full closure "<pos:position pos:line="6" pos:column="88"/></literal>
			<literal type="string" pos:line="7" pos:column="25">"(object %s is missing)"<pos:position pos:line="7" pos:column="49"/></literal></expr></argument>, <argument><expr><call><name pos:line="7" pos:column="51">sha1_to_hex<pos:position pos:line="7" pos:column="62"/></name><argument_list pos:line="7" pos:column="62">(<argument><expr><name pos:line="7" pos:column="63">sha1<pos:position pos:line="7" pos:column="67"/></name></expr></argument>)<pos:position pos:line="7" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="70"/></expr_stmt>
	}<pos:position pos:line="8" pos:column="10"/></block></then></if>

	<return pos:line="10" pos:column="9">return <expr><name><name pos:line="10" pos:column="16">entry<pos:position pos:line="10" pos:column="21"/></name><operator pos:line="10" pos:column="21">-&gt;<pos:position pos:line="10" pos:column="26"/></operator><name pos:line="10" pos:column="23">in_pack_pos<pos:position pos:line="10" pos:column="34"/></name></name></expr>;<pos:position pos:line="10" pos:column="35"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

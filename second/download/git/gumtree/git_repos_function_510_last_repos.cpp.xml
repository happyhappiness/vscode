<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_510_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">init_scoreboard<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name><name pos:line="1" pos:column="22">struct<pos:position pos:line="1" pos:column="28"/></name> <name pos:line="1" pos:column="29">blame_scoreboard<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">sb<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="3" pos:column="9">memset<pos:position pos:line="3" pos:column="15"/></name><argument_list pos:line="3" pos:column="15">(<argument><expr><name pos:line="3" pos:column="16">sb<pos:position pos:line="3" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="3" pos:column="20">0<pos:position pos:line="3" pos:column="21"/></literal></expr></argument>, <argument><expr><sizeof pos:line="3" pos:column="23">sizeof<argument_list pos:line="3" pos:column="29">(<argument><expr pos:line="3" pos:column="30">struct <name pos:line="3" pos:column="37">blame_scoreboard<pos:position pos:line="3" pos:column="53"/></name></expr></argument>)<pos:position pos:line="3" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="3" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="56"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="4" pos:column="9">sb<pos:position pos:line="4" pos:column="11"/></name><operator pos:line="4" pos:column="11">-&gt;<pos:position pos:line="4" pos:column="16"/></operator><name pos:line="4" pos:column="13">move_score<pos:position pos:line="4" pos:column="23"/></name></name> <operator pos:line="4" pos:column="24">=<pos:position pos:line="4" pos:column="25"/></operator> <name pos:line="4" pos:column="26">BLAME_DEFAULT_MOVE_SCORE<pos:position pos:line="4" pos:column="50"/></name></expr>;<pos:position pos:line="4" pos:column="51"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="5" pos:column="9">sb<pos:position pos:line="5" pos:column="11"/></name><operator pos:line="5" pos:column="11">-&gt;<pos:position pos:line="5" pos:column="16"/></operator><name pos:line="5" pos:column="13">copy_score<pos:position pos:line="5" pos:column="23"/></name></name> <operator pos:line="5" pos:column="24">=<pos:position pos:line="5" pos:column="25"/></operator> <name pos:line="5" pos:column="26">BLAME_DEFAULT_COPY_SCORE<pos:position pos:line="5" pos:column="50"/></name></expr>;<pos:position pos:line="5" pos:column="51"/></expr_stmt>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_26_git-2.7.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">git_proxy_command_options<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><specifier pos:line="1" pos:column="38">const<pos:position pos:line="1" pos:column="43"/></specifier> <name pos:line="1" pos:column="44">char<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">var<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="55">const<pos:position pos:line="1" pos:column="60"/></specifier> <name pos:line="1" pos:column="61">char<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">value<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="2" pos:column="17">void<pos:position pos:line="2" pos:column="21"/></name> <modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier></type><name pos:line="2" pos:column="23">cb<pos:position pos:line="2" pos:column="25"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="26"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><operator pos:line="4" pos:column="13">!<pos:position pos:line="4" pos:column="14"/></operator><call><name pos:line="4" pos:column="14">strcmp<pos:position pos:line="4" pos:column="20"/></name><argument_list pos:line="4" pos:column="20">(<argument><expr><name pos:line="4" pos:column="21">var<pos:position pos:line="4" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="26">"core.gitproxy"<pos:position pos:line="4" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="43"/></condition><then pos:line="4" pos:column="43"> <block pos:line="4" pos:column="44">{
		<decl_stmt><decl><type><specifier pos:line="5" pos:column="17">const<pos:position pos:line="5" pos:column="22"/></specifier> <name pos:line="5" pos:column="23">char<pos:position pos:line="5" pos:column="27"/></name> <modifier pos:line="5" pos:column="28">*<pos:position pos:line="5" pos:column="29"/></modifier></type><name pos:line="5" pos:column="29">for_pos<pos:position pos:line="5" pos:column="36"/></name></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="6" pos:column="17">int<pos:position pos:line="6" pos:column="20"/></name></type> <name pos:line="6" pos:column="21">matchlen<pos:position pos:line="6" pos:column="29"/></name> <init pos:line="6" pos:column="30">= <expr><operator pos:line="6" pos:column="32">-<pos:position pos:line="6" pos:column="33"/></operator><literal type="number" pos:line="6" pos:column="33">1<pos:position pos:line="6" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="35"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="7" pos:column="17">int<pos:position pos:line="7" pos:column="20"/></name></type> <name pos:line="7" pos:column="21">hostlen<pos:position pos:line="7" pos:column="28"/></name></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="8" pos:column="17">const<pos:position pos:line="8" pos:column="22"/></specifier> <name pos:line="8" pos:column="23">char<pos:position pos:line="8" pos:column="27"/></name> <modifier pos:line="8" pos:column="28">*<pos:position pos:line="8" pos:column="29"/></modifier></type><name pos:line="8" pos:column="29">rhost_name<pos:position pos:line="8" pos:column="39"/></name> <init pos:line="8" pos:column="40">= <expr><name pos:line="8" pos:column="42">cb<pos:position pos:line="8" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="45"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="9" pos:column="17">int<pos:position pos:line="9" pos:column="20"/></name></type> <name pos:line="9" pos:column="21">rhost_len<pos:position pos:line="9" pos:column="30"/></name> <init pos:line="9" pos:column="31">= <expr><call><name pos:line="9" pos:column="33">strlen<pos:position pos:line="9" pos:column="39"/></name><argument_list pos:line="9" pos:column="39">(<argument><expr><name pos:line="9" pos:column="40">rhost_name<pos:position pos:line="9" pos:column="50"/></name></expr></argument>)<pos:position pos:line="9" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="52"/></decl_stmt>

		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><name pos:line="11" pos:column="21">git_proxy_command<pos:position pos:line="11" pos:column="38"/></name></expr>)<pos:position pos:line="11" pos:column="39"/></condition><then pos:line="11" pos:column="39">
			<block type="pseudo"><return pos:line="12" pos:column="25">return <expr><literal type="number" pos:line="12" pos:column="32">0<pos:position pos:line="12" pos:column="33"/></literal></expr>;<pos:position pos:line="12" pos:column="34"/></return></block></then></if>
		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><operator pos:line="13" pos:column="21">!<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="22">value<pos:position pos:line="13" pos:column="27"/></name></expr>)<pos:position pos:line="13" pos:column="28"/></condition><then pos:line="13" pos:column="28">
			<block type="pseudo"><return pos:line="14" pos:column="25">return <expr><call><name pos:line="14" pos:column="32">config_error_nonbool<pos:position pos:line="14" pos:column="52"/></name><argument_list pos:line="14" pos:column="52">(<argument><expr><name pos:line="14" pos:column="53">var<pos:position pos:line="14" pos:column="56"/></name></expr></argument>)<pos:position pos:line="14" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="58"/></return></block></then></if>
		<comment type="block" pos:line="15" pos:column="17">/* [core]
		 * ;# matches www.kernel.org as well
		 * gitproxy = netcatter-1 for kernel.org
		 * gitproxy = netcatter-2 for sample.xz
		 * gitproxy = netcatter-default
		 */</comment>
		<expr_stmt><expr><name pos:line="21" pos:column="17">for_pos<pos:position pos:line="21" pos:column="24"/></name> <operator pos:line="21" pos:column="25">=<pos:position pos:line="21" pos:column="26"/></operator> <call><name pos:line="21" pos:column="27">strstr<pos:position pos:line="21" pos:column="33"/></name><argument_list pos:line="21" pos:column="33">(<argument><expr><name pos:line="21" pos:column="34">value<pos:position pos:line="21" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="41">" for "<pos:position pos:line="21" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="50"/></expr_stmt>
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><operator pos:line="22" pos:column="21">!<pos:position pos:line="22" pos:column="22"/></operator><name pos:line="22" pos:column="22">for_pos<pos:position pos:line="22" pos:column="29"/></name></expr>)<pos:position pos:line="22" pos:column="30"/></condition><then pos:line="22" pos:column="30">
			<comment type="block" pos:line="23" pos:column="25">/* matches everybody */</comment>
			<block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="25">matchlen<pos:position pos:line="24" pos:column="33"/></name> <operator pos:line="24" pos:column="34">=<pos:position pos:line="24" pos:column="35"/></operator> <call><name pos:line="24" pos:column="36">strlen<pos:position pos:line="24" pos:column="42"/></name><argument_list pos:line="24" pos:column="42">(<argument><expr><name pos:line="24" pos:column="43">value<pos:position pos:line="24" pos:column="48"/></name></expr></argument>)<pos:position pos:line="24" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="50"/></expr_stmt></block></then>
		<else pos:line="25" pos:column="17">else <block pos:line="25" pos:column="22">{
			<expr_stmt><expr><name pos:line="26" pos:column="25">hostlen<pos:position pos:line="26" pos:column="32"/></name> <operator pos:line="26" pos:column="33">=<pos:position pos:line="26" pos:column="34"/></operator> <call><name pos:line="26" pos:column="35">strlen<pos:position pos:line="26" pos:column="41"/></name><argument_list pos:line="26" pos:column="41">(<argument><expr><name pos:line="26" pos:column="42">for_pos<pos:position pos:line="26" pos:column="49"/></name> <operator pos:line="26" pos:column="50">+<pos:position pos:line="26" pos:column="51"/></operator> <literal type="number" pos:line="26" pos:column="52">5<pos:position pos:line="26" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="55"/></expr_stmt>
			<if pos:line="27" pos:column="25">if <condition pos:line="27" pos:column="28">(<expr><name pos:line="27" pos:column="29">rhost_len<pos:position pos:line="27" pos:column="38"/></name> <operator pos:line="27" pos:column="39">&lt;<pos:position pos:line="27" pos:column="43"/></operator> <name pos:line="27" pos:column="41">hostlen<pos:position pos:line="27" pos:column="48"/></name></expr>)<pos:position pos:line="27" pos:column="49"/></condition><then pos:line="27" pos:column="49">
				<block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="33">matchlen<pos:position pos:line="28" pos:column="41"/></name> <operator pos:line="28" pos:column="42">=<pos:position pos:line="28" pos:column="43"/></operator> <operator pos:line="28" pos:column="44">-<pos:position pos:line="28" pos:column="45"/></operator><literal type="number" pos:line="28" pos:column="45">1<pos:position pos:line="28" pos:column="46"/></literal></expr>;<pos:position pos:line="28" pos:column="47"/></expr_stmt></block></then>
			<elseif pos:line="29" pos:column="25">else <if pos:line="29" pos:column="30">if <condition pos:line="29" pos:column="33">(<expr><operator pos:line="29" pos:column="34">!<pos:position pos:line="29" pos:column="35"/></operator><call><name pos:line="29" pos:column="35">strncmp<pos:position pos:line="29" pos:column="42"/></name><argument_list pos:line="29" pos:column="42">(<argument><expr><name pos:line="29" pos:column="43">for_pos<pos:position pos:line="29" pos:column="50"/></name> <operator pos:line="29" pos:column="51">+<pos:position pos:line="29" pos:column="52"/></operator> <literal type="number" pos:line="29" pos:column="53">5<pos:position pos:line="29" pos:column="54"/></literal></expr></argument>,
					  <argument><expr><name pos:line="30" pos:column="43">rhost_name<pos:position pos:line="30" pos:column="53"/></name> <operator pos:line="30" pos:column="54">+<pos:position pos:line="30" pos:column="55"/></operator> <name pos:line="30" pos:column="56">rhost_len<pos:position pos:line="30" pos:column="65"/></name> <operator pos:line="30" pos:column="66">-<pos:position pos:line="30" pos:column="67"/></operator> <name pos:line="30" pos:column="68">hostlen<pos:position pos:line="30" pos:column="75"/></name></expr></argument>,
					  <argument><expr><name pos:line="31" pos:column="43">hostlen<pos:position pos:line="31" pos:column="50"/></name></expr></argument>)<pos:position pos:line="31" pos:column="51"/></argument_list></call> <operator pos:line="31" pos:column="52">&amp;&amp;<pos:position pos:line="31" pos:column="62"/></operator>
				 <operator pos:line="32" pos:column="34">(<pos:position pos:line="32" pos:column="35"/></operator><operator pos:line="32" pos:column="35">(<pos:position pos:line="32" pos:column="36"/></operator><name pos:line="32" pos:column="36">rhost_len<pos:position pos:line="32" pos:column="45"/></name> <operator pos:line="32" pos:column="46">==<pos:position pos:line="32" pos:column="48"/></operator> <name pos:line="32" pos:column="49">hostlen<pos:position pos:line="32" pos:column="56"/></name><operator pos:line="32" pos:column="56">)<pos:position pos:line="32" pos:column="57"/></operator> <operator pos:line="32" pos:column="58">||<pos:position pos:line="32" pos:column="60"/></operator>
				  <name><name pos:line="33" pos:column="35">rhost_name<pos:position pos:line="33" pos:column="45"/></name><index pos:line="33" pos:column="45">[<expr><name pos:line="33" pos:column="46">rhost_len<pos:position pos:line="33" pos:column="55"/></name> <operator pos:line="33" pos:column="56">-<pos:position pos:line="33" pos:column="57"/></operator> <name pos:line="33" pos:column="58">hostlen<pos:position pos:line="33" pos:column="65"/></name> <operator pos:line="33" pos:column="66">-<pos:position pos:line="33" pos:column="67"/></operator><literal type="number" pos:line="33" pos:column="67">1<pos:position pos:line="33" pos:column="68"/></literal></expr>]<pos:position pos:line="33" pos:column="69"/></index></name> <operator pos:line="33" pos:column="70">==<pos:position pos:line="33" pos:column="72"/></operator> <literal type="char" pos:line="33" pos:column="73">'.'<pos:position pos:line="33" pos:column="76"/></literal><operator pos:line="33" pos:column="76">)<pos:position pos:line="33" pos:column="77"/></operator></expr>)<pos:position pos:line="33" pos:column="78"/></condition><then pos:line="33" pos:column="78">
				<block type="pseudo"><expr_stmt><expr><name pos:line="34" pos:column="33">matchlen<pos:position pos:line="34" pos:column="41"/></name> <operator pos:line="34" pos:column="42">=<pos:position pos:line="34" pos:column="43"/></operator> <name pos:line="34" pos:column="44">for_pos<pos:position pos:line="34" pos:column="51"/></name> <operator pos:line="34" pos:column="52">-<pos:position pos:line="34" pos:column="53"/></operator> <name pos:line="34" pos:column="54">value<pos:position pos:line="34" pos:column="59"/></name></expr>;<pos:position pos:line="34" pos:column="60"/></expr_stmt></block></then></if></elseif>
			<else pos:line="35" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="36" pos:column="33">matchlen<pos:position pos:line="36" pos:column="41"/></name> <operator pos:line="36" pos:column="42">=<pos:position pos:line="36" pos:column="43"/></operator> <operator pos:line="36" pos:column="44">-<pos:position pos:line="36" pos:column="45"/></operator><literal type="number" pos:line="36" pos:column="45">1<pos:position pos:line="36" pos:column="46"/></literal></expr>;<pos:position pos:line="36" pos:column="47"/></expr_stmt></block></else></if>
		}<pos:position pos:line="37" pos:column="18"/></block></else></if>
		<if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><literal type="number" pos:line="38" pos:column="21">0<pos:position pos:line="38" pos:column="22"/></literal> <operator pos:line="38" pos:column="23">&lt;=<pos:position pos:line="38" pos:column="28"/></operator> <name pos:line="38" pos:column="26">matchlen<pos:position pos:line="38" pos:column="34"/></name></expr>)<pos:position pos:line="38" pos:column="35"/></condition><then pos:line="38" pos:column="35"> <block pos:line="38" pos:column="36">{
			<comment type="block" pos:line="39" pos:column="25">/* core.gitproxy = none for kernel.org */</comment>
			<if pos:line="40" pos:column="25">if <condition pos:line="40" pos:column="28">(<expr><name pos:line="40" pos:column="29">matchlen<pos:position pos:line="40" pos:column="37"/></name> <operator pos:line="40" pos:column="38">==<pos:position pos:line="40" pos:column="40"/></operator> <literal type="number" pos:line="40" pos:column="41">4<pos:position pos:line="40" pos:column="42"/></literal> <operator pos:line="40" pos:column="43">&amp;&amp;<pos:position pos:line="40" pos:column="53"/></operator>
			    <operator pos:line="41" pos:column="29">!<pos:position pos:line="41" pos:column="30"/></operator><call><name pos:line="41" pos:column="30">memcmp<pos:position pos:line="41" pos:column="36"/></name><argument_list pos:line="41" pos:column="36">(<argument><expr><name pos:line="41" pos:column="37">value<pos:position pos:line="41" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="44">"none"<pos:position pos:line="41" pos:column="50"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="52">4<pos:position pos:line="41" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="55"/></condition><then pos:line="41" pos:column="55">
				<block type="pseudo"><expr_stmt><expr><name pos:line="42" pos:column="33">matchlen<pos:position pos:line="42" pos:column="41"/></name> <operator pos:line="42" pos:column="42">=<pos:position pos:line="42" pos:column="43"/></operator> <literal type="number" pos:line="42" pos:column="44">0<pos:position pos:line="42" pos:column="45"/></literal></expr>;<pos:position pos:line="42" pos:column="46"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name pos:line="43" pos:column="25">git_proxy_command<pos:position pos:line="43" pos:column="42"/></name> <operator pos:line="43" pos:column="43">=<pos:position pos:line="43" pos:column="44"/></operator> <call><name pos:line="43" pos:column="45">xmemdupz<pos:position pos:line="43" pos:column="53"/></name><argument_list pos:line="43" pos:column="53">(<argument><expr><name pos:line="43" pos:column="54">value<pos:position pos:line="43" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="61">matchlen<pos:position pos:line="43" pos:column="69"/></name></expr></argument>)<pos:position pos:line="43" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="71"/></expr_stmt>
		}<pos:position pos:line="44" pos:column="18"/></block></then></if>
		<return pos:line="45" pos:column="17">return <expr><literal type="number" pos:line="45" pos:column="24">0<pos:position pos:line="45" pos:column="25"/></literal></expr>;<pos:position pos:line="45" pos:column="26"/></return>
	}<pos:position pos:line="46" pos:column="10"/></block></then></if>

	<return pos:line="48" pos:column="9">return <expr><call><name pos:line="48" pos:column="16">git_default_config<pos:position pos:line="48" pos:column="34"/></name><argument_list pos:line="48" pos:column="34">(<argument><expr><name pos:line="48" pos:column="35">var<pos:position pos:line="48" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="40">value<pos:position pos:line="48" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="47">cb<pos:position pos:line="48" pos:column="49"/></name></expr></argument>)<pos:position pos:line="48" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="51"/></return>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

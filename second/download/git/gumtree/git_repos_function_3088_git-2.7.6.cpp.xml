<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3088_git-2.7.6.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">merge_submodule<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">unsigned<pos:position pos:line="1" pos:column="29"/></name> <name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name></type> <name><name pos:line="1" pos:column="35">result<pos:position pos:line="1" pos:column="41"/></name><index pos:line="1" pos:column="41">[<expr><literal type="number" pos:line="1" pos:column="42">20<pos:position pos:line="1" pos:column="44"/></literal></expr>]<pos:position pos:line="1" pos:column="45"/></index></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="47">const<pos:position pos:line="1" pos:column="52"/></specifier> <name pos:line="1" pos:column="53">char<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">path<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>,
		    <parameter><decl><type><specifier pos:line="2" pos:column="21">const<pos:position pos:line="2" pos:column="26"/></specifier> <name pos:line="2" pos:column="27">unsigned<pos:position pos:line="2" pos:column="35"/></name> <name pos:line="2" pos:column="36">char<pos:position pos:line="2" pos:column="40"/></name></type> <name><name pos:line="2" pos:column="41">base<pos:position pos:line="2" pos:column="45"/></name><index pos:line="2" pos:column="45">[<expr><literal type="number" pos:line="2" pos:column="46">20<pos:position pos:line="2" pos:column="48"/></literal></expr>]<pos:position pos:line="2" pos:column="49"/></index></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="51">const<pos:position pos:line="2" pos:column="56"/></specifier> <name pos:line="2" pos:column="57">unsigned<pos:position pos:line="2" pos:column="65"/></name> <name pos:line="2" pos:column="66">char<pos:position pos:line="2" pos:column="70"/></name></type> <name><name pos:line="2" pos:column="71">a<pos:position pos:line="2" pos:column="72"/></name><index pos:line="2" pos:column="72">[<expr><literal type="number" pos:line="2" pos:column="73">20<pos:position pos:line="2" pos:column="75"/></literal></expr>]<pos:position pos:line="2" pos:column="76"/></index></name></decl></parameter>,
		    <parameter><decl><type><specifier pos:line="3" pos:column="21">const<pos:position pos:line="3" pos:column="26"/></specifier> <name pos:line="3" pos:column="27">unsigned<pos:position pos:line="3" pos:column="35"/></name> <name pos:line="3" pos:column="36">char<pos:position pos:line="3" pos:column="40"/></name></type> <name><name pos:line="3" pos:column="41">b<pos:position pos:line="3" pos:column="42"/></name><index pos:line="3" pos:column="42">[<expr><literal type="number" pos:line="3" pos:column="43">20<pos:position pos:line="3" pos:column="45"/></literal></expr>]<pos:position pos:line="3" pos:column="46"/></index></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="48">int<pos:position pos:line="3" pos:column="51"/></name></type> <name pos:line="3" pos:column="52">search<pos:position pos:line="3" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="59"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">commit<pos:position pos:line="5" pos:column="22"/></name></name> <modifier pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></modifier></type><name pos:line="5" pos:column="24">commit_base<pos:position pos:line="5" pos:column="35"/></name></decl>, <modifier pos:line="5" pos:column="37">*<pos:position pos:line="5" pos:column="38"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="38">commit_a<pos:position pos:line="5" pos:column="46"/></name></decl>, <modifier pos:line="5" pos:column="48">*<pos:position pos:line="5" pos:column="49"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="49">commit_b<pos:position pos:line="5" pos:column="57"/></name></decl>;<pos:position pos:line="5" pos:column="58"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">parent_count<pos:position pos:line="6" pos:column="25"/></name></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">object_array<pos:position pos:line="7" pos:column="28"/></name></name></type> <name pos:line="7" pos:column="29">merges<pos:position pos:line="7" pos:column="35"/></name></decl>;<pos:position pos:line="7" pos:column="36"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">i<pos:position pos:line="9" pos:column="14"/></name></decl>;<pos:position pos:line="9" pos:column="15"/></decl_stmt>

	<comment type="block" pos:line="11" pos:column="9">/* store a in result in case we fail */</comment>
	<expr_stmt><expr><call><name pos:line="12" pos:column="9">hashcpy<pos:position pos:line="12" pos:column="16"/></name><argument_list pos:line="12" pos:column="16">(<argument><expr><name pos:line="12" pos:column="17">result<pos:position pos:line="12" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="25">a<pos:position pos:line="12" pos:column="26"/></name></expr></argument>)<pos:position pos:line="12" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="28"/></expr_stmt>

	<comment type="block" pos:line="14" pos:column="9">/* we can not handle deletion conflicts */</comment>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><call><name pos:line="15" pos:column="13">is_null_sha1<pos:position pos:line="15" pos:column="25"/></name><argument_list pos:line="15" pos:column="25">(<argument><expr><name pos:line="15" pos:column="26">base<pos:position pos:line="15" pos:column="30"/></name></expr></argument>)<pos:position pos:line="15" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="32"/></condition><then pos:line="15" pos:column="32">
		<block type="pseudo"><return pos:line="16" pos:column="17">return <expr><literal type="number" pos:line="16" pos:column="24">0<pos:position pos:line="16" pos:column="25"/></literal></expr>;<pos:position pos:line="16" pos:column="26"/></return></block></then></if>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><call><name pos:line="17" pos:column="13">is_null_sha1<pos:position pos:line="17" pos:column="25"/></name><argument_list pos:line="17" pos:column="25">(<argument><expr><name pos:line="17" pos:column="26">a<pos:position pos:line="17" pos:column="27"/></name></expr></argument>)<pos:position pos:line="17" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="29"/></condition><then pos:line="17" pos:column="29">
		<block type="pseudo"><return pos:line="18" pos:column="17">return <expr><literal type="number" pos:line="18" pos:column="24">0<pos:position pos:line="18" pos:column="25"/></literal></expr>;<pos:position pos:line="18" pos:column="26"/></return></block></then></if>
	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><call><name pos:line="19" pos:column="13">is_null_sha1<pos:position pos:line="19" pos:column="25"/></name><argument_list pos:line="19" pos:column="25">(<argument><expr><name pos:line="19" pos:column="26">b<pos:position pos:line="19" pos:column="27"/></name></expr></argument>)<pos:position pos:line="19" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="29"/></condition><then pos:line="19" pos:column="29">
		<block type="pseudo"><return pos:line="20" pos:column="17">return <expr><literal type="number" pos:line="20" pos:column="24">0<pos:position pos:line="20" pos:column="25"/></literal></expr>;<pos:position pos:line="20" pos:column="26"/></return></block></then></if>

	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><call><name pos:line="22" pos:column="13">add_submodule_odb<pos:position pos:line="22" pos:column="30"/></name><argument_list pos:line="22" pos:column="30">(<argument><expr><name pos:line="22" pos:column="31">path<pos:position pos:line="22" pos:column="35"/></name></expr></argument>)<pos:position pos:line="22" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="37"/></condition><then pos:line="22" pos:column="37"> <block pos:line="22" pos:column="38">{
		<expr_stmt><expr><call><name pos:line="23" pos:column="17">MERGE_WARNING<pos:position pos:line="23" pos:column="30"/></name><argument_list pos:line="23" pos:column="30">(<argument><expr><name pos:line="23" pos:column="31">path<pos:position pos:line="23" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="37">"not checked out"<pos:position pos:line="23" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="56"/></expr_stmt>
		<return pos:line="24" pos:column="17">return <expr><literal type="number" pos:line="24" pos:column="24">0<pos:position pos:line="24" pos:column="25"/></literal></expr>;<pos:position pos:line="24" pos:column="26"/></return>
	}<pos:position pos:line="25" pos:column="10"/></block></then></if>

	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><operator pos:line="27" pos:column="13">!<pos:position pos:line="27" pos:column="14"/></operator><operator pos:line="27" pos:column="14">(<pos:position pos:line="27" pos:column="15"/></operator><name pos:line="27" pos:column="15">commit_base<pos:position pos:line="27" pos:column="26"/></name> <operator pos:line="27" pos:column="27">=<pos:position pos:line="27" pos:column="28"/></operator> <call><name pos:line="27" pos:column="29">lookup_commit_reference<pos:position pos:line="27" pos:column="52"/></name><argument_list pos:line="27" pos:column="52">(<argument><expr><name pos:line="27" pos:column="53">base<pos:position pos:line="27" pos:column="57"/></name></expr></argument>)<pos:position pos:line="27" pos:column="58"/></argument_list></call><operator pos:line="27" pos:column="58">)<pos:position pos:line="27" pos:column="59"/></operator> <operator pos:line="27" pos:column="60">||<pos:position pos:line="27" pos:column="62"/></operator>
	    <operator pos:line="28" pos:column="13">!<pos:position pos:line="28" pos:column="14"/></operator><operator pos:line="28" pos:column="14">(<pos:position pos:line="28" pos:column="15"/></operator><name pos:line="28" pos:column="15">commit_a<pos:position pos:line="28" pos:column="23"/></name> <operator pos:line="28" pos:column="24">=<pos:position pos:line="28" pos:column="25"/></operator> <call><name pos:line="28" pos:column="26">lookup_commit_reference<pos:position pos:line="28" pos:column="49"/></name><argument_list pos:line="28" pos:column="49">(<argument><expr><name pos:line="28" pos:column="50">a<pos:position pos:line="28" pos:column="51"/></name></expr></argument>)<pos:position pos:line="28" pos:column="52"/></argument_list></call><operator pos:line="28" pos:column="52">)<pos:position pos:line="28" pos:column="53"/></operator> <operator pos:line="28" pos:column="54">||<pos:position pos:line="28" pos:column="56"/></operator>
	    <operator pos:line="29" pos:column="13">!<pos:position pos:line="29" pos:column="14"/></operator><operator pos:line="29" pos:column="14">(<pos:position pos:line="29" pos:column="15"/></operator><name pos:line="29" pos:column="15">commit_b<pos:position pos:line="29" pos:column="23"/></name> <operator pos:line="29" pos:column="24">=<pos:position pos:line="29" pos:column="25"/></operator> <call><name pos:line="29" pos:column="26">lookup_commit_reference<pos:position pos:line="29" pos:column="49"/></name><argument_list pos:line="29" pos:column="49">(<argument><expr><name pos:line="29" pos:column="50">b<pos:position pos:line="29" pos:column="51"/></name></expr></argument>)<pos:position pos:line="29" pos:column="52"/></argument_list></call><operator pos:line="29" pos:column="52">)<pos:position pos:line="29" pos:column="53"/></operator></expr>)<pos:position pos:line="29" pos:column="54"/></condition><then pos:line="29" pos:column="54"> <block pos:line="29" pos:column="55">{
		<expr_stmt><expr><call><name pos:line="30" pos:column="17">MERGE_WARNING<pos:position pos:line="30" pos:column="30"/></name><argument_list pos:line="30" pos:column="30">(<argument><expr><name pos:line="30" pos:column="31">path<pos:position pos:line="30" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="37">"commits not present"<pos:position pos:line="30" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="60"/></expr_stmt>
		<return pos:line="31" pos:column="17">return <expr><literal type="number" pos:line="31" pos:column="24">0<pos:position pos:line="31" pos:column="25"/></literal></expr>;<pos:position pos:line="31" pos:column="26"/></return>
	}<pos:position pos:line="32" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="34" pos:column="9">/* check whether both changes are forward */</comment>
	<if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><operator pos:line="35" pos:column="13">!<pos:position pos:line="35" pos:column="14"/></operator><call><name pos:line="35" pos:column="14">in_merge_bases<pos:position pos:line="35" pos:column="28"/></name><argument_list pos:line="35" pos:column="28">(<argument><expr><name pos:line="35" pos:column="29">commit_base<pos:position pos:line="35" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="42">commit_a<pos:position pos:line="35" pos:column="50"/></name></expr></argument>)<pos:position pos:line="35" pos:column="51"/></argument_list></call> <operator pos:line="35" pos:column="52">||<pos:position pos:line="35" pos:column="54"/></operator>
	    <operator pos:line="36" pos:column="13">!<pos:position pos:line="36" pos:column="14"/></operator><call><name pos:line="36" pos:column="14">in_merge_bases<pos:position pos:line="36" pos:column="28"/></name><argument_list pos:line="36" pos:column="28">(<argument><expr><name pos:line="36" pos:column="29">commit_base<pos:position pos:line="36" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="42">commit_b<pos:position pos:line="36" pos:column="50"/></name></expr></argument>)<pos:position pos:line="36" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="52"/></condition><then pos:line="36" pos:column="52"> <block pos:line="36" pos:column="53">{
		<expr_stmt><expr><call><name pos:line="37" pos:column="17">MERGE_WARNING<pos:position pos:line="37" pos:column="30"/></name><argument_list pos:line="37" pos:column="30">(<argument><expr><name pos:line="37" pos:column="31">path<pos:position pos:line="37" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="37">"commits don't follow merge-base"<pos:position pos:line="37" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="72"/></expr_stmt>
		<return pos:line="38" pos:column="17">return <expr><literal type="number" pos:line="38" pos:column="24">0<pos:position pos:line="38" pos:column="25"/></literal></expr>;<pos:position pos:line="38" pos:column="26"/></return>
	}<pos:position pos:line="39" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="41" pos:column="9">/* Case #1: a is contained in b or vice versa */</comment>
	<if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><call><name pos:line="42" pos:column="13">in_merge_bases<pos:position pos:line="42" pos:column="27"/></name><argument_list pos:line="42" pos:column="27">(<argument><expr><name pos:line="42" pos:column="28">commit_a<pos:position pos:line="42" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="38">commit_b<pos:position pos:line="42" pos:column="46"/></name></expr></argument>)<pos:position pos:line="42" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="48"/></condition><then pos:line="42" pos:column="48"> <block pos:line="42" pos:column="49">{
		<expr_stmt><expr><call><name pos:line="43" pos:column="17">hashcpy<pos:position pos:line="43" pos:column="24"/></name><argument_list pos:line="43" pos:column="24">(<argument><expr><name pos:line="43" pos:column="25">result<pos:position pos:line="43" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="33">b<pos:position pos:line="43" pos:column="34"/></name></expr></argument>)<pos:position pos:line="43" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="36"/></expr_stmt>
		<return pos:line="44" pos:column="17">return <expr><literal type="number" pos:line="44" pos:column="24">1<pos:position pos:line="44" pos:column="25"/></literal></expr>;<pos:position pos:line="44" pos:column="26"/></return>
	}<pos:position pos:line="45" pos:column="10"/></block></then></if>
	<if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><call><name pos:line="46" pos:column="13">in_merge_bases<pos:position pos:line="46" pos:column="27"/></name><argument_list pos:line="46" pos:column="27">(<argument><expr><name pos:line="46" pos:column="28">commit_b<pos:position pos:line="46" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="38">commit_a<pos:position pos:line="46" pos:column="46"/></name></expr></argument>)<pos:position pos:line="46" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="48"/></condition><then pos:line="46" pos:column="48"> <block pos:line="46" pos:column="49">{
		<expr_stmt><expr><call><name pos:line="47" pos:column="17">hashcpy<pos:position pos:line="47" pos:column="24"/></name><argument_list pos:line="47" pos:column="24">(<argument><expr><name pos:line="47" pos:column="25">result<pos:position pos:line="47" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="33">a<pos:position pos:line="47" pos:column="34"/></name></expr></argument>)<pos:position pos:line="47" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="36"/></expr_stmt>
		<return pos:line="48" pos:column="17">return <expr><literal type="number" pos:line="48" pos:column="24">1<pos:position pos:line="48" pos:column="25"/></literal></expr>;<pos:position pos:line="48" pos:column="26"/></return>
	}<pos:position pos:line="49" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="51" pos:column="9">/*
	 * Case #2: There are one or more merges that contain a and b in
	 * the submodule. If there is only one, then present it as a
	 * suggestion to the user, but leave it marked unmerged so the
	 * user needs to confirm the resolution.
	 */</comment>

	<comment type="block" pos:line="58" pos:column="9">/* Skip the search if makes no sense to the calling context.  */</comment>
	<if pos:line="59" pos:column="9">if <condition pos:line="59" pos:column="12">(<expr><operator pos:line="59" pos:column="13">!<pos:position pos:line="59" pos:column="14"/></operator><name pos:line="59" pos:column="14">search<pos:position pos:line="59" pos:column="20"/></name></expr>)<pos:position pos:line="59" pos:column="21"/></condition><then pos:line="59" pos:column="21">
		<block type="pseudo"><return pos:line="60" pos:column="17">return <expr><literal type="number" pos:line="60" pos:column="24">0<pos:position pos:line="60" pos:column="25"/></literal></expr>;<pos:position pos:line="60" pos:column="26"/></return></block></then></if>

	<comment type="block" pos:line="62" pos:column="9">/* find commit which merges them */</comment>
	<expr_stmt><expr><name pos:line="63" pos:column="9">parent_count<pos:position pos:line="63" pos:column="21"/></name> <operator pos:line="63" pos:column="22">=<pos:position pos:line="63" pos:column="23"/></operator> <call><name pos:line="63" pos:column="24">find_first_merges<pos:position pos:line="63" pos:column="41"/></name><argument_list pos:line="63" pos:column="41">(<argument><expr><operator pos:line="63" pos:column="42">&amp;<pos:position pos:line="63" pos:column="47"/></operator><name pos:line="63" pos:column="43">merges<pos:position pos:line="63" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="51">path<pos:position pos:line="63" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="57">commit_a<pos:position pos:line="63" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="67">commit_b<pos:position pos:line="63" pos:column="75"/></name></expr></argument>)<pos:position pos:line="63" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="77"/></expr_stmt>
	<switch pos:line="64" pos:column="9">switch <condition pos:line="64" pos:column="16">(<expr><name pos:line="64" pos:column="17">parent_count<pos:position pos:line="64" pos:column="29"/></name></expr>)<pos:position pos:line="64" pos:column="30"/></condition> <block pos:line="64" pos:column="31">{
	<case pos:line="65" pos:column="9">case <expr><literal type="number" pos:line="65" pos:column="14">0<pos:position pos:line="65" pos:column="15"/></literal></expr>:<pos:position pos:line="65" pos:column="16"/></case>
		<expr_stmt><expr><call><name pos:line="66" pos:column="17">MERGE_WARNING<pos:position pos:line="66" pos:column="30"/></name><argument_list pos:line="66" pos:column="30">(<argument><expr><name pos:line="66" pos:column="31">path<pos:position pos:line="66" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="37">"merge following commits not found"<pos:position pos:line="66" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="74"/></expr_stmt>
		<break pos:line="67" pos:column="17">break;<pos:position pos:line="67" pos:column="23"/></break>

	<case pos:line="69" pos:column="9">case <expr><literal type="number" pos:line="69" pos:column="14">1<pos:position pos:line="69" pos:column="15"/></literal></expr>:<pos:position pos:line="69" pos:column="16"/></case>
		<expr_stmt><expr><call><name pos:line="70" pos:column="17">MERGE_WARNING<pos:position pos:line="70" pos:column="30"/></name><argument_list pos:line="70" pos:column="30">(<argument><expr><name pos:line="70" pos:column="31">path<pos:position pos:line="70" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="37">"not fast-forward"<pos:position pos:line="70" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="57"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="71" pos:column="17">fprintf<pos:position pos:line="71" pos:column="24"/></name><argument_list pos:line="71" pos:column="24">(<argument><expr><name pos:line="71" pos:column="25">stderr<pos:position pos:line="71" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="33">"Found a possible merge resolution "<pos:position pos:line="71" pos:column="69"/></literal>
				<literal type="string" pos:line="72" pos:column="33">"for the submodule:\n"<pos:position pos:line="72" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="57"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="73" pos:column="17">print_commit<pos:position pos:line="73" pos:column="29"/></name><argument_list pos:line="73" pos:column="29">(<argument><expr><operator pos:line="73" pos:column="30">(<pos:position pos:line="73" pos:column="31"/></operator>struct <name pos:line="73" pos:column="38">commit<pos:position pos:line="73" pos:column="44"/></name> <operator pos:line="73" pos:column="45">*<pos:position pos:line="73" pos:column="46"/></operator><operator pos:line="73" pos:column="46">)<pos:position pos:line="73" pos:column="47"/></operator> <name><name pos:line="73" pos:column="48">merges<pos:position pos:line="73" pos:column="54"/></name><operator pos:line="73" pos:column="54">.<pos:position pos:line="73" pos:column="55"/></operator><name pos:line="73" pos:column="55">objects<pos:position pos:line="73" pos:column="62"/></name><index pos:line="73" pos:column="62">[<expr><literal type="number" pos:line="73" pos:column="63">0<pos:position pos:line="73" pos:column="64"/></literal></expr>]<pos:position pos:line="73" pos:column="65"/></index></name><operator pos:line="73" pos:column="65">.<pos:position pos:line="73" pos:column="66"/></operator><name pos:line="73" pos:column="66">item<pos:position pos:line="73" pos:column="70"/></name></expr></argument>)<pos:position pos:line="73" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="72"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="74" pos:column="17">fprintf<pos:position pos:line="74" pos:column="24"/></name><argument_list pos:line="74" pos:column="24">(<argument><expr><name pos:line="74" pos:column="25">stderr<pos:position pos:line="74" pos:column="31"/></name></expr></argument>,
			<argument><expr><literal type="string" pos:line="75" pos:column="25">"If this is correct simply add it to the index "<pos:position pos:line="75" pos:column="73"/></literal>
			<literal type="string" pos:line="76" pos:column="25">"for example\n"<pos:position pos:line="76" pos:column="40"/></literal>
			<literal type="string" pos:line="77" pos:column="25">"by using:\n\n"<pos:position pos:line="77" pos:column="40"/></literal>
			<literal type="string" pos:line="78" pos:column="25">"  git update-index --cacheinfo 160000 %s \"%s\"\n\n"<pos:position pos:line="78" pos:column="78"/></literal>
			<literal type="string" pos:line="79" pos:column="25">"which will accept this suggestion.\n"<pos:position pos:line="79" pos:column="63"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="80" pos:column="25">oid_to_hex<pos:position pos:line="80" pos:column="35"/></name><argument_list pos:line="80" pos:column="35">(<argument><expr><operator pos:line="80" pos:column="36">&amp;<pos:position pos:line="80" pos:column="41"/></operator><name><name pos:line="80" pos:column="37">merges<pos:position pos:line="80" pos:column="43"/></name><operator pos:line="80" pos:column="43">.<pos:position pos:line="80" pos:column="44"/></operator><name pos:line="80" pos:column="44">objects<pos:position pos:line="80" pos:column="51"/></name><index pos:line="80" pos:column="51">[<expr><literal type="number" pos:line="80" pos:column="52">0<pos:position pos:line="80" pos:column="53"/></literal></expr>]<pos:position pos:line="80" pos:column="54"/></index></name><operator pos:line="80" pos:column="54">.<pos:position pos:line="80" pos:column="55"/></operator><name><name pos:line="80" pos:column="55">item<pos:position pos:line="80" pos:column="59"/></name><operator pos:line="80" pos:column="59">-&gt;<pos:position pos:line="80" pos:column="64"/></operator><name pos:line="80" pos:column="61">oid<pos:position pos:line="80" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="80" pos:column="65"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="80" pos:column="67">path<pos:position pos:line="80" pos:column="71"/></name></expr></argument>)<pos:position pos:line="80" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="73"/></expr_stmt>
		<break pos:line="81" pos:column="17">break;<pos:position pos:line="81" pos:column="23"/></break>

	<default pos:line="83" pos:column="9">default:<pos:position pos:line="83" pos:column="17"/></default>
		<expr_stmt><expr><call><name pos:line="84" pos:column="17">MERGE_WARNING<pos:position pos:line="84" pos:column="30"/></name><argument_list pos:line="84" pos:column="30">(<argument><expr><name pos:line="84" pos:column="31">path<pos:position pos:line="84" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="84" pos:column="37">"multiple merges found"<pos:position pos:line="84" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="84" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="62"/></expr_stmt>
		<for pos:line="85" pos:column="17">for <control pos:line="85" pos:column="21">(<init><expr><name pos:line="85" pos:column="22">i<pos:position pos:line="85" pos:column="23"/></name> <operator pos:line="85" pos:column="24">=<pos:position pos:line="85" pos:column="25"/></operator> <literal type="number" pos:line="85" pos:column="26">0<pos:position pos:line="85" pos:column="27"/></literal></expr>;<pos:position pos:line="85" pos:column="28"/></init> <condition><expr><name pos:line="85" pos:column="29">i<pos:position pos:line="85" pos:column="30"/></name> <operator pos:line="85" pos:column="31">&lt;<pos:position pos:line="85" pos:column="35"/></operator> <name><name pos:line="85" pos:column="33">merges<pos:position pos:line="85" pos:column="39"/></name><operator pos:line="85" pos:column="39">.<pos:position pos:line="85" pos:column="40"/></operator><name pos:line="85" pos:column="40">nr<pos:position pos:line="85" pos:column="42"/></name></name></expr>;<pos:position pos:line="85" pos:column="43"/></condition> <incr><expr><name pos:line="85" pos:column="44">i<pos:position pos:line="85" pos:column="45"/></name><operator pos:line="85" pos:column="45">++<pos:position pos:line="85" pos:column="47"/></operator></expr></incr>)<pos:position pos:line="85" pos:column="48"/></control>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="86" pos:column="25">print_commit<pos:position pos:line="86" pos:column="37"/></name><argument_list pos:line="86" pos:column="37">(<argument><expr><operator pos:line="86" pos:column="38">(<pos:position pos:line="86" pos:column="39"/></operator>struct <name pos:line="86" pos:column="46">commit<pos:position pos:line="86" pos:column="52"/></name> <operator pos:line="86" pos:column="53">*<pos:position pos:line="86" pos:column="54"/></operator><operator pos:line="86" pos:column="54">)<pos:position pos:line="86" pos:column="55"/></operator> <name><name pos:line="86" pos:column="56">merges<pos:position pos:line="86" pos:column="62"/></name><operator pos:line="86" pos:column="62">.<pos:position pos:line="86" pos:column="63"/></operator><name pos:line="86" pos:column="63">objects<pos:position pos:line="86" pos:column="70"/></name><index pos:line="86" pos:column="70">[<expr><name pos:line="86" pos:column="71">i<pos:position pos:line="86" pos:column="72"/></name></expr>]<pos:position pos:line="86" pos:column="73"/></index></name><operator pos:line="86" pos:column="73">.<pos:position pos:line="86" pos:column="74"/></operator><name pos:line="86" pos:column="74">item<pos:position pos:line="86" pos:column="78"/></name></expr></argument>)<pos:position pos:line="86" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="80"/></expr_stmt></block></for>
	}<pos:position pos:line="87" pos:column="10"/></block></switch>

	<expr_stmt><expr><call><name pos:line="89" pos:column="9">free<pos:position pos:line="89" pos:column="13"/></name><argument_list pos:line="89" pos:column="13">(<argument><expr><name><name pos:line="89" pos:column="14">merges<pos:position pos:line="89" pos:column="20"/></name><operator pos:line="89" pos:column="20">.<pos:position pos:line="89" pos:column="21"/></operator><name pos:line="89" pos:column="21">objects<pos:position pos:line="89" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="89" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="30"/></expr_stmt>
	<return pos:line="90" pos:column="9">return <expr><literal type="number" pos:line="90" pos:column="16">0<pos:position pos:line="90" pos:column="17"/></literal></expr>;<pos:position pos:line="90" pos:column="18"/></return>
}<pos:position pos:line="91" pos:column="2"/></block></function></unit>

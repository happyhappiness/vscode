<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3540_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">update_main_cache_tree<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">int<pos:position pos:line="1" pos:column="31"/></name></type> <name pos:line="1" pos:column="32">flags<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="38"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><operator pos:line="3" pos:column="13">!<pos:position pos:line="3" pos:column="14"/></operator><name><name pos:line="3" pos:column="14">the_index<pos:position pos:line="3" pos:column="23"/></name><operator pos:line="3" pos:column="23">.<pos:position pos:line="3" pos:column="24"/></operator><name pos:line="3" pos:column="24">cache_tree<pos:position pos:line="3" pos:column="34"/></name></name></expr>)<pos:position pos:line="3" pos:column="35"/></condition><then pos:line="3" pos:column="35">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="4" pos:column="17">the_index<pos:position pos:line="4" pos:column="26"/></name><operator pos:line="4" pos:column="26">.<pos:position pos:line="4" pos:column="27"/></operator><name pos:line="4" pos:column="27">cache_tree<pos:position pos:line="4" pos:column="37"/></name></name> <operator pos:line="4" pos:column="38">=<pos:position pos:line="4" pos:column="39"/></operator> <call><name pos:line="4" pos:column="40">cache_tree<pos:position pos:line="4" pos:column="50"/></name><argument_list pos:line="4" pos:column="50">()<pos:position pos:line="4" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="53"/></expr_stmt></block></then></if>
	<return pos:line="5" pos:column="9">return <expr><call><name pos:line="5" pos:column="16">cache_tree_update<pos:position pos:line="5" pos:column="33"/></name><argument_list pos:line="5" pos:column="33">(<argument><expr><operator pos:line="5" pos:column="34">&amp;<pos:position pos:line="5" pos:column="39"/></operator><name pos:line="5" pos:column="35">the_index<pos:position pos:line="5" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="46">flags<pos:position pos:line="5" pos:column="51"/></name></expr></argument>)<pos:position pos:line="5" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="53"/></return>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

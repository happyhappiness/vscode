<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1484_git-2.4.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">run_diff_files<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name><name pos:line="1" pos:column="20">struct<pos:position pos:line="1" pos:column="26"/></name> <name pos:line="1" pos:column="27">rev_info<pos:position pos:line="1" pos:column="35"/></name></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">revs<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">unsigned<pos:position pos:line="1" pos:column="51"/></name> <name pos:line="1" pos:column="52">int<pos:position pos:line="1" pos:column="55"/></name></type> <name pos:line="1" pos:column="56">option<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="63"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">entries<pos:position pos:line="3" pos:column="20"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="22">i<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">diff_unmerged_stage<pos:position pos:line="4" pos:column="32"/></name> <init pos:line="4" pos:column="33">= <expr><name><name pos:line="4" pos:column="35">revs<pos:position pos:line="4" pos:column="39"/></name><operator pos:line="4" pos:column="39">-&gt;<pos:position pos:line="4" pos:column="44"/></operator><name pos:line="4" pos:column="41">max_count<pos:position pos:line="4" pos:column="50"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="51"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">unsigned<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">ce_option<pos:position pos:line="5" pos:column="27"/></name> <init pos:line="5" pos:column="28">= <expr><operator pos:line="5" pos:column="30">(<pos:position pos:line="5" pos:column="31"/></operator><ternary><condition><expr><operator pos:line="5" pos:column="31">(<pos:position pos:line="5" pos:column="32"/></operator><name pos:line="5" pos:column="32">option<pos:position pos:line="5" pos:column="38"/></name> <operator pos:line="5" pos:column="39">&amp;<pos:position pos:line="5" pos:column="44"/></operator> <name pos:line="5" pos:column="41">DIFF_RACY_IS_MODIFIED<pos:position pos:line="5" pos:column="62"/></name><operator pos:line="5" pos:column="62">)<pos:position pos:line="5" pos:column="63"/></operator></expr>
			      ?<pos:position pos:line="6" pos:column="32"/></condition><then pos:line="6" pos:column="32"> <expr><name pos:line="6" pos:column="33">CE_MATCH_RACY_IS_DIRTY<pos:position pos:line="6" pos:column="55"/></name></expr> <pos:position pos:line="6" pos:column="56"/></then><else pos:line="6" pos:column="56">: <expr><literal type="number" pos:line="6" pos:column="58">0<pos:position pos:line="6" pos:column="59"/></literal></expr></else></ternary><operator pos:line="6" pos:column="59">)<pos:position pos:line="6" pos:column="60"/></operator></expr></init></decl>;<pos:position pos:line="6" pos:column="61"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="8" pos:column="9">diff_set_mnemonic_prefix<pos:position pos:line="8" pos:column="33"/></name><argument_list pos:line="8" pos:column="33">(<argument><expr><operator pos:line="8" pos:column="34">&amp;<pos:position pos:line="8" pos:column="39"/></operator><name><name pos:line="8" pos:column="35">revs<pos:position pos:line="8" pos:column="39"/></name><operator pos:line="8" pos:column="39">-&gt;<pos:position pos:line="8" pos:column="44"/></operator><name pos:line="8" pos:column="41">diffopt<pos:position pos:line="8" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="50">"i/"<pos:position pos:line="8" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="56">"w/"<pos:position pos:line="8" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="62"/></expr_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">diff_unmerged_stage<pos:position pos:line="10" pos:column="32"/></name> <operator pos:line="10" pos:column="33">&lt;<pos:position pos:line="10" pos:column="37"/></operator> <literal type="number" pos:line="10" pos:column="35">0<pos:position pos:line="10" pos:column="36"/></literal></expr>)<pos:position pos:line="10" pos:column="37"/></condition><then pos:line="10" pos:column="37">
		<block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="17">diff_unmerged_stage<pos:position pos:line="11" pos:column="36"/></name> <operator pos:line="11" pos:column="37">=<pos:position pos:line="11" pos:column="38"/></operator> <literal type="number" pos:line="11" pos:column="39">2<pos:position pos:line="11" pos:column="40"/></literal></expr>;<pos:position pos:line="11" pos:column="41"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="12" pos:column="9">entries<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">=<pos:position pos:line="12" pos:column="18"/></operator> <name pos:line="12" pos:column="19">active_nr<pos:position pos:line="12" pos:column="28"/></name></expr>;<pos:position pos:line="12" pos:column="29"/></expr_stmt>
	<for pos:line="13" pos:column="9">for <control pos:line="13" pos:column="13">(<init><expr><name pos:line="13" pos:column="14">i<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <literal type="number" pos:line="13" pos:column="18">0<pos:position pos:line="13" pos:column="19"/></literal></expr>;<pos:position pos:line="13" pos:column="20"/></init> <condition><expr><name pos:line="13" pos:column="21">i<pos:position pos:line="13" pos:column="22"/></name> <operator pos:line="13" pos:column="23">&lt;<pos:position pos:line="13" pos:column="27"/></operator> <name pos:line="13" pos:column="25">entries<pos:position pos:line="13" pos:column="32"/></name></expr>;<pos:position pos:line="13" pos:column="33"/></condition> <incr><expr><name pos:line="13" pos:column="34">i<pos:position pos:line="13" pos:column="35"/></name><operator pos:line="13" pos:column="35">++<pos:position pos:line="13" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="13" pos:column="38"/></control> <block pos:line="13" pos:column="39">{
		<decl_stmt><decl><type><name pos:line="14" pos:column="17">unsigned<pos:position pos:line="14" pos:column="25"/></name> <name pos:line="14" pos:column="26">int<pos:position pos:line="14" pos:column="29"/></name></type> <name pos:line="14" pos:column="30">oldmode<pos:position pos:line="14" pos:column="37"/></name></decl>, <decl><type ref="prev"/><name pos:line="14" pos:column="39">newmode<pos:position pos:line="14" pos:column="46"/></name></decl>;<pos:position pos:line="14" pos:column="47"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="15" pos:column="17">struct<pos:position pos:line="15" pos:column="23"/></name> <name pos:line="15" pos:column="24">cache_entry<pos:position pos:line="15" pos:column="35"/></name></name> <modifier pos:line="15" pos:column="36">*<pos:position pos:line="15" pos:column="37"/></modifier></type><name pos:line="15" pos:column="37">ce<pos:position pos:line="15" pos:column="39"/></name> <init pos:line="15" pos:column="40">= <expr><name><name pos:line="15" pos:column="42">active_cache<pos:position pos:line="15" pos:column="54"/></name><index pos:line="15" pos:column="54">[<expr><name pos:line="15" pos:column="55">i<pos:position pos:line="15" pos:column="56"/></name></expr>]<pos:position pos:line="15" pos:column="57"/></index></name></expr></init></decl>;<pos:position pos:line="15" pos:column="58"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="16" pos:column="17">int<pos:position pos:line="16" pos:column="20"/></name></type> <name pos:line="16" pos:column="21">changed<pos:position pos:line="16" pos:column="28"/></name></decl>;<pos:position pos:line="16" pos:column="29"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="17" pos:column="17">unsigned<pos:position pos:line="17" pos:column="25"/></name></type> <name pos:line="17" pos:column="26">dirty_submodule<pos:position pos:line="17" pos:column="41"/></name> <init pos:line="17" pos:column="42">= <expr><literal type="number" pos:line="17" pos:column="44">0<pos:position pos:line="17" pos:column="45"/></literal></expr></init></decl>;<pos:position pos:line="17" pos:column="46"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="18" pos:column="17">const<pos:position pos:line="18" pos:column="22"/></specifier> <name pos:line="18" pos:column="23">unsigned<pos:position pos:line="18" pos:column="31"/></name> <name pos:line="18" pos:column="32">char<pos:position pos:line="18" pos:column="36"/></name> <modifier pos:line="18" pos:column="37">*<pos:position pos:line="18" pos:column="38"/></modifier></type><name pos:line="18" pos:column="38">old_sha1<pos:position pos:line="18" pos:column="46"/></name></decl>, <modifier pos:line="18" pos:column="48">*<pos:position pos:line="18" pos:column="49"/></modifier><decl><type ref="prev"/><name pos:line="18" pos:column="49">new_sha1<pos:position pos:line="18" pos:column="57"/></name></decl>;<pos:position pos:line="18" pos:column="58"/></decl_stmt>

		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><call><name pos:line="20" pos:column="21">diff_can_quit_early<pos:position pos:line="20" pos:column="40"/></name><argument_list pos:line="20" pos:column="40">(<argument><expr><operator pos:line="20" pos:column="41">&amp;<pos:position pos:line="20" pos:column="46"/></operator><name><name pos:line="20" pos:column="42">revs<pos:position pos:line="20" pos:column="46"/></name><operator pos:line="20" pos:column="46">-&gt;<pos:position pos:line="20" pos:column="51"/></operator><name pos:line="20" pos:column="48">diffopt<pos:position pos:line="20" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="57"/></condition><then pos:line="20" pos:column="57">
			<block type="pseudo"><break pos:line="21" pos:column="25">break;<pos:position pos:line="21" pos:column="31"/></break></block></then></if>

		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><operator pos:line="23" pos:column="21">!<pos:position pos:line="23" pos:column="22"/></operator><call><name pos:line="23" pos:column="22">ce_path_match<pos:position pos:line="23" pos:column="35"/></name><argument_list pos:line="23" pos:column="35">(<argument><expr><name pos:line="23" pos:column="36">ce<pos:position pos:line="23" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="40">&amp;<pos:position pos:line="23" pos:column="45"/></operator><name><name pos:line="23" pos:column="41">revs<pos:position pos:line="23" pos:column="45"/></name><operator pos:line="23" pos:column="45">-&gt;<pos:position pos:line="23" pos:column="50"/></operator><name pos:line="23" pos:column="47">prune_data<pos:position pos:line="23" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="59">NULL<pos:position pos:line="23" pos:column="63"/></name></expr></argument>)<pos:position pos:line="23" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="65"/></condition><then pos:line="23" pos:column="65">
			<block type="pseudo"><continue pos:line="24" pos:column="25">continue;<pos:position pos:line="24" pos:column="34"/></continue></block></then></if>

		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><call><name pos:line="26" pos:column="21">ce_stage<pos:position pos:line="26" pos:column="29"/></name><argument_list pos:line="26" pos:column="29">(<argument><expr><name pos:line="26" pos:column="30">ce<pos:position pos:line="26" pos:column="32"/></name></expr></argument>)<pos:position pos:line="26" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="34"/></condition><then pos:line="26" pos:column="34"> <block pos:line="26" pos:column="35">{
			<decl_stmt><decl><type><name><name pos:line="27" pos:column="25">struct<pos:position pos:line="27" pos:column="31"/></name> <name pos:line="27" pos:column="32">combine_diff_path<pos:position pos:line="27" pos:column="49"/></name></name> <modifier pos:line="27" pos:column="50">*<pos:position pos:line="27" pos:column="51"/></modifier></type><name pos:line="27" pos:column="51">dpath<pos:position pos:line="27" pos:column="56"/></name></decl>;<pos:position pos:line="27" pos:column="57"/></decl_stmt>
			<decl_stmt><decl><type><name><name pos:line="28" pos:column="25">struct<pos:position pos:line="28" pos:column="31"/></name> <name pos:line="28" pos:column="32">diff_filepair<pos:position pos:line="28" pos:column="45"/></name></name> <modifier pos:line="28" pos:column="46">*<pos:position pos:line="28" pos:column="47"/></modifier></type><name pos:line="28" pos:column="47">pair<pos:position pos:line="28" pos:column="51"/></name></decl>;<pos:position pos:line="28" pos:column="52"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="29" pos:column="25">unsigned<pos:position pos:line="29" pos:column="33"/></name> <name pos:line="29" pos:column="34">int<pos:position pos:line="29" pos:column="37"/></name></type> <name pos:line="29" pos:column="38">wt_mode<pos:position pos:line="29" pos:column="45"/></name> <init pos:line="29" pos:column="46">= <expr><literal type="number" pos:line="29" pos:column="48">0<pos:position pos:line="29" pos:column="49"/></literal></expr></init></decl>;<pos:position pos:line="29" pos:column="50"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="30" pos:column="25">int<pos:position pos:line="30" pos:column="28"/></name></type> <name pos:line="30" pos:column="29">num_compare_stages<pos:position pos:line="30" pos:column="47"/></name> <init pos:line="30" pos:column="48">= <expr><literal type="number" pos:line="30" pos:column="50">0<pos:position pos:line="30" pos:column="51"/></literal></expr></init></decl>;<pos:position pos:line="30" pos:column="52"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="31" pos:column="25">size_t<pos:position pos:line="31" pos:column="31"/></name></type> <name pos:line="31" pos:column="32">path_len<pos:position pos:line="31" pos:column="40"/></name></decl>;<pos:position pos:line="31" pos:column="41"/></decl_stmt>
			<decl_stmt><decl><type><name><name pos:line="32" pos:column="25">struct<pos:position pos:line="32" pos:column="31"/></name> <name pos:line="32" pos:column="32">stat<pos:position pos:line="32" pos:column="36"/></name></name></type> <name pos:line="32" pos:column="37">st<pos:position pos:line="32" pos:column="39"/></name></decl>;<pos:position pos:line="32" pos:column="40"/></decl_stmt>

			<expr_stmt><expr><name pos:line="34" pos:column="25">path_len<pos:position pos:line="34" pos:column="33"/></name> <operator pos:line="34" pos:column="34">=<pos:position pos:line="34" pos:column="35"/></operator> <call><name pos:line="34" pos:column="36">ce_namelen<pos:position pos:line="34" pos:column="46"/></name><argument_list pos:line="34" pos:column="46">(<argument><expr><name pos:line="34" pos:column="47">ce<pos:position pos:line="34" pos:column="49"/></name></expr></argument>)<pos:position pos:line="34" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="51"/></expr_stmt>

			<expr_stmt><expr><name pos:line="36" pos:column="25">dpath<pos:position pos:line="36" pos:column="30"/></name> <operator pos:line="36" pos:column="31">=<pos:position pos:line="36" pos:column="32"/></operator> <call><name pos:line="36" pos:column="33">xmalloc<pos:position pos:line="36" pos:column="40"/></name><argument_list pos:line="36" pos:column="40">(<argument><expr><call><name pos:line="36" pos:column="41">combine_diff_path_size<pos:position pos:line="36" pos:column="63"/></name><argument_list pos:line="36" pos:column="63">(<argument><expr><literal type="number" pos:line="36" pos:column="64">5<pos:position pos:line="36" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="67">path_len<pos:position pos:line="36" pos:column="75"/></name></expr></argument>)<pos:position pos:line="36" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="36" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="78"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="37" pos:column="25">dpath<pos:position pos:line="37" pos:column="30"/></name><operator pos:line="37" pos:column="30">-&gt;<pos:position pos:line="37" pos:column="35"/></operator><name pos:line="37" pos:column="32">path<pos:position pos:line="37" pos:column="36"/></name></name> <operator pos:line="37" pos:column="37">=<pos:position pos:line="37" pos:column="38"/></operator> <operator pos:line="37" pos:column="39">(<pos:position pos:line="37" pos:column="40"/></operator><name pos:line="37" pos:column="40">char<pos:position pos:line="37" pos:column="44"/></name> <operator pos:line="37" pos:column="45">*<pos:position pos:line="37" pos:column="46"/></operator><operator pos:line="37" pos:column="46">)<pos:position pos:line="37" pos:column="47"/></operator> <operator pos:line="37" pos:column="48">&amp;<pos:position pos:line="37" pos:column="53"/></operator><operator pos:line="37" pos:column="49">(<pos:position pos:line="37" pos:column="50"/></operator><name><name pos:line="37" pos:column="50">dpath<pos:position pos:line="37" pos:column="55"/></name><operator pos:line="37" pos:column="55">-&gt;<pos:position pos:line="37" pos:column="60"/></operator><name pos:line="37" pos:column="57">parent<pos:position pos:line="37" pos:column="63"/></name><index pos:line="37" pos:column="63">[<expr><literal type="number" pos:line="37" pos:column="64">5<pos:position pos:line="37" pos:column="65"/></literal></expr>]<pos:position pos:line="37" pos:column="66"/></index></name><operator pos:line="37" pos:column="66">)<pos:position pos:line="37" pos:column="67"/></operator></expr>;<pos:position pos:line="37" pos:column="68"/></expr_stmt>

			<expr_stmt><expr><name><name pos:line="39" pos:column="25">dpath<pos:position pos:line="39" pos:column="30"/></name><operator pos:line="39" pos:column="30">-&gt;<pos:position pos:line="39" pos:column="35"/></operator><name pos:line="39" pos:column="32">next<pos:position pos:line="39" pos:column="36"/></name></name> <operator pos:line="39" pos:column="37">=<pos:position pos:line="39" pos:column="38"/></operator> <name pos:line="39" pos:column="39">NULL<pos:position pos:line="39" pos:column="43"/></name></expr>;<pos:position pos:line="39" pos:column="44"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="40" pos:column="25">memcpy<pos:position pos:line="40" pos:column="31"/></name><argument_list pos:line="40" pos:column="31">(<argument><expr><name><name pos:line="40" pos:column="32">dpath<pos:position pos:line="40" pos:column="37"/></name><operator pos:line="40" pos:column="37">-&gt;<pos:position pos:line="40" pos:column="42"/></operator><name pos:line="40" pos:column="39">path<pos:position pos:line="40" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="45">ce<pos:position pos:line="40" pos:column="47"/></name><operator pos:line="40" pos:column="47">-&gt;<pos:position pos:line="40" pos:column="52"/></operator><name pos:line="40" pos:column="49">name<pos:position pos:line="40" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="55">path_len<pos:position pos:line="40" pos:column="63"/></name></expr></argument>)<pos:position pos:line="40" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="65"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="41" pos:column="25">dpath<pos:position pos:line="41" pos:column="30"/></name><operator pos:line="41" pos:column="30">-&gt;<pos:position pos:line="41" pos:column="35"/></operator><name pos:line="41" pos:column="32">path<pos:position pos:line="41" pos:column="36"/></name><index pos:line="41" pos:column="36">[<expr><name pos:line="41" pos:column="37">path_len<pos:position pos:line="41" pos:column="45"/></name></expr>]<pos:position pos:line="41" pos:column="46"/></index></name> <operator pos:line="41" pos:column="47">=<pos:position pos:line="41" pos:column="48"/></operator> <literal type="char" pos:line="41" pos:column="49">'\0'<pos:position pos:line="41" pos:column="53"/></literal></expr>;<pos:position pos:line="41" pos:column="54"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="42" pos:column="25">hashclr<pos:position pos:line="42" pos:column="32"/></name><argument_list pos:line="42" pos:column="32">(<argument><expr><name><name pos:line="42" pos:column="33">dpath<pos:position pos:line="42" pos:column="38"/></name><operator pos:line="42" pos:column="38">-&gt;<pos:position pos:line="42" pos:column="43"/></operator><name pos:line="42" pos:column="40">sha1<pos:position pos:line="42" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="46"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="43" pos:column="25">memset<pos:position pos:line="43" pos:column="31"/></name><argument_list pos:line="43" pos:column="31">(<argument><expr><operator pos:line="43" pos:column="32">&amp;<pos:position pos:line="43" pos:column="37"/></operator><operator pos:line="43" pos:column="33">(<pos:position pos:line="43" pos:column="34"/></operator><name><name pos:line="43" pos:column="34">dpath<pos:position pos:line="43" pos:column="39"/></name><operator pos:line="43" pos:column="39">-&gt;<pos:position pos:line="43" pos:column="44"/></operator><name pos:line="43" pos:column="41">parent<pos:position pos:line="43" pos:column="47"/></name><index pos:line="43" pos:column="47">[<expr><literal type="number" pos:line="43" pos:column="48">0<pos:position pos:line="43" pos:column="49"/></literal></expr>]<pos:position pos:line="43" pos:column="50"/></index></name><operator pos:line="43" pos:column="50">)<pos:position pos:line="43" pos:column="51"/></operator></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="53">0<pos:position pos:line="43" pos:column="54"/></literal></expr></argument>,
			       <argument><expr><sizeof pos:line="44" pos:column="32">sizeof<argument_list pos:line="44" pos:column="38">(<argument><expr pos:line="44" pos:column="39">struct <name pos:line="44" pos:column="46">combine_diff_parent<pos:position pos:line="44" pos:column="65"/></name></expr></argument>)<pos:position pos:line="44" pos:column="66"/></argument_list></sizeof><operator pos:line="44" pos:column="66">*<pos:position pos:line="44" pos:column="67"/></operator><literal type="number" pos:line="44" pos:column="67">5<pos:position pos:line="44" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="70"/></expr_stmt>

			<expr_stmt><expr><name pos:line="46" pos:column="25">changed<pos:position pos:line="46" pos:column="32"/></name> <operator pos:line="46" pos:column="33">=<pos:position pos:line="46" pos:column="34"/></operator> <call><name pos:line="46" pos:column="35">check_removed<pos:position pos:line="46" pos:column="48"/></name><argument_list pos:line="46" pos:column="48">(<argument><expr><name pos:line="46" pos:column="49">ce<pos:position pos:line="46" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="53">&amp;<pos:position pos:line="46" pos:column="58"/></operator><name pos:line="46" pos:column="54">st<pos:position pos:line="46" pos:column="56"/></name></expr></argument>)<pos:position pos:line="46" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="58"/></expr_stmt>
			<if pos:line="47" pos:column="25">if <condition pos:line="47" pos:column="28">(<expr><operator pos:line="47" pos:column="29">!<pos:position pos:line="47" pos:column="30"/></operator><name pos:line="47" pos:column="30">changed<pos:position pos:line="47" pos:column="37"/></name></expr>)<pos:position pos:line="47" pos:column="38"/></condition><then pos:line="47" pos:column="38">
				<block type="pseudo"><expr_stmt><expr><name pos:line="48" pos:column="33">wt_mode<pos:position pos:line="48" pos:column="40"/></name> <operator pos:line="48" pos:column="41">=<pos:position pos:line="48" pos:column="42"/></operator> <call><name pos:line="48" pos:column="43">ce_mode_from_stat<pos:position pos:line="48" pos:column="60"/></name><argument_list pos:line="48" pos:column="60">(<argument><expr><name pos:line="48" pos:column="61">ce<pos:position pos:line="48" pos:column="63"/></name></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="65">st<pos:position pos:line="48" pos:column="67"/></name><operator pos:line="48" pos:column="67">.<pos:position pos:line="48" pos:column="68"/></operator><name pos:line="48" pos:column="68">st_mode<pos:position pos:line="48" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="77"/></expr_stmt></block></then>
			<else pos:line="49" pos:column="25">else <block pos:line="49" pos:column="30">{
				<if pos:line="50" pos:column="33">if <condition pos:line="50" pos:column="36">(<expr><name pos:line="50" pos:column="37">changed<pos:position pos:line="50" pos:column="44"/></name> <operator pos:line="50" pos:column="45">&lt;<pos:position pos:line="50" pos:column="49"/></operator> <literal type="number" pos:line="50" pos:column="47">0<pos:position pos:line="50" pos:column="48"/></literal></expr>)<pos:position pos:line="50" pos:column="49"/></condition><then pos:line="50" pos:column="49"> <block pos:line="50" pos:column="50">{
					<expr_stmt><expr><call><name pos:line="51" pos:column="41">perror<pos:position pos:line="51" pos:column="47"/></name><argument_list pos:line="51" pos:column="47">(<argument><expr><name><name pos:line="51" pos:column="48">ce<pos:position pos:line="51" pos:column="50"/></name><operator pos:line="51" pos:column="50">-&gt;<pos:position pos:line="51" pos:column="55"/></operator><name pos:line="51" pos:column="52">name<pos:position pos:line="51" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="58"/></expr_stmt>
					<continue pos:line="52" pos:column="41">continue;<pos:position pos:line="52" pos:column="50"/></continue>
				}<pos:position pos:line="53" pos:column="34"/></block></then></if>
				<expr_stmt><expr><name pos:line="54" pos:column="33">wt_mode<pos:position pos:line="54" pos:column="40"/></name> <operator pos:line="54" pos:column="41">=<pos:position pos:line="54" pos:column="42"/></operator> <literal type="number" pos:line="54" pos:column="43">0<pos:position pos:line="54" pos:column="44"/></literal></expr>;<pos:position pos:line="54" pos:column="45"/></expr_stmt>
			}<pos:position pos:line="55" pos:column="26"/></block></else></if>
			<expr_stmt><expr><name><name pos:line="56" pos:column="25">dpath<pos:position pos:line="56" pos:column="30"/></name><operator pos:line="56" pos:column="30">-&gt;<pos:position pos:line="56" pos:column="35"/></operator><name pos:line="56" pos:column="32">mode<pos:position pos:line="56" pos:column="36"/></name></name> <operator pos:line="56" pos:column="37">=<pos:position pos:line="56" pos:column="38"/></operator> <name pos:line="56" pos:column="39">wt_mode<pos:position pos:line="56" pos:column="46"/></name></expr>;<pos:position pos:line="56" pos:column="47"/></expr_stmt>

			<while pos:line="58" pos:column="25">while <condition pos:line="58" pos:column="31">(<expr><name pos:line="58" pos:column="32">i<pos:position pos:line="58" pos:column="33"/></name> <operator pos:line="58" pos:column="34">&lt;<pos:position pos:line="58" pos:column="38"/></operator> <name pos:line="58" pos:column="36">entries<pos:position pos:line="58" pos:column="43"/></name></expr>)<pos:position pos:line="58" pos:column="44"/></condition> <block pos:line="58" pos:column="45">{
				<decl_stmt><decl><type><name><name pos:line="59" pos:column="33">struct<pos:position pos:line="59" pos:column="39"/></name> <name pos:line="59" pos:column="40">cache_entry<pos:position pos:line="59" pos:column="51"/></name></name> <modifier pos:line="59" pos:column="52">*<pos:position pos:line="59" pos:column="53"/></modifier></type><name pos:line="59" pos:column="53">nce<pos:position pos:line="59" pos:column="56"/></name> <init pos:line="59" pos:column="57">= <expr><name><name pos:line="59" pos:column="59">active_cache<pos:position pos:line="59" pos:column="71"/></name><index pos:line="59" pos:column="71">[<expr><name pos:line="59" pos:column="72">i<pos:position pos:line="59" pos:column="73"/></name></expr>]<pos:position pos:line="59" pos:column="74"/></index></name></expr></init></decl>;<pos:position pos:line="59" pos:column="75"/></decl_stmt>
				<decl_stmt><decl><type><name pos:line="60" pos:column="33">int<pos:position pos:line="60" pos:column="36"/></name></type> <name pos:line="60" pos:column="37">stage<pos:position pos:line="60" pos:column="42"/></name></decl>;<pos:position pos:line="60" pos:column="43"/></decl_stmt>

				<if pos:line="62" pos:column="33">if <condition pos:line="62" pos:column="36">(<expr><call><name pos:line="62" pos:column="37">strcmp<pos:position pos:line="62" pos:column="43"/></name><argument_list pos:line="62" pos:column="43">(<argument><expr><name><name pos:line="62" pos:column="44">ce<pos:position pos:line="62" pos:column="46"/></name><operator pos:line="62" pos:column="46">-&gt;<pos:position pos:line="62" pos:column="51"/></operator><name pos:line="62" pos:column="48">name<pos:position pos:line="62" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="54">nce<pos:position pos:line="62" pos:column="57"/></name><operator pos:line="62" pos:column="57">-&gt;<pos:position pos:line="62" pos:column="62"/></operator><name pos:line="62" pos:column="59">name<pos:position pos:line="62" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="62" pos:column="65"/></condition><then pos:line="62" pos:column="65">
					<block type="pseudo"><break pos:line="63" pos:column="41">break;<pos:position pos:line="63" pos:column="47"/></break></block></then></if>

				<comment type="block" pos:line="65" pos:column="33">/* Stage #2 (ours) is the first parent,
				 * stage #3 (theirs) is the second.
				 */</comment>
				<expr_stmt><expr><name pos:line="68" pos:column="33">stage<pos:position pos:line="68" pos:column="38"/></name> <operator pos:line="68" pos:column="39">=<pos:position pos:line="68" pos:column="40"/></operator> <call><name pos:line="68" pos:column="41">ce_stage<pos:position pos:line="68" pos:column="49"/></name><argument_list pos:line="68" pos:column="49">(<argument><expr><name pos:line="68" pos:column="50">nce<pos:position pos:line="68" pos:column="53"/></name></expr></argument>)<pos:position pos:line="68" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="55"/></expr_stmt>
				<if pos:line="69" pos:column="33">if <condition pos:line="69" pos:column="36">(<expr><literal type="number" pos:line="69" pos:column="37">2<pos:position pos:line="69" pos:column="38"/></literal> <operator pos:line="69" pos:column="39">&lt;=<pos:position pos:line="69" pos:column="44"/></operator> <name pos:line="69" pos:column="42">stage<pos:position pos:line="69" pos:column="47"/></name></expr>)<pos:position pos:line="69" pos:column="48"/></condition><then pos:line="69" pos:column="48"> <block pos:line="69" pos:column="49">{
					<decl_stmt><decl><type><name pos:line="70" pos:column="41">int<pos:position pos:line="70" pos:column="44"/></name></type> <name pos:line="70" pos:column="45">mode<pos:position pos:line="70" pos:column="49"/></name> <init pos:line="70" pos:column="50">= <expr><name><name pos:line="70" pos:column="52">nce<pos:position pos:line="70" pos:column="55"/></name><operator pos:line="70" pos:column="55">-&gt;<pos:position pos:line="70" pos:column="60"/></operator><name pos:line="70" pos:column="57">ce_mode<pos:position pos:line="70" pos:column="64"/></name></name></expr></init></decl>;<pos:position pos:line="70" pos:column="65"/></decl_stmt>
					<expr_stmt><expr><name pos:line="71" pos:column="41">num_compare_stages<pos:position pos:line="71" pos:column="59"/></name><operator pos:line="71" pos:column="59">++<pos:position pos:line="71" pos:column="61"/></operator></expr>;<pos:position pos:line="71" pos:column="62"/></expr_stmt>
					<expr_stmt><expr><call><name pos:line="72" pos:column="41">hashcpy<pos:position pos:line="72" pos:column="48"/></name><argument_list pos:line="72" pos:column="48">(<argument><expr><name><name pos:line="72" pos:column="49">dpath<pos:position pos:line="72" pos:column="54"/></name><operator pos:line="72" pos:column="54">-&gt;<pos:position pos:line="72" pos:column="59"/></operator><name pos:line="72" pos:column="56">parent<pos:position pos:line="72" pos:column="62"/></name><index pos:line="72" pos:column="62">[<expr><name pos:line="72" pos:column="63">stage<pos:position pos:line="72" pos:column="68"/></name><operator pos:line="72" pos:column="68">-<pos:position pos:line="72" pos:column="69"/></operator><literal type="number" pos:line="72" pos:column="69">2<pos:position pos:line="72" pos:column="70"/></literal></expr>]<pos:position pos:line="72" pos:column="71"/></index></name><operator pos:line="72" pos:column="71">.<pos:position pos:line="72" pos:column="72"/></operator><name pos:line="72" pos:column="72">sha1<pos:position pos:line="72" pos:column="76"/></name></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="78">nce<pos:position pos:line="72" pos:column="81"/></name><operator pos:line="72" pos:column="81">-&gt;<pos:position pos:line="72" pos:column="86"/></operator><name pos:line="72" pos:column="83">sha1<pos:position pos:line="72" pos:column="87"/></name></name></expr></argument>)<pos:position pos:line="72" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="89"/></expr_stmt>
					<expr_stmt><expr><name><name pos:line="73" pos:column="41">dpath<pos:position pos:line="73" pos:column="46"/></name><operator pos:line="73" pos:column="46">-&gt;<pos:position pos:line="73" pos:column="51"/></operator><name pos:line="73" pos:column="48">parent<pos:position pos:line="73" pos:column="54"/></name><index pos:line="73" pos:column="54">[<expr><name pos:line="73" pos:column="55">stage<pos:position pos:line="73" pos:column="60"/></name><operator pos:line="73" pos:column="60">-<pos:position pos:line="73" pos:column="61"/></operator><literal type="number" pos:line="73" pos:column="61">2<pos:position pos:line="73" pos:column="62"/></literal></expr>]<pos:position pos:line="73" pos:column="63"/></index></name><operator pos:line="73" pos:column="63">.<pos:position pos:line="73" pos:column="64"/></operator><name pos:line="73" pos:column="64">mode<pos:position pos:line="73" pos:column="68"/></name> <operator pos:line="73" pos:column="69">=<pos:position pos:line="73" pos:column="70"/></operator> <call><name pos:line="73" pos:column="71">ce_mode_from_stat<pos:position pos:line="73" pos:column="88"/></name><argument_list pos:line="73" pos:column="88">(<argument><expr><name pos:line="73" pos:column="89">nce<pos:position pos:line="73" pos:column="92"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="94">mode<pos:position pos:line="73" pos:column="98"/></name></expr></argument>)<pos:position pos:line="73" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="100"/></expr_stmt>
					<expr_stmt><expr><name><name pos:line="74" pos:column="41">dpath<pos:position pos:line="74" pos:column="46"/></name><operator pos:line="74" pos:column="46">-&gt;<pos:position pos:line="74" pos:column="51"/></operator><name pos:line="74" pos:column="48">parent<pos:position pos:line="74" pos:column="54"/></name><index pos:line="74" pos:column="54">[<expr><name pos:line="74" pos:column="55">stage<pos:position pos:line="74" pos:column="60"/></name><operator pos:line="74" pos:column="60">-<pos:position pos:line="74" pos:column="61"/></operator><literal type="number" pos:line="74" pos:column="61">2<pos:position pos:line="74" pos:column="62"/></literal></expr>]<pos:position pos:line="74" pos:column="63"/></index></name><operator pos:line="74" pos:column="63">.<pos:position pos:line="74" pos:column="64"/></operator><name pos:line="74" pos:column="64">status<pos:position pos:line="74" pos:column="70"/></name> <operator pos:line="74" pos:column="71">=<pos:position pos:line="74" pos:column="72"/></operator>
						<name pos:line="75" pos:column="49">DIFF_STATUS_MODIFIED<pos:position pos:line="75" pos:column="69"/></name></expr>;<pos:position pos:line="75" pos:column="70"/></expr_stmt>
				}<pos:position pos:line="76" pos:column="34"/></block></then></if>

				<comment type="block" pos:line="78" pos:column="33">/* diff against the proper unmerged stage */</comment>
				<if pos:line="79" pos:column="33">if <condition pos:line="79" pos:column="36">(<expr><name pos:line="79" pos:column="37">stage<pos:position pos:line="79" pos:column="42"/></name> <operator pos:line="79" pos:column="43">==<pos:position pos:line="79" pos:column="45"/></operator> <name pos:line="79" pos:column="46">diff_unmerged_stage<pos:position pos:line="79" pos:column="65"/></name></expr>)<pos:position pos:line="79" pos:column="66"/></condition><then pos:line="79" pos:column="66">
					<block type="pseudo"><expr_stmt><expr><name pos:line="80" pos:column="41">ce<pos:position pos:line="80" pos:column="43"/></name> <operator pos:line="80" pos:column="44">=<pos:position pos:line="80" pos:column="45"/></operator> <name pos:line="80" pos:column="46">nce<pos:position pos:line="80" pos:column="49"/></name></expr>;<pos:position pos:line="80" pos:column="50"/></expr_stmt></block></then></if>
				<expr_stmt><expr><name pos:line="81" pos:column="33">i<pos:position pos:line="81" pos:column="34"/></name><operator pos:line="81" pos:column="34">++<pos:position pos:line="81" pos:column="36"/></operator></expr>;<pos:position pos:line="81" pos:column="37"/></expr_stmt>
			}<pos:position pos:line="82" pos:column="26"/></block></while>
			<comment type="block" pos:line="83" pos:column="25">/*
			 * Compensate for loop update
			 */</comment>
			<expr_stmt><expr><name pos:line="86" pos:column="25">i<pos:position pos:line="86" pos:column="26"/></name><operator pos:line="86" pos:column="26">--<pos:position pos:line="86" pos:column="28"/></operator></expr>;<pos:position pos:line="86" pos:column="29"/></expr_stmt>

			<if pos:line="88" pos:column="25">if <condition pos:line="88" pos:column="28">(<expr><name><name pos:line="88" pos:column="29">revs<pos:position pos:line="88" pos:column="33"/></name><operator pos:line="88" pos:column="33">-&gt;<pos:position pos:line="88" pos:column="38"/></operator><name pos:line="88" pos:column="35">combine_merges<pos:position pos:line="88" pos:column="49"/></name></name> <operator pos:line="88" pos:column="50">&amp;&amp;<pos:position pos:line="88" pos:column="60"/></operator> <name pos:line="88" pos:column="53">num_compare_stages<pos:position pos:line="88" pos:column="71"/></name> <operator pos:line="88" pos:column="72">==<pos:position pos:line="88" pos:column="74"/></operator> <literal type="number" pos:line="88" pos:column="75">2<pos:position pos:line="88" pos:column="76"/></literal></expr>)<pos:position pos:line="88" pos:column="77"/></condition><then pos:line="88" pos:column="77"> <block pos:line="88" pos:column="78">{
				<expr_stmt><expr><call><name pos:line="89" pos:column="33">show_combined_diff<pos:position pos:line="89" pos:column="51"/></name><argument_list pos:line="89" pos:column="51">(<argument><expr><name pos:line="89" pos:column="52">dpath<pos:position pos:line="89" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="89" pos:column="59">2<pos:position pos:line="89" pos:column="60"/></literal></expr></argument>,
						   <argument><expr><name><name pos:line="90" pos:column="52">revs<pos:position pos:line="90" pos:column="56"/></name><operator pos:line="90" pos:column="56">-&gt;<pos:position pos:line="90" pos:column="61"/></operator><name pos:line="90" pos:column="58">dense_combined_merges<pos:position pos:line="90" pos:column="79"/></name></name></expr></argument>,
						   <argument><expr><name pos:line="91" pos:column="52">revs<pos:position pos:line="91" pos:column="56"/></name></expr></argument>)<pos:position pos:line="91" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="58"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="92" pos:column="33">free<pos:position pos:line="92" pos:column="37"/></name><argument_list pos:line="92" pos:column="37">(<argument><expr><name pos:line="92" pos:column="38">dpath<pos:position pos:line="92" pos:column="43"/></name></expr></argument>)<pos:position pos:line="92" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="45"/></expr_stmt>
				<continue pos:line="93" pos:column="33">continue;<pos:position pos:line="93" pos:column="42"/></continue>
			}<pos:position pos:line="94" pos:column="26"/></block></then></if>
			<expr_stmt><expr><call><name pos:line="95" pos:column="25">free<pos:position pos:line="95" pos:column="29"/></name><argument_list pos:line="95" pos:column="29">(<argument><expr><name pos:line="95" pos:column="30">dpath<pos:position pos:line="95" pos:column="35"/></name></expr></argument>)<pos:position pos:line="95" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="37"/></expr_stmt>
			<expr_stmt><expr><name pos:line="96" pos:column="25">dpath<pos:position pos:line="96" pos:column="30"/></name> <operator pos:line="96" pos:column="31">=<pos:position pos:line="96" pos:column="32"/></operator> <name pos:line="96" pos:column="33">NULL<pos:position pos:line="96" pos:column="37"/></name></expr>;<pos:position pos:line="96" pos:column="38"/></expr_stmt>

			<comment type="block" pos:line="98" pos:column="25">/*
			 * Show the diff for the 'ce' if we found the one
			 * from the desired stage.
			 */</comment>
			<expr_stmt><expr><name pos:line="102" pos:column="25">pair<pos:position pos:line="102" pos:column="29"/></name> <operator pos:line="102" pos:column="30">=<pos:position pos:line="102" pos:column="31"/></operator> <call><name pos:line="102" pos:column="32">diff_unmerge<pos:position pos:line="102" pos:column="44"/></name><argument_list pos:line="102" pos:column="44">(<argument><expr><operator pos:line="102" pos:column="45">&amp;<pos:position pos:line="102" pos:column="50"/></operator><name><name pos:line="102" pos:column="46">revs<pos:position pos:line="102" pos:column="50"/></name><operator pos:line="102" pos:column="50">-&gt;<pos:position pos:line="102" pos:column="55"/></operator><name pos:line="102" pos:column="52">diffopt<pos:position pos:line="102" pos:column="59"/></name></name></expr></argument>, <argument><expr><name><name pos:line="102" pos:column="61">ce<pos:position pos:line="102" pos:column="63"/></name><operator pos:line="102" pos:column="63">-&gt;<pos:position pos:line="102" pos:column="68"/></operator><name pos:line="102" pos:column="65">name<pos:position pos:line="102" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="102" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="71"/></expr_stmt>
			<if pos:line="103" pos:column="25">if <condition pos:line="103" pos:column="28">(<expr><name pos:line="103" pos:column="29">wt_mode<pos:position pos:line="103" pos:column="36"/></name></expr>)<pos:position pos:line="103" pos:column="37"/></condition><then pos:line="103" pos:column="37">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="104" pos:column="33">pair<pos:position pos:line="104" pos:column="37"/></name><operator pos:line="104" pos:column="37">-&gt;<pos:position pos:line="104" pos:column="42"/></operator><name pos:line="104" pos:column="39">two<pos:position pos:line="104" pos:column="42"/></name><operator pos:line="104" pos:column="42">-&gt;<pos:position pos:line="104" pos:column="47"/></operator><name pos:line="104" pos:column="44">mode<pos:position pos:line="104" pos:column="48"/></name></name> <operator pos:line="104" pos:column="49">=<pos:position pos:line="104" pos:column="50"/></operator> <name pos:line="104" pos:column="51">wt_mode<pos:position pos:line="104" pos:column="58"/></name></expr>;<pos:position pos:line="104" pos:column="59"/></expr_stmt></block></then></if>
			<if pos:line="105" pos:column="25">if <condition pos:line="105" pos:column="28">(<expr><call><name pos:line="105" pos:column="29">ce_stage<pos:position pos:line="105" pos:column="37"/></name><argument_list pos:line="105" pos:column="37">(<argument><expr><name pos:line="105" pos:column="38">ce<pos:position pos:line="105" pos:column="40"/></name></expr></argument>)<pos:position pos:line="105" pos:column="41"/></argument_list></call> <operator pos:line="105" pos:column="42">!=<pos:position pos:line="105" pos:column="44"/></operator> <name pos:line="105" pos:column="45">diff_unmerged_stage<pos:position pos:line="105" pos:column="64"/></name></expr>)<pos:position pos:line="105" pos:column="65"/></condition><then pos:line="105" pos:column="65">
				<block type="pseudo"><continue pos:line="106" pos:column="33">continue;<pos:position pos:line="106" pos:column="42"/></continue></block></then></if>
		}<pos:position pos:line="107" pos:column="18"/></block></then></if>

		<if pos:line="109" pos:column="17">if <condition pos:line="109" pos:column="20">(<expr><call><name pos:line="109" pos:column="21">ce_uptodate<pos:position pos:line="109" pos:column="32"/></name><argument_list pos:line="109" pos:column="32">(<argument><expr><name pos:line="109" pos:column="33">ce<pos:position pos:line="109" pos:column="35"/></name></expr></argument>)<pos:position pos:line="109" pos:column="36"/></argument_list></call> <operator pos:line="109" pos:column="37">||<pos:position pos:line="109" pos:column="39"/></operator> <call><name pos:line="109" pos:column="40">ce_skip_worktree<pos:position pos:line="109" pos:column="56"/></name><argument_list pos:line="109" pos:column="56">(<argument><expr><name pos:line="109" pos:column="57">ce<pos:position pos:line="109" pos:column="59"/></name></expr></argument>)<pos:position pos:line="109" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="109" pos:column="61"/></condition><then pos:line="109" pos:column="61">
			<block type="pseudo"><continue pos:line="110" pos:column="25">continue;<pos:position pos:line="110" pos:column="34"/></continue></block></then></if>

		<comment type="block" pos:line="112" pos:column="17">/* If CE_VALID is set, don't look at workdir for file removal */</comment>
		<if pos:line="113" pos:column="17">if <condition pos:line="113" pos:column="20">(<expr><name><name pos:line="113" pos:column="21">ce<pos:position pos:line="113" pos:column="23"/></name><operator pos:line="113" pos:column="23">-&gt;<pos:position pos:line="113" pos:column="28"/></operator><name pos:line="113" pos:column="25">ce_flags<pos:position pos:line="113" pos:column="33"/></name></name> <operator pos:line="113" pos:column="34">&amp;<pos:position pos:line="113" pos:column="39"/></operator> <name pos:line="113" pos:column="36">CE_VALID<pos:position pos:line="113" pos:column="44"/></name></expr>)<pos:position pos:line="113" pos:column="45"/></condition><then pos:line="113" pos:column="45"> <block pos:line="113" pos:column="46">{
			<expr_stmt><expr><name pos:line="114" pos:column="25">changed<pos:position pos:line="114" pos:column="32"/></name> <operator pos:line="114" pos:column="33">=<pos:position pos:line="114" pos:column="34"/></operator> <literal type="number" pos:line="114" pos:column="35">0<pos:position pos:line="114" pos:column="36"/></literal></expr>;<pos:position pos:line="114" pos:column="37"/></expr_stmt>
			<expr_stmt><expr><name pos:line="115" pos:column="25">newmode<pos:position pos:line="115" pos:column="32"/></name> <operator pos:line="115" pos:column="33">=<pos:position pos:line="115" pos:column="34"/></operator> <name><name pos:line="115" pos:column="35">ce<pos:position pos:line="115" pos:column="37"/></name><operator pos:line="115" pos:column="37">-&gt;<pos:position pos:line="115" pos:column="42"/></operator><name pos:line="115" pos:column="39">ce_mode<pos:position pos:line="115" pos:column="46"/></name></name></expr>;<pos:position pos:line="115" pos:column="47"/></expr_stmt>
		}<pos:position pos:line="116" pos:column="18"/></block></then> <else pos:line="116" pos:column="19">else <block pos:line="116" pos:column="24">{
			<decl_stmt><decl><type><name><name pos:line="117" pos:column="25">struct<pos:position pos:line="117" pos:column="31"/></name> <name pos:line="117" pos:column="32">stat<pos:position pos:line="117" pos:column="36"/></name></name></type> <name pos:line="117" pos:column="37">st<pos:position pos:line="117" pos:column="39"/></name></decl>;<pos:position pos:line="117" pos:column="40"/></decl_stmt>

			<expr_stmt><expr><name pos:line="119" pos:column="25">changed<pos:position pos:line="119" pos:column="32"/></name> <operator pos:line="119" pos:column="33">=<pos:position pos:line="119" pos:column="34"/></operator> <call><name pos:line="119" pos:column="35">check_removed<pos:position pos:line="119" pos:column="48"/></name><argument_list pos:line="119" pos:column="48">(<argument><expr><name pos:line="119" pos:column="49">ce<pos:position pos:line="119" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="119" pos:column="53">&amp;<pos:position pos:line="119" pos:column="58"/></operator><name pos:line="119" pos:column="54">st<pos:position pos:line="119" pos:column="56"/></name></expr></argument>)<pos:position pos:line="119" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="58"/></expr_stmt>
			<if pos:line="120" pos:column="25">if <condition pos:line="120" pos:column="28">(<expr><name pos:line="120" pos:column="29">changed<pos:position pos:line="120" pos:column="36"/></name></expr>)<pos:position pos:line="120" pos:column="37"/></condition><then pos:line="120" pos:column="37"> <block pos:line="120" pos:column="38">{
				<if pos:line="121" pos:column="33">if <condition pos:line="121" pos:column="36">(<expr><name pos:line="121" pos:column="37">changed<pos:position pos:line="121" pos:column="44"/></name> <operator pos:line="121" pos:column="45">&lt;<pos:position pos:line="121" pos:column="49"/></operator> <literal type="number" pos:line="121" pos:column="47">0<pos:position pos:line="121" pos:column="48"/></literal></expr>)<pos:position pos:line="121" pos:column="49"/></condition><then pos:line="121" pos:column="49"> <block pos:line="121" pos:column="50">{
					<expr_stmt><expr><call><name pos:line="122" pos:column="41">perror<pos:position pos:line="122" pos:column="47"/></name><argument_list pos:line="122" pos:column="47">(<argument><expr><name><name pos:line="122" pos:column="48">ce<pos:position pos:line="122" pos:column="50"/></name><operator pos:line="122" pos:column="50">-&gt;<pos:position pos:line="122" pos:column="55"/></operator><name pos:line="122" pos:column="52">name<pos:position pos:line="122" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="122" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="58"/></expr_stmt>
					<continue pos:line="123" pos:column="41">continue;<pos:position pos:line="123" pos:column="50"/></continue>
				}<pos:position pos:line="124" pos:column="34"/></block></then></if>
				<expr_stmt><expr><call><name pos:line="125" pos:column="33">diff_addremove<pos:position pos:line="125" pos:column="47"/></name><argument_list pos:line="125" pos:column="47">(<argument><expr><operator pos:line="125" pos:column="48">&amp;<pos:position pos:line="125" pos:column="53"/></operator><name><name pos:line="125" pos:column="49">revs<pos:position pos:line="125" pos:column="53"/></name><operator pos:line="125" pos:column="53">-&gt;<pos:position pos:line="125" pos:column="58"/></operator><name pos:line="125" pos:column="55">diffopt<pos:position pos:line="125" pos:column="62"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="125" pos:column="64">'-'<pos:position pos:line="125" pos:column="67"/></literal></expr></argument>, <argument><expr><name><name pos:line="125" pos:column="69">ce<pos:position pos:line="125" pos:column="71"/></name><operator pos:line="125" pos:column="71">-&gt;<pos:position pos:line="125" pos:column="76"/></operator><name pos:line="125" pos:column="73">ce_mode<pos:position pos:line="125" pos:column="80"/></name></name></expr></argument>,
					       <argument><expr><name><name pos:line="126" pos:column="48">ce<pos:position pos:line="126" pos:column="50"/></name><operator pos:line="126" pos:column="50">-&gt;<pos:position pos:line="126" pos:column="55"/></operator><name pos:line="126" pos:column="52">sha1<pos:position pos:line="126" pos:column="56"/></name></name></expr></argument>, <argument><expr><operator pos:line="126" pos:column="58">!<pos:position pos:line="126" pos:column="59"/></operator><call><name pos:line="126" pos:column="59">is_null_sha1<pos:position pos:line="126" pos:column="71"/></name><argument_list pos:line="126" pos:column="71">(<argument><expr><name><name pos:line="126" pos:column="72">ce<pos:position pos:line="126" pos:column="74"/></name><operator pos:line="126" pos:column="74">-&gt;<pos:position pos:line="126" pos:column="79"/></operator><name pos:line="126" pos:column="76">sha1<pos:position pos:line="126" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="126" pos:column="81"/></argument_list></call></expr></argument>,
					       <argument><expr><name><name pos:line="127" pos:column="48">ce<pos:position pos:line="127" pos:column="50"/></name><operator pos:line="127" pos:column="50">-&gt;<pos:position pos:line="127" pos:column="55"/></operator><name pos:line="127" pos:column="52">name<pos:position pos:line="127" pos:column="56"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="127" pos:column="58">0<pos:position pos:line="127" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="127" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="61"/></expr_stmt>
				<continue pos:line="128" pos:column="33">continue;<pos:position pos:line="128" pos:column="42"/></continue>
			}<pos:position pos:line="129" pos:column="26"/></block></then></if>

			<expr_stmt><expr><name pos:line="131" pos:column="25">changed<pos:position pos:line="131" pos:column="32"/></name> <operator pos:line="131" pos:column="33">=<pos:position pos:line="131" pos:column="34"/></operator> <call><name pos:line="131" pos:column="35">match_stat_with_submodule<pos:position pos:line="131" pos:column="60"/></name><argument_list pos:line="131" pos:column="60">(<argument><expr><operator pos:line="131" pos:column="61">&amp;<pos:position pos:line="131" pos:column="66"/></operator><name><name pos:line="131" pos:column="62">revs<pos:position pos:line="131" pos:column="66"/></name><operator pos:line="131" pos:column="66">-&gt;<pos:position pos:line="131" pos:column="71"/></operator><name pos:line="131" pos:column="68">diffopt<pos:position pos:line="131" pos:column="75"/></name></name></expr></argument>, <argument><expr><name pos:line="131" pos:column="77">ce<pos:position pos:line="131" pos:column="79"/></name></expr></argument>, <argument><expr><operator pos:line="131" pos:column="81">&amp;<pos:position pos:line="131" pos:column="86"/></operator><name pos:line="131" pos:column="82">st<pos:position pos:line="131" pos:column="84"/></name></expr></argument>,
							    <argument><expr><name pos:line="132" pos:column="61">ce_option<pos:position pos:line="132" pos:column="70"/></name></expr></argument>, <argument><expr><operator pos:line="132" pos:column="72">&amp;<pos:position pos:line="132" pos:column="77"/></operator><name pos:line="132" pos:column="73">dirty_submodule<pos:position pos:line="132" pos:column="88"/></name></expr></argument>)<pos:position pos:line="132" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="90"/></expr_stmt>
			<expr_stmt><expr><name pos:line="133" pos:column="25">newmode<pos:position pos:line="133" pos:column="32"/></name> <operator pos:line="133" pos:column="33">=<pos:position pos:line="133" pos:column="34"/></operator> <call><name pos:line="133" pos:column="35">ce_mode_from_stat<pos:position pos:line="133" pos:column="52"/></name><argument_list pos:line="133" pos:column="52">(<argument><expr><name pos:line="133" pos:column="53">ce<pos:position pos:line="133" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="133" pos:column="57">st<pos:position pos:line="133" pos:column="59"/></name><operator pos:line="133" pos:column="59">.<pos:position pos:line="133" pos:column="60"/></operator><name pos:line="133" pos:column="60">st_mode<pos:position pos:line="133" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="133" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="69"/></expr_stmt>
		}<pos:position pos:line="134" pos:column="18"/></block></else></if>

		<if pos:line="136" pos:column="17">if <condition pos:line="136" pos:column="20">(<expr><operator pos:line="136" pos:column="21">!<pos:position pos:line="136" pos:column="22"/></operator><name pos:line="136" pos:column="22">changed<pos:position pos:line="136" pos:column="29"/></name> <operator pos:line="136" pos:column="30">&amp;&amp;<pos:position pos:line="136" pos:column="40"/></operator> <operator pos:line="136" pos:column="33">!<pos:position pos:line="136" pos:column="34"/></operator><name pos:line="136" pos:column="34">dirty_submodule<pos:position pos:line="136" pos:column="49"/></name></expr>)<pos:position pos:line="136" pos:column="50"/></condition><then pos:line="136" pos:column="50"> <block pos:line="136" pos:column="51">{
			<expr_stmt><expr><call><name pos:line="137" pos:column="25">ce_mark_uptodate<pos:position pos:line="137" pos:column="41"/></name><argument_list pos:line="137" pos:column="41">(<argument><expr><name pos:line="137" pos:column="42">ce<pos:position pos:line="137" pos:column="44"/></name></expr></argument>)<pos:position pos:line="137" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="46"/></expr_stmt>
			<if pos:line="138" pos:column="25">if <condition pos:line="138" pos:column="28">(<expr><operator pos:line="138" pos:column="29">!<pos:position pos:line="138" pos:column="30"/></operator><call><name pos:line="138" pos:column="30">DIFF_OPT_TST<pos:position pos:line="138" pos:column="42"/></name><argument_list pos:line="138" pos:column="42">(<argument><expr><operator pos:line="138" pos:column="43">&amp;<pos:position pos:line="138" pos:column="48"/></operator><name><name pos:line="138" pos:column="44">revs<pos:position pos:line="138" pos:column="48"/></name><operator pos:line="138" pos:column="48">-&gt;<pos:position pos:line="138" pos:column="53"/></operator><name pos:line="138" pos:column="50">diffopt<pos:position pos:line="138" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="138" pos:column="59">FIND_COPIES_HARDER<pos:position pos:line="138" pos:column="77"/></name></expr></argument>)<pos:position pos:line="138" pos:column="78"/></argument_list></call></expr>)<pos:position pos:line="138" pos:column="79"/></condition><then pos:line="138" pos:column="79">
				<block type="pseudo"><continue pos:line="139" pos:column="33">continue;<pos:position pos:line="139" pos:column="42"/></continue></block></then></if>
		}<pos:position pos:line="140" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="141" pos:column="17">oldmode<pos:position pos:line="141" pos:column="24"/></name> <operator pos:line="141" pos:column="25">=<pos:position pos:line="141" pos:column="26"/></operator> <name><name pos:line="141" pos:column="27">ce<pos:position pos:line="141" pos:column="29"/></name><operator pos:line="141" pos:column="29">-&gt;<pos:position pos:line="141" pos:column="34"/></operator><name pos:line="141" pos:column="31">ce_mode<pos:position pos:line="141" pos:column="38"/></name></name></expr>;<pos:position pos:line="141" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><name pos:line="142" pos:column="17">old_sha1<pos:position pos:line="142" pos:column="25"/></name> <operator pos:line="142" pos:column="26">=<pos:position pos:line="142" pos:column="27"/></operator> <name><name pos:line="142" pos:column="28">ce<pos:position pos:line="142" pos:column="30"/></name><operator pos:line="142" pos:column="30">-&gt;<pos:position pos:line="142" pos:column="35"/></operator><name pos:line="142" pos:column="32">sha1<pos:position pos:line="142" pos:column="36"/></name></name></expr>;<pos:position pos:line="142" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><name pos:line="143" pos:column="17">new_sha1<pos:position pos:line="143" pos:column="25"/></name> <operator pos:line="143" pos:column="26">=<pos:position pos:line="143" pos:column="27"/></operator> <ternary><condition><expr><name pos:line="143" pos:column="28">changed<pos:position pos:line="143" pos:column="35"/></name></expr> ?<pos:position pos:line="143" pos:column="37"/></condition><then pos:line="143" pos:column="37"> <expr><name pos:line="143" pos:column="38">null_sha1<pos:position pos:line="143" pos:column="47"/></name></expr> <pos:position pos:line="143" pos:column="48"/></then><else pos:line="143" pos:column="48">: <expr><name><name pos:line="143" pos:column="50">ce<pos:position pos:line="143" pos:column="52"/></name><operator pos:line="143" pos:column="52">-&gt;<pos:position pos:line="143" pos:column="57"/></operator><name pos:line="143" pos:column="54">sha1<pos:position pos:line="143" pos:column="58"/></name></name></expr></else></ternary></expr>;<pos:position pos:line="143" pos:column="59"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="144" pos:column="17">diff_change<pos:position pos:line="144" pos:column="28"/></name><argument_list pos:line="144" pos:column="28">(<argument><expr><operator pos:line="144" pos:column="29">&amp;<pos:position pos:line="144" pos:column="34"/></operator><name><name pos:line="144" pos:column="30">revs<pos:position pos:line="144" pos:column="34"/></name><operator pos:line="144" pos:column="34">-&gt;<pos:position pos:line="144" pos:column="39"/></operator><name pos:line="144" pos:column="36">diffopt<pos:position pos:line="144" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="144" pos:column="45">oldmode<pos:position pos:line="144" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="144" pos:column="54">newmode<pos:position pos:line="144" pos:column="61"/></name></expr></argument>,
			    <argument><expr><name pos:line="145" pos:column="29">old_sha1<pos:position pos:line="145" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="145" pos:column="39">new_sha1<pos:position pos:line="145" pos:column="47"/></name></expr></argument>,
			    <argument><expr><operator pos:line="146" pos:column="29">!<pos:position pos:line="146" pos:column="30"/></operator><call><name pos:line="146" pos:column="30">is_null_sha1<pos:position pos:line="146" pos:column="42"/></name><argument_list pos:line="146" pos:column="42">(<argument><expr><name pos:line="146" pos:column="43">old_sha1<pos:position pos:line="146" pos:column="51"/></name></expr></argument>)<pos:position pos:line="146" pos:column="52"/></argument_list></call></expr></argument>,
			    <argument><expr><operator pos:line="147" pos:column="29">!<pos:position pos:line="147" pos:column="30"/></operator><call><name pos:line="147" pos:column="30">is_null_sha1<pos:position pos:line="147" pos:column="42"/></name><argument_list pos:line="147" pos:column="42">(<argument><expr><name pos:line="147" pos:column="43">new_sha1<pos:position pos:line="147" pos:column="51"/></name></expr></argument>)<pos:position pos:line="147" pos:column="52"/></argument_list></call></expr></argument>,
			    <argument><expr><name><name pos:line="148" pos:column="29">ce<pos:position pos:line="148" pos:column="31"/></name><operator pos:line="148" pos:column="31">-&gt;<pos:position pos:line="148" pos:column="36"/></operator><name pos:line="148" pos:column="33">name<pos:position pos:line="148" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="148" pos:column="39">0<pos:position pos:line="148" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="148" pos:column="42">dirty_submodule<pos:position pos:line="148" pos:column="57"/></name></expr></argument>)<pos:position pos:line="148" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="59"/></expr_stmt>

	}<pos:position pos:line="150" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="151" pos:column="9">diffcore_std<pos:position pos:line="151" pos:column="21"/></name><argument_list pos:line="151" pos:column="21">(<argument><expr><operator pos:line="151" pos:column="22">&amp;<pos:position pos:line="151" pos:column="27"/></operator><name><name pos:line="151" pos:column="23">revs<pos:position pos:line="151" pos:column="27"/></name><operator pos:line="151" pos:column="27">-&gt;<pos:position pos:line="151" pos:column="32"/></operator><name pos:line="151" pos:column="29">diffopt<pos:position pos:line="151" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="151" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="152" pos:column="9">diff_flush<pos:position pos:line="152" pos:column="19"/></name><argument_list pos:line="152" pos:column="19">(<argument><expr><operator pos:line="152" pos:column="20">&amp;<pos:position pos:line="152" pos:column="25"/></operator><name><name pos:line="152" pos:column="21">revs<pos:position pos:line="152" pos:column="25"/></name><operator pos:line="152" pos:column="25">-&gt;<pos:position pos:line="152" pos:column="30"/></operator><name pos:line="152" pos:column="27">diffopt<pos:position pos:line="152" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="152" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="36"/></expr_stmt>
	<return pos:line="153" pos:column="9">return <expr><literal type="number" pos:line="153" pos:column="16">0<pos:position pos:line="153" pos:column="17"/></literal></expr>;<pos:position pos:line="153" pos:column="18"/></return>
}<pos:position pos:line="154" pos:column="2"/></block></function></unit>

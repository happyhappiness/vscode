<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_719_git-2.7.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">unuse_commit_buffer<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">commit<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">commit<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="55">const<pos:position pos:line="1" pos:column="60"/></specifier> <name pos:line="1" pos:column="61">void<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">buffer<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="74"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">commit_buffer<pos:position pos:line="3" pos:column="29"/></name></name> <modifier pos:line="3" pos:column="30">*<pos:position pos:line="3" pos:column="31"/></modifier></type><name pos:line="3" pos:column="31">v<pos:position pos:line="3" pos:column="32"/></name> <init pos:line="3" pos:column="33">= <expr><call><name pos:line="3" pos:column="35">buffer_slab_peek<pos:position pos:line="3" pos:column="51"/></name><argument_list pos:line="3" pos:column="51">(<argument><expr><operator pos:line="3" pos:column="52">&amp;<pos:position pos:line="3" pos:column="57"/></operator><name pos:line="3" pos:column="53">buffer_slab<pos:position pos:line="3" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="66">commit<pos:position pos:line="3" pos:column="72"/></name></expr></argument>)<pos:position pos:line="3" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="74"/></decl_stmt>
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><operator pos:line="4" pos:column="13">!<pos:position pos:line="4" pos:column="14"/></operator><operator pos:line="4" pos:column="14">(<pos:position pos:line="4" pos:column="15"/></operator><name pos:line="4" pos:column="15">v<pos:position pos:line="4" pos:column="16"/></name> <operator pos:line="4" pos:column="17">&amp;&amp;<pos:position pos:line="4" pos:column="27"/></operator> <name><name pos:line="4" pos:column="20">v<pos:position pos:line="4" pos:column="21"/></name><operator pos:line="4" pos:column="21">-&gt;<pos:position pos:line="4" pos:column="26"/></operator><name pos:line="4" pos:column="23">buffer<pos:position pos:line="4" pos:column="29"/></name></name> <operator pos:line="4" pos:column="30">==<pos:position pos:line="4" pos:column="32"/></operator> <name pos:line="4" pos:column="33">buffer<pos:position pos:line="4" pos:column="39"/></name><operator pos:line="4" pos:column="39">)<pos:position pos:line="4" pos:column="40"/></operator></expr>)<pos:position pos:line="4" pos:column="41"/></condition><then pos:line="4" pos:column="41">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="5" pos:column="17">free<pos:position pos:line="5" pos:column="21"/></name><argument_list pos:line="5" pos:column="21">(<argument><expr><operator pos:line="5" pos:column="22">(<pos:position pos:line="5" pos:column="23"/></operator><name pos:line="5" pos:column="23">void<pos:position pos:line="5" pos:column="27"/></name> <operator pos:line="5" pos:column="28">*<pos:position pos:line="5" pos:column="29"/></operator><operator pos:line="5" pos:column="29">)<pos:position pos:line="5" pos:column="30"/></operator><name pos:line="5" pos:column="30">buffer<pos:position pos:line="5" pos:column="36"/></name></expr></argument>)<pos:position pos:line="5" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="38"/></expr_stmt></block></then></if>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3794_git-2.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">origin<pos:position pos:line="1" pos:column="21"/></name></name> <modifier pos:line="1" pos:column="22">*<pos:position pos:line="1" pos:column="23"/></modifier></type><name pos:line="1" pos:column="23">find_origin<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name><name pos:line="1" pos:column="35">struct<pos:position pos:line="1" pos:column="41"/></name> <name pos:line="1" pos:column="42">scoreboard<pos:position pos:line="1" pos:column="52"/></name></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">sb<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>,
				  <parameter><decl><type><name><name pos:line="2" pos:column="35">struct<pos:position pos:line="2" pos:column="41"/></name> <name pos:line="2" pos:column="42">commit<pos:position pos:line="2" pos:column="48"/></name></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">parent<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>,
				  <parameter><decl><type><name><name pos:line="3" pos:column="35">struct<pos:position pos:line="3" pos:column="41"/></name> <name pos:line="3" pos:column="42">origin<pos:position pos:line="3" pos:column="48"/></name></name> <modifier pos:line="3" pos:column="49">*<pos:position pos:line="3" pos:column="50"/></modifier></type><name pos:line="3" pos:column="50">origin<pos:position pos:line="3" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="57"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">origin<pos:position pos:line="5" pos:column="22"/></name></name> <modifier pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></modifier></type><name pos:line="5" pos:column="24">porigin<pos:position pos:line="5" pos:column="31"/></name> <init pos:line="5" pos:column="32">= <expr><name pos:line="5" pos:column="34">NULL<pos:position pos:line="5" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">diff_options<pos:position pos:line="6" pos:column="28"/></name></name></type> <name pos:line="6" pos:column="29">diff_opts<pos:position pos:line="6" pos:column="38"/></name></decl>;<pos:position pos:line="6" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name pos:line="7" pos:column="15">char<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name><name pos:line="7" pos:column="21">paths<pos:position pos:line="7" pos:column="26"/></name><index pos:line="7" pos:column="26">[<expr><literal type="number" pos:line="7" pos:column="27">2<pos:position pos:line="7" pos:column="28"/></literal></expr>]<pos:position pos:line="7" pos:column="29"/></index></name></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name><name pos:line="9" pos:column="13">parent<pos:position pos:line="9" pos:column="19"/></name><operator pos:line="9" pos:column="19">-&gt;<pos:position pos:line="9" pos:column="24"/></operator><name pos:line="9" pos:column="21">util<pos:position pos:line="9" pos:column="25"/></name></name></expr>)<pos:position pos:line="9" pos:column="26"/></condition><then pos:line="9" pos:column="26"> <block pos:line="9" pos:column="27">{
		<comment type="block" pos:line="10" pos:column="17">/*
		 * Each commit object can cache one origin in that
		 * commit.  This is a freestanding copy of origin and
		 * not refcounted.
		 */</comment>
		<decl_stmt><decl><type><name><name pos:line="15" pos:column="17">struct<pos:position pos:line="15" pos:column="23"/></name> <name pos:line="15" pos:column="24">origin<pos:position pos:line="15" pos:column="30"/></name></name> <modifier pos:line="15" pos:column="31">*<pos:position pos:line="15" pos:column="32"/></modifier></type><name pos:line="15" pos:column="32">cached<pos:position pos:line="15" pos:column="38"/></name> <init pos:line="15" pos:column="39">= <expr><name><name pos:line="15" pos:column="41">parent<pos:position pos:line="15" pos:column="47"/></name><operator pos:line="15" pos:column="47">-&gt;<pos:position pos:line="15" pos:column="52"/></operator><name pos:line="15" pos:column="49">util<pos:position pos:line="15" pos:column="53"/></name></name></expr></init></decl>;<pos:position pos:line="15" pos:column="54"/></decl_stmt>
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><operator pos:line="16" pos:column="21">!<pos:position pos:line="16" pos:column="22"/></operator><call><name pos:line="16" pos:column="22">strcmp<pos:position pos:line="16" pos:column="28"/></name><argument_list pos:line="16" pos:column="28">(<argument><expr><name><name pos:line="16" pos:column="29">cached<pos:position pos:line="16" pos:column="35"/></name><operator pos:line="16" pos:column="35">-&gt;<pos:position pos:line="16" pos:column="40"/></operator><name pos:line="16" pos:column="37">path<pos:position pos:line="16" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="43">origin<pos:position pos:line="16" pos:column="49"/></name><operator pos:line="16" pos:column="49">-&gt;<pos:position pos:line="16" pos:column="54"/></operator><name pos:line="16" pos:column="51">path<pos:position pos:line="16" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="57"/></condition><then pos:line="16" pos:column="57"> <block pos:line="16" pos:column="58">{
			<comment type="block" pos:line="17" pos:column="25">/*
			 * The same path between origin and its parent
			 * without renaming -- the most common case.
			 */</comment>
			<expr_stmt><expr><name pos:line="21" pos:column="25">porigin<pos:position pos:line="21" pos:column="32"/></name> <operator pos:line="21" pos:column="33">=<pos:position pos:line="21" pos:column="34"/></operator> <call><name pos:line="21" pos:column="35">get_origin<pos:position pos:line="21" pos:column="45"/></name><argument_list pos:line="21" pos:column="45">(<argument><expr><name pos:line="21" pos:column="46">sb<pos:position pos:line="21" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="50">parent<pos:position pos:line="21" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="58">cached<pos:position pos:line="21" pos:column="64"/></name><operator pos:line="21" pos:column="64">-&gt;<pos:position pos:line="21" pos:column="69"/></operator><name pos:line="21" pos:column="66">path<pos:position pos:line="21" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="72"/></expr_stmt>

			<comment type="block" pos:line="23" pos:column="25">/*
			 * If the origin was newly created (i.e. get_origin
			 * would call make_origin if none is found in the
			 * scoreboard), it does not know the blob_sha1/mode,
			 * so copy it.  Otherwise porigin was in the
			 * scoreboard and already knows blob_sha1/mode.
			 */</comment>
			<if pos:line="30" pos:column="25">if <condition pos:line="30" pos:column="28">(<expr><name><name pos:line="30" pos:column="29">porigin<pos:position pos:line="30" pos:column="36"/></name><operator pos:line="30" pos:column="36">-&gt;<pos:position pos:line="30" pos:column="41"/></operator><name pos:line="30" pos:column="38">refcnt<pos:position pos:line="30" pos:column="44"/></name></name> <operator pos:line="30" pos:column="45">==<pos:position pos:line="30" pos:column="47"/></operator> <literal type="number" pos:line="30" pos:column="48">1<pos:position pos:line="30" pos:column="49"/></literal></expr>)<pos:position pos:line="30" pos:column="50"/></condition><then pos:line="30" pos:column="50"> <block pos:line="30" pos:column="51">{
				<expr_stmt><expr><call><name pos:line="31" pos:column="33">hashcpy<pos:position pos:line="31" pos:column="40"/></name><argument_list pos:line="31" pos:column="40">(<argument><expr><name><name pos:line="31" pos:column="41">porigin<pos:position pos:line="31" pos:column="48"/></name><operator pos:line="31" pos:column="48">-&gt;<pos:position pos:line="31" pos:column="53"/></operator><name pos:line="31" pos:column="50">blob_sha1<pos:position pos:line="31" pos:column="59"/></name></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="61">cached<pos:position pos:line="31" pos:column="67"/></name><operator pos:line="31" pos:column="67">-&gt;<pos:position pos:line="31" pos:column="72"/></operator><name pos:line="31" pos:column="69">blob_sha1<pos:position pos:line="31" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="80"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="32" pos:column="33">porigin<pos:position pos:line="32" pos:column="40"/></name><operator pos:line="32" pos:column="40">-&gt;<pos:position pos:line="32" pos:column="45"/></operator><name pos:line="32" pos:column="42">mode<pos:position pos:line="32" pos:column="46"/></name></name> <operator pos:line="32" pos:column="47">=<pos:position pos:line="32" pos:column="48"/></operator> <name><name pos:line="32" pos:column="49">cached<pos:position pos:line="32" pos:column="55"/></name><operator pos:line="32" pos:column="55">-&gt;<pos:position pos:line="32" pos:column="60"/></operator><name pos:line="32" pos:column="57">mode<pos:position pos:line="32" pos:column="61"/></name></name></expr>;<pos:position pos:line="32" pos:column="62"/></expr_stmt>
			}<pos:position pos:line="33" pos:column="26"/></block></then></if>
			<return pos:line="34" pos:column="25">return <expr><name pos:line="34" pos:column="32">porigin<pos:position pos:line="34" pos:column="39"/></name></expr>;<pos:position pos:line="34" pos:column="40"/></return>
		}<pos:position pos:line="35" pos:column="18"/></block></then></if>
		<comment type="block" pos:line="36" pos:column="17">/* otherwise it was not very useful; free it */</comment>
		<expr_stmt><expr><call><name pos:line="37" pos:column="17">free<pos:position pos:line="37" pos:column="21"/></name><argument_list pos:line="37" pos:column="21">(<argument><expr><name><name pos:line="37" pos:column="22">parent<pos:position pos:line="37" pos:column="28"/></name><operator pos:line="37" pos:column="28">-&gt;<pos:position pos:line="37" pos:column="33"/></operator><name pos:line="37" pos:column="30">util<pos:position pos:line="37" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="38" pos:column="17">parent<pos:position pos:line="38" pos:column="23"/></name><operator pos:line="38" pos:column="23">-&gt;<pos:position pos:line="38" pos:column="28"/></operator><name pos:line="38" pos:column="25">util<pos:position pos:line="38" pos:column="29"/></name></name> <operator pos:line="38" pos:column="30">=<pos:position pos:line="38" pos:column="31"/></operator> <name pos:line="38" pos:column="32">NULL<pos:position pos:line="38" pos:column="36"/></name></expr>;<pos:position pos:line="38" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="39" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="41" pos:column="9">/* See if the origin-&gt;path is different between parent
	 * and origin first.  Most of the time they are the
	 * same and diff-tree is fairly efficient about this.
	 */</comment>
	<expr_stmt><expr><call><name pos:line="45" pos:column="9">diff_setup<pos:position pos:line="45" pos:column="19"/></name><argument_list pos:line="45" pos:column="19">(<argument><expr><operator pos:line="45" pos:column="20">&amp;<pos:position pos:line="45" pos:column="25"/></operator><name pos:line="45" pos:column="21">diff_opts<pos:position pos:line="45" pos:column="30"/></name></expr></argument>)<pos:position pos:line="45" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="46" pos:column="9">DIFF_OPT_SET<pos:position pos:line="46" pos:column="21"/></name><argument_list pos:line="46" pos:column="21">(<argument><expr><operator pos:line="46" pos:column="22">&amp;<pos:position pos:line="46" pos:column="27"/></operator><name pos:line="46" pos:column="23">diff_opts<pos:position pos:line="46" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="34">RECURSIVE<pos:position pos:line="46" pos:column="43"/></name></expr></argument>)<pos:position pos:line="46" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="47" pos:column="9">diff_opts<pos:position pos:line="47" pos:column="18"/></name><operator pos:line="47" pos:column="18">.<pos:position pos:line="47" pos:column="19"/></operator><name pos:line="47" pos:column="19">detect_rename<pos:position pos:line="47" pos:column="32"/></name></name> <operator pos:line="47" pos:column="33">=<pos:position pos:line="47" pos:column="34"/></operator> <literal type="number" pos:line="47" pos:column="35">0<pos:position pos:line="47" pos:column="36"/></literal></expr>;<pos:position pos:line="47" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="48" pos:column="9">diff_opts<pos:position pos:line="48" pos:column="18"/></name><operator pos:line="48" pos:column="18">.<pos:position pos:line="48" pos:column="19"/></operator><name pos:line="48" pos:column="19">output_format<pos:position pos:line="48" pos:column="32"/></name></name> <operator pos:line="48" pos:column="33">=<pos:position pos:line="48" pos:column="34"/></operator> <name pos:line="48" pos:column="35">DIFF_FORMAT_NO_OUTPUT<pos:position pos:line="48" pos:column="56"/></name></expr>;<pos:position pos:line="48" pos:column="57"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="49" pos:column="9">paths<pos:position pos:line="49" pos:column="14"/></name><index pos:line="49" pos:column="14">[<expr><literal type="number" pos:line="49" pos:column="15">0<pos:position pos:line="49" pos:column="16"/></literal></expr>]<pos:position pos:line="49" pos:column="17"/></index></name> <operator pos:line="49" pos:column="18">=<pos:position pos:line="49" pos:column="19"/></operator> <name><name pos:line="49" pos:column="20">origin<pos:position pos:line="49" pos:column="26"/></name><operator pos:line="49" pos:column="26">-&gt;<pos:position pos:line="49" pos:column="31"/></operator><name pos:line="49" pos:column="28">path<pos:position pos:line="49" pos:column="32"/></name></name></expr>;<pos:position pos:line="49" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="50" pos:column="9">paths<pos:position pos:line="50" pos:column="14"/></name><index pos:line="50" pos:column="14">[<expr><literal type="number" pos:line="50" pos:column="15">1<pos:position pos:line="50" pos:column="16"/></literal></expr>]<pos:position pos:line="50" pos:column="17"/></index></name> <operator pos:line="50" pos:column="18">=<pos:position pos:line="50" pos:column="19"/></operator> <name pos:line="50" pos:column="20">NULL<pos:position pos:line="50" pos:column="24"/></name></expr>;<pos:position pos:line="50" pos:column="25"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="52" pos:column="9">parse_pathspec<pos:position pos:line="52" pos:column="23"/></name><argument_list pos:line="52" pos:column="23">(<argument><expr><operator pos:line="52" pos:column="24">&amp;<pos:position pos:line="52" pos:column="29"/></operator><name><name pos:line="52" pos:column="25">diff_opts<pos:position pos:line="52" pos:column="34"/></name><operator pos:line="52" pos:column="34">.<pos:position pos:line="52" pos:column="35"/></operator><name pos:line="52" pos:column="35">pathspec<pos:position pos:line="52" pos:column="43"/></name></name></expr></argument>,
		       <argument><expr><name pos:line="53" pos:column="24">PATHSPEC_ALL_MAGIC<pos:position pos:line="53" pos:column="42"/></name> <operator pos:line="53" pos:column="43">&amp;<pos:position pos:line="53" pos:column="48"/></operator> <operator pos:line="53" pos:column="45">~<pos:position pos:line="53" pos:column="46"/></operator><name pos:line="53" pos:column="46">PATHSPEC_LITERAL<pos:position pos:line="53" pos:column="62"/></name></expr></argument>,
		       <argument><expr><name pos:line="54" pos:column="24">PATHSPEC_LITERAL_PATH<pos:position pos:line="54" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="47">""<pos:position pos:line="54" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="54" pos:column="51">paths<pos:position pos:line="54" pos:column="56"/></name></expr></argument>)<pos:position pos:line="54" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="58"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="55" pos:column="9">diff_setup_done<pos:position pos:line="55" pos:column="24"/></name><argument_list pos:line="55" pos:column="24">(<argument><expr><operator pos:line="55" pos:column="25">&amp;<pos:position pos:line="55" pos:column="30"/></operator><name pos:line="55" pos:column="26">diff_opts<pos:position pos:line="55" pos:column="35"/></name></expr></argument>)<pos:position pos:line="55" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="37"/></expr_stmt>

	<if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><call><name pos:line="57" pos:column="13">is_null_sha1<pos:position pos:line="57" pos:column="25"/></name><argument_list pos:line="57" pos:column="25">(<argument><expr><name><name pos:line="57" pos:column="26">origin<pos:position pos:line="57" pos:column="32"/></name><operator pos:line="57" pos:column="32">-&gt;<pos:position pos:line="57" pos:column="37"/></operator><name pos:line="57" pos:column="34">commit<pos:position pos:line="57" pos:column="40"/></name><operator pos:line="57" pos:column="40">-&gt;<pos:position pos:line="57" pos:column="45"/></operator><name pos:line="57" pos:column="42">object<pos:position pos:line="57" pos:column="48"/></name><operator pos:line="57" pos:column="48">.<pos:position pos:line="57" pos:column="49"/></operator><name pos:line="57" pos:column="49">sha1<pos:position pos:line="57" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="57" pos:column="55"/></condition><then pos:line="57" pos:column="55">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="58" pos:column="17">do_diff_cache<pos:position pos:line="58" pos:column="30"/></name><argument_list pos:line="58" pos:column="30">(<argument><expr><name><name pos:line="58" pos:column="31">parent<pos:position pos:line="58" pos:column="37"/></name><operator pos:line="58" pos:column="37">-&gt;<pos:position pos:line="58" pos:column="42"/></operator><name pos:line="58" pos:column="39">tree<pos:position pos:line="58" pos:column="43"/></name><operator pos:line="58" pos:column="43">-&gt;<pos:position pos:line="58" pos:column="48"/></operator><name pos:line="58" pos:column="45">object<pos:position pos:line="58" pos:column="51"/></name><operator pos:line="58" pos:column="51">.<pos:position pos:line="58" pos:column="52"/></operator><name pos:line="58" pos:column="52">sha1<pos:position pos:line="58" pos:column="56"/></name></name></expr></argument>, <argument><expr><operator pos:line="58" pos:column="58">&amp;<pos:position pos:line="58" pos:column="63"/></operator><name pos:line="58" pos:column="59">diff_opts<pos:position pos:line="58" pos:column="68"/></name></expr></argument>)<pos:position pos:line="58" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="70"/></expr_stmt></block></then>
	<else pos:line="59" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="60" pos:column="17">diff_tree_sha1<pos:position pos:line="60" pos:column="31"/></name><argument_list pos:line="60" pos:column="31">(<argument><expr><name><name pos:line="60" pos:column="32">parent<pos:position pos:line="60" pos:column="38"/></name><operator pos:line="60" pos:column="38">-&gt;<pos:position pos:line="60" pos:column="43"/></operator><name pos:line="60" pos:column="40">tree<pos:position pos:line="60" pos:column="44"/></name><operator pos:line="60" pos:column="44">-&gt;<pos:position pos:line="60" pos:column="49"/></operator><name pos:line="60" pos:column="46">object<pos:position pos:line="60" pos:column="52"/></name><operator pos:line="60" pos:column="52">.<pos:position pos:line="60" pos:column="53"/></operator><name pos:line="60" pos:column="53">sha1<pos:position pos:line="60" pos:column="57"/></name></name></expr></argument>,
			       <argument><expr><name><name pos:line="61" pos:column="32">origin<pos:position pos:line="61" pos:column="38"/></name><operator pos:line="61" pos:column="38">-&gt;<pos:position pos:line="61" pos:column="43"/></operator><name pos:line="61" pos:column="40">commit<pos:position pos:line="61" pos:column="46"/></name><operator pos:line="61" pos:column="46">-&gt;<pos:position pos:line="61" pos:column="51"/></operator><name pos:line="61" pos:column="48">tree<pos:position pos:line="61" pos:column="52"/></name><operator pos:line="61" pos:column="52">-&gt;<pos:position pos:line="61" pos:column="57"/></operator><name pos:line="61" pos:column="54">object<pos:position pos:line="61" pos:column="60"/></name><operator pos:line="61" pos:column="60">.<pos:position pos:line="61" pos:column="61"/></operator><name pos:line="61" pos:column="61">sha1<pos:position pos:line="61" pos:column="65"/></name></name></expr></argument>,
			       <argument><expr><literal type="string" pos:line="62" pos:column="32">""<pos:position pos:line="62" pos:column="34"/></literal></expr></argument>, <argument><expr><operator pos:line="62" pos:column="36">&amp;<pos:position pos:line="62" pos:column="41"/></operator><name pos:line="62" pos:column="37">diff_opts<pos:position pos:line="62" pos:column="46"/></name></expr></argument>)<pos:position pos:line="62" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="48"/></expr_stmt></block></else></if>
	<expr_stmt><expr><call><name pos:line="63" pos:column="9">diffcore_std<pos:position pos:line="63" pos:column="21"/></name><argument_list pos:line="63" pos:column="21">(<argument><expr><operator pos:line="63" pos:column="22">&amp;<pos:position pos:line="63" pos:column="27"/></operator><name pos:line="63" pos:column="23">diff_opts<pos:position pos:line="63" pos:column="32"/></name></expr></argument>)<pos:position pos:line="63" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="34"/></expr_stmt>

	<if pos:line="65" pos:column="9">if <condition pos:line="65" pos:column="12">(<expr><operator pos:line="65" pos:column="13">!<pos:position pos:line="65" pos:column="14"/></operator><name><name pos:line="65" pos:column="14">diff_queued_diff<pos:position pos:line="65" pos:column="30"/></name><operator pos:line="65" pos:column="30">.<pos:position pos:line="65" pos:column="31"/></operator><name pos:line="65" pos:column="31">nr<pos:position pos:line="65" pos:column="33"/></name></name></expr>)<pos:position pos:line="65" pos:column="34"/></condition><then pos:line="65" pos:column="34"> <block pos:line="65" pos:column="35">{
		<comment type="block" pos:line="66" pos:column="17">/* The path is the same as parent */</comment>
		<expr_stmt><expr><name pos:line="67" pos:column="17">porigin<pos:position pos:line="67" pos:column="24"/></name> <operator pos:line="67" pos:column="25">=<pos:position pos:line="67" pos:column="26"/></operator> <call><name pos:line="67" pos:column="27">get_origin<pos:position pos:line="67" pos:column="37"/></name><argument_list pos:line="67" pos:column="37">(<argument><expr><name pos:line="67" pos:column="38">sb<pos:position pos:line="67" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="42">parent<pos:position pos:line="67" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="67" pos:column="50">origin<pos:position pos:line="67" pos:column="56"/></name><operator pos:line="67" pos:column="56">-&gt;<pos:position pos:line="67" pos:column="61"/></operator><name pos:line="67" pos:column="58">path<pos:position pos:line="67" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="64"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="68" pos:column="17">hashcpy<pos:position pos:line="68" pos:column="24"/></name><argument_list pos:line="68" pos:column="24">(<argument><expr><name><name pos:line="68" pos:column="25">porigin<pos:position pos:line="68" pos:column="32"/></name><operator pos:line="68" pos:column="32">-&gt;<pos:position pos:line="68" pos:column="37"/></operator><name pos:line="68" pos:column="34">blob_sha1<pos:position pos:line="68" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="68" pos:column="45">origin<pos:position pos:line="68" pos:column="51"/></name><operator pos:line="68" pos:column="51">-&gt;<pos:position pos:line="68" pos:column="56"/></operator><name pos:line="68" pos:column="53">blob_sha1<pos:position pos:line="68" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="64"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="69" pos:column="17">porigin<pos:position pos:line="69" pos:column="24"/></name><operator pos:line="69" pos:column="24">-&gt;<pos:position pos:line="69" pos:column="29"/></operator><name pos:line="69" pos:column="26">mode<pos:position pos:line="69" pos:column="30"/></name></name> <operator pos:line="69" pos:column="31">=<pos:position pos:line="69" pos:column="32"/></operator> <name><name pos:line="69" pos:column="33">origin<pos:position pos:line="69" pos:column="39"/></name><operator pos:line="69" pos:column="39">-&gt;<pos:position pos:line="69" pos:column="44"/></operator><name pos:line="69" pos:column="41">mode<pos:position pos:line="69" pos:column="45"/></name></name></expr>;<pos:position pos:line="69" pos:column="46"/></expr_stmt>
	}<pos:position pos:line="70" pos:column="10"/></block></then> <else pos:line="70" pos:column="11">else <block pos:line="70" pos:column="16">{
		<comment type="block" pos:line="71" pos:column="17">/*
		 * Since origin-&gt;path is a pathspec, if the parent
		 * commit had it as a directory, we will see a whole
		 * bunch of deletion of files in the directory that we
		 * do not care about.
		 */</comment>
		<decl_stmt><decl><type><name pos:line="77" pos:column="17">int<pos:position pos:line="77" pos:column="20"/></name></type> <name pos:line="77" pos:column="21">i<pos:position pos:line="77" pos:column="22"/></name></decl>;<pos:position pos:line="77" pos:column="23"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="78" pos:column="17">struct<pos:position pos:line="78" pos:column="23"/></name> <name pos:line="78" pos:column="24">diff_filepair<pos:position pos:line="78" pos:column="37"/></name></name> <modifier pos:line="78" pos:column="38">*<pos:position pos:line="78" pos:column="39"/></modifier></type><name pos:line="78" pos:column="39">p<pos:position pos:line="78" pos:column="40"/></name> <init pos:line="78" pos:column="41">= <expr><name pos:line="78" pos:column="43">NULL<pos:position pos:line="78" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="78" pos:column="48"/></decl_stmt>
		<for pos:line="79" pos:column="17">for <control pos:line="79" pos:column="21">(<init><expr><name pos:line="79" pos:column="22">i<pos:position pos:line="79" pos:column="23"/></name> <operator pos:line="79" pos:column="24">=<pos:position pos:line="79" pos:column="25"/></operator> <literal type="number" pos:line="79" pos:column="26">0<pos:position pos:line="79" pos:column="27"/></literal></expr>;<pos:position pos:line="79" pos:column="28"/></init> <condition><expr><name pos:line="79" pos:column="29">i<pos:position pos:line="79" pos:column="30"/></name> <operator pos:line="79" pos:column="31">&lt;<pos:position pos:line="79" pos:column="35"/></operator> <name><name pos:line="79" pos:column="33">diff_queued_diff<pos:position pos:line="79" pos:column="49"/></name><operator pos:line="79" pos:column="49">.<pos:position pos:line="79" pos:column="50"/></operator><name pos:line="79" pos:column="50">nr<pos:position pos:line="79" pos:column="52"/></name></name></expr>;<pos:position pos:line="79" pos:column="53"/></condition> <incr><expr><name pos:line="79" pos:column="54">i<pos:position pos:line="79" pos:column="55"/></name><operator pos:line="79" pos:column="55">++<pos:position pos:line="79" pos:column="57"/></operator></expr></incr>)<pos:position pos:line="79" pos:column="58"/></control> <block pos:line="79" pos:column="59">{
			<decl_stmt><decl><type><specifier pos:line="80" pos:column="25">const<pos:position pos:line="80" pos:column="30"/></specifier> <name pos:line="80" pos:column="31">char<pos:position pos:line="80" pos:column="35"/></name> <modifier pos:line="80" pos:column="36">*<pos:position pos:line="80" pos:column="37"/></modifier></type><name pos:line="80" pos:column="37">name<pos:position pos:line="80" pos:column="41"/></name></decl>;<pos:position pos:line="80" pos:column="42"/></decl_stmt>
			<expr_stmt><expr><name pos:line="81" pos:column="25">p<pos:position pos:line="81" pos:column="26"/></name> <operator pos:line="81" pos:column="27">=<pos:position pos:line="81" pos:column="28"/></operator> <name><name pos:line="81" pos:column="29">diff_queued_diff<pos:position pos:line="81" pos:column="45"/></name><operator pos:line="81" pos:column="45">.<pos:position pos:line="81" pos:column="46"/></operator><name pos:line="81" pos:column="46">queue<pos:position pos:line="81" pos:column="51"/></name><index pos:line="81" pos:column="51">[<expr><name pos:line="81" pos:column="52">i<pos:position pos:line="81" pos:column="53"/></name></expr>]<pos:position pos:line="81" pos:column="54"/></index></name></expr>;<pos:position pos:line="81" pos:column="55"/></expr_stmt>
			<expr_stmt><expr><name pos:line="82" pos:column="25">name<pos:position pos:line="82" pos:column="29"/></name> <operator pos:line="82" pos:column="30">=<pos:position pos:line="82" pos:column="31"/></operator> <ternary><condition><expr><name><name pos:line="82" pos:column="32">p<pos:position pos:line="82" pos:column="33"/></name><operator pos:line="82" pos:column="33">-&gt;<pos:position pos:line="82" pos:column="38"/></operator><name pos:line="82" pos:column="35">one<pos:position pos:line="82" pos:column="38"/></name><operator pos:line="82" pos:column="38">-&gt;<pos:position pos:line="82" pos:column="43"/></operator><name pos:line="82" pos:column="40">path<pos:position pos:line="82" pos:column="44"/></name></name></expr> ?<pos:position pos:line="82" pos:column="46"/></condition><then pos:line="82" pos:column="46"> <expr><name><name pos:line="82" pos:column="47">p<pos:position pos:line="82" pos:column="48"/></name><operator pos:line="82" pos:column="48">-&gt;<pos:position pos:line="82" pos:column="53"/></operator><name pos:line="82" pos:column="50">one<pos:position pos:line="82" pos:column="53"/></name><operator pos:line="82" pos:column="53">-&gt;<pos:position pos:line="82" pos:column="58"/></operator><name pos:line="82" pos:column="55">path<pos:position pos:line="82" pos:column="59"/></name></name></expr> <pos:position pos:line="82" pos:column="60"/></then><else pos:line="82" pos:column="60">: <expr><name><name pos:line="82" pos:column="62">p<pos:position pos:line="82" pos:column="63"/></name><operator pos:line="82" pos:column="63">-&gt;<pos:position pos:line="82" pos:column="68"/></operator><name pos:line="82" pos:column="65">two<pos:position pos:line="82" pos:column="68"/></name><operator pos:line="82" pos:column="68">-&gt;<pos:position pos:line="82" pos:column="73"/></operator><name pos:line="82" pos:column="70">path<pos:position pos:line="82" pos:column="74"/></name></name></expr></else></ternary></expr>;<pos:position pos:line="82" pos:column="75"/></expr_stmt>
			<if pos:line="83" pos:column="25">if <condition pos:line="83" pos:column="28">(<expr><operator pos:line="83" pos:column="29">!<pos:position pos:line="83" pos:column="30"/></operator><call><name pos:line="83" pos:column="30">strcmp<pos:position pos:line="83" pos:column="36"/></name><argument_list pos:line="83" pos:column="36">(<argument><expr><name pos:line="83" pos:column="37">name<pos:position pos:line="83" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="83" pos:column="43">origin<pos:position pos:line="83" pos:column="49"/></name><operator pos:line="83" pos:column="49">-&gt;<pos:position pos:line="83" pos:column="54"/></operator><name pos:line="83" pos:column="51">path<pos:position pos:line="83" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="83" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="83" pos:column="57"/></condition><then pos:line="83" pos:column="57">
				<block type="pseudo"><break pos:line="84" pos:column="33">break;<pos:position pos:line="84" pos:column="39"/></break></block></then></if>
		}<pos:position pos:line="85" pos:column="18"/></block></for>
		<if pos:line="86" pos:column="17">if <condition pos:line="86" pos:column="20">(<expr><operator pos:line="86" pos:column="21">!<pos:position pos:line="86" pos:column="22"/></operator><name pos:line="86" pos:column="22">p<pos:position pos:line="86" pos:column="23"/></name></expr>)<pos:position pos:line="86" pos:column="24"/></condition><then pos:line="86" pos:column="24">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="87" pos:column="25">die<pos:position pos:line="87" pos:column="28"/></name><argument_list pos:line="87" pos:column="28">(<argument><expr><literal type="string" pos:line="87" pos:column="29">"internal error in blame::find_origin"<pos:position pos:line="87" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="69"/></expr_stmt></block></then></if>
		<switch pos:line="88" pos:column="17">switch <condition pos:line="88" pos:column="24">(<expr><name><name pos:line="88" pos:column="25">p<pos:position pos:line="88" pos:column="26"/></name><operator pos:line="88" pos:column="26">-&gt;<pos:position pos:line="88" pos:column="31"/></operator><name pos:line="88" pos:column="28">status<pos:position pos:line="88" pos:column="34"/></name></name></expr>)<pos:position pos:line="88" pos:column="35"/></condition> <block pos:line="88" pos:column="36">{
		<default pos:line="89" pos:column="17">default:<pos:position pos:line="89" pos:column="25"/></default>
			<expr_stmt><expr><call><name pos:line="90" pos:column="25">die<pos:position pos:line="90" pos:column="28"/></name><argument_list pos:line="90" pos:column="28">(<argument><expr><literal type="string" pos:line="90" pos:column="29">"internal error in blame::find_origin (%c)"<pos:position pos:line="90" pos:column="72"/></literal></expr></argument>,
			    <argument><expr><name><name pos:line="91" pos:column="29">p<pos:position pos:line="91" pos:column="30"/></name><operator pos:line="91" pos:column="30">-&gt;<pos:position pos:line="91" pos:column="35"/></operator><name pos:line="91" pos:column="32">status<pos:position pos:line="91" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="91" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="40"/></expr_stmt>
		<case pos:line="92" pos:column="17">case <expr><literal type="char" pos:line="92" pos:column="22">'M'<pos:position pos:line="92" pos:column="25"/></literal></expr>:<pos:position pos:line="92" pos:column="26"/></case>
			<expr_stmt><expr><name pos:line="93" pos:column="25">porigin<pos:position pos:line="93" pos:column="32"/></name> <operator pos:line="93" pos:column="33">=<pos:position pos:line="93" pos:column="34"/></operator> <call><name pos:line="93" pos:column="35">get_origin<pos:position pos:line="93" pos:column="45"/></name><argument_list pos:line="93" pos:column="45">(<argument><expr><name pos:line="93" pos:column="46">sb<pos:position pos:line="93" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="50">parent<pos:position pos:line="93" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="93" pos:column="58">origin<pos:position pos:line="93" pos:column="64"/></name><operator pos:line="93" pos:column="64">-&gt;<pos:position pos:line="93" pos:column="69"/></operator><name pos:line="93" pos:column="66">path<pos:position pos:line="93" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="93" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="72"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="94" pos:column="25">hashcpy<pos:position pos:line="94" pos:column="32"/></name><argument_list pos:line="94" pos:column="32">(<argument><expr><name><name pos:line="94" pos:column="33">porigin<pos:position pos:line="94" pos:column="40"/></name><operator pos:line="94" pos:column="40">-&gt;<pos:position pos:line="94" pos:column="45"/></operator><name pos:line="94" pos:column="42">blob_sha1<pos:position pos:line="94" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="94" pos:column="53">p<pos:position pos:line="94" pos:column="54"/></name><operator pos:line="94" pos:column="54">-&gt;<pos:position pos:line="94" pos:column="59"/></operator><name pos:line="94" pos:column="56">one<pos:position pos:line="94" pos:column="59"/></name><operator pos:line="94" pos:column="59">-&gt;<pos:position pos:line="94" pos:column="64"/></operator><name pos:line="94" pos:column="61">sha1<pos:position pos:line="94" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="94" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="67"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="95" pos:column="25">porigin<pos:position pos:line="95" pos:column="32"/></name><operator pos:line="95" pos:column="32">-&gt;<pos:position pos:line="95" pos:column="37"/></operator><name pos:line="95" pos:column="34">mode<pos:position pos:line="95" pos:column="38"/></name></name> <operator pos:line="95" pos:column="39">=<pos:position pos:line="95" pos:column="40"/></operator> <name><name pos:line="95" pos:column="41">p<pos:position pos:line="95" pos:column="42"/></name><operator pos:line="95" pos:column="42">-&gt;<pos:position pos:line="95" pos:column="47"/></operator><name pos:line="95" pos:column="44">one<pos:position pos:line="95" pos:column="47"/></name><operator pos:line="95" pos:column="47">-&gt;<pos:position pos:line="95" pos:column="52"/></operator><name pos:line="95" pos:column="49">mode<pos:position pos:line="95" pos:column="53"/></name></name></expr>;<pos:position pos:line="95" pos:column="54"/></expr_stmt>
			<break pos:line="96" pos:column="25">break;<pos:position pos:line="96" pos:column="31"/></break>
		<case pos:line="97" pos:column="17">case <expr><literal type="char" pos:line="97" pos:column="22">'A'<pos:position pos:line="97" pos:column="25"/></literal></expr>:<pos:position pos:line="97" pos:column="26"/></case>
		<case pos:line="98" pos:column="17">case <expr><literal type="char" pos:line="98" pos:column="22">'T'<pos:position pos:line="98" pos:column="25"/></literal></expr>:<pos:position pos:line="98" pos:column="26"/></case>
			<comment type="block" pos:line="99" pos:column="25">/* Did not exist in parent, or type changed */</comment>
			<break pos:line="100" pos:column="25">break;<pos:position pos:line="100" pos:column="31"/></break>
		}<pos:position pos:line="101" pos:column="18"/></block></switch>
	}<pos:position pos:line="102" pos:column="10"/></block></else></if>
	<expr_stmt><expr><call><name pos:line="103" pos:column="9">diff_flush<pos:position pos:line="103" pos:column="19"/></name><argument_list pos:line="103" pos:column="19">(<argument><expr><operator pos:line="103" pos:column="20">&amp;<pos:position pos:line="103" pos:column="25"/></operator><name pos:line="103" pos:column="21">diff_opts<pos:position pos:line="103" pos:column="30"/></name></expr></argument>)<pos:position pos:line="103" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="104" pos:column="9">free_pathspec<pos:position pos:line="104" pos:column="22"/></name><argument_list pos:line="104" pos:column="22">(<argument><expr><operator pos:line="104" pos:column="23">&amp;<pos:position pos:line="104" pos:column="28"/></operator><name><name pos:line="104" pos:column="24">diff_opts<pos:position pos:line="104" pos:column="33"/></name><operator pos:line="104" pos:column="33">.<pos:position pos:line="104" pos:column="34"/></operator><name pos:line="104" pos:column="34">pathspec<pos:position pos:line="104" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="104" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="44"/></expr_stmt>
	<if pos:line="105" pos:column="9">if <condition pos:line="105" pos:column="12">(<expr><name pos:line="105" pos:column="13">porigin<pos:position pos:line="105" pos:column="20"/></name></expr>)<pos:position pos:line="105" pos:column="21"/></condition><then pos:line="105" pos:column="21"> <block pos:line="105" pos:column="22">{
		<comment type="block" pos:line="106" pos:column="17">/*
		 * Create a freestanding copy that is not part of
		 * the refcounted origin found in the scoreboard, and
		 * cache it in the commit.
		 */</comment>
		<decl_stmt><decl><type><name><name pos:line="111" pos:column="17">struct<pos:position pos:line="111" pos:column="23"/></name> <name pos:line="111" pos:column="24">origin<pos:position pos:line="111" pos:column="30"/></name></name> <modifier pos:line="111" pos:column="31">*<pos:position pos:line="111" pos:column="32"/></modifier></type><name pos:line="111" pos:column="32">cached<pos:position pos:line="111" pos:column="38"/></name></decl>;<pos:position pos:line="111" pos:column="39"/></decl_stmt>

		<expr_stmt><expr><name pos:line="113" pos:column="17">cached<pos:position pos:line="113" pos:column="23"/></name> <operator pos:line="113" pos:column="24">=<pos:position pos:line="113" pos:column="25"/></operator> <call><name pos:line="113" pos:column="26">make_origin<pos:position pos:line="113" pos:column="37"/></name><argument_list pos:line="113" pos:column="37">(<argument><expr><name><name pos:line="113" pos:column="38">porigin<pos:position pos:line="113" pos:column="45"/></name><operator pos:line="113" pos:column="45">-&gt;<pos:position pos:line="113" pos:column="50"/></operator><name pos:line="113" pos:column="47">commit<pos:position pos:line="113" pos:column="53"/></name></name></expr></argument>, <argument><expr><name><name pos:line="113" pos:column="55">porigin<pos:position pos:line="113" pos:column="62"/></name><operator pos:line="113" pos:column="62">-&gt;<pos:position pos:line="113" pos:column="67"/></operator><name pos:line="113" pos:column="64">path<pos:position pos:line="113" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="113" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="70"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="114" pos:column="17">hashcpy<pos:position pos:line="114" pos:column="24"/></name><argument_list pos:line="114" pos:column="24">(<argument><expr><name><name pos:line="114" pos:column="25">cached<pos:position pos:line="114" pos:column="31"/></name><operator pos:line="114" pos:column="31">-&gt;<pos:position pos:line="114" pos:column="36"/></operator><name pos:line="114" pos:column="33">blob_sha1<pos:position pos:line="114" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="114" pos:column="44">porigin<pos:position pos:line="114" pos:column="51"/></name><operator pos:line="114" pos:column="51">-&gt;<pos:position pos:line="114" pos:column="56"/></operator><name pos:line="114" pos:column="53">blob_sha1<pos:position pos:line="114" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="114" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="64"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="115" pos:column="17">cached<pos:position pos:line="115" pos:column="23"/></name><operator pos:line="115" pos:column="23">-&gt;<pos:position pos:line="115" pos:column="28"/></operator><name pos:line="115" pos:column="25">mode<pos:position pos:line="115" pos:column="29"/></name></name> <operator pos:line="115" pos:column="30">=<pos:position pos:line="115" pos:column="31"/></operator> <name><name pos:line="115" pos:column="32">porigin<pos:position pos:line="115" pos:column="39"/></name><operator pos:line="115" pos:column="39">-&gt;<pos:position pos:line="115" pos:column="44"/></operator><name pos:line="115" pos:column="41">mode<pos:position pos:line="115" pos:column="45"/></name></name></expr>;<pos:position pos:line="115" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="116" pos:column="17">parent<pos:position pos:line="116" pos:column="23"/></name><operator pos:line="116" pos:column="23">-&gt;<pos:position pos:line="116" pos:column="28"/></operator><name pos:line="116" pos:column="25">util<pos:position pos:line="116" pos:column="29"/></name></name> <operator pos:line="116" pos:column="30">=<pos:position pos:line="116" pos:column="31"/></operator> <name pos:line="116" pos:column="32">cached<pos:position pos:line="116" pos:column="38"/></name></expr>;<pos:position pos:line="116" pos:column="39"/></expr_stmt>
	}<pos:position pos:line="117" pos:column="10"/></block></then></if>
	<return pos:line="118" pos:column="9">return <expr><name pos:line="118" pos:column="16">porigin<pos:position pos:line="118" pos:column="23"/></name></expr>;<pos:position pos:line="118" pos:column="24"/></return>
}<pos:position pos:line="119" pos:column="2"/></block></function></unit>

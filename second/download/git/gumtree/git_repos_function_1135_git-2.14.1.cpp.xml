<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1135_git-2.14.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">wt_porcelain_v2_print_unmerged_entry<pos:position pos:line="1" pos:column="49"/></name><parameter_list pos:line="1" pos:column="49">(
	<parameter><decl><type><name><name pos:line="2" pos:column="9">struct<pos:position pos:line="2" pos:column="15"/></name> <name pos:line="2" pos:column="16">string_list_item<pos:position pos:line="2" pos:column="32"/></name></name> <modifier pos:line="2" pos:column="33">*<pos:position pos:line="2" pos:column="34"/></modifier></type><name pos:line="2" pos:column="34">it<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>,
	<parameter><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">wt_status<pos:position pos:line="3" pos:column="25"/></name></name> <modifier pos:line="3" pos:column="26">*<pos:position pos:line="3" pos:column="27"/></modifier></type><name pos:line="3" pos:column="27">s<pos:position pos:line="3" pos:column="28"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="29"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">wt_status_change_data<pos:position pos:line="5" pos:column="37"/></name></name> <modifier pos:line="5" pos:column="38">*<pos:position pos:line="5" pos:column="39"/></modifier></type><name pos:line="5" pos:column="39">d<pos:position pos:line="5" pos:column="40"/></name> <init pos:line="5" pos:column="41">= <expr><name><name pos:line="5" pos:column="43">it<pos:position pos:line="5" pos:column="45"/></name><operator pos:line="5" pos:column="45">-&gt;<pos:position pos:line="5" pos:column="50"/></operator><name pos:line="5" pos:column="47">util<pos:position pos:line="5" pos:column="51"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="52"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name><name pos:line="6" pos:column="15">struct<pos:position pos:line="6" pos:column="21"/></name> <name pos:line="6" pos:column="22">cache_entry<pos:position pos:line="6" pos:column="33"/></name></name> <modifier pos:line="6" pos:column="34">*<pos:position pos:line="6" pos:column="35"/></modifier></type><name pos:line="6" pos:column="35">ce<pos:position pos:line="6" pos:column="37"/></name></decl>;<pos:position pos:line="6" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">strbuf<pos:position pos:line="7" pos:column="22"/></name></name></type> <name pos:line="7" pos:column="23">buf_index<pos:position pos:line="7" pos:column="32"/></name> <init pos:line="7" pos:column="33">= <expr><name pos:line="7" pos:column="35">STRBUF_INIT<pos:position pos:line="7" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="8" pos:column="9">const<pos:position pos:line="8" pos:column="14"/></specifier> <name pos:line="8" pos:column="15">char<pos:position pos:line="8" pos:column="19"/></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">path_index<pos:position pos:line="8" pos:column="31"/></name> <init pos:line="8" pos:column="32">= <expr><name pos:line="8" pos:column="34">NULL<pos:position pos:line="8" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">pos<pos:position pos:line="9" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="18">stage<pos:position pos:line="9" pos:column="23"/></name></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="25">sum<pos:position pos:line="9" pos:column="28"/></name></decl>;<pos:position pos:line="9" pos:column="29"/></decl_stmt>
	<struct pos:line="10" pos:column="9">struct <block pos:line="10" pos:column="16">{<public type="default" pos:line="10" pos:column="17">
		<decl_stmt><decl><type><name pos:line="11" pos:column="17">int<pos:position pos:line="11" pos:column="20"/></name></type> <name pos:line="11" pos:column="21">mode<pos:position pos:line="11" pos:column="25"/></name></decl>;<pos:position pos:line="11" pos:column="26"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="12" pos:column="17">struct<pos:position pos:line="12" pos:column="23"/></name> <name pos:line="12" pos:column="24">object_id<pos:position pos:line="12" pos:column="33"/></name></name></type> <name pos:line="12" pos:column="34">oid<pos:position pos:line="12" pos:column="37"/></name></decl>;<pos:position pos:line="12" pos:column="38"/></decl_stmt>
	<pos:position pos:line="13" pos:column="2"/></public>}<pos:position pos:line="13" pos:column="10"/></block> <decl><name><name pos:line="13" pos:column="11">stages<pos:position pos:line="13" pos:column="17"/></name><index pos:line="13" pos:column="17">[<expr><literal type="number" pos:line="13" pos:column="18">3<pos:position pos:line="13" pos:column="19"/></literal></expr>]<pos:position pos:line="13" pos:column="20"/></index></name></decl>;<pos:position pos:line="13" pos:column="21"/></struct>
	<decl_stmt><decl><type><name pos:line="14" pos:column="9">char<pos:position pos:line="14" pos:column="13"/></name> <modifier pos:line="14" pos:column="14">*<pos:position pos:line="14" pos:column="15"/></modifier></type><name pos:line="14" pos:column="15">key<pos:position pos:line="14" pos:column="18"/></name></decl>;<pos:position pos:line="14" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="15" pos:column="9">char<pos:position pos:line="15" pos:column="13"/></name></type> <name><name pos:line="15" pos:column="14">submodule_token<pos:position pos:line="15" pos:column="29"/></name><index pos:line="15" pos:column="29">[<expr><literal type="number" pos:line="15" pos:column="30">5<pos:position pos:line="15" pos:column="31"/></literal></expr>]<pos:position pos:line="15" pos:column="32"/></index></name></decl>;<pos:position pos:line="15" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="16" pos:column="9">char<pos:position pos:line="16" pos:column="13"/></name></type> <name pos:line="16" pos:column="14">unmerged_prefix<pos:position pos:line="16" pos:column="29"/></name> <init pos:line="16" pos:column="30">= <expr><literal type="char" pos:line="16" pos:column="32">'u'<pos:position pos:line="16" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="16" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="17" pos:column="9">char<pos:position pos:line="17" pos:column="13"/></name></type> <name pos:line="17" pos:column="14">eol_char<pos:position pos:line="17" pos:column="22"/></name> <init pos:line="17" pos:column="23">= <expr><ternary><condition><expr><name><name pos:line="17" pos:column="25">s<pos:position pos:line="17" pos:column="26"/></name><operator pos:line="17" pos:column="26">-&gt;<pos:position pos:line="17" pos:column="31"/></operator><name pos:line="17" pos:column="28">null_termination<pos:position pos:line="17" pos:column="44"/></name></name></expr> ?<pos:position pos:line="17" pos:column="46"/></condition><then pos:line="17" pos:column="46"> <expr><literal type="char" pos:line="17" pos:column="47">'\0'<pos:position pos:line="17" pos:column="51"/></literal></expr> <pos:position pos:line="17" pos:column="52"/></then><else pos:line="17" pos:column="52">: <expr><literal type="char" pos:line="17" pos:column="54">'\n'<pos:position pos:line="17" pos:column="58"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="17" pos:column="59"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="19" pos:column="9">wt_porcelain_v2_submodule_state<pos:position pos:line="19" pos:column="40"/></name><argument_list pos:line="19" pos:column="40">(<argument><expr><name pos:line="19" pos:column="41">d<pos:position pos:line="19" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="44">submodule_token<pos:position pos:line="19" pos:column="59"/></name></expr></argument>)<pos:position pos:line="19" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="61"/></expr_stmt>

	<switch pos:line="21" pos:column="9">switch <condition pos:line="21" pos:column="16">(<expr><name><name pos:line="21" pos:column="17">d<pos:position pos:line="21" pos:column="18"/></name><operator pos:line="21" pos:column="18">-&gt;<pos:position pos:line="21" pos:column="23"/></operator><name pos:line="21" pos:column="20">stagemask<pos:position pos:line="21" pos:column="29"/></name></name></expr>)<pos:position pos:line="21" pos:column="30"/></condition> <block pos:line="21" pos:column="31">{
	<case pos:line="22" pos:column="9">case <expr><literal type="number" pos:line="22" pos:column="14">1<pos:position pos:line="22" pos:column="15"/></literal></expr>:<pos:position pos:line="22" pos:column="16"/></case> <expr_stmt><expr><name pos:line="22" pos:column="17">key<pos:position pos:line="22" pos:column="20"/></name> <operator pos:line="22" pos:column="21">=<pos:position pos:line="22" pos:column="22"/></operator> <literal type="string" pos:line="22" pos:column="23">"DD"<pos:position pos:line="22" pos:column="27"/></literal></expr>;<pos:position pos:line="22" pos:column="28"/></expr_stmt> <break pos:line="22" pos:column="29">break;<pos:position pos:line="22" pos:column="35"/></break> <comment type="block" pos:line="22" pos:column="36">/* both deleted */</comment>
	<case pos:line="23" pos:column="9">case <expr><literal type="number" pos:line="23" pos:column="14">2<pos:position pos:line="23" pos:column="15"/></literal></expr>:<pos:position pos:line="23" pos:column="16"/></case> <expr_stmt><expr><name pos:line="23" pos:column="17">key<pos:position pos:line="23" pos:column="20"/></name> <operator pos:line="23" pos:column="21">=<pos:position pos:line="23" pos:column="22"/></operator> <literal type="string" pos:line="23" pos:column="23">"AU"<pos:position pos:line="23" pos:column="27"/></literal></expr>;<pos:position pos:line="23" pos:column="28"/></expr_stmt> <break pos:line="23" pos:column="29">break;<pos:position pos:line="23" pos:column="35"/></break> <comment type="block" pos:line="23" pos:column="36">/* added by us */</comment>
	<case pos:line="24" pos:column="9">case <expr><literal type="number" pos:line="24" pos:column="14">3<pos:position pos:line="24" pos:column="15"/></literal></expr>:<pos:position pos:line="24" pos:column="16"/></case> <expr_stmt><expr><name pos:line="24" pos:column="17">key<pos:position pos:line="24" pos:column="20"/></name> <operator pos:line="24" pos:column="21">=<pos:position pos:line="24" pos:column="22"/></operator> <literal type="string" pos:line="24" pos:column="23">"UD"<pos:position pos:line="24" pos:column="27"/></literal></expr>;<pos:position pos:line="24" pos:column="28"/></expr_stmt> <break pos:line="24" pos:column="29">break;<pos:position pos:line="24" pos:column="35"/></break> <comment type="block" pos:line="24" pos:column="36">/* deleted by them */</comment>
	<case pos:line="25" pos:column="9">case <expr><literal type="number" pos:line="25" pos:column="14">4<pos:position pos:line="25" pos:column="15"/></literal></expr>:<pos:position pos:line="25" pos:column="16"/></case> <expr_stmt><expr><name pos:line="25" pos:column="17">key<pos:position pos:line="25" pos:column="20"/></name> <operator pos:line="25" pos:column="21">=<pos:position pos:line="25" pos:column="22"/></operator> <literal type="string" pos:line="25" pos:column="23">"UA"<pos:position pos:line="25" pos:column="27"/></literal></expr>;<pos:position pos:line="25" pos:column="28"/></expr_stmt> <break pos:line="25" pos:column="29">break;<pos:position pos:line="25" pos:column="35"/></break> <comment type="block" pos:line="25" pos:column="36">/* added by them */</comment>
	<case pos:line="26" pos:column="9">case <expr><literal type="number" pos:line="26" pos:column="14">5<pos:position pos:line="26" pos:column="15"/></literal></expr>:<pos:position pos:line="26" pos:column="16"/></case> <expr_stmt><expr><name pos:line="26" pos:column="17">key<pos:position pos:line="26" pos:column="20"/></name> <operator pos:line="26" pos:column="21">=<pos:position pos:line="26" pos:column="22"/></operator> <literal type="string" pos:line="26" pos:column="23">"DU"<pos:position pos:line="26" pos:column="27"/></literal></expr>;<pos:position pos:line="26" pos:column="28"/></expr_stmt> <break pos:line="26" pos:column="29">break;<pos:position pos:line="26" pos:column="35"/></break> <comment type="block" pos:line="26" pos:column="36">/* deleted by us */</comment>
	<case pos:line="27" pos:column="9">case <expr><literal type="number" pos:line="27" pos:column="14">6<pos:position pos:line="27" pos:column="15"/></literal></expr>:<pos:position pos:line="27" pos:column="16"/></case> <expr_stmt><expr><name pos:line="27" pos:column="17">key<pos:position pos:line="27" pos:column="20"/></name> <operator pos:line="27" pos:column="21">=<pos:position pos:line="27" pos:column="22"/></operator> <literal type="string" pos:line="27" pos:column="23">"AA"<pos:position pos:line="27" pos:column="27"/></literal></expr>;<pos:position pos:line="27" pos:column="28"/></expr_stmt> <break pos:line="27" pos:column="29">break;<pos:position pos:line="27" pos:column="35"/></break> <comment type="block" pos:line="27" pos:column="36">/* both added */</comment>
	<case pos:line="28" pos:column="9">case <expr><literal type="number" pos:line="28" pos:column="14">7<pos:position pos:line="28" pos:column="15"/></literal></expr>:<pos:position pos:line="28" pos:column="16"/></case> <expr_stmt><expr><name pos:line="28" pos:column="17">key<pos:position pos:line="28" pos:column="20"/></name> <operator pos:line="28" pos:column="21">=<pos:position pos:line="28" pos:column="22"/></operator> <literal type="string" pos:line="28" pos:column="23">"UU"<pos:position pos:line="28" pos:column="27"/></literal></expr>;<pos:position pos:line="28" pos:column="28"/></expr_stmt> <break pos:line="28" pos:column="29">break;<pos:position pos:line="28" pos:column="35"/></break> <comment type="block" pos:line="28" pos:column="36">/* both modified */</comment>
	<default pos:line="29" pos:column="9">default:<pos:position pos:line="29" pos:column="17"/></default>
		<expr_stmt><expr><call><name pos:line="30" pos:column="17">die<pos:position pos:line="30" pos:column="20"/></name><argument_list pos:line="30" pos:column="20">(<argument><expr><literal type="string" pos:line="30" pos:column="21">"BUG: unhandled unmerged status %x"<pos:position pos:line="30" pos:column="56"/></literal></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="58">d<pos:position pos:line="30" pos:column="59"/></name><operator pos:line="30" pos:column="59">-&gt;<pos:position pos:line="30" pos:column="64"/></operator><name pos:line="30" pos:column="61">stagemask<pos:position pos:line="30" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="72"/></expr_stmt>
	}<pos:position pos:line="31" pos:column="10"/></block></switch>

	<comment type="block" pos:line="33" pos:column="9">/*
	 * Disregard d.aux.porcelain_v2 data that we accumulated
	 * for the head and index columns during the scans and
	 * replace with the actual stage data.
	 *
	 * Note that this is a last-one-wins for each the individual
	 * stage [123] columns in the event of multiple cache entries
	 * for same stage.
	 */</comment>
	<expr_stmt><expr><call><name pos:line="42" pos:column="9">memset<pos:position pos:line="42" pos:column="15"/></name><argument_list pos:line="42" pos:column="15">(<argument><expr><name pos:line="42" pos:column="16">stages<pos:position pos:line="42" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="24">0<pos:position pos:line="42" pos:column="25"/></literal></expr></argument>, <argument><expr><sizeof pos:line="42" pos:column="27">sizeof<argument_list pos:line="42" pos:column="33">(<argument><expr><name pos:line="42" pos:column="34">stages<pos:position pos:line="42" pos:column="40"/></name></expr></argument>)<pos:position pos:line="42" pos:column="41"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="42" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><name pos:line="43" pos:column="9">sum<pos:position pos:line="43" pos:column="12"/></name> <operator pos:line="43" pos:column="13">=<pos:position pos:line="43" pos:column="14"/></operator> <literal type="number" pos:line="43" pos:column="15">0<pos:position pos:line="43" pos:column="16"/></literal></expr>;<pos:position pos:line="43" pos:column="17"/></expr_stmt>
	<expr_stmt><expr><name pos:line="44" pos:column="9">pos<pos:position pos:line="44" pos:column="12"/></name> <operator pos:line="44" pos:column="13">=<pos:position pos:line="44" pos:column="14"/></operator> <call><name pos:line="44" pos:column="15">cache_name_pos<pos:position pos:line="44" pos:column="29"/></name><argument_list pos:line="44" pos:column="29">(<argument><expr><name><name pos:line="44" pos:column="30">it<pos:position pos:line="44" pos:column="32"/></name><operator pos:line="44" pos:column="32">-&gt;<pos:position pos:line="44" pos:column="37"/></operator><name pos:line="44" pos:column="34">string<pos:position pos:line="44" pos:column="40"/></name></name></expr></argument>, <argument><expr><call><name pos:line="44" pos:column="42">strlen<pos:position pos:line="44" pos:column="48"/></name><argument_list pos:line="44" pos:column="48">(<argument><expr><name><name pos:line="44" pos:column="49">it<pos:position pos:line="44" pos:column="51"/></name><operator pos:line="44" pos:column="51">-&gt;<pos:position pos:line="44" pos:column="56"/></operator><name pos:line="44" pos:column="53">string<pos:position pos:line="44" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="62"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="45" pos:column="9">assert<pos:position pos:line="45" pos:column="15"/></name><argument_list pos:line="45" pos:column="15">(<argument><expr><name pos:line="45" pos:column="16">pos<pos:position pos:line="45" pos:column="19"/></name> <operator pos:line="45" pos:column="20">&lt;<pos:position pos:line="45" pos:column="24"/></operator> <literal type="number" pos:line="45" pos:column="22">0<pos:position pos:line="45" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><name pos:line="46" pos:column="9">pos<pos:position pos:line="46" pos:column="12"/></name> <operator pos:line="46" pos:column="13">=<pos:position pos:line="46" pos:column="14"/></operator> <operator pos:line="46" pos:column="15">-<pos:position pos:line="46" pos:column="16"/></operator><name pos:line="46" pos:column="16">pos<pos:position pos:line="46" pos:column="19"/></name><operator pos:line="46" pos:column="19">-<pos:position pos:line="46" pos:column="20"/></operator><literal type="number" pos:line="46" pos:column="20">1<pos:position pos:line="46" pos:column="21"/></literal></expr>;<pos:position pos:line="46" pos:column="22"/></expr_stmt>
	<while pos:line="47" pos:column="9">while <condition pos:line="47" pos:column="15">(<expr><name pos:line="47" pos:column="16">pos<pos:position pos:line="47" pos:column="19"/></name> <operator pos:line="47" pos:column="20">&lt;<pos:position pos:line="47" pos:column="24"/></operator> <name pos:line="47" pos:column="22">active_nr<pos:position pos:line="47" pos:column="31"/></name></expr>)<pos:position pos:line="47" pos:column="32"/></condition> <block pos:line="47" pos:column="33">{
		<expr_stmt><expr><name pos:line="48" pos:column="17">ce<pos:position pos:line="48" pos:column="19"/></name> <operator pos:line="48" pos:column="20">=<pos:position pos:line="48" pos:column="21"/></operator> <name><name pos:line="48" pos:column="22">active_cache<pos:position pos:line="48" pos:column="34"/></name><index pos:line="48" pos:column="34">[<expr><name pos:line="48" pos:column="35">pos<pos:position pos:line="48" pos:column="38"/></name><operator pos:line="48" pos:column="38">++<pos:position pos:line="48" pos:column="40"/></operator></expr>]<pos:position pos:line="48" pos:column="41"/></index></name></expr>;<pos:position pos:line="48" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><name pos:line="49" pos:column="17">stage<pos:position pos:line="49" pos:column="22"/></name> <operator pos:line="49" pos:column="23">=<pos:position pos:line="49" pos:column="24"/></operator> <call><name pos:line="49" pos:column="25">ce_stage<pos:position pos:line="49" pos:column="33"/></name><argument_list pos:line="49" pos:column="33">(<argument><expr><name pos:line="49" pos:column="34">ce<pos:position pos:line="49" pos:column="36"/></name></expr></argument>)<pos:position pos:line="49" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="38"/></expr_stmt>
		<if pos:line="50" pos:column="17">if <condition pos:line="50" pos:column="20">(<expr><call><name pos:line="50" pos:column="21">strcmp<pos:position pos:line="50" pos:column="27"/></name><argument_list pos:line="50" pos:column="27">(<argument><expr><name><name pos:line="50" pos:column="28">ce<pos:position pos:line="50" pos:column="30"/></name><operator pos:line="50" pos:column="30">-&gt;<pos:position pos:line="50" pos:column="35"/></operator><name pos:line="50" pos:column="32">name<pos:position pos:line="50" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="38">it<pos:position pos:line="50" pos:column="40"/></name><operator pos:line="50" pos:column="40">-&gt;<pos:position pos:line="50" pos:column="45"/></operator><name pos:line="50" pos:column="42">string<pos:position pos:line="50" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="49"/></argument_list></call> <operator pos:line="50" pos:column="50">||<pos:position pos:line="50" pos:column="52"/></operator> <operator pos:line="50" pos:column="53">!<pos:position pos:line="50" pos:column="54"/></operator><name pos:line="50" pos:column="54">stage<pos:position pos:line="50" pos:column="59"/></name></expr>)<pos:position pos:line="50" pos:column="60"/></condition><then pos:line="50" pos:column="60">
			<block type="pseudo"><break pos:line="51" pos:column="25">break;<pos:position pos:line="51" pos:column="31"/></break></block></then></if>
		<expr_stmt><expr><name><name pos:line="52" pos:column="17">stages<pos:position pos:line="52" pos:column="23"/></name><index pos:line="52" pos:column="23">[<expr><name pos:line="52" pos:column="24">stage<pos:position pos:line="52" pos:column="29"/></name> <operator pos:line="52" pos:column="30">-<pos:position pos:line="52" pos:column="31"/></operator> <literal type="number" pos:line="52" pos:column="32">1<pos:position pos:line="52" pos:column="33"/></literal></expr>]<pos:position pos:line="52" pos:column="34"/></index></name><operator pos:line="52" pos:column="34">.<pos:position pos:line="52" pos:column="35"/></operator><name pos:line="52" pos:column="35">mode<pos:position pos:line="52" pos:column="39"/></name> <operator pos:line="52" pos:column="40">=<pos:position pos:line="52" pos:column="41"/></operator> <name><name pos:line="52" pos:column="42">ce<pos:position pos:line="52" pos:column="44"/></name><operator pos:line="52" pos:column="44">-&gt;<pos:position pos:line="52" pos:column="49"/></operator><name pos:line="52" pos:column="46">ce_mode<pos:position pos:line="52" pos:column="53"/></name></name></expr>;<pos:position pos:line="52" pos:column="54"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="53" pos:column="17">oidcpy<pos:position pos:line="53" pos:column="23"/></name><argument_list pos:line="53" pos:column="23">(<argument><expr><operator pos:line="53" pos:column="24">&amp;<pos:position pos:line="53" pos:column="29"/></operator><name><name pos:line="53" pos:column="25">stages<pos:position pos:line="53" pos:column="31"/></name><index pos:line="53" pos:column="31">[<expr><name pos:line="53" pos:column="32">stage<pos:position pos:line="53" pos:column="37"/></name> <operator pos:line="53" pos:column="38">-<pos:position pos:line="53" pos:column="39"/></operator> <literal type="number" pos:line="53" pos:column="40">1<pos:position pos:line="53" pos:column="41"/></literal></expr>]<pos:position pos:line="53" pos:column="42"/></index></name><operator pos:line="53" pos:column="42">.<pos:position pos:line="53" pos:column="43"/></operator><name pos:line="53" pos:column="43">oid<pos:position pos:line="53" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="48">&amp;<pos:position pos:line="53" pos:column="53"/></operator><name><name pos:line="53" pos:column="49">ce<pos:position pos:line="53" pos:column="51"/></name><operator pos:line="53" pos:column="51">-&gt;<pos:position pos:line="53" pos:column="56"/></operator><name pos:line="53" pos:column="53">oid<pos:position pos:line="53" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="58"/></expr_stmt>
		<expr_stmt><expr><name pos:line="54" pos:column="17">sum<pos:position pos:line="54" pos:column="20"/></name> <operator pos:line="54" pos:column="21">|=<pos:position pos:line="54" pos:column="23"/></operator> <operator pos:line="54" pos:column="24">(<pos:position pos:line="54" pos:column="25"/></operator><literal type="number" pos:line="54" pos:column="25">1<pos:position pos:line="54" pos:column="26"/></literal> <operator pos:line="54" pos:column="27">&lt;&lt;<pos:position pos:line="54" pos:column="35"/></operator> <operator pos:line="54" pos:column="30">(<pos:position pos:line="54" pos:column="31"/></operator><name pos:line="54" pos:column="31">stage<pos:position pos:line="54" pos:column="36"/></name> <operator pos:line="54" pos:column="37">-<pos:position pos:line="54" pos:column="38"/></operator> <literal type="number" pos:line="54" pos:column="39">1<pos:position pos:line="54" pos:column="40"/></literal><operator pos:line="54" pos:column="40">)<pos:position pos:line="54" pos:column="41"/></operator><operator pos:line="54" pos:column="41">)<pos:position pos:line="54" pos:column="42"/></operator></expr>;<pos:position pos:line="54" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="55" pos:column="10"/></block></while>
	<if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><name pos:line="56" pos:column="13">sum<pos:position pos:line="56" pos:column="16"/></name> <operator pos:line="56" pos:column="17">!=<pos:position pos:line="56" pos:column="19"/></operator> <name><name pos:line="56" pos:column="20">d<pos:position pos:line="56" pos:column="21"/></name><operator pos:line="56" pos:column="21">-&gt;<pos:position pos:line="56" pos:column="26"/></operator><name pos:line="56" pos:column="23">stagemask<pos:position pos:line="56" pos:column="32"/></name></name></expr>)<pos:position pos:line="56" pos:column="33"/></condition><then pos:line="56" pos:column="33">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="57" pos:column="17">die<pos:position pos:line="57" pos:column="20"/></name><argument_list pos:line="57" pos:column="20">(<argument><expr><literal type="string" pos:line="57" pos:column="21">"BUG: observed stagemask 0x%x != expected stagemask 0x%x"<pos:position pos:line="57" pos:column="78"/></literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="80">sum<pos:position pos:line="57" pos:column="83"/></name></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="85">d<pos:position pos:line="57" pos:column="86"/></name><operator pos:line="57" pos:column="86">-&gt;<pos:position pos:line="57" pos:column="91"/></operator><name pos:line="57" pos:column="88">stagemask<pos:position pos:line="57" pos:column="97"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="99"/></expr_stmt></block></then></if>

	<if pos:line="59" pos:column="9">if <condition pos:line="59" pos:column="12">(<expr><name><name pos:line="59" pos:column="13">s<pos:position pos:line="59" pos:column="14"/></name><operator pos:line="59" pos:column="14">-&gt;<pos:position pos:line="59" pos:column="19"/></operator><name pos:line="59" pos:column="16">null_termination<pos:position pos:line="59" pos:column="32"/></name></name></expr>)<pos:position pos:line="59" pos:column="33"/></condition><then pos:line="59" pos:column="33">
		<block type="pseudo"><expr_stmt><expr><name pos:line="60" pos:column="17">path_index<pos:position pos:line="60" pos:column="27"/></name> <operator pos:line="60" pos:column="28">=<pos:position pos:line="60" pos:column="29"/></operator> <name><name pos:line="60" pos:column="30">it<pos:position pos:line="60" pos:column="32"/></name><operator pos:line="60" pos:column="32">-&gt;<pos:position pos:line="60" pos:column="37"/></operator><name pos:line="60" pos:column="34">string<pos:position pos:line="60" pos:column="40"/></name></name></expr>;<pos:position pos:line="60" pos:column="41"/></expr_stmt></block></then>
	<else pos:line="61" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="62" pos:column="17">path_index<pos:position pos:line="62" pos:column="27"/></name> <operator pos:line="62" pos:column="28">=<pos:position pos:line="62" pos:column="29"/></operator> <call><name pos:line="62" pos:column="30">quote_path<pos:position pos:line="62" pos:column="40"/></name><argument_list pos:line="62" pos:column="40">(<argument><expr><name><name pos:line="62" pos:column="41">it<pos:position pos:line="62" pos:column="43"/></name><operator pos:line="62" pos:column="43">-&gt;<pos:position pos:line="62" pos:column="48"/></operator><name pos:line="62" pos:column="45">string<pos:position pos:line="62" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="53">s<pos:position pos:line="62" pos:column="54"/></name><operator pos:line="62" pos:column="54">-&gt;<pos:position pos:line="62" pos:column="59"/></operator><name pos:line="62" pos:column="56">prefix<pos:position pos:line="62" pos:column="62"/></name></name></expr></argument>, <argument><expr><operator pos:line="62" pos:column="64">&amp;<pos:position pos:line="62" pos:column="69"/></operator><name pos:line="62" pos:column="65">buf_index<pos:position pos:line="62" pos:column="74"/></name></expr></argument>)<pos:position pos:line="62" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="76"/></expr_stmt></block></else></if>

	<expr_stmt><expr><call><name pos:line="64" pos:column="9">fprintf<pos:position pos:line="64" pos:column="16"/></name><argument_list pos:line="64" pos:column="16">(<argument><expr><name><name pos:line="64" pos:column="17">s<pos:position pos:line="64" pos:column="18"/></name><operator pos:line="64" pos:column="18">-&gt;<pos:position pos:line="64" pos:column="23"/></operator><name pos:line="64" pos:column="20">fp<pos:position pos:line="64" pos:column="22"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="24">"%c %s %s %06o %06o %06o %06o %s %s %s %s%c"<pos:position pos:line="64" pos:column="68"/></literal></expr></argument>,
			<argument><expr><name pos:line="65" pos:column="25">unmerged_prefix<pos:position pos:line="65" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="42">key<pos:position pos:line="65" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="47">submodule_token<pos:position pos:line="65" pos:column="62"/></name></expr></argument>,
			<argument><expr><name><name pos:line="66" pos:column="25">stages<pos:position pos:line="66" pos:column="31"/></name><index pos:line="66" pos:column="31">[<expr><literal type="number" pos:line="66" pos:column="32">0<pos:position pos:line="66" pos:column="33"/></literal></expr>]<pos:position pos:line="66" pos:column="34"/></index></name><operator pos:line="66" pos:column="34">.<pos:position pos:line="66" pos:column="35"/></operator><name pos:line="66" pos:column="35">mode<pos:position pos:line="66" pos:column="39"/></name></expr></argument>, <comment type="block" pos:line="66" pos:column="41">/* stage 1 */</comment>
			<argument><expr><name><name pos:line="67" pos:column="25">stages<pos:position pos:line="67" pos:column="31"/></name><index pos:line="67" pos:column="31">[<expr><literal type="number" pos:line="67" pos:column="32">1<pos:position pos:line="67" pos:column="33"/></literal></expr>]<pos:position pos:line="67" pos:column="34"/></index></name><operator pos:line="67" pos:column="34">.<pos:position pos:line="67" pos:column="35"/></operator><name pos:line="67" pos:column="35">mode<pos:position pos:line="67" pos:column="39"/></name></expr></argument>, <comment type="block" pos:line="67" pos:column="41">/* stage 2 */</comment>
			<argument><expr><name><name pos:line="68" pos:column="25">stages<pos:position pos:line="68" pos:column="31"/></name><index pos:line="68" pos:column="31">[<expr><literal type="number" pos:line="68" pos:column="32">2<pos:position pos:line="68" pos:column="33"/></literal></expr>]<pos:position pos:line="68" pos:column="34"/></index></name><operator pos:line="68" pos:column="34">.<pos:position pos:line="68" pos:column="35"/></operator><name pos:line="68" pos:column="35">mode<pos:position pos:line="68" pos:column="39"/></name></expr></argument>, <comment type="block" pos:line="68" pos:column="41">/* stage 3 */</comment>
			<argument><expr><name><name pos:line="69" pos:column="25">d<pos:position pos:line="69" pos:column="26"/></name><operator pos:line="69" pos:column="26">-&gt;<pos:position pos:line="69" pos:column="31"/></operator><name pos:line="69" pos:column="28">mode_worktree<pos:position pos:line="69" pos:column="41"/></name></name></expr></argument>,
			<argument><expr><call><name pos:line="70" pos:column="25">oid_to_hex<pos:position pos:line="70" pos:column="35"/></name><argument_list pos:line="70" pos:column="35">(<argument><expr><operator pos:line="70" pos:column="36">&amp;<pos:position pos:line="70" pos:column="41"/></operator><name><name pos:line="70" pos:column="37">stages<pos:position pos:line="70" pos:column="43"/></name><index pos:line="70" pos:column="43">[<expr><literal type="number" pos:line="70" pos:column="44">0<pos:position pos:line="70" pos:column="45"/></literal></expr>]<pos:position pos:line="70" pos:column="46"/></index></name><operator pos:line="70" pos:column="46">.<pos:position pos:line="70" pos:column="47"/></operator><name pos:line="70" pos:column="47">oid<pos:position pos:line="70" pos:column="50"/></name></expr></argument>)<pos:position pos:line="70" pos:column="51"/></argument_list></call></expr></argument>, <comment type="block" pos:line="70" pos:column="53">/* stage 1 */</comment>
			<argument><expr><call><name pos:line="71" pos:column="25">oid_to_hex<pos:position pos:line="71" pos:column="35"/></name><argument_list pos:line="71" pos:column="35">(<argument><expr><operator pos:line="71" pos:column="36">&amp;<pos:position pos:line="71" pos:column="41"/></operator><name><name pos:line="71" pos:column="37">stages<pos:position pos:line="71" pos:column="43"/></name><index pos:line="71" pos:column="43">[<expr><literal type="number" pos:line="71" pos:column="44">1<pos:position pos:line="71" pos:column="45"/></literal></expr>]<pos:position pos:line="71" pos:column="46"/></index></name><operator pos:line="71" pos:column="46">.<pos:position pos:line="71" pos:column="47"/></operator><name pos:line="71" pos:column="47">oid<pos:position pos:line="71" pos:column="50"/></name></expr></argument>)<pos:position pos:line="71" pos:column="51"/></argument_list></call></expr></argument>, <comment type="block" pos:line="71" pos:column="53">/* stage 2 */</comment>
			<argument><expr><call><name pos:line="72" pos:column="25">oid_to_hex<pos:position pos:line="72" pos:column="35"/></name><argument_list pos:line="72" pos:column="35">(<argument><expr><operator pos:line="72" pos:column="36">&amp;<pos:position pos:line="72" pos:column="41"/></operator><name><name pos:line="72" pos:column="37">stages<pos:position pos:line="72" pos:column="43"/></name><index pos:line="72" pos:column="43">[<expr><literal type="number" pos:line="72" pos:column="44">2<pos:position pos:line="72" pos:column="45"/></literal></expr>]<pos:position pos:line="72" pos:column="46"/></index></name><operator pos:line="72" pos:column="46">.<pos:position pos:line="72" pos:column="47"/></operator><name pos:line="72" pos:column="47">oid<pos:position pos:line="72" pos:column="50"/></name></expr></argument>)<pos:position pos:line="72" pos:column="51"/></argument_list></call></expr></argument>, <comment type="block" pos:line="72" pos:column="53">/* stage 3 */</comment>
			<argument><expr><name pos:line="73" pos:column="25">path_index<pos:position pos:line="73" pos:column="35"/></name></expr></argument>,
			<argument><expr><name pos:line="74" pos:column="25">eol_char<pos:position pos:line="74" pos:column="33"/></name></expr></argument>)<pos:position pos:line="74" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="35"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="76" pos:column="9">strbuf_release<pos:position pos:line="76" pos:column="23"/></name><argument_list pos:line="76" pos:column="23">(<argument><expr><operator pos:line="76" pos:column="24">&amp;<pos:position pos:line="76" pos:column="29"/></operator><name pos:line="76" pos:column="25">buf_index<pos:position pos:line="76" pos:column="34"/></name></expr></argument>)<pos:position pos:line="76" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="36"/></expr_stmt>
}<pos:position pos:line="77" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1251_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">prepare_show_merge<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">rev_info<pos:position pos:line="1" pos:column="47"/></name></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">revs<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">commit_list<pos:position pos:line="3" pos:column="27"/></name></name> <modifier pos:line="3" pos:column="28">*<pos:position pos:line="3" pos:column="29"/></modifier></type><name pos:line="3" pos:column="29">bases<pos:position pos:line="3" pos:column="34"/></name></decl>;<pos:position pos:line="3" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">commit<pos:position pos:line="4" pos:column="22"/></name></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">head<pos:position pos:line="4" pos:column="28"/></name></decl>, <modifier pos:line="4" pos:column="30">*<pos:position pos:line="4" pos:column="31"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="31">other<pos:position pos:line="4" pos:column="36"/></name></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">object_id<pos:position pos:line="5" pos:column="25"/></name></name></type> <name pos:line="5" pos:column="26">oid<pos:position pos:line="5" pos:column="29"/></name></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier><modifier pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></modifier></type><name pos:line="6" pos:column="22">prune<pos:position pos:line="6" pos:column="27"/></name> <init pos:line="6" pos:column="28">= <expr><name pos:line="6" pos:column="30">NULL<pos:position pos:line="6" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">i<pos:position pos:line="7" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="16">prune_num<pos:position pos:line="7" pos:column="25"/></name> <init pos:line="7" pos:column="26">= <expr><literal type="number" pos:line="7" pos:column="28">1<pos:position pos:line="7" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt> <comment type="block" pos:line="7" pos:column="31">/* counting terminating NULL */</comment>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><call><name pos:line="9" pos:column="13">get_oid<pos:position pos:line="9" pos:column="20"/></name><argument_list pos:line="9" pos:column="20">(<argument><expr><literal type="string" pos:line="9" pos:column="21">"HEAD"<pos:position pos:line="9" pos:column="27"/></literal></expr></argument>, <argument><expr><operator pos:line="9" pos:column="29">&amp;<pos:position pos:line="9" pos:column="34"/></operator><name pos:line="9" pos:column="30">oid<pos:position pos:line="9" pos:column="33"/></name></expr></argument>)<pos:position pos:line="9" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="35"/></condition><then pos:line="9" pos:column="35">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="17">die<pos:position pos:line="10" pos:column="20"/></name><argument_list pos:line="10" pos:column="20">(<argument><expr><literal type="string" pos:line="10" pos:column="21">"--merge without HEAD?"<pos:position pos:line="10" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="46"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="11" pos:column="9">head<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">=<pos:position pos:line="11" pos:column="15"/></operator> <call><name pos:line="11" pos:column="16">lookup_commit_or_die<pos:position pos:line="11" pos:column="36"/></name><argument_list pos:line="11" pos:column="36">(<argument><expr><operator pos:line="11" pos:column="37">&amp;<pos:position pos:line="11" pos:column="42"/></operator><name pos:line="11" pos:column="38">oid<pos:position pos:line="11" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="43">"HEAD"<pos:position pos:line="11" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="51"/></expr_stmt>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><call><name pos:line="12" pos:column="13">get_oid<pos:position pos:line="12" pos:column="20"/></name><argument_list pos:line="12" pos:column="20">(<argument><expr><literal type="string" pos:line="12" pos:column="21">"MERGE_HEAD"<pos:position pos:line="12" pos:column="33"/></literal></expr></argument>, <argument><expr><operator pos:line="12" pos:column="35">&amp;<pos:position pos:line="12" pos:column="40"/></operator><name pos:line="12" pos:column="36">oid<pos:position pos:line="12" pos:column="39"/></name></expr></argument>)<pos:position pos:line="12" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="41"/></condition><then pos:line="12" pos:column="41">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="17">die<pos:position pos:line="13" pos:column="20"/></name><argument_list pos:line="13" pos:column="20">(<argument><expr><literal type="string" pos:line="13" pos:column="21">"--merge without MERGE_HEAD?"<pos:position pos:line="13" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="52"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="14" pos:column="9">other<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">=<pos:position pos:line="14" pos:column="16"/></operator> <call><name pos:line="14" pos:column="17">lookup_commit_or_die<pos:position pos:line="14" pos:column="37"/></name><argument_list pos:line="14" pos:column="37">(<argument><expr><operator pos:line="14" pos:column="38">&amp;<pos:position pos:line="14" pos:column="43"/></operator><name pos:line="14" pos:column="39">oid<pos:position pos:line="14" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="44">"MERGE_HEAD"<pos:position pos:line="14" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="58"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="15" pos:column="9">add_pending_object<pos:position pos:line="15" pos:column="27"/></name><argument_list pos:line="15" pos:column="27">(<argument><expr><name pos:line="15" pos:column="28">revs<pos:position pos:line="15" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="34">&amp;<pos:position pos:line="15" pos:column="39"/></operator><name><name pos:line="15" pos:column="35">head<pos:position pos:line="15" pos:column="39"/></name><operator pos:line="15" pos:column="39">-&gt;<pos:position pos:line="15" pos:column="44"/></operator><name pos:line="15" pos:column="41">object<pos:position pos:line="15" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="49">"HEAD"<pos:position pos:line="15" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="57"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="16" pos:column="9">add_pending_object<pos:position pos:line="16" pos:column="27"/></name><argument_list pos:line="16" pos:column="27">(<argument><expr><name pos:line="16" pos:column="28">revs<pos:position pos:line="16" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="34">&amp;<pos:position pos:line="16" pos:column="39"/></operator><name><name pos:line="16" pos:column="35">other<pos:position pos:line="16" pos:column="40"/></name><operator pos:line="16" pos:column="40">-&gt;<pos:position pos:line="16" pos:column="45"/></operator><name pos:line="16" pos:column="42">object<pos:position pos:line="16" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="50">"MERGE_HEAD"<pos:position pos:line="16" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="64"/></expr_stmt>
	<expr_stmt><expr><name pos:line="17" pos:column="9">bases<pos:position pos:line="17" pos:column="14"/></name> <operator pos:line="17" pos:column="15">=<pos:position pos:line="17" pos:column="16"/></operator> <call><name pos:line="17" pos:column="17">get_merge_bases<pos:position pos:line="17" pos:column="32"/></name><argument_list pos:line="17" pos:column="32">(<argument><expr><name pos:line="17" pos:column="33">head<pos:position pos:line="17" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="39">other<pos:position pos:line="17" pos:column="44"/></name></expr></argument>)<pos:position pos:line="17" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="18" pos:column="9">add_rev_cmdline_list<pos:position pos:line="18" pos:column="29"/></name><argument_list pos:line="18" pos:column="29">(<argument><expr><name pos:line="18" pos:column="30">revs<pos:position pos:line="18" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="36">bases<pos:position pos:line="18" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="43">REV_CMD_MERGE_BASE<pos:position pos:line="18" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="63">UNINTERESTING<pos:position pos:line="18" pos:column="76"/></name> <operator pos:line="18" pos:column="77">|<pos:position pos:line="18" pos:column="78"/></operator> <name pos:line="18" pos:column="79">BOTTOM<pos:position pos:line="18" pos:column="85"/></name></expr></argument>)<pos:position pos:line="18" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="87"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="19" pos:column="9">add_pending_commit_list<pos:position pos:line="19" pos:column="32"/></name><argument_list pos:line="19" pos:column="32">(<argument><expr><name pos:line="19" pos:column="33">revs<pos:position pos:line="19" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="39">bases<pos:position pos:line="19" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="46">UNINTERESTING<pos:position pos:line="19" pos:column="59"/></name> <operator pos:line="19" pos:column="60">|<pos:position pos:line="19" pos:column="61"/></operator> <name pos:line="19" pos:column="62">BOTTOM<pos:position pos:line="19" pos:column="68"/></name></expr></argument>)<pos:position pos:line="19" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="70"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="20" pos:column="9">free_commit_list<pos:position pos:line="20" pos:column="25"/></name><argument_list pos:line="20" pos:column="25">(<argument><expr><name pos:line="20" pos:column="26">bases<pos:position pos:line="20" pos:column="31"/></name></expr></argument>)<pos:position pos:line="20" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="21" pos:column="9">head<pos:position pos:line="21" pos:column="13"/></name><operator pos:line="21" pos:column="13">-&gt;<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="15">object<pos:position pos:line="21" pos:column="21"/></name><operator pos:line="21" pos:column="21">.<pos:position pos:line="21" pos:column="22"/></operator><name pos:line="21" pos:column="22">flags<pos:position pos:line="21" pos:column="27"/></name></name> <operator pos:line="21" pos:column="28">|=<pos:position pos:line="21" pos:column="30"/></operator> <name pos:line="21" pos:column="31">SYMMETRIC_LEFT<pos:position pos:line="21" pos:column="45"/></name></expr>;<pos:position pos:line="21" pos:column="46"/></expr_stmt>

	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><operator pos:line="23" pos:column="13">!<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="14">active_nr<pos:position pos:line="23" pos:column="23"/></name></expr>)<pos:position pos:line="23" pos:column="24"/></condition><then pos:line="23" pos:column="24">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="17">read_cache<pos:position pos:line="24" pos:column="27"/></name><argument_list pos:line="24" pos:column="27">()<pos:position pos:line="24" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="30"/></expr_stmt></block></then></if>
	<for pos:line="25" pos:column="9">for <control pos:line="25" pos:column="13">(<init><expr><name pos:line="25" pos:column="14">i<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">=<pos:position pos:line="25" pos:column="17"/></operator> <literal type="number" pos:line="25" pos:column="18">0<pos:position pos:line="25" pos:column="19"/></literal></expr>;<pos:position pos:line="25" pos:column="20"/></init> <condition><expr><name pos:line="25" pos:column="21">i<pos:position pos:line="25" pos:column="22"/></name> <operator pos:line="25" pos:column="23">&lt;<pos:position pos:line="25" pos:column="27"/></operator> <name pos:line="25" pos:column="25">active_nr<pos:position pos:line="25" pos:column="34"/></name></expr>;<pos:position pos:line="25" pos:column="35"/></condition> <incr><expr><name pos:line="25" pos:column="36">i<pos:position pos:line="25" pos:column="37"/></name><operator pos:line="25" pos:column="37">++<pos:position pos:line="25" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="25" pos:column="40"/></control> <block pos:line="25" pos:column="41">{
		<decl_stmt><decl><type><specifier pos:line="26" pos:column="17">const<pos:position pos:line="26" pos:column="22"/></specifier> <name><name pos:line="26" pos:column="23">struct<pos:position pos:line="26" pos:column="29"/></name> <name pos:line="26" pos:column="30">cache_entry<pos:position pos:line="26" pos:column="41"/></name></name> <modifier pos:line="26" pos:column="42">*<pos:position pos:line="26" pos:column="43"/></modifier></type><name pos:line="26" pos:column="43">ce<pos:position pos:line="26" pos:column="45"/></name> <init pos:line="26" pos:column="46">= <expr><name><name pos:line="26" pos:column="48">active_cache<pos:position pos:line="26" pos:column="60"/></name><index pos:line="26" pos:column="60">[<expr><name pos:line="26" pos:column="61">i<pos:position pos:line="26" pos:column="62"/></name></expr>]<pos:position pos:line="26" pos:column="63"/></index></name></expr></init></decl>;<pos:position pos:line="26" pos:column="64"/></decl_stmt>
		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><operator pos:line="27" pos:column="21">!<pos:position pos:line="27" pos:column="22"/></operator><call><name pos:line="27" pos:column="22">ce_stage<pos:position pos:line="27" pos:column="30"/></name><argument_list pos:line="27" pos:column="30">(<argument><expr><name pos:line="27" pos:column="31">ce<pos:position pos:line="27" pos:column="33"/></name></expr></argument>)<pos:position pos:line="27" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="35"/></condition><then pos:line="27" pos:column="35">
			<block type="pseudo"><continue pos:line="28" pos:column="25">continue;<pos:position pos:line="28" pos:column="34"/></continue></block></then></if>
		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><call><name pos:line="29" pos:column="21">ce_path_match<pos:position pos:line="29" pos:column="34"/></name><argument_list pos:line="29" pos:column="34">(<argument><expr><name pos:line="29" pos:column="35">ce<pos:position pos:line="29" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="39">&amp;<pos:position pos:line="29" pos:column="44"/></operator><name><name pos:line="29" pos:column="40">revs<pos:position pos:line="29" pos:column="44"/></name><operator pos:line="29" pos:column="44">-&gt;<pos:position pos:line="29" pos:column="49"/></operator><name pos:line="29" pos:column="46">prune_data<pos:position pos:line="29" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="58">NULL<pos:position pos:line="29" pos:column="62"/></name></expr></argument>)<pos:position pos:line="29" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="64"/></condition><then pos:line="29" pos:column="64"> <block pos:line="29" pos:column="65">{
			<expr_stmt><expr><name pos:line="30" pos:column="25">prune_num<pos:position pos:line="30" pos:column="34"/></name><operator pos:line="30" pos:column="34">++<pos:position pos:line="30" pos:column="36"/></operator></expr>;<pos:position pos:line="30" pos:column="37"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="31" pos:column="25">REALLOC_ARRAY<pos:position pos:line="31" pos:column="38"/></name><argument_list pos:line="31" pos:column="38">(<argument><expr><name pos:line="31" pos:column="39">prune<pos:position pos:line="31" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="46">prune_num<pos:position pos:line="31" pos:column="55"/></name></expr></argument>)<pos:position pos:line="31" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="57"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="32" pos:column="25">prune<pos:position pos:line="32" pos:column="30"/></name><index pos:line="32" pos:column="30">[<expr><name pos:line="32" pos:column="31">prune_num<pos:position pos:line="32" pos:column="40"/></name><operator pos:line="32" pos:column="40">-<pos:position pos:line="32" pos:column="41"/></operator><literal type="number" pos:line="32" pos:column="41">2<pos:position pos:line="32" pos:column="42"/></literal></expr>]<pos:position pos:line="32" pos:column="43"/></index></name> <operator pos:line="32" pos:column="44">=<pos:position pos:line="32" pos:column="45"/></operator> <name><name pos:line="32" pos:column="46">ce<pos:position pos:line="32" pos:column="48"/></name><operator pos:line="32" pos:column="48">-&gt;<pos:position pos:line="32" pos:column="53"/></operator><name pos:line="32" pos:column="50">name<pos:position pos:line="32" pos:column="54"/></name></name></expr>;<pos:position pos:line="32" pos:column="55"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="33" pos:column="25">prune<pos:position pos:line="33" pos:column="30"/></name><index pos:line="33" pos:column="30">[<expr><name pos:line="33" pos:column="31">prune_num<pos:position pos:line="33" pos:column="40"/></name><operator pos:line="33" pos:column="40">-<pos:position pos:line="33" pos:column="41"/></operator><literal type="number" pos:line="33" pos:column="41">1<pos:position pos:line="33" pos:column="42"/></literal></expr>]<pos:position pos:line="33" pos:column="43"/></index></name> <operator pos:line="33" pos:column="44">=<pos:position pos:line="33" pos:column="45"/></operator> <name pos:line="33" pos:column="46">NULL<pos:position pos:line="33" pos:column="50"/></name></expr>;<pos:position pos:line="33" pos:column="51"/></expr_stmt>
		}<pos:position pos:line="34" pos:column="18"/></block></then></if>
		<while pos:line="35" pos:column="17">while <condition pos:line="35" pos:column="23">(<expr><operator pos:line="35" pos:column="24">(<pos:position pos:line="35" pos:column="25"/></operator><name pos:line="35" pos:column="25">i<pos:position pos:line="35" pos:column="26"/></name><operator pos:line="35" pos:column="26">+<pos:position pos:line="35" pos:column="27"/></operator><literal type="number" pos:line="35" pos:column="27">1<pos:position pos:line="35" pos:column="28"/></literal> <operator pos:line="35" pos:column="29">&lt;<pos:position pos:line="35" pos:column="33"/></operator> <name pos:line="35" pos:column="31">active_nr<pos:position pos:line="35" pos:column="40"/></name><operator pos:line="35" pos:column="40">)<pos:position pos:line="35" pos:column="41"/></operator> <operator pos:line="35" pos:column="42">&amp;&amp;<pos:position pos:line="35" pos:column="52"/></operator>
		       <call><name pos:line="36" pos:column="24">ce_same_name<pos:position pos:line="36" pos:column="36"/></name><argument_list pos:line="36" pos:column="36">(<argument><expr><name pos:line="36" pos:column="37">ce<pos:position pos:line="36" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="41">active_cache<pos:position pos:line="36" pos:column="53"/></name><index pos:line="36" pos:column="53">[<expr><name pos:line="36" pos:column="54">i<pos:position pos:line="36" pos:column="55"/></name><operator pos:line="36" pos:column="55">+<pos:position pos:line="36" pos:column="56"/></operator><literal type="number" pos:line="36" pos:column="56">1<pos:position pos:line="36" pos:column="57"/></literal></expr>]<pos:position pos:line="36" pos:column="58"/></index></name></expr></argument>)<pos:position pos:line="36" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="60"/></condition>
			<block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="25">i<pos:position pos:line="37" pos:column="26"/></name><operator pos:line="37" pos:column="26">++<pos:position pos:line="37" pos:column="28"/></operator></expr>;<pos:position pos:line="37" pos:column="29"/></expr_stmt></block></while>
	}<pos:position pos:line="38" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="39" pos:column="9">clear_pathspec<pos:position pos:line="39" pos:column="23"/></name><argument_list pos:line="39" pos:column="23">(<argument><expr><operator pos:line="39" pos:column="24">&amp;<pos:position pos:line="39" pos:column="29"/></operator><name><name pos:line="39" pos:column="25">revs<pos:position pos:line="39" pos:column="29"/></name><operator pos:line="39" pos:column="29">-&gt;<pos:position pos:line="39" pos:column="34"/></operator><name pos:line="39" pos:column="31">prune_data<pos:position pos:line="39" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="40" pos:column="9">parse_pathspec<pos:position pos:line="40" pos:column="23"/></name><argument_list pos:line="40" pos:column="23">(<argument><expr><operator pos:line="40" pos:column="24">&amp;<pos:position pos:line="40" pos:column="29"/></operator><name><name pos:line="40" pos:column="25">revs<pos:position pos:line="40" pos:column="29"/></name><operator pos:line="40" pos:column="29">-&gt;<pos:position pos:line="40" pos:column="34"/></operator><name pos:line="40" pos:column="31">prune_data<pos:position pos:line="40" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="43">PATHSPEC_ALL_MAGIC<pos:position pos:line="40" pos:column="61"/></name> <operator pos:line="40" pos:column="62">&amp;<pos:position pos:line="40" pos:column="67"/></operator> <operator pos:line="40" pos:column="64">~<pos:position pos:line="40" pos:column="65"/></operator><name pos:line="40" pos:column="65">PATHSPEC_LITERAL<pos:position pos:line="40" pos:column="81"/></name></expr></argument>,
		       <argument><expr><name pos:line="41" pos:column="24">PATHSPEC_PREFER_FULL<pos:position pos:line="41" pos:column="44"/></name> <operator pos:line="41" pos:column="45">|<pos:position pos:line="41" pos:column="46"/></operator> <name pos:line="41" pos:column="47">PATHSPEC_LITERAL_PATH<pos:position pos:line="41" pos:column="68"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="70">""<pos:position pos:line="41" pos:column="72"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="74">prune<pos:position pos:line="41" pos:column="79"/></name></expr></argument>)<pos:position pos:line="41" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="81"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="42" pos:column="9">revs<pos:position pos:line="42" pos:column="13"/></name><operator pos:line="42" pos:column="13">-&gt;<pos:position pos:line="42" pos:column="18"/></operator><name pos:line="42" pos:column="15">limited<pos:position pos:line="42" pos:column="22"/></name></name> <operator pos:line="42" pos:column="23">=<pos:position pos:line="42" pos:column="24"/></operator> <literal type="number" pos:line="42" pos:column="25">1<pos:position pos:line="42" pos:column="26"/></literal></expr>;<pos:position pos:line="42" pos:column="27"/></expr_stmt>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

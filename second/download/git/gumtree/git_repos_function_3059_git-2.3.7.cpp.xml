<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3059_git-2.3.7.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">remote_lock<pos:position pos:line="1" pos:column="26"/></name></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">lock_remote<pos:position pos:line="1" pos:column="39"/></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><specifier pos:line="1" pos:column="40">const<pos:position pos:line="1" pos:column="45"/></specifier> <name pos:line="1" pos:column="46">char<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">path<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">long<pos:position pos:line="1" pos:column="62"/></name></type> <name pos:line="1" pos:column="63">timeout<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="71"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">active_request_slot<pos:position pos:line="3" pos:column="35"/></name></name> <modifier pos:line="3" pos:column="36">*<pos:position pos:line="3" pos:column="37"/></modifier></type><name pos:line="3" pos:column="37">slot<pos:position pos:line="3" pos:column="41"/></name></decl>;<pos:position pos:line="3" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">slot_results<pos:position pos:line="4" pos:column="28"/></name></name></type> <name pos:line="4" pos:column="29">results<pos:position pos:line="4" pos:column="36"/></name></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">buffer<pos:position pos:line="5" pos:column="22"/></name></name></type> <name pos:line="5" pos:column="23">out_buffer<pos:position pos:line="5" pos:column="33"/></name> <init pos:line="5" pos:column="34">= <expr><block pos:line="5" pos:column="36">{ <expr><name pos:line="5" pos:column="38">STRBUF_INIT<pos:position pos:line="5" pos:column="49"/></name></expr>, <expr><literal type="number" pos:line="5" pos:column="51">0<pos:position pos:line="5" pos:column="52"/></literal></expr> }<pos:position pos:line="5" pos:column="54"/></block></expr></init></decl>;<pos:position pos:line="5" pos:column="55"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">strbuf<pos:position pos:line="6" pos:column="22"/></name></name></type> <name pos:line="6" pos:column="23">in_buffer<pos:position pos:line="6" pos:column="32"/></name> <init pos:line="6" pos:column="33">= <expr><name pos:line="6" pos:column="35">STRBUF_INIT<pos:position pos:line="6" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">url<pos:position pos:line="7" pos:column="18"/></name></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">ep<pos:position pos:line="8" pos:column="17"/></name></decl>;<pos:position pos:line="8" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">char<pos:position pos:line="9" pos:column="13"/></name></type> <name><name pos:line="9" pos:column="14">timeout_header<pos:position pos:line="9" pos:column="28"/></name><index pos:line="9" pos:column="28">[<expr><literal type="number" pos:line="9" pos:column="29">25<pos:position pos:line="9" pos:column="31"/></literal></expr>]<pos:position pos:line="9" pos:column="32"/></index></name></decl>;<pos:position pos:line="9" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="10" pos:column="9">struct<pos:position pos:line="10" pos:column="15"/></name> <name pos:line="10" pos:column="16">remote_lock<pos:position pos:line="10" pos:column="27"/></name></name> <modifier pos:line="10" pos:column="28">*<pos:position pos:line="10" pos:column="29"/></modifier></type><name pos:line="10" pos:column="29">lock<pos:position pos:line="10" pos:column="33"/></name> <init pos:line="10" pos:column="34">= <expr><name pos:line="10" pos:column="36">NULL<pos:position pos:line="10" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="11" pos:column="9">struct<pos:position pos:line="11" pos:column="15"/></name> <name pos:line="11" pos:column="16">curl_slist<pos:position pos:line="11" pos:column="26"/></name></name> <modifier pos:line="11" pos:column="27">*<pos:position pos:line="11" pos:column="28"/></modifier></type><name pos:line="11" pos:column="28">dav_headers<pos:position pos:line="11" pos:column="39"/></name> <init pos:line="11" pos:column="40">= <expr><name pos:line="11" pos:column="42">NULL<pos:position pos:line="11" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="12" pos:column="9">struct<pos:position pos:line="12" pos:column="15"/></name> <name pos:line="12" pos:column="16">xml_ctx<pos:position pos:line="12" pos:column="23"/></name></name></type> <name pos:line="12" pos:column="24">ctx<pos:position pos:line="12" pos:column="27"/></name></decl>;<pos:position pos:line="12" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="13" pos:column="9">char<pos:position pos:line="13" pos:column="13"/></name> <modifier pos:line="13" pos:column="14">*<pos:position pos:line="13" pos:column="15"/></modifier></type><name pos:line="13" pos:column="15">escaped<pos:position pos:line="13" pos:column="22"/></name></decl>;<pos:position pos:line="13" pos:column="23"/></decl_stmt>

	<expr_stmt><expr><name pos:line="15" pos:column="9">url<pos:position pos:line="15" pos:column="12"/></name> <operator pos:line="15" pos:column="13">=<pos:position pos:line="15" pos:column="14"/></operator> <call><name pos:line="15" pos:column="15">xstrfmt<pos:position pos:line="15" pos:column="22"/></name><argument_list pos:line="15" pos:column="22">(<argument><expr><literal type="string" pos:line="15" pos:column="23">"%s%s"<pos:position pos:line="15" pos:column="29"/></literal></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="31">repo<pos:position pos:line="15" pos:column="35"/></name><operator pos:line="15" pos:column="35">-&gt;<pos:position pos:line="15" pos:column="40"/></operator><name pos:line="15" pos:column="37">url<pos:position pos:line="15" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="42">path<pos:position pos:line="15" pos:column="46"/></name></expr></argument>)<pos:position pos:line="15" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="48"/></expr_stmt>

	<comment type="block" pos:line="17" pos:column="9">/* Make sure leading directories exist for the remote ref */</comment>
	<expr_stmt><expr><name pos:line="18" pos:column="9">ep<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator> <call><name pos:line="18" pos:column="14">strchr<pos:position pos:line="18" pos:column="20"/></name><argument_list pos:line="18" pos:column="20">(<argument><expr><name pos:line="18" pos:column="21">url<pos:position pos:line="18" pos:column="24"/></name> <operator pos:line="18" pos:column="25">+<pos:position pos:line="18" pos:column="26"/></operator> <call><name pos:line="18" pos:column="27">strlen<pos:position pos:line="18" pos:column="33"/></name><argument_list pos:line="18" pos:column="33">(<argument><expr><name><name pos:line="18" pos:column="34">repo<pos:position pos:line="18" pos:column="38"/></name><operator pos:line="18" pos:column="38">-&gt;<pos:position pos:line="18" pos:column="43"/></operator><name pos:line="18" pos:column="40">url<pos:position pos:line="18" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="44"/></argument_list></call> <operator pos:line="18" pos:column="45">+<pos:position pos:line="18" pos:column="46"/></operator> <literal type="number" pos:line="18" pos:column="47">1<pos:position pos:line="18" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="char" pos:line="18" pos:column="50">'/'<pos:position pos:line="18" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="55"/></expr_stmt>
	<while pos:line="19" pos:column="9">while <condition pos:line="19" pos:column="15">(<expr><name pos:line="19" pos:column="16">ep<pos:position pos:line="19" pos:column="18"/></name></expr>)<pos:position pos:line="19" pos:column="19"/></condition> <block pos:line="19" pos:column="20">{
		<decl_stmt><decl><type><name pos:line="20" pos:column="17">char<pos:position pos:line="20" pos:column="21"/></name></type> <name pos:line="20" pos:column="22">saved_character<pos:position pos:line="20" pos:column="37"/></name> <init pos:line="20" pos:column="38">= <expr><name><name pos:line="20" pos:column="40">ep<pos:position pos:line="20" pos:column="42"/></name><index pos:line="20" pos:column="42">[<expr><literal type="number" pos:line="20" pos:column="43">1<pos:position pos:line="20" pos:column="44"/></literal></expr>]<pos:position pos:line="20" pos:column="45"/></index></name></expr></init></decl>;<pos:position pos:line="20" pos:column="46"/></decl_stmt>
		<expr_stmt><expr><name><name pos:line="21" pos:column="17">ep<pos:position pos:line="21" pos:column="19"/></name><index pos:line="21" pos:column="19">[<expr><literal type="number" pos:line="21" pos:column="20">1<pos:position pos:line="21" pos:column="21"/></literal></expr>]<pos:position pos:line="21" pos:column="22"/></index></name> <operator pos:line="21" pos:column="23">=<pos:position pos:line="21" pos:column="24"/></operator> <literal type="char" pos:line="21" pos:column="25">'\0'<pos:position pos:line="21" pos:column="29"/></literal></expr>;<pos:position pos:line="21" pos:column="30"/></expr_stmt>
		<expr_stmt><expr><name pos:line="22" pos:column="17">slot<pos:position pos:line="22" pos:column="21"/></name> <operator pos:line="22" pos:column="22">=<pos:position pos:line="22" pos:column="23"/></operator> <call><name pos:line="22" pos:column="24">get_active_slot<pos:position pos:line="22" pos:column="39"/></name><argument_list pos:line="22" pos:column="39">()<pos:position pos:line="22" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="23" pos:column="17">slot<pos:position pos:line="23" pos:column="21"/></name><operator pos:line="23" pos:column="21">-&gt;<pos:position pos:line="23" pos:column="26"/></operator><name pos:line="23" pos:column="23">results<pos:position pos:line="23" pos:column="30"/></name></name> <operator pos:line="23" pos:column="31">=<pos:position pos:line="23" pos:column="32"/></operator> <operator pos:line="23" pos:column="33">&amp;<pos:position pos:line="23" pos:column="38"/></operator><name pos:line="23" pos:column="34">results<pos:position pos:line="23" pos:column="41"/></name></expr>;<pos:position pos:line="23" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="24" pos:column="17">curl_setup_http_get<pos:position pos:line="24" pos:column="36"/></name><argument_list pos:line="24" pos:column="36">(<argument><expr><name><name pos:line="24" pos:column="37">slot<pos:position pos:line="24" pos:column="41"/></name><operator pos:line="24" pos:column="41">-&gt;<pos:position pos:line="24" pos:column="46"/></operator><name pos:line="24" pos:column="43">curl<pos:position pos:line="24" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="49">url<pos:position pos:line="24" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="54">DAV_MKCOL<pos:position pos:line="24" pos:column="63"/></name></expr></argument>)<pos:position pos:line="24" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="65"/></expr_stmt>
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><call><name pos:line="25" pos:column="21">start_active_slot<pos:position pos:line="25" pos:column="38"/></name><argument_list pos:line="25" pos:column="38">(<argument><expr><name pos:line="25" pos:column="39">slot<pos:position pos:line="25" pos:column="43"/></name></expr></argument>)<pos:position pos:line="25" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="45"/></condition><then pos:line="25" pos:column="45"> <block pos:line="25" pos:column="46">{
			<expr_stmt><expr><call><name pos:line="26" pos:column="25">run_active_slot<pos:position pos:line="26" pos:column="40"/></name><argument_list pos:line="26" pos:column="40">(<argument><expr><name pos:line="26" pos:column="41">slot<pos:position pos:line="26" pos:column="45"/></name></expr></argument>)<pos:position pos:line="26" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="47"/></expr_stmt>
			<if pos:line="27" pos:column="25">if <condition pos:line="27" pos:column="28">(<expr><name><name pos:line="27" pos:column="29">results<pos:position pos:line="27" pos:column="36"/></name><operator pos:line="27" pos:column="36">.<pos:position pos:line="27" pos:column="37"/></operator><name pos:line="27" pos:column="37">curl_result<pos:position pos:line="27" pos:column="48"/></name></name> <operator pos:line="27" pos:column="49">!=<pos:position pos:line="27" pos:column="51"/></operator> <name pos:line="27" pos:column="52">CURLE_OK<pos:position pos:line="27" pos:column="60"/></name> <operator pos:line="27" pos:column="61">&amp;&amp;<pos:position pos:line="27" pos:column="71"/></operator>
			    <name><name pos:line="28" pos:column="29">results<pos:position pos:line="28" pos:column="36"/></name><operator pos:line="28" pos:column="36">.<pos:position pos:line="28" pos:column="37"/></operator><name pos:line="28" pos:column="37">http_code<pos:position pos:line="28" pos:column="46"/></name></name> <operator pos:line="28" pos:column="47">!=<pos:position pos:line="28" pos:column="49"/></operator> <literal type="number" pos:line="28" pos:column="50">405<pos:position pos:line="28" pos:column="53"/></literal></expr>)<pos:position pos:line="28" pos:column="54"/></condition><then pos:line="28" pos:column="54"> <block pos:line="28" pos:column="55">{
				<expr_stmt><expr><call><name pos:line="29" pos:column="33">fprintf<pos:position pos:line="29" pos:column="40"/></name><argument_list pos:line="29" pos:column="40">(<argument><expr><name pos:line="29" pos:column="41">stderr<pos:position pos:line="29" pos:column="47"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="30" pos:column="41">"Unable to create branch path %s\n"<pos:position pos:line="30" pos:column="76"/></literal></expr></argument>,
					<argument><expr><name pos:line="31" pos:column="41">url<pos:position pos:line="31" pos:column="44"/></name></expr></argument>)<pos:position pos:line="31" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="46"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="32" pos:column="33">free<pos:position pos:line="32" pos:column="37"/></name><argument_list pos:line="32" pos:column="37">(<argument><expr><name pos:line="32" pos:column="38">url<pos:position pos:line="32" pos:column="41"/></name></expr></argument>)<pos:position pos:line="32" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="43"/></expr_stmt>
				<return pos:line="33" pos:column="33">return <expr><name pos:line="33" pos:column="40">NULL<pos:position pos:line="33" pos:column="44"/></name></expr>;<pos:position pos:line="33" pos:column="45"/></return>
			}<pos:position pos:line="34" pos:column="26"/></block></then></if>
		}<pos:position pos:line="35" pos:column="18"/></block></then> <else pos:line="35" pos:column="19">else <block pos:line="35" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="36" pos:column="25">fprintf<pos:position pos:line="36" pos:column="32"/></name><argument_list pos:line="36" pos:column="32">(<argument><expr><name pos:line="36" pos:column="33">stderr<pos:position pos:line="36" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="41">"Unable to start MKCOL request\n"<pos:position pos:line="36" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="76"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="37" pos:column="25">free<pos:position pos:line="37" pos:column="29"/></name><argument_list pos:line="37" pos:column="29">(<argument><expr><name pos:line="37" pos:column="30">url<pos:position pos:line="37" pos:column="33"/></name></expr></argument>)<pos:position pos:line="37" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="35"/></expr_stmt>
			<return pos:line="38" pos:column="25">return <expr><name pos:line="38" pos:column="32">NULL<pos:position pos:line="38" pos:column="36"/></name></expr>;<pos:position pos:line="38" pos:column="37"/></return>
		}<pos:position pos:line="39" pos:column="18"/></block></else></if>
		<expr_stmt><expr><name><name pos:line="40" pos:column="17">ep<pos:position pos:line="40" pos:column="19"/></name><index pos:line="40" pos:column="19">[<expr><literal type="number" pos:line="40" pos:column="20">1<pos:position pos:line="40" pos:column="21"/></literal></expr>]<pos:position pos:line="40" pos:column="22"/></index></name> <operator pos:line="40" pos:column="23">=<pos:position pos:line="40" pos:column="24"/></operator> <name pos:line="40" pos:column="25">saved_character<pos:position pos:line="40" pos:column="40"/></name></expr>;<pos:position pos:line="40" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><name pos:line="41" pos:column="17">ep<pos:position pos:line="41" pos:column="19"/></name> <operator pos:line="41" pos:column="20">=<pos:position pos:line="41" pos:column="21"/></operator> <call><name pos:line="41" pos:column="22">strchr<pos:position pos:line="41" pos:column="28"/></name><argument_list pos:line="41" pos:column="28">(<argument><expr><name pos:line="41" pos:column="29">ep<pos:position pos:line="41" pos:column="31"/></name> <operator pos:line="41" pos:column="32">+<pos:position pos:line="41" pos:column="33"/></operator> <literal type="number" pos:line="41" pos:column="34">1<pos:position pos:line="41" pos:column="35"/></literal></expr></argument>, <argument><expr><literal type="char" pos:line="41" pos:column="37">'/'<pos:position pos:line="41" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="42"/></expr_stmt>
	}<pos:position pos:line="42" pos:column="10"/></block></while>

	<expr_stmt><expr><name pos:line="44" pos:column="9">escaped<pos:position pos:line="44" pos:column="16"/></name> <operator pos:line="44" pos:column="17">=<pos:position pos:line="44" pos:column="18"/></operator> <call><name pos:line="44" pos:column="19">xml_entities<pos:position pos:line="44" pos:column="31"/></name><argument_list pos:line="44" pos:column="31">(<argument><expr><call><name pos:line="44" pos:column="32">ident_default_email<pos:position pos:line="44" pos:column="51"/></name><argument_list pos:line="44" pos:column="51">()<pos:position pos:line="44" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="45" pos:column="9">strbuf_addf<pos:position pos:line="45" pos:column="20"/></name><argument_list pos:line="45" pos:column="20">(<argument><expr><operator pos:line="45" pos:column="21">&amp;<pos:position pos:line="45" pos:column="26"/></operator><name><name pos:line="45" pos:column="22">out_buffer<pos:position pos:line="45" pos:column="32"/></name><operator pos:line="45" pos:column="32">.<pos:position pos:line="45" pos:column="33"/></operator><name pos:line="45" pos:column="33">buf<pos:position pos:line="45" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="38">LOCK_REQUEST<pos:position pos:line="45" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="52">escaped<pos:position pos:line="45" pos:column="59"/></name></expr></argument>)<pos:position pos:line="45" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="61"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="46" pos:column="9">free<pos:position pos:line="46" pos:column="13"/></name><argument_list pos:line="46" pos:column="13">(<argument><expr><name pos:line="46" pos:column="14">escaped<pos:position pos:line="46" pos:column="21"/></name></expr></argument>)<pos:position pos:line="46" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="23"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="48" pos:column="9">sprintf<pos:position pos:line="48" pos:column="16"/></name><argument_list pos:line="48" pos:column="16">(<argument><expr><name pos:line="48" pos:column="17">timeout_header<pos:position pos:line="48" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="33">"Timeout: Second-%ld"<pos:position pos:line="48" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="48" pos:column="56">timeout<pos:position pos:line="48" pos:column="63"/></name></expr></argument>)<pos:position pos:line="48" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="65"/></expr_stmt>
	<expr_stmt><expr><name pos:line="49" pos:column="9">dav_headers<pos:position pos:line="49" pos:column="20"/></name> <operator pos:line="49" pos:column="21">=<pos:position pos:line="49" pos:column="22"/></operator> <call><name pos:line="49" pos:column="23">curl_slist_append<pos:position pos:line="49" pos:column="40"/></name><argument_list pos:line="49" pos:column="40">(<argument><expr><name pos:line="49" pos:column="41">dav_headers<pos:position pos:line="49" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="54">timeout_header<pos:position pos:line="49" pos:column="68"/></name></expr></argument>)<pos:position pos:line="49" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="70"/></expr_stmt>
	<expr_stmt><expr><name pos:line="50" pos:column="9">dav_headers<pos:position pos:line="50" pos:column="20"/></name> <operator pos:line="50" pos:column="21">=<pos:position pos:line="50" pos:column="22"/></operator> <call><name pos:line="50" pos:column="23">curl_slist_append<pos:position pos:line="50" pos:column="40"/></name><argument_list pos:line="50" pos:column="40">(<argument><expr><name pos:line="50" pos:column="41">dav_headers<pos:position pos:line="50" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="54">"Content-Type: text/xml"<pos:position pos:line="50" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="80"/></expr_stmt>

	<expr_stmt><expr><name pos:line="52" pos:column="9">slot<pos:position pos:line="52" pos:column="13"/></name> <operator pos:line="52" pos:column="14">=<pos:position pos:line="52" pos:column="15"/></operator> <call><name pos:line="52" pos:column="16">get_active_slot<pos:position pos:line="52" pos:column="31"/></name><argument_list pos:line="52" pos:column="31">()<pos:position pos:line="52" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="53" pos:column="9">slot<pos:position pos:line="53" pos:column="13"/></name><operator pos:line="53" pos:column="13">-&gt;<pos:position pos:line="53" pos:column="18"/></operator><name pos:line="53" pos:column="15">results<pos:position pos:line="53" pos:column="22"/></name></name> <operator pos:line="53" pos:column="23">=<pos:position pos:line="53" pos:column="24"/></operator> <operator pos:line="53" pos:column="25">&amp;<pos:position pos:line="53" pos:column="30"/></operator><name pos:line="53" pos:column="26">results<pos:position pos:line="53" pos:column="33"/></name></expr>;<pos:position pos:line="53" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="54" pos:column="9">curl_setup_http<pos:position pos:line="54" pos:column="24"/></name><argument_list pos:line="54" pos:column="24">(<argument><expr><name><name pos:line="54" pos:column="25">slot<pos:position pos:line="54" pos:column="29"/></name><operator pos:line="54" pos:column="29">-&gt;<pos:position pos:line="54" pos:column="34"/></operator><name pos:line="54" pos:column="31">curl<pos:position pos:line="54" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="37">url<pos:position pos:line="54" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="42">DAV_LOCK<pos:position pos:line="54" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="54" pos:column="52">&amp;<pos:position pos:line="54" pos:column="57"/></operator><name pos:line="54" pos:column="53">out_buffer<pos:position pos:line="54" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="65">fwrite_buffer<pos:position pos:line="54" pos:column="78"/></name></expr></argument>)<pos:position pos:line="54" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="80"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="55" pos:column="9">curl_easy_setopt<pos:position pos:line="55" pos:column="25"/></name><argument_list pos:line="55" pos:column="25">(<argument><expr><name><name pos:line="55" pos:column="26">slot<pos:position pos:line="55" pos:column="30"/></name><operator pos:line="55" pos:column="30">-&gt;<pos:position pos:line="55" pos:column="35"/></operator><name pos:line="55" pos:column="32">curl<pos:position pos:line="55" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="38">CURLOPT_HTTPHEADER<pos:position pos:line="55" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="58">dav_headers<pos:position pos:line="55" pos:column="69"/></name></expr></argument>)<pos:position pos:line="55" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="71"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="56" pos:column="9">curl_easy_setopt<pos:position pos:line="56" pos:column="25"/></name><argument_list pos:line="56" pos:column="25">(<argument><expr><name><name pos:line="56" pos:column="26">slot<pos:position pos:line="56" pos:column="30"/></name><operator pos:line="56" pos:column="30">-&gt;<pos:position pos:line="56" pos:column="35"/></operator><name pos:line="56" pos:column="32">curl<pos:position pos:line="56" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="38">CURLOPT_FILE<pos:position pos:line="56" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="52">&amp;<pos:position pos:line="56" pos:column="57"/></operator><name pos:line="56" pos:column="53">in_buffer<pos:position pos:line="56" pos:column="62"/></name></expr></argument>)<pos:position pos:line="56" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="64"/></expr_stmt>

	<expr_stmt><expr><name pos:line="58" pos:column="9">lock<pos:position pos:line="58" pos:column="13"/></name> <operator pos:line="58" pos:column="14">=<pos:position pos:line="58" pos:column="15"/></operator> <call><name pos:line="58" pos:column="16">xcalloc<pos:position pos:line="58" pos:column="23"/></name><argument_list pos:line="58" pos:column="23">(<argument><expr><literal type="number" pos:line="58" pos:column="24">1<pos:position pos:line="58" pos:column="25"/></literal></expr></argument>, <argument><expr><sizeof pos:line="58" pos:column="27">sizeof<argument_list pos:line="58" pos:column="33">(<argument><expr><operator pos:line="58" pos:column="34">*<pos:position pos:line="58" pos:column="35"/></operator><name pos:line="58" pos:column="35">lock<pos:position pos:line="58" pos:column="39"/></name></expr></argument>)<pos:position pos:line="58" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="58" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="59" pos:column="9">lock<pos:position pos:line="59" pos:column="13"/></name><operator pos:line="59" pos:column="13">-&gt;<pos:position pos:line="59" pos:column="18"/></operator><name pos:line="59" pos:column="15">timeout<pos:position pos:line="59" pos:column="22"/></name></name> <operator pos:line="59" pos:column="23">=<pos:position pos:line="59" pos:column="24"/></operator> <operator pos:line="59" pos:column="25">-<pos:position pos:line="59" pos:column="26"/></operator><literal type="number" pos:line="59" pos:column="26">1<pos:position pos:line="59" pos:column="27"/></literal></expr>;<pos:position pos:line="59" pos:column="28"/></expr_stmt>

	<if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><call><name pos:line="61" pos:column="13">start_active_slot<pos:position pos:line="61" pos:column="30"/></name><argument_list pos:line="61" pos:column="30">(<argument><expr><name pos:line="61" pos:column="31">slot<pos:position pos:line="61" pos:column="35"/></name></expr></argument>)<pos:position pos:line="61" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="61" pos:column="37"/></condition><then pos:line="61" pos:column="37"> <block pos:line="61" pos:column="38">{
		<expr_stmt><expr><call><name pos:line="62" pos:column="17">run_active_slot<pos:position pos:line="62" pos:column="32"/></name><argument_list pos:line="62" pos:column="32">(<argument><expr><name pos:line="62" pos:column="33">slot<pos:position pos:line="62" pos:column="37"/></name></expr></argument>)<pos:position pos:line="62" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="39"/></expr_stmt>
		<if pos:line="63" pos:column="17">if <condition pos:line="63" pos:column="20">(<expr><name><name pos:line="63" pos:column="21">results<pos:position pos:line="63" pos:column="28"/></name><operator pos:line="63" pos:column="28">.<pos:position pos:line="63" pos:column="29"/></operator><name pos:line="63" pos:column="29">curl_result<pos:position pos:line="63" pos:column="40"/></name></name> <operator pos:line="63" pos:column="41">==<pos:position pos:line="63" pos:column="43"/></operator> <name pos:line="63" pos:column="44">CURLE_OK<pos:position pos:line="63" pos:column="52"/></name></expr>)<pos:position pos:line="63" pos:column="53"/></condition><then pos:line="63" pos:column="53"> <block pos:line="63" pos:column="54">{
			<decl_stmt><decl><type><name pos:line="64" pos:column="25">XML_Parser<pos:position pos:line="64" pos:column="35"/></name></type> <name pos:line="64" pos:column="36">parser<pos:position pos:line="64" pos:column="42"/></name> <init pos:line="64" pos:column="43">= <expr><call><name pos:line="64" pos:column="45">XML_ParserCreate<pos:position pos:line="64" pos:column="61"/></name><argument_list pos:line="64" pos:column="61">(<argument><expr><name pos:line="64" pos:column="62">NULL<pos:position pos:line="64" pos:column="66"/></name></expr></argument>)<pos:position pos:line="64" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="64" pos:column="68"/></decl_stmt>
			<decl_stmt><decl><type><name><name pos:line="65" pos:column="25">enum<pos:position pos:line="65" pos:column="29"/></name> <name pos:line="65" pos:column="30">XML_Status<pos:position pos:line="65" pos:column="40"/></name></name></type> <name pos:line="65" pos:column="41">result<pos:position pos:line="65" pos:column="47"/></name></decl>;<pos:position pos:line="65" pos:column="48"/></decl_stmt>
			<expr_stmt><expr><name><name pos:line="66" pos:column="25">ctx<pos:position pos:line="66" pos:column="28"/></name><operator pos:line="66" pos:column="28">.<pos:position pos:line="66" pos:column="29"/></operator><name pos:line="66" pos:column="29">name<pos:position pos:line="66" pos:column="33"/></name></name> <operator pos:line="66" pos:column="34">=<pos:position pos:line="66" pos:column="35"/></operator> <call><name pos:line="66" pos:column="36">xcalloc<pos:position pos:line="66" pos:column="43"/></name><argument_list pos:line="66" pos:column="43">(<argument><expr><literal type="number" pos:line="66" pos:column="44">10<pos:position pos:line="66" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="66" pos:column="48">1<pos:position pos:line="66" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="51"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="67" pos:column="25">ctx<pos:position pos:line="67" pos:column="28"/></name><operator pos:line="67" pos:column="28">.<pos:position pos:line="67" pos:column="29"/></operator><name pos:line="67" pos:column="29">len<pos:position pos:line="67" pos:column="32"/></name></name> <operator pos:line="67" pos:column="33">=<pos:position pos:line="67" pos:column="34"/></operator> <literal type="number" pos:line="67" pos:column="35">0<pos:position pos:line="67" pos:column="36"/></literal></expr>;<pos:position pos:line="67" pos:column="37"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="68" pos:column="25">ctx<pos:position pos:line="68" pos:column="28"/></name><operator pos:line="68" pos:column="28">.<pos:position pos:line="68" pos:column="29"/></operator><name pos:line="68" pos:column="29">cdata<pos:position pos:line="68" pos:column="34"/></name></name> <operator pos:line="68" pos:column="35">=<pos:position pos:line="68" pos:column="36"/></operator> <name pos:line="68" pos:column="37">NULL<pos:position pos:line="68" pos:column="41"/></name></expr>;<pos:position pos:line="68" pos:column="42"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="69" pos:column="25">ctx<pos:position pos:line="69" pos:column="28"/></name><operator pos:line="69" pos:column="28">.<pos:position pos:line="69" pos:column="29"/></operator><name pos:line="69" pos:column="29">userFunc<pos:position pos:line="69" pos:column="37"/></name></name> <operator pos:line="69" pos:column="38">=<pos:position pos:line="69" pos:column="39"/></operator> <name pos:line="69" pos:column="40">handle_new_lock_ctx<pos:position pos:line="69" pos:column="59"/></name></expr>;<pos:position pos:line="69" pos:column="60"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="70" pos:column="25">ctx<pos:position pos:line="70" pos:column="28"/></name><operator pos:line="70" pos:column="28">.<pos:position pos:line="70" pos:column="29"/></operator><name pos:line="70" pos:column="29">userData<pos:position pos:line="70" pos:column="37"/></name></name> <operator pos:line="70" pos:column="38">=<pos:position pos:line="70" pos:column="39"/></operator> <name pos:line="70" pos:column="40">lock<pos:position pos:line="70" pos:column="44"/></name></expr>;<pos:position pos:line="70" pos:column="45"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="71" pos:column="25">XML_SetUserData<pos:position pos:line="71" pos:column="40"/></name><argument_list pos:line="71" pos:column="40">(<argument><expr><name pos:line="71" pos:column="41">parser<pos:position pos:line="71" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="71" pos:column="49">&amp;<pos:position pos:line="71" pos:column="54"/></operator><name pos:line="71" pos:column="50">ctx<pos:position pos:line="71" pos:column="53"/></name></expr></argument>)<pos:position pos:line="71" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="55"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="72" pos:column="25">XML_SetElementHandler<pos:position pos:line="72" pos:column="46"/></name><argument_list pos:line="72" pos:column="46">(<argument><expr><name pos:line="72" pos:column="47">parser<pos:position pos:line="72" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="55">xml_start_tag<pos:position pos:line="72" pos:column="68"/></name></expr></argument>,
					      <argument><expr><name pos:line="73" pos:column="47">xml_end_tag<pos:position pos:line="73" pos:column="58"/></name></expr></argument>)<pos:position pos:line="73" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="60"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="74" pos:column="25">XML_SetCharacterDataHandler<pos:position pos:line="74" pos:column="52"/></name><argument_list pos:line="74" pos:column="52">(<argument><expr><name pos:line="74" pos:column="53">parser<pos:position pos:line="74" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="61">xml_cdata<pos:position pos:line="74" pos:column="70"/></name></expr></argument>)<pos:position pos:line="74" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="72"/></expr_stmt>
			<expr_stmt><expr><name pos:line="75" pos:column="25">result<pos:position pos:line="75" pos:column="31"/></name> <operator pos:line="75" pos:column="32">=<pos:position pos:line="75" pos:column="33"/></operator> <call><name pos:line="75" pos:column="34">XML_Parse<pos:position pos:line="75" pos:column="43"/></name><argument_list pos:line="75" pos:column="43">(<argument><expr><name pos:line="75" pos:column="44">parser<pos:position pos:line="75" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="75" pos:column="52">in_buffer<pos:position pos:line="75" pos:column="61"/></name><operator pos:line="75" pos:column="61">.<pos:position pos:line="75" pos:column="62"/></operator><name pos:line="75" pos:column="62">buf<pos:position pos:line="75" pos:column="65"/></name></name></expr></argument>,
					   <argument><expr><name><name pos:line="76" pos:column="44">in_buffer<pos:position pos:line="76" pos:column="53"/></name><operator pos:line="76" pos:column="53">.<pos:position pos:line="76" pos:column="54"/></operator><name pos:line="76" pos:column="54">len<pos:position pos:line="76" pos:column="57"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="76" pos:column="59">1<pos:position pos:line="76" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="62"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="77" pos:column="25">free<pos:position pos:line="77" pos:column="29"/></name><argument_list pos:line="77" pos:column="29">(<argument><expr><name><name pos:line="77" pos:column="30">ctx<pos:position pos:line="77" pos:column="33"/></name><operator pos:line="77" pos:column="33">.<pos:position pos:line="77" pos:column="34"/></operator><name pos:line="77" pos:column="34">name<pos:position pos:line="77" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="77" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="40"/></expr_stmt>
			<if pos:line="78" pos:column="25">if <condition pos:line="78" pos:column="28">(<expr><name pos:line="78" pos:column="29">result<pos:position pos:line="78" pos:column="35"/></name> <operator pos:line="78" pos:column="36">!=<pos:position pos:line="78" pos:column="38"/></operator> <name pos:line="78" pos:column="39">XML_STATUS_OK<pos:position pos:line="78" pos:column="52"/></name></expr>)<pos:position pos:line="78" pos:column="53"/></condition><then pos:line="78" pos:column="53"> <block pos:line="78" pos:column="54">{
				<expr_stmt><expr><call><name pos:line="79" pos:column="33">fprintf<pos:position pos:line="79" pos:column="40"/></name><argument_list pos:line="79" pos:column="40">(<argument><expr><name pos:line="79" pos:column="41">stderr<pos:position pos:line="79" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="49">"XML error: %s\n"<pos:position pos:line="79" pos:column="66"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="80" pos:column="41">XML_ErrorString<pos:position pos:line="80" pos:column="56"/></name><argument_list pos:line="80" pos:column="56">(
						<argument><expr><call><name pos:line="81" pos:column="49">XML_GetErrorCode<pos:position pos:line="81" pos:column="65"/></name><argument_list pos:line="81" pos:column="65">(<argument><expr><name pos:line="81" pos:column="66">parser<pos:position pos:line="81" pos:column="72"/></name></expr></argument>)<pos:position pos:line="81" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="81" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="81" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="76"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="82" pos:column="33">lock<pos:position pos:line="82" pos:column="37"/></name><operator pos:line="82" pos:column="37">-&gt;<pos:position pos:line="82" pos:column="42"/></operator><name pos:line="82" pos:column="39">timeout<pos:position pos:line="82" pos:column="46"/></name></name> <operator pos:line="82" pos:column="47">=<pos:position pos:line="82" pos:column="48"/></operator> <operator pos:line="82" pos:column="49">-<pos:position pos:line="82" pos:column="50"/></operator><literal type="number" pos:line="82" pos:column="50">1<pos:position pos:line="82" pos:column="51"/></literal></expr>;<pos:position pos:line="82" pos:column="52"/></expr_stmt>
			}<pos:position pos:line="83" pos:column="26"/></block></then></if>
			<expr_stmt><expr><call><name pos:line="84" pos:column="25">XML_ParserFree<pos:position pos:line="84" pos:column="39"/></name><argument_list pos:line="84" pos:column="39">(<argument><expr><name pos:line="84" pos:column="40">parser<pos:position pos:line="84" pos:column="46"/></name></expr></argument>)<pos:position pos:line="84" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="48"/></expr_stmt>
		}<pos:position pos:line="85" pos:column="18"/></block></then></if>
	}<pos:position pos:line="86" pos:column="10"/></block></then> <else pos:line="86" pos:column="11">else <block pos:line="86" pos:column="16">{
		<expr_stmt><expr><call><name pos:line="87" pos:column="17">fprintf<pos:position pos:line="87" pos:column="24"/></name><argument_list pos:line="87" pos:column="24">(<argument><expr><name pos:line="87" pos:column="25">stderr<pos:position pos:line="87" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="87" pos:column="33">"Unable to start LOCK request\n"<pos:position pos:line="87" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="67"/></expr_stmt>
	}<pos:position pos:line="88" pos:column="10"/></block></else></if>

	<expr_stmt><expr><call><name pos:line="90" pos:column="9">curl_slist_free_all<pos:position pos:line="90" pos:column="28"/></name><argument_list pos:line="90" pos:column="28">(<argument><expr><name pos:line="90" pos:column="29">dav_headers<pos:position pos:line="90" pos:column="40"/></name></expr></argument>)<pos:position pos:line="90" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="91" pos:column="9">strbuf_release<pos:position pos:line="91" pos:column="23"/></name><argument_list pos:line="91" pos:column="23">(<argument><expr><operator pos:line="91" pos:column="24">&amp;<pos:position pos:line="91" pos:column="29"/></operator><name><name pos:line="91" pos:column="25">out_buffer<pos:position pos:line="91" pos:column="35"/></name><operator pos:line="91" pos:column="35">.<pos:position pos:line="91" pos:column="36"/></operator><name pos:line="91" pos:column="36">buf<pos:position pos:line="91" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="91" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="92" pos:column="9">strbuf_release<pos:position pos:line="92" pos:column="23"/></name><argument_list pos:line="92" pos:column="23">(<argument><expr><operator pos:line="92" pos:column="24">&amp;<pos:position pos:line="92" pos:column="29"/></operator><name pos:line="92" pos:column="25">in_buffer<pos:position pos:line="92" pos:column="34"/></name></expr></argument>)<pos:position pos:line="92" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="36"/></expr_stmt>

	<if pos:line="94" pos:column="9">if <condition pos:line="94" pos:column="12">(<expr><name><name pos:line="94" pos:column="13">lock<pos:position pos:line="94" pos:column="17"/></name><operator pos:line="94" pos:column="17">-&gt;<pos:position pos:line="94" pos:column="22"/></operator><name pos:line="94" pos:column="19">token<pos:position pos:line="94" pos:column="24"/></name></name> <operator pos:line="94" pos:column="25">==<pos:position pos:line="94" pos:column="27"/></operator> <name pos:line="94" pos:column="28">NULL<pos:position pos:line="94" pos:column="32"/></name> <operator pos:line="94" pos:column="33">||<pos:position pos:line="94" pos:column="35"/></operator> <name><name pos:line="94" pos:column="36">lock<pos:position pos:line="94" pos:column="40"/></name><operator pos:line="94" pos:column="40">-&gt;<pos:position pos:line="94" pos:column="45"/></operator><name pos:line="94" pos:column="42">timeout<pos:position pos:line="94" pos:column="49"/></name></name> <operator pos:line="94" pos:column="50">&lt;=<pos:position pos:line="94" pos:column="55"/></operator> <literal type="number" pos:line="94" pos:column="53">0<pos:position pos:line="94" pos:column="54"/></literal></expr>)<pos:position pos:line="94" pos:column="55"/></condition><then pos:line="94" pos:column="55"> <block pos:line="94" pos:column="56">{
		<expr_stmt><expr><call><name pos:line="95" pos:column="17">free<pos:position pos:line="95" pos:column="21"/></name><argument_list pos:line="95" pos:column="21">(<argument><expr><name><name pos:line="95" pos:column="22">lock<pos:position pos:line="95" pos:column="26"/></name><operator pos:line="95" pos:column="26">-&gt;<pos:position pos:line="95" pos:column="31"/></operator><name pos:line="95" pos:column="28">token<pos:position pos:line="95" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="95" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="96" pos:column="17">free<pos:position pos:line="96" pos:column="21"/></name><argument_list pos:line="96" pos:column="21">(<argument><expr><name><name pos:line="96" pos:column="22">lock<pos:position pos:line="96" pos:column="26"/></name><operator pos:line="96" pos:column="26">-&gt;<pos:position pos:line="96" pos:column="31"/></operator><name pos:line="96" pos:column="28">owner<pos:position pos:line="96" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="96" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="97" pos:column="17">free<pos:position pos:line="97" pos:column="21"/></name><argument_list pos:line="97" pos:column="21">(<argument><expr><name pos:line="97" pos:column="22">url<pos:position pos:line="97" pos:column="25"/></name></expr></argument>)<pos:position pos:line="97" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="27"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="98" pos:column="17">free<pos:position pos:line="98" pos:column="21"/></name><argument_list pos:line="98" pos:column="21">(<argument><expr><name pos:line="98" pos:column="22">lock<pos:position pos:line="98" pos:column="26"/></name></expr></argument>)<pos:position pos:line="98" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="28"/></expr_stmt>
		<expr_stmt><expr><name pos:line="99" pos:column="17">lock<pos:position pos:line="99" pos:column="21"/></name> <operator pos:line="99" pos:column="22">=<pos:position pos:line="99" pos:column="23"/></operator> <name pos:line="99" pos:column="24">NULL<pos:position pos:line="99" pos:column="28"/></name></expr>;<pos:position pos:line="99" pos:column="29"/></expr_stmt>
	}<pos:position pos:line="100" pos:column="10"/></block></then> <else pos:line="100" pos:column="11">else <block pos:line="100" pos:column="16">{
		<expr_stmt><expr><name><name pos:line="101" pos:column="17">lock<pos:position pos:line="101" pos:column="21"/></name><operator pos:line="101" pos:column="21">-&gt;<pos:position pos:line="101" pos:column="26"/></operator><name pos:line="101" pos:column="23">url<pos:position pos:line="101" pos:column="26"/></name></name> <operator pos:line="101" pos:column="27">=<pos:position pos:line="101" pos:column="28"/></operator> <name pos:line="101" pos:column="29">url<pos:position pos:line="101" pos:column="32"/></name></expr>;<pos:position pos:line="101" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="102" pos:column="17">lock<pos:position pos:line="102" pos:column="21"/></name><operator pos:line="102" pos:column="21">-&gt;<pos:position pos:line="102" pos:column="26"/></operator><name pos:line="102" pos:column="23">start_time<pos:position pos:line="102" pos:column="33"/></name></name> <operator pos:line="102" pos:column="34">=<pos:position pos:line="102" pos:column="35"/></operator> <call><name pos:line="102" pos:column="36">time<pos:position pos:line="102" pos:column="40"/></name><argument_list pos:line="102" pos:column="40">(<argument><expr><name pos:line="102" pos:column="41">NULL<pos:position pos:line="102" pos:column="45"/></name></expr></argument>)<pos:position pos:line="102" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="103" pos:column="17">lock<pos:position pos:line="103" pos:column="21"/></name><operator pos:line="103" pos:column="21">-&gt;<pos:position pos:line="103" pos:column="26"/></operator><name pos:line="103" pos:column="23">next<pos:position pos:line="103" pos:column="27"/></name></name> <operator pos:line="103" pos:column="28">=<pos:position pos:line="103" pos:column="29"/></operator> <name><name pos:line="103" pos:column="30">repo<pos:position pos:line="103" pos:column="34"/></name><operator pos:line="103" pos:column="34">-&gt;<pos:position pos:line="103" pos:column="39"/></operator><name pos:line="103" pos:column="36">locks<pos:position pos:line="103" pos:column="41"/></name></name></expr>;<pos:position pos:line="103" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="104" pos:column="17">repo<pos:position pos:line="104" pos:column="21"/></name><operator pos:line="104" pos:column="21">-&gt;<pos:position pos:line="104" pos:column="26"/></operator><name pos:line="104" pos:column="23">locks<pos:position pos:line="104" pos:column="28"/></name></name> <operator pos:line="104" pos:column="29">=<pos:position pos:line="104" pos:column="30"/></operator> <name pos:line="104" pos:column="31">lock<pos:position pos:line="104" pos:column="35"/></name></expr>;<pos:position pos:line="104" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="105" pos:column="10"/></block></else></if>

	<return pos:line="107" pos:column="9">return <expr><name pos:line="107" pos:column="16">lock<pos:position pos:line="107" pos:column="20"/></name></expr>;<pos:position pos:line="107" pos:column="21"/></return>
}<pos:position pos:line="108" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5675_git-2.12.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">handle_deletes<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">void<pos:position pos:line="1" pos:column="32"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
	<for pos:line="4" pos:column="9">for <control pos:line="4" pos:column="13">(<init><expr><name pos:line="4" pos:column="14">i<pos:position pos:line="4" pos:column="15"/></name> <operator pos:line="4" pos:column="16">=<pos:position pos:line="4" pos:column="17"/></operator> <literal type="number" pos:line="4" pos:column="18">0<pos:position pos:line="4" pos:column="19"/></literal></expr>;<pos:position pos:line="4" pos:column="20"/></init> <condition><expr><name pos:line="4" pos:column="21">i<pos:position pos:line="4" pos:column="22"/></name> <operator pos:line="4" pos:column="23">&lt;<pos:position pos:line="4" pos:column="27"/></operator> <name pos:line="4" pos:column="25">refspecs_nr<pos:position pos:line="4" pos:column="36"/></name></expr>;<pos:position pos:line="4" pos:column="37"/></condition> <incr><expr><name pos:line="4" pos:column="38">i<pos:position pos:line="4" pos:column="39"/></name><operator pos:line="4" pos:column="39">++<pos:position pos:line="4" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="4" pos:column="42"/></control> <block pos:line="4" pos:column="43">{
		<decl_stmt><decl><type><name><name pos:line="5" pos:column="17">struct<pos:position pos:line="5" pos:column="23"/></name> <name pos:line="5" pos:column="24">refspec<pos:position pos:line="5" pos:column="31"/></name></name> <modifier pos:line="5" pos:column="32">*<pos:position pos:line="5" pos:column="33"/></modifier></type><name pos:line="5" pos:column="33">refspec<pos:position pos:line="5" pos:column="40"/></name> <init pos:line="5" pos:column="41">= <expr><operator pos:line="5" pos:column="43">&amp;<pos:position pos:line="5" pos:column="48"/></operator><name><name pos:line="5" pos:column="44">refspecs<pos:position pos:line="5" pos:column="52"/></name><index pos:line="5" pos:column="52">[<expr><name pos:line="5" pos:column="53">i<pos:position pos:line="5" pos:column="54"/></name></expr>]<pos:position pos:line="5" pos:column="55"/></index></name></expr></init></decl>;<pos:position pos:line="5" pos:column="56"/></decl_stmt>
		<if pos:line="6" pos:column="17">if <condition pos:line="6" pos:column="20">(<expr><operator pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></operator><name><name pos:line="6" pos:column="22">refspec<pos:position pos:line="6" pos:column="29"/></name><operator pos:line="6" pos:column="29">-&gt;<pos:position pos:line="6" pos:column="34"/></operator><name pos:line="6" pos:column="31">src<pos:position pos:line="6" pos:column="34"/></name></name></expr>)<pos:position pos:line="6" pos:column="35"/></condition><then pos:line="6" pos:column="35">
			<block type="pseudo"><continue pos:line="7" pos:column="25">continue;<pos:position pos:line="7" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><call><name pos:line="9" pos:column="17">printf<pos:position pos:line="9" pos:column="23"/></name><argument_list pos:line="9" pos:column="23">(<argument><expr><literal type="string" pos:line="9" pos:column="24">"reset %s\nfrom %s\n\n"<pos:position pos:line="9" pos:column="47"/></literal></expr></argument>,
				<argument><expr><name><name pos:line="10" pos:column="33">refspec<pos:position pos:line="10" pos:column="40"/></name><operator pos:line="10" pos:column="40">-&gt;<pos:position pos:line="10" pos:column="45"/></operator><name pos:line="10" pos:column="42">dst<pos:position pos:line="10" pos:column="45"/></name></name></expr></argument>, <argument><expr><call><name pos:line="10" pos:column="47">sha1_to_hex<pos:position pos:line="10" pos:column="58"/></name><argument_list pos:line="10" pos:column="58">(<argument><expr><name pos:line="10" pos:column="59">null_sha1<pos:position pos:line="10" pos:column="68"/></name></expr></argument>)<pos:position pos:line="10" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="71"/></expr_stmt>
	}<pos:position pos:line="11" pos:column="10"/></block></for>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

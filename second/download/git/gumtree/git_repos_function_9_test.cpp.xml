<function xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position"><type><name><name pos:line="136" pos:column="1">struct<pos:position pos:line="136" pos:column="7"/></name> <name pos:line="136" pos:column="8">commit_graft<pos:position pos:line="136" pos:column="20"/></name></name> <modifier pos:line="136" pos:column="21">*<pos:position pos:line="136" pos:column="22"/></modifier></type><name pos:line="136" pos:column="22">read_graft_line<pos:position pos:line="136" pos:column="37"/></name><parameter_list pos:line="136" pos:column="37">(<parameter><decl><type><name pos:line="136" pos:column="38">char<pos:position pos:line="136" pos:column="42"/></name> <modifier pos:line="136" pos:column="43">*<pos:position pos:line="136" pos:column="44"/></modifier></type><name pos:line="136" pos:column="44">buf<pos:position pos:line="136" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="136" pos:column="49">int<pos:position pos:line="136" pos:column="52"/></name></type> <name pos:line="136" pos:column="53">len<pos:position pos:line="136" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="136" pos:column="57"/></parameter_list>
<block pos:line="137" pos:column="1">{
	<comment type="block" pos:line="138" pos:column="9">/* The format is just "Commit Parent1 Parent2 ...\n" */</comment>
	<decl_stmt><decl><type><name pos:line="139" pos:column="9">int<pos:position pos:line="139" pos:column="12"/></name></type> <name pos:line="139" pos:column="13">i<pos:position pos:line="139" pos:column="14"/></name></decl>;<pos:position pos:line="139" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="140" pos:column="9">struct<pos:position pos:line="140" pos:column="15"/></name> <name pos:line="140" pos:column="16">commit_graft<pos:position pos:line="140" pos:column="28"/></name></name> <modifier pos:line="140" pos:column="29">*<pos:position pos:line="140" pos:column="30"/></modifier></type><name pos:line="140" pos:column="30">graft<pos:position pos:line="140" pos:column="35"/></name> <init pos:line="140" pos:column="36">= <expr><name pos:line="140" pos:column="38">NULL<pos:position pos:line="140" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="140" pos:column="43"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="141" pos:column="9">const<pos:position pos:line="141" pos:column="14"/></specifier> <name pos:line="141" pos:column="15">int<pos:position pos:line="141" pos:column="18"/></name></type> <name pos:line="141" pos:column="19">entry_size<pos:position pos:line="141" pos:column="29"/></name> <init pos:line="141" pos:column="30">= <expr><name pos:line="141" pos:column="32">GIT_SHA1_HEXSZ<pos:position pos:line="141" pos:column="46"/></name> <operator pos:line="141" pos:column="47">+<pos:position pos:line="141" pos:column="48"/></operator> <literal type="number" pos:line="141" pos:column="49">1<pos:position pos:line="141" pos:column="50"/></literal></expr></init></decl>;<pos:position pos:line="141" pos:column="51"/></decl_stmt>

	<while pos:line="143" pos:column="9">while <condition pos:line="143" pos:column="15">(<expr><name pos:line="143" pos:column="16">len<pos:position pos:line="143" pos:column="19"/></name> <operator pos:line="143" pos:column="20">&amp;&amp;<pos:position pos:line="143" pos:column="30"/></operator> <call><name pos:line="143" pos:column="23">isspace<pos:position pos:line="143" pos:column="30"/></name><argument_list pos:line="143" pos:column="30">(<argument><expr><name><name pos:line="143" pos:column="31">buf<pos:position pos:line="143" pos:column="34"/></name><index pos:line="143" pos:column="34">[<expr><name pos:line="143" pos:column="35">len<pos:position pos:line="143" pos:column="38"/></name><operator pos:line="143" pos:column="38">-<pos:position pos:line="143" pos:column="39"/></operator><literal type="number" pos:line="143" pos:column="39">1<pos:position pos:line="143" pos:column="40"/></literal></expr>]<pos:position pos:line="143" pos:column="41"/></index></name></expr></argument>)<pos:position pos:line="143" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="143" pos:column="43"/></condition>
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="144" pos:column="17">buf<pos:position pos:line="144" pos:column="20"/></name><index pos:line="144" pos:column="20">[<expr><operator pos:line="144" pos:column="21">--<pos:position pos:line="144" pos:column="23"/></operator><name pos:line="144" pos:column="23">len<pos:position pos:line="144" pos:column="26"/></name></expr>]<pos:position pos:line="144" pos:column="27"/></index></name> <operator pos:line="144" pos:column="28">=<pos:position pos:line="144" pos:column="29"/></operator> <literal type="char" pos:line="144" pos:column="30">'\0'<pos:position pos:line="144" pos:column="34"/></literal></expr>;<pos:position pos:line="144" pos:column="35"/></expr_stmt></block></while>
	<if pos:line="145" pos:column="9">if <condition pos:line="145" pos:column="12">(<expr><name><name pos:line="145" pos:column="13">buf<pos:position pos:line="145" pos:column="16"/></name><index pos:line="145" pos:column="16">[<expr><literal type="number" pos:line="145" pos:column="17">0<pos:position pos:line="145" pos:column="18"/></literal></expr>]<pos:position pos:line="145" pos:column="19"/></index></name> <operator pos:line="145" pos:column="20">==<pos:position pos:line="145" pos:column="22"/></operator> <literal type="char" pos:line="145" pos:column="23">'#'<pos:position pos:line="145" pos:column="26"/></literal> <operator pos:line="145" pos:column="27">||<pos:position pos:line="145" pos:column="29"/></operator> <name><name pos:line="145" pos:column="30">buf<pos:position pos:line="145" pos:column="33"/></name><index pos:line="145" pos:column="33">[<expr><literal type="number" pos:line="145" pos:column="34">0<pos:position pos:line="145" pos:column="35"/></literal></expr>]<pos:position pos:line="145" pos:column="36"/></index></name> <operator pos:line="145" pos:column="37">==<pos:position pos:line="145" pos:column="39"/></operator> <literal type="char" pos:line="145" pos:column="40">'\0'<pos:position pos:line="145" pos:column="44"/></literal></expr>)<pos:position pos:line="145" pos:column="45"/></condition><then pos:line="145" pos:column="45">
		<block type="pseudo"><return pos:line="146" pos:column="17">return <expr><name pos:line="146" pos:column="24">NULL<pos:position pos:line="146" pos:column="28"/></name></expr>;<pos:position pos:line="146" pos:column="29"/></return></block></then></if>
	<if pos:line="147" pos:column="9">if <condition pos:line="147" pos:column="12">(<expr><operator pos:line="147" pos:column="13">(<pos:position pos:line="147" pos:column="14"/></operator><name pos:line="147" pos:column="14">len<pos:position pos:line="147" pos:column="17"/></name> <operator pos:line="147" pos:column="18">+<pos:position pos:line="147" pos:column="19"/></operator> <literal type="number" pos:line="147" pos:column="20">1<pos:position pos:line="147" pos:column="21"/></literal><operator pos:line="147" pos:column="21">)<pos:position pos:line="147" pos:column="22"/></operator> <operator pos:line="147" pos:column="23">%<pos:position pos:line="147" pos:column="24"/></operator> <name pos:line="147" pos:column="25">entry_size<pos:position pos:line="147" pos:column="35"/></name></expr>)<pos:position pos:line="147" pos:column="36"/></condition><then pos:line="147" pos:column="36">
		<block type="pseudo"><goto pos:line="148" pos:column="17">goto <name pos:line="148" pos:column="22">bad_graft_data<pos:position pos:line="148" pos:column="36"/></name>;<pos:position pos:line="148" pos:column="37"/></goto></block></then></if>
	<expr_stmt><expr><name pos:line="149" pos:column="9">i<pos:position pos:line="149" pos:column="10"/></name> <operator pos:line="149" pos:column="11">=<pos:position pos:line="149" pos:column="12"/></operator> <operator pos:line="149" pos:column="13">(<pos:position pos:line="149" pos:column="14"/></operator><name pos:line="149" pos:column="14">len<pos:position pos:line="149" pos:column="17"/></name> <operator pos:line="149" pos:column="18">+<pos:position pos:line="149" pos:column="19"/></operator> <literal type="number" pos:line="149" pos:column="20">1<pos:position pos:line="149" pos:column="21"/></literal><operator pos:line="149" pos:column="21">)<pos:position pos:line="149" pos:column="22"/></operator> <operator pos:line="149" pos:column="23">/<pos:position pos:line="149" pos:column="24"/></operator> <name pos:line="149" pos:column="25">entry_size<pos:position pos:line="149" pos:column="35"/></name> <operator pos:line="149" pos:column="36">-<pos:position pos:line="149" pos:column="37"/></operator> <literal type="number" pos:line="149" pos:column="38">1<pos:position pos:line="149" pos:column="39"/></literal></expr>;<pos:position pos:line="149" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><name pos:line="150" pos:column="9">graft<pos:position pos:line="150" pos:column="14"/></name> <operator pos:line="150" pos:column="15">=<pos:position pos:line="150" pos:column="16"/></operator> <call><name pos:line="150" pos:column="17">xmalloc<pos:position pos:line="150" pos:column="24"/></name><argument_list pos:line="150" pos:column="24">(<argument><expr><sizeof pos:line="150" pos:column="25">sizeof<argument_list pos:line="150" pos:column="31">(<argument><expr><operator pos:line="150" pos:column="32">*<pos:position pos:line="150" pos:column="33"/></operator><name pos:line="150" pos:column="33">graft<pos:position pos:line="150" pos:column="38"/></name></expr></argument>)<pos:position pos:line="150" pos:column="39"/></argument_list></sizeof> <operator pos:line="150" pos:column="40">+<pos:position pos:line="150" pos:column="41"/></operator> <name pos:line="150" pos:column="42">GIT_SHA1_RAWSZ<pos:position pos:line="150" pos:column="56"/></name> <operator pos:line="150" pos:column="57">*<pos:position pos:line="150" pos:column="58"/></operator> <name pos:line="150" pos:column="59">i<pos:position pos:line="150" pos:column="60"/></name></expr></argument>)<pos:position pos:line="150" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="62"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="151" pos:column="9">graft<pos:position pos:line="151" pos:column="14"/></name><operator pos:line="151" pos:column="14">-&gt;<pos:position pos:line="151" pos:column="19"/></operator><name pos:line="151" pos:column="16">nr_parent<pos:position pos:line="151" pos:column="25"/></name></name> <operator pos:line="151" pos:column="26">=<pos:position pos:line="151" pos:column="27"/></operator> <name pos:line="151" pos:column="28">i<pos:position pos:line="151" pos:column="29"/></name></expr>;<pos:position pos:line="151" pos:column="30"/></expr_stmt>
	<if pos:line="152" pos:column="9">if <condition pos:line="152" pos:column="12">(<expr><call><name pos:line="152" pos:column="13">get_oid_hex<pos:position pos:line="152" pos:column="24"/></name><argument_list pos:line="152" pos:column="24">(<argument><expr><name pos:line="152" pos:column="25">buf<pos:position pos:line="152" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="152" pos:column="30">&amp;<pos:position pos:line="152" pos:column="35"/></operator><name><name pos:line="152" pos:column="31">graft<pos:position pos:line="152" pos:column="36"/></name><operator pos:line="152" pos:column="36">-&gt;<pos:position pos:line="152" pos:column="41"/></operator><name pos:line="152" pos:column="38">oid<pos:position pos:line="152" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="152" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="152" pos:column="43"/></condition><then pos:line="152" pos:column="43">
		<block type="pseudo"><goto pos:line="153" pos:column="17">goto <name pos:line="153" pos:column="22">bad_graft_data<pos:position pos:line="153" pos:column="36"/></name>;<pos:position pos:line="153" pos:column="37"/></goto></block></then></if>
	<for pos:line="154" pos:column="9">for <control pos:line="154" pos:column="13">(<init><expr><name pos:line="154" pos:column="14">i<pos:position pos:line="154" pos:column="15"/></name> <operator pos:line="154" pos:column="16">=<pos:position pos:line="154" pos:column="17"/></operator> <name pos:line="154" pos:column="18">GIT_SHA1_HEXSZ<pos:position pos:line="154" pos:column="32"/></name></expr>;<pos:position pos:line="154" pos:column="33"/></init> <condition><expr><name pos:line="154" pos:column="34">i<pos:position pos:line="154" pos:column="35"/></name> <operator pos:line="154" pos:column="36">&lt;<pos:position pos:line="154" pos:column="40"/></operator> <name pos:line="154" pos:column="38">len<pos:position pos:line="154" pos:column="41"/></name></expr>;<pos:position pos:line="154" pos:column="42"/></condition> <incr><expr><name pos:line="154" pos:column="43">i<pos:position pos:line="154" pos:column="44"/></name> <operator pos:line="154" pos:column="45">+=<pos:position pos:line="154" pos:column="47"/></operator> <name pos:line="154" pos:column="48">entry_size<pos:position pos:line="154" pos:column="58"/></name></expr></incr>)<pos:position pos:line="154" pos:column="59"/></control> <block pos:line="154" pos:column="60">{
		<if pos:line="155" pos:column="17">if <condition pos:line="155" pos:column="20">(<expr><name><name pos:line="155" pos:column="21">buf<pos:position pos:line="155" pos:column="24"/></name><index pos:line="155" pos:column="24">[<expr><name pos:line="155" pos:column="25">i<pos:position pos:line="155" pos:column="26"/></name></expr>]<pos:position pos:line="155" pos:column="27"/></index></name> <operator pos:line="155" pos:column="28">!=<pos:position pos:line="155" pos:column="30"/></operator> <literal type="char" pos:line="155" pos:column="31">' '<pos:position pos:line="155" pos:column="34"/></literal></expr>)<pos:position pos:line="155" pos:column="35"/></condition><then pos:line="155" pos:column="35">
			<block type="pseudo"><goto pos:line="156" pos:column="25">goto <name pos:line="156" pos:column="30">bad_graft_data<pos:position pos:line="156" pos:column="44"/></name>;<pos:position pos:line="156" pos:column="45"/></goto></block></then></if>
		<if pos:line="157" pos:column="17">if <condition pos:line="157" pos:column="20">(<expr><call><name pos:line="157" pos:column="21">get_sha1_hex<pos:position pos:line="157" pos:column="33"/></name><argument_list pos:line="157" pos:column="33">(<argument><expr><name pos:line="157" pos:column="34">buf<pos:position pos:line="157" pos:column="37"/></name> <operator pos:line="157" pos:column="38">+<pos:position pos:line="157" pos:column="39"/></operator> <name pos:line="157" pos:column="40">i<pos:position pos:line="157" pos:column="41"/></name> <operator pos:line="157" pos:column="42">+<pos:position pos:line="157" pos:column="43"/></operator> <literal type="number" pos:line="157" pos:column="44">1<pos:position pos:line="157" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="157" pos:column="47">graft<pos:position pos:line="157" pos:column="52"/></name><operator pos:line="157" pos:column="52">-&gt;<pos:position pos:line="157" pos:column="57"/></operator><name pos:line="157" pos:column="54">parent<pos:position pos:line="157" pos:column="60"/></name><index pos:line="157" pos:column="60">[<expr><name pos:line="157" pos:column="61">i<pos:position pos:line="157" pos:column="62"/></name><operator pos:line="157" pos:column="62">/<pos:position pos:line="157" pos:column="63"/></operator><name pos:line="157" pos:column="63">entry_size<pos:position pos:line="157" pos:column="73"/></name></expr>]<pos:position pos:line="157" pos:column="74"/></index></name><operator pos:line="157" pos:column="74">.<pos:position pos:line="157" pos:column="75"/></operator><name pos:line="157" pos:column="75">hash<pos:position pos:line="157" pos:column="79"/></name></expr></argument>)<pos:position pos:line="157" pos:column="80"/></argument_list></call></expr>)<pos:position pos:line="157" pos:column="81"/></condition><then pos:line="157" pos:column="81">
			<block type="pseudo"><goto pos:line="158" pos:column="25">goto <name pos:line="158" pos:column="30">bad_graft_data<pos:position pos:line="158" pos:column="44"/></name>;<pos:position pos:line="158" pos:column="45"/></goto></block></then></if>
	}<pos:position pos:line="159" pos:column="10"/></block></for>
	<return pos:line="160" pos:column="9">return <expr><name pos:line="160" pos:column="16">graft<pos:position pos:line="160" pos:column="21"/></name></expr>;<pos:position pos:line="160" pos:column="22"/></return>

<label><name pos:line="162" pos:column="1">bad_graft_data<pos:position pos:line="162" pos:column="15"/></name>:<pos:position pos:line="162" pos:column="16"/></label>
	<expr_stmt><expr><call><name pos:line="163" pos:column="9">error<pos:position pos:line="163" pos:column="14"/></name><argument_list pos:line="163" pos:column="14">(<argument><expr><literal type="string" pos:line="163" pos:column="15">"bad graft data: %s"<pos:position pos:line="163" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="163" pos:column="37">buf<pos:position pos:line="163" pos:column="40"/></name></expr></argument>)<pos:position pos:line="163" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="164" pos:column="9">free<pos:position pos:line="164" pos:column="13"/></name><argument_list pos:line="164" pos:column="13">(<argument><expr><name pos:line="164" pos:column="14">graft<pos:position pos:line="164" pos:column="19"/></name></expr></argument>)<pos:position pos:line="164" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="21"/></expr_stmt>
	<return pos:line="165" pos:column="9">return <expr><name pos:line="165" pos:column="16">NULL<pos:position pos:line="165" pos:column="20"/></name></expr>;<pos:position pos:line="165" pos:column="21"/></return>
}<pos:position pos:line="166" pos:column="2"/></block></function>


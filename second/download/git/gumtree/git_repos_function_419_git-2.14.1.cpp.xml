<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_419_git-2.14.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">credential_from_url<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name><name pos:line="1" pos:column="26">struct<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">credential<pos:position pos:line="1" pos:column="43"/></name></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">c<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="48">const<pos:position pos:line="1" pos:column="53"/></specifier> <name pos:line="1" pos:column="54">char<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">url<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">at<pos:position pos:line="3" pos:column="23"/></name></decl>, <modifier pos:line="3" pos:column="25">*<pos:position pos:line="3" pos:column="26"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="26">colon<pos:position pos:line="3" pos:column="31"/></name></decl>, <modifier pos:line="3" pos:column="33">*<pos:position pos:line="3" pos:column="34"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="34">cp<pos:position pos:line="3" pos:column="36"/></name></decl>, <modifier pos:line="3" pos:column="38">*<pos:position pos:line="3" pos:column="39"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="39">slash<pos:position pos:line="3" pos:column="44"/></name></decl>, <modifier pos:line="3" pos:column="46">*<pos:position pos:line="3" pos:column="47"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="47">host<pos:position pos:line="3" pos:column="51"/></name></decl>, <modifier pos:line="3" pos:column="53">*<pos:position pos:line="3" pos:column="54"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="54">proto_end<pos:position pos:line="3" pos:column="63"/></name></decl>;<pos:position pos:line="3" pos:column="64"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="5" pos:column="9">credential_clear<pos:position pos:line="5" pos:column="25"/></name><argument_list pos:line="5" pos:column="25">(<argument><expr><name pos:line="5" pos:column="26">c<pos:position pos:line="5" pos:column="27"/></name></expr></argument>)<pos:position pos:line="5" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="29"/></expr_stmt>

	<comment type="block" pos:line="7" pos:column="9">/*
	 * Match one of:
	 *   (1) proto://&lt;host&gt;/...
	 *   (2) proto://&lt;user&gt;@&lt;host&gt;/...
	 *   (3) proto://&lt;user&gt;:&lt;pass&gt;@&lt;host&gt;/...
	 */</comment>
	<expr_stmt><expr><name pos:line="13" pos:column="9">proto_end<pos:position pos:line="13" pos:column="18"/></name> <operator pos:line="13" pos:column="19">=<pos:position pos:line="13" pos:column="20"/></operator> <call><name pos:line="13" pos:column="21">strstr<pos:position pos:line="13" pos:column="27"/></name><argument_list pos:line="13" pos:column="27">(<argument><expr><name pos:line="13" pos:column="28">url<pos:position pos:line="13" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="33">"://"<pos:position pos:line="13" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="40"/></expr_stmt>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">!<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="14">proto_end<pos:position pos:line="14" pos:column="23"/></name></expr>)<pos:position pos:line="14" pos:column="24"/></condition><then pos:line="14" pos:column="24">
		<block type="pseudo"><return pos:line="15" pos:column="17">return;<pos:position pos:line="15" pos:column="24"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="16" pos:column="9">cp<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">=<pos:position pos:line="16" pos:column="13"/></operator> <name pos:line="16" pos:column="14">proto_end<pos:position pos:line="16" pos:column="23"/></name> <operator pos:line="16" pos:column="24">+<pos:position pos:line="16" pos:column="25"/></operator> <literal type="number" pos:line="16" pos:column="26">3<pos:position pos:line="16" pos:column="27"/></literal></expr>;<pos:position pos:line="16" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><name pos:line="17" pos:column="9">at<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">=<pos:position pos:line="17" pos:column="13"/></operator> <call><name pos:line="17" pos:column="14">strchr<pos:position pos:line="17" pos:column="20"/></name><argument_list pos:line="17" pos:column="20">(<argument><expr><name pos:line="17" pos:column="21">cp<pos:position pos:line="17" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="17" pos:column="25">'@'<pos:position pos:line="17" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name pos:line="18" pos:column="9">colon<pos:position pos:line="18" pos:column="14"/></name> <operator pos:line="18" pos:column="15">=<pos:position pos:line="18" pos:column="16"/></operator> <call><name pos:line="18" pos:column="17">strchr<pos:position pos:line="18" pos:column="23"/></name><argument_list pos:line="18" pos:column="23">(<argument><expr><name pos:line="18" pos:column="24">cp<pos:position pos:line="18" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="18" pos:column="28">':'<pos:position pos:line="18" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name pos:line="19" pos:column="9">slash<pos:position pos:line="19" pos:column="14"/></name> <operator pos:line="19" pos:column="15">=<pos:position pos:line="19" pos:column="16"/></operator> <call><name pos:line="19" pos:column="17">strchrnul<pos:position pos:line="19" pos:column="26"/></name><argument_list pos:line="19" pos:column="26">(<argument><expr><name pos:line="19" pos:column="27">cp<pos:position pos:line="19" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="19" pos:column="31">'/'<pos:position pos:line="19" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="36"/></expr_stmt>

	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><operator pos:line="21" pos:column="13">!<pos:position pos:line="21" pos:column="14"/></operator><name pos:line="21" pos:column="14">at<pos:position pos:line="21" pos:column="16"/></name> <operator pos:line="21" pos:column="17">||<pos:position pos:line="21" pos:column="19"/></operator> <name pos:line="21" pos:column="20">slash<pos:position pos:line="21" pos:column="25"/></name> <operator pos:line="21" pos:column="26">&lt;=<pos:position pos:line="21" pos:column="31"/></operator> <name pos:line="21" pos:column="29">at<pos:position pos:line="21" pos:column="31"/></name></expr>)<pos:position pos:line="21" pos:column="32"/></condition><then pos:line="21" pos:column="32"> <block pos:line="21" pos:column="33">{
		<comment type="block" pos:line="22" pos:column="17">/* Case (1) */</comment>
		<expr_stmt><expr><name pos:line="23" pos:column="17">host<pos:position pos:line="23" pos:column="21"/></name> <operator pos:line="23" pos:column="22">=<pos:position pos:line="23" pos:column="23"/></operator> <name pos:line="23" pos:column="24">cp<pos:position pos:line="23" pos:column="26"/></name></expr>;<pos:position pos:line="23" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="24" pos:column="10"/></block></then>
	<elseif pos:line="25" pos:column="9">else <if pos:line="25" pos:column="14">if <condition pos:line="25" pos:column="17">(<expr><operator pos:line="25" pos:column="18">!<pos:position pos:line="25" pos:column="19"/></operator><name pos:line="25" pos:column="19">colon<pos:position pos:line="25" pos:column="24"/></name> <operator pos:line="25" pos:column="25">||<pos:position pos:line="25" pos:column="27"/></operator> <name pos:line="25" pos:column="28">at<pos:position pos:line="25" pos:column="30"/></name> <operator pos:line="25" pos:column="31">&lt;=<pos:position pos:line="25" pos:column="36"/></operator> <name pos:line="25" pos:column="34">colon<pos:position pos:line="25" pos:column="39"/></name></expr>)<pos:position pos:line="25" pos:column="40"/></condition><then pos:line="25" pos:column="40"> <block pos:line="25" pos:column="41">{
		<comment type="block" pos:line="26" pos:column="17">/* Case (2) */</comment>
		<expr_stmt><expr><name><name pos:line="27" pos:column="17">c<pos:position pos:line="27" pos:column="18"/></name><operator pos:line="27" pos:column="18">-&gt;<pos:position pos:line="27" pos:column="23"/></operator><name pos:line="27" pos:column="20">username<pos:position pos:line="27" pos:column="28"/></name></name> <operator pos:line="27" pos:column="29">=<pos:position pos:line="27" pos:column="30"/></operator> <call><name pos:line="27" pos:column="31">url_decode_mem<pos:position pos:line="27" pos:column="45"/></name><argument_list pos:line="27" pos:column="45">(<argument><expr><name pos:line="27" pos:column="46">cp<pos:position pos:line="27" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="50">at<pos:position pos:line="27" pos:column="52"/></name> <operator pos:line="27" pos:column="53">-<pos:position pos:line="27" pos:column="54"/></operator> <name pos:line="27" pos:column="55">cp<pos:position pos:line="27" pos:column="57"/></name></expr></argument>)<pos:position pos:line="27" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="59"/></expr_stmt>
		<expr_stmt><expr><name pos:line="28" pos:column="17">host<pos:position pos:line="28" pos:column="21"/></name> <operator pos:line="28" pos:column="22">=<pos:position pos:line="28" pos:column="23"/></operator> <name pos:line="28" pos:column="24">at<pos:position pos:line="28" pos:column="26"/></name> <operator pos:line="28" pos:column="27">+<pos:position pos:line="28" pos:column="28"/></operator> <literal type="number" pos:line="28" pos:column="29">1<pos:position pos:line="28" pos:column="30"/></literal></expr>;<pos:position pos:line="28" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="29" pos:column="10"/></block></then></if></elseif> <else pos:line="29" pos:column="11">else <block pos:line="29" pos:column="16">{
		<comment type="block" pos:line="30" pos:column="17">/* Case (3) */</comment>
		<expr_stmt><expr><name><name pos:line="31" pos:column="17">c<pos:position pos:line="31" pos:column="18"/></name><operator pos:line="31" pos:column="18">-&gt;<pos:position pos:line="31" pos:column="23"/></operator><name pos:line="31" pos:column="20">username<pos:position pos:line="31" pos:column="28"/></name></name> <operator pos:line="31" pos:column="29">=<pos:position pos:line="31" pos:column="30"/></operator> <call><name pos:line="31" pos:column="31">url_decode_mem<pos:position pos:line="31" pos:column="45"/></name><argument_list pos:line="31" pos:column="45">(<argument><expr><name pos:line="31" pos:column="46">cp<pos:position pos:line="31" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="50">colon<pos:position pos:line="31" pos:column="55"/></name> <operator pos:line="31" pos:column="56">-<pos:position pos:line="31" pos:column="57"/></operator> <name pos:line="31" pos:column="58">cp<pos:position pos:line="31" pos:column="60"/></name></expr></argument>)<pos:position pos:line="31" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="62"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="32" pos:column="17">c<pos:position pos:line="32" pos:column="18"/></name><operator pos:line="32" pos:column="18">-&gt;<pos:position pos:line="32" pos:column="23"/></operator><name pos:line="32" pos:column="20">password<pos:position pos:line="32" pos:column="28"/></name></name> <operator pos:line="32" pos:column="29">=<pos:position pos:line="32" pos:column="30"/></operator> <call><name pos:line="32" pos:column="31">url_decode_mem<pos:position pos:line="32" pos:column="45"/></name><argument_list pos:line="32" pos:column="45">(<argument><expr><name pos:line="32" pos:column="46">colon<pos:position pos:line="32" pos:column="51"/></name> <operator pos:line="32" pos:column="52">+<pos:position pos:line="32" pos:column="53"/></operator> <literal type="number" pos:line="32" pos:column="54">1<pos:position pos:line="32" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="57">at<pos:position pos:line="32" pos:column="59"/></name> <operator pos:line="32" pos:column="60">-<pos:position pos:line="32" pos:column="61"/></operator> <operator pos:line="32" pos:column="62">(<pos:position pos:line="32" pos:column="63"/></operator><name pos:line="32" pos:column="63">colon<pos:position pos:line="32" pos:column="68"/></name> <operator pos:line="32" pos:column="69">+<pos:position pos:line="32" pos:column="70"/></operator> <literal type="number" pos:line="32" pos:column="71">1<pos:position pos:line="32" pos:column="72"/></literal><operator pos:line="32" pos:column="72">)<pos:position pos:line="32" pos:column="73"/></operator></expr></argument>)<pos:position pos:line="32" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="75"/></expr_stmt>
		<expr_stmt><expr><name pos:line="33" pos:column="17">host<pos:position pos:line="33" pos:column="21"/></name> <operator pos:line="33" pos:column="22">=<pos:position pos:line="33" pos:column="23"/></operator> <name pos:line="33" pos:column="24">at<pos:position pos:line="33" pos:column="26"/></name> <operator pos:line="33" pos:column="27">+<pos:position pos:line="33" pos:column="28"/></operator> <literal type="number" pos:line="33" pos:column="29">1<pos:position pos:line="33" pos:column="30"/></literal></expr>;<pos:position pos:line="33" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="34" pos:column="10"/></block></else></if>

	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name pos:line="36" pos:column="13">proto_end<pos:position pos:line="36" pos:column="22"/></name> <operator pos:line="36" pos:column="23">-<pos:position pos:line="36" pos:column="24"/></operator> <name pos:line="36" pos:column="25">url<pos:position pos:line="36" pos:column="28"/></name> <operator pos:line="36" pos:column="29">&gt;<pos:position pos:line="36" pos:column="33"/></operator> <literal type="number" pos:line="36" pos:column="31">0<pos:position pos:line="36" pos:column="32"/></literal></expr>)<pos:position pos:line="36" pos:column="33"/></condition><then pos:line="36" pos:column="33">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="37" pos:column="17">c<pos:position pos:line="37" pos:column="18"/></name><operator pos:line="37" pos:column="18">-&gt;<pos:position pos:line="37" pos:column="23"/></operator><name pos:line="37" pos:column="20">protocol<pos:position pos:line="37" pos:column="28"/></name></name> <operator pos:line="37" pos:column="29">=<pos:position pos:line="37" pos:column="30"/></operator> <call><name pos:line="37" pos:column="31">xmemdupz<pos:position pos:line="37" pos:column="39"/></name><argument_list pos:line="37" pos:column="39">(<argument><expr><name pos:line="37" pos:column="40">url<pos:position pos:line="37" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="45">proto_end<pos:position pos:line="37" pos:column="54"/></name> <operator pos:line="37" pos:column="55">-<pos:position pos:line="37" pos:column="56"/></operator> <name pos:line="37" pos:column="57">url<pos:position pos:line="37" pos:column="60"/></name></expr></argument>)<pos:position pos:line="37" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="62"/></expr_stmt></block></then></if>
	<if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><name pos:line="38" pos:column="13">slash<pos:position pos:line="38" pos:column="18"/></name> <operator pos:line="38" pos:column="19">-<pos:position pos:line="38" pos:column="20"/></operator> <name pos:line="38" pos:column="21">host<pos:position pos:line="38" pos:column="25"/></name> <operator pos:line="38" pos:column="26">&gt;<pos:position pos:line="38" pos:column="30"/></operator> <literal type="number" pos:line="38" pos:column="28">0<pos:position pos:line="38" pos:column="29"/></literal></expr>)<pos:position pos:line="38" pos:column="30"/></condition><then pos:line="38" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="39" pos:column="17">c<pos:position pos:line="39" pos:column="18"/></name><operator pos:line="39" pos:column="18">-&gt;<pos:position pos:line="39" pos:column="23"/></operator><name pos:line="39" pos:column="20">host<pos:position pos:line="39" pos:column="24"/></name></name> <operator pos:line="39" pos:column="25">=<pos:position pos:line="39" pos:column="26"/></operator> <call><name pos:line="39" pos:column="27">url_decode_mem<pos:position pos:line="39" pos:column="41"/></name><argument_list pos:line="39" pos:column="41">(<argument><expr><name pos:line="39" pos:column="42">host<pos:position pos:line="39" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="48">slash<pos:position pos:line="39" pos:column="53"/></name> <operator pos:line="39" pos:column="54">-<pos:position pos:line="39" pos:column="55"/></operator> <name pos:line="39" pos:column="56">host<pos:position pos:line="39" pos:column="60"/></name></expr></argument>)<pos:position pos:line="39" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="62"/></expr_stmt></block></then></if>
	<comment type="block" pos:line="40" pos:column="9">/* Trim leading and trailing slashes from path */</comment>
	<while pos:line="41" pos:column="9">while <condition pos:line="41" pos:column="15">(<expr><operator pos:line="41" pos:column="16">*<pos:position pos:line="41" pos:column="17"/></operator><name pos:line="41" pos:column="17">slash<pos:position pos:line="41" pos:column="22"/></name> <operator pos:line="41" pos:column="23">==<pos:position pos:line="41" pos:column="25"/></operator> <literal type="char" pos:line="41" pos:column="26">'/'<pos:position pos:line="41" pos:column="29"/></literal></expr>)<pos:position pos:line="41" pos:column="30"/></condition>
		<block type="pseudo"><expr_stmt><expr><name pos:line="42" pos:column="17">slash<pos:position pos:line="42" pos:column="22"/></name><operator pos:line="42" pos:column="22">++<pos:position pos:line="42" pos:column="24"/></operator></expr>;<pos:position pos:line="42" pos:column="25"/></expr_stmt></block></while>
	<if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><operator pos:line="43" pos:column="13">*<pos:position pos:line="43" pos:column="14"/></operator><name pos:line="43" pos:column="14">slash<pos:position pos:line="43" pos:column="19"/></name></expr>)<pos:position pos:line="43" pos:column="20"/></condition><then pos:line="43" pos:column="20"> <block pos:line="43" pos:column="21">{
		<decl_stmt><decl><type><name pos:line="44" pos:column="17">char<pos:position pos:line="44" pos:column="21"/></name> <modifier pos:line="44" pos:column="22">*<pos:position pos:line="44" pos:column="23"/></modifier></type><name pos:line="44" pos:column="23">p<pos:position pos:line="44" pos:column="24"/></name></decl>;<pos:position pos:line="44" pos:column="25"/></decl_stmt>
		<expr_stmt><expr><name><name pos:line="45" pos:column="17">c<pos:position pos:line="45" pos:column="18"/></name><operator pos:line="45" pos:column="18">-&gt;<pos:position pos:line="45" pos:column="23"/></operator><name pos:line="45" pos:column="20">path<pos:position pos:line="45" pos:column="24"/></name></name> <operator pos:line="45" pos:column="25">=<pos:position pos:line="45" pos:column="26"/></operator> <call><name pos:line="45" pos:column="27">url_decode<pos:position pos:line="45" pos:column="37"/></name><argument_list pos:line="45" pos:column="37">(<argument><expr><name pos:line="45" pos:column="38">slash<pos:position pos:line="45" pos:column="43"/></name></expr></argument>)<pos:position pos:line="45" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><name pos:line="46" pos:column="17">p<pos:position pos:line="46" pos:column="18"/></name> <operator pos:line="46" pos:column="19">=<pos:position pos:line="46" pos:column="20"/></operator> <name><name pos:line="46" pos:column="21">c<pos:position pos:line="46" pos:column="22"/></name><operator pos:line="46" pos:column="22">-&gt;<pos:position pos:line="46" pos:column="27"/></operator><name pos:line="46" pos:column="24">path<pos:position pos:line="46" pos:column="28"/></name></name> <operator pos:line="46" pos:column="29">+<pos:position pos:line="46" pos:column="30"/></operator> <call><name pos:line="46" pos:column="31">strlen<pos:position pos:line="46" pos:column="37"/></name><argument_list pos:line="46" pos:column="37">(<argument><expr><name><name pos:line="46" pos:column="38">c<pos:position pos:line="46" pos:column="39"/></name><operator pos:line="46" pos:column="39">-&gt;<pos:position pos:line="46" pos:column="44"/></operator><name pos:line="46" pos:column="41">path<pos:position pos:line="46" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="46"/></argument_list></call> <operator pos:line="46" pos:column="47">-<pos:position pos:line="46" pos:column="48"/></operator> <literal type="number" pos:line="46" pos:column="49">1<pos:position pos:line="46" pos:column="50"/></literal></expr>;<pos:position pos:line="46" pos:column="51"/></expr_stmt>
		<while pos:line="47" pos:column="17">while <condition pos:line="47" pos:column="23">(<expr><name pos:line="47" pos:column="24">p<pos:position pos:line="47" pos:column="25"/></name> <operator pos:line="47" pos:column="26">&gt;<pos:position pos:line="47" pos:column="30"/></operator> <name><name pos:line="47" pos:column="28">c<pos:position pos:line="47" pos:column="29"/></name><operator pos:line="47" pos:column="29">-&gt;<pos:position pos:line="47" pos:column="34"/></operator><name pos:line="47" pos:column="31">path<pos:position pos:line="47" pos:column="35"/></name></name> <operator pos:line="47" pos:column="36">&amp;&amp;<pos:position pos:line="47" pos:column="46"/></operator> <operator pos:line="47" pos:column="39">*<pos:position pos:line="47" pos:column="40"/></operator><name pos:line="47" pos:column="40">p<pos:position pos:line="47" pos:column="41"/></name> <operator pos:line="47" pos:column="42">==<pos:position pos:line="47" pos:column="44"/></operator> <literal type="char" pos:line="47" pos:column="45">'/'<pos:position pos:line="47" pos:column="48"/></literal></expr>)<pos:position pos:line="47" pos:column="49"/></condition>
			<block type="pseudo"><expr_stmt><expr><operator pos:line="48" pos:column="25">*<pos:position pos:line="48" pos:column="26"/></operator><name pos:line="48" pos:column="26">p<pos:position pos:line="48" pos:column="27"/></name><operator pos:line="48" pos:column="27">--<pos:position pos:line="48" pos:column="29"/></operator> <operator pos:line="48" pos:column="30">=<pos:position pos:line="48" pos:column="31"/></operator> <literal type="char" pos:line="48" pos:column="32">'\0'<pos:position pos:line="48" pos:column="36"/></literal></expr>;<pos:position pos:line="48" pos:column="37"/></expr_stmt></block></while>
	}<pos:position pos:line="49" pos:column="10"/></block></then></if>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

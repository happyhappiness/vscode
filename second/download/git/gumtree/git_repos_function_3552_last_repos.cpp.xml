<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3552_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">schedule_dir_for_removal<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><specifier pos:line="1" pos:column="31">const<pos:position pos:line="1" pos:column="36"/></specifier> <name pos:line="1" pos:column="37">char<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">name<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">int<pos:position pos:line="1" pos:column="52"/></name></type> <name pos:line="1" pos:column="53">len<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">match_len<pos:position pos:line="3" pos:column="22"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="24">last_slash<pos:position pos:line="3" pos:column="34"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="36">i<pos:position pos:line="3" pos:column="37"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="39">previous_slash<pos:position pos:line="3" pos:column="53"/></name></decl>;<pos:position pos:line="3" pos:column="54"/></decl_stmt>

	<expr_stmt><expr><name pos:line="5" pos:column="9">match_len<pos:position pos:line="5" pos:column="18"/></name> <operator pos:line="5" pos:column="19">=<pos:position pos:line="5" pos:column="20"/></operator> <name pos:line="5" pos:column="21">last_slash<pos:position pos:line="5" pos:column="31"/></name> <operator pos:line="5" pos:column="32">=<pos:position pos:line="5" pos:column="33"/></operator> <name pos:line="5" pos:column="34">i<pos:position pos:line="5" pos:column="35"/></name> <operator pos:line="5" pos:column="36">=<pos:position pos:line="5" pos:column="37"/></operator>
		<call><name pos:line="6" pos:column="17">longest_path_match<pos:position pos:line="6" pos:column="35"/></name><argument_list pos:line="6" pos:column="35">(<argument><expr><name pos:line="6" pos:column="36">name<pos:position pos:line="6" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="42">len<pos:position pos:line="6" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="47">removal<pos:position pos:line="6" pos:column="54"/></name><operator pos:line="6" pos:column="54">.<pos:position pos:line="6" pos:column="55"/></operator><name pos:line="6" pos:column="55">buf<pos:position pos:line="6" pos:column="58"/></name></name></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="60">removal<pos:position pos:line="6" pos:column="67"/></name><operator pos:line="6" pos:column="67">.<pos:position pos:line="6" pos:column="68"/></operator><name pos:line="6" pos:column="68">len<pos:position pos:line="6" pos:column="71"/></name></name></expr></argument>,
				   <argument><expr><operator pos:line="7" pos:column="36">&amp;<pos:position pos:line="7" pos:column="41"/></operator><name pos:line="7" pos:column="37">previous_slash<pos:position pos:line="7" pos:column="51"/></name></expr></argument>)<pos:position pos:line="7" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="53"/></expr_stmt>
	<comment type="block" pos:line="8" pos:column="9">/* Find last slash inside 'name' */</comment>
	<while pos:line="9" pos:column="9">while <condition pos:line="9" pos:column="15">(<expr><name pos:line="9" pos:column="16">i<pos:position pos:line="9" pos:column="17"/></name> <operator pos:line="9" pos:column="18">&lt;<pos:position pos:line="9" pos:column="22"/></operator> <name pos:line="9" pos:column="20">len<pos:position pos:line="9" pos:column="23"/></name></expr>)<pos:position pos:line="9" pos:column="24"/></condition> <block pos:line="9" pos:column="25">{
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><name><name pos:line="10" pos:column="21">name<pos:position pos:line="10" pos:column="25"/></name><index pos:line="10" pos:column="25">[<expr><name pos:line="10" pos:column="26">i<pos:position pos:line="10" pos:column="27"/></name></expr>]<pos:position pos:line="10" pos:column="28"/></index></name> <operator pos:line="10" pos:column="29">==<pos:position pos:line="10" pos:column="31"/></operator> <literal type="char" pos:line="10" pos:column="32">'/'<pos:position pos:line="10" pos:column="35"/></literal></expr>)<pos:position pos:line="10" pos:column="36"/></condition><then pos:line="10" pos:column="36">
			<block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="25">last_slash<pos:position pos:line="11" pos:column="35"/></name> <operator pos:line="11" pos:column="36">=<pos:position pos:line="11" pos:column="37"/></operator> <name pos:line="11" pos:column="38">i<pos:position pos:line="11" pos:column="39"/></name></expr>;<pos:position pos:line="11" pos:column="40"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="12" pos:column="17">i<pos:position pos:line="12" pos:column="18"/></name><operator pos:line="12" pos:column="18">++<pos:position pos:line="12" pos:column="20"/></operator></expr>;<pos:position pos:line="12" pos:column="21"/></expr_stmt>
	}<pos:position pos:line="13" pos:column="10"/></block></while>

	<comment type="block" pos:line="15" pos:column="9">/*
	 * If we are about to go down the directory tree, we check if
	 * we must first go upwards the tree, such that we then can
	 * remove possible empty directories as we go upwards.
	 */</comment>
	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name pos:line="20" pos:column="13">match_len<pos:position pos:line="20" pos:column="22"/></name> <operator pos:line="20" pos:column="23">&lt;<pos:position pos:line="20" pos:column="27"/></operator> <name pos:line="20" pos:column="25">last_slash<pos:position pos:line="20" pos:column="35"/></name> <operator pos:line="20" pos:column="36">&amp;&amp;<pos:position pos:line="20" pos:column="46"/></operator> <name pos:line="20" pos:column="39">match_len<pos:position pos:line="20" pos:column="48"/></name> <operator pos:line="20" pos:column="49">&lt;<pos:position pos:line="20" pos:column="53"/></operator> <name><name pos:line="20" pos:column="51">removal<pos:position pos:line="20" pos:column="58"/></name><operator pos:line="20" pos:column="58">.<pos:position pos:line="20" pos:column="59"/></operator><name pos:line="20" pos:column="59">len<pos:position pos:line="20" pos:column="62"/></name></name></expr>)<pos:position pos:line="20" pos:column="63"/></condition><then pos:line="20" pos:column="63">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="17">do_remove_scheduled_dirs<pos:position pos:line="21" pos:column="41"/></name><argument_list pos:line="21" pos:column="41">(<argument><expr><name pos:line="21" pos:column="42">match_len<pos:position pos:line="21" pos:column="51"/></name></expr></argument>)<pos:position pos:line="21" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="53"/></expr_stmt></block></then></if>
	<comment type="block" pos:line="22" pos:column="9">/*
	 * If we go deeper down the directory tree, we only need to
	 * save the new path components as we go down.
	 */</comment>
	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name pos:line="26" pos:column="13">match_len<pos:position pos:line="26" pos:column="22"/></name> <operator pos:line="26" pos:column="23">&lt;<pos:position pos:line="26" pos:column="27"/></operator> <name pos:line="26" pos:column="25">last_slash<pos:position pos:line="26" pos:column="35"/></name></expr>)<pos:position pos:line="26" pos:column="36"/></condition><then pos:line="26" pos:column="36">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="17">strbuf_add<pos:position pos:line="27" pos:column="27"/></name><argument_list pos:line="27" pos:column="27">(<argument><expr><operator pos:line="27" pos:column="28">&amp;<pos:position pos:line="27" pos:column="33"/></operator><name pos:line="27" pos:column="29">removal<pos:position pos:line="27" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="38">&amp;<pos:position pos:line="27" pos:column="43"/></operator><name><name pos:line="27" pos:column="39">name<pos:position pos:line="27" pos:column="43"/></name><index pos:line="27" pos:column="43">[<expr><name pos:line="27" pos:column="44">match_len<pos:position pos:line="27" pos:column="53"/></name></expr>]<pos:position pos:line="27" pos:column="54"/></index></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="56">last_slash<pos:position pos:line="27" pos:column="66"/></name> <operator pos:line="27" pos:column="67">-<pos:position pos:line="27" pos:column="68"/></operator> <name pos:line="27" pos:column="69">match_len<pos:position pos:line="27" pos:column="78"/></name></expr></argument>)<pos:position pos:line="27" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="80"/></expr_stmt></block></then></if>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

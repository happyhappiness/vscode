<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2973_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">read_env_script<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name><name pos:line="1" pos:column="28">struct<pos:position pos:line="1" pos:column="34"/></name> <name pos:line="1" pos:column="35">argv_array<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">env<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">strbuf<pos:position pos:line="3" pos:column="22"/></name></name></type> <name pos:line="3" pos:column="23">script<pos:position pos:line="3" pos:column="29"/></name> <init pos:line="3" pos:column="30">= <expr><name pos:line="3" pos:column="32">STRBUF_INIT<pos:position pos:line="3" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">i<pos:position pos:line="4" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="16">count<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><literal type="number" pos:line="4" pos:column="24">0<pos:position pos:line="4" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">p<pos:position pos:line="5" pos:column="16"/></name></decl>, <modifier pos:line="5" pos:column="18">*<pos:position pos:line="5" pos:column="19"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="19">p2<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><call><name pos:line="7" pos:column="13">strbuf_read_file<pos:position pos:line="7" pos:column="29"/></name><argument_list pos:line="7" pos:column="29">(<argument><expr><operator pos:line="7" pos:column="30">&amp;<pos:position pos:line="7" pos:column="35"/></operator><name pos:line="7" pos:column="31">script<pos:position pos:line="7" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="7" pos:column="39">rebase_path_author_script<pos:position pos:line="7" pos:column="64"/></name><argument_list pos:line="7" pos:column="64">()<pos:position pos:line="7" pos:column="66"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="68">256<pos:position pos:line="7" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="72"/></argument_list></call> <operator pos:line="7" pos:column="73">&lt;=<pos:position pos:line="7" pos:column="78"/></operator> <literal type="number" pos:line="7" pos:column="76">0<pos:position pos:line="7" pos:column="77"/></literal></expr>)<pos:position pos:line="7" pos:column="78"/></condition><then pos:line="7" pos:column="78">
		<block type="pseudo"><return pos:line="8" pos:column="17">return <expr><operator pos:line="8" pos:column="24">-<pos:position pos:line="8" pos:column="25"/></operator><literal type="number" pos:line="8" pos:column="25">1<pos:position pos:line="8" pos:column="26"/></literal></expr>;<pos:position pos:line="8" pos:column="27"/></return></block></then></if>

	<for pos:line="10" pos:column="9">for <control pos:line="10" pos:column="13">(<init><expr><name pos:line="10" pos:column="14">p<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">=<pos:position pos:line="10" pos:column="17"/></operator> <name><name pos:line="10" pos:column="18">script<pos:position pos:line="10" pos:column="24"/></name><operator pos:line="10" pos:column="24">.<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="25">buf<pos:position pos:line="10" pos:column="28"/></name></name></expr>;<pos:position pos:line="10" pos:column="29"/></init> <condition><expr><operator pos:line="10" pos:column="30">*<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="31">p<pos:position pos:line="10" pos:column="32"/></name></expr>;<pos:position pos:line="10" pos:column="33"/></condition> <incr><expr><name pos:line="10" pos:column="34">p<pos:position pos:line="10" pos:column="35"/></name><operator pos:line="10" pos:column="35">++<pos:position pos:line="10" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="10" pos:column="38"/></control>
		<block type="pseudo"><if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><call><name pos:line="11" pos:column="21">skip_prefix<pos:position pos:line="11" pos:column="32"/></name><argument_list pos:line="11" pos:column="32">(<argument><expr><name pos:line="11" pos:column="33">p<pos:position pos:line="11" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="36">"'\\\\''"<pos:position pos:line="11" pos:column="45"/></literal></expr></argument>, <argument><expr><operator pos:line="11" pos:column="47">(<pos:position pos:line="11" pos:column="48"/></operator><specifier pos:line="11" pos:column="48">const<pos:position pos:line="11" pos:column="53"/></specifier> <name pos:line="11" pos:column="54">char<pos:position pos:line="11" pos:column="58"/></name> <operator pos:line="11" pos:column="59">*<pos:position pos:line="11" pos:column="60"/></operator><operator pos:line="11" pos:column="60">*<pos:position pos:line="11" pos:column="61"/></operator><operator pos:line="11" pos:column="61">)<pos:position pos:line="11" pos:column="62"/></operator><operator pos:line="11" pos:column="62">&amp;<pos:position pos:line="11" pos:column="67"/></operator><name pos:line="11" pos:column="63">p2<pos:position pos:line="11" pos:column="65"/></name></expr></argument>)<pos:position pos:line="11" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="67"/></condition><then pos:line="11" pos:column="67">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="25">strbuf_splice<pos:position pos:line="12" pos:column="38"/></name><argument_list pos:line="12" pos:column="38">(<argument><expr><operator pos:line="12" pos:column="39">&amp;<pos:position pos:line="12" pos:column="44"/></operator><name pos:line="12" pos:column="40">script<pos:position pos:line="12" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="48">p<pos:position pos:line="12" pos:column="49"/></name> <operator pos:line="12" pos:column="50">-<pos:position pos:line="12" pos:column="51"/></operator> <name><name pos:line="12" pos:column="52">script<pos:position pos:line="12" pos:column="58"/></name><operator pos:line="12" pos:column="58">.<pos:position pos:line="12" pos:column="59"/></operator><name pos:line="12" pos:column="59">buf<pos:position pos:line="12" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="64">p2<pos:position pos:line="12" pos:column="66"/></name> <operator pos:line="12" pos:column="67">-<pos:position pos:line="12" pos:column="68"/></operator> <name pos:line="12" pos:column="69">p<pos:position pos:line="12" pos:column="70"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="72">"'"<pos:position pos:line="12" pos:column="75"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="77">1<pos:position pos:line="12" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="80"/></expr_stmt></block></then>
		<elseif pos:line="13" pos:column="17">else <if pos:line="13" pos:column="22">if <condition pos:line="13" pos:column="25">(<expr><operator pos:line="13" pos:column="26">*<pos:position pos:line="13" pos:column="27"/></operator><name pos:line="13" pos:column="27">p<pos:position pos:line="13" pos:column="28"/></name> <operator pos:line="13" pos:column="29">==<pos:position pos:line="13" pos:column="31"/></operator> <literal type="char" pos:line="13" pos:column="32">'\''<pos:position pos:line="13" pos:column="36"/></literal></expr>)<pos:position pos:line="13" pos:column="37"/></condition><then pos:line="13" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="25">strbuf_splice<pos:position pos:line="14" pos:column="38"/></name><argument_list pos:line="14" pos:column="38">(<argument><expr><operator pos:line="14" pos:column="39">&amp;<pos:position pos:line="14" pos:column="44"/></operator><name pos:line="14" pos:column="40">script<pos:position pos:line="14" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="48">p<pos:position pos:line="14" pos:column="49"/></name><operator pos:line="14" pos:column="49">--<pos:position pos:line="14" pos:column="51"/></operator> <operator pos:line="14" pos:column="52">-<pos:position pos:line="14" pos:column="53"/></operator> <name><name pos:line="14" pos:column="54">script<pos:position pos:line="14" pos:column="60"/></name><operator pos:line="14" pos:column="60">.<pos:position pos:line="14" pos:column="61"/></operator><name pos:line="14" pos:column="61">buf<pos:position pos:line="14" pos:column="64"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="66">1<pos:position pos:line="14" pos:column="67"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="69">""<pos:position pos:line="14" pos:column="71"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="73">0<pos:position pos:line="14" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="76"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="15" pos:column="17">else <if pos:line="15" pos:column="22">if <condition pos:line="15" pos:column="25">(<expr><operator pos:line="15" pos:column="26">*<pos:position pos:line="15" pos:column="27"/></operator><name pos:line="15" pos:column="27">p<pos:position pos:line="15" pos:column="28"/></name> <operator pos:line="15" pos:column="29">==<pos:position pos:line="15" pos:column="31"/></operator> <literal type="char" pos:line="15" pos:column="32">'\n'<pos:position pos:line="15" pos:column="36"/></literal></expr>)<pos:position pos:line="15" pos:column="37"/></condition><then pos:line="15" pos:column="37"> <block pos:line="15" pos:column="38">{
			<expr_stmt><expr><operator pos:line="16" pos:column="25">*<pos:position pos:line="16" pos:column="26"/></operator><name pos:line="16" pos:column="26">p<pos:position pos:line="16" pos:column="27"/></name> <operator pos:line="16" pos:column="28">=<pos:position pos:line="16" pos:column="29"/></operator> <literal type="char" pos:line="16" pos:column="30">'\0'<pos:position pos:line="16" pos:column="34"/></literal></expr>;<pos:position pos:line="16" pos:column="35"/></expr_stmt>
			<expr_stmt><expr><name pos:line="17" pos:column="25">count<pos:position pos:line="17" pos:column="30"/></name><operator pos:line="17" pos:column="30">++<pos:position pos:line="17" pos:column="32"/></operator></expr>;<pos:position pos:line="17" pos:column="33"/></expr_stmt>
		}<pos:position pos:line="18" pos:column="18"/></block></then></if></elseif></if></block></for>

	<for pos:line="20" pos:column="9">for <control pos:line="20" pos:column="13">(<init><expr><name pos:line="20" pos:column="14">i<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">=<pos:position pos:line="20" pos:column="17"/></operator> <literal type="number" pos:line="20" pos:column="18">0<pos:position pos:line="20" pos:column="19"/></literal></expr><operator pos:line="20" pos:column="19">,<pos:position pos:line="20" pos:column="20"/></operator> <expr><name pos:line="20" pos:column="21">p<pos:position pos:line="20" pos:column="22"/></name> <operator pos:line="20" pos:column="23">=<pos:position pos:line="20" pos:column="24"/></operator> <name><name pos:line="20" pos:column="25">script<pos:position pos:line="20" pos:column="31"/></name><operator pos:line="20" pos:column="31">.<pos:position pos:line="20" pos:column="32"/></operator><name pos:line="20" pos:column="32">buf<pos:position pos:line="20" pos:column="35"/></name></name></expr>;<pos:position pos:line="20" pos:column="36"/></init> <condition><expr><name pos:line="20" pos:column="37">i<pos:position pos:line="20" pos:column="38"/></name> <operator pos:line="20" pos:column="39">&lt;<pos:position pos:line="20" pos:column="43"/></operator> <name pos:line="20" pos:column="41">count<pos:position pos:line="20" pos:column="46"/></name></expr>;<pos:position pos:line="20" pos:column="47"/></condition> <incr><expr><name pos:line="20" pos:column="48">i<pos:position pos:line="20" pos:column="49"/></name><operator pos:line="20" pos:column="49">++<pos:position pos:line="20" pos:column="51"/></operator></expr></incr>)<pos:position pos:line="20" pos:column="52"/></control> <block pos:line="20" pos:column="53">{
		<expr_stmt><expr><call><name pos:line="21" pos:column="17">argv_array_push<pos:position pos:line="21" pos:column="32"/></name><argument_list pos:line="21" pos:column="32">(<argument><expr><name pos:line="21" pos:column="33">env<pos:position pos:line="21" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="38">p<pos:position pos:line="21" pos:column="39"/></name></expr></argument>)<pos:position pos:line="21" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><name pos:line="22" pos:column="17">p<pos:position pos:line="22" pos:column="18"/></name> <operator pos:line="22" pos:column="19">+=<pos:position pos:line="22" pos:column="21"/></operator> <call><name pos:line="22" pos:column="22">strlen<pos:position pos:line="22" pos:column="28"/></name><argument_list pos:line="22" pos:column="28">(<argument><expr><name pos:line="22" pos:column="29">p<pos:position pos:line="22" pos:column="30"/></name></expr></argument>)<pos:position pos:line="22" pos:column="31"/></argument_list></call> <operator pos:line="22" pos:column="32">+<pos:position pos:line="22" pos:column="33"/></operator> <literal type="number" pos:line="22" pos:column="34">1<pos:position pos:line="22" pos:column="35"/></literal></expr>;<pos:position pos:line="22" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="23" pos:column="10"/></block></for>

	<return pos:line="25" pos:column="9">return <expr><literal type="number" pos:line="25" pos:column="16">0<pos:position pos:line="25" pos:column="17"/></literal></expr>;<pos:position pos:line="25" pos:column="18"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

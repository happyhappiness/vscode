<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6873_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">mallinfo<pos:position pos:line="1" pos:column="23"/></name></name></type> <name pos:line="1" pos:column="24">internal_mallinfo<pos:position pos:line="1" pos:column="41"/></name><parameter_list pos:line="1" pos:column="41">(<parameter><decl><type><name pos:line="1" pos:column="42">mstate<pos:position pos:line="1" pos:column="48"/></name></type> <name pos:line="1" pos:column="49">m<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list> <block pos:line="1" pos:column="52">{
  <decl_stmt><decl><type><name><name pos:line="2" pos:column="3">struct<pos:position pos:line="2" pos:column="9"/></name> <name pos:line="2" pos:column="10">mallinfo<pos:position pos:line="2" pos:column="18"/></name></name></type> <name pos:line="2" pos:column="19">nm<pos:position pos:line="2" pos:column="21"/></name> <init pos:line="2" pos:column="22">= <expr><block pos:line="2" pos:column="24">{ <expr><literal type="number" pos:line="2" pos:column="26">0<pos:position pos:line="2" pos:column="27"/></literal></expr>, <expr><literal type="number" pos:line="2" pos:column="29">0<pos:position pos:line="2" pos:column="30"/></literal></expr>, <expr><literal type="number" pos:line="2" pos:column="32">0<pos:position pos:line="2" pos:column="33"/></literal></expr>, <expr><literal type="number" pos:line="2" pos:column="35">0<pos:position pos:line="2" pos:column="36"/></literal></expr>, <expr><literal type="number" pos:line="2" pos:column="38">0<pos:position pos:line="2" pos:column="39"/></literal></expr>, <expr><literal type="number" pos:line="2" pos:column="41">0<pos:position pos:line="2" pos:column="42"/></literal></expr>, <expr><literal type="number" pos:line="2" pos:column="44">0<pos:position pos:line="2" pos:column="45"/></literal></expr>, <expr><literal type="number" pos:line="2" pos:column="47">0<pos:position pos:line="2" pos:column="48"/></literal></expr>, <expr><literal type="number" pos:line="2" pos:column="50">0<pos:position pos:line="2" pos:column="51"/></literal></expr>, <expr><literal type="number" pos:line="2" pos:column="53">0<pos:position pos:line="2" pos:column="54"/></literal></expr> }<pos:position pos:line="2" pos:column="56"/></block></expr></init></decl>;<pos:position pos:line="2" pos:column="57"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="3" pos:column="3">ensure_initialization<pos:position pos:line="3" pos:column="24"/></name><argument_list pos:line="3" pos:column="24">()<pos:position pos:line="3" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="27"/></expr_stmt>
  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><operator pos:line="4" pos:column="7">!<pos:position pos:line="4" pos:column="8"/></operator><call><name pos:line="4" pos:column="8">PREACTION<pos:position pos:line="4" pos:column="17"/></name><argument_list pos:line="4" pos:column="17">(<argument><expr><name pos:line="4" pos:column="18">m<pos:position pos:line="4" pos:column="19"/></name></expr></argument>)<pos:position pos:line="4" pos:column="20"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="21"/></condition><then pos:line="4" pos:column="21"> <block pos:line="4" pos:column="22">{
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">check_malloc_state<pos:position pos:line="5" pos:column="23"/></name><argument_list pos:line="5" pos:column="23">(<argument><expr><name pos:line="5" pos:column="24">m<pos:position pos:line="5" pos:column="25"/></name></expr></argument>)<pos:position pos:line="5" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="27"/></expr_stmt>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><call><name pos:line="6" pos:column="9">is_initialized<pos:position pos:line="6" pos:column="23"/></name><argument_list pos:line="6" pos:column="23">(<argument><expr><name pos:line="6" pos:column="24">m<pos:position pos:line="6" pos:column="25"/></name></expr></argument>)<pos:position pos:line="6" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="27"/></condition><then pos:line="6" pos:column="27"> <block pos:line="6" pos:column="28">{
      <decl_stmt><decl><type><name pos:line="7" pos:column="7">size_t<pos:position pos:line="7" pos:column="13"/></name></type> <name pos:line="7" pos:column="14">nfree<pos:position pos:line="7" pos:column="19"/></name> <init pos:line="7" pos:column="20">= <expr><name pos:line="7" pos:column="22">SIZE_T_ONE<pos:position pos:line="7" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="33"/></decl_stmt> <comment type="block" pos:line="7" pos:column="34">/* top always free */</comment>
      <decl_stmt><decl><type><name pos:line="8" pos:column="7">size_t<pos:position pos:line="8" pos:column="13"/></name></type> <name pos:line="8" pos:column="14">mfree<pos:position pos:line="8" pos:column="19"/></name> <init pos:line="8" pos:column="20">= <expr><name><name pos:line="8" pos:column="22">m<pos:position pos:line="8" pos:column="23"/></name><operator pos:line="8" pos:column="23">-&gt;<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="25">topsize<pos:position pos:line="8" pos:column="32"/></name></name> <operator pos:line="8" pos:column="33">+<pos:position pos:line="8" pos:column="34"/></operator> <name pos:line="8" pos:column="35">TOP_FOOT_SIZE<pos:position pos:line="8" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="49"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="9" pos:column="7">size_t<pos:position pos:line="9" pos:column="13"/></name></type> <name pos:line="9" pos:column="14">sum<pos:position pos:line="9" pos:column="17"/></name> <init pos:line="9" pos:column="18">= <expr><name pos:line="9" pos:column="20">mfree<pos:position pos:line="9" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="26"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="10" pos:column="7">msegmentptr<pos:position pos:line="10" pos:column="18"/></name></type> <name pos:line="10" pos:column="19">s<pos:position pos:line="10" pos:column="20"/></name> <init pos:line="10" pos:column="21">= <expr><operator pos:line="10" pos:column="23">&amp;<pos:position pos:line="10" pos:column="28"/></operator><name><name pos:line="10" pos:column="24">m<pos:position pos:line="10" pos:column="25"/></name><operator pos:line="10" pos:column="25">-&gt;<pos:position pos:line="10" pos:column="30"/></operator><name pos:line="10" pos:column="27">seg<pos:position pos:line="10" pos:column="30"/></name></name></expr></init></decl>;<pos:position pos:line="10" pos:column="31"/></decl_stmt>
      <while pos:line="11" pos:column="7">while <condition pos:line="11" pos:column="13">(<expr><name pos:line="11" pos:column="14">s<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">!=<pos:position pos:line="11" pos:column="18"/></operator> <literal type="number" pos:line="11" pos:column="19">0<pos:position pos:line="11" pos:column="20"/></literal></expr>)<pos:position pos:line="11" pos:column="21"/></condition> <block pos:line="11" pos:column="22">{
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">mchunkptr<pos:position pos:line="12" pos:column="18"/></name></type> <name pos:line="12" pos:column="19">q<pos:position pos:line="12" pos:column="20"/></name> <init pos:line="12" pos:column="21">= <expr><call><name pos:line="12" pos:column="23">align_as_chunk<pos:position pos:line="12" pos:column="37"/></name><argument_list pos:line="12" pos:column="37">(<argument><expr><name><name pos:line="12" pos:column="38">s<pos:position pos:line="12" pos:column="39"/></name><operator pos:line="12" pos:column="39">-&gt;<pos:position pos:line="12" pos:column="44"/></operator><name pos:line="12" pos:column="41">base<pos:position pos:line="12" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="47"/></decl_stmt>
	<while pos:line="13" pos:column="9">while <condition pos:line="13" pos:column="15">(<expr><call><name pos:line="13" pos:column="16">segment_holds<pos:position pos:line="13" pos:column="29"/></name><argument_list pos:line="13" pos:column="29">(<argument><expr><name pos:line="13" pos:column="30">s<pos:position pos:line="13" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="33">q<pos:position pos:line="13" pos:column="34"/></name></expr></argument>)<pos:position pos:line="13" pos:column="35"/></argument_list></call> <operator pos:line="13" pos:column="36">&amp;&amp;<pos:position pos:line="13" pos:column="46"/></operator>
	       <name pos:line="14" pos:column="16">q<pos:position pos:line="14" pos:column="17"/></name> <operator pos:line="14" pos:column="18">!=<pos:position pos:line="14" pos:column="20"/></operator> <name><name pos:line="14" pos:column="21">m<pos:position pos:line="14" pos:column="22"/></name><operator pos:line="14" pos:column="22">-&gt;<pos:position pos:line="14" pos:column="27"/></operator><name pos:line="14" pos:column="24">top<pos:position pos:line="14" pos:column="27"/></name></name> <operator pos:line="14" pos:column="28">&amp;&amp;<pos:position pos:line="14" pos:column="38"/></operator> <name><name pos:line="14" pos:column="31">q<pos:position pos:line="14" pos:column="32"/></name><operator pos:line="14" pos:column="32">-&gt;<pos:position pos:line="14" pos:column="37"/></operator><name pos:line="14" pos:column="34">head<pos:position pos:line="14" pos:column="38"/></name></name> <operator pos:line="14" pos:column="39">!=<pos:position pos:line="14" pos:column="41"/></operator> <name pos:line="14" pos:column="42">FENCEPOST_HEAD<pos:position pos:line="14" pos:column="56"/></name></expr>)<pos:position pos:line="14" pos:column="57"/></condition> <block pos:line="14" pos:column="58">{
	  <decl_stmt><decl><type><name pos:line="15" pos:column="11">size_t<pos:position pos:line="15" pos:column="17"/></name></type> <name pos:line="15" pos:column="18">sz<pos:position pos:line="15" pos:column="20"/></name> <init pos:line="15" pos:column="21">= <expr><call><name pos:line="15" pos:column="23">chunksize<pos:position pos:line="15" pos:column="32"/></name><argument_list pos:line="15" pos:column="32">(<argument><expr><name pos:line="15" pos:column="33">q<pos:position pos:line="15" pos:column="34"/></name></expr></argument>)<pos:position pos:line="15" pos:column="35"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="36"/></decl_stmt>
	  <expr_stmt><expr><name pos:line="16" pos:column="11">sum<pos:position pos:line="16" pos:column="14"/></name> <operator pos:line="16" pos:column="15">+=<pos:position pos:line="16" pos:column="17"/></operator> <name pos:line="16" pos:column="18">sz<pos:position pos:line="16" pos:column="20"/></name></expr>;<pos:position pos:line="16" pos:column="21"/></expr_stmt>
	  <if pos:line="17" pos:column="11">if <condition pos:line="17" pos:column="14">(<expr><operator pos:line="17" pos:column="15">!<pos:position pos:line="17" pos:column="16"/></operator><call><name pos:line="17" pos:column="16">cinuse<pos:position pos:line="17" pos:column="22"/></name><argument_list pos:line="17" pos:column="22">(<argument><expr><name pos:line="17" pos:column="23">q<pos:position pos:line="17" pos:column="24"/></name></expr></argument>)<pos:position pos:line="17" pos:column="25"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="26"/></condition><then pos:line="17" pos:column="26"> <block pos:line="17" pos:column="27">{
	    <expr_stmt><expr><name pos:line="18" pos:column="13">mfree<pos:position pos:line="18" pos:column="18"/></name> <operator pos:line="18" pos:column="19">+=<pos:position pos:line="18" pos:column="21"/></operator> <name pos:line="18" pos:column="22">sz<pos:position pos:line="18" pos:column="24"/></name></expr>;<pos:position pos:line="18" pos:column="25"/></expr_stmt>
	    <expr_stmt><expr><operator pos:line="19" pos:column="13">++<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="15">nfree<pos:position pos:line="19" pos:column="20"/></name></expr>;<pos:position pos:line="19" pos:column="21"/></expr_stmt>
	  }<pos:position pos:line="20" pos:column="12"/></block></then></if>
	  <expr_stmt><expr><name pos:line="21" pos:column="11">q<pos:position pos:line="21" pos:column="12"/></name> <operator pos:line="21" pos:column="13">=<pos:position pos:line="21" pos:column="14"/></operator> <call><name pos:line="21" pos:column="15">next_chunk<pos:position pos:line="21" pos:column="25"/></name><argument_list pos:line="21" pos:column="25">(<argument><expr><name pos:line="21" pos:column="26">q<pos:position pos:line="21" pos:column="27"/></name></expr></argument>)<pos:position pos:line="21" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="29"/></expr_stmt>
	}<pos:position pos:line="22" pos:column="10"/></block></while>
	<expr_stmt><expr><name pos:line="23" pos:column="9">s<pos:position pos:line="23" pos:column="10"/></name> <operator pos:line="23" pos:column="11">=<pos:position pos:line="23" pos:column="12"/></operator> <name><name pos:line="23" pos:column="13">s<pos:position pos:line="23" pos:column="14"/></name><operator pos:line="23" pos:column="14">-&gt;<pos:position pos:line="23" pos:column="19"/></operator><name pos:line="23" pos:column="16">next<pos:position pos:line="23" pos:column="20"/></name></name></expr>;<pos:position pos:line="23" pos:column="21"/></expr_stmt>
      }<pos:position pos:line="24" pos:column="8"/></block></while>

      <expr_stmt><expr><name><name pos:line="26" pos:column="7">nm<pos:position pos:line="26" pos:column="9"/></name><operator pos:line="26" pos:column="9">.<pos:position pos:line="26" pos:column="10"/></operator><name pos:line="26" pos:column="10">arena<pos:position pos:line="26" pos:column="15"/></name></name>    <operator pos:line="26" pos:column="19">=<pos:position pos:line="26" pos:column="20"/></operator> <name pos:line="26" pos:column="21">sum<pos:position pos:line="26" pos:column="24"/></name></expr>;<pos:position pos:line="26" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="27" pos:column="7">nm<pos:position pos:line="27" pos:column="9"/></name><operator pos:line="27" pos:column="9">.<pos:position pos:line="27" pos:column="10"/></operator><name pos:line="27" pos:column="10">ordblks<pos:position pos:line="27" pos:column="17"/></name></name>  <operator pos:line="27" pos:column="19">=<pos:position pos:line="27" pos:column="20"/></operator> <name pos:line="27" pos:column="21">nfree<pos:position pos:line="27" pos:column="26"/></name></expr>;<pos:position pos:line="27" pos:column="27"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="28" pos:column="7">nm<pos:position pos:line="28" pos:column="9"/></name><operator pos:line="28" pos:column="9">.<pos:position pos:line="28" pos:column="10"/></operator><name pos:line="28" pos:column="10">hblkhd<pos:position pos:line="28" pos:column="16"/></name></name>   <operator pos:line="28" pos:column="19">=<pos:position pos:line="28" pos:column="20"/></operator> <name><name pos:line="28" pos:column="21">m<pos:position pos:line="28" pos:column="22"/></name><operator pos:line="28" pos:column="22">-&gt;<pos:position pos:line="28" pos:column="27"/></operator><name pos:line="28" pos:column="24">footprint<pos:position pos:line="28" pos:column="33"/></name></name> <operator pos:line="28" pos:column="34">-<pos:position pos:line="28" pos:column="35"/></operator> <name pos:line="28" pos:column="36">sum<pos:position pos:line="28" pos:column="39"/></name></expr>;<pos:position pos:line="28" pos:column="40"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="29" pos:column="7">nm<pos:position pos:line="29" pos:column="9"/></name><operator pos:line="29" pos:column="9">.<pos:position pos:line="29" pos:column="10"/></operator><name pos:line="29" pos:column="10">usmblks<pos:position pos:line="29" pos:column="17"/></name></name>  <operator pos:line="29" pos:column="19">=<pos:position pos:line="29" pos:column="20"/></operator> <name><name pos:line="29" pos:column="21">m<pos:position pos:line="29" pos:column="22"/></name><operator pos:line="29" pos:column="22">-&gt;<pos:position pos:line="29" pos:column="27"/></operator><name pos:line="29" pos:column="24">max_footprint<pos:position pos:line="29" pos:column="37"/></name></name></expr>;<pos:position pos:line="29" pos:column="38"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="30" pos:column="7">nm<pos:position pos:line="30" pos:column="9"/></name><operator pos:line="30" pos:column="9">.<pos:position pos:line="30" pos:column="10"/></operator><name pos:line="30" pos:column="10">uordblks<pos:position pos:line="30" pos:column="18"/></name></name> <operator pos:line="30" pos:column="19">=<pos:position pos:line="30" pos:column="20"/></operator> <name><name pos:line="30" pos:column="21">m<pos:position pos:line="30" pos:column="22"/></name><operator pos:line="30" pos:column="22">-&gt;<pos:position pos:line="30" pos:column="27"/></operator><name pos:line="30" pos:column="24">footprint<pos:position pos:line="30" pos:column="33"/></name></name> <operator pos:line="30" pos:column="34">-<pos:position pos:line="30" pos:column="35"/></operator> <name pos:line="30" pos:column="36">mfree<pos:position pos:line="30" pos:column="41"/></name></expr>;<pos:position pos:line="30" pos:column="42"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="31" pos:column="7">nm<pos:position pos:line="31" pos:column="9"/></name><operator pos:line="31" pos:column="9">.<pos:position pos:line="31" pos:column="10"/></operator><name pos:line="31" pos:column="10">fordblks<pos:position pos:line="31" pos:column="18"/></name></name> <operator pos:line="31" pos:column="19">=<pos:position pos:line="31" pos:column="20"/></operator> <name pos:line="31" pos:column="21">mfree<pos:position pos:line="31" pos:column="26"/></name></expr>;<pos:position pos:line="31" pos:column="27"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="32" pos:column="7">nm<pos:position pos:line="32" pos:column="9"/></name><operator pos:line="32" pos:column="9">.<pos:position pos:line="32" pos:column="10"/></operator><name pos:line="32" pos:column="10">keepcost<pos:position pos:line="32" pos:column="18"/></name></name> <operator pos:line="32" pos:column="19">=<pos:position pos:line="32" pos:column="20"/></operator> <name><name pos:line="32" pos:column="21">m<pos:position pos:line="32" pos:column="22"/></name><operator pos:line="32" pos:column="22">-&gt;<pos:position pos:line="32" pos:column="27"/></operator><name pos:line="32" pos:column="24">topsize<pos:position pos:line="32" pos:column="31"/></name></name></expr>;<pos:position pos:line="32" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="35" pos:column="5">POSTACTION<pos:position pos:line="35" pos:column="15"/></name><argument_list pos:line="35" pos:column="15">(<argument><expr><name pos:line="35" pos:column="16">m<pos:position pos:line="35" pos:column="17"/></name></expr></argument>)<pos:position pos:line="35" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="36" pos:column="4"/></block></then></if>
  <return pos:line="37" pos:column="3">return <expr><name pos:line="37" pos:column="10">nm<pos:position pos:line="37" pos:column="12"/></name></expr>;<pos:position pos:line="37" pos:column="13"/></return>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_739_git-2.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">wt_shortstatus_status<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name><name pos:line="1" pos:column="35">struct<pos:position pos:line="1" pos:column="41"/></name> <name pos:line="1" pos:column="42">string_list_item<pos:position pos:line="1" pos:column="58"/></name></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">it<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>,
			 <parameter><decl><type><name><name pos:line="2" pos:column="26">struct<pos:position pos:line="2" pos:column="32"/></name> <name pos:line="2" pos:column="33">wt_status<pos:position pos:line="2" pos:column="42"/></name></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">s<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="46"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">wt_status_change_data<pos:position pos:line="4" pos:column="37"/></name></name> <modifier pos:line="4" pos:column="38">*<pos:position pos:line="4" pos:column="39"/></modifier></type><name pos:line="4" pos:column="39">d<pos:position pos:line="4" pos:column="40"/></name> <init pos:line="4" pos:column="41">= <expr><name><name pos:line="4" pos:column="43">it<pos:position pos:line="4" pos:column="45"/></name><operator pos:line="4" pos:column="45">-&gt;<pos:position pos:line="4" pos:column="50"/></operator><name pos:line="4" pos:column="47">util<pos:position pos:line="4" pos:column="51"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="52"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name><name pos:line="6" pos:column="13">d<pos:position pos:line="6" pos:column="14"/></name><operator pos:line="6" pos:column="14">-&gt;<pos:position pos:line="6" pos:column="19"/></operator><name pos:line="6" pos:column="16">index_status<pos:position pos:line="6" pos:column="28"/></name></name></expr>)<pos:position pos:line="6" pos:column="29"/></condition><then pos:line="6" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="17">color_fprintf<pos:position pos:line="7" pos:column="30"/></name><argument_list pos:line="7" pos:column="30">(<argument><expr><name><name pos:line="7" pos:column="31">s<pos:position pos:line="7" pos:column="32"/></name><operator pos:line="7" pos:column="32">-&gt;<pos:position pos:line="7" pos:column="37"/></operator><name pos:line="7" pos:column="34">fp<pos:position pos:line="7" pos:column="36"/></name></name></expr></argument>, <argument><expr><call><name pos:line="7" pos:column="38">color<pos:position pos:line="7" pos:column="43"/></name><argument_list pos:line="7" pos:column="43">(<argument><expr><name pos:line="7" pos:column="44">WT_STATUS_UPDATED<pos:position pos:line="7" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="63">s<pos:position pos:line="7" pos:column="64"/></name></expr></argument>)<pos:position pos:line="7" pos:column="65"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="67">"%c"<pos:position pos:line="7" pos:column="71"/></literal></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="73">d<pos:position pos:line="7" pos:column="74"/></name><operator pos:line="7" pos:column="74">-&gt;<pos:position pos:line="7" pos:column="79"/></operator><name pos:line="7" pos:column="76">index_status<pos:position pos:line="7" pos:column="88"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="90"/></expr_stmt></block></then>
	<else pos:line="8" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="17">putchar<pos:position pos:line="9" pos:column="24"/></name><argument_list pos:line="9" pos:column="24">(<argument><expr><literal type="char" pos:line="9" pos:column="25">' '<pos:position pos:line="9" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="30"/></expr_stmt></block></else></if>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name><name pos:line="10" pos:column="13">d<pos:position pos:line="10" pos:column="14"/></name><operator pos:line="10" pos:column="14">-&gt;<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="16">worktree_status<pos:position pos:line="10" pos:column="31"/></name></name></expr>)<pos:position pos:line="10" pos:column="32"/></condition><then pos:line="10" pos:column="32">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="17">color_fprintf<pos:position pos:line="11" pos:column="30"/></name><argument_list pos:line="11" pos:column="30">(<argument><expr><name><name pos:line="11" pos:column="31">s<pos:position pos:line="11" pos:column="32"/></name><operator pos:line="11" pos:column="32">-&gt;<pos:position pos:line="11" pos:column="37"/></operator><name pos:line="11" pos:column="34">fp<pos:position pos:line="11" pos:column="36"/></name></name></expr></argument>, <argument><expr><call><name pos:line="11" pos:column="38">color<pos:position pos:line="11" pos:column="43"/></name><argument_list pos:line="11" pos:column="43">(<argument><expr><name pos:line="11" pos:column="44">WT_STATUS_CHANGED<pos:position pos:line="11" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="63">s<pos:position pos:line="11" pos:column="64"/></name></expr></argument>)<pos:position pos:line="11" pos:column="65"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="67">"%c"<pos:position pos:line="11" pos:column="71"/></literal></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="73">d<pos:position pos:line="11" pos:column="74"/></name><operator pos:line="11" pos:column="74">-&gt;<pos:position pos:line="11" pos:column="79"/></operator><name pos:line="11" pos:column="76">worktree_status<pos:position pos:line="11" pos:column="91"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="93"/></expr_stmt></block></then>
	<else pos:line="12" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="17">putchar<pos:position pos:line="13" pos:column="24"/></name><argument_list pos:line="13" pos:column="24">(<argument><expr><literal type="char" pos:line="13" pos:column="25">' '<pos:position pos:line="13" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="30"/></expr_stmt></block></else></if>
	<expr_stmt><expr><call><name pos:line="14" pos:column="9">putchar<pos:position pos:line="14" pos:column="16"/></name><argument_list pos:line="14" pos:column="16">(<argument><expr><literal type="char" pos:line="14" pos:column="17">' '<pos:position pos:line="14" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="22"/></expr_stmt>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name><name pos:line="15" pos:column="13">s<pos:position pos:line="15" pos:column="14"/></name><operator pos:line="15" pos:column="14">-&gt;<pos:position pos:line="15" pos:column="19"/></operator><name pos:line="15" pos:column="16">null_termination<pos:position pos:line="15" pos:column="32"/></name></name></expr>)<pos:position pos:line="15" pos:column="33"/></condition><then pos:line="15" pos:column="33"> <block pos:line="15" pos:column="34">{
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">fprintf<pos:position pos:line="16" pos:column="24"/></name><argument_list pos:line="16" pos:column="24">(<argument><expr><name pos:line="16" pos:column="25">stdout<pos:position pos:line="16" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="33">"%s%c"<pos:position pos:line="16" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="41">it<pos:position pos:line="16" pos:column="43"/></name><operator pos:line="16" pos:column="43">-&gt;<pos:position pos:line="16" pos:column="48"/></operator><name pos:line="16" pos:column="45">string<pos:position pos:line="16" pos:column="51"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="53">0<pos:position pos:line="16" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="56"/></expr_stmt>
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><name><name pos:line="17" pos:column="21">d<pos:position pos:line="17" pos:column="22"/></name><operator pos:line="17" pos:column="22">-&gt;<pos:position pos:line="17" pos:column="27"/></operator><name pos:line="17" pos:column="24">head_path<pos:position pos:line="17" pos:column="33"/></name></name></expr>)<pos:position pos:line="17" pos:column="34"/></condition><then pos:line="17" pos:column="34">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="25">fprintf<pos:position pos:line="18" pos:column="32"/></name><argument_list pos:line="18" pos:column="32">(<argument><expr><name pos:line="18" pos:column="33">stdout<pos:position pos:line="18" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="41">"%s%c"<pos:position pos:line="18" pos:column="47"/></literal></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="49">d<pos:position pos:line="18" pos:column="50"/></name><operator pos:line="18" pos:column="50">-&gt;<pos:position pos:line="18" pos:column="55"/></operator><name pos:line="18" pos:column="52">head_path<pos:position pos:line="18" pos:column="61"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="63">0<pos:position pos:line="18" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="66"/></expr_stmt></block></then></if>
	}<pos:position pos:line="19" pos:column="10"/></block></then> <else pos:line="19" pos:column="11">else <block pos:line="19" pos:column="16">{
		<decl_stmt><decl><type><name><name pos:line="20" pos:column="17">struct<pos:position pos:line="20" pos:column="23"/></name> <name pos:line="20" pos:column="24">strbuf<pos:position pos:line="20" pos:column="30"/></name></name></type> <name pos:line="20" pos:column="31">onebuf<pos:position pos:line="20" pos:column="37"/></name> <init pos:line="20" pos:column="38">= <expr><name pos:line="20" pos:column="40">STRBUF_INIT<pos:position pos:line="20" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="20" pos:column="52"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="21" pos:column="17">const<pos:position pos:line="21" pos:column="22"/></specifier> <name pos:line="21" pos:column="23">char<pos:position pos:line="21" pos:column="27"/></name> <modifier pos:line="21" pos:column="28">*<pos:position pos:line="21" pos:column="29"/></modifier></type><name pos:line="21" pos:column="29">one<pos:position pos:line="21" pos:column="32"/></name></decl>;<pos:position pos:line="21" pos:column="33"/></decl_stmt>
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><name><name pos:line="22" pos:column="21">d<pos:position pos:line="22" pos:column="22"/></name><operator pos:line="22" pos:column="22">-&gt;<pos:position pos:line="22" pos:column="27"/></operator><name pos:line="22" pos:column="24">head_path<pos:position pos:line="22" pos:column="33"/></name></name></expr>)<pos:position pos:line="22" pos:column="34"/></condition><then pos:line="22" pos:column="34"> <block pos:line="22" pos:column="35">{
			<expr_stmt><expr><name pos:line="23" pos:column="25">one<pos:position pos:line="23" pos:column="28"/></name> <operator pos:line="23" pos:column="29">=<pos:position pos:line="23" pos:column="30"/></operator> <call><name pos:line="23" pos:column="31">quote_path<pos:position pos:line="23" pos:column="41"/></name><argument_list pos:line="23" pos:column="41">(<argument><expr><name><name pos:line="23" pos:column="42">d<pos:position pos:line="23" pos:column="43"/></name><operator pos:line="23" pos:column="43">-&gt;<pos:position pos:line="23" pos:column="48"/></operator><name pos:line="23" pos:column="45">head_path<pos:position pos:line="23" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="56">s<pos:position pos:line="23" pos:column="57"/></name><operator pos:line="23" pos:column="57">-&gt;<pos:position pos:line="23" pos:column="62"/></operator><name pos:line="23" pos:column="59">prefix<pos:position pos:line="23" pos:column="65"/></name></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="67">&amp;<pos:position pos:line="23" pos:column="72"/></operator><name pos:line="23" pos:column="68">onebuf<pos:position pos:line="23" pos:column="74"/></name></expr></argument>)<pos:position pos:line="23" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="76"/></expr_stmt>
			<if pos:line="24" pos:column="25">if <condition pos:line="24" pos:column="28">(<expr><operator pos:line="24" pos:column="29">*<pos:position pos:line="24" pos:column="30"/></operator><name pos:line="24" pos:column="30">one<pos:position pos:line="24" pos:column="33"/></name> <operator pos:line="24" pos:column="34">!=<pos:position pos:line="24" pos:column="36"/></operator> <literal type="char" pos:line="24" pos:column="37">'"'<pos:position pos:line="24" pos:column="40"/></literal> <operator pos:line="24" pos:column="41">&amp;&amp;<pos:position pos:line="24" pos:column="51"/></operator> <call><name pos:line="24" pos:column="44">strchr<pos:position pos:line="24" pos:column="50"/></name><argument_list pos:line="24" pos:column="50">(<argument><expr><name pos:line="24" pos:column="51">one<pos:position pos:line="24" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="24" pos:column="56">' '<pos:position pos:line="24" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="60"/></argument_list></call> <operator pos:line="24" pos:column="61">!=<pos:position pos:line="24" pos:column="63"/></operator> <name pos:line="24" pos:column="64">NULL<pos:position pos:line="24" pos:column="68"/></name></expr>)<pos:position pos:line="24" pos:column="69"/></condition><then pos:line="24" pos:column="69"> <block pos:line="24" pos:column="70">{
				<expr_stmt><expr><call><name pos:line="25" pos:column="33">putchar<pos:position pos:line="25" pos:column="40"/></name><argument_list pos:line="25" pos:column="40">(<argument><expr><literal type="char" pos:line="25" pos:column="41">'"'<pos:position pos:line="25" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="46"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="26" pos:column="33">strbuf_addch<pos:position pos:line="26" pos:column="45"/></name><argument_list pos:line="26" pos:column="45">(<argument><expr><operator pos:line="26" pos:column="46">&amp;<pos:position pos:line="26" pos:column="51"/></operator><name pos:line="26" pos:column="47">onebuf<pos:position pos:line="26" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="26" pos:column="55">'"'<pos:position pos:line="26" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="60"/></expr_stmt>
				<expr_stmt><expr><name pos:line="27" pos:column="33">one<pos:position pos:line="27" pos:column="36"/></name> <operator pos:line="27" pos:column="37">=<pos:position pos:line="27" pos:column="38"/></operator> <name><name pos:line="27" pos:column="39">onebuf<pos:position pos:line="27" pos:column="45"/></name><operator pos:line="27" pos:column="45">.<pos:position pos:line="27" pos:column="46"/></operator><name pos:line="27" pos:column="46">buf<pos:position pos:line="27" pos:column="49"/></name></name></expr>;<pos:position pos:line="27" pos:column="50"/></expr_stmt>
			}<pos:position pos:line="28" pos:column="26"/></block></then></if>
			<expr_stmt><expr><call><name pos:line="29" pos:column="25">printf<pos:position pos:line="29" pos:column="31"/></name><argument_list pos:line="29" pos:column="31">(<argument><expr><literal type="string" pos:line="29" pos:column="32">"%s -&gt; "<pos:position pos:line="29" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="42">one<pos:position pos:line="29" pos:column="45"/></name></expr></argument>)<pos:position pos:line="29" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="47"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="30" pos:column="25">strbuf_release<pos:position pos:line="30" pos:column="39"/></name><argument_list pos:line="30" pos:column="39">(<argument><expr><operator pos:line="30" pos:column="40">&amp;<pos:position pos:line="30" pos:column="45"/></operator><name pos:line="30" pos:column="41">onebuf<pos:position pos:line="30" pos:column="47"/></name></expr></argument>)<pos:position pos:line="30" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="49"/></expr_stmt>
		}<pos:position pos:line="31" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="32" pos:column="17">one<pos:position pos:line="32" pos:column="20"/></name> <operator pos:line="32" pos:column="21">=<pos:position pos:line="32" pos:column="22"/></operator> <call><name pos:line="32" pos:column="23">quote_path<pos:position pos:line="32" pos:column="33"/></name><argument_list pos:line="32" pos:column="33">(<argument><expr><name><name pos:line="32" pos:column="34">it<pos:position pos:line="32" pos:column="36"/></name><operator pos:line="32" pos:column="36">-&gt;<pos:position pos:line="32" pos:column="41"/></operator><name pos:line="32" pos:column="38">string<pos:position pos:line="32" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="46">s<pos:position pos:line="32" pos:column="47"/></name><operator pos:line="32" pos:column="47">-&gt;<pos:position pos:line="32" pos:column="52"/></operator><name pos:line="32" pos:column="49">prefix<pos:position pos:line="32" pos:column="55"/></name></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="57">&amp;<pos:position pos:line="32" pos:column="62"/></operator><name pos:line="32" pos:column="58">onebuf<pos:position pos:line="32" pos:column="64"/></name></expr></argument>)<pos:position pos:line="32" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="66"/></expr_stmt>
		<if pos:line="33" pos:column="17">if <condition pos:line="33" pos:column="20">(<expr><operator pos:line="33" pos:column="21">*<pos:position pos:line="33" pos:column="22"/></operator><name pos:line="33" pos:column="22">one<pos:position pos:line="33" pos:column="25"/></name> <operator pos:line="33" pos:column="26">!=<pos:position pos:line="33" pos:column="28"/></operator> <literal type="char" pos:line="33" pos:column="29">'"'<pos:position pos:line="33" pos:column="32"/></literal> <operator pos:line="33" pos:column="33">&amp;&amp;<pos:position pos:line="33" pos:column="43"/></operator> <call><name pos:line="33" pos:column="36">strchr<pos:position pos:line="33" pos:column="42"/></name><argument_list pos:line="33" pos:column="42">(<argument><expr><name pos:line="33" pos:column="43">one<pos:position pos:line="33" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="33" pos:column="48">' '<pos:position pos:line="33" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="52"/></argument_list></call> <operator pos:line="33" pos:column="53">!=<pos:position pos:line="33" pos:column="55"/></operator> <name pos:line="33" pos:column="56">NULL<pos:position pos:line="33" pos:column="60"/></name></expr>)<pos:position pos:line="33" pos:column="61"/></condition><then pos:line="33" pos:column="61"> <block pos:line="33" pos:column="62">{
			<expr_stmt><expr><call><name pos:line="34" pos:column="25">putchar<pos:position pos:line="34" pos:column="32"/></name><argument_list pos:line="34" pos:column="32">(<argument><expr><literal type="char" pos:line="34" pos:column="33">'"'<pos:position pos:line="34" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="38"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="35" pos:column="25">strbuf_addch<pos:position pos:line="35" pos:column="37"/></name><argument_list pos:line="35" pos:column="37">(<argument><expr><operator pos:line="35" pos:column="38">&amp;<pos:position pos:line="35" pos:column="43"/></operator><name pos:line="35" pos:column="39">onebuf<pos:position pos:line="35" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="35" pos:column="47">'"'<pos:position pos:line="35" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="52"/></expr_stmt>
			<expr_stmt><expr><name pos:line="36" pos:column="25">one<pos:position pos:line="36" pos:column="28"/></name> <operator pos:line="36" pos:column="29">=<pos:position pos:line="36" pos:column="30"/></operator> <name><name pos:line="36" pos:column="31">onebuf<pos:position pos:line="36" pos:column="37"/></name><operator pos:line="36" pos:column="37">.<pos:position pos:line="36" pos:column="38"/></operator><name pos:line="36" pos:column="38">buf<pos:position pos:line="36" pos:column="41"/></name></name></expr>;<pos:position pos:line="36" pos:column="42"/></expr_stmt>
		}<pos:position pos:line="37" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="38" pos:column="17">printf<pos:position pos:line="38" pos:column="23"/></name><argument_list pos:line="38" pos:column="23">(<argument><expr><literal type="string" pos:line="38" pos:column="24">"%s\n"<pos:position pos:line="38" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="32">one<pos:position pos:line="38" pos:column="35"/></name></expr></argument>)<pos:position pos:line="38" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="39" pos:column="17">strbuf_release<pos:position pos:line="39" pos:column="31"/></name><argument_list pos:line="39" pos:column="31">(<argument><expr><operator pos:line="39" pos:column="32">&amp;<pos:position pos:line="39" pos:column="37"/></operator><name pos:line="39" pos:column="33">onebuf<pos:position pos:line="39" pos:column="39"/></name></expr></argument>)<pos:position pos:line="39" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="40" pos:column="10"/></block></else></if>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

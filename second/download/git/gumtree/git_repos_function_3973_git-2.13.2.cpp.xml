<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3973_git-2.13.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">dir_entry<pos:position pos:line="1" pos:column="24"/></name></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name pos:line="1" pos:column="26">hash_dir_entry<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name><name pos:line="1" pos:column="41">struct<pos:position pos:line="1" pos:column="47"/></name> <name pos:line="1" pos:column="48">index_state<pos:position pos:line="1" pos:column="59"/></name></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">istate<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>,
		<parameter><decl><type><name><name pos:line="2" pos:column="17">struct<pos:position pos:line="2" pos:column="23"/></name> <name pos:line="2" pos:column="24">cache_entry<pos:position pos:line="2" pos:column="35"/></name></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">ce<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="41">int<pos:position pos:line="2" pos:column="44"/></name></type> <name pos:line="2" pos:column="45">namelen<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="53"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<comment type="block" pos:line="4" pos:column="9">/*
	 * Throw each directory component in the hash for quick lookup
	 * during a git status. Directory components are stored without their
	 * closing slash.  Despite submodules being a directory, they never
	 * reach this point, because they are stored
	 * in index_state.name_hash (as ordinary cache_entries).
	 */</comment>
	<decl_stmt><decl><type><name><name pos:line="11" pos:column="9">struct<pos:position pos:line="11" pos:column="15"/></name> <name pos:line="11" pos:column="16">dir_entry<pos:position pos:line="11" pos:column="25"/></name></name> <modifier pos:line="11" pos:column="26">*<pos:position pos:line="11" pos:column="27"/></modifier></type><name pos:line="11" pos:column="27">dir<pos:position pos:line="11" pos:column="30"/></name></decl>;<pos:position pos:line="11" pos:column="31"/></decl_stmt>

	<comment type="block" pos:line="13" pos:column="9">/* get length of parent directory */</comment>
	<while pos:line="14" pos:column="9">while <condition pos:line="14" pos:column="15">(<expr><name pos:line="14" pos:column="16">namelen<pos:position pos:line="14" pos:column="23"/></name> <operator pos:line="14" pos:column="24">&gt;<pos:position pos:line="14" pos:column="28"/></operator> <literal type="number" pos:line="14" pos:column="26">0<pos:position pos:line="14" pos:column="27"/></literal> <operator pos:line="14" pos:column="28">&amp;&amp;<pos:position pos:line="14" pos:column="38"/></operator> <operator pos:line="14" pos:column="31">!<pos:position pos:line="14" pos:column="32"/></operator><call><name pos:line="14" pos:column="32">is_dir_sep<pos:position pos:line="14" pos:column="42"/></name><argument_list pos:line="14" pos:column="42">(<argument><expr><name><name pos:line="14" pos:column="43">ce<pos:position pos:line="14" pos:column="45"/></name><operator pos:line="14" pos:column="45">-&gt;<pos:position pos:line="14" pos:column="50"/></operator><name pos:line="14" pos:column="47">name<pos:position pos:line="14" pos:column="51"/></name><index pos:line="14" pos:column="51">[<expr><name pos:line="14" pos:column="52">namelen<pos:position pos:line="14" pos:column="59"/></name> <operator pos:line="14" pos:column="60">-<pos:position pos:line="14" pos:column="61"/></operator> <literal type="number" pos:line="14" pos:column="62">1<pos:position pos:line="14" pos:column="63"/></literal></expr>]<pos:position pos:line="14" pos:column="64"/></index></name></expr></argument>)<pos:position pos:line="14" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="66"/></condition>
		<block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="17">namelen<pos:position pos:line="15" pos:column="24"/></name><operator pos:line="15" pos:column="24">--<pos:position pos:line="15" pos:column="26"/></operator></expr>;<pos:position pos:line="15" pos:column="27"/></expr_stmt></block></while>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">namelen<pos:position pos:line="16" pos:column="20"/></name> <operator pos:line="16" pos:column="21">&lt;=<pos:position pos:line="16" pos:column="26"/></operator> <literal type="number" pos:line="16" pos:column="24">0<pos:position pos:line="16" pos:column="25"/></literal></expr>)<pos:position pos:line="16" pos:column="26"/></condition><then pos:line="16" pos:column="26">
		<block type="pseudo"><return pos:line="17" pos:column="17">return <expr><name pos:line="17" pos:column="24">NULL<pos:position pos:line="17" pos:column="28"/></name></expr>;<pos:position pos:line="17" pos:column="29"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="18" pos:column="9">namelen<pos:position pos:line="18" pos:column="16"/></name><operator pos:line="18" pos:column="16">--<pos:position pos:line="18" pos:column="18"/></operator></expr>;<pos:position pos:line="18" pos:column="19"/></expr_stmt>

	<comment type="block" pos:line="20" pos:column="9">/* lookup existing entry for that directory */</comment>
	<expr_stmt><expr><name pos:line="21" pos:column="9">dir<pos:position pos:line="21" pos:column="12"/></name> <operator pos:line="21" pos:column="13">=<pos:position pos:line="21" pos:column="14"/></operator> <call><name pos:line="21" pos:column="15">find_dir_entry<pos:position pos:line="21" pos:column="29"/></name><argument_list pos:line="21" pos:column="29">(<argument><expr><name pos:line="21" pos:column="30">istate<pos:position pos:line="21" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="38">ce<pos:position pos:line="21" pos:column="40"/></name><operator pos:line="21" pos:column="40">-&gt;<pos:position pos:line="21" pos:column="45"/></operator><name pos:line="21" pos:column="42">name<pos:position pos:line="21" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="48">namelen<pos:position pos:line="21" pos:column="55"/></name></expr></argument>)<pos:position pos:line="21" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="57"/></expr_stmt>
	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><operator pos:line="22" pos:column="13">!<pos:position pos:line="22" pos:column="14"/></operator><name pos:line="22" pos:column="14">dir<pos:position pos:line="22" pos:column="17"/></name></expr>)<pos:position pos:line="22" pos:column="18"/></condition><then pos:line="22" pos:column="18"> <block pos:line="22" pos:column="19">{
		<comment type="block" pos:line="23" pos:column="17">/* not found, create it and add to hash table */</comment>
		<expr_stmt><expr><call><name pos:line="24" pos:column="17">FLEX_ALLOC_MEM<pos:position pos:line="24" pos:column="31"/></name><argument_list pos:line="24" pos:column="31">(<argument><expr><name pos:line="24" pos:column="32">dir<pos:position pos:line="24" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="37">name<pos:position pos:line="24" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="43">ce<pos:position pos:line="24" pos:column="45"/></name><operator pos:line="24" pos:column="45">-&gt;<pos:position pos:line="24" pos:column="50"/></operator><name pos:line="24" pos:column="47">name<pos:position pos:line="24" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="53">namelen<pos:position pos:line="24" pos:column="60"/></name></expr></argument>)<pos:position pos:line="24" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="62"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="25" pos:column="17">hashmap_entry_init<pos:position pos:line="25" pos:column="35"/></name><argument_list pos:line="25" pos:column="35">(<argument><expr><name pos:line="25" pos:column="36">dir<pos:position pos:line="25" pos:column="39"/></name></expr></argument>, <argument><expr><call><name pos:line="25" pos:column="41">memihash<pos:position pos:line="25" pos:column="49"/></name><argument_list pos:line="25" pos:column="49">(<argument><expr><name><name pos:line="25" pos:column="50">ce<pos:position pos:line="25" pos:column="52"/></name><operator pos:line="25" pos:column="52">-&gt;<pos:position pos:line="25" pos:column="57"/></operator><name pos:line="25" pos:column="54">name<pos:position pos:line="25" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="60">namelen<pos:position pos:line="25" pos:column="67"/></name></expr></argument>)<pos:position pos:line="25" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="70"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="26" pos:column="17">dir<pos:position pos:line="26" pos:column="20"/></name><operator pos:line="26" pos:column="20">-&gt;<pos:position pos:line="26" pos:column="25"/></operator><name pos:line="26" pos:column="22">namelen<pos:position pos:line="26" pos:column="29"/></name></name> <operator pos:line="26" pos:column="30">=<pos:position pos:line="26" pos:column="31"/></operator> <name pos:line="26" pos:column="32">namelen<pos:position pos:line="26" pos:column="39"/></name></expr>;<pos:position pos:line="26" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="27" pos:column="17">hashmap_add<pos:position pos:line="27" pos:column="28"/></name><argument_list pos:line="27" pos:column="28">(<argument><expr><operator pos:line="27" pos:column="29">&amp;<pos:position pos:line="27" pos:column="34"/></operator><name><name pos:line="27" pos:column="30">istate<pos:position pos:line="27" pos:column="36"/></name><operator pos:line="27" pos:column="36">-&gt;<pos:position pos:line="27" pos:column="41"/></operator><name pos:line="27" pos:column="38">dir_hash<pos:position pos:line="27" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="48">dir<pos:position pos:line="27" pos:column="51"/></name></expr></argument>)<pos:position pos:line="27" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="53"/></expr_stmt>

		<comment type="block" pos:line="29" pos:column="17">/* recursively add missing parent directories */</comment>
		<expr_stmt><expr><name><name pos:line="30" pos:column="17">dir<pos:position pos:line="30" pos:column="20"/></name><operator pos:line="30" pos:column="20">-&gt;<pos:position pos:line="30" pos:column="25"/></operator><name pos:line="30" pos:column="22">parent<pos:position pos:line="30" pos:column="28"/></name></name> <operator pos:line="30" pos:column="29">=<pos:position pos:line="30" pos:column="30"/></operator> <call><name pos:line="30" pos:column="31">hash_dir_entry<pos:position pos:line="30" pos:column="45"/></name><argument_list pos:line="30" pos:column="45">(<argument><expr><name pos:line="30" pos:column="46">istate<pos:position pos:line="30" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="54">ce<pos:position pos:line="30" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="58">namelen<pos:position pos:line="30" pos:column="65"/></name></expr></argument>)<pos:position pos:line="30" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="67"/></expr_stmt>
	}<pos:position pos:line="31" pos:column="10"/></block></then></if>
	<return pos:line="32" pos:column="9">return <expr><name pos:line="32" pos:column="16">dir<pos:position pos:line="32" pos:column="19"/></name></expr>;<pos:position pos:line="32" pos:column="20"/></return>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

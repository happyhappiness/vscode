<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2605_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">grow_decoration<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name><name pos:line="1" pos:column="29">struct<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">decoration<pos:position pos:line="1" pos:column="46"/></name></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">n<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">old_size<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><name><name pos:line="4" pos:column="24">n<pos:position pos:line="4" pos:column="25"/></name><operator pos:line="4" pos:column="25">-&gt;<pos:position pos:line="4" pos:column="30"/></operator><name pos:line="4" pos:column="27">size<pos:position pos:line="4" pos:column="31"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">object_decoration<pos:position pos:line="5" pos:column="33"/></name></name> <modifier pos:line="5" pos:column="34">*<pos:position pos:line="5" pos:column="35"/></modifier></type><name pos:line="5" pos:column="35">old_hash<pos:position pos:line="5" pos:column="43"/></name> <init pos:line="5" pos:column="44">= <expr><name><name pos:line="5" pos:column="46">n<pos:position pos:line="5" pos:column="47"/></name><operator pos:line="5" pos:column="47">-&gt;<pos:position pos:line="5" pos:column="52"/></operator><name pos:line="5" pos:column="49">hash<pos:position pos:line="5" pos:column="53"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="54"/></decl_stmt>

	<expr_stmt><expr><name><name pos:line="7" pos:column="9">n<pos:position pos:line="7" pos:column="10"/></name><operator pos:line="7" pos:column="10">-&gt;<pos:position pos:line="7" pos:column="15"/></operator><name pos:line="7" pos:column="12">size<pos:position pos:line="7" pos:column="16"/></name></name> <operator pos:line="7" pos:column="17">=<pos:position pos:line="7" pos:column="18"/></operator> <operator pos:line="7" pos:column="19">(<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="20">old_size<pos:position pos:line="7" pos:column="28"/></name> <operator pos:line="7" pos:column="29">+<pos:position pos:line="7" pos:column="30"/></operator> <literal type="number" pos:line="7" pos:column="31">1000<pos:position pos:line="7" pos:column="35"/></literal><operator pos:line="7" pos:column="35">)<pos:position pos:line="7" pos:column="36"/></operator> <operator pos:line="7" pos:column="37">*<pos:position pos:line="7" pos:column="38"/></operator> <literal type="number" pos:line="7" pos:column="39">3<pos:position pos:line="7" pos:column="40"/></literal> <operator pos:line="7" pos:column="41">/<pos:position pos:line="7" pos:column="42"/></operator> <literal type="number" pos:line="7" pos:column="43">2<pos:position pos:line="7" pos:column="44"/></literal></expr>;<pos:position pos:line="7" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="8" pos:column="9">n<pos:position pos:line="8" pos:column="10"/></name><operator pos:line="8" pos:column="10">-&gt;<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="12">hash<pos:position pos:line="8" pos:column="16"/></name></name> <operator pos:line="8" pos:column="17">=<pos:position pos:line="8" pos:column="18"/></operator> <call><name pos:line="8" pos:column="19">xcalloc<pos:position pos:line="8" pos:column="26"/></name><argument_list pos:line="8" pos:column="26">(<argument><expr><name><name pos:line="8" pos:column="27">n<pos:position pos:line="8" pos:column="28"/></name><operator pos:line="8" pos:column="28">-&gt;<pos:position pos:line="8" pos:column="33"/></operator><name pos:line="8" pos:column="30">size<pos:position pos:line="8" pos:column="34"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="36">sizeof<argument_list pos:line="8" pos:column="42">(<argument><expr pos:line="8" pos:column="43">struct <name pos:line="8" pos:column="50">object_decoration<pos:position pos:line="8" pos:column="67"/></name></expr></argument>)<pos:position pos:line="8" pos:column="68"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="70"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="9" pos:column="9">n<pos:position pos:line="9" pos:column="10"/></name><operator pos:line="9" pos:column="10">-&gt;<pos:position pos:line="9" pos:column="15"/></operator><name pos:line="9" pos:column="12">nr<pos:position pos:line="9" pos:column="14"/></name></name> <operator pos:line="9" pos:column="15">=<pos:position pos:line="9" pos:column="16"/></operator> <literal type="number" pos:line="9" pos:column="17">0<pos:position pos:line="9" pos:column="18"/></literal></expr>;<pos:position pos:line="9" pos:column="19"/></expr_stmt>

	<for pos:line="11" pos:column="9">for <control pos:line="11" pos:column="13">(<init><expr><name pos:line="11" pos:column="14">i<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <literal type="number" pos:line="11" pos:column="18">0<pos:position pos:line="11" pos:column="19"/></literal></expr>;<pos:position pos:line="11" pos:column="20"/></init> <condition><expr><name pos:line="11" pos:column="21">i<pos:position pos:line="11" pos:column="22"/></name> <operator pos:line="11" pos:column="23">&lt;<pos:position pos:line="11" pos:column="27"/></operator> <name pos:line="11" pos:column="25">old_size<pos:position pos:line="11" pos:column="33"/></name></expr>;<pos:position pos:line="11" pos:column="34"/></condition> <incr><expr><name pos:line="11" pos:column="35">i<pos:position pos:line="11" pos:column="36"/></name><operator pos:line="11" pos:column="36">++<pos:position pos:line="11" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="11" pos:column="39"/></control> <block pos:line="11" pos:column="40">{
		<decl_stmt><decl><type><specifier pos:line="12" pos:column="17">const<pos:position pos:line="12" pos:column="22"/></specifier> <name><name pos:line="12" pos:column="23">struct<pos:position pos:line="12" pos:column="29"/></name> <name pos:line="12" pos:column="30">object<pos:position pos:line="12" pos:column="36"/></name></name> <modifier pos:line="12" pos:column="37">*<pos:position pos:line="12" pos:column="38"/></modifier></type><name pos:line="12" pos:column="38">base<pos:position pos:line="12" pos:column="42"/></name> <init pos:line="12" pos:column="43">= <expr><name><name pos:line="12" pos:column="45">old_hash<pos:position pos:line="12" pos:column="53"/></name><index pos:line="12" pos:column="53">[<expr><name pos:line="12" pos:column="54">i<pos:position pos:line="12" pos:column="55"/></name></expr>]<pos:position pos:line="12" pos:column="56"/></index></name><operator pos:line="12" pos:column="56">.<pos:position pos:line="12" pos:column="57"/></operator><name pos:line="12" pos:column="57">base<pos:position pos:line="12" pos:column="61"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="62"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="13" pos:column="17">void<pos:position pos:line="13" pos:column="21"/></name> <modifier pos:line="13" pos:column="22">*<pos:position pos:line="13" pos:column="23"/></modifier></type><name pos:line="13" pos:column="23">decoration<pos:position pos:line="13" pos:column="33"/></name> <init pos:line="13" pos:column="34">= <expr><name><name pos:line="13" pos:column="36">old_hash<pos:position pos:line="13" pos:column="44"/></name><index pos:line="13" pos:column="44">[<expr><name pos:line="13" pos:column="45">i<pos:position pos:line="13" pos:column="46"/></name></expr>]<pos:position pos:line="13" pos:column="47"/></index></name><operator pos:line="13" pos:column="47">.<pos:position pos:line="13" pos:column="48"/></operator><name pos:line="13" pos:column="48">decoration<pos:position pos:line="13" pos:column="58"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="59"/></decl_stmt>

		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><operator pos:line="15" pos:column="21">!<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="22">decoration<pos:position pos:line="15" pos:column="32"/></name></expr>)<pos:position pos:line="15" pos:column="33"/></condition><then pos:line="15" pos:column="33">
			<block type="pseudo"><continue pos:line="16" pos:column="25">continue;<pos:position pos:line="16" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><call><name pos:line="17" pos:column="17">insert_decoration<pos:position pos:line="17" pos:column="34"/></name><argument_list pos:line="17" pos:column="34">(<argument><expr><name pos:line="17" pos:column="35">n<pos:position pos:line="17" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="38">base<pos:position pos:line="17" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="44">decoration<pos:position pos:line="17" pos:column="54"/></name></expr></argument>)<pos:position pos:line="17" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="56"/></expr_stmt>
	}<pos:position pos:line="18" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="19" pos:column="9">free<pos:position pos:line="19" pos:column="13"/></name><argument_list pos:line="19" pos:column="13">(<argument><expr><name pos:line="19" pos:column="14">old_hash<pos:position pos:line="19" pos:column="22"/></name></expr></argument>)<pos:position pos:line="19" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="24"/></expr_stmt>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

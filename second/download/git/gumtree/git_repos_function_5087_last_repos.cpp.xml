<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5087_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">option_parse_recurse_submodules<pos:position pos:line="1" pos:column="43"/></name><parameter_list pos:line="1" pos:column="43">(<parameter><decl><type><specifier pos:line="1" pos:column="44">const<pos:position pos:line="1" pos:column="49"/></specifier> <name><name pos:line="1" pos:column="50">struct<pos:position pos:line="1" pos:column="56"/></name> <name pos:line="1" pos:column="57">option<pos:position pos:line="1" pos:column="63"/></name></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">opt<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>,
				   <parameter><decl><type><specifier pos:line="2" pos:column="36">const<pos:position pos:line="2" pos:column="41"/></specifier> <name pos:line="2" pos:column="42">char<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">arg<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="53">int<pos:position pos:line="2" pos:column="56"/></name></type> <name pos:line="2" pos:column="57">unset<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="63"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name> <modifier pos:line="4" pos:column="13">*<pos:position pos:line="4" pos:column="14"/></modifier></type><name pos:line="4" pos:column="14">recurse_submodules<pos:position pos:line="4" pos:column="32"/></name> <init pos:line="4" pos:column="33">= <expr><name><name pos:line="4" pos:column="35">opt<pos:position pos:line="4" pos:column="38"/></name><operator pos:line="4" pos:column="38">-&gt;<pos:position pos:line="4" pos:column="43"/></operator><name pos:line="4" pos:column="40">value<pos:position pos:line="4" pos:column="45"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="46"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name pos:line="6" pos:column="13">unset<pos:position pos:line="6" pos:column="18"/></name></expr>)<pos:position pos:line="6" pos:column="19"/></condition><then pos:line="6" pos:column="19">
		<block type="pseudo"><expr_stmt><expr><operator pos:line="7" pos:column="17">*<pos:position pos:line="7" pos:column="18"/></operator><name pos:line="7" pos:column="18">recurse_submodules<pos:position pos:line="7" pos:column="36"/></name> <operator pos:line="7" pos:column="37">=<pos:position pos:line="7" pos:column="38"/></operator> <name pos:line="7" pos:column="39">RECURSE_SUBMODULES_OFF<pos:position pos:line="7" pos:column="61"/></name></expr>;<pos:position pos:line="7" pos:column="62"/></expr_stmt></block></then>
	<elseif pos:line="8" pos:column="9">else <if pos:line="8" pos:column="14">if <condition pos:line="8" pos:column="17">(<expr><name pos:line="8" pos:column="18">arg<pos:position pos:line="8" pos:column="21"/></name></expr>)<pos:position pos:line="8" pos:column="22"/></condition><then pos:line="8" pos:column="22">
		<block type="pseudo"><expr_stmt><expr><operator pos:line="9" pos:column="17">*<pos:position pos:line="9" pos:column="18"/></operator><name pos:line="9" pos:column="18">recurse_submodules<pos:position pos:line="9" pos:column="36"/></name> <operator pos:line="9" pos:column="37">=<pos:position pos:line="9" pos:column="38"/></operator> <call><name pos:line="9" pos:column="39">parse_push_recurse_submodules_arg<pos:position pos:line="9" pos:column="72"/></name><argument_list pos:line="9" pos:column="72">(<argument><expr><name><name pos:line="9" pos:column="73">opt<pos:position pos:line="9" pos:column="76"/></name><operator pos:line="9" pos:column="76">-&gt;<pos:position pos:line="9" pos:column="81"/></operator><name pos:line="9" pos:column="78">long_name<pos:position pos:line="9" pos:column="87"/></name></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="89">arg<pos:position pos:line="9" pos:column="92"/></name></expr></argument>)<pos:position pos:line="9" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="94"/></expr_stmt></block></then></if></elseif>
	<else pos:line="10" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="17">die<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">(<argument><expr><literal type="string" pos:line="11" pos:column="21">"%s missing parameter"<pos:position pos:line="11" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="45">opt<pos:position pos:line="11" pos:column="48"/></name><operator pos:line="11" pos:column="48">-&gt;<pos:position pos:line="11" pos:column="53"/></operator><name pos:line="11" pos:column="50">long_name<pos:position pos:line="11" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="61"/></expr_stmt></block></else></if>

	<return pos:line="13" pos:column="9">return <expr><literal type="number" pos:line="13" pos:column="16">0<pos:position pos:line="13" pos:column="17"/></literal></expr>;<pos:position pos:line="13" pos:column="18"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

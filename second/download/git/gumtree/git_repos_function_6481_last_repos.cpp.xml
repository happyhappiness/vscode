<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6481_last_repos.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">struct<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">ref_iterator<pos:position pos:line="1" pos:column="20"/></name></name> <modifier pos:line="1" pos:column="21">*<pos:position pos:line="1" pos:column="22"/></modifier></type><name pos:line="1" pos:column="22">merge_ref_iterator_begin<pos:position pos:line="1" pos:column="46"/></name><parameter_list pos:line="1" pos:column="46">(
		<parameter><decl><type><name><name pos:line="2" pos:column="17">struct<pos:position pos:line="2" pos:column="23"/></name> <name pos:line="2" pos:column="24">ref_iterator<pos:position pos:line="2" pos:column="36"/></name></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="38">iter0<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="45">struct<pos:position pos:line="2" pos:column="51"/></name> <name pos:line="2" pos:column="52">ref_iterator<pos:position pos:line="2" pos:column="64"/></name></name> <modifier pos:line="2" pos:column="65">*<pos:position pos:line="2" pos:column="66"/></modifier></type><name pos:line="2" pos:column="66">iter1<pos:position pos:line="2" pos:column="71"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="3" pos:column="17">ref_iterator_select_fn<pos:position pos:line="3" pos:column="39"/></name> <modifier pos:line="3" pos:column="40">*<pos:position pos:line="3" pos:column="41"/></modifier></type><name pos:line="3" pos:column="41">select<pos:position pos:line="3" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="49">void<pos:position pos:line="3" pos:column="53"/></name> <modifier pos:line="3" pos:column="54">*<pos:position pos:line="3" pos:column="55"/></modifier></type><name pos:line="3" pos:column="55">cb_data<pos:position pos:line="3" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="63"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">merge_ref_iterator<pos:position pos:line="5" pos:column="34"/></name></name> <modifier pos:line="5" pos:column="35">*<pos:position pos:line="5" pos:column="36"/></modifier></type><name pos:line="5" pos:column="36">iter<pos:position pos:line="5" pos:column="40"/></name> <init pos:line="5" pos:column="41">= <expr><call><name pos:line="5" pos:column="43">xcalloc<pos:position pos:line="5" pos:column="50"/></name><argument_list pos:line="5" pos:column="50">(<argument><expr><literal type="number" pos:line="5" pos:column="51">1<pos:position pos:line="5" pos:column="52"/></literal></expr></argument>, <argument><expr><sizeof pos:line="5" pos:column="54">sizeof<argument_list pos:line="5" pos:column="60">(<argument><expr><operator pos:line="5" pos:column="61">*<pos:position pos:line="5" pos:column="62"/></operator><name pos:line="5" pos:column="62">iter<pos:position pos:line="5" pos:column="66"/></name></expr></argument>)<pos:position pos:line="5" pos:column="67"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="5" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="69"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">ref_iterator<pos:position pos:line="6" pos:column="28"/></name></name> <modifier pos:line="6" pos:column="29">*<pos:position pos:line="6" pos:column="30"/></modifier></type><name pos:line="6" pos:column="30">ref_iterator<pos:position pos:line="6" pos:column="42"/></name> <init pos:line="6" pos:column="43">= <expr><operator pos:line="6" pos:column="45">&amp;<pos:position pos:line="6" pos:column="50"/></operator><name><name pos:line="6" pos:column="46">iter<pos:position pos:line="6" pos:column="50"/></name><operator pos:line="6" pos:column="50">-&gt;<pos:position pos:line="6" pos:column="55"/></operator><name pos:line="6" pos:column="52">base<pos:position pos:line="6" pos:column="56"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="57"/></decl_stmt>

	<comment type="block" pos:line="8" pos:column="9">/*
	 * We can't do the same kind of is_empty_ref_iterator()-style
	 * optimization here as overlay_ref_iterator_begin() does,
	 * because we don't know the semantics of the select function.
	 * It might, for example, implement "intersect" by passing
	 * references through only if they exist in both iterators.
	 */</comment>

	<expr_stmt><expr><call><name pos:line="16" pos:column="9">base_ref_iterator_init<pos:position pos:line="16" pos:column="31"/></name><argument_list pos:line="16" pos:column="31">(<argument><expr><name pos:line="16" pos:column="32">ref_iterator<pos:position pos:line="16" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="46">&amp;<pos:position pos:line="16" pos:column="51"/></operator><name pos:line="16" pos:column="47">merge_ref_iterator_vtable<pos:position pos:line="16" pos:column="72"/></name></expr></argument>)<pos:position pos:line="16" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="74"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="17" pos:column="9">iter<pos:position pos:line="17" pos:column="13"/></name><operator pos:line="17" pos:column="13">-&gt;<pos:position pos:line="17" pos:column="18"/></operator><name pos:line="17" pos:column="15">iter0<pos:position pos:line="17" pos:column="20"/></name></name> <operator pos:line="17" pos:column="21">=<pos:position pos:line="17" pos:column="22"/></operator> <name pos:line="17" pos:column="23">iter0<pos:position pos:line="17" pos:column="28"/></name></expr>;<pos:position pos:line="17" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="18" pos:column="9">iter<pos:position pos:line="18" pos:column="13"/></name><operator pos:line="18" pos:column="13">-&gt;<pos:position pos:line="18" pos:column="18"/></operator><name pos:line="18" pos:column="15">iter1<pos:position pos:line="18" pos:column="20"/></name></name> <operator pos:line="18" pos:column="21">=<pos:position pos:line="18" pos:column="22"/></operator> <name pos:line="18" pos:column="23">iter1<pos:position pos:line="18" pos:column="28"/></name></expr>;<pos:position pos:line="18" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="19" pos:column="9">iter<pos:position pos:line="19" pos:column="13"/></name><operator pos:line="19" pos:column="13">-&gt;<pos:position pos:line="19" pos:column="18"/></operator><name pos:line="19" pos:column="15">select<pos:position pos:line="19" pos:column="21"/></name></name> <operator pos:line="19" pos:column="22">=<pos:position pos:line="19" pos:column="23"/></operator> <name pos:line="19" pos:column="24">select<pos:position pos:line="19" pos:column="30"/></name></expr>;<pos:position pos:line="19" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="20" pos:column="9">iter<pos:position pos:line="20" pos:column="13"/></name><operator pos:line="20" pos:column="13">-&gt;<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="15">cb_data<pos:position pos:line="20" pos:column="22"/></name></name> <operator pos:line="20" pos:column="23">=<pos:position pos:line="20" pos:column="24"/></operator> <name pos:line="20" pos:column="25">cb_data<pos:position pos:line="20" pos:column="32"/></name></expr>;<pos:position pos:line="20" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="21" pos:column="9">iter<pos:position pos:line="21" pos:column="13"/></name><operator pos:line="21" pos:column="13">-&gt;<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="15">current<pos:position pos:line="21" pos:column="22"/></name></name> <operator pos:line="21" pos:column="23">=<pos:position pos:line="21" pos:column="24"/></operator> <name pos:line="21" pos:column="25">NULL<pos:position pos:line="21" pos:column="29"/></name></expr>;<pos:position pos:line="21" pos:column="30"/></expr_stmt>
	<return pos:line="22" pos:column="9">return <expr><name pos:line="22" pos:column="16">ref_iterator<pos:position pos:line="22" pos:column="28"/></name></expr>;<pos:position pos:line="22" pos:column="29"/></return>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

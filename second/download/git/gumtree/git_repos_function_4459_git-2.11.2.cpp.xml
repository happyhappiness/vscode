<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4459_git-2.11.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">histogram_diff<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">xpparam_t<pos:position pos:line="1" pos:column="36"/></name> <specifier pos:line="1" pos:column="37">const<pos:position pos:line="1" pos:column="42"/></specifier> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">xpp<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">xdfenv_t<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">env<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>,
	<parameter><decl><type><name pos:line="2" pos:column="9">int<pos:position pos:line="2" pos:column="12"/></name></type> <name pos:line="2" pos:column="13">line1<pos:position pos:line="2" pos:column="18"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="20">int<pos:position pos:line="2" pos:column="23"/></name></type> <name pos:line="2" pos:column="24">count1<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="32">int<pos:position pos:line="2" pos:column="35"/></name></type> <name pos:line="2" pos:column="36">line2<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="43">int<pos:position pos:line="2" pos:column="46"/></name></type> <name pos:line="2" pos:column="47">count2<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="54"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">histindex<pos:position pos:line="4" pos:column="25"/></name></name></type> <name pos:line="4" pos:column="26">index<pos:position pos:line="4" pos:column="31"/></name></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">region<pos:position pos:line="5" pos:column="22"/></name></name></type> <name pos:line="5" pos:column="23">lcs<pos:position pos:line="5" pos:column="26"/></name></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">sz<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">result<pos:position pos:line="7" pos:column="19"/></name> <init pos:line="7" pos:column="20">= <expr><operator pos:line="7" pos:column="22">-<pos:position pos:line="7" pos:column="23"/></operator><literal type="number" pos:line="7" pos:column="23">1<pos:position pos:line="7" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">count1<pos:position pos:line="9" pos:column="19"/></name> <operator pos:line="9" pos:column="20">&lt;=<pos:position pos:line="9" pos:column="25"/></operator> <literal type="number" pos:line="9" pos:column="23">0<pos:position pos:line="9" pos:column="24"/></literal> <operator pos:line="9" pos:column="25">&amp;&amp;<pos:position pos:line="9" pos:column="35"/></operator> <name pos:line="9" pos:column="28">count2<pos:position pos:line="9" pos:column="34"/></name> <operator pos:line="9" pos:column="35">&lt;=<pos:position pos:line="9" pos:column="40"/></operator> <literal type="number" pos:line="9" pos:column="38">0<pos:position pos:line="9" pos:column="39"/></literal></expr>)<pos:position pos:line="9" pos:column="40"/></condition><then pos:line="9" pos:column="40">
		<block type="pseudo"><return pos:line="10" pos:column="17">return <expr><literal type="number" pos:line="10" pos:column="24">0<pos:position pos:line="10" pos:column="25"/></literal></expr>;<pos:position pos:line="10" pos:column="26"/></return></block></then></if>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><call><name pos:line="12" pos:column="13">LINE_END<pos:position pos:line="12" pos:column="21"/></name><argument_list pos:line="12" pos:column="21">(<argument><expr><literal type="number" pos:line="12" pos:column="22">1<pos:position pos:line="12" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="24"/></argument_list></call> <operator pos:line="12" pos:column="25">&gt;=<pos:position pos:line="12" pos:column="30"/></operator> <name pos:line="12" pos:column="28">MAX_PTR<pos:position pos:line="12" pos:column="35"/></name></expr>)<pos:position pos:line="12" pos:column="36"/></condition><then pos:line="12" pos:column="36">
		<block type="pseudo"><return pos:line="13" pos:column="17">return <expr><operator pos:line="13" pos:column="24">-<pos:position pos:line="13" pos:column="25"/></operator><literal type="number" pos:line="13" pos:column="25">1<pos:position pos:line="13" pos:column="26"/></literal></expr>;<pos:position pos:line="13" pos:column="27"/></return></block></then></if>

	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">!<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">count1<pos:position pos:line="15" pos:column="20"/></name></expr>)<pos:position pos:line="15" pos:column="21"/></condition><then pos:line="15" pos:column="21"> <block pos:line="15" pos:column="22">{
		<while pos:line="16" pos:column="17">while<condition pos:line="16" pos:column="22">(<expr><name pos:line="16" pos:column="23">count2<pos:position pos:line="16" pos:column="29"/></name><operator pos:line="16" pos:column="29">--<pos:position pos:line="16" pos:column="31"/></operator></expr>)<pos:position pos:line="16" pos:column="32"/></condition>
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="17" pos:column="25">env<pos:position pos:line="17" pos:column="28"/></name><operator pos:line="17" pos:column="28">-&gt;<pos:position pos:line="17" pos:column="33"/></operator><name pos:line="17" pos:column="30">xdf2<pos:position pos:line="17" pos:column="34"/></name><operator pos:line="17" pos:column="34">.<pos:position pos:line="17" pos:column="35"/></operator><name pos:line="17" pos:column="35">rchg<pos:position pos:line="17" pos:column="39"/></name><index pos:line="17" pos:column="39">[<expr><name pos:line="17" pos:column="40">line2<pos:position pos:line="17" pos:column="45"/></name><operator pos:line="17" pos:column="45">++<pos:position pos:line="17" pos:column="47"/></operator> <operator pos:line="17" pos:column="48">-<pos:position pos:line="17" pos:column="49"/></operator> <literal type="number" pos:line="17" pos:column="50">1<pos:position pos:line="17" pos:column="51"/></literal></expr>]<pos:position pos:line="17" pos:column="52"/></index></name> <operator pos:line="17" pos:column="53">=<pos:position pos:line="17" pos:column="54"/></operator> <literal type="number" pos:line="17" pos:column="55">1<pos:position pos:line="17" pos:column="56"/></literal></expr>;<pos:position pos:line="17" pos:column="57"/></expr_stmt></block></while>
		<return pos:line="18" pos:column="17">return <expr><literal type="number" pos:line="18" pos:column="24">0<pos:position pos:line="18" pos:column="25"/></literal></expr>;<pos:position pos:line="18" pos:column="26"/></return>
	}<pos:position pos:line="19" pos:column="10"/></block></then> <elseif pos:line="19" pos:column="11">else <if pos:line="19" pos:column="16">if <condition pos:line="19" pos:column="19">(<expr><operator pos:line="19" pos:column="20">!<pos:position pos:line="19" pos:column="21"/></operator><name pos:line="19" pos:column="21">count2<pos:position pos:line="19" pos:column="27"/></name></expr>)<pos:position pos:line="19" pos:column="28"/></condition><then pos:line="19" pos:column="28"> <block pos:line="19" pos:column="29">{
		<while pos:line="20" pos:column="17">while<condition pos:line="20" pos:column="22">(<expr><name pos:line="20" pos:column="23">count1<pos:position pos:line="20" pos:column="29"/></name><operator pos:line="20" pos:column="29">--<pos:position pos:line="20" pos:column="31"/></operator></expr>)<pos:position pos:line="20" pos:column="32"/></condition>
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="21" pos:column="25">env<pos:position pos:line="21" pos:column="28"/></name><operator pos:line="21" pos:column="28">-&gt;<pos:position pos:line="21" pos:column="33"/></operator><name pos:line="21" pos:column="30">xdf1<pos:position pos:line="21" pos:column="34"/></name><operator pos:line="21" pos:column="34">.<pos:position pos:line="21" pos:column="35"/></operator><name pos:line="21" pos:column="35">rchg<pos:position pos:line="21" pos:column="39"/></name><index pos:line="21" pos:column="39">[<expr><name pos:line="21" pos:column="40">line1<pos:position pos:line="21" pos:column="45"/></name><operator pos:line="21" pos:column="45">++<pos:position pos:line="21" pos:column="47"/></operator> <operator pos:line="21" pos:column="48">-<pos:position pos:line="21" pos:column="49"/></operator> <literal type="number" pos:line="21" pos:column="50">1<pos:position pos:line="21" pos:column="51"/></literal></expr>]<pos:position pos:line="21" pos:column="52"/></index></name> <operator pos:line="21" pos:column="53">=<pos:position pos:line="21" pos:column="54"/></operator> <literal type="number" pos:line="21" pos:column="55">1<pos:position pos:line="21" pos:column="56"/></literal></expr>;<pos:position pos:line="21" pos:column="57"/></expr_stmt></block></while>
		<return pos:line="22" pos:column="17">return <expr><literal type="number" pos:line="22" pos:column="24">0<pos:position pos:line="22" pos:column="25"/></literal></expr>;<pos:position pos:line="22" pos:column="26"/></return>
	}<pos:position pos:line="23" pos:column="10"/></block></then></if></elseif></if>

	<expr_stmt><expr><call><name pos:line="25" pos:column="9">memset<pos:position pos:line="25" pos:column="15"/></name><argument_list pos:line="25" pos:column="15">(<argument><expr><operator pos:line="25" pos:column="16">&amp;<pos:position pos:line="25" pos:column="21"/></operator><name pos:line="25" pos:column="17">index<pos:position pos:line="25" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="24">0<pos:position pos:line="25" pos:column="25"/></literal></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="27">sizeof<argument_list pos:line="25" pos:column="33">(<argument><expr><name pos:line="25" pos:column="34">index<pos:position pos:line="25" pos:column="39"/></name></expr></argument>)<pos:position pos:line="25" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="25" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="42"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="27" pos:column="9">index<pos:position pos:line="27" pos:column="14"/></name><operator pos:line="27" pos:column="14">.<pos:position pos:line="27" pos:column="15"/></operator><name pos:line="27" pos:column="15">env<pos:position pos:line="27" pos:column="18"/></name></name> <operator pos:line="27" pos:column="19">=<pos:position pos:line="27" pos:column="20"/></operator> <name pos:line="27" pos:column="21">env<pos:position pos:line="27" pos:column="24"/></name></expr>;<pos:position pos:line="27" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="28" pos:column="9">index<pos:position pos:line="28" pos:column="14"/></name><operator pos:line="28" pos:column="14">.<pos:position pos:line="28" pos:column="15"/></operator><name pos:line="28" pos:column="15">xpp<pos:position pos:line="28" pos:column="18"/></name></name> <operator pos:line="28" pos:column="19">=<pos:position pos:line="28" pos:column="20"/></operator> <name pos:line="28" pos:column="21">xpp<pos:position pos:line="28" pos:column="24"/></name></expr>;<pos:position pos:line="28" pos:column="25"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="30" pos:column="9">index<pos:position pos:line="30" pos:column="14"/></name><operator pos:line="30" pos:column="14">.<pos:position pos:line="30" pos:column="15"/></operator><name pos:line="30" pos:column="15">records<pos:position pos:line="30" pos:column="22"/></name></name> <operator pos:line="30" pos:column="23">=<pos:position pos:line="30" pos:column="24"/></operator> <name pos:line="30" pos:column="25">NULL<pos:position pos:line="30" pos:column="29"/></name></expr>;<pos:position pos:line="30" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="31" pos:column="9">index<pos:position pos:line="31" pos:column="14"/></name><operator pos:line="31" pos:column="14">.<pos:position pos:line="31" pos:column="15"/></operator><name pos:line="31" pos:column="15">line_map<pos:position pos:line="31" pos:column="23"/></name></name> <operator pos:line="31" pos:column="24">=<pos:position pos:line="31" pos:column="25"/></operator> <name pos:line="31" pos:column="26">NULL<pos:position pos:line="31" pos:column="30"/></name></expr>;<pos:position pos:line="31" pos:column="31"/></expr_stmt>
	<comment type="block" pos:line="32" pos:column="9">/* in case of early xdl_cha_free() */</comment>
	<expr_stmt><expr><name><name pos:line="33" pos:column="9">index<pos:position pos:line="33" pos:column="14"/></name><operator pos:line="33" pos:column="14">.<pos:position pos:line="33" pos:column="15"/></operator><name pos:line="33" pos:column="15">rcha<pos:position pos:line="33" pos:column="19"/></name><operator pos:line="33" pos:column="19">.<pos:position pos:line="33" pos:column="20"/></operator><name pos:line="33" pos:column="20">head<pos:position pos:line="33" pos:column="24"/></name></name> <operator pos:line="33" pos:column="25">=<pos:position pos:line="33" pos:column="26"/></operator> <name pos:line="33" pos:column="27">NULL<pos:position pos:line="33" pos:column="31"/></name></expr>;<pos:position pos:line="33" pos:column="32"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="35" pos:column="9">index<pos:position pos:line="35" pos:column="14"/></name><operator pos:line="35" pos:column="14">.<pos:position pos:line="35" pos:column="15"/></operator><name pos:line="35" pos:column="15">table_bits<pos:position pos:line="35" pos:column="25"/></name></name> <operator pos:line="35" pos:column="26">=<pos:position pos:line="35" pos:column="27"/></operator> <call><name pos:line="35" pos:column="28">xdl_hashbits<pos:position pos:line="35" pos:column="40"/></name><argument_list pos:line="35" pos:column="40">(<argument><expr><name pos:line="35" pos:column="41">count1<pos:position pos:line="35" pos:column="47"/></name></expr></argument>)<pos:position pos:line="35" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="49"/></expr_stmt>
	<expr_stmt><expr><name pos:line="36" pos:column="9">sz<pos:position pos:line="36" pos:column="11"/></name> <operator pos:line="36" pos:column="12">=<pos:position pos:line="36" pos:column="13"/></operator> <name><name pos:line="36" pos:column="14">index<pos:position pos:line="36" pos:column="19"/></name><operator pos:line="36" pos:column="19">.<pos:position pos:line="36" pos:column="20"/></operator><name pos:line="36" pos:column="20">records_size<pos:position pos:line="36" pos:column="32"/></name></name> <operator pos:line="36" pos:column="33">=<pos:position pos:line="36" pos:column="34"/></operator> <literal type="number" pos:line="36" pos:column="35">1<pos:position pos:line="36" pos:column="36"/></literal> <operator pos:line="36" pos:column="37">&lt;&lt;<pos:position pos:line="36" pos:column="45"/></operator> <name><name pos:line="36" pos:column="40">index<pos:position pos:line="36" pos:column="45"/></name><operator pos:line="36" pos:column="45">.<pos:position pos:line="36" pos:column="46"/></operator><name pos:line="36" pos:column="46">table_bits<pos:position pos:line="36" pos:column="56"/></name></name></expr>;<pos:position pos:line="36" pos:column="57"/></expr_stmt>
	<expr_stmt><expr><name pos:line="37" pos:column="9">sz<pos:position pos:line="37" pos:column="11"/></name> <operator pos:line="37" pos:column="12">*=<pos:position pos:line="37" pos:column="14"/></operator> <sizeof pos:line="37" pos:column="15">sizeof<argument_list pos:line="37" pos:column="21">(<argument><expr pos:line="37" pos:column="22">struct <name pos:line="37" pos:column="29">record<pos:position pos:line="37" pos:column="35"/></name> <operator pos:line="37" pos:column="36">*<pos:position pos:line="37" pos:column="37"/></operator></expr></argument>)<pos:position pos:line="37" pos:column="38"/></argument_list></sizeof></expr>;<pos:position pos:line="37" pos:column="39"/></expr_stmt>
	<if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><operator pos:line="38" pos:column="13">!<pos:position pos:line="38" pos:column="14"/></operator><operator pos:line="38" pos:column="14">(<pos:position pos:line="38" pos:column="15"/></operator><name><name pos:line="38" pos:column="15">index<pos:position pos:line="38" pos:column="20"/></name><operator pos:line="38" pos:column="20">.<pos:position pos:line="38" pos:column="21"/></operator><name pos:line="38" pos:column="21">records<pos:position pos:line="38" pos:column="28"/></name></name> <operator pos:line="38" pos:column="29">=<pos:position pos:line="38" pos:column="30"/></operator> <operator pos:line="38" pos:column="31">(<pos:position pos:line="38" pos:column="32"/></operator>struct <name pos:line="38" pos:column="39">record<pos:position pos:line="38" pos:column="45"/></name> <operator pos:line="38" pos:column="46">*<pos:position pos:line="38" pos:column="47"/></operator><operator pos:line="38" pos:column="47">*<pos:position pos:line="38" pos:column="48"/></operator><operator pos:line="38" pos:column="48">)<pos:position pos:line="38" pos:column="49"/></operator> <call><name pos:line="38" pos:column="50">xdl_malloc<pos:position pos:line="38" pos:column="60"/></name><argument_list pos:line="38" pos:column="60">(<argument><expr><name pos:line="38" pos:column="61">sz<pos:position pos:line="38" pos:column="63"/></name></expr></argument>)<pos:position pos:line="38" pos:column="64"/></argument_list></call><operator pos:line="38" pos:column="64">)<pos:position pos:line="38" pos:column="65"/></operator></expr>)<pos:position pos:line="38" pos:column="66"/></condition><then pos:line="38" pos:column="66">
		<block type="pseudo"><goto pos:line="39" pos:column="17">goto <name pos:line="39" pos:column="22">cleanup<pos:position pos:line="39" pos:column="29"/></name>;<pos:position pos:line="39" pos:column="30"/></goto></block></then></if>
	<expr_stmt><expr><call><name pos:line="40" pos:column="9">memset<pos:position pos:line="40" pos:column="15"/></name><argument_list pos:line="40" pos:column="15">(<argument><expr><name><name pos:line="40" pos:column="16">index<pos:position pos:line="40" pos:column="21"/></name><operator pos:line="40" pos:column="21">.<pos:position pos:line="40" pos:column="22"/></operator><name pos:line="40" pos:column="22">records<pos:position pos:line="40" pos:column="29"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="31">0<pos:position pos:line="40" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="34">sz<pos:position pos:line="40" pos:column="36"/></name></expr></argument>)<pos:position pos:line="40" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="38"/></expr_stmt>

	<expr_stmt><expr><name pos:line="42" pos:column="9">sz<pos:position pos:line="42" pos:column="11"/></name> <operator pos:line="42" pos:column="12">=<pos:position pos:line="42" pos:column="13"/></operator> <name><name pos:line="42" pos:column="14">index<pos:position pos:line="42" pos:column="19"/></name><operator pos:line="42" pos:column="19">.<pos:position pos:line="42" pos:column="20"/></operator><name pos:line="42" pos:column="20">line_map_size<pos:position pos:line="42" pos:column="33"/></name></name> <operator pos:line="42" pos:column="34">=<pos:position pos:line="42" pos:column="35"/></operator> <name pos:line="42" pos:column="36">count1<pos:position pos:line="42" pos:column="42"/></name></expr>;<pos:position pos:line="42" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><name pos:line="43" pos:column="9">sz<pos:position pos:line="43" pos:column="11"/></name> <operator pos:line="43" pos:column="12">*=<pos:position pos:line="43" pos:column="14"/></operator> <sizeof pos:line="43" pos:column="15">sizeof<argument_list pos:line="43" pos:column="21">(<argument><expr pos:line="43" pos:column="22">struct <name pos:line="43" pos:column="29">record<pos:position pos:line="43" pos:column="35"/></name> <operator pos:line="43" pos:column="36">*<pos:position pos:line="43" pos:column="37"/></operator></expr></argument>)<pos:position pos:line="43" pos:column="38"/></argument_list></sizeof></expr>;<pos:position pos:line="43" pos:column="39"/></expr_stmt>
	<if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><operator pos:line="44" pos:column="13">!<pos:position pos:line="44" pos:column="14"/></operator><operator pos:line="44" pos:column="14">(<pos:position pos:line="44" pos:column="15"/></operator><name><name pos:line="44" pos:column="15">index<pos:position pos:line="44" pos:column="20"/></name><operator pos:line="44" pos:column="20">.<pos:position pos:line="44" pos:column="21"/></operator><name pos:line="44" pos:column="21">line_map<pos:position pos:line="44" pos:column="29"/></name></name> <operator pos:line="44" pos:column="30">=<pos:position pos:line="44" pos:column="31"/></operator> <operator pos:line="44" pos:column="32">(<pos:position pos:line="44" pos:column="33"/></operator>struct <name pos:line="44" pos:column="40">record<pos:position pos:line="44" pos:column="46"/></name> <operator pos:line="44" pos:column="47">*<pos:position pos:line="44" pos:column="48"/></operator><operator pos:line="44" pos:column="48">*<pos:position pos:line="44" pos:column="49"/></operator><operator pos:line="44" pos:column="49">)<pos:position pos:line="44" pos:column="50"/></operator> <call><name pos:line="44" pos:column="51">xdl_malloc<pos:position pos:line="44" pos:column="61"/></name><argument_list pos:line="44" pos:column="61">(<argument><expr><name pos:line="44" pos:column="62">sz<pos:position pos:line="44" pos:column="64"/></name></expr></argument>)<pos:position pos:line="44" pos:column="65"/></argument_list></call><operator pos:line="44" pos:column="65">)<pos:position pos:line="44" pos:column="66"/></operator></expr>)<pos:position pos:line="44" pos:column="67"/></condition><then pos:line="44" pos:column="67">
		<block type="pseudo"><goto pos:line="45" pos:column="17">goto <name pos:line="45" pos:column="22">cleanup<pos:position pos:line="45" pos:column="29"/></name>;<pos:position pos:line="45" pos:column="30"/></goto></block></then></if>
	<expr_stmt><expr><call><name pos:line="46" pos:column="9">memset<pos:position pos:line="46" pos:column="15"/></name><argument_list pos:line="46" pos:column="15">(<argument><expr><name><name pos:line="46" pos:column="16">index<pos:position pos:line="46" pos:column="21"/></name><operator pos:line="46" pos:column="21">.<pos:position pos:line="46" pos:column="22"/></operator><name pos:line="46" pos:column="22">line_map<pos:position pos:line="46" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="32">0<pos:position pos:line="46" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="35">sz<pos:position pos:line="46" pos:column="37"/></name></expr></argument>)<pos:position pos:line="46" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="39"/></expr_stmt>

	<expr_stmt><expr><name pos:line="48" pos:column="9">sz<pos:position pos:line="48" pos:column="11"/></name> <operator pos:line="48" pos:column="12">=<pos:position pos:line="48" pos:column="13"/></operator> <name><name pos:line="48" pos:column="14">index<pos:position pos:line="48" pos:column="19"/></name><operator pos:line="48" pos:column="19">.<pos:position pos:line="48" pos:column="20"/></operator><name pos:line="48" pos:column="20">line_map_size<pos:position pos:line="48" pos:column="33"/></name></name></expr>;<pos:position pos:line="48" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><name pos:line="49" pos:column="9">sz<pos:position pos:line="49" pos:column="11"/></name> <operator pos:line="49" pos:column="12">*=<pos:position pos:line="49" pos:column="14"/></operator> sizeof<operator pos:line="49" pos:column="21">(<pos:position pos:line="49" pos:column="22"/></operator><name pos:line="49" pos:column="22">unsigned<pos:position pos:line="49" pos:column="30"/></name> <name pos:line="49" pos:column="31">int<pos:position pos:line="49" pos:column="34"/></name><operator pos:line="49" pos:column="34">)<pos:position pos:line="49" pos:column="35"/></operator></expr>;<pos:position pos:line="49" pos:column="36"/></expr_stmt>
	<if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><operator pos:line="50" pos:column="13">!<pos:position pos:line="50" pos:column="14"/></operator><operator pos:line="50" pos:column="14">(<pos:position pos:line="50" pos:column="15"/></operator><name><name pos:line="50" pos:column="15">index<pos:position pos:line="50" pos:column="20"/></name><operator pos:line="50" pos:column="20">.<pos:position pos:line="50" pos:column="21"/></operator><name pos:line="50" pos:column="21">next_ptrs<pos:position pos:line="50" pos:column="30"/></name></name> <operator pos:line="50" pos:column="31">=<pos:position pos:line="50" pos:column="32"/></operator> <operator pos:line="50" pos:column="33">(<pos:position pos:line="50" pos:column="34"/></operator><name pos:line="50" pos:column="34">unsigned<pos:position pos:line="50" pos:column="42"/></name> <name pos:line="50" pos:column="43">int<pos:position pos:line="50" pos:column="46"/></name> <operator pos:line="50" pos:column="47">*<pos:position pos:line="50" pos:column="48"/></operator><operator pos:line="50" pos:column="48">)<pos:position pos:line="50" pos:column="49"/></operator> <call><name pos:line="50" pos:column="50">xdl_malloc<pos:position pos:line="50" pos:column="60"/></name><argument_list pos:line="50" pos:column="60">(<argument><expr><name pos:line="50" pos:column="61">sz<pos:position pos:line="50" pos:column="63"/></name></expr></argument>)<pos:position pos:line="50" pos:column="64"/></argument_list></call><operator pos:line="50" pos:column="64">)<pos:position pos:line="50" pos:column="65"/></operator></expr>)<pos:position pos:line="50" pos:column="66"/></condition><then pos:line="50" pos:column="66">
		<block type="pseudo"><goto pos:line="51" pos:column="17">goto <name pos:line="51" pos:column="22">cleanup<pos:position pos:line="51" pos:column="29"/></name>;<pos:position pos:line="51" pos:column="30"/></goto></block></then></if>
	<expr_stmt><expr><call><name pos:line="52" pos:column="9">memset<pos:position pos:line="52" pos:column="15"/></name><argument_list pos:line="52" pos:column="15">(<argument><expr><name><name pos:line="52" pos:column="16">index<pos:position pos:line="52" pos:column="21"/></name><operator pos:line="52" pos:column="21">.<pos:position pos:line="52" pos:column="22"/></operator><name pos:line="52" pos:column="22">next_ptrs<pos:position pos:line="52" pos:column="31"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="52" pos:column="33">0<pos:position pos:line="52" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="52" pos:column="36">sz<pos:position pos:line="52" pos:column="38"/></name></expr></argument>)<pos:position pos:line="52" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="40"/></expr_stmt>

	<comment type="block" pos:line="54" pos:column="9">/* lines / 4 + 1 comes from xprepare.c:xdl_prepare_ctx() */</comment>
	<if pos:line="55" pos:column="9">if <condition pos:line="55" pos:column="12">(<expr><call><name pos:line="55" pos:column="13">xdl_cha_init<pos:position pos:line="55" pos:column="25"/></name><argument_list pos:line="55" pos:column="25">(<argument><expr><operator pos:line="55" pos:column="26">&amp;<pos:position pos:line="55" pos:column="31"/></operator><name><name pos:line="55" pos:column="27">index<pos:position pos:line="55" pos:column="32"/></name><operator pos:line="55" pos:column="32">.<pos:position pos:line="55" pos:column="33"/></operator><name pos:line="55" pos:column="33">rcha<pos:position pos:line="55" pos:column="37"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="55" pos:column="39">sizeof<argument_list pos:line="55" pos:column="45">(<argument><expr pos:line="55" pos:column="46">struct <name pos:line="55" pos:column="53">record<pos:position pos:line="55" pos:column="59"/></name></expr></argument>)<pos:position pos:line="55" pos:column="60"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="55" pos:column="62">count1<pos:position pos:line="55" pos:column="68"/></name> <operator pos:line="55" pos:column="69">/<pos:position pos:line="55" pos:column="70"/></operator> <literal type="number" pos:line="55" pos:column="71">4<pos:position pos:line="55" pos:column="72"/></literal> <operator pos:line="55" pos:column="73">+<pos:position pos:line="55" pos:column="74"/></operator> <literal type="number" pos:line="55" pos:column="75">1<pos:position pos:line="55" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="77"/></argument_list></call> <operator pos:line="55" pos:column="78">&lt;<pos:position pos:line="55" pos:column="82"/></operator> <literal type="number" pos:line="55" pos:column="80">0<pos:position pos:line="55" pos:column="81"/></literal></expr>)<pos:position pos:line="55" pos:column="82"/></condition><then pos:line="55" pos:column="82">
		<block type="pseudo"><goto pos:line="56" pos:column="17">goto <name pos:line="56" pos:column="22">cleanup<pos:position pos:line="56" pos:column="29"/></name>;<pos:position pos:line="56" pos:column="30"/></goto></block></then></if>

	<expr_stmt><expr><name><name pos:line="58" pos:column="9">index<pos:position pos:line="58" pos:column="14"/></name><operator pos:line="58" pos:column="14">.<pos:position pos:line="58" pos:column="15"/></operator><name pos:line="58" pos:column="15">ptr_shift<pos:position pos:line="58" pos:column="24"/></name></name> <operator pos:line="58" pos:column="25">=<pos:position pos:line="58" pos:column="26"/></operator> <name pos:line="58" pos:column="27">line1<pos:position pos:line="58" pos:column="32"/></name></expr>;<pos:position pos:line="58" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="59" pos:column="9">index<pos:position pos:line="59" pos:column="14"/></name><operator pos:line="59" pos:column="14">.<pos:position pos:line="59" pos:column="15"/></operator><name pos:line="59" pos:column="15">max_chain_length<pos:position pos:line="59" pos:column="31"/></name></name> <operator pos:line="59" pos:column="32">=<pos:position pos:line="59" pos:column="33"/></operator> <literal type="number" pos:line="59" pos:column="34">64<pos:position pos:line="59" pos:column="36"/></literal></expr>;<pos:position pos:line="59" pos:column="37"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="61" pos:column="9">memset<pos:position pos:line="61" pos:column="15"/></name><argument_list pos:line="61" pos:column="15">(<argument><expr><operator pos:line="61" pos:column="16">&amp;<pos:position pos:line="61" pos:column="21"/></operator><name pos:line="61" pos:column="17">lcs<pos:position pos:line="61" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="61" pos:column="22">0<pos:position pos:line="61" pos:column="23"/></literal></expr></argument>, <argument><expr><sizeof pos:line="61" pos:column="25">sizeof<argument_list pos:line="61" pos:column="31">(<argument><expr><name pos:line="61" pos:column="32">lcs<pos:position pos:line="61" pos:column="35"/></name></expr></argument>)<pos:position pos:line="61" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="61" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="38"/></expr_stmt>
	<if pos:line="62" pos:column="9">if <condition pos:line="62" pos:column="12">(<expr><call><name pos:line="62" pos:column="13">find_lcs<pos:position pos:line="62" pos:column="21"/></name><argument_list pos:line="62" pos:column="21">(<argument><expr><operator pos:line="62" pos:column="22">&amp;<pos:position pos:line="62" pos:column="27"/></operator><name pos:line="62" pos:column="23">index<pos:position pos:line="62" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="62" pos:column="30">&amp;<pos:position pos:line="62" pos:column="35"/></operator><name pos:line="62" pos:column="31">lcs<pos:position pos:line="62" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="36">line1<pos:position pos:line="62" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="43">count1<pos:position pos:line="62" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="51">line2<pos:position pos:line="62" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="58">count2<pos:position pos:line="62" pos:column="64"/></name></expr></argument>)<pos:position pos:line="62" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="62" pos:column="66"/></condition><then pos:line="62" pos:column="66">
		<block type="pseudo"><expr_stmt><expr><name pos:line="63" pos:column="17">result<pos:position pos:line="63" pos:column="23"/></name> <operator pos:line="63" pos:column="24">=<pos:position pos:line="63" pos:column="25"/></operator> <call><name pos:line="63" pos:column="26">fall_back_to_classic_diff<pos:position pos:line="63" pos:column="51"/></name><argument_list pos:line="63" pos:column="51">(<argument><expr><operator pos:line="63" pos:column="52">&amp;<pos:position pos:line="63" pos:column="57"/></operator><name pos:line="63" pos:column="53">index<pos:position pos:line="63" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="60">line1<pos:position pos:line="63" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="67">count1<pos:position pos:line="63" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="75">line2<pos:position pos:line="63" pos:column="80"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="82">count2<pos:position pos:line="63" pos:column="88"/></name></expr></argument>)<pos:position pos:line="63" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="90"/></expr_stmt></block></then>
	<else pos:line="64" pos:column="9">else <block pos:line="64" pos:column="14">{
		<if pos:line="65" pos:column="17">if <condition pos:line="65" pos:column="20">(<expr><name><name pos:line="65" pos:column="21">lcs<pos:position pos:line="65" pos:column="24"/></name><operator pos:line="65" pos:column="24">.<pos:position pos:line="65" pos:column="25"/></operator><name pos:line="65" pos:column="25">begin1<pos:position pos:line="65" pos:column="31"/></name></name> <operator pos:line="65" pos:column="32">==<pos:position pos:line="65" pos:column="34"/></operator> <literal type="number" pos:line="65" pos:column="35">0<pos:position pos:line="65" pos:column="36"/></literal> <operator pos:line="65" pos:column="37">&amp;&amp;<pos:position pos:line="65" pos:column="47"/></operator> <name><name pos:line="65" pos:column="40">lcs<pos:position pos:line="65" pos:column="43"/></name><operator pos:line="65" pos:column="43">.<pos:position pos:line="65" pos:column="44"/></operator><name pos:line="65" pos:column="44">begin2<pos:position pos:line="65" pos:column="50"/></name></name> <operator pos:line="65" pos:column="51">==<pos:position pos:line="65" pos:column="53"/></operator> <literal type="number" pos:line="65" pos:column="54">0<pos:position pos:line="65" pos:column="55"/></literal></expr>)<pos:position pos:line="65" pos:column="56"/></condition><then pos:line="65" pos:column="56"> <block pos:line="65" pos:column="57">{
			<while pos:line="66" pos:column="25">while <condition pos:line="66" pos:column="31">(<expr><name pos:line="66" pos:column="32">count1<pos:position pos:line="66" pos:column="38"/></name><operator pos:line="66" pos:column="38">--<pos:position pos:line="66" pos:column="40"/></operator></expr>)<pos:position pos:line="66" pos:column="41"/></condition>
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="67" pos:column="33">env<pos:position pos:line="67" pos:column="36"/></name><operator pos:line="67" pos:column="36">-&gt;<pos:position pos:line="67" pos:column="41"/></operator><name pos:line="67" pos:column="38">xdf1<pos:position pos:line="67" pos:column="42"/></name><operator pos:line="67" pos:column="42">.<pos:position pos:line="67" pos:column="43"/></operator><name pos:line="67" pos:column="43">rchg<pos:position pos:line="67" pos:column="47"/></name><index pos:line="67" pos:column="47">[<expr><name pos:line="67" pos:column="48">line1<pos:position pos:line="67" pos:column="53"/></name><operator pos:line="67" pos:column="53">++<pos:position pos:line="67" pos:column="55"/></operator> <operator pos:line="67" pos:column="56">-<pos:position pos:line="67" pos:column="57"/></operator> <literal type="number" pos:line="67" pos:column="58">1<pos:position pos:line="67" pos:column="59"/></literal></expr>]<pos:position pos:line="67" pos:column="60"/></index></name> <operator pos:line="67" pos:column="61">=<pos:position pos:line="67" pos:column="62"/></operator> <literal type="number" pos:line="67" pos:column="63">1<pos:position pos:line="67" pos:column="64"/></literal></expr>;<pos:position pos:line="67" pos:column="65"/></expr_stmt></block></while>
			<while pos:line="68" pos:column="25">while <condition pos:line="68" pos:column="31">(<expr><name pos:line="68" pos:column="32">count2<pos:position pos:line="68" pos:column="38"/></name><operator pos:line="68" pos:column="38">--<pos:position pos:line="68" pos:column="40"/></operator></expr>)<pos:position pos:line="68" pos:column="41"/></condition>
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="69" pos:column="33">env<pos:position pos:line="69" pos:column="36"/></name><operator pos:line="69" pos:column="36">-&gt;<pos:position pos:line="69" pos:column="41"/></operator><name pos:line="69" pos:column="38">xdf2<pos:position pos:line="69" pos:column="42"/></name><operator pos:line="69" pos:column="42">.<pos:position pos:line="69" pos:column="43"/></operator><name pos:line="69" pos:column="43">rchg<pos:position pos:line="69" pos:column="47"/></name><index pos:line="69" pos:column="47">[<expr><name pos:line="69" pos:column="48">line2<pos:position pos:line="69" pos:column="53"/></name><operator pos:line="69" pos:column="53">++<pos:position pos:line="69" pos:column="55"/></operator> <operator pos:line="69" pos:column="56">-<pos:position pos:line="69" pos:column="57"/></operator> <literal type="number" pos:line="69" pos:column="58">1<pos:position pos:line="69" pos:column="59"/></literal></expr>]<pos:position pos:line="69" pos:column="60"/></index></name> <operator pos:line="69" pos:column="61">=<pos:position pos:line="69" pos:column="62"/></operator> <literal type="number" pos:line="69" pos:column="63">1<pos:position pos:line="69" pos:column="64"/></literal></expr>;<pos:position pos:line="69" pos:column="65"/></expr_stmt></block></while>
			<expr_stmt><expr><name pos:line="70" pos:column="25">result<pos:position pos:line="70" pos:column="31"/></name> <operator pos:line="70" pos:column="32">=<pos:position pos:line="70" pos:column="33"/></operator> <literal type="number" pos:line="70" pos:column="34">0<pos:position pos:line="70" pos:column="35"/></literal></expr>;<pos:position pos:line="70" pos:column="36"/></expr_stmt>
		}<pos:position pos:line="71" pos:column="18"/></block></then> <else pos:line="71" pos:column="19">else <block pos:line="71" pos:column="24">{
			<expr_stmt><expr><name pos:line="72" pos:column="25">result<pos:position pos:line="72" pos:column="31"/></name> <operator pos:line="72" pos:column="32">=<pos:position pos:line="72" pos:column="33"/></operator> <call><name pos:line="72" pos:column="34">histogram_diff<pos:position pos:line="72" pos:column="48"/></name><argument_list pos:line="72" pos:column="48">(<argument><expr><name pos:line="72" pos:column="49">xpp<pos:position pos:line="72" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="54">env<pos:position pos:line="72" pos:column="57"/></name></expr></argument>,
						<argument><expr><name pos:line="73" pos:column="49">line1<pos:position pos:line="73" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="73" pos:column="56">lcs<pos:position pos:line="73" pos:column="59"/></name><operator pos:line="73" pos:column="59">.<pos:position pos:line="73" pos:column="60"/></operator><name pos:line="73" pos:column="60">begin1<pos:position pos:line="73" pos:column="66"/></name></name> <operator pos:line="73" pos:column="67">-<pos:position pos:line="73" pos:column="68"/></operator> <name pos:line="73" pos:column="69">line1<pos:position pos:line="73" pos:column="74"/></name></expr></argument>,
						<argument><expr><name pos:line="74" pos:column="49">line2<pos:position pos:line="74" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="74" pos:column="56">lcs<pos:position pos:line="74" pos:column="59"/></name><operator pos:line="74" pos:column="59">.<pos:position pos:line="74" pos:column="60"/></operator><name pos:line="74" pos:column="60">begin2<pos:position pos:line="74" pos:column="66"/></name></name> <operator pos:line="74" pos:column="67">-<pos:position pos:line="74" pos:column="68"/></operator> <name pos:line="74" pos:column="69">line2<pos:position pos:line="74" pos:column="74"/></name></expr></argument>)<pos:position pos:line="74" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="76"/></expr_stmt>
			<if pos:line="75" pos:column="25">if <condition pos:line="75" pos:column="28">(<expr><name pos:line="75" pos:column="29">result<pos:position pos:line="75" pos:column="35"/></name></expr>)<pos:position pos:line="75" pos:column="36"/></condition><then pos:line="75" pos:column="36">
				<block type="pseudo"><goto pos:line="76" pos:column="33">goto <name pos:line="76" pos:column="38">cleanup<pos:position pos:line="76" pos:column="45"/></name>;<pos:position pos:line="76" pos:column="46"/></goto></block></then></if>
			<expr_stmt><expr><name pos:line="77" pos:column="25">result<pos:position pos:line="77" pos:column="31"/></name> <operator pos:line="77" pos:column="32">=<pos:position pos:line="77" pos:column="33"/></operator> <call><name pos:line="77" pos:column="34">histogram_diff<pos:position pos:line="77" pos:column="48"/></name><argument_list pos:line="77" pos:column="48">(<argument><expr><name pos:line="77" pos:column="49">xpp<pos:position pos:line="77" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="54">env<pos:position pos:line="77" pos:column="57"/></name></expr></argument>,
						<argument><expr><name><name pos:line="78" pos:column="49">lcs<pos:position pos:line="78" pos:column="52"/></name><operator pos:line="78" pos:column="52">.<pos:position pos:line="78" pos:column="53"/></operator><name pos:line="78" pos:column="53">end1<pos:position pos:line="78" pos:column="57"/></name></name> <operator pos:line="78" pos:column="58">+<pos:position pos:line="78" pos:column="59"/></operator> <literal type="number" pos:line="78" pos:column="60">1<pos:position pos:line="78" pos:column="61"/></literal></expr></argument>, <argument><expr><call><name pos:line="78" pos:column="63">LINE_END<pos:position pos:line="78" pos:column="71"/></name><argument_list pos:line="78" pos:column="71">(<argument><expr><literal type="number" pos:line="78" pos:column="72">1<pos:position pos:line="78" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="74"/></argument_list></call> <operator pos:line="78" pos:column="75">-<pos:position pos:line="78" pos:column="76"/></operator> <name><name pos:line="78" pos:column="77">lcs<pos:position pos:line="78" pos:column="80"/></name><operator pos:line="78" pos:column="80">.<pos:position pos:line="78" pos:column="81"/></operator><name pos:line="78" pos:column="81">end1<pos:position pos:line="78" pos:column="85"/></name></name></expr></argument>,
						<argument><expr><name><name pos:line="79" pos:column="49">lcs<pos:position pos:line="79" pos:column="52"/></name><operator pos:line="79" pos:column="52">.<pos:position pos:line="79" pos:column="53"/></operator><name pos:line="79" pos:column="53">end2<pos:position pos:line="79" pos:column="57"/></name></name> <operator pos:line="79" pos:column="58">+<pos:position pos:line="79" pos:column="59"/></operator> <literal type="number" pos:line="79" pos:column="60">1<pos:position pos:line="79" pos:column="61"/></literal></expr></argument>, <argument><expr><call><name pos:line="79" pos:column="63">LINE_END<pos:position pos:line="79" pos:column="71"/></name><argument_list pos:line="79" pos:column="71">(<argument><expr><literal type="number" pos:line="79" pos:column="72">2<pos:position pos:line="79" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="74"/></argument_list></call> <operator pos:line="79" pos:column="75">-<pos:position pos:line="79" pos:column="76"/></operator> <name><name pos:line="79" pos:column="77">lcs<pos:position pos:line="79" pos:column="80"/></name><operator pos:line="79" pos:column="80">.<pos:position pos:line="79" pos:column="81"/></operator><name pos:line="79" pos:column="81">end2<pos:position pos:line="79" pos:column="85"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="87"/></expr_stmt>
			<if pos:line="80" pos:column="25">if <condition pos:line="80" pos:column="28">(<expr><name pos:line="80" pos:column="29">result<pos:position pos:line="80" pos:column="35"/></name></expr>)<pos:position pos:line="80" pos:column="36"/></condition><then pos:line="80" pos:column="36">
				<block type="pseudo"><goto pos:line="81" pos:column="33">goto <name pos:line="81" pos:column="38">cleanup<pos:position pos:line="81" pos:column="45"/></name>;<pos:position pos:line="81" pos:column="46"/></goto></block></then></if>
		}<pos:position pos:line="82" pos:column="18"/></block></else></if>
	}<pos:position pos:line="83" pos:column="10"/></block></else></if>

<label><name pos:line="85" pos:column="1">cleanup<pos:position pos:line="85" pos:column="8"/></name>:<pos:position pos:line="85" pos:column="9"/></label>
	<expr_stmt><expr><call><name pos:line="86" pos:column="9">xdl_free<pos:position pos:line="86" pos:column="17"/></name><argument_list pos:line="86" pos:column="17">(<argument><expr><name><name pos:line="86" pos:column="18">index<pos:position pos:line="86" pos:column="23"/></name><operator pos:line="86" pos:column="23">.<pos:position pos:line="86" pos:column="24"/></operator><name pos:line="86" pos:column="24">records<pos:position pos:line="86" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="86" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="87" pos:column="9">xdl_free<pos:position pos:line="87" pos:column="17"/></name><argument_list pos:line="87" pos:column="17">(<argument><expr><name><name pos:line="87" pos:column="18">index<pos:position pos:line="87" pos:column="23"/></name><operator pos:line="87" pos:column="23">.<pos:position pos:line="87" pos:column="24"/></operator><name pos:line="87" pos:column="24">line_map<pos:position pos:line="87" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="87" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="88" pos:column="9">xdl_free<pos:position pos:line="88" pos:column="17"/></name><argument_list pos:line="88" pos:column="17">(<argument><expr><name><name pos:line="88" pos:column="18">index<pos:position pos:line="88" pos:column="23"/></name><operator pos:line="88" pos:column="23">.<pos:position pos:line="88" pos:column="24"/></operator><name pos:line="88" pos:column="24">next_ptrs<pos:position pos:line="88" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="88" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="89" pos:column="9">xdl_cha_free<pos:position pos:line="89" pos:column="21"/></name><argument_list pos:line="89" pos:column="21">(<argument><expr><operator pos:line="89" pos:column="22">&amp;<pos:position pos:line="89" pos:column="27"/></operator><name><name pos:line="89" pos:column="23">index<pos:position pos:line="89" pos:column="28"/></name><operator pos:line="89" pos:column="28">.<pos:position pos:line="89" pos:column="29"/></operator><name pos:line="89" pos:column="29">rcha<pos:position pos:line="89" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="89" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="35"/></expr_stmt>

	<return pos:line="91" pos:column="9">return <expr><name pos:line="91" pos:column="16">result<pos:position pos:line="91" pos:column="22"/></name></expr>;<pos:position pos:line="91" pos:column="23"/></return>
}<pos:position pos:line="92" pos:column="2"/></block></function></unit>

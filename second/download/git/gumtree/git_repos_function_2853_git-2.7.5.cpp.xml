<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2853_git-2.7.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">ref_is_hidden<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><specifier pos:line="1" pos:column="19">const<pos:position pos:line="1" pos:column="24"/></specifier> <name pos:line="1" pos:column="25">char<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">refname<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="40">const<pos:position pos:line="1" pos:column="45"/></specifier> <name pos:line="1" pos:column="46">char<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">refname_full<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">hide_refs<pos:position pos:line="5" pos:column="23"/></name></expr>)<pos:position pos:line="5" pos:column="24"/></condition><then pos:line="5" pos:column="24">
		<block type="pseudo"><return pos:line="6" pos:column="17">return <expr><literal type="number" pos:line="6" pos:column="24">0<pos:position pos:line="6" pos:column="25"/></literal></expr>;<pos:position pos:line="6" pos:column="26"/></return></block></then></if>
	<for pos:line="7" pos:column="9">for <control pos:line="7" pos:column="13">(<init><expr><name pos:line="7" pos:column="14">i<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">=<pos:position pos:line="7" pos:column="17"/></operator> <name><name pos:line="7" pos:column="18">hide_refs<pos:position pos:line="7" pos:column="27"/></name><operator pos:line="7" pos:column="27">-&gt;<pos:position pos:line="7" pos:column="32"/></operator><name pos:line="7" pos:column="29">nr<pos:position pos:line="7" pos:column="31"/></name></name> <operator pos:line="7" pos:column="32">-<pos:position pos:line="7" pos:column="33"/></operator> <literal type="number" pos:line="7" pos:column="34">1<pos:position pos:line="7" pos:column="35"/></literal></expr>;<pos:position pos:line="7" pos:column="36"/></init> <condition><expr><name pos:line="7" pos:column="37">i<pos:position pos:line="7" pos:column="38"/></name> <operator pos:line="7" pos:column="39">&gt;=<pos:position pos:line="7" pos:column="44"/></operator> <literal type="number" pos:line="7" pos:column="42">0<pos:position pos:line="7" pos:column="43"/></literal></expr>;<pos:position pos:line="7" pos:column="44"/></condition> <incr><expr><name pos:line="7" pos:column="45">i<pos:position pos:line="7" pos:column="46"/></name><operator pos:line="7" pos:column="46">--<pos:position pos:line="7" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="7" pos:column="49"/></control> <block pos:line="7" pos:column="50">{
		<decl_stmt><decl><type><specifier pos:line="8" pos:column="17">const<pos:position pos:line="8" pos:column="22"/></specifier> <name pos:line="8" pos:column="23">char<pos:position pos:line="8" pos:column="27"/></name> <modifier pos:line="8" pos:column="28">*<pos:position pos:line="8" pos:column="29"/></modifier></type><name pos:line="8" pos:column="29">match<pos:position pos:line="8" pos:column="34"/></name> <init pos:line="8" pos:column="35">= <expr><name><name pos:line="8" pos:column="37">hide_refs<pos:position pos:line="8" pos:column="46"/></name><operator pos:line="8" pos:column="46">-&gt;<pos:position pos:line="8" pos:column="51"/></operator><name pos:line="8" pos:column="48">items<pos:position pos:line="8" pos:column="53"/></name><index pos:line="8" pos:column="53">[<expr><name pos:line="8" pos:column="54">i<pos:position pos:line="8" pos:column="55"/></name></expr>]<pos:position pos:line="8" pos:column="56"/></index></name><operator pos:line="8" pos:column="56">.<pos:position pos:line="8" pos:column="57"/></operator><name pos:line="8" pos:column="57">string<pos:position pos:line="8" pos:column="63"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="64"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="9" pos:column="17">const<pos:position pos:line="9" pos:column="22"/></specifier> <name pos:line="9" pos:column="23">char<pos:position pos:line="9" pos:column="27"/></name> <modifier pos:line="9" pos:column="28">*<pos:position pos:line="9" pos:column="29"/></modifier></type><name pos:line="9" pos:column="29">subject<pos:position pos:line="9" pos:column="36"/></name></decl>;<pos:position pos:line="9" pos:column="37"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="10" pos:column="17">int<pos:position pos:line="10" pos:column="20"/></name></type> <name pos:line="10" pos:column="21">neg<pos:position pos:line="10" pos:column="24"/></name> <init pos:line="10" pos:column="25">= <expr><literal type="number" pos:line="10" pos:column="27">0<pos:position pos:line="10" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="29"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="11" pos:column="17">int<pos:position pos:line="11" pos:column="20"/></name></type> <name pos:line="11" pos:column="21">len<pos:position pos:line="11" pos:column="24"/></name></decl>;<pos:position pos:line="11" pos:column="25"/></decl_stmt>

		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><operator pos:line="13" pos:column="21">*<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="22">match<pos:position pos:line="13" pos:column="27"/></name> <operator pos:line="13" pos:column="28">==<pos:position pos:line="13" pos:column="30"/></operator> <literal type="char" pos:line="13" pos:column="31">'!'<pos:position pos:line="13" pos:column="34"/></literal></expr>)<pos:position pos:line="13" pos:column="35"/></condition><then pos:line="13" pos:column="35"> <block pos:line="13" pos:column="36">{
			<expr_stmt><expr><name pos:line="14" pos:column="25">neg<pos:position pos:line="14" pos:column="28"/></name> <operator pos:line="14" pos:column="29">=<pos:position pos:line="14" pos:column="30"/></operator> <literal type="number" pos:line="14" pos:column="31">1<pos:position pos:line="14" pos:column="32"/></literal></expr>;<pos:position pos:line="14" pos:column="33"/></expr_stmt>
			<expr_stmt><expr><name pos:line="15" pos:column="25">match<pos:position pos:line="15" pos:column="30"/></name><operator pos:line="15" pos:column="30">++<pos:position pos:line="15" pos:column="32"/></operator></expr>;<pos:position pos:line="15" pos:column="33"/></expr_stmt>
		}<pos:position pos:line="16" pos:column="18"/></block></then></if>

		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><operator pos:line="18" pos:column="21">*<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="22">match<pos:position pos:line="18" pos:column="27"/></name> <operator pos:line="18" pos:column="28">==<pos:position pos:line="18" pos:column="30"/></operator> <literal type="char" pos:line="18" pos:column="31">'^'<pos:position pos:line="18" pos:column="34"/></literal></expr>)<pos:position pos:line="18" pos:column="35"/></condition><then pos:line="18" pos:column="35"> <block pos:line="18" pos:column="36">{
			<expr_stmt><expr><name pos:line="19" pos:column="25">subject<pos:position pos:line="19" pos:column="32"/></name> <operator pos:line="19" pos:column="33">=<pos:position pos:line="19" pos:column="34"/></operator> <name pos:line="19" pos:column="35">refname_full<pos:position pos:line="19" pos:column="47"/></name></expr>;<pos:position pos:line="19" pos:column="48"/></expr_stmt>
			<expr_stmt><expr><name pos:line="20" pos:column="25">match<pos:position pos:line="20" pos:column="30"/></name><operator pos:line="20" pos:column="30">++<pos:position pos:line="20" pos:column="32"/></operator></expr>;<pos:position pos:line="20" pos:column="33"/></expr_stmt>
		}<pos:position pos:line="21" pos:column="18"/></block></then> <else pos:line="21" pos:column="19">else <block pos:line="21" pos:column="24">{
			<expr_stmt><expr><name pos:line="22" pos:column="25">subject<pos:position pos:line="22" pos:column="32"/></name> <operator pos:line="22" pos:column="33">=<pos:position pos:line="22" pos:column="34"/></operator> <name pos:line="22" pos:column="35">refname<pos:position pos:line="22" pos:column="42"/></name></expr>;<pos:position pos:line="22" pos:column="43"/></expr_stmt>
		}<pos:position pos:line="23" pos:column="18"/></block></else></if>

		<comment type="block" pos:line="25" pos:column="17">/* refname can be NULL when namespaces are used. */</comment>
		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><operator pos:line="26" pos:column="21">!<pos:position pos:line="26" pos:column="22"/></operator><name pos:line="26" pos:column="22">subject<pos:position pos:line="26" pos:column="29"/></name> <operator pos:line="26" pos:column="30">||<pos:position pos:line="26" pos:column="32"/></operator> <operator pos:line="26" pos:column="33">!<pos:position pos:line="26" pos:column="34"/></operator><call><name pos:line="26" pos:column="34">starts_with<pos:position pos:line="26" pos:column="45"/></name><argument_list pos:line="26" pos:column="45">(<argument><expr><name pos:line="26" pos:column="46">subject<pos:position pos:line="26" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="55">match<pos:position pos:line="26" pos:column="60"/></name></expr></argument>)<pos:position pos:line="26" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="62"/></condition><then pos:line="26" pos:column="62">
			<block type="pseudo"><continue pos:line="27" pos:column="25">continue;<pos:position pos:line="27" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><name pos:line="28" pos:column="17">len<pos:position pos:line="28" pos:column="20"/></name> <operator pos:line="28" pos:column="21">=<pos:position pos:line="28" pos:column="22"/></operator> <call><name pos:line="28" pos:column="23">strlen<pos:position pos:line="28" pos:column="29"/></name><argument_list pos:line="28" pos:column="29">(<argument><expr><name pos:line="28" pos:column="30">match<pos:position pos:line="28" pos:column="35"/></name></expr></argument>)<pos:position pos:line="28" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="37"/></expr_stmt>
		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><operator pos:line="29" pos:column="21">!<pos:position pos:line="29" pos:column="22"/></operator><name><name pos:line="29" pos:column="22">subject<pos:position pos:line="29" pos:column="29"/></name><index pos:line="29" pos:column="29">[<expr><name pos:line="29" pos:column="30">len<pos:position pos:line="29" pos:column="33"/></name></expr>]<pos:position pos:line="29" pos:column="34"/></index></name> <operator pos:line="29" pos:column="35">||<pos:position pos:line="29" pos:column="37"/></operator> <name><name pos:line="29" pos:column="38">subject<pos:position pos:line="29" pos:column="45"/></name><index pos:line="29" pos:column="45">[<expr><name pos:line="29" pos:column="46">len<pos:position pos:line="29" pos:column="49"/></name></expr>]<pos:position pos:line="29" pos:column="50"/></index></name> <operator pos:line="29" pos:column="51">==<pos:position pos:line="29" pos:column="53"/></operator> <literal type="char" pos:line="29" pos:column="54">'/'<pos:position pos:line="29" pos:column="57"/></literal></expr>)<pos:position pos:line="29" pos:column="58"/></condition><then pos:line="29" pos:column="58">
			<block type="pseudo"><return pos:line="30" pos:column="25">return <expr><operator pos:line="30" pos:column="32">!<pos:position pos:line="30" pos:column="33"/></operator><name pos:line="30" pos:column="33">neg<pos:position pos:line="30" pos:column="36"/></name></expr>;<pos:position pos:line="30" pos:column="37"/></return></block></then></if>
	}<pos:position pos:line="31" pos:column="10"/></block></for>
	<return pos:line="32" pos:column="9">return <expr><literal type="number" pos:line="32" pos:column="16">0<pos:position pos:line="32" pos:column="17"/></literal></expr>;<pos:position pos:line="32" pos:column="18"/></return>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5298_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">try_parent_shorthands<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><specifier pos:line="1" pos:column="34">const<pos:position pos:line="1" pos:column="39"/></specifier> <name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">arg<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">dotdot<pos:position pos:line="3" pos:column="21"/></name></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">object_id<pos:position pos:line="4" pos:column="25"/></name></name></type> <name pos:line="4" pos:column="26">oid<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">commit<pos:position pos:line="5" pos:column="22"/></name></name> <modifier pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></modifier></type><name pos:line="5" pos:column="24">commit<pos:position pos:line="5" pos:column="30"/></name></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">commit_list<pos:position pos:line="6" pos:column="27"/></name></name> <modifier pos:line="6" pos:column="28">*<pos:position pos:line="6" pos:column="29"/></modifier></type><name pos:line="6" pos:column="29">parents<pos:position pos:line="6" pos:column="36"/></name></decl>;<pos:position pos:line="6" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">parent_number<pos:position pos:line="7" pos:column="26"/></name></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">include_rev<pos:position pos:line="8" pos:column="24"/></name> <init pos:line="8" pos:column="25">= <expr><literal type="number" pos:line="8" pos:column="27">0<pos:position pos:line="8" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">include_parents<pos:position pos:line="9" pos:column="28"/></name> <init pos:line="9" pos:column="29">= <expr><literal type="number" pos:line="9" pos:column="31">0<pos:position pos:line="9" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">exclude_parent<pos:position pos:line="10" pos:column="27"/></name> <init pos:line="10" pos:column="28">= <expr><literal type="number" pos:line="10" pos:column="30">0<pos:position pos:line="10" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="32"/></decl_stmt>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">(<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">dotdot<pos:position pos:line="12" pos:column="20"/></name> <operator pos:line="12" pos:column="21">=<pos:position pos:line="12" pos:column="22"/></operator> <call><name pos:line="12" pos:column="23">strstr<pos:position pos:line="12" pos:column="29"/></name><argument_list pos:line="12" pos:column="29">(<argument><expr><name pos:line="12" pos:column="30">arg<pos:position pos:line="12" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="35">"^!"<pos:position pos:line="12" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="40"/></argument_list></call><operator pos:line="12" pos:column="40">)<pos:position pos:line="12" pos:column="41"/></operator></expr>)<pos:position pos:line="12" pos:column="42"/></condition><then pos:line="12" pos:column="42"> <block pos:line="12" pos:column="43">{
		<expr_stmt><expr><name pos:line="13" pos:column="17">include_rev<pos:position pos:line="13" pos:column="28"/></name> <operator pos:line="13" pos:column="29">=<pos:position pos:line="13" pos:column="30"/></operator> <literal type="number" pos:line="13" pos:column="31">1<pos:position pos:line="13" pos:column="32"/></literal></expr>;<pos:position pos:line="13" pos:column="33"/></expr_stmt>
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><name><name pos:line="14" pos:column="21">dotdot<pos:position pos:line="14" pos:column="27"/></name><index pos:line="14" pos:column="27">[<expr><literal type="number" pos:line="14" pos:column="28">2<pos:position pos:line="14" pos:column="29"/></literal></expr>]<pos:position pos:line="14" pos:column="30"/></index></name></expr>)<pos:position pos:line="14" pos:column="31"/></condition><then pos:line="14" pos:column="31">
			<block type="pseudo"><return pos:line="15" pos:column="25">return <expr><literal type="number" pos:line="15" pos:column="32">0<pos:position pos:line="15" pos:column="33"/></literal></expr>;<pos:position pos:line="15" pos:column="34"/></return></block></then></if>
	}<pos:position pos:line="16" pos:column="10"/></block></then> <elseif pos:line="16" pos:column="11">else <if pos:line="16" pos:column="16">if <condition pos:line="16" pos:column="19">(<expr><operator pos:line="16" pos:column="20">(<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="21">dotdot<pos:position pos:line="16" pos:column="27"/></name> <operator pos:line="16" pos:column="28">=<pos:position pos:line="16" pos:column="29"/></operator> <call><name pos:line="16" pos:column="30">strstr<pos:position pos:line="16" pos:column="36"/></name><argument_list pos:line="16" pos:column="36">(<argument><expr><name pos:line="16" pos:column="37">arg<pos:position pos:line="16" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="42">"^@"<pos:position pos:line="16" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="47"/></argument_list></call><operator pos:line="16" pos:column="47">)<pos:position pos:line="16" pos:column="48"/></operator></expr>)<pos:position pos:line="16" pos:column="49"/></condition><then pos:line="16" pos:column="49"> <block pos:line="16" pos:column="50">{
		<expr_stmt><expr><name pos:line="17" pos:column="17">include_parents<pos:position pos:line="17" pos:column="32"/></name> <operator pos:line="17" pos:column="33">=<pos:position pos:line="17" pos:column="34"/></operator> <literal type="number" pos:line="17" pos:column="35">1<pos:position pos:line="17" pos:column="36"/></literal></expr>;<pos:position pos:line="17" pos:column="37"/></expr_stmt>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><name><name pos:line="18" pos:column="21">dotdot<pos:position pos:line="18" pos:column="27"/></name><index pos:line="18" pos:column="27">[<expr><literal type="number" pos:line="18" pos:column="28">2<pos:position pos:line="18" pos:column="29"/></literal></expr>]<pos:position pos:line="18" pos:column="30"/></index></name></expr>)<pos:position pos:line="18" pos:column="31"/></condition><then pos:line="18" pos:column="31">
			<block type="pseudo"><return pos:line="19" pos:column="25">return <expr><literal type="number" pos:line="19" pos:column="32">0<pos:position pos:line="19" pos:column="33"/></literal></expr>;<pos:position pos:line="19" pos:column="34"/></return></block></then></if>
	}<pos:position pos:line="20" pos:column="10"/></block></then></if></elseif> <elseif pos:line="20" pos:column="11">else <if pos:line="20" pos:column="16">if <condition pos:line="20" pos:column="19">(<expr><operator pos:line="20" pos:column="20">(<pos:position pos:line="20" pos:column="21"/></operator><name pos:line="20" pos:column="21">dotdot<pos:position pos:line="20" pos:column="27"/></name> <operator pos:line="20" pos:column="28">=<pos:position pos:line="20" pos:column="29"/></operator> <call><name pos:line="20" pos:column="30">strstr<pos:position pos:line="20" pos:column="36"/></name><argument_list pos:line="20" pos:column="36">(<argument><expr><name pos:line="20" pos:column="37">arg<pos:position pos:line="20" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="42">"^-"<pos:position pos:line="20" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="47"/></argument_list></call><operator pos:line="20" pos:column="47">)<pos:position pos:line="20" pos:column="48"/></operator></expr>)<pos:position pos:line="20" pos:column="49"/></condition><then pos:line="20" pos:column="49"> <block pos:line="20" pos:column="50">{
		<expr_stmt><expr><name pos:line="21" pos:column="17">include_rev<pos:position pos:line="21" pos:column="28"/></name> <operator pos:line="21" pos:column="29">=<pos:position pos:line="21" pos:column="30"/></operator> <literal type="number" pos:line="21" pos:column="31">1<pos:position pos:line="21" pos:column="32"/></literal></expr>;<pos:position pos:line="21" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><name pos:line="22" pos:column="17">exclude_parent<pos:position pos:line="22" pos:column="31"/></name> <operator pos:line="22" pos:column="32">=<pos:position pos:line="22" pos:column="33"/></operator> <literal type="number" pos:line="22" pos:column="34">1<pos:position pos:line="22" pos:column="35"/></literal></expr>;<pos:position pos:line="22" pos:column="36"/></expr_stmt>

		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><name><name pos:line="24" pos:column="21">dotdot<pos:position pos:line="24" pos:column="27"/></name><index pos:line="24" pos:column="27">[<expr><literal type="number" pos:line="24" pos:column="28">2<pos:position pos:line="24" pos:column="29"/></literal></expr>]<pos:position pos:line="24" pos:column="30"/></index></name></expr>)<pos:position pos:line="24" pos:column="31"/></condition><then pos:line="24" pos:column="31"> <block pos:line="24" pos:column="32">{
			<decl_stmt><decl><type><name pos:line="25" pos:column="25">char<pos:position pos:line="25" pos:column="29"/></name> <modifier pos:line="25" pos:column="30">*<pos:position pos:line="25" pos:column="31"/></modifier></type><name pos:line="25" pos:column="31">end<pos:position pos:line="25" pos:column="34"/></name></decl>;<pos:position pos:line="25" pos:column="35"/></decl_stmt>
			<expr_stmt><expr><name pos:line="26" pos:column="25">exclude_parent<pos:position pos:line="26" pos:column="39"/></name> <operator pos:line="26" pos:column="40">=<pos:position pos:line="26" pos:column="41"/></operator> <call><name pos:line="26" pos:column="42">strtoul<pos:position pos:line="26" pos:column="49"/></name><argument_list pos:line="26" pos:column="49">(<argument><expr><name pos:line="26" pos:column="50">dotdot<pos:position pos:line="26" pos:column="56"/></name> <operator pos:line="26" pos:column="57">+<pos:position pos:line="26" pos:column="58"/></operator> <literal type="number" pos:line="26" pos:column="59">2<pos:position pos:line="26" pos:column="60"/></literal></expr></argument>, <argument><expr><operator pos:line="26" pos:column="62">&amp;<pos:position pos:line="26" pos:column="67"/></operator><name pos:line="26" pos:column="63">end<pos:position pos:line="26" pos:column="66"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="68">10<pos:position pos:line="26" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="72"/></expr_stmt>
			<if pos:line="27" pos:column="25">if <condition pos:line="27" pos:column="28">(<expr><operator pos:line="27" pos:column="29">*<pos:position pos:line="27" pos:column="30"/></operator><name pos:line="27" pos:column="30">end<pos:position pos:line="27" pos:column="33"/></name> <operator pos:line="27" pos:column="34">!=<pos:position pos:line="27" pos:column="36"/></operator> <literal type="char" pos:line="27" pos:column="37">'\0'<pos:position pos:line="27" pos:column="41"/></literal> <operator pos:line="27" pos:column="42">||<pos:position pos:line="27" pos:column="44"/></operator> <operator pos:line="27" pos:column="45">!<pos:position pos:line="27" pos:column="46"/></operator><name pos:line="27" pos:column="46">exclude_parent<pos:position pos:line="27" pos:column="60"/></name></expr>)<pos:position pos:line="27" pos:column="61"/></condition><then pos:line="27" pos:column="61">
				<block type="pseudo"><return pos:line="28" pos:column="33">return <expr><literal type="number" pos:line="28" pos:column="40">0<pos:position pos:line="28" pos:column="41"/></literal></expr>;<pos:position pos:line="28" pos:column="42"/></return></block></then></if>
		}<pos:position pos:line="29" pos:column="18"/></block></then></if>
	}<pos:position pos:line="30" pos:column="10"/></block></then></if></elseif> <else pos:line="30" pos:column="11">else
		<block type="pseudo"><return pos:line="31" pos:column="17">return <expr><literal type="number" pos:line="31" pos:column="24">0<pos:position pos:line="31" pos:column="25"/></literal></expr>;<pos:position pos:line="31" pos:column="26"/></return></block></else></if>

	<expr_stmt><expr><operator pos:line="33" pos:column="9">*<pos:position pos:line="33" pos:column="10"/></operator><name pos:line="33" pos:column="10">dotdot<pos:position pos:line="33" pos:column="16"/></name> <operator pos:line="33" pos:column="17">=<pos:position pos:line="33" pos:column="18"/></operator> <literal type="number" pos:line="33" pos:column="19">0<pos:position pos:line="33" pos:column="20"/></literal></expr>;<pos:position pos:line="33" pos:column="21"/></expr_stmt>
	<if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><call><name pos:line="34" pos:column="13">get_sha1_committish<pos:position pos:line="34" pos:column="32"/></name><argument_list pos:line="34" pos:column="32">(<argument><expr><name pos:line="34" pos:column="33">arg<pos:position pos:line="34" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="38">oid<pos:position pos:line="34" pos:column="41"/></name><operator pos:line="34" pos:column="41">.<pos:position pos:line="34" pos:column="42"/></operator><name pos:line="34" pos:column="42">hash<pos:position pos:line="34" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="48"/></condition><then pos:line="34" pos:column="48"> <block pos:line="34" pos:column="49">{
		<expr_stmt><expr><operator pos:line="35" pos:column="17">*<pos:position pos:line="35" pos:column="18"/></operator><name pos:line="35" pos:column="18">dotdot<pos:position pos:line="35" pos:column="24"/></name> <operator pos:line="35" pos:column="25">=<pos:position pos:line="35" pos:column="26"/></operator> <literal type="char" pos:line="35" pos:column="27">'^'<pos:position pos:line="35" pos:column="30"/></literal></expr>;<pos:position pos:line="35" pos:column="31"/></expr_stmt>
		<return pos:line="36" pos:column="17">return <expr><literal type="number" pos:line="36" pos:column="24">0<pos:position pos:line="36" pos:column="25"/></literal></expr>;<pos:position pos:line="36" pos:column="26"/></return>
	}<pos:position pos:line="37" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="39" pos:column="9">commit<pos:position pos:line="39" pos:column="15"/></name> <operator pos:line="39" pos:column="16">=<pos:position pos:line="39" pos:column="17"/></operator> <call><name pos:line="39" pos:column="18">lookup_commit_reference<pos:position pos:line="39" pos:column="41"/></name><argument_list pos:line="39" pos:column="41">(<argument><expr><operator pos:line="39" pos:column="42">&amp;<pos:position pos:line="39" pos:column="47"/></operator><name pos:line="39" pos:column="43">oid<pos:position pos:line="39" pos:column="46"/></name></expr></argument>)<pos:position pos:line="39" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="48"/></expr_stmt>
	<if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name pos:line="40" pos:column="13">exclude_parent<pos:position pos:line="40" pos:column="27"/></name> <operator pos:line="40" pos:column="28">&amp;&amp;<pos:position pos:line="40" pos:column="38"/></operator>
	    <name pos:line="41" pos:column="13">exclude_parent<pos:position pos:line="41" pos:column="27"/></name> <operator pos:line="41" pos:column="28">&gt;<pos:position pos:line="41" pos:column="32"/></operator> <call><name pos:line="41" pos:column="30">commit_list_count<pos:position pos:line="41" pos:column="47"/></name><argument_list pos:line="41" pos:column="47">(<argument><expr><name><name pos:line="41" pos:column="48">commit<pos:position pos:line="41" pos:column="54"/></name><operator pos:line="41" pos:column="54">-&gt;<pos:position pos:line="41" pos:column="59"/></operator><name pos:line="41" pos:column="56">parents<pos:position pos:line="41" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="65"/></condition><then pos:line="41" pos:column="65"> <block pos:line="41" pos:column="66">{
		<expr_stmt><expr><operator pos:line="42" pos:column="17">*<pos:position pos:line="42" pos:column="18"/></operator><name pos:line="42" pos:column="18">dotdot<pos:position pos:line="42" pos:column="24"/></name> <operator pos:line="42" pos:column="25">=<pos:position pos:line="42" pos:column="26"/></operator> <literal type="char" pos:line="42" pos:column="27">'^'<pos:position pos:line="42" pos:column="30"/></literal></expr>;<pos:position pos:line="42" pos:column="31"/></expr_stmt>
		<return pos:line="43" pos:column="17">return <expr><literal type="number" pos:line="43" pos:column="24">0<pos:position pos:line="43" pos:column="25"/></literal></expr>;<pos:position pos:line="43" pos:column="26"/></return>
	}<pos:position pos:line="44" pos:column="10"/></block></then></if>

	<if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><name pos:line="46" pos:column="13">include_rev<pos:position pos:line="46" pos:column="24"/></name></expr>)<pos:position pos:line="46" pos:column="25"/></condition><then pos:line="46" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="47" pos:column="17">show_rev<pos:position pos:line="47" pos:column="25"/></name><argument_list pos:line="47" pos:column="25">(<argument><expr><name pos:line="47" pos:column="26">NORMAL<pos:position pos:line="47" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="34">&amp;<pos:position pos:line="47" pos:column="39"/></operator><name pos:line="47" pos:column="35">oid<pos:position pos:line="47" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="40">arg<pos:position pos:line="47" pos:column="43"/></name></expr></argument>)<pos:position pos:line="47" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="45"/></expr_stmt></block></then></if>
	<for pos:line="48" pos:column="9">for <control pos:line="48" pos:column="13">(<init><expr><name pos:line="48" pos:column="14">parents<pos:position pos:line="48" pos:column="21"/></name> <operator pos:line="48" pos:column="22">=<pos:position pos:line="48" pos:column="23"/></operator> <name><name pos:line="48" pos:column="24">commit<pos:position pos:line="48" pos:column="30"/></name><operator pos:line="48" pos:column="30">-&gt;<pos:position pos:line="48" pos:column="35"/></operator><name pos:line="48" pos:column="32">parents<pos:position pos:line="48" pos:column="39"/></name></name></expr><operator pos:line="48" pos:column="39">,<pos:position pos:line="48" pos:column="40"/></operator> <expr><name pos:line="48" pos:column="41">parent_number<pos:position pos:line="48" pos:column="54"/></name> <operator pos:line="48" pos:column="55">=<pos:position pos:line="48" pos:column="56"/></operator> <literal type="number" pos:line="48" pos:column="57">1<pos:position pos:line="48" pos:column="58"/></literal></expr>;<pos:position pos:line="48" pos:column="59"/></init>
	     <condition><expr><name pos:line="49" pos:column="14">parents<pos:position pos:line="49" pos:column="21"/></name></expr>;<pos:position pos:line="49" pos:column="22"/></condition>
	     <incr><expr><name pos:line="50" pos:column="14">parents<pos:position pos:line="50" pos:column="21"/></name> <operator pos:line="50" pos:column="22">=<pos:position pos:line="50" pos:column="23"/></operator> <name><name pos:line="50" pos:column="24">parents<pos:position pos:line="50" pos:column="31"/></name><operator pos:line="50" pos:column="31">-&gt;<pos:position pos:line="50" pos:column="36"/></operator><name pos:line="50" pos:column="33">next<pos:position pos:line="50" pos:column="37"/></name></name></expr><operator pos:line="50" pos:column="37">,<pos:position pos:line="50" pos:column="38"/></operator> <expr><name pos:line="50" pos:column="39">parent_number<pos:position pos:line="50" pos:column="52"/></name><operator pos:line="50" pos:column="52">++<pos:position pos:line="50" pos:column="54"/></operator></expr></incr>)<pos:position pos:line="50" pos:column="55"/></control> <block pos:line="50" pos:column="56">{
		<decl_stmt><decl><type><name pos:line="51" pos:column="17">char<pos:position pos:line="51" pos:column="21"/></name> <modifier pos:line="51" pos:column="22">*<pos:position pos:line="51" pos:column="23"/></modifier></type><name pos:line="51" pos:column="23">name<pos:position pos:line="51" pos:column="27"/></name> <init pos:line="51" pos:column="28">= <expr><name pos:line="51" pos:column="30">NULL<pos:position pos:line="51" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="51" pos:column="35"/></decl_stmt>

		<if pos:line="53" pos:column="17">if <condition pos:line="53" pos:column="20">(<expr><name pos:line="53" pos:column="21">exclude_parent<pos:position pos:line="53" pos:column="35"/></name> <operator pos:line="53" pos:column="36">&amp;&amp;<pos:position pos:line="53" pos:column="46"/></operator> <name pos:line="53" pos:column="39">parent_number<pos:position pos:line="53" pos:column="52"/></name> <operator pos:line="53" pos:column="53">!=<pos:position pos:line="53" pos:column="55"/></operator> <name pos:line="53" pos:column="56">exclude_parent<pos:position pos:line="53" pos:column="70"/></name></expr>)<pos:position pos:line="53" pos:column="71"/></condition><then pos:line="53" pos:column="71">
			<block type="pseudo"><continue pos:line="54" pos:column="25">continue;<pos:position pos:line="54" pos:column="34"/></continue></block></then></if>

		<if pos:line="56" pos:column="17">if <condition pos:line="56" pos:column="20">(<expr><name pos:line="56" pos:column="21">symbolic<pos:position pos:line="56" pos:column="29"/></name></expr>)<pos:position pos:line="56" pos:column="30"/></condition><then pos:line="56" pos:column="30">
			<block type="pseudo"><expr_stmt><expr><name pos:line="57" pos:column="25">name<pos:position pos:line="57" pos:column="29"/></name> <operator pos:line="57" pos:column="30">=<pos:position pos:line="57" pos:column="31"/></operator> <call><name pos:line="57" pos:column="32">xstrfmt<pos:position pos:line="57" pos:column="39"/></name><argument_list pos:line="57" pos:column="39">(<argument><expr><literal type="string" pos:line="57" pos:column="40">"%s^%d"<pos:position pos:line="57" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="49">arg<pos:position pos:line="57" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="54">parent_number<pos:position pos:line="57" pos:column="67"/></name></expr></argument>)<pos:position pos:line="57" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="69"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="58" pos:column="17">show_rev<pos:position pos:line="58" pos:column="25"/></name><argument_list pos:line="58" pos:column="25">(<argument><expr><ternary><condition><expr><name pos:line="58" pos:column="26">include_parents<pos:position pos:line="58" pos:column="41"/></name></expr> ?<pos:position pos:line="58" pos:column="43"/></condition><then pos:line="58" pos:column="43"> <expr><name pos:line="58" pos:column="44">NORMAL<pos:position pos:line="58" pos:column="50"/></name></expr> <pos:position pos:line="58" pos:column="51"/></then><else pos:line="58" pos:column="51">: <expr><name pos:line="58" pos:column="53">REVERSED<pos:position pos:line="58" pos:column="61"/></name></expr></else></ternary></expr></argument>,
			 <argument><expr><operator pos:line="59" pos:column="26">&amp;<pos:position pos:line="59" pos:column="31"/></operator><name><name pos:line="59" pos:column="27">parents<pos:position pos:line="59" pos:column="34"/></name><operator pos:line="59" pos:column="34">-&gt;<pos:position pos:line="59" pos:column="39"/></operator><name pos:line="59" pos:column="36">item<pos:position pos:line="59" pos:column="40"/></name><operator pos:line="59" pos:column="40">-&gt;<pos:position pos:line="59" pos:column="45"/></operator><name pos:line="59" pos:column="42">object<pos:position pos:line="59" pos:column="48"/></name><operator pos:line="59" pos:column="48">.<pos:position pos:line="59" pos:column="49"/></operator><name pos:line="59" pos:column="49">oid<pos:position pos:line="59" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="54">name<pos:position pos:line="59" pos:column="58"/></name></expr></argument>)<pos:position pos:line="59" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="60"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="60" pos:column="17">free<pos:position pos:line="60" pos:column="21"/></name><argument_list pos:line="60" pos:column="21">(<argument><expr><name pos:line="60" pos:column="22">name<pos:position pos:line="60" pos:column="26"/></name></expr></argument>)<pos:position pos:line="60" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="28"/></expr_stmt>
	}<pos:position pos:line="61" pos:column="10"/></block></for>

	<expr_stmt><expr><operator pos:line="63" pos:column="9">*<pos:position pos:line="63" pos:column="10"/></operator><name pos:line="63" pos:column="10">dotdot<pos:position pos:line="63" pos:column="16"/></name> <operator pos:line="63" pos:column="17">=<pos:position pos:line="63" pos:column="18"/></operator> <literal type="char" pos:line="63" pos:column="19">'^'<pos:position pos:line="63" pos:column="22"/></literal></expr>;<pos:position pos:line="63" pos:column="23"/></expr_stmt>
	<return pos:line="64" pos:column="9">return <expr><literal type="number" pos:line="64" pos:column="16">1<pos:position pos:line="64" pos:column="17"/></literal></expr>;<pos:position pos:line="64" pos:column="18"/></return>
}<pos:position pos:line="65" pos:column="2"/></block></function></unit>

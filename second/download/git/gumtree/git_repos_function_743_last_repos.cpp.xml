<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_743_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">section_name_match<pos:position pos:line="1" pos:column="30"/></name> <parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><specifier pos:line="1" pos:column="32">const<pos:position pos:line="1" pos:column="37"/></specifier> <name pos:line="1" pos:column="38">char<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">buf<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="49">const<pos:position pos:line="1" pos:column="54"/></specifier> <name pos:line="1" pos:column="55">char<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">name<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name> <init pos:line="3" pos:column="15">= <expr><literal type="number" pos:line="3" pos:column="17">0<pos:position pos:line="3" pos:column="18"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="20">j<pos:position pos:line="3" pos:column="21"/></name> <init pos:line="3" pos:column="22">= <expr><literal type="number" pos:line="3" pos:column="24">0<pos:position pos:line="3" pos:column="25"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="27">dot<pos:position pos:line="3" pos:column="30"/></name> <init pos:line="3" pos:column="31">= <expr><literal type="number" pos:line="3" pos:column="33">0<pos:position pos:line="3" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="35"/></decl_stmt>
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><name><name pos:line="4" pos:column="13">buf<pos:position pos:line="4" pos:column="16"/></name><index pos:line="4" pos:column="16">[<expr><name pos:line="4" pos:column="17">i<pos:position pos:line="4" pos:column="18"/></name></expr>]<pos:position pos:line="4" pos:column="19"/></index></name> <operator pos:line="4" pos:column="20">!=<pos:position pos:line="4" pos:column="22"/></operator> <literal type="char" pos:line="4" pos:column="23">'['<pos:position pos:line="4" pos:column="26"/></literal></expr>)<pos:position pos:line="4" pos:column="27"/></condition><then pos:line="4" pos:column="27">
		<block type="pseudo"><return pos:line="5" pos:column="17">return <expr><literal type="number" pos:line="5" pos:column="24">0<pos:position pos:line="5" pos:column="25"/></literal></expr>;<pos:position pos:line="5" pos:column="26"/></return></block></then></if>
	<for pos:line="6" pos:column="9">for <control pos:line="6" pos:column="13">(<init><expr><name pos:line="6" pos:column="14">i<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">=<pos:position pos:line="6" pos:column="17"/></operator> <literal type="number" pos:line="6" pos:column="18">1<pos:position pos:line="6" pos:column="19"/></literal></expr>;<pos:position pos:line="6" pos:column="20"/></init> <condition><expr><name><name pos:line="6" pos:column="21">buf<pos:position pos:line="6" pos:column="24"/></name><index pos:line="6" pos:column="24">[<expr><name pos:line="6" pos:column="25">i<pos:position pos:line="6" pos:column="26"/></name></expr>]<pos:position pos:line="6" pos:column="27"/></index></name> <operator pos:line="6" pos:column="28">&amp;&amp;<pos:position pos:line="6" pos:column="38"/></operator> <name><name pos:line="6" pos:column="31">buf<pos:position pos:line="6" pos:column="34"/></name><index pos:line="6" pos:column="34">[<expr><name pos:line="6" pos:column="35">i<pos:position pos:line="6" pos:column="36"/></name></expr>]<pos:position pos:line="6" pos:column="37"/></index></name> <operator pos:line="6" pos:column="38">!=<pos:position pos:line="6" pos:column="40"/></operator> <literal type="char" pos:line="6" pos:column="41">']'<pos:position pos:line="6" pos:column="44"/></literal></expr>;<pos:position pos:line="6" pos:column="45"/></condition> <incr><expr><name pos:line="6" pos:column="46">i<pos:position pos:line="6" pos:column="47"/></name><operator pos:line="6" pos:column="47">++<pos:position pos:line="6" pos:column="49"/></operator></expr></incr>)<pos:position pos:line="6" pos:column="50"/></control> <block pos:line="6" pos:column="51">{
		<if pos:line="7" pos:column="17">if <condition pos:line="7" pos:column="20">(<expr><operator pos:line="7" pos:column="21">!<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="22">dot<pos:position pos:line="7" pos:column="25"/></name> <operator pos:line="7" pos:column="26">&amp;&amp;<pos:position pos:line="7" pos:column="36"/></operator> <call><name pos:line="7" pos:column="29">isspace<pos:position pos:line="7" pos:column="36"/></name><argument_list pos:line="7" pos:column="36">(<argument><expr><name><name pos:line="7" pos:column="37">buf<pos:position pos:line="7" pos:column="40"/></name><index pos:line="7" pos:column="40">[<expr><name pos:line="7" pos:column="41">i<pos:position pos:line="7" pos:column="42"/></name></expr>]<pos:position pos:line="7" pos:column="43"/></index></name></expr></argument>)<pos:position pos:line="7" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="45"/></condition><then pos:line="7" pos:column="45"> <block pos:line="7" pos:column="46">{
			<expr_stmt><expr><name pos:line="8" pos:column="25">dot<pos:position pos:line="8" pos:column="28"/></name> <operator pos:line="8" pos:column="29">=<pos:position pos:line="8" pos:column="30"/></operator> <literal type="number" pos:line="8" pos:column="31">1<pos:position pos:line="8" pos:column="32"/></literal></expr>;<pos:position pos:line="8" pos:column="33"/></expr_stmt>
			<if pos:line="9" pos:column="25">if <condition pos:line="9" pos:column="28">(<expr><name><name pos:line="9" pos:column="29">name<pos:position pos:line="9" pos:column="33"/></name><index pos:line="9" pos:column="33">[<expr><name pos:line="9" pos:column="34">j<pos:position pos:line="9" pos:column="35"/></name><operator pos:line="9" pos:column="35">++<pos:position pos:line="9" pos:column="37"/></operator></expr>]<pos:position pos:line="9" pos:column="38"/></index></name> <operator pos:line="9" pos:column="39">!=<pos:position pos:line="9" pos:column="41"/></operator> <literal type="char" pos:line="9" pos:column="42">'.'<pos:position pos:line="9" pos:column="45"/></literal></expr>)<pos:position pos:line="9" pos:column="46"/></condition><then pos:line="9" pos:column="46">
				<block type="pseudo"><break pos:line="10" pos:column="33">break;<pos:position pos:line="10" pos:column="39"/></break></block></then></if>
			<for pos:line="11" pos:column="25">for <control pos:line="11" pos:column="29">(<init><expr><name pos:line="11" pos:column="30">i<pos:position pos:line="11" pos:column="31"/></name><operator pos:line="11" pos:column="31">++<pos:position pos:line="11" pos:column="33"/></operator></expr>;<pos:position pos:line="11" pos:column="34"/></init> <condition><expr><call><name pos:line="11" pos:column="35">isspace<pos:position pos:line="11" pos:column="42"/></name><argument_list pos:line="11" pos:column="42">(<argument><expr><name><name pos:line="11" pos:column="43">buf<pos:position pos:line="11" pos:column="46"/></name><index pos:line="11" pos:column="46">[<expr><name pos:line="11" pos:column="47">i<pos:position pos:line="11" pos:column="48"/></name></expr>]<pos:position pos:line="11" pos:column="49"/></index></name></expr></argument>)<pos:position pos:line="11" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="51"/></condition> <incr><expr><name pos:line="11" pos:column="52">i<pos:position pos:line="11" pos:column="53"/></name><operator pos:line="11" pos:column="53">++<pos:position pos:line="11" pos:column="55"/></operator></expr></incr>)<pos:position pos:line="11" pos:column="56"/></control>
				<block type="pseudo"><empty_stmt pos:line="12" pos:column="33">;<pos:position pos:line="12" pos:column="34"/></empty_stmt></block></for> <comment type="block" pos:line="12" pos:column="35">/* do nothing */</comment>
			<if pos:line="13" pos:column="25">if <condition pos:line="13" pos:column="28">(<expr><name><name pos:line="13" pos:column="29">buf<pos:position pos:line="13" pos:column="32"/></name><index pos:line="13" pos:column="32">[<expr><name pos:line="13" pos:column="33">i<pos:position pos:line="13" pos:column="34"/></name></expr>]<pos:position pos:line="13" pos:column="35"/></index></name> <operator pos:line="13" pos:column="36">!=<pos:position pos:line="13" pos:column="38"/></operator> <literal type="char" pos:line="13" pos:column="39">'"'<pos:position pos:line="13" pos:column="42"/></literal></expr>)<pos:position pos:line="13" pos:column="43"/></condition><then pos:line="13" pos:column="43">
				<block type="pseudo"><break pos:line="14" pos:column="33">break;<pos:position pos:line="14" pos:column="39"/></break></block></then></if>
			<continue pos:line="15" pos:column="25">continue;<pos:position pos:line="15" pos:column="34"/></continue>
		}<pos:position pos:line="16" pos:column="18"/></block></then></if>
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><name><name pos:line="17" pos:column="21">buf<pos:position pos:line="17" pos:column="24"/></name><index pos:line="17" pos:column="24">[<expr><name pos:line="17" pos:column="25">i<pos:position pos:line="17" pos:column="26"/></name></expr>]<pos:position pos:line="17" pos:column="27"/></index></name> <operator pos:line="17" pos:column="28">==<pos:position pos:line="17" pos:column="30"/></operator> <literal type="char" pos:line="17" pos:column="31">'\\'<pos:position pos:line="17" pos:column="35"/></literal> <operator pos:line="17" pos:column="36">&amp;&amp;<pos:position pos:line="17" pos:column="46"/></operator> <name pos:line="17" pos:column="39">dot<pos:position pos:line="17" pos:column="42"/></name></expr>)<pos:position pos:line="17" pos:column="43"/></condition><then pos:line="17" pos:column="43">
			<block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="25">i<pos:position pos:line="18" pos:column="26"/></name><operator pos:line="18" pos:column="26">++<pos:position pos:line="18" pos:column="28"/></operator></expr>;<pos:position pos:line="18" pos:column="29"/></expr_stmt></block></then>
		<elseif pos:line="19" pos:column="17">else <if pos:line="19" pos:column="22">if <condition pos:line="19" pos:column="25">(<expr><name><name pos:line="19" pos:column="26">buf<pos:position pos:line="19" pos:column="29"/></name><index pos:line="19" pos:column="29">[<expr><name pos:line="19" pos:column="30">i<pos:position pos:line="19" pos:column="31"/></name></expr>]<pos:position pos:line="19" pos:column="32"/></index></name> <operator pos:line="19" pos:column="33">==<pos:position pos:line="19" pos:column="35"/></operator> <literal type="char" pos:line="19" pos:column="36">'"'<pos:position pos:line="19" pos:column="39"/></literal> <operator pos:line="19" pos:column="40">&amp;&amp;<pos:position pos:line="19" pos:column="50"/></operator> <name pos:line="19" pos:column="43">dot<pos:position pos:line="19" pos:column="46"/></name></expr>)<pos:position pos:line="19" pos:column="47"/></condition><then pos:line="19" pos:column="47"> <block pos:line="19" pos:column="48">{
			<for pos:line="20" pos:column="25">for <control pos:line="20" pos:column="29">(<init><expr><name pos:line="20" pos:column="30">i<pos:position pos:line="20" pos:column="31"/></name><operator pos:line="20" pos:column="31">++<pos:position pos:line="20" pos:column="33"/></operator></expr>;<pos:position pos:line="20" pos:column="34"/></init> <condition><expr><call><name pos:line="20" pos:column="35">isspace<pos:position pos:line="20" pos:column="42"/></name><argument_list pos:line="20" pos:column="42">(<argument><expr><name><name pos:line="20" pos:column="43">buf<pos:position pos:line="20" pos:column="46"/></name><index pos:line="20" pos:column="46">[<expr><name pos:line="20" pos:column="47">i<pos:position pos:line="20" pos:column="48"/></name></expr>]<pos:position pos:line="20" pos:column="49"/></index></name></expr></argument>)<pos:position pos:line="20" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="51"/></condition> <incr><expr><name pos:line="20" pos:column="52">i<pos:position pos:line="20" pos:column="53"/></name><operator pos:line="20" pos:column="53">++<pos:position pos:line="20" pos:column="55"/></operator></expr></incr>)<pos:position pos:line="20" pos:column="56"/></control>
				<block type="pseudo"><empty_stmt pos:line="21" pos:column="33">;<pos:position pos:line="21" pos:column="34"/></empty_stmt></block></for> <comment type="block" pos:line="21" pos:column="35">/* do_nothing */</comment>
			<break pos:line="22" pos:column="25">break;<pos:position pos:line="22" pos:column="31"/></break>
		}<pos:position pos:line="23" pos:column="18"/></block></then></if></elseif></if>
		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><name><name pos:line="24" pos:column="21">buf<pos:position pos:line="24" pos:column="24"/></name><index pos:line="24" pos:column="24">[<expr><name pos:line="24" pos:column="25">i<pos:position pos:line="24" pos:column="26"/></name></expr>]<pos:position pos:line="24" pos:column="27"/></index></name> <operator pos:line="24" pos:column="28">!=<pos:position pos:line="24" pos:column="30"/></operator> <name><name pos:line="24" pos:column="31">name<pos:position pos:line="24" pos:column="35"/></name><index pos:line="24" pos:column="35">[<expr><name pos:line="24" pos:column="36">j<pos:position pos:line="24" pos:column="37"/></name><operator pos:line="24" pos:column="37">++<pos:position pos:line="24" pos:column="39"/></operator></expr>]<pos:position pos:line="24" pos:column="40"/></index></name></expr>)<pos:position pos:line="24" pos:column="41"/></condition><then pos:line="24" pos:column="41">
			<block type="pseudo"><break pos:line="25" pos:column="25">break;<pos:position pos:line="25" pos:column="31"/></break></block></then></if>
	}<pos:position pos:line="26" pos:column="10"/></block></for>
	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><name><name pos:line="27" pos:column="13">buf<pos:position pos:line="27" pos:column="16"/></name><index pos:line="27" pos:column="16">[<expr><name pos:line="27" pos:column="17">i<pos:position pos:line="27" pos:column="18"/></name></expr>]<pos:position pos:line="27" pos:column="19"/></index></name> <operator pos:line="27" pos:column="20">==<pos:position pos:line="27" pos:column="22"/></operator> <literal type="char" pos:line="27" pos:column="23">']'<pos:position pos:line="27" pos:column="26"/></literal> <operator pos:line="27" pos:column="27">&amp;&amp;<pos:position pos:line="27" pos:column="37"/></operator> <name><name pos:line="27" pos:column="30">name<pos:position pos:line="27" pos:column="34"/></name><index pos:line="27" pos:column="34">[<expr><name pos:line="27" pos:column="35">j<pos:position pos:line="27" pos:column="36"/></name></expr>]<pos:position pos:line="27" pos:column="37"/></index></name> <operator pos:line="27" pos:column="38">==<pos:position pos:line="27" pos:column="40"/></operator> <literal type="number" pos:line="27" pos:column="41">0<pos:position pos:line="27" pos:column="42"/></literal></expr>)<pos:position pos:line="27" pos:column="43"/></condition><then pos:line="27" pos:column="43"> <block pos:line="27" pos:column="44">{
		<comment type="block" pos:line="28" pos:column="17">/*
		 * We match, now just find the right length offset by
		 * gobbling up any whitespace after it, as well
		 */</comment>
		<expr_stmt><expr><name pos:line="32" pos:column="17">i<pos:position pos:line="32" pos:column="18"/></name><operator pos:line="32" pos:column="18">++<pos:position pos:line="32" pos:column="20"/></operator></expr>;<pos:position pos:line="32" pos:column="21"/></expr_stmt>
		<for pos:line="33" pos:column="17">for <control pos:line="33" pos:column="21">(<init pos:line="33" pos:column="22">;<pos:position pos:line="33" pos:column="23"/></init> <condition><expr><name><name pos:line="33" pos:column="24">buf<pos:position pos:line="33" pos:column="27"/></name><index pos:line="33" pos:column="27">[<expr><name pos:line="33" pos:column="28">i<pos:position pos:line="33" pos:column="29"/></name></expr>]<pos:position pos:line="33" pos:column="30"/></index></name> <operator pos:line="33" pos:column="31">&amp;&amp;<pos:position pos:line="33" pos:column="41"/></operator> <call><name pos:line="33" pos:column="34">isspace<pos:position pos:line="33" pos:column="41"/></name><argument_list pos:line="33" pos:column="41">(<argument><expr><name><name pos:line="33" pos:column="42">buf<pos:position pos:line="33" pos:column="45"/></name><index pos:line="33" pos:column="45">[<expr><name pos:line="33" pos:column="46">i<pos:position pos:line="33" pos:column="47"/></name></expr>]<pos:position pos:line="33" pos:column="48"/></index></name></expr></argument>)<pos:position pos:line="33" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="50"/></condition> <incr><expr><name pos:line="33" pos:column="51">i<pos:position pos:line="33" pos:column="52"/></name><operator pos:line="33" pos:column="52">++<pos:position pos:line="33" pos:column="54"/></operator></expr></incr>)<pos:position pos:line="33" pos:column="55"/></control>
			<block type="pseudo"><empty_stmt pos:line="34" pos:column="25">;<pos:position pos:line="34" pos:column="26"/></empty_stmt></block></for> <comment type="block" pos:line="34" pos:column="27">/* do nothing */</comment>
		<return pos:line="35" pos:column="17">return <expr><name pos:line="35" pos:column="24">i<pos:position pos:line="35" pos:column="25"/></name></expr>;<pos:position pos:line="35" pos:column="26"/></return>
	}<pos:position pos:line="36" pos:column="10"/></block></then></if>
	<return pos:line="37" pos:column="9">return <expr><literal type="number" pos:line="37" pos:column="16">0<pos:position pos:line="37" pos:column="17"/></literal></expr>;<pos:position pos:line="37" pos:column="18"/></return>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

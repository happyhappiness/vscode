<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2556_git-2.5.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">process_ranges_merge_commit<pos:position pos:line="1" pos:column="39"/></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><name><name pos:line="1" pos:column="40">struct<pos:position pos:line="1" pos:column="46"/></name> <name pos:line="1" pos:column="47">rev_info<pos:position pos:line="1" pos:column="55"/></name></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">rev<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="62">struct<pos:position pos:line="1" pos:column="68"/></name> <name pos:line="1" pos:column="69">commit<pos:position pos:line="1" pos:column="75"/></name></name> <modifier pos:line="1" pos:column="76">*<pos:position pos:line="1" pos:column="77"/></modifier></type><name pos:line="1" pos:column="77">commit<pos:position pos:line="1" pos:column="83"/></name></decl></parameter>,
				       <parameter><decl><type><name><name pos:line="2" pos:column="40">struct<pos:position pos:line="2" pos:column="46"/></name> <name pos:line="2" pos:column="47">line_log_data<pos:position pos:line="2" pos:column="60"/></name></name> <modifier pos:line="2" pos:column="61">*<pos:position pos:line="2" pos:column="62"/></modifier></type><name pos:line="2" pos:column="62">range<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="68"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">diff_queue_struct<pos:position pos:line="4" pos:column="33"/></name></name> <modifier pos:line="4" pos:column="34">*<pos:position pos:line="4" pos:column="35"/></modifier></type><name pos:line="4" pos:column="35">diffqueues<pos:position pos:line="4" pos:column="45"/></name></decl>;<pos:position pos:line="4" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">line_log_data<pos:position pos:line="5" pos:column="29"/></name></name> <modifier pos:line="5" pos:column="30">*<pos:position pos:line="5" pos:column="31"/></modifier><modifier pos:line="5" pos:column="31">*<pos:position pos:line="5" pos:column="32"/></modifier></type><name pos:line="5" pos:column="32">cand<pos:position pos:line="5" pos:column="36"/></name></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">commit<pos:position pos:line="6" pos:column="22"/></name></name> <modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier><modifier pos:line="6" pos:column="24">*<pos:position pos:line="6" pos:column="25"/></modifier></type><name pos:line="6" pos:column="25">parents<pos:position pos:line="6" pos:column="32"/></name></decl>;<pos:position pos:line="6" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">commit_list<pos:position pos:line="7" pos:column="27"/></name></name> <modifier pos:line="7" pos:column="28">*<pos:position pos:line="7" pos:column="29"/></modifier></type><name pos:line="7" pos:column="29">p<pos:position pos:line="7" pos:column="30"/></name></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">i<pos:position pos:line="8" pos:column="14"/></name></decl>;<pos:position pos:line="8" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">nparents<pos:position pos:line="9" pos:column="21"/></name> <init pos:line="9" pos:column="22">= <expr><call><name pos:line="9" pos:column="24">commit_list_count<pos:position pos:line="9" pos:column="41"/></name><argument_list pos:line="9" pos:column="41">(<argument><expr><name><name pos:line="9" pos:column="42">commit<pos:position pos:line="9" pos:column="48"/></name><operator pos:line="9" pos:column="48">-&gt;<pos:position pos:line="9" pos:column="53"/></operator><name pos:line="9" pos:column="50">parents<pos:position pos:line="9" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="59"/></decl_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">nparents<pos:position pos:line="11" pos:column="21"/></name> <operator pos:line="11" pos:column="22">&gt;<pos:position pos:line="11" pos:column="26"/></operator> <literal type="number" pos:line="11" pos:column="24">1<pos:position pos:line="11" pos:column="25"/></literal> <operator pos:line="11" pos:column="26">&amp;&amp;<pos:position pos:line="11" pos:column="36"/></operator> <name><name pos:line="11" pos:column="29">rev<pos:position pos:line="11" pos:column="32"/></name><operator pos:line="11" pos:column="32">-&gt;<pos:position pos:line="11" pos:column="37"/></operator><name pos:line="11" pos:column="34">first_parent_only<pos:position pos:line="11" pos:column="51"/></name></name></expr>)<pos:position pos:line="11" pos:column="52"/></condition><then pos:line="11" pos:column="52">
		<block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="17">nparents<pos:position pos:line="12" pos:column="25"/></name> <operator pos:line="12" pos:column="26">=<pos:position pos:line="12" pos:column="27"/></operator> <literal type="number" pos:line="12" pos:column="28">1<pos:position pos:line="12" pos:column="29"/></literal></expr>;<pos:position pos:line="12" pos:column="30"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="14" pos:column="9">diffqueues<pos:position pos:line="14" pos:column="19"/></name> <operator pos:line="14" pos:column="20">=<pos:position pos:line="14" pos:column="21"/></operator> <call><name pos:line="14" pos:column="22">xmalloc<pos:position pos:line="14" pos:column="29"/></name><argument_list pos:line="14" pos:column="29">(<argument><expr><name pos:line="14" pos:column="30">nparents<pos:position pos:line="14" pos:column="38"/></name> <operator pos:line="14" pos:column="39">*<pos:position pos:line="14" pos:column="40"/></operator> <sizeof pos:line="14" pos:column="41">sizeof<argument_list pos:line="14" pos:column="47">(<argument><expr><operator pos:line="14" pos:column="48">*<pos:position pos:line="14" pos:column="49"/></operator><name pos:line="14" pos:column="49">diffqueues<pos:position pos:line="14" pos:column="59"/></name></expr></argument>)<pos:position pos:line="14" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="62"/></expr_stmt>
	<expr_stmt><expr><name pos:line="15" pos:column="9">cand<pos:position pos:line="15" pos:column="13"/></name> <operator pos:line="15" pos:column="14">=<pos:position pos:line="15" pos:column="15"/></operator> <call><name pos:line="15" pos:column="16">xmalloc<pos:position pos:line="15" pos:column="23"/></name><argument_list pos:line="15" pos:column="23">(<argument><expr><name pos:line="15" pos:column="24">nparents<pos:position pos:line="15" pos:column="32"/></name> <operator pos:line="15" pos:column="33">*<pos:position pos:line="15" pos:column="34"/></operator> <sizeof pos:line="15" pos:column="35">sizeof<argument_list pos:line="15" pos:column="41">(<argument><expr><operator pos:line="15" pos:column="42">*<pos:position pos:line="15" pos:column="43"/></operator><name pos:line="15" pos:column="43">cand<pos:position pos:line="15" pos:column="47"/></name></expr></argument>)<pos:position pos:line="15" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="50"/></expr_stmt>
	<expr_stmt><expr><name pos:line="16" pos:column="9">parents<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">=<pos:position pos:line="16" pos:column="18"/></operator> <call><name pos:line="16" pos:column="19">xmalloc<pos:position pos:line="16" pos:column="26"/></name><argument_list pos:line="16" pos:column="26">(<argument><expr><name pos:line="16" pos:column="27">nparents<pos:position pos:line="16" pos:column="35"/></name> <operator pos:line="16" pos:column="36">*<pos:position pos:line="16" pos:column="37"/></operator> <sizeof pos:line="16" pos:column="38">sizeof<argument_list pos:line="16" pos:column="44">(<argument><expr><operator pos:line="16" pos:column="45">*<pos:position pos:line="16" pos:column="46"/></operator><name pos:line="16" pos:column="46">parents<pos:position pos:line="16" pos:column="53"/></name></expr></argument>)<pos:position pos:line="16" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="56"/></expr_stmt>

	<expr_stmt><expr><name pos:line="18" pos:column="9">p<pos:position pos:line="18" pos:column="10"/></name> <operator pos:line="18" pos:column="11">=<pos:position pos:line="18" pos:column="12"/></operator> <name><name pos:line="18" pos:column="13">commit<pos:position pos:line="18" pos:column="19"/></name><operator pos:line="18" pos:column="19">-&gt;<pos:position pos:line="18" pos:column="24"/></operator><name pos:line="18" pos:column="21">parents<pos:position pos:line="18" pos:column="28"/></name></name></expr>;<pos:position pos:line="18" pos:column="29"/></expr_stmt>
	<for pos:line="19" pos:column="9">for <control pos:line="19" pos:column="13">(<init><expr><name pos:line="19" pos:column="14">i<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator> <literal type="number" pos:line="19" pos:column="18">0<pos:position pos:line="19" pos:column="19"/></literal></expr>;<pos:position pos:line="19" pos:column="20"/></init> <condition><expr><name pos:line="19" pos:column="21">i<pos:position pos:line="19" pos:column="22"/></name> <operator pos:line="19" pos:column="23">&lt;<pos:position pos:line="19" pos:column="27"/></operator> <name pos:line="19" pos:column="25">nparents<pos:position pos:line="19" pos:column="33"/></name></expr>;<pos:position pos:line="19" pos:column="34"/></condition> <incr><expr><name pos:line="19" pos:column="35">i<pos:position pos:line="19" pos:column="36"/></name><operator pos:line="19" pos:column="36">++<pos:position pos:line="19" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="19" pos:column="39"/></control> <block pos:line="19" pos:column="40">{
		<expr_stmt><expr><name><name pos:line="20" pos:column="17">parents<pos:position pos:line="20" pos:column="24"/></name><index pos:line="20" pos:column="24">[<expr><name pos:line="20" pos:column="25">i<pos:position pos:line="20" pos:column="26"/></name></expr>]<pos:position pos:line="20" pos:column="27"/></index></name> <operator pos:line="20" pos:column="28">=<pos:position pos:line="20" pos:column="29"/></operator> <name><name pos:line="20" pos:column="30">p<pos:position pos:line="20" pos:column="31"/></name><operator pos:line="20" pos:column="31">-&gt;<pos:position pos:line="20" pos:column="36"/></operator><name pos:line="20" pos:column="33">item<pos:position pos:line="20" pos:column="37"/></name></name></expr>;<pos:position pos:line="20" pos:column="38"/></expr_stmt>
		<expr_stmt><expr><name pos:line="21" pos:column="17">p<pos:position pos:line="21" pos:column="18"/></name> <operator pos:line="21" pos:column="19">=<pos:position pos:line="21" pos:column="20"/></operator> <name><name pos:line="21" pos:column="21">p<pos:position pos:line="21" pos:column="22"/></name><operator pos:line="21" pos:column="22">-&gt;<pos:position pos:line="21" pos:column="27"/></operator><name pos:line="21" pos:column="24">next<pos:position pos:line="21" pos:column="28"/></name></name></expr>;<pos:position pos:line="21" pos:column="29"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="22" pos:column="17">queue_diffs<pos:position pos:line="22" pos:column="28"/></name><argument_list pos:line="22" pos:column="28">(<argument><expr><name pos:line="22" pos:column="29">range<pos:position pos:line="22" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="36">&amp;<pos:position pos:line="22" pos:column="41"/></operator><name><name pos:line="22" pos:column="37">rev<pos:position pos:line="22" pos:column="40"/></name><operator pos:line="22" pos:column="40">-&gt;<pos:position pos:line="22" pos:column="45"/></operator><name pos:line="22" pos:column="42">diffopt<pos:position pos:line="22" pos:column="49"/></name></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="51">&amp;<pos:position pos:line="22" pos:column="56"/></operator><name><name pos:line="22" pos:column="52">diffqueues<pos:position pos:line="22" pos:column="62"/></name><index pos:line="22" pos:column="62">[<expr><name pos:line="22" pos:column="63">i<pos:position pos:line="22" pos:column="64"/></name></expr>]<pos:position pos:line="22" pos:column="65"/></index></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="67">commit<pos:position pos:line="22" pos:column="73"/></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="75">parents<pos:position pos:line="22" pos:column="82"/></name><index pos:line="22" pos:column="82">[<expr><name pos:line="22" pos:column="83">i<pos:position pos:line="22" pos:column="84"/></name></expr>]<pos:position pos:line="22" pos:column="85"/></index></name></expr></argument>)<pos:position pos:line="22" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="87"/></expr_stmt>
	}<pos:position pos:line="23" pos:column="10"/></block></for>

	<for pos:line="25" pos:column="9">for <control pos:line="25" pos:column="13">(<init><expr><name pos:line="25" pos:column="14">i<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">=<pos:position pos:line="25" pos:column="17"/></operator> <literal type="number" pos:line="25" pos:column="18">0<pos:position pos:line="25" pos:column="19"/></literal></expr>;<pos:position pos:line="25" pos:column="20"/></init> <condition><expr><name pos:line="25" pos:column="21">i<pos:position pos:line="25" pos:column="22"/></name> <operator pos:line="25" pos:column="23">&lt;<pos:position pos:line="25" pos:column="27"/></operator> <name pos:line="25" pos:column="25">nparents<pos:position pos:line="25" pos:column="33"/></name></expr>;<pos:position pos:line="25" pos:column="34"/></condition> <incr><expr><name pos:line="25" pos:column="35">i<pos:position pos:line="25" pos:column="36"/></name><operator pos:line="25" pos:column="36">++<pos:position pos:line="25" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="25" pos:column="39"/></control> <block pos:line="25" pos:column="40">{
		<decl_stmt><decl><type><name pos:line="26" pos:column="17">int<pos:position pos:line="26" pos:column="20"/></name></type> <name pos:line="26" pos:column="21">changed<pos:position pos:line="26" pos:column="28"/></name></decl>;<pos:position pos:line="26" pos:column="29"/></decl_stmt>
		<expr_stmt><expr><name><name pos:line="27" pos:column="17">cand<pos:position pos:line="27" pos:column="21"/></name><index pos:line="27" pos:column="21">[<expr><name pos:line="27" pos:column="22">i<pos:position pos:line="27" pos:column="23"/></name></expr>]<pos:position pos:line="27" pos:column="24"/></index></name> <operator pos:line="27" pos:column="25">=<pos:position pos:line="27" pos:column="26"/></operator> <name pos:line="27" pos:column="27">NULL<pos:position pos:line="27" pos:column="31"/></name></expr>;<pos:position pos:line="27" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><name pos:line="28" pos:column="17">changed<pos:position pos:line="28" pos:column="24"/></name> <operator pos:line="28" pos:column="25">=<pos:position pos:line="28" pos:column="26"/></operator> <call><name pos:line="28" pos:column="27">process_all_files<pos:position pos:line="28" pos:column="44"/></name><argument_list pos:line="28" pos:column="44">(<argument><expr><operator pos:line="28" pos:column="45">&amp;<pos:position pos:line="28" pos:column="50"/></operator><name><name pos:line="28" pos:column="46">cand<pos:position pos:line="28" pos:column="50"/></name><index pos:line="28" pos:column="50">[<expr><name pos:line="28" pos:column="51">i<pos:position pos:line="28" pos:column="52"/></name></expr>]<pos:position pos:line="28" pos:column="53"/></index></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="55">rev<pos:position pos:line="28" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="60">&amp;<pos:position pos:line="28" pos:column="65"/></operator><name><name pos:line="28" pos:column="61">diffqueues<pos:position pos:line="28" pos:column="71"/></name><index pos:line="28" pos:column="71">[<expr><name pos:line="28" pos:column="72">i<pos:position pos:line="28" pos:column="73"/></name></expr>]<pos:position pos:line="28" pos:column="74"/></index></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="76">range<pos:position pos:line="28" pos:column="81"/></name></expr></argument>)<pos:position pos:line="28" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="83"/></expr_stmt>
		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><operator pos:line="29" pos:column="21">!<pos:position pos:line="29" pos:column="22"/></operator><name pos:line="29" pos:column="22">changed<pos:position pos:line="29" pos:column="29"/></name></expr>)<pos:position pos:line="29" pos:column="30"/></condition><then pos:line="29" pos:column="30"> <block pos:line="29" pos:column="31">{
			<comment type="block" pos:line="30" pos:column="25">/*
			 * This parent can take all the blame, so we
			 * don't follow any other path in history
			 */</comment>
			<expr_stmt><expr><call><name pos:line="34" pos:column="25">add_line_range<pos:position pos:line="34" pos:column="39"/></name><argument_list pos:line="34" pos:column="39">(<argument><expr><name pos:line="34" pos:column="40">rev<pos:position pos:line="34" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="45">parents<pos:position pos:line="34" pos:column="52"/></name><index pos:line="34" pos:column="52">[<expr><name pos:line="34" pos:column="53">i<pos:position pos:line="34" pos:column="54"/></name></expr>]<pos:position pos:line="34" pos:column="55"/></index></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="57">cand<pos:position pos:line="34" pos:column="61"/></name><index pos:line="34" pos:column="61">[<expr><name pos:line="34" pos:column="62">i<pos:position pos:line="34" pos:column="63"/></name></expr>]<pos:position pos:line="34" pos:column="64"/></index></name></expr></argument>)<pos:position pos:line="34" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="66"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="35" pos:column="25">clear_commit_line_range<pos:position pos:line="35" pos:column="48"/></name><argument_list pos:line="35" pos:column="48">(<argument><expr><name pos:line="35" pos:column="49">rev<pos:position pos:line="35" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="54">commit<pos:position pos:line="35" pos:column="60"/></name></expr></argument>)<pos:position pos:line="35" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="62"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="36" pos:column="25">commit_list_append<pos:position pos:line="36" pos:column="43"/></name><argument_list pos:line="36" pos:column="43">(<argument><expr><name><name pos:line="36" pos:column="44">parents<pos:position pos:line="36" pos:column="51"/></name><index pos:line="36" pos:column="51">[<expr><name pos:line="36" pos:column="52">i<pos:position pos:line="36" pos:column="53"/></name></expr>]<pos:position pos:line="36" pos:column="54"/></index></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="56">&amp;<pos:position pos:line="36" pos:column="61"/></operator><name><name pos:line="36" pos:column="57">commit<pos:position pos:line="36" pos:column="63"/></name><operator pos:line="36" pos:column="63">-&gt;<pos:position pos:line="36" pos:column="68"/></operator><name pos:line="36" pos:column="65">parents<pos:position pos:line="36" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="74"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="37" pos:column="25">free<pos:position pos:line="37" pos:column="29"/></name><argument_list pos:line="37" pos:column="29">(<argument><expr><name pos:line="37" pos:column="30">parents<pos:position pos:line="37" pos:column="37"/></name></expr></argument>)<pos:position pos:line="37" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="39"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="38" pos:column="25">free<pos:position pos:line="38" pos:column="29"/></name><argument_list pos:line="38" pos:column="29">(<argument><expr><name pos:line="38" pos:column="30">cand<pos:position pos:line="38" pos:column="34"/></name></expr></argument>)<pos:position pos:line="38" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="36"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="39" pos:column="25">free_diffqueues<pos:position pos:line="39" pos:column="40"/></name><argument_list pos:line="39" pos:column="40">(<argument><expr><name pos:line="39" pos:column="41">nparents<pos:position pos:line="39" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="51">diffqueues<pos:position pos:line="39" pos:column="61"/></name></expr></argument>)<pos:position pos:line="39" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="63"/></expr_stmt>
			<comment type="block" pos:line="40" pos:column="25">/* NEEDSWORK leaking like a sieve */</comment>
			<return pos:line="41" pos:column="25">return <expr><literal type="number" pos:line="41" pos:column="32">0<pos:position pos:line="41" pos:column="33"/></literal></expr>;<pos:position pos:line="41" pos:column="34"/></return>
		}<pos:position pos:line="42" pos:column="18"/></block></then></if>
	}<pos:position pos:line="43" pos:column="10"/></block></for>

	<comment type="block" pos:line="45" pos:column="9">/*
	 * No single parent took the blame.  We add the candidates
	 * from the above loop to the parents.
	 */</comment>
	<for pos:line="49" pos:column="9">for <control pos:line="49" pos:column="13">(<init><expr><name pos:line="49" pos:column="14">i<pos:position pos:line="49" pos:column="15"/></name> <operator pos:line="49" pos:column="16">=<pos:position pos:line="49" pos:column="17"/></operator> <literal type="number" pos:line="49" pos:column="18">0<pos:position pos:line="49" pos:column="19"/></literal></expr>;<pos:position pos:line="49" pos:column="20"/></init> <condition><expr><name pos:line="49" pos:column="21">i<pos:position pos:line="49" pos:column="22"/></name> <operator pos:line="49" pos:column="23">&lt;<pos:position pos:line="49" pos:column="27"/></operator> <name pos:line="49" pos:column="25">nparents<pos:position pos:line="49" pos:column="33"/></name></expr>;<pos:position pos:line="49" pos:column="34"/></condition> <incr><expr><name pos:line="49" pos:column="35">i<pos:position pos:line="49" pos:column="36"/></name><operator pos:line="49" pos:column="36">++<pos:position pos:line="49" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="49" pos:column="39"/></control> <block pos:line="49" pos:column="40">{
		<expr_stmt><expr><call><name pos:line="50" pos:column="17">add_line_range<pos:position pos:line="50" pos:column="31"/></name><argument_list pos:line="50" pos:column="31">(<argument><expr><name pos:line="50" pos:column="32">rev<pos:position pos:line="50" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="37">parents<pos:position pos:line="50" pos:column="44"/></name><index pos:line="50" pos:column="44">[<expr><name pos:line="50" pos:column="45">i<pos:position pos:line="50" pos:column="46"/></name></expr>]<pos:position pos:line="50" pos:column="47"/></index></name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="49">cand<pos:position pos:line="50" pos:column="53"/></name><index pos:line="50" pos:column="53">[<expr><name pos:line="50" pos:column="54">i<pos:position pos:line="50" pos:column="55"/></name></expr>]<pos:position pos:line="50" pos:column="56"/></index></name></expr></argument>)<pos:position pos:line="50" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="58"/></expr_stmt>
	}<pos:position pos:line="51" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="53" pos:column="9">clear_commit_line_range<pos:position pos:line="53" pos:column="32"/></name><argument_list pos:line="53" pos:column="32">(<argument><expr><name pos:line="53" pos:column="33">rev<pos:position pos:line="53" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="38">commit<pos:position pos:line="53" pos:column="44"/></name></expr></argument>)<pos:position pos:line="53" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="54" pos:column="9">free<pos:position pos:line="54" pos:column="13"/></name><argument_list pos:line="54" pos:column="13">(<argument><expr><name pos:line="54" pos:column="14">parents<pos:position pos:line="54" pos:column="21"/></name></expr></argument>)<pos:position pos:line="54" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="23"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="55" pos:column="9">free<pos:position pos:line="55" pos:column="13"/></name><argument_list pos:line="55" pos:column="13">(<argument><expr><name pos:line="55" pos:column="14">cand<pos:position pos:line="55" pos:column="18"/></name></expr></argument>)<pos:position pos:line="55" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="20"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="56" pos:column="9">free_diffqueues<pos:position pos:line="56" pos:column="24"/></name><argument_list pos:line="56" pos:column="24">(<argument><expr><name pos:line="56" pos:column="25">nparents<pos:position pos:line="56" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="35">diffqueues<pos:position pos:line="56" pos:column="45"/></name></expr></argument>)<pos:position pos:line="56" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="47"/></expr_stmt>
	<return pos:line="57" pos:column="9">return <expr><literal type="number" pos:line="57" pos:column="16">1<pos:position pos:line="57" pos:column="17"/></literal></expr>;<pos:position pos:line="57" pos:column="18"/></return>

	<comment type="block" pos:line="59" pos:column="9">/* NEEDSWORK evil merge detection stuff */</comment>
	<comment type="block" pos:line="60" pos:column="9">/* NEEDSWORK leaking like a sieve */</comment>
}<pos:position pos:line="61" pos:column="2"/></block></function></unit>

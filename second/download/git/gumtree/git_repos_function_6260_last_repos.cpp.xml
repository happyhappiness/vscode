<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6260_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">add_object_entry_from_bitmap<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><specifier pos:line="1" pos:column="41">const<pos:position pos:line="1" pos:column="46"/></specifier> <name pos:line="1" pos:column="47">unsigned<pos:position pos:line="1" pos:column="55"/></name> <name pos:line="1" pos:column="56">char<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">sha1<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>,
					<parameter><decl><type><name><name pos:line="2" pos:column="41">enum<pos:position pos:line="2" pos:column="45"/></name> <name pos:line="2" pos:column="46">object_type<pos:position pos:line="2" pos:column="57"/></name></name></type> <name pos:line="2" pos:column="58">type<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>,
					<parameter><decl><type><name pos:line="3" pos:column="41">int<pos:position pos:line="3" pos:column="44"/></name></type> <name pos:line="3" pos:column="45">flags<pos:position pos:line="3" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="52">uint32_t<pos:position pos:line="3" pos:column="60"/></name></type> <name pos:line="3" pos:column="61">name_hash<pos:position pos:line="3" pos:column="70"/></name></decl></parameter>,
					<parameter><decl><type><name><name pos:line="4" pos:column="41">struct<pos:position pos:line="4" pos:column="47"/></name> <name pos:line="4" pos:column="48">packed_git<pos:position pos:line="4" pos:column="58"/></name></name> <modifier pos:line="4" pos:column="59">*<pos:position pos:line="4" pos:column="60"/></modifier></type><name pos:line="4" pos:column="60">pack<pos:position pos:line="4" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><name pos:line="4" pos:column="66">off_t<pos:position pos:line="4" pos:column="71"/></name></type> <name pos:line="4" pos:column="72">offset<pos:position pos:line="4" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="79"/></parameter_list>
<block pos:line="5" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">uint32_t<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">index_pos<pos:position pos:line="6" pos:column="27"/></name></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><call><name pos:line="8" pos:column="13">have_duplicate_entry<pos:position pos:line="8" pos:column="33"/></name><argument_list pos:line="8" pos:column="33">(<argument><expr><name pos:line="8" pos:column="34">sha1<pos:position pos:line="8" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="40">0<pos:position pos:line="8" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="8" pos:column="43">&amp;<pos:position pos:line="8" pos:column="48"/></operator><name pos:line="8" pos:column="44">index_pos<pos:position pos:line="8" pos:column="53"/></name></expr></argument>)<pos:position pos:line="8" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="55"/></condition><then pos:line="8" pos:column="55">
		<block type="pseudo"><return pos:line="9" pos:column="17">return <expr><literal type="number" pos:line="9" pos:column="24">0<pos:position pos:line="9" pos:column="25"/></literal></expr>;<pos:position pos:line="9" pos:column="26"/></return></block></then></if>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><call><name pos:line="11" pos:column="14">want_object_in_pack<pos:position pos:line="11" pos:column="33"/></name><argument_list pos:line="11" pos:column="33">(<argument><expr><name pos:line="11" pos:column="34">sha1<pos:position pos:line="11" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="40">0<pos:position pos:line="11" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="11" pos:column="43">&amp;<pos:position pos:line="11" pos:column="48"/></operator><name pos:line="11" pos:column="44">pack<pos:position pos:line="11" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="50">&amp;<pos:position pos:line="11" pos:column="55"/></operator><name pos:line="11" pos:column="51">offset<pos:position pos:line="11" pos:column="57"/></name></expr></argument>)<pos:position pos:line="11" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="59"/></condition><then pos:line="11" pos:column="59">
		<block type="pseudo"><return pos:line="12" pos:column="17">return <expr><literal type="number" pos:line="12" pos:column="24">0<pos:position pos:line="12" pos:column="25"/></literal></expr>;<pos:position pos:line="12" pos:column="26"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="14" pos:column="9">create_object_entry<pos:position pos:line="14" pos:column="28"/></name><argument_list pos:line="14" pos:column="28">(<argument><expr><name pos:line="14" pos:column="29">sha1<pos:position pos:line="14" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="35">type<pos:position pos:line="14" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="41">name_hash<pos:position pos:line="14" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="52">0<pos:position pos:line="14" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="55">0<pos:position pos:line="14" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="58">index_pos<pos:position pos:line="14" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="69">pack<pos:position pos:line="14" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="75">offset<pos:position pos:line="14" pos:column="81"/></name></expr></argument>)<pos:position pos:line="14" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="83"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="16" pos:column="9">display_progress<pos:position pos:line="16" pos:column="25"/></name><argument_list pos:line="16" pos:column="25">(<argument><expr><name pos:line="16" pos:column="26">progress_state<pos:position pos:line="16" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="42">nr_result<pos:position pos:line="16" pos:column="51"/></name></expr></argument>)<pos:position pos:line="16" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="53"/></expr_stmt>
	<return pos:line="17" pos:column="9">return <expr><literal type="number" pos:line="17" pos:column="16">1<pos:position pos:line="17" pos:column="17"/></literal></expr>;<pos:position pos:line="17" pos:column="18"/></return>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5295_git-2.5.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_grep<pos:position pos:line="1" pos:column="13"/></name><parameter_list pos:line="1" pos:column="13">(<parameter><decl><type><name pos:line="1" pos:column="14">int<pos:position pos:line="1" pos:column="17"/></name></type> <name pos:line="1" pos:column="18">argc<pos:position pos:line="1" pos:column="22"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier><modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">argv<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="43">const<pos:position pos:line="1" pos:column="48"/></specifier> <name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">prefix<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">hit<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><literal type="number" pos:line="3" pos:column="19">0<pos:position pos:line="3" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">cached<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><literal type="number" pos:line="4" pos:column="22">0<pos:position pos:line="4" pos:column="23"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="25">untracked<pos:position pos:line="4" pos:column="34"/></name> <init pos:line="4" pos:column="35">= <expr><literal type="number" pos:line="4" pos:column="37">0<pos:position pos:line="4" pos:column="38"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="40">opt_exclude<pos:position pos:line="4" pos:column="51"/></name> <init pos:line="4" pos:column="52">= <expr><operator pos:line="4" pos:column="54">-<pos:position pos:line="4" pos:column="55"/></operator><literal type="number" pos:line="4" pos:column="55">1<pos:position pos:line="4" pos:column="56"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="57"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">seen_dashdash<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><literal type="number" pos:line="5" pos:column="29">0<pos:position pos:line="5" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">external_grep_allowed__ignored<pos:position pos:line="6" pos:column="43"/></name></decl>;<pos:position pos:line="6" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name pos:line="7" pos:column="15">char<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">show_in_pager<pos:position pos:line="7" pos:column="34"/></name> <init pos:line="7" pos:column="35">= <expr><name pos:line="7" pos:column="37">NULL<pos:position pos:line="7" pos:column="41"/></name></expr></init></decl>, <modifier pos:line="7" pos:column="43">*<pos:position pos:line="7" pos:column="44"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="44">default_pager<pos:position pos:line="7" pos:column="57"/></name> <init pos:line="7" pos:column="58">= <expr><literal type="string" pos:line="7" pos:column="60">"dummy"<pos:position pos:line="7" pos:column="67"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="68"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">grep_opt<pos:position pos:line="8" pos:column="24"/></name></name></type> <name pos:line="8" pos:column="25">opt<pos:position pos:line="8" pos:column="28"/></name></decl>;<pos:position pos:line="8" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">object_array<pos:position pos:line="9" pos:column="28"/></name></name></type> <name pos:line="9" pos:column="29">list<pos:position pos:line="9" pos:column="33"/></name> <init pos:line="9" pos:column="34">= <expr><name pos:line="9" pos:column="36">OBJECT_ARRAY_INIT<pos:position pos:line="9" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="54"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="10" pos:column="9">struct<pos:position pos:line="10" pos:column="15"/></name> <name pos:line="10" pos:column="16">pathspec<pos:position pos:line="10" pos:column="24"/></name></name></type> <name pos:line="10" pos:column="25">pathspec<pos:position pos:line="10" pos:column="33"/></name></decl>;<pos:position pos:line="10" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="11" pos:column="9">struct<pos:position pos:line="11" pos:column="15"/></name> <name pos:line="11" pos:column="16">string_list<pos:position pos:line="11" pos:column="27"/></name></name></type> <name pos:line="11" pos:column="28">path_list<pos:position pos:line="11" pos:column="37"/></name> <init pos:line="11" pos:column="38">= <expr><name pos:line="11" pos:column="40">STRING_LIST_INIT_NODUP<pos:position pos:line="11" pos:column="62"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="63"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">int<pos:position pos:line="12" pos:column="12"/></name></type> <name pos:line="12" pos:column="13">i<pos:position pos:line="12" pos:column="14"/></name></decl>;<pos:position pos:line="12" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="13" pos:column="9">int<pos:position pos:line="13" pos:column="12"/></name></type> <name pos:line="13" pos:column="13">dummy<pos:position pos:line="13" pos:column="18"/></name></decl>;<pos:position pos:line="13" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="14" pos:column="9">int<pos:position pos:line="14" pos:column="12"/></name></type> <name pos:line="14" pos:column="13">use_index<pos:position pos:line="14" pos:column="22"/></name> <init pos:line="14" pos:column="23">= <expr><literal type="number" pos:line="14" pos:column="25">1<pos:position pos:line="14" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="15" pos:column="9">int<pos:position pos:line="15" pos:column="12"/></name></type> <name pos:line="15" pos:column="13">pattern_type_arg<pos:position pos:line="15" pos:column="29"/></name> <init pos:line="15" pos:column="30">= <expr><name pos:line="15" pos:column="32">GREP_PATTERN_TYPE_UNSPECIFIED<pos:position pos:line="15" pos:column="61"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="62"/></decl_stmt>

	<decl_stmt><decl><type><name><name pos:line="17" pos:column="9">struct<pos:position pos:line="17" pos:column="15"/></name> <name pos:line="17" pos:column="16">option<pos:position pos:line="17" pos:column="22"/></name></name></type> <name><name pos:line="17" pos:column="23">options<pos:position pos:line="17" pos:column="30"/></name><index pos:line="17" pos:column="30">[]<pos:position pos:line="17" pos:column="32"/></index></name> <init pos:line="17" pos:column="33">= <expr><block pos:line="17" pos:column="35">{
		<expr><call><name pos:line="18" pos:column="17">OPT_BOOL<pos:position pos:line="18" pos:column="25"/></name><argument_list pos:line="18" pos:column="25">(<argument><expr><literal type="number" pos:line="18" pos:column="26">0<pos:position pos:line="18" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="29">"cached"<pos:position pos:line="18" pos:column="37"/></literal></expr></argument>, <argument><expr><operator pos:line="18" pos:column="39">&amp;<pos:position pos:line="18" pos:column="44"/></operator><name pos:line="18" pos:column="40">cached<pos:position pos:line="18" pos:column="46"/></name></expr></argument>,
			<argument><expr><call><name pos:line="19" pos:column="25">N_<pos:position pos:line="19" pos:column="27"/></name><argument_list pos:line="19" pos:column="27">(<argument><expr><literal type="string" pos:line="19" pos:column="28">"search in index instead of in the work tree"<pos:position pos:line="19" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="75"/></argument_list></call></expr>,
		<expr><call><name pos:line="20" pos:column="17">OPT_NEGBIT<pos:position pos:line="20" pos:column="27"/></name><argument_list pos:line="20" pos:column="27">(<argument><expr><literal type="number" pos:line="20" pos:column="28">0<pos:position pos:line="20" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="31">"no-index"<pos:position pos:line="20" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="20" pos:column="43">&amp;<pos:position pos:line="20" pos:column="48"/></operator><name pos:line="20" pos:column="44">use_index<pos:position pos:line="20" pos:column="53"/></name></expr></argument>,
			 <argument><expr><call><name pos:line="21" pos:column="26">N_<pos:position pos:line="21" pos:column="28"/></name><argument_list pos:line="21" pos:column="28">(<argument><expr><literal type="string" pos:line="21" pos:column="29">"find in contents not managed by git"<pos:position pos:line="21" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="67"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="69">1<pos:position pos:line="21" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="71"/></argument_list></call></expr>,
		<expr><call><name pos:line="22" pos:column="17">OPT_BOOL<pos:position pos:line="22" pos:column="25"/></name><argument_list pos:line="22" pos:column="25">(<argument><expr><literal type="number" pos:line="22" pos:column="26">0<pos:position pos:line="22" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="29">"untracked"<pos:position pos:line="22" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="22" pos:column="42">&amp;<pos:position pos:line="22" pos:column="47"/></operator><name pos:line="22" pos:column="43">untracked<pos:position pos:line="22" pos:column="52"/></name></expr></argument>,
			<argument><expr><call><name pos:line="23" pos:column="25">N_<pos:position pos:line="23" pos:column="27"/></name><argument_list pos:line="23" pos:column="27">(<argument><expr><literal type="string" pos:line="23" pos:column="28">"search in both tracked and untracked files"<pos:position pos:line="23" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="74"/></argument_list></call></expr>,
		<expr><call><name pos:line="24" pos:column="17">OPT_SET_INT<pos:position pos:line="24" pos:column="28"/></name><argument_list pos:line="24" pos:column="28">(<argument><expr><literal type="number" pos:line="24" pos:column="29">0<pos:position pos:line="24" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="32">"exclude-standard"<pos:position pos:line="24" pos:column="50"/></literal></expr></argument>, <argument><expr><operator pos:line="24" pos:column="52">&amp;<pos:position pos:line="24" pos:column="57"/></operator><name pos:line="24" pos:column="53">opt_exclude<pos:position pos:line="24" pos:column="64"/></name></expr></argument>,
			    <argument><expr><call><name pos:line="25" pos:column="29">N_<pos:position pos:line="25" pos:column="31"/></name><argument_list pos:line="25" pos:column="31">(<argument><expr><literal type="string" pos:line="25" pos:column="32">"ignore files specified via '.gitignore'"<pos:position pos:line="25" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="74"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="76">1<pos:position pos:line="25" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="78"/></argument_list></call></expr>,
		<expr><call><name pos:line="26" pos:column="17">OPT_GROUP<pos:position pos:line="26" pos:column="26"/></name><argument_list pos:line="26" pos:column="26">(<argument><expr><literal type="string" pos:line="26" pos:column="27">""<pos:position pos:line="26" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="30"/></argument_list></call></expr>,
		<expr><call><name pos:line="27" pos:column="17">OPT_BOOL<pos:position pos:line="27" pos:column="25"/></name><argument_list pos:line="27" pos:column="25">(<argument><expr><literal type="char" pos:line="27" pos:column="26">'v'<pos:position pos:line="27" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="31">"invert-match"<pos:position pos:line="27" pos:column="45"/></literal></expr></argument>, <argument><expr><operator pos:line="27" pos:column="47">&amp;<pos:position pos:line="27" pos:column="52"/></operator><name><name pos:line="27" pos:column="48">opt<pos:position pos:line="27" pos:column="51"/></name><operator pos:line="27" pos:column="51">.<pos:position pos:line="27" pos:column="52"/></operator><name pos:line="27" pos:column="52">invert<pos:position pos:line="27" pos:column="58"/></name></name></expr></argument>,
			<argument><expr><call><name pos:line="28" pos:column="25">N_<pos:position pos:line="28" pos:column="27"/></name><argument_list pos:line="28" pos:column="27">(<argument><expr><literal type="string" pos:line="28" pos:column="28">"show non-matching lines"<pos:position pos:line="28" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="55"/></argument_list></call></expr>,
		<expr><call><name pos:line="29" pos:column="17">OPT_BOOL<pos:position pos:line="29" pos:column="25"/></name><argument_list pos:line="29" pos:column="25">(<argument><expr><literal type="char" pos:line="29" pos:column="26">'i'<pos:position pos:line="29" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="31">"ignore-case"<pos:position pos:line="29" pos:column="44"/></literal></expr></argument>, <argument><expr><operator pos:line="29" pos:column="46">&amp;<pos:position pos:line="29" pos:column="51"/></operator><name><name pos:line="29" pos:column="47">opt<pos:position pos:line="29" pos:column="50"/></name><operator pos:line="29" pos:column="50">.<pos:position pos:line="29" pos:column="51"/></operator><name pos:line="29" pos:column="51">ignore_case<pos:position pos:line="29" pos:column="62"/></name></name></expr></argument>,
			<argument><expr><call><name pos:line="30" pos:column="25">N_<pos:position pos:line="30" pos:column="27"/></name><argument_list pos:line="30" pos:column="27">(<argument><expr><literal type="string" pos:line="30" pos:column="28">"case insensitive matching"<pos:position pos:line="30" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="30" pos:column="57"/></argument_list></call></expr>,
		<expr><call><name pos:line="31" pos:column="17">OPT_BOOL<pos:position pos:line="31" pos:column="25"/></name><argument_list pos:line="31" pos:column="25">(<argument><expr><literal type="char" pos:line="31" pos:column="26">'w'<pos:position pos:line="31" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="31">"word-regexp"<pos:position pos:line="31" pos:column="44"/></literal></expr></argument>, <argument><expr><operator pos:line="31" pos:column="46">&amp;<pos:position pos:line="31" pos:column="51"/></operator><name><name pos:line="31" pos:column="47">opt<pos:position pos:line="31" pos:column="50"/></name><operator pos:line="31" pos:column="50">.<pos:position pos:line="31" pos:column="51"/></operator><name pos:line="31" pos:column="51">word_regexp<pos:position pos:line="31" pos:column="62"/></name></name></expr></argument>,
			<argument><expr><call><name pos:line="32" pos:column="25">N_<pos:position pos:line="32" pos:column="27"/></name><argument_list pos:line="32" pos:column="27">(<argument><expr><literal type="string" pos:line="32" pos:column="28">"match patterns only at word boundaries"<pos:position pos:line="32" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="70"/></argument_list></call></expr>,
		<expr><call><name pos:line="33" pos:column="17">OPT_SET_INT<pos:position pos:line="33" pos:column="28"/></name><argument_list pos:line="33" pos:column="28">(<argument><expr><literal type="char" pos:line="33" pos:column="29">'a'<pos:position pos:line="33" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="34">"text"<pos:position pos:line="33" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="33" pos:column="42">&amp;<pos:position pos:line="33" pos:column="47"/></operator><name><name pos:line="33" pos:column="43">opt<pos:position pos:line="33" pos:column="46"/></name><operator pos:line="33" pos:column="46">.<pos:position pos:line="33" pos:column="47"/></operator><name pos:line="33" pos:column="47">binary<pos:position pos:line="33" pos:column="53"/></name></name></expr></argument>,
			<argument><expr><call><name pos:line="34" pos:column="25">N_<pos:position pos:line="34" pos:column="27"/></name><argument_list pos:line="34" pos:column="27">(<argument><expr><literal type="string" pos:line="34" pos:column="28">"process binary files as text"<pos:position pos:line="34" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="59"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="34" pos:column="61">GREP_BINARY_TEXT<pos:position pos:line="34" pos:column="77"/></name></expr></argument>)<pos:position pos:line="34" pos:column="78"/></argument_list></call></expr>,
		<expr><call><name pos:line="35" pos:column="17">OPT_SET_INT<pos:position pos:line="35" pos:column="28"/></name><argument_list pos:line="35" pos:column="28">(<argument><expr><literal type="char" pos:line="35" pos:column="29">'I'<pos:position pos:line="35" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="34">NULL<pos:position pos:line="35" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="40">&amp;<pos:position pos:line="35" pos:column="45"/></operator><name><name pos:line="35" pos:column="41">opt<pos:position pos:line="35" pos:column="44"/></name><operator pos:line="35" pos:column="44">.<pos:position pos:line="35" pos:column="45"/></operator><name pos:line="35" pos:column="45">binary<pos:position pos:line="35" pos:column="51"/></name></name></expr></argument>,
			<argument><expr><call><name pos:line="36" pos:column="25">N_<pos:position pos:line="36" pos:column="27"/></name><argument_list pos:line="36" pos:column="27">(<argument><expr><literal type="string" pos:line="36" pos:column="28">"don't match patterns in binary files"<pos:position pos:line="36" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="67"/></argument_list></call></expr></argument>,
			<argument><expr><name pos:line="37" pos:column="25">GREP_BINARY_NOMATCH<pos:position pos:line="37" pos:column="44"/></name></expr></argument>)<pos:position pos:line="37" pos:column="45"/></argument_list></call></expr>,
		<expr><call><name pos:line="38" pos:column="17">OPT_BOOL<pos:position pos:line="38" pos:column="25"/></name><argument_list pos:line="38" pos:column="25">(<argument><expr><literal type="number" pos:line="38" pos:column="26">0<pos:position pos:line="38" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="29">"textconv"<pos:position pos:line="38" pos:column="39"/></literal></expr></argument>, <argument><expr><operator pos:line="38" pos:column="41">&amp;<pos:position pos:line="38" pos:column="46"/></operator><name><name pos:line="38" pos:column="42">opt<pos:position pos:line="38" pos:column="45"/></name><operator pos:line="38" pos:column="45">.<pos:position pos:line="38" pos:column="46"/></operator><name pos:line="38" pos:column="46">allow_textconv<pos:position pos:line="38" pos:column="60"/></name></name></expr></argument>,
			 <argument><expr><call><name pos:line="39" pos:column="26">N_<pos:position pos:line="39" pos:column="28"/></name><argument_list pos:line="39" pos:column="28">(<argument><expr><literal type="string" pos:line="39" pos:column="29">"process binary files with textconv filters"<pos:position pos:line="39" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="39" pos:column="75"/></argument_list></call></expr>,
		<expr><block pos:line="40" pos:column="17">{ <expr><name pos:line="40" pos:column="19">OPTION_INTEGER<pos:position pos:line="40" pos:column="33"/></name></expr>, <expr><literal type="number" pos:line="40" pos:column="35">0<pos:position pos:line="40" pos:column="36"/></literal></expr>, <expr><literal type="string" pos:line="40" pos:column="38">"max-depth"<pos:position pos:line="40" pos:column="49"/></literal></expr>, <expr><operator pos:line="40" pos:column="51">&amp;<pos:position pos:line="40" pos:column="56"/></operator><name><name pos:line="40" pos:column="52">opt<pos:position pos:line="40" pos:column="55"/></name><operator pos:line="40" pos:column="55">.<pos:position pos:line="40" pos:column="56"/></operator><name pos:line="40" pos:column="56">max_depth<pos:position pos:line="40" pos:column="65"/></name></name></expr>, <expr><call><name pos:line="40" pos:column="67">N_<pos:position pos:line="40" pos:column="69"/></name><argument_list pos:line="40" pos:column="69">(<argument><expr><literal type="string" pos:line="40" pos:column="70">"depth"<pos:position pos:line="40" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="78"/></argument_list></call></expr>,
			<expr><call><name pos:line="41" pos:column="25">N_<pos:position pos:line="41" pos:column="27"/></name><argument_list pos:line="41" pos:column="27">(<argument><expr><literal type="string" pos:line="41" pos:column="28">"descend at most &lt;depth&gt; levels"<pos:position pos:line="41" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="61"/></argument_list></call></expr>, <expr><name pos:line="41" pos:column="63">PARSE_OPT_NONEG<pos:position pos:line="41" pos:column="78"/></name></expr>,
			<expr><name pos:line="42" pos:column="25">NULL<pos:position pos:line="42" pos:column="29"/></name></expr>, <expr><literal type="number" pos:line="42" pos:column="31">1<pos:position pos:line="42" pos:column="32"/></literal></expr> }<pos:position pos:line="42" pos:column="34"/></block></expr>,
		<expr><call><name pos:line="43" pos:column="17">OPT_GROUP<pos:position pos:line="43" pos:column="26"/></name><argument_list pos:line="43" pos:column="26">(<argument><expr><literal type="string" pos:line="43" pos:column="27">""<pos:position pos:line="43" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="30"/></argument_list></call></expr>,
		<expr><call><name pos:line="44" pos:column="17">OPT_SET_INT<pos:position pos:line="44" pos:column="28"/></name><argument_list pos:line="44" pos:column="28">(<argument><expr><literal type="char" pos:line="44" pos:column="29">'E'<pos:position pos:line="44" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="34">"extended-regexp"<pos:position pos:line="44" pos:column="51"/></literal></expr></argument>, <argument><expr><operator pos:line="44" pos:column="53">&amp;<pos:position pos:line="44" pos:column="58"/></operator><name pos:line="44" pos:column="54">pattern_type_arg<pos:position pos:line="44" pos:column="70"/></name></expr></argument>,
			    <argument><expr><call><name pos:line="45" pos:column="29">N_<pos:position pos:line="45" pos:column="31"/></name><argument_list pos:line="45" pos:column="31">(<argument><expr><literal type="string" pos:line="45" pos:column="32">"use extended POSIX regular expressions"<pos:position pos:line="45" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="73"/></argument_list></call></expr></argument>,
			    <argument><expr><name pos:line="46" pos:column="29">GREP_PATTERN_TYPE_ERE<pos:position pos:line="46" pos:column="50"/></name></expr></argument>)<pos:position pos:line="46" pos:column="51"/></argument_list></call></expr>,
		<expr><call><name pos:line="47" pos:column="17">OPT_SET_INT<pos:position pos:line="47" pos:column="28"/></name><argument_list pos:line="47" pos:column="28">(<argument><expr><literal type="char" pos:line="47" pos:column="29">'G'<pos:position pos:line="47" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="34">"basic-regexp"<pos:position pos:line="47" pos:column="48"/></literal></expr></argument>, <argument><expr><operator pos:line="47" pos:column="50">&amp;<pos:position pos:line="47" pos:column="55"/></operator><name pos:line="47" pos:column="51">pattern_type_arg<pos:position pos:line="47" pos:column="67"/></name></expr></argument>,
			    <argument><expr><call><name pos:line="48" pos:column="29">N_<pos:position pos:line="48" pos:column="31"/></name><argument_list pos:line="48" pos:column="31">(<argument><expr><literal type="string" pos:line="48" pos:column="32">"use basic POSIX regular expressions (default)"<pos:position pos:line="48" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="80"/></argument_list></call></expr></argument>,
			    <argument><expr><name pos:line="49" pos:column="29">GREP_PATTERN_TYPE_BRE<pos:position pos:line="49" pos:column="50"/></name></expr></argument>)<pos:position pos:line="49" pos:column="51"/></argument_list></call></expr>,
		<expr><call><name pos:line="50" pos:column="17">OPT_SET_INT<pos:position pos:line="50" pos:column="28"/></name><argument_list pos:line="50" pos:column="28">(<argument><expr><literal type="char" pos:line="50" pos:column="29">'F'<pos:position pos:line="50" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="34">"fixed-strings"<pos:position pos:line="50" pos:column="49"/></literal></expr></argument>, <argument><expr><operator pos:line="50" pos:column="51">&amp;<pos:position pos:line="50" pos:column="56"/></operator><name pos:line="50" pos:column="52">pattern_type_arg<pos:position pos:line="50" pos:column="68"/></name></expr></argument>,
			    <argument><expr><call><name pos:line="51" pos:column="29">N_<pos:position pos:line="51" pos:column="31"/></name><argument_list pos:line="51" pos:column="31">(<argument><expr><literal type="string" pos:line="51" pos:column="32">"interpret patterns as fixed strings"<pos:position pos:line="51" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="70"/></argument_list></call></expr></argument>,
			    <argument><expr><name pos:line="52" pos:column="29">GREP_PATTERN_TYPE_FIXED<pos:position pos:line="52" pos:column="52"/></name></expr></argument>)<pos:position pos:line="52" pos:column="53"/></argument_list></call></expr>,
		<expr><call><name pos:line="53" pos:column="17">OPT_SET_INT<pos:position pos:line="53" pos:column="28"/></name><argument_list pos:line="53" pos:column="28">(<argument><expr><literal type="char" pos:line="53" pos:column="29">'P'<pos:position pos:line="53" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="34">"perl-regexp"<pos:position pos:line="53" pos:column="47"/></literal></expr></argument>, <argument><expr><operator pos:line="53" pos:column="49">&amp;<pos:position pos:line="53" pos:column="54"/></operator><name pos:line="53" pos:column="50">pattern_type_arg<pos:position pos:line="53" pos:column="66"/></name></expr></argument>,
			    <argument><expr><call><name pos:line="54" pos:column="29">N_<pos:position pos:line="54" pos:column="31"/></name><argument_list pos:line="54" pos:column="31">(<argument><expr><literal type="string" pos:line="54" pos:column="32">"use Perl-compatible regular expressions"<pos:position pos:line="54" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="74"/></argument_list></call></expr></argument>,
			    <argument><expr><name pos:line="55" pos:column="29">GREP_PATTERN_TYPE_PCRE<pos:position pos:line="55" pos:column="51"/></name></expr></argument>)<pos:position pos:line="55" pos:column="52"/></argument_list></call></expr>,
		<expr><call><name pos:line="56" pos:column="17">OPT_GROUP<pos:position pos:line="56" pos:column="26"/></name><argument_list pos:line="56" pos:column="26">(<argument><expr><literal type="string" pos:line="56" pos:column="27">""<pos:position pos:line="56" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="30"/></argument_list></call></expr>,
		<expr><call><name pos:line="57" pos:column="17">OPT_BOOL<pos:position pos:line="57" pos:column="25"/></name><argument_list pos:line="57" pos:column="25">(<argument><expr><literal type="char" pos:line="57" pos:column="26">'n'<pos:position pos:line="57" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="31">"line-number"<pos:position pos:line="57" pos:column="44"/></literal></expr></argument>, <argument><expr><operator pos:line="57" pos:column="46">&amp;<pos:position pos:line="57" pos:column="51"/></operator><name><name pos:line="57" pos:column="47">opt<pos:position pos:line="57" pos:column="50"/></name><operator pos:line="57" pos:column="50">.<pos:position pos:line="57" pos:column="51"/></operator><name pos:line="57" pos:column="51">linenum<pos:position pos:line="57" pos:column="58"/></name></name></expr></argument>, <argument><expr><call><name pos:line="57" pos:column="60">N_<pos:position pos:line="57" pos:column="62"/></name><argument_list pos:line="57" pos:column="62">(<argument><expr><literal type="string" pos:line="57" pos:column="63">"show line numbers"<pos:position pos:line="57" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="57" pos:column="84"/></argument_list></call></expr>,
		<expr><call><name pos:line="58" pos:column="17">OPT_NEGBIT<pos:position pos:line="58" pos:column="27"/></name><argument_list pos:line="58" pos:column="27">(<argument><expr><literal type="char" pos:line="58" pos:column="28">'h'<pos:position pos:line="58" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="58" pos:column="33">NULL<pos:position pos:line="58" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="58" pos:column="39">&amp;<pos:position pos:line="58" pos:column="44"/></operator><name><name pos:line="58" pos:column="40">opt<pos:position pos:line="58" pos:column="43"/></name><operator pos:line="58" pos:column="43">.<pos:position pos:line="58" pos:column="44"/></operator><name pos:line="58" pos:column="44">pathname<pos:position pos:line="58" pos:column="52"/></name></name></expr></argument>, <argument><expr><call><name pos:line="58" pos:column="54">N_<pos:position pos:line="58" pos:column="56"/></name><argument_list pos:line="58" pos:column="56">(<argument><expr><literal type="string" pos:line="58" pos:column="57">"don't show filenames"<pos:position pos:line="58" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="80"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="58" pos:column="82">1<pos:position pos:line="58" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="84"/></argument_list></call></expr>,
		<expr><call><name pos:line="59" pos:column="17">OPT_BIT<pos:position pos:line="59" pos:column="24"/></name><argument_list pos:line="59" pos:column="24">(<argument><expr><literal type="char" pos:line="59" pos:column="25">'H'<pos:position pos:line="59" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="59" pos:column="30">NULL<pos:position pos:line="59" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="59" pos:column="36">&amp;<pos:position pos:line="59" pos:column="41"/></operator><name><name pos:line="59" pos:column="37">opt<pos:position pos:line="59" pos:column="40"/></name><operator pos:line="59" pos:column="40">.<pos:position pos:line="59" pos:column="41"/></operator><name pos:line="59" pos:column="41">pathname<pos:position pos:line="59" pos:column="49"/></name></name></expr></argument>, <argument><expr><call><name pos:line="59" pos:column="51">N_<pos:position pos:line="59" pos:column="53"/></name><argument_list pos:line="59" pos:column="53">(<argument><expr><literal type="string" pos:line="59" pos:column="54">"show filenames"<pos:position pos:line="59" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="71"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="59" pos:column="73">1<pos:position pos:line="59" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="75"/></argument_list></call></expr>,
		<expr><call><name pos:line="60" pos:column="17">OPT_NEGBIT<pos:position pos:line="60" pos:column="27"/></name><argument_list pos:line="60" pos:column="27">(<argument><expr><literal type="number" pos:line="60" pos:column="28">0<pos:position pos:line="60" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="31">"full-name"<pos:position pos:line="60" pos:column="42"/></literal></expr></argument>, <argument><expr><operator pos:line="60" pos:column="44">&amp;<pos:position pos:line="60" pos:column="49"/></operator><name><name pos:line="60" pos:column="45">opt<pos:position pos:line="60" pos:column="48"/></name><operator pos:line="60" pos:column="48">.<pos:position pos:line="60" pos:column="49"/></operator><name pos:line="60" pos:column="49">relative<pos:position pos:line="60" pos:column="57"/></name></name></expr></argument>,
			<argument><expr><call><name pos:line="61" pos:column="25">N_<pos:position pos:line="61" pos:column="27"/></name><argument_list pos:line="61" pos:column="27">(<argument><expr><literal type="string" pos:line="61" pos:column="28">"show filenames relative to top directory"<pos:position pos:line="61" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="71"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="61" pos:column="73">1<pos:position pos:line="61" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="75"/></argument_list></call></expr>,
		<expr><call><name pos:line="62" pos:column="17">OPT_BOOL<pos:position pos:line="62" pos:column="25"/></name><argument_list pos:line="62" pos:column="25">(<argument><expr><literal type="char" pos:line="62" pos:column="26">'l'<pos:position pos:line="62" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="31">"files-with-matches"<pos:position pos:line="62" pos:column="51"/></literal></expr></argument>, <argument><expr><operator pos:line="62" pos:column="53">&amp;<pos:position pos:line="62" pos:column="58"/></operator><name><name pos:line="62" pos:column="54">opt<pos:position pos:line="62" pos:column="57"/></name><operator pos:line="62" pos:column="57">.<pos:position pos:line="62" pos:column="58"/></operator><name pos:line="62" pos:column="58">name_only<pos:position pos:line="62" pos:column="67"/></name></name></expr></argument>,
			<argument><expr><call><name pos:line="63" pos:column="25">N_<pos:position pos:line="63" pos:column="27"/></name><argument_list pos:line="63" pos:column="27">(<argument><expr><literal type="string" pos:line="63" pos:column="28">"show only filenames instead of matching lines"<pos:position pos:line="63" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="63" pos:column="77"/></argument_list></call></expr>,
		<expr><call><name pos:line="64" pos:column="17">OPT_BOOL<pos:position pos:line="64" pos:column="25"/></name><argument_list pos:line="64" pos:column="25">(<argument><expr><literal type="number" pos:line="64" pos:column="26">0<pos:position pos:line="64" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="29">"name-only"<pos:position pos:line="64" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="64" pos:column="42">&amp;<pos:position pos:line="64" pos:column="47"/></operator><name><name pos:line="64" pos:column="43">opt<pos:position pos:line="64" pos:column="46"/></name><operator pos:line="64" pos:column="46">.<pos:position pos:line="64" pos:column="47"/></operator><name pos:line="64" pos:column="47">name_only<pos:position pos:line="64" pos:column="56"/></name></name></expr></argument>,
			<argument><expr><call><name pos:line="65" pos:column="25">N_<pos:position pos:line="65" pos:column="27"/></name><argument_list pos:line="65" pos:column="27">(<argument><expr><literal type="string" pos:line="65" pos:column="28">"synonym for --files-with-matches"<pos:position pos:line="65" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="65" pos:column="64"/></argument_list></call></expr>,
		<expr><call><name pos:line="66" pos:column="17">OPT_BOOL<pos:position pos:line="66" pos:column="25"/></name><argument_list pos:line="66" pos:column="25">(<argument><expr><literal type="char" pos:line="66" pos:column="26">'L'<pos:position pos:line="66" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="31">"files-without-match"<pos:position pos:line="66" pos:column="52"/></literal></expr></argument>,
			<argument><expr><operator pos:line="67" pos:column="25">&amp;<pos:position pos:line="67" pos:column="30"/></operator><name><name pos:line="67" pos:column="26">opt<pos:position pos:line="67" pos:column="29"/></name><operator pos:line="67" pos:column="29">.<pos:position pos:line="67" pos:column="30"/></operator><name pos:line="67" pos:column="30">unmatch_name_only<pos:position pos:line="67" pos:column="47"/></name></name></expr></argument>,
			<argument><expr><call><name pos:line="68" pos:column="25">N_<pos:position pos:line="68" pos:column="27"/></name><argument_list pos:line="68" pos:column="27">(<argument><expr><literal type="string" pos:line="68" pos:column="28">"show only the names of files without match"<pos:position pos:line="68" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="68" pos:column="74"/></argument_list></call></expr>,
		<expr><call><name pos:line="69" pos:column="17">OPT_BOOL<pos:position pos:line="69" pos:column="25"/></name><argument_list pos:line="69" pos:column="25">(<argument><expr><literal type="char" pos:line="69" pos:column="26">'z'<pos:position pos:line="69" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="31">"null"<pos:position pos:line="69" pos:column="37"/></literal></expr></argument>, <argument><expr><operator pos:line="69" pos:column="39">&amp;<pos:position pos:line="69" pos:column="44"/></operator><name><name pos:line="69" pos:column="40">opt<pos:position pos:line="69" pos:column="43"/></name><operator pos:line="69" pos:column="43">.<pos:position pos:line="69" pos:column="44"/></operator><name pos:line="69" pos:column="44">null_following_name<pos:position pos:line="69" pos:column="63"/></name></name></expr></argument>,
			<argument><expr><call><name pos:line="70" pos:column="25">N_<pos:position pos:line="70" pos:column="27"/></name><argument_list pos:line="70" pos:column="27">(<argument><expr><literal type="string" pos:line="70" pos:column="28">"print NUL after filenames"<pos:position pos:line="70" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="70" pos:column="57"/></argument_list></call></expr>,
		<expr><call><name pos:line="71" pos:column="17">OPT_BOOL<pos:position pos:line="71" pos:column="25"/></name><argument_list pos:line="71" pos:column="25">(<argument><expr><literal type="char" pos:line="71" pos:column="26">'c'<pos:position pos:line="71" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="31">"count"<pos:position pos:line="71" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="71" pos:column="40">&amp;<pos:position pos:line="71" pos:column="45"/></operator><name><name pos:line="71" pos:column="41">opt<pos:position pos:line="71" pos:column="44"/></name><operator pos:line="71" pos:column="44">.<pos:position pos:line="71" pos:column="45"/></operator><name pos:line="71" pos:column="45">count<pos:position pos:line="71" pos:column="50"/></name></name></expr></argument>,
			<argument><expr><call><name pos:line="72" pos:column="25">N_<pos:position pos:line="72" pos:column="27"/></name><argument_list pos:line="72" pos:column="27">(<argument><expr><literal type="string" pos:line="72" pos:column="28">"show the number of matches instead of matching lines"<pos:position pos:line="72" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="72" pos:column="84"/></argument_list></call></expr>,
		<expr><call><name pos:line="73" pos:column="17">OPT__COLOR<pos:position pos:line="73" pos:column="27"/></name><argument_list pos:line="73" pos:column="27">(<argument><expr><operator pos:line="73" pos:column="28">&amp;<pos:position pos:line="73" pos:column="33"/></operator><name><name pos:line="73" pos:column="29">opt<pos:position pos:line="73" pos:column="32"/></name><operator pos:line="73" pos:column="32">.<pos:position pos:line="73" pos:column="33"/></operator><name pos:line="73" pos:column="33">color<pos:position pos:line="73" pos:column="38"/></name></name></expr></argument>, <argument><expr><call><name pos:line="73" pos:column="40">N_<pos:position pos:line="73" pos:column="42"/></name><argument_list pos:line="73" pos:column="42">(<argument><expr><literal type="string" pos:line="73" pos:column="43">"highlight matches"<pos:position pos:line="73" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="73" pos:column="64"/></argument_list></call></expr>,
		<expr><call><name pos:line="74" pos:column="17">OPT_BOOL<pos:position pos:line="74" pos:column="25"/></name><argument_list pos:line="74" pos:column="25">(<argument><expr><literal type="number" pos:line="74" pos:column="26">0<pos:position pos:line="74" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="29">"break"<pos:position pos:line="74" pos:column="36"/></literal></expr></argument>, <argument><expr><operator pos:line="74" pos:column="38">&amp;<pos:position pos:line="74" pos:column="43"/></operator><name><name pos:line="74" pos:column="39">opt<pos:position pos:line="74" pos:column="42"/></name><operator pos:line="74" pos:column="42">.<pos:position pos:line="74" pos:column="43"/></operator><name pos:line="74" pos:column="43">file_break<pos:position pos:line="74" pos:column="53"/></name></name></expr></argument>,
			<argument><expr><call><name pos:line="75" pos:column="25">N_<pos:position pos:line="75" pos:column="27"/></name><argument_list pos:line="75" pos:column="27">(<argument><expr><literal type="string" pos:line="75" pos:column="28">"print empty line between matches from different files"<pos:position pos:line="75" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="84"/></argument_list></call></expr></argument>)<pos:position pos:line="75" pos:column="85"/></argument_list></call></expr>,
		<expr><call><name pos:line="76" pos:column="17">OPT_BOOL<pos:position pos:line="76" pos:column="25"/></name><argument_list pos:line="76" pos:column="25">(<argument><expr><literal type="number" pos:line="76" pos:column="26">0<pos:position pos:line="76" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="76" pos:column="29">"heading"<pos:position pos:line="76" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="76" pos:column="40">&amp;<pos:position pos:line="76" pos:column="45"/></operator><name><name pos:line="76" pos:column="41">opt<pos:position pos:line="76" pos:column="44"/></name><operator pos:line="76" pos:column="44">.<pos:position pos:line="76" pos:column="45"/></operator><name pos:line="76" pos:column="45">heading<pos:position pos:line="76" pos:column="52"/></name></name></expr></argument>,
			<argument><expr><call><name pos:line="77" pos:column="25">N_<pos:position pos:line="77" pos:column="27"/></name><argument_list pos:line="77" pos:column="27">(<argument><expr><literal type="string" pos:line="77" pos:column="28">"show filename only once above matches from same file"<pos:position pos:line="77" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="77" pos:column="84"/></argument_list></call></expr>,
		<expr><call><name pos:line="78" pos:column="17">OPT_GROUP<pos:position pos:line="78" pos:column="26"/></name><argument_list pos:line="78" pos:column="26">(<argument><expr><literal type="string" pos:line="78" pos:column="27">""<pos:position pos:line="78" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="30"/></argument_list></call></expr>,
		<expr><call><name pos:line="79" pos:column="17">OPT_CALLBACK<pos:position pos:line="79" pos:column="29"/></name><argument_list pos:line="79" pos:column="29">(<argument><expr><literal type="char" pos:line="79" pos:column="30">'C'<pos:position pos:line="79" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="35">"context"<pos:position pos:line="79" pos:column="44"/></literal></expr></argument>, <argument><expr><operator pos:line="79" pos:column="46">&amp;<pos:position pos:line="79" pos:column="51"/></operator><name pos:line="79" pos:column="47">opt<pos:position pos:line="79" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="79" pos:column="52">N_<pos:position pos:line="79" pos:column="54"/></name><argument_list pos:line="79" pos:column="54">(<argument><expr><literal type="string" pos:line="79" pos:column="55">"n"<pos:position pos:line="79" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="59"/></argument_list></call></expr></argument>,
			<argument><expr><call><name pos:line="80" pos:column="25">N_<pos:position pos:line="80" pos:column="27"/></name><argument_list pos:line="80" pos:column="27">(<argument><expr><literal type="string" pos:line="80" pos:column="28">"show &lt;n&gt; context lines before and after matches"<pos:position pos:line="80" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="78"/></argument_list></call></expr></argument>,
			<argument><expr><name pos:line="81" pos:column="25">context_callback<pos:position pos:line="81" pos:column="41"/></name></expr></argument>)<pos:position pos:line="81" pos:column="42"/></argument_list></call></expr>,
		<expr><call><name pos:line="82" pos:column="17">OPT_INTEGER<pos:position pos:line="82" pos:column="28"/></name><argument_list pos:line="82" pos:column="28">(<argument><expr><literal type="char" pos:line="82" pos:column="29">'B'<pos:position pos:line="82" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="82" pos:column="34">"before-context"<pos:position pos:line="82" pos:column="50"/></literal></expr></argument>, <argument><expr><operator pos:line="82" pos:column="52">&amp;<pos:position pos:line="82" pos:column="57"/></operator><name><name pos:line="82" pos:column="53">opt<pos:position pos:line="82" pos:column="56"/></name><operator pos:line="82" pos:column="56">.<pos:position pos:line="82" pos:column="57"/></operator><name pos:line="82" pos:column="57">pre_context<pos:position pos:line="82" pos:column="68"/></name></name></expr></argument>,
			<argument><expr><call><name pos:line="83" pos:column="25">N_<pos:position pos:line="83" pos:column="27"/></name><argument_list pos:line="83" pos:column="27">(<argument><expr><literal type="string" pos:line="83" pos:column="28">"show &lt;n&gt; context lines before matches"<pos:position pos:line="83" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="83" pos:column="69"/></argument_list></call></expr>,
		<expr><call><name pos:line="84" pos:column="17">OPT_INTEGER<pos:position pos:line="84" pos:column="28"/></name><argument_list pos:line="84" pos:column="28">(<argument><expr><literal type="char" pos:line="84" pos:column="29">'A'<pos:position pos:line="84" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="84" pos:column="34">"after-context"<pos:position pos:line="84" pos:column="49"/></literal></expr></argument>, <argument><expr><operator pos:line="84" pos:column="51">&amp;<pos:position pos:line="84" pos:column="56"/></operator><name><name pos:line="84" pos:column="52">opt<pos:position pos:line="84" pos:column="55"/></name><operator pos:line="84" pos:column="55">.<pos:position pos:line="84" pos:column="56"/></operator><name pos:line="84" pos:column="56">post_context<pos:position pos:line="84" pos:column="68"/></name></name></expr></argument>,
			<argument><expr><call><name pos:line="85" pos:column="25">N_<pos:position pos:line="85" pos:column="27"/></name><argument_list pos:line="85" pos:column="27">(<argument><expr><literal type="string" pos:line="85" pos:column="28">"show &lt;n&gt; context lines after matches"<pos:position pos:line="85" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="85" pos:column="68"/></argument_list></call></expr>,
		<expr><call><name pos:line="86" pos:column="17">OPT_NUMBER_CALLBACK<pos:position pos:line="86" pos:column="36"/></name><argument_list pos:line="86" pos:column="36">(<argument><expr><operator pos:line="86" pos:column="37">&amp;<pos:position pos:line="86" pos:column="42"/></operator><name pos:line="86" pos:column="38">opt<pos:position pos:line="86" pos:column="41"/></name></expr></argument>, <argument><expr><call><name pos:line="86" pos:column="43">N_<pos:position pos:line="86" pos:column="45"/></name><argument_list pos:line="86" pos:column="45">(<argument><expr><literal type="string" pos:line="86" pos:column="46">"shortcut for -C NUM"<pos:position pos:line="86" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="68"/></argument_list></call></expr></argument>,
			<argument><expr><name pos:line="87" pos:column="25">context_callback<pos:position pos:line="87" pos:column="41"/></name></expr></argument>)<pos:position pos:line="87" pos:column="42"/></argument_list></call></expr>,
		<expr><call><name pos:line="88" pos:column="17">OPT_BOOL<pos:position pos:line="88" pos:column="25"/></name><argument_list pos:line="88" pos:column="25">(<argument><expr><literal type="char" pos:line="88" pos:column="26">'p'<pos:position pos:line="88" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="88" pos:column="31">"show-function"<pos:position pos:line="88" pos:column="46"/></literal></expr></argument>, <argument><expr><operator pos:line="88" pos:column="48">&amp;<pos:position pos:line="88" pos:column="53"/></operator><name><name pos:line="88" pos:column="49">opt<pos:position pos:line="88" pos:column="52"/></name><operator pos:line="88" pos:column="52">.<pos:position pos:line="88" pos:column="53"/></operator><name pos:line="88" pos:column="53">funcname<pos:position pos:line="88" pos:column="61"/></name></name></expr></argument>,
			<argument><expr><call><name pos:line="89" pos:column="25">N_<pos:position pos:line="89" pos:column="27"/></name><argument_list pos:line="89" pos:column="27">(<argument><expr><literal type="string" pos:line="89" pos:column="28">"show a line with the function name before matches"<pos:position pos:line="89" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="89" pos:column="81"/></argument_list></call></expr>,
		<expr><call><name pos:line="90" pos:column="17">OPT_BOOL<pos:position pos:line="90" pos:column="25"/></name><argument_list pos:line="90" pos:column="25">(<argument><expr><literal type="char" pos:line="90" pos:column="26">'W'<pos:position pos:line="90" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="90" pos:column="31">"function-context"<pos:position pos:line="90" pos:column="49"/></literal></expr></argument>, <argument><expr><operator pos:line="90" pos:column="51">&amp;<pos:position pos:line="90" pos:column="56"/></operator><name><name pos:line="90" pos:column="52">opt<pos:position pos:line="90" pos:column="55"/></name><operator pos:line="90" pos:column="55">.<pos:position pos:line="90" pos:column="56"/></operator><name pos:line="90" pos:column="56">funcbody<pos:position pos:line="90" pos:column="64"/></name></name></expr></argument>,
			<argument><expr><call><name pos:line="91" pos:column="25">N_<pos:position pos:line="91" pos:column="27"/></name><argument_list pos:line="91" pos:column="27">(<argument><expr><literal type="string" pos:line="91" pos:column="28">"show the surrounding function"<pos:position pos:line="91" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="91" pos:column="61"/></argument_list></call></expr>,
		<expr><call><name pos:line="92" pos:column="17">OPT_GROUP<pos:position pos:line="92" pos:column="26"/></name><argument_list pos:line="92" pos:column="26">(<argument><expr><literal type="string" pos:line="92" pos:column="27">""<pos:position pos:line="92" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="92" pos:column="30"/></argument_list></call></expr>,
		<expr><call><name pos:line="93" pos:column="17">OPT_CALLBACK<pos:position pos:line="93" pos:column="29"/></name><argument_list pos:line="93" pos:column="29">(<argument><expr><literal type="char" pos:line="93" pos:column="30">'f'<pos:position pos:line="93" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="93" pos:column="35">NULL<pos:position pos:line="93" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="93" pos:column="41">&amp;<pos:position pos:line="93" pos:column="46"/></operator><name pos:line="93" pos:column="42">opt<pos:position pos:line="93" pos:column="45"/></name></expr></argument>, <argument><expr><call><name pos:line="93" pos:column="47">N_<pos:position pos:line="93" pos:column="49"/></name><argument_list pos:line="93" pos:column="49">(<argument><expr><literal type="string" pos:line="93" pos:column="50">"file"<pos:position pos:line="93" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="93" pos:column="57"/></argument_list></call></expr></argument>,
			<argument><expr><call><name pos:line="94" pos:column="25">N_<pos:position pos:line="94" pos:column="27"/></name><argument_list pos:line="94" pos:column="27">(<argument><expr><literal type="string" pos:line="94" pos:column="28">"read patterns from file"<pos:position pos:line="94" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="94" pos:column="54"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="94" pos:column="56">file_callback<pos:position pos:line="94" pos:column="69"/></name></expr></argument>)<pos:position pos:line="94" pos:column="70"/></argument_list></call></expr>,
		<expr><block pos:line="95" pos:column="17">{ <expr><name pos:line="95" pos:column="19">OPTION_CALLBACK<pos:position pos:line="95" pos:column="34"/></name></expr>, <expr><literal type="char" pos:line="95" pos:column="36">'e'<pos:position pos:line="95" pos:column="39"/></literal></expr>, <expr><name pos:line="95" pos:column="41">NULL<pos:position pos:line="95" pos:column="45"/></name></expr>, <expr><operator pos:line="95" pos:column="47">&amp;<pos:position pos:line="95" pos:column="52"/></operator><name pos:line="95" pos:column="48">opt<pos:position pos:line="95" pos:column="51"/></name></expr>, <expr><call><name pos:line="95" pos:column="53">N_<pos:position pos:line="95" pos:column="55"/></name><argument_list pos:line="95" pos:column="55">(<argument><expr><literal type="string" pos:line="95" pos:column="56">"pattern"<pos:position pos:line="95" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="66"/></argument_list></call></expr>,
			<expr><call><name pos:line="96" pos:column="25">N_<pos:position pos:line="96" pos:column="27"/></name><argument_list pos:line="96" pos:column="27">(<argument><expr><literal type="string" pos:line="96" pos:column="28">"match &lt;pattern&gt;"<pos:position pos:line="96" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="96" pos:column="46"/></argument_list></call></expr>, <expr><name pos:line="96" pos:column="48">PARSE_OPT_NONEG<pos:position pos:line="96" pos:column="63"/></name></expr>, <expr><name pos:line="96" pos:column="65">pattern_callback<pos:position pos:line="96" pos:column="81"/></name></expr> }<pos:position pos:line="96" pos:column="83"/></block></expr>,
		<expr><block pos:line="97" pos:column="17">{ <expr><name pos:line="97" pos:column="19">OPTION_CALLBACK<pos:position pos:line="97" pos:column="34"/></name></expr>, <expr><literal type="number" pos:line="97" pos:column="36">0<pos:position pos:line="97" pos:column="37"/></literal></expr>, <expr><literal type="string" pos:line="97" pos:column="39">"and"<pos:position pos:line="97" pos:column="44"/></literal></expr>, <expr><operator pos:line="97" pos:column="46">&amp;<pos:position pos:line="97" pos:column="51"/></operator><name pos:line="97" pos:column="47">opt<pos:position pos:line="97" pos:column="50"/></name></expr>, <expr><name pos:line="97" pos:column="52">NULL<pos:position pos:line="97" pos:column="56"/></name></expr>,
		  <expr><call><name pos:line="98" pos:column="19">N_<pos:position pos:line="98" pos:column="21"/></name><argument_list pos:line="98" pos:column="21">(<argument><expr><literal type="string" pos:line="98" pos:column="22">"combine patterns specified with -e"<pos:position pos:line="98" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="98" pos:column="59"/></argument_list></call></expr>,
		  <expr><name pos:line="99" pos:column="19">PARSE_OPT_NOARG<pos:position pos:line="99" pos:column="34"/></name> <operator pos:line="99" pos:column="35">|<pos:position pos:line="99" pos:column="36"/></operator> <name pos:line="99" pos:column="37">PARSE_OPT_NONEG<pos:position pos:line="99" pos:column="52"/></name></expr>, <expr><name pos:line="99" pos:column="54">and_callback<pos:position pos:line="99" pos:column="66"/></name></expr> }<pos:position pos:line="99" pos:column="68"/></block></expr>,
		<expr><call><name pos:line="100" pos:column="17">OPT_BOOL<pos:position pos:line="100" pos:column="25"/></name><argument_list pos:line="100" pos:column="25">(<argument><expr><literal type="number" pos:line="100" pos:column="26">0<pos:position pos:line="100" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="100" pos:column="29">"or"<pos:position pos:line="100" pos:column="33"/></literal></expr></argument>, <argument><expr><operator pos:line="100" pos:column="35">&amp;<pos:position pos:line="100" pos:column="40"/></operator><name pos:line="100" pos:column="36">dummy<pos:position pos:line="100" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="100" pos:column="43">""<pos:position pos:line="100" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="100" pos:column="46"/></argument_list></call></expr>,
		<expr><block pos:line="101" pos:column="17">{ <expr><name pos:line="101" pos:column="19">OPTION_CALLBACK<pos:position pos:line="101" pos:column="34"/></name></expr>, <expr><literal type="number" pos:line="101" pos:column="36">0<pos:position pos:line="101" pos:column="37"/></literal></expr>, <expr><literal type="string" pos:line="101" pos:column="39">"not"<pos:position pos:line="101" pos:column="44"/></literal></expr>, <expr><operator pos:line="101" pos:column="46">&amp;<pos:position pos:line="101" pos:column="51"/></operator><name pos:line="101" pos:column="47">opt<pos:position pos:line="101" pos:column="50"/></name></expr>, <expr><name pos:line="101" pos:column="52">NULL<pos:position pos:line="101" pos:column="56"/></name></expr>, <expr><literal type="string" pos:line="101" pos:column="58">""<pos:position pos:line="101" pos:column="60"/></literal></expr>,
		  <expr><name pos:line="102" pos:column="19">PARSE_OPT_NOARG<pos:position pos:line="102" pos:column="34"/></name> <operator pos:line="102" pos:column="35">|<pos:position pos:line="102" pos:column="36"/></operator> <name pos:line="102" pos:column="37">PARSE_OPT_NONEG<pos:position pos:line="102" pos:column="52"/></name></expr>, <expr><name pos:line="102" pos:column="54">not_callback<pos:position pos:line="102" pos:column="66"/></name></expr> }<pos:position pos:line="102" pos:column="68"/></block></expr>,
		<expr><block pos:line="103" pos:column="17">{ <expr><name pos:line="103" pos:column="19">OPTION_CALLBACK<pos:position pos:line="103" pos:column="34"/></name></expr>, <expr><literal type="char" pos:line="103" pos:column="36">'('<pos:position pos:line="103" pos:column="39"/></literal></expr>, <expr><name pos:line="103" pos:column="41">NULL<pos:position pos:line="103" pos:column="45"/></name></expr>, <expr><operator pos:line="103" pos:column="47">&amp;<pos:position pos:line="103" pos:column="52"/></operator><name pos:line="103" pos:column="48">opt<pos:position pos:line="103" pos:column="51"/></name></expr>, <expr><name pos:line="103" pos:column="53">NULL<pos:position pos:line="103" pos:column="57"/></name></expr>, <expr><literal type="string" pos:line="103" pos:column="59">""<pos:position pos:line="103" pos:column="61"/></literal></expr>,
		  <expr><name pos:line="104" pos:column="19">PARSE_OPT_NOARG<pos:position pos:line="104" pos:column="34"/></name> <operator pos:line="104" pos:column="35">|<pos:position pos:line="104" pos:column="36"/></operator> <name pos:line="104" pos:column="37">PARSE_OPT_NONEG<pos:position pos:line="104" pos:column="52"/></name> <operator pos:line="104" pos:column="53">|<pos:position pos:line="104" pos:column="54"/></operator> <name pos:line="104" pos:column="55">PARSE_OPT_NODASH<pos:position pos:line="104" pos:column="71"/></name></expr>,
		  <expr><name pos:line="105" pos:column="19">open_callback<pos:position pos:line="105" pos:column="32"/></name></expr> }<pos:position pos:line="105" pos:column="34"/></block></expr>,
		<expr><block pos:line="106" pos:column="17">{ <expr><name pos:line="106" pos:column="19">OPTION_CALLBACK<pos:position pos:line="106" pos:column="34"/></name></expr>, <expr><literal type="char" pos:line="106" pos:column="36">')'<pos:position pos:line="106" pos:column="39"/></literal></expr>, <expr><name pos:line="106" pos:column="41">NULL<pos:position pos:line="106" pos:column="45"/></name></expr>, <expr><operator pos:line="106" pos:column="47">&amp;<pos:position pos:line="106" pos:column="52"/></operator><name pos:line="106" pos:column="48">opt<pos:position pos:line="106" pos:column="51"/></name></expr>, <expr><name pos:line="106" pos:column="53">NULL<pos:position pos:line="106" pos:column="57"/></name></expr>, <expr><literal type="string" pos:line="106" pos:column="59">""<pos:position pos:line="106" pos:column="61"/></literal></expr>,
		  <expr><name pos:line="107" pos:column="19">PARSE_OPT_NOARG<pos:position pos:line="107" pos:column="34"/></name> <operator pos:line="107" pos:column="35">|<pos:position pos:line="107" pos:column="36"/></operator> <name pos:line="107" pos:column="37">PARSE_OPT_NONEG<pos:position pos:line="107" pos:column="52"/></name> <operator pos:line="107" pos:column="53">|<pos:position pos:line="107" pos:column="54"/></operator> <name pos:line="107" pos:column="55">PARSE_OPT_NODASH<pos:position pos:line="107" pos:column="71"/></name></expr>,
		  <expr><name pos:line="108" pos:column="19">close_callback<pos:position pos:line="108" pos:column="33"/></name></expr> }<pos:position pos:line="108" pos:column="35"/></block></expr>,
		<expr><call><name pos:line="109" pos:column="17">OPT__QUIET<pos:position pos:line="109" pos:column="27"/></name><argument_list pos:line="109" pos:column="27">(<argument><expr><operator pos:line="109" pos:column="28">&amp;<pos:position pos:line="109" pos:column="33"/></operator><name><name pos:line="109" pos:column="29">opt<pos:position pos:line="109" pos:column="32"/></name><operator pos:line="109" pos:column="32">.<pos:position pos:line="109" pos:column="33"/></operator><name pos:line="109" pos:column="33">status_only<pos:position pos:line="109" pos:column="44"/></name></name></expr></argument>,
			   <argument><expr><call><name pos:line="110" pos:column="28">N_<pos:position pos:line="110" pos:column="30"/></name><argument_list pos:line="110" pos:column="30">(<argument><expr><literal type="string" pos:line="110" pos:column="31">"indicate hit with exit status without output"<pos:position pos:line="110" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="110" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="110" pos:column="79"/></argument_list></call></expr>,
		<expr><call><name pos:line="111" pos:column="17">OPT_BOOL<pos:position pos:line="111" pos:column="25"/></name><argument_list pos:line="111" pos:column="25">(<argument><expr><literal type="number" pos:line="111" pos:column="26">0<pos:position pos:line="111" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="111" pos:column="29">"all-match"<pos:position pos:line="111" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="111" pos:column="42">&amp;<pos:position pos:line="111" pos:column="47"/></operator><name><name pos:line="111" pos:column="43">opt<pos:position pos:line="111" pos:column="46"/></name><operator pos:line="111" pos:column="46">.<pos:position pos:line="111" pos:column="47"/></operator><name pos:line="111" pos:column="47">all_match<pos:position pos:line="111" pos:column="56"/></name></name></expr></argument>,
			<argument><expr><call><name pos:line="112" pos:column="25">N_<pos:position pos:line="112" pos:column="27"/></name><argument_list pos:line="112" pos:column="27">(<argument><expr><literal type="string" pos:line="112" pos:column="28">"show only matches from files that match all patterns"<pos:position pos:line="112" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="112" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="112" pos:column="84"/></argument_list></call></expr>,
		<expr><block pos:line="113" pos:column="17">{ <expr><name pos:line="113" pos:column="19">OPTION_SET_INT<pos:position pos:line="113" pos:column="33"/></name></expr>, <expr><literal type="number" pos:line="113" pos:column="35">0<pos:position pos:line="113" pos:column="36"/></literal></expr>, <expr><literal type="string" pos:line="113" pos:column="38">"debug"<pos:position pos:line="113" pos:column="45"/></literal></expr>, <expr><operator pos:line="113" pos:column="47">&amp;<pos:position pos:line="113" pos:column="52"/></operator><name><name pos:line="113" pos:column="48">opt<pos:position pos:line="113" pos:column="51"/></name><operator pos:line="113" pos:column="51">.<pos:position pos:line="113" pos:column="52"/></operator><name pos:line="113" pos:column="52">debug<pos:position pos:line="113" pos:column="57"/></name></name></expr>, <expr><name pos:line="113" pos:column="59">NULL<pos:position pos:line="113" pos:column="63"/></name></expr>,
		  <expr><call><name pos:line="114" pos:column="19">N_<pos:position pos:line="114" pos:column="21"/></name><argument_list pos:line="114" pos:column="21">(<argument><expr><literal type="string" pos:line="114" pos:column="22">"show parse tree for grep expression"<pos:position pos:line="114" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="114" pos:column="60"/></argument_list></call></expr>,
		  <expr><name pos:line="115" pos:column="19">PARSE_OPT_NOARG<pos:position pos:line="115" pos:column="34"/></name> <operator pos:line="115" pos:column="35">|<pos:position pos:line="115" pos:column="36"/></operator> <name pos:line="115" pos:column="37">PARSE_OPT_HIDDEN<pos:position pos:line="115" pos:column="53"/></name></expr>, <expr><name pos:line="115" pos:column="55">NULL<pos:position pos:line="115" pos:column="59"/></name></expr>, <expr><literal type="number" pos:line="115" pos:column="61">1<pos:position pos:line="115" pos:column="62"/></literal></expr> }<pos:position pos:line="115" pos:column="64"/></block></expr>,
		<expr><call><name pos:line="116" pos:column="17">OPT_GROUP<pos:position pos:line="116" pos:column="26"/></name><argument_list pos:line="116" pos:column="26">(<argument><expr><literal type="string" pos:line="116" pos:column="27">""<pos:position pos:line="116" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="116" pos:column="30"/></argument_list></call></expr>,
		<expr><block pos:line="117" pos:column="17">{ <expr><name pos:line="117" pos:column="19">OPTION_STRING<pos:position pos:line="117" pos:column="32"/></name></expr>, <expr><literal type="char" pos:line="117" pos:column="34">'O'<pos:position pos:line="117" pos:column="37"/></literal></expr>, <expr><literal type="string" pos:line="117" pos:column="39">"open-files-in-pager"<pos:position pos:line="117" pos:column="60"/></literal></expr>, <expr><operator pos:line="117" pos:column="62">&amp;<pos:position pos:line="117" pos:column="67"/></operator><name pos:line="117" pos:column="63">show_in_pager<pos:position pos:line="117" pos:column="76"/></name></expr>,
			<expr><call><name pos:line="118" pos:column="25">N_<pos:position pos:line="118" pos:column="27"/></name><argument_list pos:line="118" pos:column="27">(<argument><expr><literal type="string" pos:line="118" pos:column="28">"pager"<pos:position pos:line="118" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="118" pos:column="36"/></argument_list></call></expr>, <expr><call><name pos:line="118" pos:column="38">N_<pos:position pos:line="118" pos:column="40"/></name><argument_list pos:line="118" pos:column="40">(<argument><expr><literal type="string" pos:line="118" pos:column="41">"show matching files in the pager"<pos:position pos:line="118" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="118" pos:column="76"/></argument_list></call></expr>,
			<expr><name pos:line="119" pos:column="25">PARSE_OPT_OPTARG<pos:position pos:line="119" pos:column="41"/></name></expr>, <expr><name pos:line="119" pos:column="43">NULL<pos:position pos:line="119" pos:column="47"/></name></expr>, <expr><operator pos:line="119" pos:column="49">(<pos:position pos:line="119" pos:column="50"/></operator><name pos:line="119" pos:column="50">intptr_t<pos:position pos:line="119" pos:column="58"/></name><operator pos:line="119" pos:column="58">)<pos:position pos:line="119" pos:column="59"/></operator><name pos:line="119" pos:column="59">default_pager<pos:position pos:line="119" pos:column="72"/></name></expr> }<pos:position pos:line="119" pos:column="74"/></block></expr>,
		<expr><call><name pos:line="120" pos:column="17">OPT_BOOL<pos:position pos:line="120" pos:column="25"/></name><argument_list pos:line="120" pos:column="25">(<argument><expr><literal type="number" pos:line="120" pos:column="26">0<pos:position pos:line="120" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="120" pos:column="29">"ext-grep"<pos:position pos:line="120" pos:column="39"/></literal></expr></argument>, <argument><expr><operator pos:line="120" pos:column="41">&amp;<pos:position pos:line="120" pos:column="46"/></operator><name pos:line="120" pos:column="42">external_grep_allowed__ignored<pos:position pos:line="120" pos:column="72"/></name></expr></argument>,
			 <argument><expr><call><name pos:line="121" pos:column="26">N_<pos:position pos:line="121" pos:column="28"/></name><argument_list pos:line="121" pos:column="28">(<argument><expr><literal type="string" pos:line="121" pos:column="29">"allow calling of grep(1) (ignored by this build)"<pos:position pos:line="121" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="121" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="121" pos:column="81"/></argument_list></call></expr>,
		<expr><block pos:line="122" pos:column="17">{ <expr><name pos:line="122" pos:column="19">OPTION_CALLBACK<pos:position pos:line="122" pos:column="34"/></name></expr>, <expr><literal type="number" pos:line="122" pos:column="36">0<pos:position pos:line="122" pos:column="37"/></literal></expr>, <expr><literal type="string" pos:line="122" pos:column="39">"help-all"<pos:position pos:line="122" pos:column="49"/></literal></expr>, <expr><name pos:line="122" pos:column="51">NULL<pos:position pos:line="122" pos:column="55"/></name></expr>, <expr><name pos:line="122" pos:column="57">NULL<pos:position pos:line="122" pos:column="61"/></name></expr>, <expr><call><name pos:line="122" pos:column="63">N_<pos:position pos:line="122" pos:column="65"/></name><argument_list pos:line="122" pos:column="65">(<argument><expr><literal type="string" pos:line="122" pos:column="66">"show usage"<pos:position pos:line="122" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="122" pos:column="79"/></argument_list></call></expr>,
		  <expr><name pos:line="123" pos:column="19">PARSE_OPT_HIDDEN<pos:position pos:line="123" pos:column="35"/></name> <operator pos:line="123" pos:column="36">|<pos:position pos:line="123" pos:column="37"/></operator> <name pos:line="123" pos:column="38">PARSE_OPT_NOARG<pos:position pos:line="123" pos:column="53"/></name></expr>, <expr><name pos:line="123" pos:column="55">help_callback<pos:position pos:line="123" pos:column="68"/></name></expr> }<pos:position pos:line="123" pos:column="70"/></block></expr>,
		<macro><name pos:line="124" pos:column="17">OPT_END<pos:position pos:line="124" pos:column="24"/></name><argument_list pos:line="124" pos:column="24">()<pos:position pos:line="124" pos:column="26"/></argument_list></macro>
	}<pos:position pos:line="125" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="125" pos:column="11"/></decl_stmt>

	<comment type="block" pos:line="127" pos:column="9">/*
	 * 'git grep -h', unlike 'git grep -h &lt;pattern&gt;', is a request
	 * to show usage information and exit.
	 */</comment>
	<if pos:line="131" pos:column="9">if <condition pos:line="131" pos:column="12">(<expr><name pos:line="131" pos:column="13">argc<pos:position pos:line="131" pos:column="17"/></name> <operator pos:line="131" pos:column="18">==<pos:position pos:line="131" pos:column="20"/></operator> <literal type="number" pos:line="131" pos:column="21">2<pos:position pos:line="131" pos:column="22"/></literal> <operator pos:line="131" pos:column="23">&amp;&amp;<pos:position pos:line="131" pos:column="33"/></operator> <operator pos:line="131" pos:column="26">!<pos:position pos:line="131" pos:column="27"/></operator><call><name pos:line="131" pos:column="27">strcmp<pos:position pos:line="131" pos:column="33"/></name><argument_list pos:line="131" pos:column="33">(<argument><expr><name><name pos:line="131" pos:column="34">argv<pos:position pos:line="131" pos:column="38"/></name><index pos:line="131" pos:column="38">[<expr><literal type="number" pos:line="131" pos:column="39">1<pos:position pos:line="131" pos:column="40"/></literal></expr>]<pos:position pos:line="131" pos:column="41"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="131" pos:column="43">"-h"<pos:position pos:line="131" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="131" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="131" pos:column="49"/></condition><then pos:line="131" pos:column="49">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="132" pos:column="17">usage_with_options<pos:position pos:line="132" pos:column="35"/></name><argument_list pos:line="132" pos:column="35">(<argument><expr><name pos:line="132" pos:column="36">grep_usage<pos:position pos:line="132" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="132" pos:column="48">options<pos:position pos:line="132" pos:column="55"/></name></expr></argument>)<pos:position pos:line="132" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="57"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="134" pos:column="9">init_grep_defaults<pos:position pos:line="134" pos:column="27"/></name><argument_list pos:line="134" pos:column="27">()<pos:position pos:line="134" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="135" pos:column="9">git_config<pos:position pos:line="135" pos:column="19"/></name><argument_list pos:line="135" pos:column="19">(<argument><expr><name pos:line="135" pos:column="20">grep_cmd_config<pos:position pos:line="135" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="135" pos:column="37">NULL<pos:position pos:line="135" pos:column="41"/></name></expr></argument>)<pos:position pos:line="135" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="136" pos:column="9">grep_init<pos:position pos:line="136" pos:column="18"/></name><argument_list pos:line="136" pos:column="18">(<argument><expr><operator pos:line="136" pos:column="19">&amp;<pos:position pos:line="136" pos:column="24"/></operator><name pos:line="136" pos:column="20">opt<pos:position pos:line="136" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="136" pos:column="25">prefix<pos:position pos:line="136" pos:column="31"/></name></expr></argument>)<pos:position pos:line="136" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="33"/></expr_stmt>

	<comment type="block" pos:line="138" pos:column="9">/*
	 * If there is no -- then the paths must exist in the working
	 * tree.  If there is no explicit pattern specified with -e or
	 * -f, we take the first unrecognized non option to be the
	 * pattern, but then what follows it must be zero or more
	 * valid refs up to the -- (if exists), and then existing
	 * paths.  If there is an explicit pattern, then the first
	 * unrecognized non option is the beginning of the refs list
	 * that continues up to the -- (if exists), and then paths.
	 */</comment>
	<expr_stmt><expr><name pos:line="148" pos:column="9">argc<pos:position pos:line="148" pos:column="13"/></name> <operator pos:line="148" pos:column="14">=<pos:position pos:line="148" pos:column="15"/></operator> <call><name pos:line="148" pos:column="16">parse_options<pos:position pos:line="148" pos:column="29"/></name><argument_list pos:line="148" pos:column="29">(<argument><expr><name pos:line="148" pos:column="30">argc<pos:position pos:line="148" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="148" pos:column="36">argv<pos:position pos:line="148" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="148" pos:column="42">prefix<pos:position pos:line="148" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="148" pos:column="50">options<pos:position pos:line="148" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="148" pos:column="59">grep_usage<pos:position pos:line="148" pos:column="69"/></name></expr></argument>,
			     <argument><expr><name pos:line="149" pos:column="30">PARSE_OPT_KEEP_DASHDASH<pos:position pos:line="149" pos:column="53"/></name> <operator pos:line="149" pos:column="54">|<pos:position pos:line="149" pos:column="55"/></operator>
			     <name pos:line="150" pos:column="30">PARSE_OPT_STOP_AT_NON_OPTION<pos:position pos:line="150" pos:column="58"/></name> <operator pos:line="150" pos:column="59">|<pos:position pos:line="150" pos:column="60"/></operator>
			     <name pos:line="151" pos:column="30">PARSE_OPT_NO_INTERNAL_HELP<pos:position pos:line="151" pos:column="56"/></name></expr></argument>)<pos:position pos:line="151" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="58"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="152" pos:column="9">grep_commit_pattern_type<pos:position pos:line="152" pos:column="33"/></name><argument_list pos:line="152" pos:column="33">(<argument><expr><name pos:line="152" pos:column="34">pattern_type_arg<pos:position pos:line="152" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="152" pos:column="52">&amp;<pos:position pos:line="152" pos:column="57"/></operator><name pos:line="152" pos:column="53">opt<pos:position pos:line="152" pos:column="56"/></name></expr></argument>)<pos:position pos:line="152" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="58"/></expr_stmt>

	<if pos:line="154" pos:column="9">if <condition pos:line="154" pos:column="12">(<expr><name pos:line="154" pos:column="13">use_index<pos:position pos:line="154" pos:column="22"/></name> <operator pos:line="154" pos:column="23">&amp;&amp;<pos:position pos:line="154" pos:column="33"/></operator> <operator pos:line="154" pos:column="26">!<pos:position pos:line="154" pos:column="27"/></operator><name><name pos:line="154" pos:column="27">startup_info<pos:position pos:line="154" pos:column="39"/></name><operator pos:line="154" pos:column="39">-&gt;<pos:position pos:line="154" pos:column="44"/></operator><name pos:line="154" pos:column="41">have_repository<pos:position pos:line="154" pos:column="56"/></name></name></expr>)<pos:position pos:line="154" pos:column="57"/></condition><then pos:line="154" pos:column="57">
		<comment type="block" pos:line="155" pos:column="17">/* die the same way as if we did it at the beginning */</comment>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="156" pos:column="17">setup_git_directory<pos:position pos:line="156" pos:column="36"/></name><argument_list pos:line="156" pos:column="36">()<pos:position pos:line="156" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="39"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="158" pos:column="9">/*
	 * skip a -- separator; we know it cannot be
	 * separating revisions from pathnames if
	 * we haven't even had any patterns yet
	 */</comment>
	<if pos:line="163" pos:column="9">if <condition pos:line="163" pos:column="12">(<expr><name pos:line="163" pos:column="13">argc<pos:position pos:line="163" pos:column="17"/></name> <operator pos:line="163" pos:column="18">&gt;<pos:position pos:line="163" pos:column="22"/></operator> <literal type="number" pos:line="163" pos:column="20">0<pos:position pos:line="163" pos:column="21"/></literal> <operator pos:line="163" pos:column="22">&amp;&amp;<pos:position pos:line="163" pos:column="32"/></operator> <operator pos:line="163" pos:column="25">!<pos:position pos:line="163" pos:column="26"/></operator><name><name pos:line="163" pos:column="26">opt<pos:position pos:line="163" pos:column="29"/></name><operator pos:line="163" pos:column="29">.<pos:position pos:line="163" pos:column="30"/></operator><name pos:line="163" pos:column="30">pattern_list<pos:position pos:line="163" pos:column="42"/></name></name> <operator pos:line="163" pos:column="43">&amp;&amp;<pos:position pos:line="163" pos:column="53"/></operator> <operator pos:line="163" pos:column="46">!<pos:position pos:line="163" pos:column="47"/></operator><call><name pos:line="163" pos:column="47">strcmp<pos:position pos:line="163" pos:column="53"/></name><argument_list pos:line="163" pos:column="53">(<argument><expr><name><name pos:line="163" pos:column="54">argv<pos:position pos:line="163" pos:column="58"/></name><index pos:line="163" pos:column="58">[<expr><literal type="number" pos:line="163" pos:column="59">0<pos:position pos:line="163" pos:column="60"/></literal></expr>]<pos:position pos:line="163" pos:column="61"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="163" pos:column="63">"--"<pos:position pos:line="163" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="163" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="163" pos:column="69"/></condition><then pos:line="163" pos:column="69"> <block pos:line="163" pos:column="70">{
		<expr_stmt><expr><name pos:line="164" pos:column="17">argv<pos:position pos:line="164" pos:column="21"/></name><operator pos:line="164" pos:column="21">++<pos:position pos:line="164" pos:column="23"/></operator></expr>;<pos:position pos:line="164" pos:column="24"/></expr_stmt>
		<expr_stmt><expr><name pos:line="165" pos:column="17">argc<pos:position pos:line="165" pos:column="21"/></name><operator pos:line="165" pos:column="21">--<pos:position pos:line="165" pos:column="23"/></operator></expr>;<pos:position pos:line="165" pos:column="24"/></expr_stmt>
	}<pos:position pos:line="166" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="168" pos:column="9">/* First unrecognized non-option token */</comment>
	<if pos:line="169" pos:column="9">if <condition pos:line="169" pos:column="12">(<expr><name pos:line="169" pos:column="13">argc<pos:position pos:line="169" pos:column="17"/></name> <operator pos:line="169" pos:column="18">&gt;<pos:position pos:line="169" pos:column="22"/></operator> <literal type="number" pos:line="169" pos:column="20">0<pos:position pos:line="169" pos:column="21"/></literal> <operator pos:line="169" pos:column="22">&amp;&amp;<pos:position pos:line="169" pos:column="32"/></operator> <operator pos:line="169" pos:column="25">!<pos:position pos:line="169" pos:column="26"/></operator><name><name pos:line="169" pos:column="26">opt<pos:position pos:line="169" pos:column="29"/></name><operator pos:line="169" pos:column="29">.<pos:position pos:line="169" pos:column="30"/></operator><name pos:line="169" pos:column="30">pattern_list<pos:position pos:line="169" pos:column="42"/></name></name></expr>)<pos:position pos:line="169" pos:column="43"/></condition><then pos:line="169" pos:column="43"> <block pos:line="169" pos:column="44">{
		<expr_stmt><expr><call><name pos:line="170" pos:column="17">append_grep_pattern<pos:position pos:line="170" pos:column="36"/></name><argument_list pos:line="170" pos:column="36">(<argument><expr><operator pos:line="170" pos:column="37">&amp;<pos:position pos:line="170" pos:column="42"/></operator><name pos:line="170" pos:column="38">opt<pos:position pos:line="170" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="170" pos:column="43">argv<pos:position pos:line="170" pos:column="47"/></name><index pos:line="170" pos:column="47">[<expr><literal type="number" pos:line="170" pos:column="48">0<pos:position pos:line="170" pos:column="49"/></literal></expr>]<pos:position pos:line="170" pos:column="50"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="170" pos:column="52">"command line"<pos:position pos:line="170" pos:column="66"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="170" pos:column="68">0<pos:position pos:line="170" pos:column="69"/></literal></expr></argument>,
				    <argument><expr><name pos:line="171" pos:column="37">GREP_PATTERN<pos:position pos:line="171" pos:column="49"/></name></expr></argument>)<pos:position pos:line="171" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="171" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><name pos:line="172" pos:column="17">argv<pos:position pos:line="172" pos:column="21"/></name><operator pos:line="172" pos:column="21">++<pos:position pos:line="172" pos:column="23"/></operator></expr>;<pos:position pos:line="172" pos:column="24"/></expr_stmt>
		<expr_stmt><expr><name pos:line="173" pos:column="17">argc<pos:position pos:line="173" pos:column="21"/></name><operator pos:line="173" pos:column="21">--<pos:position pos:line="173" pos:column="23"/></operator></expr>;<pos:position pos:line="173" pos:column="24"/></expr_stmt>
	}<pos:position pos:line="174" pos:column="10"/></block></then></if>

	<if pos:line="176" pos:column="9">if <condition pos:line="176" pos:column="12">(<expr><name pos:line="176" pos:column="13">show_in_pager<pos:position pos:line="176" pos:column="26"/></name> <operator pos:line="176" pos:column="27">==<pos:position pos:line="176" pos:column="29"/></operator> <name pos:line="176" pos:column="30">default_pager<pos:position pos:line="176" pos:column="43"/></name></expr>)<pos:position pos:line="176" pos:column="44"/></condition><then pos:line="176" pos:column="44">
		<block type="pseudo"><expr_stmt><expr><name pos:line="177" pos:column="17">show_in_pager<pos:position pos:line="177" pos:column="30"/></name> <operator pos:line="177" pos:column="31">=<pos:position pos:line="177" pos:column="32"/></operator> <call><name pos:line="177" pos:column="33">git_pager<pos:position pos:line="177" pos:column="42"/></name><argument_list pos:line="177" pos:column="42">(<argument><expr><literal type="number" pos:line="177" pos:column="43">1<pos:position pos:line="177" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="177" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="46"/></expr_stmt></block></then></if>
	<if pos:line="178" pos:column="9">if <condition pos:line="178" pos:column="12">(<expr><name pos:line="178" pos:column="13">show_in_pager<pos:position pos:line="178" pos:column="26"/></name></expr>)<pos:position pos:line="178" pos:column="27"/></condition><then pos:line="178" pos:column="27"> <block pos:line="178" pos:column="28">{
		<expr_stmt><expr><name><name pos:line="179" pos:column="17">opt<pos:position pos:line="179" pos:column="20"/></name><operator pos:line="179" pos:column="20">.<pos:position pos:line="179" pos:column="21"/></operator><name pos:line="179" pos:column="21">color<pos:position pos:line="179" pos:column="26"/></name></name> <operator pos:line="179" pos:column="27">=<pos:position pos:line="179" pos:column="28"/></operator> <literal type="number" pos:line="179" pos:column="29">0<pos:position pos:line="179" pos:column="30"/></literal></expr>;<pos:position pos:line="179" pos:column="31"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="180" pos:column="17">opt<pos:position pos:line="180" pos:column="20"/></name><operator pos:line="180" pos:column="20">.<pos:position pos:line="180" pos:column="21"/></operator><name pos:line="180" pos:column="21">name_only<pos:position pos:line="180" pos:column="30"/></name></name> <operator pos:line="180" pos:column="31">=<pos:position pos:line="180" pos:column="32"/></operator> <literal type="number" pos:line="180" pos:column="33">1<pos:position pos:line="180" pos:column="34"/></literal></expr>;<pos:position pos:line="180" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="181" pos:column="17">opt<pos:position pos:line="181" pos:column="20"/></name><operator pos:line="181" pos:column="20">.<pos:position pos:line="181" pos:column="21"/></operator><name pos:line="181" pos:column="21">null_following_name<pos:position pos:line="181" pos:column="40"/></name></name> <operator pos:line="181" pos:column="41">=<pos:position pos:line="181" pos:column="42"/></operator> <literal type="number" pos:line="181" pos:column="43">1<pos:position pos:line="181" pos:column="44"/></literal></expr>;<pos:position pos:line="181" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="182" pos:column="17">opt<pos:position pos:line="182" pos:column="20"/></name><operator pos:line="182" pos:column="20">.<pos:position pos:line="182" pos:column="21"/></operator><name pos:line="182" pos:column="21">output_priv<pos:position pos:line="182" pos:column="32"/></name></name> <operator pos:line="182" pos:column="33">=<pos:position pos:line="182" pos:column="34"/></operator> <operator pos:line="182" pos:column="35">&amp;<pos:position pos:line="182" pos:column="40"/></operator><name pos:line="182" pos:column="36">path_list<pos:position pos:line="182" pos:column="45"/></name></expr>;<pos:position pos:line="182" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="183" pos:column="17">opt<pos:position pos:line="183" pos:column="20"/></name><operator pos:line="183" pos:column="20">.<pos:position pos:line="183" pos:column="21"/></operator><name pos:line="183" pos:column="21">output<pos:position pos:line="183" pos:column="27"/></name></name> <operator pos:line="183" pos:column="28">=<pos:position pos:line="183" pos:column="29"/></operator> <name pos:line="183" pos:column="30">append_path<pos:position pos:line="183" pos:column="41"/></name></expr>;<pos:position pos:line="183" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="184" pos:column="17">string_list_append<pos:position pos:line="184" pos:column="35"/></name><argument_list pos:line="184" pos:column="35">(<argument><expr><operator pos:line="184" pos:column="36">&amp;<pos:position pos:line="184" pos:column="41"/></operator><name pos:line="184" pos:column="37">path_list<pos:position pos:line="184" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="184" pos:column="48">show_in_pager<pos:position pos:line="184" pos:column="61"/></name></expr></argument>)<pos:position pos:line="184" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="184" pos:column="63"/></expr_stmt>
		<expr_stmt><expr><name pos:line="185" pos:column="17">use_threads<pos:position pos:line="185" pos:column="28"/></name> <operator pos:line="185" pos:column="29">=<pos:position pos:line="185" pos:column="30"/></operator> <literal type="number" pos:line="185" pos:column="31">0<pos:position pos:line="185" pos:column="32"/></literal></expr>;<pos:position pos:line="185" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="186" pos:column="10"/></block></then></if>

	<if pos:line="188" pos:column="9">if <condition pos:line="188" pos:column="12">(<expr><operator pos:line="188" pos:column="13">!<pos:position pos:line="188" pos:column="14"/></operator><name><name pos:line="188" pos:column="14">opt<pos:position pos:line="188" pos:column="17"/></name><operator pos:line="188" pos:column="17">.<pos:position pos:line="188" pos:column="18"/></operator><name pos:line="188" pos:column="18">pattern_list<pos:position pos:line="188" pos:column="30"/></name></name></expr>)<pos:position pos:line="188" pos:column="31"/></condition><then pos:line="188" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="189" pos:column="17">die<pos:position pos:line="189" pos:column="20"/></name><argument_list pos:line="189" pos:column="20">(<argument><expr><call><name pos:line="189" pos:column="21">_<pos:position pos:line="189" pos:column="22"/></name><argument_list pos:line="189" pos:column="22">(<argument><expr><literal type="string" pos:line="189" pos:column="23">"no pattern given."<pos:position pos:line="189" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="189" pos:column="43"/></argument_list></call></expr></argument>)<pos:position pos:line="189" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="189" pos:column="45"/></expr_stmt></block></then></if>
	<if pos:line="190" pos:column="9">if <condition pos:line="190" pos:column="12">(<expr><operator pos:line="190" pos:column="13">!<pos:position pos:line="190" pos:column="14"/></operator><name><name pos:line="190" pos:column="14">opt<pos:position pos:line="190" pos:column="17"/></name><operator pos:line="190" pos:column="17">.<pos:position pos:line="190" pos:column="18"/></operator><name pos:line="190" pos:column="18">fixed<pos:position pos:line="190" pos:column="23"/></name></name> <operator pos:line="190" pos:column="24">&amp;&amp;<pos:position pos:line="190" pos:column="34"/></operator> <name><name pos:line="190" pos:column="27">opt<pos:position pos:line="190" pos:column="30"/></name><operator pos:line="190" pos:column="30">.<pos:position pos:line="190" pos:column="31"/></operator><name pos:line="190" pos:column="31">ignore_case<pos:position pos:line="190" pos:column="42"/></name></name></expr>)<pos:position pos:line="190" pos:column="43"/></condition><then pos:line="190" pos:column="43">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="191" pos:column="17">opt<pos:position pos:line="191" pos:column="20"/></name><operator pos:line="191" pos:column="20">.<pos:position pos:line="191" pos:column="21"/></operator><name pos:line="191" pos:column="21">regflags<pos:position pos:line="191" pos:column="29"/></name></name> <operator pos:line="191" pos:column="30">|=<pos:position pos:line="191" pos:column="32"/></operator> <name pos:line="191" pos:column="33">REG_ICASE<pos:position pos:line="191" pos:column="42"/></name></expr>;<pos:position pos:line="191" pos:column="43"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="193" pos:column="9">compile_grep_patterns<pos:position pos:line="193" pos:column="30"/></name><argument_list pos:line="193" pos:column="30">(<argument><expr><operator pos:line="193" pos:column="31">&amp;<pos:position pos:line="193" pos:column="36"/></operator><name pos:line="193" pos:column="32">opt<pos:position pos:line="193" pos:column="35"/></name></expr></argument>)<pos:position pos:line="193" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="37"/></expr_stmt>

	<comment type="block" pos:line="195" pos:column="9">/* Check revs and then paths */</comment>
	<for pos:line="196" pos:column="9">for <control pos:line="196" pos:column="13">(<init><expr><name pos:line="196" pos:column="14">i<pos:position pos:line="196" pos:column="15"/></name> <operator pos:line="196" pos:column="16">=<pos:position pos:line="196" pos:column="17"/></operator> <literal type="number" pos:line="196" pos:column="18">0<pos:position pos:line="196" pos:column="19"/></literal></expr>;<pos:position pos:line="196" pos:column="20"/></init> <condition><expr><name pos:line="196" pos:column="21">i<pos:position pos:line="196" pos:column="22"/></name> <operator pos:line="196" pos:column="23">&lt;<pos:position pos:line="196" pos:column="27"/></operator> <name pos:line="196" pos:column="25">argc<pos:position pos:line="196" pos:column="29"/></name></expr>;<pos:position pos:line="196" pos:column="30"/></condition> <incr><expr><name pos:line="196" pos:column="31">i<pos:position pos:line="196" pos:column="32"/></name><operator pos:line="196" pos:column="32">++<pos:position pos:line="196" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="196" pos:column="35"/></control> <block pos:line="196" pos:column="36">{
		<decl_stmt><decl><type><specifier pos:line="197" pos:column="17">const<pos:position pos:line="197" pos:column="22"/></specifier> <name pos:line="197" pos:column="23">char<pos:position pos:line="197" pos:column="27"/></name> <modifier pos:line="197" pos:column="28">*<pos:position pos:line="197" pos:column="29"/></modifier></type><name pos:line="197" pos:column="29">arg<pos:position pos:line="197" pos:column="32"/></name> <init pos:line="197" pos:column="33">= <expr><name><name pos:line="197" pos:column="35">argv<pos:position pos:line="197" pos:column="39"/></name><index pos:line="197" pos:column="39">[<expr><name pos:line="197" pos:column="40">i<pos:position pos:line="197" pos:column="41"/></name></expr>]<pos:position pos:line="197" pos:column="42"/></index></name></expr></init></decl>;<pos:position pos:line="197" pos:column="43"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="198" pos:column="17">unsigned<pos:position pos:line="198" pos:column="25"/></name> <name pos:line="198" pos:column="26">char<pos:position pos:line="198" pos:column="30"/></name></type> <name><name pos:line="198" pos:column="31">sha1<pos:position pos:line="198" pos:column="35"/></name><index pos:line="198" pos:column="35">[<expr><literal type="number" pos:line="198" pos:column="36">20<pos:position pos:line="198" pos:column="38"/></literal></expr>]<pos:position pos:line="198" pos:column="39"/></index></name></decl>;<pos:position pos:line="198" pos:column="40"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="199" pos:column="17">struct<pos:position pos:line="199" pos:column="23"/></name> <name pos:line="199" pos:column="24">object_context<pos:position pos:line="199" pos:column="38"/></name></name></type> <name pos:line="199" pos:column="39">oc<pos:position pos:line="199" pos:column="41"/></name></decl>;<pos:position pos:line="199" pos:column="42"/></decl_stmt>
		<comment type="block" pos:line="200" pos:column="17">/* Is it a rev? */</comment>
		<if pos:line="201" pos:column="17">if <condition pos:line="201" pos:column="20">(<expr><operator pos:line="201" pos:column="21">!<pos:position pos:line="201" pos:column="22"/></operator><call><name pos:line="201" pos:column="22">get_sha1_with_context<pos:position pos:line="201" pos:column="43"/></name><argument_list pos:line="201" pos:column="43">(<argument><expr><name pos:line="201" pos:column="44">arg<pos:position pos:line="201" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="201" pos:column="49">0<pos:position pos:line="201" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="201" pos:column="52">sha1<pos:position pos:line="201" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="201" pos:column="58">&amp;<pos:position pos:line="201" pos:column="63"/></operator><name pos:line="201" pos:column="59">oc<pos:position pos:line="201" pos:column="61"/></name></expr></argument>)<pos:position pos:line="201" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="201" pos:column="63"/></condition><then pos:line="201" pos:column="63"> <block pos:line="201" pos:column="64">{
			<decl_stmt><decl><type><name><name pos:line="202" pos:column="25">struct<pos:position pos:line="202" pos:column="31"/></name> <name pos:line="202" pos:column="32">object<pos:position pos:line="202" pos:column="38"/></name></name> <modifier pos:line="202" pos:column="39">*<pos:position pos:line="202" pos:column="40"/></modifier></type><name pos:line="202" pos:column="40">object<pos:position pos:line="202" pos:column="46"/></name> <init pos:line="202" pos:column="47">= <expr><call><name pos:line="202" pos:column="49">parse_object_or_die<pos:position pos:line="202" pos:column="68"/></name><argument_list pos:line="202" pos:column="68">(<argument><expr><name pos:line="202" pos:column="69">sha1<pos:position pos:line="202" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="202" pos:column="75">arg<pos:position pos:line="202" pos:column="78"/></name></expr></argument>)<pos:position pos:line="202" pos:column="79"/></argument_list></call></expr></init></decl>;<pos:position pos:line="202" pos:column="80"/></decl_stmt>
			<if pos:line="203" pos:column="25">if <condition pos:line="203" pos:column="28">(<expr><operator pos:line="203" pos:column="29">!<pos:position pos:line="203" pos:column="30"/></operator><name pos:line="203" pos:column="30">seen_dashdash<pos:position pos:line="203" pos:column="43"/></name></expr>)<pos:position pos:line="203" pos:column="44"/></condition><then pos:line="203" pos:column="44">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="204" pos:column="33">verify_non_filename<pos:position pos:line="204" pos:column="52"/></name><argument_list pos:line="204" pos:column="52">(<argument><expr><name pos:line="204" pos:column="53">prefix<pos:position pos:line="204" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="204" pos:column="61">arg<pos:position pos:line="204" pos:column="64"/></name></expr></argument>)<pos:position pos:line="204" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="204" pos:column="66"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="205" pos:column="25">add_object_array_with_path<pos:position pos:line="205" pos:column="51"/></name><argument_list pos:line="205" pos:column="51">(<argument><expr><name pos:line="205" pos:column="52">object<pos:position pos:line="205" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="205" pos:column="60">arg<pos:position pos:line="205" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="205" pos:column="65">&amp;<pos:position pos:line="205" pos:column="70"/></operator><name pos:line="205" pos:column="66">list<pos:position pos:line="205" pos:column="70"/></name></expr></argument>, <argument><expr><name><name pos:line="205" pos:column="72">oc<pos:position pos:line="205" pos:column="74"/></name><operator pos:line="205" pos:column="74">.<pos:position pos:line="205" pos:column="75"/></operator><name pos:line="205" pos:column="75">mode<pos:position pos:line="205" pos:column="79"/></name></name></expr></argument>, <argument><expr><name><name pos:line="205" pos:column="81">oc<pos:position pos:line="205" pos:column="83"/></name><operator pos:line="205" pos:column="83">.<pos:position pos:line="205" pos:column="84"/></operator><name pos:line="205" pos:column="84">path<pos:position pos:line="205" pos:column="88"/></name></name></expr></argument>)<pos:position pos:line="205" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="205" pos:column="90"/></expr_stmt>
			<continue pos:line="206" pos:column="25">continue;<pos:position pos:line="206" pos:column="34"/></continue>
		}<pos:position pos:line="207" pos:column="18"/></block></then></if>
		<if pos:line="208" pos:column="17">if <condition pos:line="208" pos:column="20">(<expr><operator pos:line="208" pos:column="21">!<pos:position pos:line="208" pos:column="22"/></operator><call><name pos:line="208" pos:column="22">strcmp<pos:position pos:line="208" pos:column="28"/></name><argument_list pos:line="208" pos:column="28">(<argument><expr><name pos:line="208" pos:column="29">arg<pos:position pos:line="208" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="208" pos:column="34">"--"<pos:position pos:line="208" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="208" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="208" pos:column="40"/></condition><then pos:line="208" pos:column="40"> <block pos:line="208" pos:column="41">{
			<expr_stmt><expr><name pos:line="209" pos:column="25">i<pos:position pos:line="209" pos:column="26"/></name><operator pos:line="209" pos:column="26">++<pos:position pos:line="209" pos:column="28"/></operator></expr>;<pos:position pos:line="209" pos:column="29"/></expr_stmt>
			<expr_stmt><expr><name pos:line="210" pos:column="25">seen_dashdash<pos:position pos:line="210" pos:column="38"/></name> <operator pos:line="210" pos:column="39">=<pos:position pos:line="210" pos:column="40"/></operator> <literal type="number" pos:line="210" pos:column="41">1<pos:position pos:line="210" pos:column="42"/></literal></expr>;<pos:position pos:line="210" pos:column="43"/></expr_stmt>
		}<pos:position pos:line="211" pos:column="18"/></block></then></if>
		<break pos:line="212" pos:column="17">break;<pos:position pos:line="212" pos:column="23"/></break>
	}<pos:position pos:line="213" pos:column="10"/></block></for>

<cpp:ifndef pos:line="215" pos:column="1">#<cpp:directive pos:line="215" pos:column="2">ifndef<pos:position pos:line="215" pos:column="8"/></cpp:directive> <name pos:line="215" pos:column="9">NO_PTHREADS<pos:position pos:line="215" pos:column="20"/></name></cpp:ifndef>
	<if pos:line="216" pos:column="9">if <condition pos:line="216" pos:column="12">(<expr><name><name pos:line="216" pos:column="13">list<pos:position pos:line="216" pos:column="17"/></name><operator pos:line="216" pos:column="17">.<pos:position pos:line="216" pos:column="18"/></operator><name pos:line="216" pos:column="18">nr<pos:position pos:line="216" pos:column="20"/></name></name> <operator pos:line="216" pos:column="21">||<pos:position pos:line="216" pos:column="23"/></operator> <name pos:line="216" pos:column="24">cached<pos:position pos:line="216" pos:column="30"/></name> <operator pos:line="216" pos:column="31">||<pos:position pos:line="216" pos:column="33"/></operator> <call><name pos:line="216" pos:column="34">online_cpus<pos:position pos:line="216" pos:column="45"/></name><argument_list pos:line="216" pos:column="45">()<pos:position pos:line="216" pos:column="47"/></argument_list></call> <operator pos:line="216" pos:column="48">==<pos:position pos:line="216" pos:column="50"/></operator> <literal type="number" pos:line="216" pos:column="51">1<pos:position pos:line="216" pos:column="52"/></literal></expr>)<pos:position pos:line="216" pos:column="53"/></condition><then pos:line="216" pos:column="53">
		<block type="pseudo"><expr_stmt><expr><name pos:line="217" pos:column="17">use_threads<pos:position pos:line="217" pos:column="28"/></name> <operator pos:line="217" pos:column="29">=<pos:position pos:line="217" pos:column="30"/></operator> <literal type="number" pos:line="217" pos:column="31">0<pos:position pos:line="217" pos:column="32"/></literal></expr>;<pos:position pos:line="217" pos:column="33"/></expr_stmt></block></then></if>
<cpp:else pos:line="218" pos:column="1">#<cpp:directive pos:line="218" pos:column="2">else<pos:position pos:line="218" pos:column="6"/></cpp:directive></cpp:else>
	<expr_stmt><expr><name pos:line="219" pos:column="9">use_threads<pos:position pos:line="219" pos:column="20"/></name> <operator pos:line="219" pos:column="21">=<pos:position pos:line="219" pos:column="22"/></operator> <literal type="number" pos:line="219" pos:column="23">0<pos:position pos:line="219" pos:column="24"/></literal></expr>;<pos:position pos:line="219" pos:column="25"/></expr_stmt>
<cpp:endif pos:line="220" pos:column="1">#<cpp:directive pos:line="220" pos:column="2">endif<pos:position pos:line="220" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:ifndef pos:line="222" pos:column="1">#<cpp:directive pos:line="222" pos:column="2">ifndef<pos:position pos:line="222" pos:column="8"/></cpp:directive> <name pos:line="222" pos:column="9">NO_PTHREADS<pos:position pos:line="222" pos:column="20"/></name></cpp:ifndef>
	<if pos:line="223" pos:column="9">if <condition pos:line="223" pos:column="12">(<expr><name pos:line="223" pos:column="13">use_threads<pos:position pos:line="223" pos:column="24"/></name></expr>)<pos:position pos:line="223" pos:column="25"/></condition><then pos:line="223" pos:column="25"> <block pos:line="223" pos:column="26">{
		<if pos:line="224" pos:column="17">if <condition pos:line="224" pos:column="20">(<expr><operator pos:line="224" pos:column="21">!<pos:position pos:line="224" pos:column="22"/></operator><operator pos:line="224" pos:column="22">(<pos:position pos:line="224" pos:column="23"/></operator><name><name pos:line="224" pos:column="23">opt<pos:position pos:line="224" pos:column="26"/></name><operator pos:line="224" pos:column="26">.<pos:position pos:line="224" pos:column="27"/></operator><name pos:line="224" pos:column="27">name_only<pos:position pos:line="224" pos:column="36"/></name></name> <operator pos:line="224" pos:column="37">||<pos:position pos:line="224" pos:column="39"/></operator> <name><name pos:line="224" pos:column="40">opt<pos:position pos:line="224" pos:column="43"/></name><operator pos:line="224" pos:column="43">.<pos:position pos:line="224" pos:column="44"/></operator><name pos:line="224" pos:column="44">unmatch_name_only<pos:position pos:line="224" pos:column="61"/></name></name> <operator pos:line="224" pos:column="62">||<pos:position pos:line="224" pos:column="64"/></operator> <name><name pos:line="224" pos:column="65">opt<pos:position pos:line="224" pos:column="68"/></name><operator pos:line="224" pos:column="68">.<pos:position pos:line="224" pos:column="69"/></operator><name pos:line="224" pos:column="69">count<pos:position pos:line="224" pos:column="74"/></name></name><operator pos:line="224" pos:column="74">)<pos:position pos:line="224" pos:column="75"/></operator>
		    <operator pos:line="225" pos:column="21">&amp;&amp;<pos:position pos:line="225" pos:column="31"/></operator> <operator pos:line="225" pos:column="24">(<pos:position pos:line="225" pos:column="25"/></operator><name><name pos:line="225" pos:column="25">opt<pos:position pos:line="225" pos:column="28"/></name><operator pos:line="225" pos:column="28">.<pos:position pos:line="225" pos:column="29"/></operator><name pos:line="225" pos:column="29">pre_context<pos:position pos:line="225" pos:column="40"/></name></name> <operator pos:line="225" pos:column="41">||<pos:position pos:line="225" pos:column="43"/></operator> <name><name pos:line="225" pos:column="44">opt<pos:position pos:line="225" pos:column="47"/></name><operator pos:line="225" pos:column="47">.<pos:position pos:line="225" pos:column="48"/></operator><name pos:line="225" pos:column="48">post_context<pos:position pos:line="225" pos:column="60"/></name></name> <operator pos:line="225" pos:column="61">||<pos:position pos:line="225" pos:column="63"/></operator>
			<name><name pos:line="226" pos:column="25">opt<pos:position pos:line="226" pos:column="28"/></name><operator pos:line="226" pos:column="28">.<pos:position pos:line="226" pos:column="29"/></operator><name pos:line="226" pos:column="29">file_break<pos:position pos:line="226" pos:column="39"/></name></name> <operator pos:line="226" pos:column="40">||<pos:position pos:line="226" pos:column="42"/></operator> <name><name pos:line="226" pos:column="43">opt<pos:position pos:line="226" pos:column="46"/></name><operator pos:line="226" pos:column="46">.<pos:position pos:line="226" pos:column="47"/></operator><name pos:line="226" pos:column="47">funcbody<pos:position pos:line="226" pos:column="55"/></name></name><operator pos:line="226" pos:column="55">)<pos:position pos:line="226" pos:column="56"/></operator></expr>)<pos:position pos:line="226" pos:column="57"/></condition><then pos:line="226" pos:column="57">
			<block type="pseudo"><expr_stmt><expr><name pos:line="227" pos:column="25">skip_first_line<pos:position pos:line="227" pos:column="40"/></name> <operator pos:line="227" pos:column="41">=<pos:position pos:line="227" pos:column="42"/></operator> <literal type="number" pos:line="227" pos:column="43">1<pos:position pos:line="227" pos:column="44"/></literal></expr>;<pos:position pos:line="227" pos:column="45"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="228" pos:column="17">start_threads<pos:position pos:line="228" pos:column="30"/></name><argument_list pos:line="228" pos:column="30">(<argument><expr><operator pos:line="228" pos:column="31">&amp;<pos:position pos:line="228" pos:column="36"/></operator><name pos:line="228" pos:column="32">opt<pos:position pos:line="228" pos:column="35"/></name></expr></argument>)<pos:position pos:line="228" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="228" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="229" pos:column="10"/></block></then></if>
<cpp:endif pos:line="230" pos:column="1">#<cpp:directive pos:line="230" pos:column="2">endif<pos:position pos:line="230" pos:column="7"/></cpp:directive></cpp:endif>

	<comment type="block" pos:line="232" pos:column="9">/* The rest are paths */</comment>
	<if pos:line="233" pos:column="9">if <condition pos:line="233" pos:column="12">(<expr><operator pos:line="233" pos:column="13">!<pos:position pos:line="233" pos:column="14"/></operator><name pos:line="233" pos:column="14">seen_dashdash<pos:position pos:line="233" pos:column="27"/></name></expr>)<pos:position pos:line="233" pos:column="28"/></condition><then pos:line="233" pos:column="28"> <block pos:line="233" pos:column="29">{
		<decl_stmt><decl><type><name pos:line="234" pos:column="17">int<pos:position pos:line="234" pos:column="20"/></name></type> <name pos:line="234" pos:column="21">j<pos:position pos:line="234" pos:column="22"/></name></decl>;<pos:position pos:line="234" pos:column="23"/></decl_stmt>
		<for pos:line="235" pos:column="17">for <control pos:line="235" pos:column="21">(<init><expr><name pos:line="235" pos:column="22">j<pos:position pos:line="235" pos:column="23"/></name> <operator pos:line="235" pos:column="24">=<pos:position pos:line="235" pos:column="25"/></operator> <name pos:line="235" pos:column="26">i<pos:position pos:line="235" pos:column="27"/></name></expr>;<pos:position pos:line="235" pos:column="28"/></init> <condition><expr><name pos:line="235" pos:column="29">j<pos:position pos:line="235" pos:column="30"/></name> <operator pos:line="235" pos:column="31">&lt;<pos:position pos:line="235" pos:column="35"/></operator> <name pos:line="235" pos:column="33">argc<pos:position pos:line="235" pos:column="37"/></name></expr>;<pos:position pos:line="235" pos:column="38"/></condition> <incr><expr><name pos:line="235" pos:column="39">j<pos:position pos:line="235" pos:column="40"/></name><operator pos:line="235" pos:column="40">++<pos:position pos:line="235" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="235" pos:column="43"/></control>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="236" pos:column="25">verify_filename<pos:position pos:line="236" pos:column="40"/></name><argument_list pos:line="236" pos:column="40">(<argument><expr><name pos:line="236" pos:column="41">prefix<pos:position pos:line="236" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="236" pos:column="49">argv<pos:position pos:line="236" pos:column="53"/></name><index pos:line="236" pos:column="53">[<expr><name pos:line="236" pos:column="54">j<pos:position pos:line="236" pos:column="55"/></name></expr>]<pos:position pos:line="236" pos:column="56"/></index></name></expr></argument>, <argument><expr><name pos:line="236" pos:column="58">j<pos:position pos:line="236" pos:column="59"/></name> <operator pos:line="236" pos:column="60">==<pos:position pos:line="236" pos:column="62"/></operator> <name pos:line="236" pos:column="63">i<pos:position pos:line="236" pos:column="64"/></name></expr></argument>)<pos:position pos:line="236" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="236" pos:column="66"/></expr_stmt></block></for>
	}<pos:position pos:line="237" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="239" pos:column="9">parse_pathspec<pos:position pos:line="239" pos:column="23"/></name><argument_list pos:line="239" pos:column="23">(<argument><expr><operator pos:line="239" pos:column="24">&amp;<pos:position pos:line="239" pos:column="29"/></operator><name pos:line="239" pos:column="25">pathspec<pos:position pos:line="239" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="239" pos:column="35">0<pos:position pos:line="239" pos:column="36"/></literal></expr></argument>,
		       <argument><expr><name pos:line="240" pos:column="24">PATHSPEC_PREFER_CWD<pos:position pos:line="240" pos:column="43"/></name> <operator pos:line="240" pos:column="44">|<pos:position pos:line="240" pos:column="45"/></operator>
		       <operator pos:line="241" pos:column="24">(<pos:position pos:line="241" pos:column="25"/></operator><ternary><condition><expr><name><name pos:line="241" pos:column="25">opt<pos:position pos:line="241" pos:column="28"/></name><operator pos:line="241" pos:column="28">.<pos:position pos:line="241" pos:column="29"/></operator><name pos:line="241" pos:column="29">max_depth<pos:position pos:line="241" pos:column="38"/></name></name> <operator pos:line="241" pos:column="39">!=<pos:position pos:line="241" pos:column="41"/></operator> <operator pos:line="241" pos:column="42">-<pos:position pos:line="241" pos:column="43"/></operator><literal type="number" pos:line="241" pos:column="43">1<pos:position pos:line="241" pos:column="44"/></literal></expr> ?<pos:position pos:line="241" pos:column="46"/></condition><then pos:line="241" pos:column="46"> <expr><name pos:line="241" pos:column="47">PATHSPEC_MAXDEPTH_VALID<pos:position pos:line="241" pos:column="70"/></name></expr> <pos:position pos:line="241" pos:column="71"/></then><else pos:line="241" pos:column="71">: <expr><literal type="number" pos:line="241" pos:column="73">0<pos:position pos:line="241" pos:column="74"/></literal></expr></else></ternary><operator pos:line="241" pos:column="74">)<pos:position pos:line="241" pos:column="75"/></operator></expr></argument>,
		       <argument><expr><name pos:line="242" pos:column="24">prefix<pos:position pos:line="242" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="242" pos:column="32">argv<pos:position pos:line="242" pos:column="36"/></name> <operator pos:line="242" pos:column="37">+<pos:position pos:line="242" pos:column="38"/></operator> <name pos:line="242" pos:column="39">i<pos:position pos:line="242" pos:column="40"/></name></expr></argument>)<pos:position pos:line="242" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="242" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="243" pos:column="9">pathspec<pos:position pos:line="243" pos:column="17"/></name><operator pos:line="243" pos:column="17">.<pos:position pos:line="243" pos:column="18"/></operator><name pos:line="243" pos:column="18">max_depth<pos:position pos:line="243" pos:column="27"/></name></name> <operator pos:line="243" pos:column="28">=<pos:position pos:line="243" pos:column="29"/></operator> <name><name pos:line="243" pos:column="30">opt<pos:position pos:line="243" pos:column="33"/></name><operator pos:line="243" pos:column="33">.<pos:position pos:line="243" pos:column="34"/></operator><name pos:line="243" pos:column="34">max_depth<pos:position pos:line="243" pos:column="43"/></name></name></expr>;<pos:position pos:line="243" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="244" pos:column="9">pathspec<pos:position pos:line="244" pos:column="17"/></name><operator pos:line="244" pos:column="17">.<pos:position pos:line="244" pos:column="18"/></operator><name pos:line="244" pos:column="18">recursive<pos:position pos:line="244" pos:column="27"/></name></name> <operator pos:line="244" pos:column="28">=<pos:position pos:line="244" pos:column="29"/></operator> <literal type="number" pos:line="244" pos:column="30">1<pos:position pos:line="244" pos:column="31"/></literal></expr>;<pos:position pos:line="244" pos:column="32"/></expr_stmt>

	<if pos:line="246" pos:column="9">if <condition pos:line="246" pos:column="12">(<expr><name pos:line="246" pos:column="13">show_in_pager<pos:position pos:line="246" pos:column="26"/></name> <operator pos:line="246" pos:column="27">&amp;&amp;<pos:position pos:line="246" pos:column="37"/></operator> <operator pos:line="246" pos:column="30">(<pos:position pos:line="246" pos:column="31"/></operator><name pos:line="246" pos:column="31">cached<pos:position pos:line="246" pos:column="37"/></name> <operator pos:line="246" pos:column="38">||<pos:position pos:line="246" pos:column="40"/></operator> <name><name pos:line="246" pos:column="41">list<pos:position pos:line="246" pos:column="45"/></name><operator pos:line="246" pos:column="45">.<pos:position pos:line="246" pos:column="46"/></operator><name pos:line="246" pos:column="46">nr<pos:position pos:line="246" pos:column="48"/></name></name><operator pos:line="246" pos:column="48">)<pos:position pos:line="246" pos:column="49"/></operator></expr>)<pos:position pos:line="246" pos:column="50"/></condition><then pos:line="246" pos:column="50">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="247" pos:column="17">die<pos:position pos:line="247" pos:column="20"/></name><argument_list pos:line="247" pos:column="20">(<argument><expr><call><name pos:line="247" pos:column="21">_<pos:position pos:line="247" pos:column="22"/></name><argument_list pos:line="247" pos:column="22">(<argument><expr><literal type="string" pos:line="247" pos:column="23">"--open-files-in-pager only works on the worktree"<pos:position pos:line="247" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="247" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="247" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="247" pos:column="76"/></expr_stmt></block></then></if>

	<if pos:line="249" pos:column="9">if <condition pos:line="249" pos:column="12">(<expr><name pos:line="249" pos:column="13">show_in_pager<pos:position pos:line="249" pos:column="26"/></name> <operator pos:line="249" pos:column="27">&amp;&amp;<pos:position pos:line="249" pos:column="37"/></operator> <name><name pos:line="249" pos:column="30">opt<pos:position pos:line="249" pos:column="33"/></name><operator pos:line="249" pos:column="33">.<pos:position pos:line="249" pos:column="34"/></operator><name pos:line="249" pos:column="34">pattern_list<pos:position pos:line="249" pos:column="46"/></name></name> <operator pos:line="249" pos:column="47">&amp;&amp;<pos:position pos:line="249" pos:column="57"/></operator> <operator pos:line="249" pos:column="50">!<pos:position pos:line="249" pos:column="51"/></operator><name><name pos:line="249" pos:column="51">opt<pos:position pos:line="249" pos:column="54"/></name><operator pos:line="249" pos:column="54">.<pos:position pos:line="249" pos:column="55"/></operator><name pos:line="249" pos:column="55">pattern_list<pos:position pos:line="249" pos:column="67"/></name><operator pos:line="249" pos:column="67">-&gt;<pos:position pos:line="249" pos:column="72"/></operator><name pos:line="249" pos:column="69">next<pos:position pos:line="249" pos:column="73"/></name></name></expr>)<pos:position pos:line="249" pos:column="74"/></condition><then pos:line="249" pos:column="74"> <block pos:line="249" pos:column="75">{
		<decl_stmt><decl><type><specifier pos:line="250" pos:column="17">const<pos:position pos:line="250" pos:column="22"/></specifier> <name pos:line="250" pos:column="23">char<pos:position pos:line="250" pos:column="27"/></name> <modifier pos:line="250" pos:column="28">*<pos:position pos:line="250" pos:column="29"/></modifier></type><name pos:line="250" pos:column="29">pager<pos:position pos:line="250" pos:column="34"/></name> <init pos:line="250" pos:column="35">= <expr><name><name pos:line="250" pos:column="37">path_list<pos:position pos:line="250" pos:column="46"/></name><operator pos:line="250" pos:column="46">.<pos:position pos:line="250" pos:column="47"/></operator><name pos:line="250" pos:column="47">items<pos:position pos:line="250" pos:column="52"/></name><index pos:line="250" pos:column="52">[<expr><literal type="number" pos:line="250" pos:column="53">0<pos:position pos:line="250" pos:column="54"/></literal></expr>]<pos:position pos:line="250" pos:column="55"/></index></name><operator pos:line="250" pos:column="55">.<pos:position pos:line="250" pos:column="56"/></operator><name pos:line="250" pos:column="56">string<pos:position pos:line="250" pos:column="62"/></name></expr></init></decl>;<pos:position pos:line="250" pos:column="63"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="251" pos:column="17">int<pos:position pos:line="251" pos:column="20"/></name></type> <name pos:line="251" pos:column="21">len<pos:position pos:line="251" pos:column="24"/></name> <init pos:line="251" pos:column="25">= <expr><call><name pos:line="251" pos:column="27">strlen<pos:position pos:line="251" pos:column="33"/></name><argument_list pos:line="251" pos:column="33">(<argument><expr><name pos:line="251" pos:column="34">pager<pos:position pos:line="251" pos:column="39"/></name></expr></argument>)<pos:position pos:line="251" pos:column="40"/></argument_list></call></expr></init></decl>;<pos:position pos:line="251" pos:column="41"/></decl_stmt>

		<if pos:line="253" pos:column="17">if <condition pos:line="253" pos:column="20">(<expr><name pos:line="253" pos:column="21">len<pos:position pos:line="253" pos:column="24"/></name> <operator pos:line="253" pos:column="25">&gt;<pos:position pos:line="253" pos:column="29"/></operator> <literal type="number" pos:line="253" pos:column="27">4<pos:position pos:line="253" pos:column="28"/></literal> <operator pos:line="253" pos:column="29">&amp;&amp;<pos:position pos:line="253" pos:column="39"/></operator> <call><name pos:line="253" pos:column="32">is_dir_sep<pos:position pos:line="253" pos:column="42"/></name><argument_list pos:line="253" pos:column="42">(<argument><expr><name><name pos:line="253" pos:column="43">pager<pos:position pos:line="253" pos:column="48"/></name><index pos:line="253" pos:column="48">[<expr><name pos:line="253" pos:column="49">len<pos:position pos:line="253" pos:column="52"/></name> <operator pos:line="253" pos:column="53">-<pos:position pos:line="253" pos:column="54"/></operator> <literal type="number" pos:line="253" pos:column="55">5<pos:position pos:line="253" pos:column="56"/></literal></expr>]<pos:position pos:line="253" pos:column="57"/></index></name></expr></argument>)<pos:position pos:line="253" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="253" pos:column="59"/></condition><then pos:line="253" pos:column="59">
			<block type="pseudo"><expr_stmt><expr><name pos:line="254" pos:column="25">pager<pos:position pos:line="254" pos:column="30"/></name> <operator pos:line="254" pos:column="31">+=<pos:position pos:line="254" pos:column="33"/></operator> <name pos:line="254" pos:column="34">len<pos:position pos:line="254" pos:column="37"/></name> <operator pos:line="254" pos:column="38">-<pos:position pos:line="254" pos:column="39"/></operator> <literal type="number" pos:line="254" pos:column="40">4<pos:position pos:line="254" pos:column="41"/></literal></expr>;<pos:position pos:line="254" pos:column="42"/></expr_stmt></block></then></if>

		<if pos:line="256" pos:column="17">if <condition pos:line="256" pos:column="20">(<expr><name><name pos:line="256" pos:column="21">opt<pos:position pos:line="256" pos:column="24"/></name><operator pos:line="256" pos:column="24">.<pos:position pos:line="256" pos:column="25"/></operator><name pos:line="256" pos:column="25">ignore_case<pos:position pos:line="256" pos:column="36"/></name></name> <operator pos:line="256" pos:column="37">&amp;&amp;<pos:position pos:line="256" pos:column="47"/></operator> <operator pos:line="256" pos:column="40">!<pos:position pos:line="256" pos:column="41"/></operator><call><name pos:line="256" pos:column="41">strcmp<pos:position pos:line="256" pos:column="47"/></name><argument_list pos:line="256" pos:column="47">(<argument><expr><literal type="string" pos:line="256" pos:column="48">"less"<pos:position pos:line="256" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="256" pos:column="56">pager<pos:position pos:line="256" pos:column="61"/></name></expr></argument>)<pos:position pos:line="256" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="256" pos:column="63"/></condition><then pos:line="256" pos:column="63">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="257" pos:column="25">string_list_append<pos:position pos:line="257" pos:column="43"/></name><argument_list pos:line="257" pos:column="43">(<argument><expr><operator pos:line="257" pos:column="44">&amp;<pos:position pos:line="257" pos:column="49"/></operator><name pos:line="257" pos:column="45">path_list<pos:position pos:line="257" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="257" pos:column="56">"-I"<pos:position pos:line="257" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="257" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="257" pos:column="62"/></expr_stmt></block></then></if>

		<if pos:line="259" pos:column="17">if <condition pos:line="259" pos:column="20">(<expr><operator pos:line="259" pos:column="21">!<pos:position pos:line="259" pos:column="22"/></operator><call><name pos:line="259" pos:column="22">strcmp<pos:position pos:line="259" pos:column="28"/></name><argument_list pos:line="259" pos:column="28">(<argument><expr><literal type="string" pos:line="259" pos:column="29">"less"<pos:position pos:line="259" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="259" pos:column="37">pager<pos:position pos:line="259" pos:column="42"/></name></expr></argument>)<pos:position pos:line="259" pos:column="43"/></argument_list></call> <operator pos:line="259" pos:column="44">||<pos:position pos:line="259" pos:column="46"/></operator> <operator pos:line="259" pos:column="47">!<pos:position pos:line="259" pos:column="48"/></operator><call><name pos:line="259" pos:column="48">strcmp<pos:position pos:line="259" pos:column="54"/></name><argument_list pos:line="259" pos:column="54">(<argument><expr><literal type="string" pos:line="259" pos:column="55">"vi"<pos:position pos:line="259" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="259" pos:column="61">pager<pos:position pos:line="259" pos:column="66"/></name></expr></argument>)<pos:position pos:line="259" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="259" pos:column="68"/></condition><then pos:line="259" pos:column="68"> <block pos:line="259" pos:column="69">{
			<decl_stmt><decl><type><name><name pos:line="260" pos:column="25">struct<pos:position pos:line="260" pos:column="31"/></name> <name pos:line="260" pos:column="32">strbuf<pos:position pos:line="260" pos:column="38"/></name></name></type> <name pos:line="260" pos:column="39">buf<pos:position pos:line="260" pos:column="42"/></name> <init pos:line="260" pos:column="43">= <expr><name pos:line="260" pos:column="45">STRBUF_INIT<pos:position pos:line="260" pos:column="56"/></name></expr></init></decl>;<pos:position pos:line="260" pos:column="57"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="261" pos:column="25">strbuf_addf<pos:position pos:line="261" pos:column="36"/></name><argument_list pos:line="261" pos:column="36">(<argument><expr><operator pos:line="261" pos:column="37">&amp;<pos:position pos:line="261" pos:column="42"/></operator><name pos:line="261" pos:column="38">buf<pos:position pos:line="261" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="261" pos:column="43">"+/%s%s"<pos:position pos:line="261" pos:column="51"/></literal></expr></argument>,
					<argument><expr><ternary><condition><expr><call><name pos:line="262" pos:column="41">strcmp<pos:position pos:line="262" pos:column="47"/></name><argument_list pos:line="262" pos:column="47">(<argument><expr><literal type="string" pos:line="262" pos:column="48">"less"<pos:position pos:line="262" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="262" pos:column="56">pager<pos:position pos:line="262" pos:column="61"/></name></expr></argument>)<pos:position pos:line="262" pos:column="62"/></argument_list></call></expr> ?<pos:position pos:line="262" pos:column="64"/></condition><then pos:line="262" pos:column="64"> <expr><literal type="string" pos:line="262" pos:column="65">""<pos:position pos:line="262" pos:column="67"/></literal></expr> <pos:position pos:line="262" pos:column="68"/></then><else pos:line="262" pos:column="68">: <expr><literal type="string" pos:line="262" pos:column="70">"*"<pos:position pos:line="262" pos:column="73"/></literal></expr></else></ternary></expr></argument>,
					<argument><expr><name><name pos:line="263" pos:column="41">opt<pos:position pos:line="263" pos:column="44"/></name><operator pos:line="263" pos:column="44">.<pos:position pos:line="263" pos:column="45"/></operator><name pos:line="263" pos:column="45">pattern_list<pos:position pos:line="263" pos:column="57"/></name><operator pos:line="263" pos:column="57">-&gt;<pos:position pos:line="263" pos:column="62"/></operator><name pos:line="263" pos:column="59">pattern<pos:position pos:line="263" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="263" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="263" pos:column="68"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="264" pos:column="25">string_list_append<pos:position pos:line="264" pos:column="43"/></name><argument_list pos:line="264" pos:column="43">(<argument><expr><operator pos:line="264" pos:column="44">&amp;<pos:position pos:line="264" pos:column="49"/></operator><name pos:line="264" pos:column="45">path_list<pos:position pos:line="264" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="264" pos:column="56">buf<pos:position pos:line="264" pos:column="59"/></name><operator pos:line="264" pos:column="59">.<pos:position pos:line="264" pos:column="60"/></operator><name pos:line="264" pos:column="60">buf<pos:position pos:line="264" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="264" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="264" pos:column="65"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="265" pos:column="25">strbuf_detach<pos:position pos:line="265" pos:column="38"/></name><argument_list pos:line="265" pos:column="38">(<argument><expr><operator pos:line="265" pos:column="39">&amp;<pos:position pos:line="265" pos:column="44"/></operator><name pos:line="265" pos:column="40">buf<pos:position pos:line="265" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="265" pos:column="45">NULL<pos:position pos:line="265" pos:column="49"/></name></expr></argument>)<pos:position pos:line="265" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="265" pos:column="51"/></expr_stmt>
		}<pos:position pos:line="266" pos:column="18"/></block></then></if>
	}<pos:position pos:line="267" pos:column="10"/></block></then></if>

	<if pos:line="269" pos:column="9">if <condition pos:line="269" pos:column="12">(<expr><operator pos:line="269" pos:column="13">!<pos:position pos:line="269" pos:column="14"/></operator><name pos:line="269" pos:column="14">show_in_pager<pos:position pos:line="269" pos:column="27"/></name> <operator pos:line="269" pos:column="28">&amp;&amp;<pos:position pos:line="269" pos:column="38"/></operator> <operator pos:line="269" pos:column="31">!<pos:position pos:line="269" pos:column="32"/></operator><name><name pos:line="269" pos:column="32">opt<pos:position pos:line="269" pos:column="35"/></name><operator pos:line="269" pos:column="35">.<pos:position pos:line="269" pos:column="36"/></operator><name pos:line="269" pos:column="36">status_only<pos:position pos:line="269" pos:column="47"/></name></name></expr>)<pos:position pos:line="269" pos:column="48"/></condition><then pos:line="269" pos:column="48">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="270" pos:column="17">setup_pager<pos:position pos:line="270" pos:column="28"/></name><argument_list pos:line="270" pos:column="28">()<pos:position pos:line="270" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="270" pos:column="31"/></expr_stmt></block></then></if>

	<if pos:line="272" pos:column="9">if <condition pos:line="272" pos:column="12">(<expr><operator pos:line="272" pos:column="13">!<pos:position pos:line="272" pos:column="14"/></operator><name pos:line="272" pos:column="14">use_index<pos:position pos:line="272" pos:column="23"/></name> <operator pos:line="272" pos:column="24">&amp;&amp;<pos:position pos:line="272" pos:column="34"/></operator> <operator pos:line="272" pos:column="27">(<pos:position pos:line="272" pos:column="28"/></operator><name pos:line="272" pos:column="28">untracked<pos:position pos:line="272" pos:column="37"/></name> <operator pos:line="272" pos:column="38">||<pos:position pos:line="272" pos:column="40"/></operator> <name pos:line="272" pos:column="41">cached<pos:position pos:line="272" pos:column="47"/></name><operator pos:line="272" pos:column="47">)<pos:position pos:line="272" pos:column="48"/></operator></expr>)<pos:position pos:line="272" pos:column="49"/></condition><then pos:line="272" pos:column="49">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="273" pos:column="17">die<pos:position pos:line="273" pos:column="20"/></name><argument_list pos:line="273" pos:column="20">(<argument><expr><call><name pos:line="273" pos:column="21">_<pos:position pos:line="273" pos:column="22"/></name><argument_list pos:line="273" pos:column="22">(<argument><expr><literal type="string" pos:line="273" pos:column="23">"--cached or --untracked cannot be used with --no-index."<pos:position pos:line="273" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="273" pos:column="81"/></argument_list></call></expr></argument>)<pos:position pos:line="273" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="273" pos:column="83"/></expr_stmt></block></then></if>

	<if pos:line="275" pos:column="9">if <condition pos:line="275" pos:column="12">(<expr><operator pos:line="275" pos:column="13">!<pos:position pos:line="275" pos:column="14"/></operator><name pos:line="275" pos:column="14">use_index<pos:position pos:line="275" pos:column="23"/></name> <operator pos:line="275" pos:column="24">||<pos:position pos:line="275" pos:column="26"/></operator> <name pos:line="275" pos:column="27">untracked<pos:position pos:line="275" pos:column="36"/></name></expr>)<pos:position pos:line="275" pos:column="37"/></condition><then pos:line="275" pos:column="37"> <block pos:line="275" pos:column="38">{
		<decl_stmt><decl><type><name pos:line="276" pos:column="17">int<pos:position pos:line="276" pos:column="20"/></name></type> <name pos:line="276" pos:column="21">use_exclude<pos:position pos:line="276" pos:column="32"/></name> <init pos:line="276" pos:column="33">= <expr><ternary><condition><expr><operator pos:line="276" pos:column="35">(<pos:position pos:line="276" pos:column="36"/></operator><name pos:line="276" pos:column="36">opt_exclude<pos:position pos:line="276" pos:column="47"/></name> <operator pos:line="276" pos:column="48">&lt;<pos:position pos:line="276" pos:column="52"/></operator> <literal type="number" pos:line="276" pos:column="50">0<pos:position pos:line="276" pos:column="51"/></literal><operator pos:line="276" pos:column="51">)<pos:position pos:line="276" pos:column="52"/></operator></expr> ?<pos:position pos:line="276" pos:column="54"/></condition><then pos:line="276" pos:column="54"> <expr><name pos:line="276" pos:column="55">use_index<pos:position pos:line="276" pos:column="64"/></name></expr> <pos:position pos:line="276" pos:column="65"/></then><else pos:line="276" pos:column="65">: <expr><operator pos:line="276" pos:column="67">!<pos:position pos:line="276" pos:column="68"/></operator><operator pos:line="276" pos:column="68">!<pos:position pos:line="276" pos:column="69"/></operator><name pos:line="276" pos:column="69">opt_exclude<pos:position pos:line="276" pos:column="80"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="276" pos:column="81"/></decl_stmt>
		<if pos:line="277" pos:column="17">if <condition pos:line="277" pos:column="20">(<expr><name><name pos:line="277" pos:column="21">list<pos:position pos:line="277" pos:column="25"/></name><operator pos:line="277" pos:column="25">.<pos:position pos:line="277" pos:column="26"/></operator><name pos:line="277" pos:column="26">nr<pos:position pos:line="277" pos:column="28"/></name></name></expr>)<pos:position pos:line="277" pos:column="29"/></condition><then pos:line="277" pos:column="29">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="278" pos:column="25">die<pos:position pos:line="278" pos:column="28"/></name><argument_list pos:line="278" pos:column="28">(<argument><expr><call><name pos:line="278" pos:column="29">_<pos:position pos:line="278" pos:column="30"/></name><argument_list pos:line="278" pos:column="30">(<argument><expr><literal type="string" pos:line="278" pos:column="31">"--no-index or --untracked cannot be used with revs."<pos:position pos:line="278" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="278" pos:column="85"/></argument_list></call></expr></argument>)<pos:position pos:line="278" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="278" pos:column="87"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="279" pos:column="17">hit<pos:position pos:line="279" pos:column="20"/></name> <operator pos:line="279" pos:column="21">=<pos:position pos:line="279" pos:column="22"/></operator> <call><name pos:line="279" pos:column="23">grep_directory<pos:position pos:line="279" pos:column="37"/></name><argument_list pos:line="279" pos:column="37">(<argument><expr><operator pos:line="279" pos:column="38">&amp;<pos:position pos:line="279" pos:column="43"/></operator><name pos:line="279" pos:column="39">opt<pos:position pos:line="279" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="279" pos:column="44">&amp;<pos:position pos:line="279" pos:column="49"/></operator><name pos:line="279" pos:column="45">pathspec<pos:position pos:line="279" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="279" pos:column="55">use_exclude<pos:position pos:line="279" pos:column="66"/></name></expr></argument>)<pos:position pos:line="279" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="279" pos:column="68"/></expr_stmt>
	}<pos:position pos:line="280" pos:column="10"/></block></then> <elseif pos:line="280" pos:column="11">else <if pos:line="280" pos:column="16">if <condition pos:line="280" pos:column="19">(<expr><literal type="number" pos:line="280" pos:column="20">0<pos:position pos:line="280" pos:column="21"/></literal> <operator pos:line="280" pos:column="22">&lt;=<pos:position pos:line="280" pos:column="27"/></operator> <name pos:line="280" pos:column="25">opt_exclude<pos:position pos:line="280" pos:column="36"/></name></expr>)<pos:position pos:line="280" pos:column="37"/></condition><then pos:line="280" pos:column="37"> <block pos:line="280" pos:column="38">{
		<expr_stmt><expr><call><name pos:line="281" pos:column="17">die<pos:position pos:line="281" pos:column="20"/></name><argument_list pos:line="281" pos:column="20">(<argument><expr><call><name pos:line="281" pos:column="21">_<pos:position pos:line="281" pos:column="22"/></name><argument_list pos:line="281" pos:column="22">(<argument><expr><literal type="string" pos:line="281" pos:column="23">"--[no-]exclude-standard cannot be used for tracked contents."<pos:position pos:line="281" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="281" pos:column="86"/></argument_list></call></expr></argument>)<pos:position pos:line="281" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="281" pos:column="88"/></expr_stmt>
	}<pos:position pos:line="282" pos:column="10"/></block></then></if></elseif> <elseif pos:line="282" pos:column="11">else <if pos:line="282" pos:column="16">if <condition pos:line="282" pos:column="19">(<expr><operator pos:line="282" pos:column="20">!<pos:position pos:line="282" pos:column="21"/></operator><name><name pos:line="282" pos:column="21">list<pos:position pos:line="282" pos:column="25"/></name><operator pos:line="282" pos:column="25">.<pos:position pos:line="282" pos:column="26"/></operator><name pos:line="282" pos:column="26">nr<pos:position pos:line="282" pos:column="28"/></name></name></expr>)<pos:position pos:line="282" pos:column="29"/></condition><then pos:line="282" pos:column="29"> <block pos:line="282" pos:column="30">{
		<if pos:line="283" pos:column="17">if <condition pos:line="283" pos:column="20">(<expr><operator pos:line="283" pos:column="21">!<pos:position pos:line="283" pos:column="22"/></operator><name pos:line="283" pos:column="22">cached<pos:position pos:line="283" pos:column="28"/></name></expr>)<pos:position pos:line="283" pos:column="29"/></condition><then pos:line="283" pos:column="29">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="284" pos:column="25">setup_work_tree<pos:position pos:line="284" pos:column="40"/></name><argument_list pos:line="284" pos:column="40">()<pos:position pos:line="284" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="284" pos:column="43"/></expr_stmt></block></then></if>

		<expr_stmt><expr><name pos:line="286" pos:column="17">hit<pos:position pos:line="286" pos:column="20"/></name> <operator pos:line="286" pos:column="21">=<pos:position pos:line="286" pos:column="22"/></operator> <call><name pos:line="286" pos:column="23">grep_cache<pos:position pos:line="286" pos:column="33"/></name><argument_list pos:line="286" pos:column="33">(<argument><expr><operator pos:line="286" pos:column="34">&amp;<pos:position pos:line="286" pos:column="39"/></operator><name pos:line="286" pos:column="35">opt<pos:position pos:line="286" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="286" pos:column="40">&amp;<pos:position pos:line="286" pos:column="45"/></operator><name pos:line="286" pos:column="41">pathspec<pos:position pos:line="286" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="286" pos:column="51">cached<pos:position pos:line="286" pos:column="57"/></name></expr></argument>)<pos:position pos:line="286" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="286" pos:column="59"/></expr_stmt>
	}<pos:position pos:line="287" pos:column="10"/></block></then></if></elseif> <else pos:line="287" pos:column="11">else <block pos:line="287" pos:column="16">{
		<if pos:line="288" pos:column="17">if <condition pos:line="288" pos:column="20">(<expr><name pos:line="288" pos:column="21">cached<pos:position pos:line="288" pos:column="27"/></name></expr>)<pos:position pos:line="288" pos:column="28"/></condition><then pos:line="288" pos:column="28">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="289" pos:column="25">die<pos:position pos:line="289" pos:column="28"/></name><argument_list pos:line="289" pos:column="28">(<argument><expr><call><name pos:line="289" pos:column="29">_<pos:position pos:line="289" pos:column="30"/></name><argument_list pos:line="289" pos:column="30">(<argument><expr><literal type="string" pos:line="289" pos:column="31">"both --cached and trees are given."<pos:position pos:line="289" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="289" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="289" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="289" pos:column="70"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="290" pos:column="17">hit<pos:position pos:line="290" pos:column="20"/></name> <operator pos:line="290" pos:column="21">=<pos:position pos:line="290" pos:column="22"/></operator> <call><name pos:line="290" pos:column="23">grep_objects<pos:position pos:line="290" pos:column="35"/></name><argument_list pos:line="290" pos:column="35">(<argument><expr><operator pos:line="290" pos:column="36">&amp;<pos:position pos:line="290" pos:column="41"/></operator><name pos:line="290" pos:column="37">opt<pos:position pos:line="290" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="290" pos:column="42">&amp;<pos:position pos:line="290" pos:column="47"/></operator><name pos:line="290" pos:column="43">pathspec<pos:position pos:line="290" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="290" pos:column="53">&amp;<pos:position pos:line="290" pos:column="58"/></operator><name pos:line="290" pos:column="54">list<pos:position pos:line="290" pos:column="58"/></name></expr></argument>)<pos:position pos:line="290" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="290" pos:column="60"/></expr_stmt>
	}<pos:position pos:line="291" pos:column="10"/></block></else></if>

	<if pos:line="293" pos:column="9">if <condition pos:line="293" pos:column="12">(<expr><name pos:line="293" pos:column="13">use_threads<pos:position pos:line="293" pos:column="24"/></name></expr>)<pos:position pos:line="293" pos:column="25"/></condition><then pos:line="293" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><name pos:line="294" pos:column="17">hit<pos:position pos:line="294" pos:column="20"/></name> <operator pos:line="294" pos:column="21">|=<pos:position pos:line="294" pos:column="23"/></operator> <call><name pos:line="294" pos:column="24">wait_all<pos:position pos:line="294" pos:column="32"/></name><argument_list pos:line="294" pos:column="32">()<pos:position pos:line="294" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="294" pos:column="35"/></expr_stmt></block></then></if>
	<if pos:line="295" pos:column="9">if <condition pos:line="295" pos:column="12">(<expr><name pos:line="295" pos:column="13">hit<pos:position pos:line="295" pos:column="16"/></name> <operator pos:line="295" pos:column="17">&amp;&amp;<pos:position pos:line="295" pos:column="27"/></operator> <name pos:line="295" pos:column="20">show_in_pager<pos:position pos:line="295" pos:column="33"/></name></expr>)<pos:position pos:line="295" pos:column="34"/></condition><then pos:line="295" pos:column="34">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="296" pos:column="17">run_pager<pos:position pos:line="296" pos:column="26"/></name><argument_list pos:line="296" pos:column="26">(<argument><expr><operator pos:line="296" pos:column="27">&amp;<pos:position pos:line="296" pos:column="32"/></operator><name pos:line="296" pos:column="28">opt<pos:position pos:line="296" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="296" pos:column="33">prefix<pos:position pos:line="296" pos:column="39"/></name></expr></argument>)<pos:position pos:line="296" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="296" pos:column="41"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="297" pos:column="9">free_grep_patterns<pos:position pos:line="297" pos:column="27"/></name><argument_list pos:line="297" pos:column="27">(<argument><expr><operator pos:line="297" pos:column="28">&amp;<pos:position pos:line="297" pos:column="33"/></operator><name pos:line="297" pos:column="29">opt<pos:position pos:line="297" pos:column="32"/></name></expr></argument>)<pos:position pos:line="297" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="297" pos:column="34"/></expr_stmt>
	<return pos:line="298" pos:column="9">return <expr><operator pos:line="298" pos:column="16">!<pos:position pos:line="298" pos:column="17"/></operator><name pos:line="298" pos:column="17">hit<pos:position pos:line="298" pos:column="20"/></name></expr>;<pos:position pos:line="298" pos:column="21"/></return>
}<pos:position pos:line="299" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_899_git-2.13.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier><modifier pos:line="1" pos:column="14">*<pos:position pos:line="1" pos:column="15"/></modifier></type><name pos:line="1" pos:column="15">prep_childenv<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier><specifier pos:line="1" pos:column="41">const<pos:position pos:line="1" pos:column="46"/></specifier> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">deltaenv<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">extern<pos:position pos:line="3" pos:column="15"/></specifier> <type><name pos:line="3" pos:column="16">char<pos:position pos:line="3" pos:column="20"/></name> <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier><modifier pos:line="3" pos:column="22">*<pos:position pos:line="3" pos:column="23"/></modifier></type><name pos:line="3" pos:column="23">environ<pos:position pos:line="3" pos:column="30"/></name></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier><modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">childenv<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">string_list<pos:position pos:line="5" pos:column="27"/></name></name></type> <name pos:line="5" pos:column="28">env<pos:position pos:line="5" pos:column="31"/></name> <init pos:line="5" pos:column="32">= <expr><name pos:line="5" pos:column="34">STRING_LIST_INIT_DUP<pos:position pos:line="5" pos:column="54"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="55"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">strbuf<pos:position pos:line="6" pos:column="22"/></name></name></type> <name pos:line="6" pos:column="23">key<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><name pos:line="6" pos:column="29">STRBUF_INIT<pos:position pos:line="6" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name pos:line="7" pos:column="15">char<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier><specifier pos:line="7" pos:column="21">const<pos:position pos:line="7" pos:column="26"/></specifier> <modifier pos:line="7" pos:column="27">*<pos:position pos:line="7" pos:column="28"/></modifier></type><name pos:line="7" pos:column="28">p<pos:position pos:line="7" pos:column="29"/></name></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">i<pos:position pos:line="8" pos:column="14"/></name></decl>;<pos:position pos:line="8" pos:column="15"/></decl_stmt>

	<comment type="block" pos:line="10" pos:column="9">/* Construct a sorted string list consisting of the current environ */</comment>
	<for pos:line="11" pos:column="9">for <control pos:line="11" pos:column="13">(<init><expr><name pos:line="11" pos:column="14">p<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <operator pos:line="11" pos:column="18">(<pos:position pos:line="11" pos:column="19"/></operator><specifier pos:line="11" pos:column="19">const<pos:position pos:line="11" pos:column="24"/></specifier> <name pos:line="11" pos:column="25">char<pos:position pos:line="11" pos:column="29"/></name> <operator pos:line="11" pos:column="30">*<pos:position pos:line="11" pos:column="31"/></operator><specifier pos:line="11" pos:column="31">const<pos:position pos:line="11" pos:column="36"/></specifier> <operator pos:line="11" pos:column="37">*<pos:position pos:line="11" pos:column="38"/></operator><operator pos:line="11" pos:column="38">)<pos:position pos:line="11" pos:column="39"/></operator> <name pos:line="11" pos:column="40">environ<pos:position pos:line="11" pos:column="47"/></name></expr>;<pos:position pos:line="11" pos:column="48"/></init> <condition><expr><name pos:line="11" pos:column="49">p<pos:position pos:line="11" pos:column="50"/></name> <operator pos:line="11" pos:column="51">&amp;&amp;<pos:position pos:line="11" pos:column="61"/></operator> <operator pos:line="11" pos:column="54">*<pos:position pos:line="11" pos:column="55"/></operator><name pos:line="11" pos:column="55">p<pos:position pos:line="11" pos:column="56"/></name></expr>;<pos:position pos:line="11" pos:column="57"/></condition> <incr><expr><name pos:line="11" pos:column="58">p<pos:position pos:line="11" pos:column="59"/></name><operator pos:line="11" pos:column="59">++<pos:position pos:line="11" pos:column="61"/></operator></expr></incr>)<pos:position pos:line="11" pos:column="62"/></control> <block pos:line="11" pos:column="63">{
		<decl_stmt><decl><type><specifier pos:line="12" pos:column="17">const<pos:position pos:line="12" pos:column="22"/></specifier> <name pos:line="12" pos:column="23">char<pos:position pos:line="12" pos:column="27"/></name> <modifier pos:line="12" pos:column="28">*<pos:position pos:line="12" pos:column="29"/></modifier></type><name pos:line="12" pos:column="29">equals<pos:position pos:line="12" pos:column="35"/></name> <init pos:line="12" pos:column="36">= <expr><call><name pos:line="12" pos:column="38">strchr<pos:position pos:line="12" pos:column="44"/></name><argument_list pos:line="12" pos:column="44">(<argument><expr><operator pos:line="12" pos:column="45">*<pos:position pos:line="12" pos:column="46"/></operator><name pos:line="12" pos:column="46">p<pos:position pos:line="12" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="12" pos:column="49">'='<pos:position pos:line="12" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="54"/></decl_stmt>

		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><name pos:line="14" pos:column="21">equals<pos:position pos:line="14" pos:column="27"/></name></expr>)<pos:position pos:line="14" pos:column="28"/></condition><then pos:line="14" pos:column="28"> <block pos:line="14" pos:column="29">{
			<expr_stmt><expr><call><name pos:line="15" pos:column="25">strbuf_reset<pos:position pos:line="15" pos:column="37"/></name><argument_list pos:line="15" pos:column="37">(<argument><expr><operator pos:line="15" pos:column="38">&amp;<pos:position pos:line="15" pos:column="43"/></operator><name pos:line="15" pos:column="39">key<pos:position pos:line="15" pos:column="42"/></name></expr></argument>)<pos:position pos:line="15" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="44"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="16" pos:column="25">strbuf_add<pos:position pos:line="16" pos:column="35"/></name><argument_list pos:line="16" pos:column="35">(<argument><expr><operator pos:line="16" pos:column="36">&amp;<pos:position pos:line="16" pos:column="41"/></operator><name pos:line="16" pos:column="37">key<pos:position pos:line="16" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="42">*<pos:position pos:line="16" pos:column="43"/></operator><name pos:line="16" pos:column="43">p<pos:position pos:line="16" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="46">equals<pos:position pos:line="16" pos:column="52"/></name> <operator pos:line="16" pos:column="53">-<pos:position pos:line="16" pos:column="54"/></operator> <operator pos:line="16" pos:column="55">*<pos:position pos:line="16" pos:column="56"/></operator><name pos:line="16" pos:column="56">p<pos:position pos:line="16" pos:column="57"/></name></expr></argument>)<pos:position pos:line="16" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="59"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="17" pos:column="25">string_list_append<pos:position pos:line="17" pos:column="43"/></name><argument_list pos:line="17" pos:column="43">(<argument><expr><operator pos:line="17" pos:column="44">&amp;<pos:position pos:line="17" pos:column="49"/></operator><name pos:line="17" pos:column="45">env<pos:position pos:line="17" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="50">key<pos:position pos:line="17" pos:column="53"/></name><operator pos:line="17" pos:column="53">.<pos:position pos:line="17" pos:column="54"/></operator><name pos:line="17" pos:column="54">buf<pos:position pos:line="17" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="58"/></argument_list></call><operator pos:line="17" pos:column="58">-&gt;<pos:position pos:line="17" pos:column="63"/></operator><name pos:line="17" pos:column="60">util<pos:position pos:line="17" pos:column="64"/></name> <operator pos:line="17" pos:column="65">=<pos:position pos:line="17" pos:column="66"/></operator> <operator pos:line="17" pos:column="67">(<pos:position pos:line="17" pos:column="68"/></operator><name pos:line="17" pos:column="68">void<pos:position pos:line="17" pos:column="72"/></name> <operator pos:line="17" pos:column="73">*<pos:position pos:line="17" pos:column="74"/></operator><operator pos:line="17" pos:column="74">)<pos:position pos:line="17" pos:column="75"/></operator> <operator pos:line="17" pos:column="76">*<pos:position pos:line="17" pos:column="77"/></operator><name pos:line="17" pos:column="77">p<pos:position pos:line="17" pos:column="78"/></name></expr>;<pos:position pos:line="17" pos:column="79"/></expr_stmt>
		}<pos:position pos:line="18" pos:column="18"/></block></then> <else pos:line="18" pos:column="19">else <block pos:line="18" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="19" pos:column="25">string_list_append<pos:position pos:line="19" pos:column="43"/></name><argument_list pos:line="19" pos:column="43">(<argument><expr><operator pos:line="19" pos:column="44">&amp;<pos:position pos:line="19" pos:column="49"/></operator><name pos:line="19" pos:column="45">env<pos:position pos:line="19" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="50">*<pos:position pos:line="19" pos:column="51"/></operator><name pos:line="19" pos:column="51">p<pos:position pos:line="19" pos:column="52"/></name></expr></argument>)<pos:position pos:line="19" pos:column="53"/></argument_list></call><operator pos:line="19" pos:column="53">-&gt;<pos:position pos:line="19" pos:column="58"/></operator><name pos:line="19" pos:column="55">util<pos:position pos:line="19" pos:column="59"/></name> <operator pos:line="19" pos:column="60">=<pos:position pos:line="19" pos:column="61"/></operator> <operator pos:line="19" pos:column="62">(<pos:position pos:line="19" pos:column="63"/></operator><name pos:line="19" pos:column="63">void<pos:position pos:line="19" pos:column="67"/></name> <operator pos:line="19" pos:column="68">*<pos:position pos:line="19" pos:column="69"/></operator><operator pos:line="19" pos:column="69">)<pos:position pos:line="19" pos:column="70"/></operator> <operator pos:line="19" pos:column="71">*<pos:position pos:line="19" pos:column="72"/></operator><name pos:line="19" pos:column="72">p<pos:position pos:line="19" pos:column="73"/></name></expr>;<pos:position pos:line="19" pos:column="74"/></expr_stmt>
		}<pos:position pos:line="20" pos:column="18"/></block></else></if>
	}<pos:position pos:line="21" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="22" pos:column="9">string_list_sort<pos:position pos:line="22" pos:column="25"/></name><argument_list pos:line="22" pos:column="25">(<argument><expr><operator pos:line="22" pos:column="26">&amp;<pos:position pos:line="22" pos:column="31"/></operator><name pos:line="22" pos:column="27">env<pos:position pos:line="22" pos:column="30"/></name></expr></argument>)<pos:position pos:line="22" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="32"/></expr_stmt>

	<comment type="block" pos:line="24" pos:column="9">/* Merge in 'deltaenv' with the current environ */</comment>
	<for pos:line="25" pos:column="9">for <control pos:line="25" pos:column="13">(<init><expr><name pos:line="25" pos:column="14">p<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">=<pos:position pos:line="25" pos:column="17"/></operator> <name pos:line="25" pos:column="18">deltaenv<pos:position pos:line="25" pos:column="26"/></name></expr>;<pos:position pos:line="25" pos:column="27"/></init> <condition><expr><name pos:line="25" pos:column="28">p<pos:position pos:line="25" pos:column="29"/></name> <operator pos:line="25" pos:column="30">&amp;&amp;<pos:position pos:line="25" pos:column="40"/></operator> <operator pos:line="25" pos:column="33">*<pos:position pos:line="25" pos:column="34"/></operator><name pos:line="25" pos:column="34">p<pos:position pos:line="25" pos:column="35"/></name></expr>;<pos:position pos:line="25" pos:column="36"/></condition> <incr><expr><name pos:line="25" pos:column="37">p<pos:position pos:line="25" pos:column="38"/></name><operator pos:line="25" pos:column="38">++<pos:position pos:line="25" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="25" pos:column="41"/></control> <block pos:line="25" pos:column="42">{
		<decl_stmt><decl><type><specifier pos:line="26" pos:column="17">const<pos:position pos:line="26" pos:column="22"/></specifier> <name pos:line="26" pos:column="23">char<pos:position pos:line="26" pos:column="27"/></name> <modifier pos:line="26" pos:column="28">*<pos:position pos:line="26" pos:column="29"/></modifier></type><name pos:line="26" pos:column="29">equals<pos:position pos:line="26" pos:column="35"/></name> <init pos:line="26" pos:column="36">= <expr><call><name pos:line="26" pos:column="38">strchr<pos:position pos:line="26" pos:column="44"/></name><argument_list pos:line="26" pos:column="44">(<argument><expr><operator pos:line="26" pos:column="45">*<pos:position pos:line="26" pos:column="46"/></operator><name pos:line="26" pos:column="46">p<pos:position pos:line="26" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="26" pos:column="49">'='<pos:position pos:line="26" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="26" pos:column="54"/></decl_stmt>

		<if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><name pos:line="28" pos:column="21">equals<pos:position pos:line="28" pos:column="27"/></name></expr>)<pos:position pos:line="28" pos:column="28"/></condition><then pos:line="28" pos:column="28"> <block pos:line="28" pos:column="29">{
			<comment type="block" pos:line="29" pos:column="25">/* ('key=value'), insert or replace entry */</comment>
			<expr_stmt><expr><call><name pos:line="30" pos:column="25">strbuf_reset<pos:position pos:line="30" pos:column="37"/></name><argument_list pos:line="30" pos:column="37">(<argument><expr><operator pos:line="30" pos:column="38">&amp;<pos:position pos:line="30" pos:column="43"/></operator><name pos:line="30" pos:column="39">key<pos:position pos:line="30" pos:column="42"/></name></expr></argument>)<pos:position pos:line="30" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="44"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="31" pos:column="25">strbuf_add<pos:position pos:line="31" pos:column="35"/></name><argument_list pos:line="31" pos:column="35">(<argument><expr><operator pos:line="31" pos:column="36">&amp;<pos:position pos:line="31" pos:column="41"/></operator><name pos:line="31" pos:column="37">key<pos:position pos:line="31" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="42">*<pos:position pos:line="31" pos:column="43"/></operator><name pos:line="31" pos:column="43">p<pos:position pos:line="31" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="46">equals<pos:position pos:line="31" pos:column="52"/></name> <operator pos:line="31" pos:column="53">-<pos:position pos:line="31" pos:column="54"/></operator> <operator pos:line="31" pos:column="55">*<pos:position pos:line="31" pos:column="56"/></operator><name pos:line="31" pos:column="56">p<pos:position pos:line="31" pos:column="57"/></name></expr></argument>)<pos:position pos:line="31" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="59"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="32" pos:column="25">string_list_insert<pos:position pos:line="32" pos:column="43"/></name><argument_list pos:line="32" pos:column="43">(<argument><expr><operator pos:line="32" pos:column="44">&amp;<pos:position pos:line="32" pos:column="49"/></operator><name pos:line="32" pos:column="45">env<pos:position pos:line="32" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="50">key<pos:position pos:line="32" pos:column="53"/></name><operator pos:line="32" pos:column="53">.<pos:position pos:line="32" pos:column="54"/></operator><name pos:line="32" pos:column="54">buf<pos:position pos:line="32" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="58"/></argument_list></call><operator pos:line="32" pos:column="58">-&gt;<pos:position pos:line="32" pos:column="63"/></operator><name pos:line="32" pos:column="60">util<pos:position pos:line="32" pos:column="64"/></name> <operator pos:line="32" pos:column="65">=<pos:position pos:line="32" pos:column="66"/></operator> <operator pos:line="32" pos:column="67">(<pos:position pos:line="32" pos:column="68"/></operator><name pos:line="32" pos:column="68">void<pos:position pos:line="32" pos:column="72"/></name> <operator pos:line="32" pos:column="73">*<pos:position pos:line="32" pos:column="74"/></operator><operator pos:line="32" pos:column="74">)<pos:position pos:line="32" pos:column="75"/></operator> <operator pos:line="32" pos:column="76">*<pos:position pos:line="32" pos:column="77"/></operator><name pos:line="32" pos:column="77">p<pos:position pos:line="32" pos:column="78"/></name></expr>;<pos:position pos:line="32" pos:column="79"/></expr_stmt>
		}<pos:position pos:line="33" pos:column="18"/></block></then> <else pos:line="33" pos:column="19">else <block pos:line="33" pos:column="24">{
			<comment type="block" pos:line="34" pos:column="25">/* otherwise ('key') remove existing entry */</comment>
			<expr_stmt><expr><call><name pos:line="35" pos:column="25">string_list_remove<pos:position pos:line="35" pos:column="43"/></name><argument_list pos:line="35" pos:column="43">(<argument><expr><operator pos:line="35" pos:column="44">&amp;<pos:position pos:line="35" pos:column="49"/></operator><name pos:line="35" pos:column="45">env<pos:position pos:line="35" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="50">*<pos:position pos:line="35" pos:column="51"/></operator><name pos:line="35" pos:column="51">p<pos:position pos:line="35" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="54">0<pos:position pos:line="35" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="57"/></expr_stmt>
		}<pos:position pos:line="36" pos:column="18"/></block></else></if>
	}<pos:position pos:line="37" pos:column="10"/></block></for>

	<comment type="block" pos:line="39" pos:column="9">/* Create an array of 'char *' to be used as the childenv */</comment>
	<expr_stmt><expr><name pos:line="40" pos:column="9">childenv<pos:position pos:line="40" pos:column="17"/></name> <operator pos:line="40" pos:column="18">=<pos:position pos:line="40" pos:column="19"/></operator> <call><name pos:line="40" pos:column="20">xmalloc<pos:position pos:line="40" pos:column="27"/></name><argument_list pos:line="40" pos:column="27">(<argument><expr><operator pos:line="40" pos:column="28">(<pos:position pos:line="40" pos:column="29"/></operator><name><name pos:line="40" pos:column="29">env<pos:position pos:line="40" pos:column="32"/></name><operator pos:line="40" pos:column="32">.<pos:position pos:line="40" pos:column="33"/></operator><name pos:line="40" pos:column="33">nr<pos:position pos:line="40" pos:column="35"/></name></name> <operator pos:line="40" pos:column="36">+<pos:position pos:line="40" pos:column="37"/></operator> <literal type="number" pos:line="40" pos:column="38">1<pos:position pos:line="40" pos:column="39"/></literal><operator pos:line="40" pos:column="39">)<pos:position pos:line="40" pos:column="40"/></operator> <operator pos:line="40" pos:column="41">*<pos:position pos:line="40" pos:column="42"/></operator> <sizeof pos:line="40" pos:column="43">sizeof<argument_list pos:line="40" pos:column="49">(<argument><expr><name pos:line="40" pos:column="50">char<pos:position pos:line="40" pos:column="54"/></name> <operator pos:line="40" pos:column="55">*<pos:position pos:line="40" pos:column="56"/></operator></expr></argument>)<pos:position pos:line="40" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="40" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="59"/></expr_stmt>
	<for pos:line="41" pos:column="9">for <control pos:line="41" pos:column="13">(<init><expr><name pos:line="41" pos:column="14">i<pos:position pos:line="41" pos:column="15"/></name> <operator pos:line="41" pos:column="16">=<pos:position pos:line="41" pos:column="17"/></operator> <literal type="number" pos:line="41" pos:column="18">0<pos:position pos:line="41" pos:column="19"/></literal></expr>;<pos:position pos:line="41" pos:column="20"/></init> <condition><expr><name pos:line="41" pos:column="21">i<pos:position pos:line="41" pos:column="22"/></name> <operator pos:line="41" pos:column="23">&lt;<pos:position pos:line="41" pos:column="27"/></operator> <name><name pos:line="41" pos:column="25">env<pos:position pos:line="41" pos:column="28"/></name><operator pos:line="41" pos:column="28">.<pos:position pos:line="41" pos:column="29"/></operator><name pos:line="41" pos:column="29">nr<pos:position pos:line="41" pos:column="31"/></name></name></expr>;<pos:position pos:line="41" pos:column="32"/></condition> <incr><expr><name pos:line="41" pos:column="33">i<pos:position pos:line="41" pos:column="34"/></name><operator pos:line="41" pos:column="34">++<pos:position pos:line="41" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="41" pos:column="37"/></control>
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="42" pos:column="17">childenv<pos:position pos:line="42" pos:column="25"/></name><index pos:line="42" pos:column="25">[<expr><name pos:line="42" pos:column="26">i<pos:position pos:line="42" pos:column="27"/></name></expr>]<pos:position pos:line="42" pos:column="28"/></index></name> <operator pos:line="42" pos:column="29">=<pos:position pos:line="42" pos:column="30"/></operator> <name><name pos:line="42" pos:column="31">env<pos:position pos:line="42" pos:column="34"/></name><operator pos:line="42" pos:column="34">.<pos:position pos:line="42" pos:column="35"/></operator><name pos:line="42" pos:column="35">items<pos:position pos:line="42" pos:column="40"/></name><index pos:line="42" pos:column="40">[<expr><name pos:line="42" pos:column="41">i<pos:position pos:line="42" pos:column="42"/></name></expr>]<pos:position pos:line="42" pos:column="43"/></index></name><operator pos:line="42" pos:column="43">.<pos:position pos:line="42" pos:column="44"/></operator><name pos:line="42" pos:column="44">util<pos:position pos:line="42" pos:column="48"/></name></expr>;<pos:position pos:line="42" pos:column="49"/></expr_stmt></block></for>
	<expr_stmt><expr><name><name pos:line="43" pos:column="9">childenv<pos:position pos:line="43" pos:column="17"/></name><index pos:line="43" pos:column="17">[<expr><name><name pos:line="43" pos:column="18">env<pos:position pos:line="43" pos:column="21"/></name><operator pos:line="43" pos:column="21">.<pos:position pos:line="43" pos:column="22"/></operator><name pos:line="43" pos:column="22">nr<pos:position pos:line="43" pos:column="24"/></name></name></expr>]<pos:position pos:line="43" pos:column="25"/></index></name> <operator pos:line="43" pos:column="26">=<pos:position pos:line="43" pos:column="27"/></operator> <name pos:line="43" pos:column="28">NULL<pos:position pos:line="43" pos:column="32"/></name></expr>;<pos:position pos:line="43" pos:column="33"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="45" pos:column="9">string_list_clear<pos:position pos:line="45" pos:column="26"/></name><argument_list pos:line="45" pos:column="26">(<argument><expr><operator pos:line="45" pos:column="27">&amp;<pos:position pos:line="45" pos:column="32"/></operator><name pos:line="45" pos:column="28">env<pos:position pos:line="45" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="33">0<pos:position pos:line="45" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="46" pos:column="9">strbuf_release<pos:position pos:line="46" pos:column="23"/></name><argument_list pos:line="46" pos:column="23">(<argument><expr><operator pos:line="46" pos:column="24">&amp;<pos:position pos:line="46" pos:column="29"/></operator><name pos:line="46" pos:column="25">key<pos:position pos:line="46" pos:column="28"/></name></expr></argument>)<pos:position pos:line="46" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="30"/></expr_stmt>
	<return pos:line="47" pos:column="9">return <expr><name pos:line="47" pos:column="16">childenv<pos:position pos:line="47" pos:column="24"/></name></expr>;<pos:position pos:line="47" pos:column="25"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

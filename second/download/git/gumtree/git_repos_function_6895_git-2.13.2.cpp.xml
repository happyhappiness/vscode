<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6895_git-2.13.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">reg_errcode_t<pos:position pos:line="1" pos:column="21"/></name>
<name pos:line="2" pos:column="1">internal_function<pos:position pos:line="2" pos:column="18"/></name></type>
<name pos:line="3" pos:column="1">match_ctx_add_subtop<pos:position pos:line="3" pos:column="21"/></name> <parameter_list pos:line="3" pos:column="22">(<parameter><decl><type><name pos:line="3" pos:column="23">re_match_context_t<pos:position pos:line="3" pos:column="41"/></name> <modifier pos:line="3" pos:column="42">*<pos:position pos:line="3" pos:column="43"/></modifier></type><name pos:line="3" pos:column="43">mctx<pos:position pos:line="3" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="49">int<pos:position pos:line="3" pos:column="52"/></name></type> <name pos:line="3" pos:column="53">node<pos:position pos:line="3" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="59">int<pos:position pos:line="3" pos:column="62"/></name></type> <name pos:line="3" pos:column="63">str_idx<pos:position pos:line="3" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="71"/></parameter_list>
<block pos:line="4" pos:column="1">{
<cpp:ifdef pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">ifdef<pos:position pos:line="5" pos:column="7"/></cpp:directive> <name pos:line="5" pos:column="8">DEBUG<pos:position pos:line="5" pos:column="13"/></name></cpp:ifdef>
  <expr_stmt><expr><call><name pos:line="6" pos:column="3">assert<pos:position pos:line="6" pos:column="9"/></name> <argument_list pos:line="6" pos:column="10">(<argument><expr><name><name pos:line="6" pos:column="11">mctx<pos:position pos:line="6" pos:column="15"/></name><operator pos:line="6" pos:column="15">-&gt;<pos:position pos:line="6" pos:column="20"/></operator><name pos:line="6" pos:column="17">sub_tops<pos:position pos:line="6" pos:column="25"/></name></name> <operator pos:line="6" pos:column="26">!=<pos:position pos:line="6" pos:column="28"/></operator> <name pos:line="6" pos:column="29">NULL<pos:position pos:line="6" pos:column="33"/></name></expr></argument>)<pos:position pos:line="6" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="7" pos:column="3">assert<pos:position pos:line="7" pos:column="9"/></name> <argument_list pos:line="7" pos:column="10">(<argument><expr><name><name pos:line="7" pos:column="11">mctx<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">-&gt;<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="17">asub_tops<pos:position pos:line="7" pos:column="26"/></name></name> <operator pos:line="7" pos:column="27">&gt;<pos:position pos:line="7" pos:column="31"/></operator> <literal type="number" pos:line="7" pos:column="29">0<pos:position pos:line="7" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="32"/></expr_stmt>
<cpp:endif pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">endif<pos:position pos:line="8" pos:column="7"/></cpp:directive></cpp:endif>
  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><call><name pos:line="9" pos:column="7">BE<pos:position pos:line="9" pos:column="9"/></name> <argument_list pos:line="9" pos:column="10">(<argument><expr><name><name pos:line="9" pos:column="11">mctx<pos:position pos:line="9" pos:column="15"/></name><operator pos:line="9" pos:column="15">-&gt;<pos:position pos:line="9" pos:column="20"/></operator><name pos:line="9" pos:column="17">nsub_tops<pos:position pos:line="9" pos:column="26"/></name></name> <operator pos:line="9" pos:column="27">==<pos:position pos:line="9" pos:column="29"/></operator> <name><name pos:line="9" pos:column="30">mctx<pos:position pos:line="9" pos:column="34"/></name><operator pos:line="9" pos:column="34">-&gt;<pos:position pos:line="9" pos:column="39"/></operator><name pos:line="9" pos:column="36">asub_tops<pos:position pos:line="9" pos:column="45"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="47">0<pos:position pos:line="9" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="50"/></condition><then pos:line="9" pos:column="50">
    <block pos:line="10" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="11" pos:column="7">int<pos:position pos:line="11" pos:column="10"/></name></type> <name pos:line="11" pos:column="11">new_asub_tops<pos:position pos:line="11" pos:column="24"/></name> <init pos:line="11" pos:column="25">= <expr><name><name pos:line="11" pos:column="27">mctx<pos:position pos:line="11" pos:column="31"/></name><operator pos:line="11" pos:column="31">-&gt;<pos:position pos:line="11" pos:column="36"/></operator><name pos:line="11" pos:column="33">asub_tops<pos:position pos:line="11" pos:column="42"/></name></name> <operator pos:line="11" pos:column="43">*<pos:position pos:line="11" pos:column="44"/></operator> <literal type="number" pos:line="11" pos:column="45">2<pos:position pos:line="11" pos:column="46"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="47"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="12" pos:column="7">re_sub_match_top_t<pos:position pos:line="12" pos:column="25"/></name> <modifier pos:line="12" pos:column="26">*<pos:position pos:line="12" pos:column="27"/></modifier><modifier pos:line="12" pos:column="27">*<pos:position pos:line="12" pos:column="28"/></modifier></type><name pos:line="12" pos:column="28">new_array<pos:position pos:line="12" pos:column="37"/></name> <init pos:line="12" pos:column="38">= <expr><call><name pos:line="12" pos:column="40">re_realloc<pos:position pos:line="12" pos:column="50"/></name> <argument_list pos:line="12" pos:column="51">(<argument><expr><name><name pos:line="12" pos:column="52">mctx<pos:position pos:line="12" pos:column="56"/></name><operator pos:line="12" pos:column="56">-&gt;<pos:position pos:line="12" pos:column="61"/></operator><name pos:line="12" pos:column="58">sub_tops<pos:position pos:line="12" pos:column="66"/></name></name></expr></argument>,
						   <argument><expr><name pos:line="13" pos:column="52">re_sub_match_top_t<pos:position pos:line="13" pos:column="70"/></name> <operator pos:line="13" pos:column="71">*<pos:position pos:line="13" pos:column="72"/></operator></expr></argument>,
						   <argument><expr><name pos:line="14" pos:column="52">new_asub_tops<pos:position pos:line="14" pos:column="65"/></name></expr></argument>)<pos:position pos:line="14" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="67"/></decl_stmt>
      <if pos:line="15" pos:column="7">if <condition pos:line="15" pos:column="10">(<expr><call><name pos:line="15" pos:column="11">BE<pos:position pos:line="15" pos:column="13"/></name> <argument_list pos:line="15" pos:column="14">(<argument><expr><name pos:line="15" pos:column="15">new_array<pos:position pos:line="15" pos:column="24"/></name> <operator pos:line="15" pos:column="25">==<pos:position pos:line="15" pos:column="27"/></operator> <name pos:line="15" pos:column="28">NULL<pos:position pos:line="15" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="34">0<pos:position pos:line="15" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="37"/></condition><then pos:line="15" pos:column="37">
	<block type="pseudo"><return pos:line="16" pos:column="9">return <expr><name pos:line="16" pos:column="16">REG_ESPACE<pos:position pos:line="16" pos:column="26"/></name></expr>;<pos:position pos:line="16" pos:column="27"/></return></block></then></if>
      <expr_stmt><expr><name><name pos:line="17" pos:column="7">mctx<pos:position pos:line="17" pos:column="11"/></name><operator pos:line="17" pos:column="11">-&gt;<pos:position pos:line="17" pos:column="16"/></operator><name pos:line="17" pos:column="13">sub_tops<pos:position pos:line="17" pos:column="21"/></name></name> <operator pos:line="17" pos:column="22">=<pos:position pos:line="17" pos:column="23"/></operator> <name pos:line="17" pos:column="24">new_array<pos:position pos:line="17" pos:column="33"/></name></expr>;<pos:position pos:line="17" pos:column="34"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="18" pos:column="7">mctx<pos:position pos:line="18" pos:column="11"/></name><operator pos:line="18" pos:column="11">-&gt;<pos:position pos:line="18" pos:column="16"/></operator><name pos:line="18" pos:column="13">asub_tops<pos:position pos:line="18" pos:column="22"/></name></name> <operator pos:line="18" pos:column="23">=<pos:position pos:line="18" pos:column="24"/></operator> <name pos:line="18" pos:column="25">new_asub_tops<pos:position pos:line="18" pos:column="38"/></name></expr>;<pos:position pos:line="18" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>
  <expr_stmt><expr><name><name pos:line="20" pos:column="3">mctx<pos:position pos:line="20" pos:column="7"/></name><operator pos:line="20" pos:column="7">-&gt;<pos:position pos:line="20" pos:column="12"/></operator><name pos:line="20" pos:column="9">sub_tops<pos:position pos:line="20" pos:column="17"/></name><index pos:line="20" pos:column="17">[<expr><name><name pos:line="20" pos:column="18">mctx<pos:position pos:line="20" pos:column="22"/></name><operator pos:line="20" pos:column="22">-&gt;<pos:position pos:line="20" pos:column="27"/></operator><name pos:line="20" pos:column="24">nsub_tops<pos:position pos:line="20" pos:column="33"/></name></name></expr>]<pos:position pos:line="20" pos:column="34"/></index></name> <operator pos:line="20" pos:column="35">=<pos:position pos:line="20" pos:column="36"/></operator> <call><name pos:line="20" pos:column="37">calloc<pos:position pos:line="20" pos:column="43"/></name> <argument_list pos:line="20" pos:column="44">(<argument><expr><literal type="number" pos:line="20" pos:column="45">1<pos:position pos:line="20" pos:column="46"/></literal></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="48">sizeof <argument_list pos:line="20" pos:column="55">(<argument><expr><name pos:line="20" pos:column="56">re_sub_match_top_t<pos:position pos:line="20" pos:column="74"/></name></expr></argument>)<pos:position pos:line="20" pos:column="75"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="77"/></expr_stmt>
  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><call><name pos:line="21" pos:column="7">BE<pos:position pos:line="21" pos:column="9"/></name> <argument_list pos:line="21" pos:column="10">(<argument><expr><name><name pos:line="21" pos:column="11">mctx<pos:position pos:line="21" pos:column="15"/></name><operator pos:line="21" pos:column="15">-&gt;<pos:position pos:line="21" pos:column="20"/></operator><name pos:line="21" pos:column="17">sub_tops<pos:position pos:line="21" pos:column="25"/></name><index pos:line="21" pos:column="25">[<expr><name><name pos:line="21" pos:column="26">mctx<pos:position pos:line="21" pos:column="30"/></name><operator pos:line="21" pos:column="30">-&gt;<pos:position pos:line="21" pos:column="35"/></operator><name pos:line="21" pos:column="32">nsub_tops<pos:position pos:line="21" pos:column="41"/></name></name></expr>]<pos:position pos:line="21" pos:column="42"/></index></name> <operator pos:line="21" pos:column="43">==<pos:position pos:line="21" pos:column="45"/></operator> <name pos:line="21" pos:column="46">NULL<pos:position pos:line="21" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="52">0<pos:position pos:line="21" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="55"/></condition><then pos:line="21" pos:column="55">
    <block type="pseudo"><return pos:line="22" pos:column="5">return <expr><name pos:line="22" pos:column="12">REG_ESPACE<pos:position pos:line="22" pos:column="22"/></name></expr>;<pos:position pos:line="22" pos:column="23"/></return></block></then></if>
  <expr_stmt><expr><name><name pos:line="23" pos:column="3">mctx<pos:position pos:line="23" pos:column="7"/></name><operator pos:line="23" pos:column="7">-&gt;<pos:position pos:line="23" pos:column="12"/></operator><name pos:line="23" pos:column="9">sub_tops<pos:position pos:line="23" pos:column="17"/></name><index pos:line="23" pos:column="17">[<expr><name><name pos:line="23" pos:column="18">mctx<pos:position pos:line="23" pos:column="22"/></name><operator pos:line="23" pos:column="22">-&gt;<pos:position pos:line="23" pos:column="27"/></operator><name pos:line="23" pos:column="24">nsub_tops<pos:position pos:line="23" pos:column="33"/></name></name></expr>]<pos:position pos:line="23" pos:column="34"/></index></name><operator pos:line="23" pos:column="34">-&gt;<pos:position pos:line="23" pos:column="39"/></operator><name pos:line="23" pos:column="36">node<pos:position pos:line="23" pos:column="40"/></name> <operator pos:line="23" pos:column="41">=<pos:position pos:line="23" pos:column="42"/></operator> <name pos:line="23" pos:column="43">node<pos:position pos:line="23" pos:column="47"/></name></expr>;<pos:position pos:line="23" pos:column="48"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="24" pos:column="3">mctx<pos:position pos:line="24" pos:column="7"/></name><operator pos:line="24" pos:column="7">-&gt;<pos:position pos:line="24" pos:column="12"/></operator><name pos:line="24" pos:column="9">sub_tops<pos:position pos:line="24" pos:column="17"/></name><index pos:line="24" pos:column="17">[<expr><name><name pos:line="24" pos:column="18">mctx<pos:position pos:line="24" pos:column="22"/></name><operator pos:line="24" pos:column="22">-&gt;<pos:position pos:line="24" pos:column="27"/></operator><name pos:line="24" pos:column="24">nsub_tops<pos:position pos:line="24" pos:column="33"/></name></name><operator pos:line="24" pos:column="33">++<pos:position pos:line="24" pos:column="35"/></operator></expr>]<pos:position pos:line="24" pos:column="36"/></index></name><operator pos:line="24" pos:column="36">-&gt;<pos:position pos:line="24" pos:column="41"/></operator><name pos:line="24" pos:column="38">str_idx<pos:position pos:line="24" pos:column="45"/></name> <operator pos:line="24" pos:column="46">=<pos:position pos:line="24" pos:column="47"/></operator> <name pos:line="24" pos:column="48">str_idx<pos:position pos:line="24" pos:column="55"/></name></expr>;<pos:position pos:line="24" pos:column="56"/></expr_stmt>
  <return pos:line="25" pos:column="3">return <expr><name pos:line="25" pos:column="10">REG_NOERROR<pos:position pos:line="25" pos:column="21"/></name></expr>;<pos:position pos:line="25" pos:column="22"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

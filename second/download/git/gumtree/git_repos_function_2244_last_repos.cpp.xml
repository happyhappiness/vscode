<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2244_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">off_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">get_delta_base<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name><name pos:line="1" pos:column="29">struct<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">packed_git<pos:position pos:line="1" pos:column="46"/></name></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">p<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>,
				    <parameter><decl><type><name><name pos:line="2" pos:column="37">struct<pos:position pos:line="2" pos:column="43"/></name> <name pos:line="2" pos:column="44">pack_window<pos:position pos:line="2" pos:column="55"/></name></name> <modifier pos:line="2" pos:column="56">*<pos:position pos:line="2" pos:column="57"/></modifier><modifier pos:line="2" pos:column="57">*<pos:position pos:line="2" pos:column="58"/></modifier></type><name pos:line="2" pos:column="58">w_curs<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>,
				    <parameter><decl><type><name pos:line="3" pos:column="37">off_t<pos:position pos:line="3" pos:column="42"/></name> <modifier pos:line="3" pos:column="43">*<pos:position pos:line="3" pos:column="44"/></modifier></type><name pos:line="3" pos:column="44">curpos<pos:position pos:line="3" pos:column="50"/></name></decl></parameter>,
				    <parameter><decl><type><name><name pos:line="4" pos:column="37">enum<pos:position pos:line="4" pos:column="41"/></name> <name pos:line="4" pos:column="42">object_type<pos:position pos:line="4" pos:column="53"/></name></name></type> <name pos:line="4" pos:column="54">type<pos:position pos:line="4" pos:column="58"/></name></decl></parameter>,
				    <parameter><decl><type><name pos:line="5" pos:column="37">off_t<pos:position pos:line="5" pos:column="42"/></name></type> <name pos:line="5" pos:column="43">delta_obj_offset<pos:position pos:line="5" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="60"/></parameter_list>
<block pos:line="6" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">unsigned<pos:position pos:line="7" pos:column="17"/></name> <name pos:line="7" pos:column="18">char<pos:position pos:line="7" pos:column="22"/></name> <modifier pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></modifier></type><name pos:line="7" pos:column="24">base_info<pos:position pos:line="7" pos:column="33"/></name> <init pos:line="7" pos:column="34">= <expr><call><name pos:line="7" pos:column="36">use_pack<pos:position pos:line="7" pos:column="44"/></name><argument_list pos:line="7" pos:column="44">(<argument><expr><name pos:line="7" pos:column="45">p<pos:position pos:line="7" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="48">w_curs<pos:position pos:line="7" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="56">*<pos:position pos:line="7" pos:column="57"/></operator><name pos:line="7" pos:column="57">curpos<pos:position pos:line="7" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="65">NULL<pos:position pos:line="7" pos:column="69"/></name></expr></argument>)<pos:position pos:line="7" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="71"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">off_t<pos:position pos:line="8" pos:column="14"/></name></type> <name pos:line="8" pos:column="15">base_offset<pos:position pos:line="8" pos:column="26"/></name></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>

	<comment type="block" pos:line="10" pos:column="9">/* use_pack() assured us we have [base_info, base_info + 20)
	 * as a range that we can look at without walking off the
	 * end of the mapped window.  Its actually the hash size
	 * that is assured.  An OFS_DELTA longer than the hash size
	 * is stupid, as then a REF_DELTA would be smaller to store.
	 */</comment>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">type<pos:position pos:line="16" pos:column="17"/></name> <operator pos:line="16" pos:column="18">==<pos:position pos:line="16" pos:column="20"/></operator> <name pos:line="16" pos:column="21">OBJ_OFS_DELTA<pos:position pos:line="16" pos:column="34"/></name></expr>)<pos:position pos:line="16" pos:column="35"/></condition><then pos:line="16" pos:column="35"> <block pos:line="16" pos:column="36">{
		<decl_stmt><decl><type><name pos:line="17" pos:column="17">unsigned<pos:position pos:line="17" pos:column="25"/></name></type> <name pos:line="17" pos:column="26">used<pos:position pos:line="17" pos:column="30"/></name> <init pos:line="17" pos:column="31">= <expr><literal type="number" pos:line="17" pos:column="33">0<pos:position pos:line="17" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="17" pos:column="35"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="18" pos:column="17">unsigned<pos:position pos:line="18" pos:column="25"/></name> <name pos:line="18" pos:column="26">char<pos:position pos:line="18" pos:column="30"/></name></type> <name pos:line="18" pos:column="31">c<pos:position pos:line="18" pos:column="32"/></name> <init pos:line="18" pos:column="33">= <expr><name><name pos:line="18" pos:column="35">base_info<pos:position pos:line="18" pos:column="44"/></name><index pos:line="18" pos:column="44">[<expr><name pos:line="18" pos:column="45">used<pos:position pos:line="18" pos:column="49"/></name><operator pos:line="18" pos:column="49">++<pos:position pos:line="18" pos:column="51"/></operator></expr>]<pos:position pos:line="18" pos:column="52"/></index></name></expr></init></decl>;<pos:position pos:line="18" pos:column="53"/></decl_stmt>
		<expr_stmt><expr><name pos:line="19" pos:column="17">base_offset<pos:position pos:line="19" pos:column="28"/></name> <operator pos:line="19" pos:column="29">=<pos:position pos:line="19" pos:column="30"/></operator> <name pos:line="19" pos:column="31">c<pos:position pos:line="19" pos:column="32"/></name> <operator pos:line="19" pos:column="33">&amp;<pos:position pos:line="19" pos:column="38"/></operator> <literal type="number" pos:line="19" pos:column="35">127<pos:position pos:line="19" pos:column="38"/></literal></expr>;<pos:position pos:line="19" pos:column="39"/></expr_stmt>
		<while pos:line="20" pos:column="17">while <condition pos:line="20" pos:column="23">(<expr><name pos:line="20" pos:column="24">c<pos:position pos:line="20" pos:column="25"/></name> <operator pos:line="20" pos:column="26">&amp;<pos:position pos:line="20" pos:column="31"/></operator> <literal type="number" pos:line="20" pos:column="28">128<pos:position pos:line="20" pos:column="31"/></literal></expr>)<pos:position pos:line="20" pos:column="32"/></condition> <block pos:line="20" pos:column="33">{
			<expr_stmt><expr><name pos:line="21" pos:column="25">base_offset<pos:position pos:line="21" pos:column="36"/></name> <operator pos:line="21" pos:column="37">+=<pos:position pos:line="21" pos:column="39"/></operator> <literal type="number" pos:line="21" pos:column="40">1<pos:position pos:line="21" pos:column="41"/></literal></expr>;<pos:position pos:line="21" pos:column="42"/></expr_stmt>
			<if pos:line="22" pos:column="25">if <condition pos:line="22" pos:column="28">(<expr><operator pos:line="22" pos:column="29">!<pos:position pos:line="22" pos:column="30"/></operator><name pos:line="22" pos:column="30">base_offset<pos:position pos:line="22" pos:column="41"/></name> <operator pos:line="22" pos:column="42">||<pos:position pos:line="22" pos:column="44"/></operator> <call><name pos:line="22" pos:column="45">MSB<pos:position pos:line="22" pos:column="48"/></name><argument_list pos:line="22" pos:column="48">(<argument><expr><name pos:line="22" pos:column="49">base_offset<pos:position pos:line="22" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="62">7<pos:position pos:line="22" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="65"/></condition><then pos:line="22" pos:column="65">
				<block type="pseudo"><return pos:line="23" pos:column="33">return <expr><literal type="number" pos:line="23" pos:column="40">0<pos:position pos:line="23" pos:column="41"/></literal></expr>;<pos:position pos:line="23" pos:column="42"/></return></block></then></if>  <comment type="block" pos:line="23" pos:column="44">/* overflow */</comment>
			<expr_stmt><expr><name pos:line="24" pos:column="25">c<pos:position pos:line="24" pos:column="26"/></name> <operator pos:line="24" pos:column="27">=<pos:position pos:line="24" pos:column="28"/></operator> <name><name pos:line="24" pos:column="29">base_info<pos:position pos:line="24" pos:column="38"/></name><index pos:line="24" pos:column="38">[<expr><name pos:line="24" pos:column="39">used<pos:position pos:line="24" pos:column="43"/></name><operator pos:line="24" pos:column="43">++<pos:position pos:line="24" pos:column="45"/></operator></expr>]<pos:position pos:line="24" pos:column="46"/></index></name></expr>;<pos:position pos:line="24" pos:column="47"/></expr_stmt>
			<expr_stmt><expr><name pos:line="25" pos:column="25">base_offset<pos:position pos:line="25" pos:column="36"/></name> <operator pos:line="25" pos:column="37">=<pos:position pos:line="25" pos:column="38"/></operator> <operator pos:line="25" pos:column="39">(<pos:position pos:line="25" pos:column="40"/></operator><name pos:line="25" pos:column="40">base_offset<pos:position pos:line="25" pos:column="51"/></name> <operator pos:line="25" pos:column="52">&lt;&lt;<pos:position pos:line="25" pos:column="60"/></operator> <literal type="number" pos:line="25" pos:column="55">7<pos:position pos:line="25" pos:column="56"/></literal><operator pos:line="25" pos:column="56">)<pos:position pos:line="25" pos:column="57"/></operator> <operator pos:line="25" pos:column="58">+<pos:position pos:line="25" pos:column="59"/></operator> <operator pos:line="25" pos:column="60">(<pos:position pos:line="25" pos:column="61"/></operator><name pos:line="25" pos:column="61">c<pos:position pos:line="25" pos:column="62"/></name> <operator pos:line="25" pos:column="63">&amp;<pos:position pos:line="25" pos:column="68"/></operator> <literal type="number" pos:line="25" pos:column="65">127<pos:position pos:line="25" pos:column="68"/></literal><operator pos:line="25" pos:column="68">)<pos:position pos:line="25" pos:column="69"/></operator></expr>;<pos:position pos:line="25" pos:column="70"/></expr_stmt>
		}<pos:position pos:line="26" pos:column="18"/></block></while>
		<expr_stmt><expr><name pos:line="27" pos:column="17">base_offset<pos:position pos:line="27" pos:column="28"/></name> <operator pos:line="27" pos:column="29">=<pos:position pos:line="27" pos:column="30"/></operator> <name pos:line="27" pos:column="31">delta_obj_offset<pos:position pos:line="27" pos:column="47"/></name> <operator pos:line="27" pos:column="48">-<pos:position pos:line="27" pos:column="49"/></operator> <name pos:line="27" pos:column="50">base_offset<pos:position pos:line="27" pos:column="61"/></name></expr>;<pos:position pos:line="27" pos:column="62"/></expr_stmt>
		<if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><name pos:line="28" pos:column="21">base_offset<pos:position pos:line="28" pos:column="32"/></name> <operator pos:line="28" pos:column="33">&lt;=<pos:position pos:line="28" pos:column="38"/></operator> <literal type="number" pos:line="28" pos:column="36">0<pos:position pos:line="28" pos:column="37"/></literal> <operator pos:line="28" pos:column="38">||<pos:position pos:line="28" pos:column="40"/></operator> <name pos:line="28" pos:column="41">base_offset<pos:position pos:line="28" pos:column="52"/></name> <operator pos:line="28" pos:column="53">&gt;=<pos:position pos:line="28" pos:column="58"/></operator> <name pos:line="28" pos:column="56">delta_obj_offset<pos:position pos:line="28" pos:column="72"/></name></expr>)<pos:position pos:line="28" pos:column="73"/></condition><then pos:line="28" pos:column="73">
			<block type="pseudo"><return pos:line="29" pos:column="25">return <expr><literal type="number" pos:line="29" pos:column="32">0<pos:position pos:line="29" pos:column="33"/></literal></expr>;<pos:position pos:line="29" pos:column="34"/></return></block></then></if>  <comment type="block" pos:line="29" pos:column="36">/* out of bound */</comment>
		<expr_stmt><expr><operator pos:line="30" pos:column="17">*<pos:position pos:line="30" pos:column="18"/></operator><name pos:line="30" pos:column="18">curpos<pos:position pos:line="30" pos:column="24"/></name> <operator pos:line="30" pos:column="25">+=<pos:position pos:line="30" pos:column="27"/></operator> <name pos:line="30" pos:column="28">used<pos:position pos:line="30" pos:column="32"/></name></expr>;<pos:position pos:line="30" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="31" pos:column="10"/></block></then> <elseif pos:line="31" pos:column="11">else <if pos:line="31" pos:column="16">if <condition pos:line="31" pos:column="19">(<expr><name pos:line="31" pos:column="20">type<pos:position pos:line="31" pos:column="24"/></name> <operator pos:line="31" pos:column="25">==<pos:position pos:line="31" pos:column="27"/></operator> <name pos:line="31" pos:column="28">OBJ_REF_DELTA<pos:position pos:line="31" pos:column="41"/></name></expr>)<pos:position pos:line="31" pos:column="42"/></condition><then pos:line="31" pos:column="42"> <block pos:line="31" pos:column="43">{
		<comment type="block" pos:line="32" pos:column="17">/* The base entry _must_ be in the same pack */</comment>
		<expr_stmt><expr><name pos:line="33" pos:column="17">base_offset<pos:position pos:line="33" pos:column="28"/></name> <operator pos:line="33" pos:column="29">=<pos:position pos:line="33" pos:column="30"/></operator> <call><name pos:line="33" pos:column="31">find_pack_entry_one<pos:position pos:line="33" pos:column="50"/></name><argument_list pos:line="33" pos:column="50">(<argument><expr><name pos:line="33" pos:column="51">base_info<pos:position pos:line="33" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="62">p<pos:position pos:line="33" pos:column="63"/></name></expr></argument>)<pos:position pos:line="33" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="65"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="34" pos:column="17">*<pos:position pos:line="34" pos:column="18"/></operator><name pos:line="34" pos:column="18">curpos<pos:position pos:line="34" pos:column="24"/></name> <operator pos:line="34" pos:column="25">+=<pos:position pos:line="34" pos:column="27"/></operator> <literal type="number" pos:line="34" pos:column="28">20<pos:position pos:line="34" pos:column="30"/></literal></expr>;<pos:position pos:line="34" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="35" pos:column="10"/></block></then></if></elseif> <else pos:line="35" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="17">die<pos:position pos:line="36" pos:column="20"/></name><argument_list pos:line="36" pos:column="20">(<argument><expr><literal type="string" pos:line="36" pos:column="21">"I am totally screwed"<pos:position pos:line="36" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="45"/></expr_stmt></block></else></if>
	<return pos:line="37" pos:column="9">return <expr><name pos:line="37" pos:column="16">base_offset<pos:position pos:line="37" pos:column="27"/></name></expr>;<pos:position pos:line="37" pos:column="28"/></return>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1066_git-2.3.9.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">checkdiff_consume<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">void<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">priv<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">char<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">line<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">unsigned<pos:position pos:line="1" pos:column="63"/></name> <name pos:line="1" pos:column="64">long<pos:position pos:line="1" pos:column="68"/></name></type> <name pos:line="1" pos:column="69">len<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="73"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">checkdiff_t<pos:position pos:line="3" pos:column="27"/></name></name> <modifier pos:line="3" pos:column="28">*<pos:position pos:line="3" pos:column="29"/></modifier></type><name pos:line="3" pos:column="29">data<pos:position pos:line="3" pos:column="33"/></name> <init pos:line="3" pos:column="34">= <expr><name pos:line="3" pos:column="36">priv<pos:position pos:line="3" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">marker_size<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><name><name pos:line="4" pos:column="27">data<pos:position pos:line="4" pos:column="31"/></name><operator pos:line="4" pos:column="31">-&gt;<pos:position pos:line="4" pos:column="36"/></operator><name pos:line="4" pos:column="33">conflict_marker_size<pos:position pos:line="4" pos:column="53"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="54"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">ws<pos:position pos:line="5" pos:column="23"/></name> <init pos:line="5" pos:column="24">= <expr><call><name pos:line="5" pos:column="26">diff_get_color<pos:position pos:line="5" pos:column="40"/></name><argument_list pos:line="5" pos:column="40">(<argument><expr><name><name pos:line="5" pos:column="41">data<pos:position pos:line="5" pos:column="45"/></name><operator pos:line="5" pos:column="45">-&gt;<pos:position pos:line="5" pos:column="50"/></operator><name pos:line="5" pos:column="47">o<pos:position pos:line="5" pos:column="48"/></name><operator pos:line="5" pos:column="48">-&gt;<pos:position pos:line="5" pos:column="53"/></operator><name pos:line="5" pos:column="50">use_color<pos:position pos:line="5" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="61">DIFF_WHITESPACE<pos:position pos:line="5" pos:column="76"/></name></expr></argument>)<pos:position pos:line="5" pos:column="77"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="78"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">reset<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><call><name pos:line="6" pos:column="29">diff_get_color<pos:position pos:line="6" pos:column="43"/></name><argument_list pos:line="6" pos:column="43">(<argument><expr><name><name pos:line="6" pos:column="44">data<pos:position pos:line="6" pos:column="48"/></name><operator pos:line="6" pos:column="48">-&gt;<pos:position pos:line="6" pos:column="53"/></operator><name pos:line="6" pos:column="50">o<pos:position pos:line="6" pos:column="51"/></name><operator pos:line="6" pos:column="51">-&gt;<pos:position pos:line="6" pos:column="56"/></operator><name pos:line="6" pos:column="53">use_color<pos:position pos:line="6" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="64">DIFF_RESET<pos:position pos:line="6" pos:column="74"/></name></expr></argument>)<pos:position pos:line="6" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="76"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name pos:line="7" pos:column="15">char<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">set<pos:position pos:line="7" pos:column="24"/></name> <init pos:line="7" pos:column="25">= <expr><call><name pos:line="7" pos:column="27">diff_get_color<pos:position pos:line="7" pos:column="41"/></name><argument_list pos:line="7" pos:column="41">(<argument><expr><name><name pos:line="7" pos:column="42">data<pos:position pos:line="7" pos:column="46"/></name><operator pos:line="7" pos:column="46">-&gt;<pos:position pos:line="7" pos:column="51"/></operator><name pos:line="7" pos:column="48">o<pos:position pos:line="7" pos:column="49"/></name><operator pos:line="7" pos:column="49">-&gt;<pos:position pos:line="7" pos:column="54"/></operator><name pos:line="7" pos:column="51">use_color<pos:position pos:line="7" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="62">DIFF_FILE_NEW<pos:position pos:line="7" pos:column="75"/></name></expr></argument>)<pos:position pos:line="7" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="77"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">err<pos:position pos:line="8" pos:column="18"/></name></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="9" pos:column="9">const<pos:position pos:line="9" pos:column="14"/></specifier> <name pos:line="9" pos:column="15">char<pos:position pos:line="9" pos:column="19"/></name> <modifier pos:line="9" pos:column="20">*<pos:position pos:line="9" pos:column="21"/></modifier></type><name pos:line="9" pos:column="21">line_prefix<pos:position pos:line="9" pos:column="32"/></name></decl>;<pos:position pos:line="9" pos:column="33"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="11" pos:column="9">assert<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><name><name pos:line="11" pos:column="16">data<pos:position pos:line="11" pos:column="20"/></name><operator pos:line="11" pos:column="20">-&gt;<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="22">o<pos:position pos:line="11" pos:column="23"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><name pos:line="12" pos:column="9">line_prefix<pos:position pos:line="12" pos:column="20"/></name> <operator pos:line="12" pos:column="21">=<pos:position pos:line="12" pos:column="22"/></operator> <call><name pos:line="12" pos:column="23">diff_line_prefix<pos:position pos:line="12" pos:column="39"/></name><argument_list pos:line="12" pos:column="39">(<argument><expr><name><name pos:line="12" pos:column="40">data<pos:position pos:line="12" pos:column="44"/></name><operator pos:line="12" pos:column="44">-&gt;<pos:position pos:line="12" pos:column="49"/></operator><name pos:line="12" pos:column="46">o<pos:position pos:line="12" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="49"/></expr_stmt>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name><name pos:line="14" pos:column="13">line<pos:position pos:line="14" pos:column="17"/></name><index pos:line="14" pos:column="17">[<expr><literal type="number" pos:line="14" pos:column="18">0<pos:position pos:line="14" pos:column="19"/></literal></expr>]<pos:position pos:line="14" pos:column="20"/></index></name> <operator pos:line="14" pos:column="21">==<pos:position pos:line="14" pos:column="23"/></operator> <literal type="char" pos:line="14" pos:column="24">'+'<pos:position pos:line="14" pos:column="27"/></literal></expr>)<pos:position pos:line="14" pos:column="28"/></condition><then pos:line="14" pos:column="28"> <block pos:line="14" pos:column="29">{
		<decl_stmt><decl><type><name pos:line="15" pos:column="17">unsigned<pos:position pos:line="15" pos:column="25"/></name></type> <name pos:line="15" pos:column="26">bad<pos:position pos:line="15" pos:column="29"/></name></decl>;<pos:position pos:line="15" pos:column="30"/></decl_stmt>
		<expr_stmt><expr><name><name pos:line="16" pos:column="17">data<pos:position pos:line="16" pos:column="21"/></name><operator pos:line="16" pos:column="21">-&gt;<pos:position pos:line="16" pos:column="26"/></operator><name pos:line="16" pos:column="23">lineno<pos:position pos:line="16" pos:column="29"/></name></name><operator pos:line="16" pos:column="29">++<pos:position pos:line="16" pos:column="31"/></operator></expr>;<pos:position pos:line="16" pos:column="32"/></expr_stmt>
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><call><name pos:line="17" pos:column="21">is_conflict_marker<pos:position pos:line="17" pos:column="39"/></name><argument_list pos:line="17" pos:column="39">(<argument><expr><name pos:line="17" pos:column="40">line<pos:position pos:line="17" pos:column="44"/></name> <operator pos:line="17" pos:column="45">+<pos:position pos:line="17" pos:column="46"/></operator> <literal type="number" pos:line="17" pos:column="47">1<pos:position pos:line="17" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="50">marker_size<pos:position pos:line="17" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="63">len<pos:position pos:line="17" pos:column="66"/></name> <operator pos:line="17" pos:column="67">-<pos:position pos:line="17" pos:column="68"/></operator> <literal type="number" pos:line="17" pos:column="69">1<pos:position pos:line="17" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="72"/></condition><then pos:line="17" pos:column="72"> <block pos:line="17" pos:column="73">{
			<expr_stmt><expr><name><name pos:line="18" pos:column="25">data<pos:position pos:line="18" pos:column="29"/></name><operator pos:line="18" pos:column="29">-&gt;<pos:position pos:line="18" pos:column="34"/></operator><name pos:line="18" pos:column="31">status<pos:position pos:line="18" pos:column="37"/></name></name> <operator pos:line="18" pos:column="38">|=<pos:position pos:line="18" pos:column="40"/></operator> <literal type="number" pos:line="18" pos:column="41">1<pos:position pos:line="18" pos:column="42"/></literal></expr>;<pos:position pos:line="18" pos:column="43"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="19" pos:column="25">fprintf<pos:position pos:line="19" pos:column="32"/></name><argument_list pos:line="19" pos:column="32">(<argument><expr><name><name pos:line="19" pos:column="33">data<pos:position pos:line="19" pos:column="37"/></name><operator pos:line="19" pos:column="37">-&gt;<pos:position pos:line="19" pos:column="42"/></operator><name pos:line="19" pos:column="39">o<pos:position pos:line="19" pos:column="40"/></name><operator pos:line="19" pos:column="40">-&gt;<pos:position pos:line="19" pos:column="45"/></operator><name pos:line="19" pos:column="42">file<pos:position pos:line="19" pos:column="46"/></name></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="20" pos:column="33">"%s%s:%d: leftover conflict marker\n"<pos:position pos:line="20" pos:column="70"/></literal></expr></argument>,
				<argument><expr><name pos:line="21" pos:column="33">line_prefix<pos:position pos:line="21" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="46">data<pos:position pos:line="21" pos:column="50"/></name><operator pos:line="21" pos:column="50">-&gt;<pos:position pos:line="21" pos:column="55"/></operator><name pos:line="21" pos:column="52">filename<pos:position pos:line="21" pos:column="60"/></name></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="62">data<pos:position pos:line="21" pos:column="66"/></name><operator pos:line="21" pos:column="66">-&gt;<pos:position pos:line="21" pos:column="71"/></operator><name pos:line="21" pos:column="68">lineno<pos:position pos:line="21" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="76"/></expr_stmt>
		}<pos:position pos:line="22" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="23" pos:column="17">bad<pos:position pos:line="23" pos:column="20"/></name> <operator pos:line="23" pos:column="21">=<pos:position pos:line="23" pos:column="22"/></operator> <call><name pos:line="23" pos:column="23">ws_check<pos:position pos:line="23" pos:column="31"/></name><argument_list pos:line="23" pos:column="31">(<argument><expr><name pos:line="23" pos:column="32">line<pos:position pos:line="23" pos:column="36"/></name> <operator pos:line="23" pos:column="37">+<pos:position pos:line="23" pos:column="38"/></operator> <literal type="number" pos:line="23" pos:column="39">1<pos:position pos:line="23" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="42">len<pos:position pos:line="23" pos:column="45"/></name> <operator pos:line="23" pos:column="46">-<pos:position pos:line="23" pos:column="47"/></operator> <literal type="number" pos:line="23" pos:column="48">1<pos:position pos:line="23" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="51">data<pos:position pos:line="23" pos:column="55"/></name><operator pos:line="23" pos:column="55">-&gt;<pos:position pos:line="23" pos:column="60"/></operator><name pos:line="23" pos:column="57">ws_rule<pos:position pos:line="23" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="66"/></expr_stmt>
		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><operator pos:line="24" pos:column="21">!<pos:position pos:line="24" pos:column="22"/></operator><name pos:line="24" pos:column="22">bad<pos:position pos:line="24" pos:column="25"/></name></expr>)<pos:position pos:line="24" pos:column="26"/></condition><then pos:line="24" pos:column="26">
			<block type="pseudo"><return pos:line="25" pos:column="25">return;<pos:position pos:line="25" pos:column="32"/></return></block></then></if>
		<expr_stmt><expr><name><name pos:line="26" pos:column="17">data<pos:position pos:line="26" pos:column="21"/></name><operator pos:line="26" pos:column="21">-&gt;<pos:position pos:line="26" pos:column="26"/></operator><name pos:line="26" pos:column="23">status<pos:position pos:line="26" pos:column="29"/></name></name> <operator pos:line="26" pos:column="30">|=<pos:position pos:line="26" pos:column="32"/></operator> <name pos:line="26" pos:column="33">bad<pos:position pos:line="26" pos:column="36"/></name></expr>;<pos:position pos:line="26" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><name pos:line="27" pos:column="17">err<pos:position pos:line="27" pos:column="20"/></name> <operator pos:line="27" pos:column="21">=<pos:position pos:line="27" pos:column="22"/></operator> <call><name pos:line="27" pos:column="23">whitespace_error_string<pos:position pos:line="27" pos:column="46"/></name><argument_list pos:line="27" pos:column="46">(<argument><expr><name pos:line="27" pos:column="47">bad<pos:position pos:line="27" pos:column="50"/></name></expr></argument>)<pos:position pos:line="27" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="28" pos:column="17">fprintf<pos:position pos:line="28" pos:column="24"/></name><argument_list pos:line="28" pos:column="24">(<argument><expr><name><name pos:line="28" pos:column="25">data<pos:position pos:line="28" pos:column="29"/></name><operator pos:line="28" pos:column="29">-&gt;<pos:position pos:line="28" pos:column="34"/></operator><name pos:line="28" pos:column="31">o<pos:position pos:line="28" pos:column="32"/></name><operator pos:line="28" pos:column="32">-&gt;<pos:position pos:line="28" pos:column="37"/></operator><name pos:line="28" pos:column="34">file<pos:position pos:line="28" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="40">"%s%s:%d: %s.\n"<pos:position pos:line="28" pos:column="56"/></literal></expr></argument>,
			<argument><expr><name pos:line="29" pos:column="25">line_prefix<pos:position pos:line="29" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="38">data<pos:position pos:line="29" pos:column="42"/></name><operator pos:line="29" pos:column="42">-&gt;<pos:position pos:line="29" pos:column="47"/></operator><name pos:line="29" pos:column="44">filename<pos:position pos:line="29" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="54">data<pos:position pos:line="29" pos:column="58"/></name><operator pos:line="29" pos:column="58">-&gt;<pos:position pos:line="29" pos:column="63"/></operator><name pos:line="29" pos:column="60">lineno<pos:position pos:line="29" pos:column="66"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="68">err<pos:position pos:line="29" pos:column="71"/></name></expr></argument>)<pos:position pos:line="29" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="73"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="30" pos:column="17">free<pos:position pos:line="30" pos:column="21"/></name><argument_list pos:line="30" pos:column="21">(<argument><expr><name pos:line="30" pos:column="22">err<pos:position pos:line="30" pos:column="25"/></name></expr></argument>)<pos:position pos:line="30" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="27"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="31" pos:column="17">emit_line<pos:position pos:line="31" pos:column="26"/></name><argument_list pos:line="31" pos:column="26">(<argument><expr><name><name pos:line="31" pos:column="27">data<pos:position pos:line="31" pos:column="31"/></name><operator pos:line="31" pos:column="31">-&gt;<pos:position pos:line="31" pos:column="36"/></operator><name pos:line="31" pos:column="33">o<pos:position pos:line="31" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="36">set<pos:position pos:line="31" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="41">reset<pos:position pos:line="31" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="48">line<pos:position pos:line="31" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="54">1<pos:position pos:line="31" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="57"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="32" pos:column="17">ws_check_emit<pos:position pos:line="32" pos:column="30"/></name><argument_list pos:line="32" pos:column="30">(<argument><expr><name pos:line="32" pos:column="31">line<pos:position pos:line="32" pos:column="35"/></name> <operator pos:line="32" pos:column="36">+<pos:position pos:line="32" pos:column="37"/></operator> <literal type="number" pos:line="32" pos:column="38">1<pos:position pos:line="32" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="41">len<pos:position pos:line="32" pos:column="44"/></name> <operator pos:line="32" pos:column="45">-<pos:position pos:line="32" pos:column="46"/></operator> <literal type="number" pos:line="32" pos:column="47">1<pos:position pos:line="32" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="50">data<pos:position pos:line="32" pos:column="54"/></name><operator pos:line="32" pos:column="54">-&gt;<pos:position pos:line="32" pos:column="59"/></operator><name pos:line="32" pos:column="56">ws_rule<pos:position pos:line="32" pos:column="63"/></name></name></expr></argument>,
			      <argument><expr><name><name pos:line="33" pos:column="31">data<pos:position pos:line="33" pos:column="35"/></name><operator pos:line="33" pos:column="35">-&gt;<pos:position pos:line="33" pos:column="40"/></operator><name pos:line="33" pos:column="37">o<pos:position pos:line="33" pos:column="38"/></name><operator pos:line="33" pos:column="38">-&gt;<pos:position pos:line="33" pos:column="43"/></operator><name pos:line="33" pos:column="40">file<pos:position pos:line="33" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="46">set<pos:position pos:line="33" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="51">reset<pos:position pos:line="33" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="58">ws<pos:position pos:line="33" pos:column="60"/></name></expr></argument>)<pos:position pos:line="33" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="62"/></expr_stmt>
	}<pos:position pos:line="34" pos:column="10"/></block></then> <elseif pos:line="34" pos:column="11">else <if pos:line="34" pos:column="16">if <condition pos:line="34" pos:column="19">(<expr><name><name pos:line="34" pos:column="20">line<pos:position pos:line="34" pos:column="24"/></name><index pos:line="34" pos:column="24">[<expr><literal type="number" pos:line="34" pos:column="25">0<pos:position pos:line="34" pos:column="26"/></literal></expr>]<pos:position pos:line="34" pos:column="27"/></index></name> <operator pos:line="34" pos:column="28">==<pos:position pos:line="34" pos:column="30"/></operator> <literal type="char" pos:line="34" pos:column="31">' '<pos:position pos:line="34" pos:column="34"/></literal></expr>)<pos:position pos:line="34" pos:column="35"/></condition><then pos:line="34" pos:column="35"> <block pos:line="34" pos:column="36">{
		<expr_stmt><expr><name><name pos:line="35" pos:column="17">data<pos:position pos:line="35" pos:column="21"/></name><operator pos:line="35" pos:column="21">-&gt;<pos:position pos:line="35" pos:column="26"/></operator><name pos:line="35" pos:column="23">lineno<pos:position pos:line="35" pos:column="29"/></name></name><operator pos:line="35" pos:column="29">++<pos:position pos:line="35" pos:column="31"/></operator></expr>;<pos:position pos:line="35" pos:column="32"/></expr_stmt>
	}<pos:position pos:line="36" pos:column="10"/></block></then></if></elseif> <elseif pos:line="36" pos:column="11">else <if pos:line="36" pos:column="16">if <condition pos:line="36" pos:column="19">(<expr><name><name pos:line="36" pos:column="20">line<pos:position pos:line="36" pos:column="24"/></name><index pos:line="36" pos:column="24">[<expr><literal type="number" pos:line="36" pos:column="25">0<pos:position pos:line="36" pos:column="26"/></literal></expr>]<pos:position pos:line="36" pos:column="27"/></index></name> <operator pos:line="36" pos:column="28">==<pos:position pos:line="36" pos:column="30"/></operator> <literal type="char" pos:line="36" pos:column="31">'@'<pos:position pos:line="36" pos:column="34"/></literal></expr>)<pos:position pos:line="36" pos:column="35"/></condition><then pos:line="36" pos:column="35"> <block pos:line="36" pos:column="36">{
		<decl_stmt><decl><type><name pos:line="37" pos:column="17">char<pos:position pos:line="37" pos:column="21"/></name> <modifier pos:line="37" pos:column="22">*<pos:position pos:line="37" pos:column="23"/></modifier></type><name pos:line="37" pos:column="23">plus<pos:position pos:line="37" pos:column="27"/></name> <init pos:line="37" pos:column="28">= <expr><call><name pos:line="37" pos:column="30">strchr<pos:position pos:line="37" pos:column="36"/></name><argument_list pos:line="37" pos:column="36">(<argument><expr><name pos:line="37" pos:column="37">line<pos:position pos:line="37" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="37" pos:column="43">'+'<pos:position pos:line="37" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="37" pos:column="48"/></decl_stmt>
		<if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><name pos:line="38" pos:column="21">plus<pos:position pos:line="38" pos:column="25"/></name></expr>)<pos:position pos:line="38" pos:column="26"/></condition><then pos:line="38" pos:column="26">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="39" pos:column="25">data<pos:position pos:line="39" pos:column="29"/></name><operator pos:line="39" pos:column="29">-&gt;<pos:position pos:line="39" pos:column="34"/></operator><name pos:line="39" pos:column="31">lineno<pos:position pos:line="39" pos:column="37"/></name></name> <operator pos:line="39" pos:column="38">=<pos:position pos:line="39" pos:column="39"/></operator> <call><name pos:line="39" pos:column="40">strtol<pos:position pos:line="39" pos:column="46"/></name><argument_list pos:line="39" pos:column="46">(<argument><expr><name pos:line="39" pos:column="47">plus<pos:position pos:line="39" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="53">NULL<pos:position pos:line="39" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="59">10<pos:position pos:line="39" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="62"/></argument_list></call> <operator pos:line="39" pos:column="63">-<pos:position pos:line="39" pos:column="64"/></operator> <literal type="number" pos:line="39" pos:column="65">1<pos:position pos:line="39" pos:column="66"/></literal></expr>;<pos:position pos:line="39" pos:column="67"/></expr_stmt></block></then>
		<else pos:line="40" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="41" pos:column="25">die<pos:position pos:line="41" pos:column="28"/></name><argument_list pos:line="41" pos:column="28">(<argument><expr><literal type="string" pos:line="41" pos:column="29">"invalid diff"<pos:position pos:line="41" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="45"/></expr_stmt></block></else></if>
	}<pos:position pos:line="42" pos:column="10"/></block></then></if></elseif></if>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1946_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">xdiff_outf<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">void<pos:position pos:line="1" pos:column="27"/></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">priv_<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="36">mmbuffer_t<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">mb<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">int<pos:position pos:line="1" pos:column="55"/></name></type> <name pos:line="1" pos:column="56">nbuf<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">xdiff_emit_state<pos:position pos:line="3" pos:column="32"/></name></name> <modifier pos:line="3" pos:column="33">*<pos:position pos:line="3" pos:column="34"/></modifier></type><name pos:line="3" pos:column="34">priv<pos:position pos:line="3" pos:column="38"/></name> <init pos:line="3" pos:column="39">= <expr><name pos:line="3" pos:column="41">priv_<pos:position pos:line="3" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">i<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>

	<for pos:line="6" pos:column="9">for <control pos:line="6" pos:column="13">(<init><expr><name pos:line="6" pos:column="14">i<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">=<pos:position pos:line="6" pos:column="17"/></operator> <literal type="number" pos:line="6" pos:column="18">0<pos:position pos:line="6" pos:column="19"/></literal></expr>;<pos:position pos:line="6" pos:column="20"/></init> <condition><expr><name pos:line="6" pos:column="21">i<pos:position pos:line="6" pos:column="22"/></name> <operator pos:line="6" pos:column="23">&lt;<pos:position pos:line="6" pos:column="27"/></operator> <name pos:line="6" pos:column="25">nbuf<pos:position pos:line="6" pos:column="29"/></name></expr>;<pos:position pos:line="6" pos:column="30"/></condition> <incr><expr><name pos:line="6" pos:column="31">i<pos:position pos:line="6" pos:column="32"/></name><operator pos:line="6" pos:column="32">++<pos:position pos:line="6" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="6" pos:column="35"/></control> <block pos:line="6" pos:column="36">{
		<if pos:line="7" pos:column="17">if <condition pos:line="7" pos:column="20">(<expr><name><name pos:line="7" pos:column="21">mb<pos:position pos:line="7" pos:column="23"/></name><index pos:line="7" pos:column="23">[<expr><name pos:line="7" pos:column="24">i<pos:position pos:line="7" pos:column="25"/></name></expr>]<pos:position pos:line="7" pos:column="26"/></index></name><operator pos:line="7" pos:column="26">.<pos:position pos:line="7" pos:column="27"/></operator><name><name pos:line="7" pos:column="27">ptr<pos:position pos:line="7" pos:column="30"/></name><index pos:line="7" pos:column="30">[<expr><name><name pos:line="7" pos:column="31">mb<pos:position pos:line="7" pos:column="33"/></name><index pos:line="7" pos:column="33">[<expr><name pos:line="7" pos:column="34">i<pos:position pos:line="7" pos:column="35"/></name></expr>]<pos:position pos:line="7" pos:column="36"/></index></name><operator pos:line="7" pos:column="36">.<pos:position pos:line="7" pos:column="37"/></operator><name pos:line="7" pos:column="37">size<pos:position pos:line="7" pos:column="41"/></name><operator pos:line="7" pos:column="41">-<pos:position pos:line="7" pos:column="42"/></operator><literal type="number" pos:line="7" pos:column="42">1<pos:position pos:line="7" pos:column="43"/></literal></expr>]<pos:position pos:line="7" pos:column="44"/></index></name> <operator pos:line="7" pos:column="45">!=<pos:position pos:line="7" pos:column="47"/></operator> <literal type="char" pos:line="7" pos:column="48">'\n'<pos:position pos:line="7" pos:column="52"/></literal></expr>)<pos:position pos:line="7" pos:column="53"/></condition><then pos:line="7" pos:column="53"> <block pos:line="7" pos:column="54">{
			<comment type="block" pos:line="8" pos:column="25">/* Incomplete line */</comment>
			<expr_stmt><expr><call><name pos:line="9" pos:column="25">strbuf_add<pos:position pos:line="9" pos:column="35"/></name><argument_list pos:line="9" pos:column="35">(<argument><expr><operator pos:line="9" pos:column="36">&amp;<pos:position pos:line="9" pos:column="41"/></operator><name><name pos:line="9" pos:column="37">priv<pos:position pos:line="9" pos:column="41"/></name><operator pos:line="9" pos:column="41">-&gt;<pos:position pos:line="9" pos:column="46"/></operator><name pos:line="9" pos:column="43">remainder<pos:position pos:line="9" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="54">mb<pos:position pos:line="9" pos:column="56"/></name><index pos:line="9" pos:column="56">[<expr><name pos:line="9" pos:column="57">i<pos:position pos:line="9" pos:column="58"/></name></expr>]<pos:position pos:line="9" pos:column="59"/></index></name><operator pos:line="9" pos:column="59">.<pos:position pos:line="9" pos:column="60"/></operator><name pos:line="9" pos:column="60">ptr<pos:position pos:line="9" pos:column="63"/></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="65">mb<pos:position pos:line="9" pos:column="67"/></name><index pos:line="9" pos:column="67">[<expr><name pos:line="9" pos:column="68">i<pos:position pos:line="9" pos:column="69"/></name></expr>]<pos:position pos:line="9" pos:column="70"/></index></name><operator pos:line="9" pos:column="70">.<pos:position pos:line="9" pos:column="71"/></operator><name pos:line="9" pos:column="71">size<pos:position pos:line="9" pos:column="75"/></name></expr></argument>)<pos:position pos:line="9" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="77"/></expr_stmt>
			<continue pos:line="10" pos:column="25">continue;<pos:position pos:line="10" pos:column="34"/></continue>
		}<pos:position pos:line="11" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="13" pos:column="17">/* we have a complete line */</comment>
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><operator pos:line="14" pos:column="21">!<pos:position pos:line="14" pos:column="22"/></operator><name><name pos:line="14" pos:column="22">priv<pos:position pos:line="14" pos:column="26"/></name><operator pos:line="14" pos:column="26">-&gt;<pos:position pos:line="14" pos:column="31"/></operator><name pos:line="14" pos:column="28">remainder<pos:position pos:line="14" pos:column="37"/></name><operator pos:line="14" pos:column="37">.<pos:position pos:line="14" pos:column="38"/></operator><name pos:line="14" pos:column="38">len<pos:position pos:line="14" pos:column="41"/></name></name></expr>)<pos:position pos:line="14" pos:column="42"/></condition><then pos:line="14" pos:column="42"> <block pos:line="14" pos:column="43">{
			<expr_stmt><expr><call><name pos:line="15" pos:column="25">consume_one<pos:position pos:line="15" pos:column="36"/></name><argument_list pos:line="15" pos:column="36">(<argument><expr><name pos:line="15" pos:column="37">priv<pos:position pos:line="15" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="43">mb<pos:position pos:line="15" pos:column="45"/></name><index pos:line="15" pos:column="45">[<expr><name pos:line="15" pos:column="46">i<pos:position pos:line="15" pos:column="47"/></name></expr>]<pos:position pos:line="15" pos:column="48"/></index></name><operator pos:line="15" pos:column="48">.<pos:position pos:line="15" pos:column="49"/></operator><name pos:line="15" pos:column="49">ptr<pos:position pos:line="15" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="54">mb<pos:position pos:line="15" pos:column="56"/></name><index pos:line="15" pos:column="56">[<expr><name pos:line="15" pos:column="57">i<pos:position pos:line="15" pos:column="58"/></name></expr>]<pos:position pos:line="15" pos:column="59"/></index></name><operator pos:line="15" pos:column="59">.<pos:position pos:line="15" pos:column="60"/></operator><name pos:line="15" pos:column="60">size<pos:position pos:line="15" pos:column="64"/></name></expr></argument>)<pos:position pos:line="15" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="66"/></expr_stmt>
			<continue pos:line="16" pos:column="25">continue;<pos:position pos:line="16" pos:column="34"/></continue>
		}<pos:position pos:line="17" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">strbuf_add<pos:position pos:line="18" pos:column="27"/></name><argument_list pos:line="18" pos:column="27">(<argument><expr><operator pos:line="18" pos:column="28">&amp;<pos:position pos:line="18" pos:column="33"/></operator><name><name pos:line="18" pos:column="29">priv<pos:position pos:line="18" pos:column="33"/></name><operator pos:line="18" pos:column="33">-&gt;<pos:position pos:line="18" pos:column="38"/></operator><name pos:line="18" pos:column="35">remainder<pos:position pos:line="18" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="46">mb<pos:position pos:line="18" pos:column="48"/></name><index pos:line="18" pos:column="48">[<expr><name pos:line="18" pos:column="49">i<pos:position pos:line="18" pos:column="50"/></name></expr>]<pos:position pos:line="18" pos:column="51"/></index></name><operator pos:line="18" pos:column="51">.<pos:position pos:line="18" pos:column="52"/></operator><name pos:line="18" pos:column="52">ptr<pos:position pos:line="18" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="57">mb<pos:position pos:line="18" pos:column="59"/></name><index pos:line="18" pos:column="59">[<expr><name pos:line="18" pos:column="60">i<pos:position pos:line="18" pos:column="61"/></name></expr>]<pos:position pos:line="18" pos:column="62"/></index></name><operator pos:line="18" pos:column="62">.<pos:position pos:line="18" pos:column="63"/></operator><name pos:line="18" pos:column="63">size<pos:position pos:line="18" pos:column="67"/></name></expr></argument>)<pos:position pos:line="18" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="69"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">consume_one<pos:position pos:line="19" pos:column="28"/></name><argument_list pos:line="19" pos:column="28">(<argument><expr><name pos:line="19" pos:column="29">priv<pos:position pos:line="19" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="35">priv<pos:position pos:line="19" pos:column="39"/></name><operator pos:line="19" pos:column="39">-&gt;<pos:position pos:line="19" pos:column="44"/></operator><name pos:line="19" pos:column="41">remainder<pos:position pos:line="19" pos:column="50"/></name><operator pos:line="19" pos:column="50">.<pos:position pos:line="19" pos:column="51"/></operator><name pos:line="19" pos:column="51">buf<pos:position pos:line="19" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="56">priv<pos:position pos:line="19" pos:column="60"/></name><operator pos:line="19" pos:column="60">-&gt;<pos:position pos:line="19" pos:column="65"/></operator><name pos:line="19" pos:column="62">remainder<pos:position pos:line="19" pos:column="71"/></name><operator pos:line="19" pos:column="71">.<pos:position pos:line="19" pos:column="72"/></operator><name pos:line="19" pos:column="72">len<pos:position pos:line="19" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="77"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">strbuf_reset<pos:position pos:line="20" pos:column="29"/></name><argument_list pos:line="20" pos:column="29">(<argument><expr><operator pos:line="20" pos:column="30">&amp;<pos:position pos:line="20" pos:column="35"/></operator><name><name pos:line="20" pos:column="31">priv<pos:position pos:line="20" pos:column="35"/></name><operator pos:line="20" pos:column="35">-&gt;<pos:position pos:line="20" pos:column="40"/></operator><name pos:line="20" pos:column="37">remainder<pos:position pos:line="20" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="48"/></expr_stmt>
	}<pos:position pos:line="21" pos:column="10"/></block></for>
	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name><name pos:line="22" pos:column="13">priv<pos:position pos:line="22" pos:column="17"/></name><operator pos:line="22" pos:column="17">-&gt;<pos:position pos:line="22" pos:column="22"/></operator><name pos:line="22" pos:column="19">remainder<pos:position pos:line="22" pos:column="28"/></name><operator pos:line="22" pos:column="28">.<pos:position pos:line="22" pos:column="29"/></operator><name pos:line="22" pos:column="29">len<pos:position pos:line="22" pos:column="32"/></name></name></expr>)<pos:position pos:line="22" pos:column="33"/></condition><then pos:line="22" pos:column="33"> <block pos:line="22" pos:column="34">{
		<expr_stmt><expr><call><name pos:line="23" pos:column="17">consume_one<pos:position pos:line="23" pos:column="28"/></name><argument_list pos:line="23" pos:column="28">(<argument><expr><name pos:line="23" pos:column="29">priv<pos:position pos:line="23" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="35">priv<pos:position pos:line="23" pos:column="39"/></name><operator pos:line="23" pos:column="39">-&gt;<pos:position pos:line="23" pos:column="44"/></operator><name pos:line="23" pos:column="41">remainder<pos:position pos:line="23" pos:column="50"/></name><operator pos:line="23" pos:column="50">.<pos:position pos:line="23" pos:column="51"/></operator><name pos:line="23" pos:column="51">buf<pos:position pos:line="23" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="56">priv<pos:position pos:line="23" pos:column="60"/></name><operator pos:line="23" pos:column="60">-&gt;<pos:position pos:line="23" pos:column="65"/></operator><name pos:line="23" pos:column="62">remainder<pos:position pos:line="23" pos:column="71"/></name><operator pos:line="23" pos:column="71">.<pos:position pos:line="23" pos:column="72"/></operator><name pos:line="23" pos:column="72">len<pos:position pos:line="23" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="77"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="24" pos:column="17">strbuf_reset<pos:position pos:line="24" pos:column="29"/></name><argument_list pos:line="24" pos:column="29">(<argument><expr><operator pos:line="24" pos:column="30">&amp;<pos:position pos:line="24" pos:column="35"/></operator><name><name pos:line="24" pos:column="31">priv<pos:position pos:line="24" pos:column="35"/></name><operator pos:line="24" pos:column="35">-&gt;<pos:position pos:line="24" pos:column="40"/></operator><name pos:line="24" pos:column="37">remainder<pos:position pos:line="24" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="48"/></expr_stmt>
	}<pos:position pos:line="25" pos:column="10"/></block></then></if>
	<return pos:line="26" pos:column="9">return <expr><literal type="number" pos:line="26" pos:column="16">0<pos:position pos:line="26" pos:column="17"/></literal></expr>;<pos:position pos:line="26" pos:column="18"/></return>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5962_git-2.10.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">lock_ref_for_update<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">ref_update<pos:position pos:line="1" pos:column="49"/></name></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">update<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>,
			       <parameter><decl><type><name><name pos:line="2" pos:column="32">struct<pos:position pos:line="2" pos:column="38"/></name> <name pos:line="2" pos:column="39">ref_transaction<pos:position pos:line="2" pos:column="54"/></name></name> <modifier pos:line="2" pos:column="55">*<pos:position pos:line="2" pos:column="56"/></modifier></type><name pos:line="2" pos:column="56">transaction<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>,
			       <parameter><decl><type><specifier pos:line="3" pos:column="32">const<pos:position pos:line="3" pos:column="37"/></specifier> <name pos:line="3" pos:column="38">char<pos:position pos:line="3" pos:column="42"/></name> <modifier pos:line="3" pos:column="43">*<pos:position pos:line="3" pos:column="44"/></modifier></type><name pos:line="3" pos:column="44">head_ref<pos:position pos:line="3" pos:column="52"/></name></decl></parameter>,
			       <parameter><decl><type><name><name pos:line="4" pos:column="32">struct<pos:position pos:line="4" pos:column="38"/></name> <name pos:line="4" pos:column="39">string_list<pos:position pos:line="4" pos:column="50"/></name></name> <modifier pos:line="4" pos:column="51">*<pos:position pos:line="4" pos:column="52"/></modifier></type><name pos:line="4" pos:column="52">affected_refnames<pos:position pos:line="4" pos:column="69"/></name></decl></parameter>,
			       <parameter><decl><type><name><name pos:line="5" pos:column="32">struct<pos:position pos:line="5" pos:column="38"/></name> <name pos:line="5" pos:column="39">strbuf<pos:position pos:line="5" pos:column="45"/></name></name> <modifier pos:line="5" pos:column="46">*<pos:position pos:line="5" pos:column="47"/></modifier></type><name pos:line="5" pos:column="47">err<pos:position pos:line="5" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="51"/></parameter_list>
<block pos:line="6" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">strbuf<pos:position pos:line="7" pos:column="22"/></name></name></type> <name pos:line="7" pos:column="23">referent<pos:position pos:line="7" pos:column="31"/></name> <init pos:line="7" pos:column="32">= <expr><name pos:line="7" pos:column="34">STRBUF_INIT<pos:position pos:line="7" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">mustexist<pos:position pos:line="8" pos:column="22"/></name> <init pos:line="8" pos:column="23">= <expr><operator pos:line="8" pos:column="25">(<pos:position pos:line="8" pos:column="26"/></operator><name><name pos:line="8" pos:column="26">update<pos:position pos:line="8" pos:column="32"/></name><operator pos:line="8" pos:column="32">-&gt;<pos:position pos:line="8" pos:column="37"/></operator><name pos:line="8" pos:column="34">flags<pos:position pos:line="8" pos:column="39"/></name></name> <operator pos:line="8" pos:column="40">&amp;<pos:position pos:line="8" pos:column="45"/></operator> <name pos:line="8" pos:column="42">REF_HAVE_OLD<pos:position pos:line="8" pos:column="54"/></name><operator pos:line="8" pos:column="54">)<pos:position pos:line="8" pos:column="55"/></operator> <operator pos:line="8" pos:column="56">&amp;&amp;<pos:position pos:line="8" pos:column="66"/></operator>
		<operator pos:line="9" pos:column="17">!<pos:position pos:line="9" pos:column="18"/></operator><call><name pos:line="9" pos:column="18">is_null_sha1<pos:position pos:line="9" pos:column="30"/></name><argument_list pos:line="9" pos:column="30">(<argument><expr><name><name pos:line="9" pos:column="31">update<pos:position pos:line="9" pos:column="37"/></name><operator pos:line="9" pos:column="37">-&gt;<pos:position pos:line="9" pos:column="42"/></operator><name pos:line="9" pos:column="39">old_sha1<pos:position pos:line="9" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="49"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">ret<pos:position pos:line="10" pos:column="16"/></name></decl>;<pos:position pos:line="10" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="11" pos:column="9">struct<pos:position pos:line="11" pos:column="15"/></name> <name pos:line="11" pos:column="16">ref_lock<pos:position pos:line="11" pos:column="24"/></name></name> <modifier pos:line="11" pos:column="25">*<pos:position pos:line="11" pos:column="26"/></modifier></type><name pos:line="11" pos:column="26">lock<pos:position pos:line="11" pos:column="30"/></name></decl>;<pos:position pos:line="11" pos:column="31"/></decl_stmt>

	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">(<pos:position pos:line="13" pos:column="14"/></operator><name><name pos:line="13" pos:column="14">update<pos:position pos:line="13" pos:column="20"/></name><operator pos:line="13" pos:column="20">-&gt;<pos:position pos:line="13" pos:column="25"/></operator><name pos:line="13" pos:column="22">flags<pos:position pos:line="13" pos:column="27"/></name></name> <operator pos:line="13" pos:column="28">&amp;<pos:position pos:line="13" pos:column="33"/></operator> <name pos:line="13" pos:column="30">REF_HAVE_NEW<pos:position pos:line="13" pos:column="42"/></name><operator pos:line="13" pos:column="42">)<pos:position pos:line="13" pos:column="43"/></operator> <operator pos:line="13" pos:column="44">&amp;&amp;<pos:position pos:line="13" pos:column="54"/></operator> <call><name pos:line="13" pos:column="47">is_null_sha1<pos:position pos:line="13" pos:column="59"/></name><argument_list pos:line="13" pos:column="59">(<argument><expr><name><name pos:line="13" pos:column="60">update<pos:position pos:line="13" pos:column="66"/></name><operator pos:line="13" pos:column="66">-&gt;<pos:position pos:line="13" pos:column="71"/></operator><name pos:line="13" pos:column="68">new_sha1<pos:position pos:line="13" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="77"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="78"/></condition><then pos:line="13" pos:column="78">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="14" pos:column="17">update<pos:position pos:line="14" pos:column="23"/></name><operator pos:line="14" pos:column="23">-&gt;<pos:position pos:line="14" pos:column="28"/></operator><name pos:line="14" pos:column="25">flags<pos:position pos:line="14" pos:column="30"/></name></name> <operator pos:line="14" pos:column="31">|=<pos:position pos:line="14" pos:column="33"/></operator> <name pos:line="14" pos:column="34">REF_DELETING<pos:position pos:line="14" pos:column="46"/></name></expr>;<pos:position pos:line="14" pos:column="47"/></expr_stmt></block></then></if>

	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">head_ref<pos:position pos:line="16" pos:column="21"/></name></expr>)<pos:position pos:line="16" pos:column="22"/></condition><then pos:line="16" pos:column="22"> <block pos:line="16" pos:column="23">{
		<expr_stmt><expr><name pos:line="17" pos:column="17">ret<pos:position pos:line="17" pos:column="20"/></name> <operator pos:line="17" pos:column="21">=<pos:position pos:line="17" pos:column="22"/></operator> <call><name pos:line="17" pos:column="23">split_head_update<pos:position pos:line="17" pos:column="40"/></name><argument_list pos:line="17" pos:column="40">(<argument><expr><name pos:line="17" pos:column="41">update<pos:position pos:line="17" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="49">transaction<pos:position pos:line="17" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="62">head_ref<pos:position pos:line="17" pos:column="70"/></name></expr></argument>,
					<argument><expr><name pos:line="18" pos:column="41">affected_refnames<pos:position pos:line="18" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="60">err<pos:position pos:line="18" pos:column="63"/></name></expr></argument>)<pos:position pos:line="18" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="65"/></expr_stmt>
		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><name pos:line="19" pos:column="21">ret<pos:position pos:line="19" pos:column="24"/></name></expr>)<pos:position pos:line="19" pos:column="25"/></condition><then pos:line="19" pos:column="25">
			<block type="pseudo"><return pos:line="20" pos:column="25">return <expr><name pos:line="20" pos:column="32">ret<pos:position pos:line="20" pos:column="35"/></name></expr>;<pos:position pos:line="20" pos:column="36"/></return></block></then></if>
	}<pos:position pos:line="21" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="23" pos:column="9">ret<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">=<pos:position pos:line="23" pos:column="14"/></operator> <call><name pos:line="23" pos:column="15">lock_raw_ref<pos:position pos:line="23" pos:column="27"/></name><argument_list pos:line="23" pos:column="27">(<argument><expr><name><name pos:line="23" pos:column="28">update<pos:position pos:line="23" pos:column="34"/></name><operator pos:line="23" pos:column="34">-&gt;<pos:position pos:line="23" pos:column="39"/></operator><name pos:line="23" pos:column="36">refname<pos:position pos:line="23" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="45">mustexist<pos:position pos:line="23" pos:column="54"/></name></expr></argument>,
			   <argument><expr><name pos:line="24" pos:column="28">affected_refnames<pos:position pos:line="24" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="47">NULL<pos:position pos:line="24" pos:column="51"/></name></expr></argument>,
			   <argument><expr><operator pos:line="25" pos:column="28">&amp;<pos:position pos:line="25" pos:column="33"/></operator><name><name pos:line="25" pos:column="29">update<pos:position pos:line="25" pos:column="35"/></name><operator pos:line="25" pos:column="35">-&gt;<pos:position pos:line="25" pos:column="40"/></operator><name pos:line="25" pos:column="37">lock<pos:position pos:line="25" pos:column="41"/></name></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="43">&amp;<pos:position pos:line="25" pos:column="48"/></operator><name pos:line="25" pos:column="44">referent<pos:position pos:line="25" pos:column="52"/></name></expr></argument>,
			   <argument><expr><operator pos:line="26" pos:column="28">&amp;<pos:position pos:line="26" pos:column="33"/></operator><name><name pos:line="26" pos:column="29">update<pos:position pos:line="26" pos:column="35"/></name><operator pos:line="26" pos:column="35">-&gt;<pos:position pos:line="26" pos:column="40"/></operator><name pos:line="26" pos:column="37">type<pos:position pos:line="26" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="43">err<pos:position pos:line="26" pos:column="46"/></name></expr></argument>)<pos:position pos:line="26" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="48"/></expr_stmt>

	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name pos:line="28" pos:column="13">ret<pos:position pos:line="28" pos:column="16"/></name></expr>)<pos:position pos:line="28" pos:column="17"/></condition><then pos:line="28" pos:column="17"> <block pos:line="28" pos:column="18">{
		<decl_stmt><decl><type><name pos:line="29" pos:column="17">char<pos:position pos:line="29" pos:column="21"/></name> <modifier pos:line="29" pos:column="22">*<pos:position pos:line="29" pos:column="23"/></modifier></type><name pos:line="29" pos:column="23">reason<pos:position pos:line="29" pos:column="29"/></name></decl>;<pos:position pos:line="29" pos:column="30"/></decl_stmt>

		<expr_stmt><expr><name pos:line="31" pos:column="17">reason<pos:position pos:line="31" pos:column="23"/></name> <operator pos:line="31" pos:column="24">=<pos:position pos:line="31" pos:column="25"/></operator> <call><name pos:line="31" pos:column="26">strbuf_detach<pos:position pos:line="31" pos:column="39"/></name><argument_list pos:line="31" pos:column="39">(<argument><expr><name pos:line="31" pos:column="40">err<pos:position pos:line="31" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="45">NULL<pos:position pos:line="31" pos:column="49"/></name></expr></argument>)<pos:position pos:line="31" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="32" pos:column="17">strbuf_addf<pos:position pos:line="32" pos:column="28"/></name><argument_list pos:line="32" pos:column="28">(<argument><expr><name pos:line="32" pos:column="29">err<pos:position pos:line="32" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="34">"cannot lock ref '%s': %s"<pos:position pos:line="32" pos:column="60"/></literal></expr></argument>,
			    <argument><expr><call><name pos:line="33" pos:column="29">original_update_refname<pos:position pos:line="33" pos:column="52"/></name><argument_list pos:line="33" pos:column="52">(<argument><expr><name pos:line="33" pos:column="53">update<pos:position pos:line="33" pos:column="59"/></name></expr></argument>)<pos:position pos:line="33" pos:column="60"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="33" pos:column="62">reason<pos:position pos:line="33" pos:column="68"/></name></expr></argument>)<pos:position pos:line="33" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="70"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="34" pos:column="17">free<pos:position pos:line="34" pos:column="21"/></name><argument_list pos:line="34" pos:column="21">(<argument><expr><name pos:line="34" pos:column="22">reason<pos:position pos:line="34" pos:column="28"/></name></expr></argument>)<pos:position pos:line="34" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="30"/></expr_stmt>
		<return pos:line="35" pos:column="17">return <expr><name pos:line="35" pos:column="24">ret<pos:position pos:line="35" pos:column="27"/></name></expr>;<pos:position pos:line="35" pos:column="28"/></return>
	}<pos:position pos:line="36" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="38" pos:column="9">lock<pos:position pos:line="38" pos:column="13"/></name> <operator pos:line="38" pos:column="14">=<pos:position pos:line="38" pos:column="15"/></operator> <name><name pos:line="38" pos:column="16">update<pos:position pos:line="38" pos:column="22"/></name><operator pos:line="38" pos:column="22">-&gt;<pos:position pos:line="38" pos:column="27"/></operator><name pos:line="38" pos:column="24">lock<pos:position pos:line="38" pos:column="28"/></name></name></expr>;<pos:position pos:line="38" pos:column="29"/></expr_stmt>

	<if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name><name pos:line="40" pos:column="13">update<pos:position pos:line="40" pos:column="19"/></name><operator pos:line="40" pos:column="19">-&gt;<pos:position pos:line="40" pos:column="24"/></operator><name pos:line="40" pos:column="21">type<pos:position pos:line="40" pos:column="25"/></name></name> <operator pos:line="40" pos:column="26">&amp;<pos:position pos:line="40" pos:column="31"/></operator> <name pos:line="40" pos:column="28">REF_ISSYMREF<pos:position pos:line="40" pos:column="40"/></name></expr>)<pos:position pos:line="40" pos:column="41"/></condition><then pos:line="40" pos:column="41"> <block pos:line="40" pos:column="42">{
		<if pos:line="41" pos:column="17">if <condition pos:line="41" pos:column="20">(<expr><name><name pos:line="41" pos:column="21">update<pos:position pos:line="41" pos:column="27"/></name><operator pos:line="41" pos:column="27">-&gt;<pos:position pos:line="41" pos:column="32"/></operator><name pos:line="41" pos:column="29">flags<pos:position pos:line="41" pos:column="34"/></name></name> <operator pos:line="41" pos:column="35">&amp;<pos:position pos:line="41" pos:column="40"/></operator> <name pos:line="41" pos:column="37">REF_NODEREF<pos:position pos:line="41" pos:column="48"/></name></expr>)<pos:position pos:line="41" pos:column="49"/></condition><then pos:line="41" pos:column="49"> <block pos:line="41" pos:column="50">{
			<comment type="block" pos:line="42" pos:column="25">/*
			 * We won't be reading the referent as part of
			 * the transaction, so we have to read it here
			 * to record and possibly check old_sha1:
			 */</comment>
			<if pos:line="47" pos:column="25">if <condition pos:line="47" pos:column="28">(<expr><call><name pos:line="47" pos:column="29">read_ref_full<pos:position pos:line="47" pos:column="42"/></name><argument_list pos:line="47" pos:column="42">(<argument><expr><name><name pos:line="47" pos:column="43">referent<pos:position pos:line="47" pos:column="51"/></name><operator pos:line="47" pos:column="51">.<pos:position pos:line="47" pos:column="52"/></operator><name pos:line="47" pos:column="52">buf<pos:position pos:line="47" pos:column="55"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="57">0<pos:position pos:line="47" pos:column="58"/></literal></expr></argument>,
					  <argument><expr><name><name pos:line="48" pos:column="43">lock<pos:position pos:line="48" pos:column="47"/></name><operator pos:line="48" pos:column="47">-&gt;<pos:position pos:line="48" pos:column="52"/></operator><name pos:line="48" pos:column="49">old_oid<pos:position pos:line="48" pos:column="56"/></name><operator pos:line="48" pos:column="56">.<pos:position pos:line="48" pos:column="57"/></operator><name pos:line="48" pos:column="57">hash<pos:position pos:line="48" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="63">NULL<pos:position pos:line="48" pos:column="67"/></name></expr></argument>)<pos:position pos:line="48" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="69"/></condition><then pos:line="48" pos:column="69"> <block pos:line="48" pos:column="70">{
				<if pos:line="49" pos:column="33">if <condition pos:line="49" pos:column="36">(<expr><name><name pos:line="49" pos:column="37">update<pos:position pos:line="49" pos:column="43"/></name><operator pos:line="49" pos:column="43">-&gt;<pos:position pos:line="49" pos:column="48"/></operator><name pos:line="49" pos:column="45">flags<pos:position pos:line="49" pos:column="50"/></name></name> <operator pos:line="49" pos:column="51">&amp;<pos:position pos:line="49" pos:column="56"/></operator> <name pos:line="49" pos:column="53">REF_HAVE_OLD<pos:position pos:line="49" pos:column="65"/></name></expr>)<pos:position pos:line="49" pos:column="66"/></condition><then pos:line="49" pos:column="66"> <block pos:line="49" pos:column="67">{
					<expr_stmt><expr><call><name pos:line="50" pos:column="41">strbuf_addf<pos:position pos:line="50" pos:column="52"/></name><argument_list pos:line="50" pos:column="52">(<argument><expr><name pos:line="50" pos:column="53">err<pos:position pos:line="50" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="58">"cannot lock ref '%s': "<pos:position pos:line="50" pos:column="82"/></literal>
						    <literal type="string" pos:line="51" pos:column="53">"error reading reference"<pos:position pos:line="51" pos:column="78"/></literal></expr></argument>,
						    <argument><expr><call><name pos:line="52" pos:column="53">original_update_refname<pos:position pos:line="52" pos:column="76"/></name><argument_list pos:line="52" pos:column="76">(<argument><expr><name pos:line="52" pos:column="77">update<pos:position pos:line="52" pos:column="83"/></name></expr></argument>)<pos:position pos:line="52" pos:column="84"/></argument_list></call></expr></argument>)<pos:position pos:line="52" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="86"/></expr_stmt>
					<return pos:line="53" pos:column="41">return <expr><operator pos:line="53" pos:column="48">-<pos:position pos:line="53" pos:column="49"/></operator><literal type="number" pos:line="53" pos:column="49">1<pos:position pos:line="53" pos:column="50"/></literal></expr>;<pos:position pos:line="53" pos:column="51"/></return>
				}<pos:position pos:line="54" pos:column="34"/></block></then></if>
			}<pos:position pos:line="55" pos:column="26"/></block></then> <elseif pos:line="55" pos:column="27">else <if pos:line="55" pos:column="32">if <condition pos:line="55" pos:column="35">(<expr><call><name pos:line="55" pos:column="36">check_old_oid<pos:position pos:line="55" pos:column="49"/></name><argument_list pos:line="55" pos:column="49">(<argument><expr><name pos:line="55" pos:column="50">update<pos:position pos:line="55" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="55" pos:column="58">&amp;<pos:position pos:line="55" pos:column="63"/></operator><name><name pos:line="55" pos:column="59">lock<pos:position pos:line="55" pos:column="63"/></name><operator pos:line="55" pos:column="63">-&gt;<pos:position pos:line="55" pos:column="68"/></operator><name pos:line="55" pos:column="65">old_oid<pos:position pos:line="55" pos:column="72"/></name></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="74">err<pos:position pos:line="55" pos:column="77"/></name></expr></argument>)<pos:position pos:line="55" pos:column="78"/></argument_list></call></expr>)<pos:position pos:line="55" pos:column="79"/></condition><then pos:line="55" pos:column="79"> <block pos:line="55" pos:column="80">{
				<return pos:line="56" pos:column="33">return <expr><name pos:line="56" pos:column="40">TRANSACTION_GENERIC_ERROR<pos:position pos:line="56" pos:column="65"/></name></expr>;<pos:position pos:line="56" pos:column="66"/></return>
			}<pos:position pos:line="57" pos:column="26"/></block></then></if></elseif></if>
		}<pos:position pos:line="58" pos:column="18"/></block></then> <else pos:line="58" pos:column="19">else <block pos:line="58" pos:column="24">{
			<comment type="block" pos:line="59" pos:column="25">/*
			 * Create a new update for the reference this
			 * symref is pointing at. Also, we will record
			 * and verify old_sha1 for this update as part
			 * of processing the split-off update, so we
			 * don't have to do it here.
			 */</comment>
			<expr_stmt><expr><name pos:line="66" pos:column="25">ret<pos:position pos:line="66" pos:column="28"/></name> <operator pos:line="66" pos:column="29">=<pos:position pos:line="66" pos:column="30"/></operator> <call><name pos:line="66" pos:column="31">split_symref_update<pos:position pos:line="66" pos:column="50"/></name><argument_list pos:line="66" pos:column="50">(<argument><expr><name pos:line="66" pos:column="51">update<pos:position pos:line="66" pos:column="57"/></name></expr></argument>, <argument><expr><name><name pos:line="66" pos:column="59">referent<pos:position pos:line="66" pos:column="67"/></name><operator pos:line="66" pos:column="67">.<pos:position pos:line="66" pos:column="68"/></operator><name pos:line="66" pos:column="68">buf<pos:position pos:line="66" pos:column="71"/></name></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="73">transaction<pos:position pos:line="66" pos:column="84"/></name></expr></argument>,
						  <argument><expr><name pos:line="67" pos:column="51">affected_refnames<pos:position pos:line="67" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="70">err<pos:position pos:line="67" pos:column="73"/></name></expr></argument>)<pos:position pos:line="67" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="75"/></expr_stmt>
			<if pos:line="68" pos:column="25">if <condition pos:line="68" pos:column="28">(<expr><name pos:line="68" pos:column="29">ret<pos:position pos:line="68" pos:column="32"/></name></expr>)<pos:position pos:line="68" pos:column="33"/></condition><then pos:line="68" pos:column="33">
				<block type="pseudo"><return pos:line="69" pos:column="33">return <expr><name pos:line="69" pos:column="40">ret<pos:position pos:line="69" pos:column="43"/></name></expr>;<pos:position pos:line="69" pos:column="44"/></return></block></then></if>
		}<pos:position pos:line="70" pos:column="18"/></block></else></if>
	}<pos:position pos:line="71" pos:column="10"/></block></then> <else pos:line="71" pos:column="11">else <block pos:line="71" pos:column="16">{
		<decl_stmt><decl><type><name><name pos:line="72" pos:column="17">struct<pos:position pos:line="72" pos:column="23"/></name> <name pos:line="72" pos:column="24">ref_update<pos:position pos:line="72" pos:column="34"/></name></name> <modifier pos:line="72" pos:column="35">*<pos:position pos:line="72" pos:column="36"/></modifier></type><name pos:line="72" pos:column="36">parent_update<pos:position pos:line="72" pos:column="49"/></name></decl>;<pos:position pos:line="72" pos:column="50"/></decl_stmt>

		<if pos:line="74" pos:column="17">if <condition pos:line="74" pos:column="20">(<expr><call><name pos:line="74" pos:column="21">check_old_oid<pos:position pos:line="74" pos:column="34"/></name><argument_list pos:line="74" pos:column="34">(<argument><expr><name pos:line="74" pos:column="35">update<pos:position pos:line="74" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="74" pos:column="43">&amp;<pos:position pos:line="74" pos:column="48"/></operator><name><name pos:line="74" pos:column="44">lock<pos:position pos:line="74" pos:column="48"/></name><operator pos:line="74" pos:column="48">-&gt;<pos:position pos:line="74" pos:column="53"/></operator><name pos:line="74" pos:column="50">old_oid<pos:position pos:line="74" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="59">err<pos:position pos:line="74" pos:column="62"/></name></expr></argument>)<pos:position pos:line="74" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="74" pos:column="64"/></condition><then pos:line="74" pos:column="64">
			<block type="pseudo"><return pos:line="75" pos:column="25">return <expr><name pos:line="75" pos:column="32">TRANSACTION_GENERIC_ERROR<pos:position pos:line="75" pos:column="57"/></name></expr>;<pos:position pos:line="75" pos:column="58"/></return></block></then></if>

		<comment type="block" pos:line="77" pos:column="17">/*
		 * If this update is happening indirectly because of a
		 * symref update, record the old SHA-1 in the parent
		 * update:
		 */</comment>
		<for pos:line="82" pos:column="17">for <control pos:line="82" pos:column="21">(<init><expr><name pos:line="82" pos:column="22">parent_update<pos:position pos:line="82" pos:column="35"/></name> <operator pos:line="82" pos:column="36">=<pos:position pos:line="82" pos:column="37"/></operator> <name><name pos:line="82" pos:column="38">update<pos:position pos:line="82" pos:column="44"/></name><operator pos:line="82" pos:column="44">-&gt;<pos:position pos:line="82" pos:column="49"/></operator><name pos:line="82" pos:column="46">parent_update<pos:position pos:line="82" pos:column="59"/></name></name></expr>;<pos:position pos:line="82" pos:column="60"/></init>
		     <condition><expr><name pos:line="83" pos:column="22">parent_update<pos:position pos:line="83" pos:column="35"/></name></expr>;<pos:position pos:line="83" pos:column="36"/></condition>
		     <incr><expr><name pos:line="84" pos:column="22">parent_update<pos:position pos:line="84" pos:column="35"/></name> <operator pos:line="84" pos:column="36">=<pos:position pos:line="84" pos:column="37"/></operator> <name><name pos:line="84" pos:column="38">parent_update<pos:position pos:line="84" pos:column="51"/></name><operator pos:line="84" pos:column="51">-&gt;<pos:position pos:line="84" pos:column="56"/></operator><name pos:line="84" pos:column="53">parent_update<pos:position pos:line="84" pos:column="66"/></name></name></expr></incr>)<pos:position pos:line="84" pos:column="67"/></control> <block pos:line="84" pos:column="68">{
			<expr_stmt><expr><call><name pos:line="85" pos:column="25">oidcpy<pos:position pos:line="85" pos:column="31"/></name><argument_list pos:line="85" pos:column="31">(<argument><expr><operator pos:line="85" pos:column="32">&amp;<pos:position pos:line="85" pos:column="37"/></operator><name><name pos:line="85" pos:column="33">parent_update<pos:position pos:line="85" pos:column="46"/></name><operator pos:line="85" pos:column="46">-&gt;<pos:position pos:line="85" pos:column="51"/></operator><name pos:line="85" pos:column="48">lock<pos:position pos:line="85" pos:column="52"/></name><operator pos:line="85" pos:column="52">-&gt;<pos:position pos:line="85" pos:column="57"/></operator><name pos:line="85" pos:column="54">old_oid<pos:position pos:line="85" pos:column="61"/></name></name></expr></argument>, <argument><expr><operator pos:line="85" pos:column="63">&amp;<pos:position pos:line="85" pos:column="68"/></operator><name><name pos:line="85" pos:column="64">lock<pos:position pos:line="85" pos:column="68"/></name><operator pos:line="85" pos:column="68">-&gt;<pos:position pos:line="85" pos:column="73"/></operator><name pos:line="85" pos:column="70">old_oid<pos:position pos:line="85" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="85" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="79"/></expr_stmt>
		}<pos:position pos:line="86" pos:column="18"/></block></for>
	}<pos:position pos:line="87" pos:column="10"/></block></else></if>

	<if pos:line="89" pos:column="9">if <condition pos:line="89" pos:column="12">(<expr><operator pos:line="89" pos:column="13">(<pos:position pos:line="89" pos:column="14"/></operator><name><name pos:line="89" pos:column="14">update<pos:position pos:line="89" pos:column="20"/></name><operator pos:line="89" pos:column="20">-&gt;<pos:position pos:line="89" pos:column="25"/></operator><name pos:line="89" pos:column="22">flags<pos:position pos:line="89" pos:column="27"/></name></name> <operator pos:line="89" pos:column="28">&amp;<pos:position pos:line="89" pos:column="33"/></operator> <name pos:line="89" pos:column="30">REF_HAVE_NEW<pos:position pos:line="89" pos:column="42"/></name><operator pos:line="89" pos:column="42">)<pos:position pos:line="89" pos:column="43"/></operator> <operator pos:line="89" pos:column="44">&amp;&amp;<pos:position pos:line="89" pos:column="54"/></operator>
	    <operator pos:line="90" pos:column="13">!<pos:position pos:line="90" pos:column="14"/></operator><operator pos:line="90" pos:column="14">(<pos:position pos:line="90" pos:column="15"/></operator><name><name pos:line="90" pos:column="15">update<pos:position pos:line="90" pos:column="21"/></name><operator pos:line="90" pos:column="21">-&gt;<pos:position pos:line="90" pos:column="26"/></operator><name pos:line="90" pos:column="23">flags<pos:position pos:line="90" pos:column="28"/></name></name> <operator pos:line="90" pos:column="29">&amp;<pos:position pos:line="90" pos:column="34"/></operator> <name pos:line="90" pos:column="31">REF_DELETING<pos:position pos:line="90" pos:column="43"/></name><operator pos:line="90" pos:column="43">)<pos:position pos:line="90" pos:column="44"/></operator> <operator pos:line="90" pos:column="45">&amp;&amp;<pos:position pos:line="90" pos:column="55"/></operator>
	    <operator pos:line="91" pos:column="13">!<pos:position pos:line="91" pos:column="14"/></operator><operator pos:line="91" pos:column="14">(<pos:position pos:line="91" pos:column="15"/></operator><name><name pos:line="91" pos:column="15">update<pos:position pos:line="91" pos:column="21"/></name><operator pos:line="91" pos:column="21">-&gt;<pos:position pos:line="91" pos:column="26"/></operator><name pos:line="91" pos:column="23">flags<pos:position pos:line="91" pos:column="28"/></name></name> <operator pos:line="91" pos:column="29">&amp;<pos:position pos:line="91" pos:column="34"/></operator> <name pos:line="91" pos:column="31">REF_LOG_ONLY<pos:position pos:line="91" pos:column="43"/></name><operator pos:line="91" pos:column="43">)<pos:position pos:line="91" pos:column="44"/></operator></expr>)<pos:position pos:line="91" pos:column="45"/></condition><then pos:line="91" pos:column="45"> <block pos:line="91" pos:column="46">{
		<if pos:line="92" pos:column="17">if <condition pos:line="92" pos:column="20">(<expr><operator pos:line="92" pos:column="21">!<pos:position pos:line="92" pos:column="22"/></operator><operator pos:line="92" pos:column="22">(<pos:position pos:line="92" pos:column="23"/></operator><name><name pos:line="92" pos:column="23">update<pos:position pos:line="92" pos:column="29"/></name><operator pos:line="92" pos:column="29">-&gt;<pos:position pos:line="92" pos:column="34"/></operator><name pos:line="92" pos:column="31">type<pos:position pos:line="92" pos:column="35"/></name></name> <operator pos:line="92" pos:column="36">&amp;<pos:position pos:line="92" pos:column="41"/></operator> <name pos:line="92" pos:column="38">REF_ISSYMREF<pos:position pos:line="92" pos:column="50"/></name><operator pos:line="92" pos:column="50">)<pos:position pos:line="92" pos:column="51"/></operator> <operator pos:line="92" pos:column="52">&amp;&amp;<pos:position pos:line="92" pos:column="62"/></operator>
		    <operator pos:line="93" pos:column="21">!<pos:position pos:line="93" pos:column="22"/></operator><call><name pos:line="93" pos:column="22">hashcmp<pos:position pos:line="93" pos:column="29"/></name><argument_list pos:line="93" pos:column="29">(<argument><expr><name><name pos:line="93" pos:column="30">lock<pos:position pos:line="93" pos:column="34"/></name><operator pos:line="93" pos:column="34">-&gt;<pos:position pos:line="93" pos:column="39"/></operator><name pos:line="93" pos:column="36">old_oid<pos:position pos:line="93" pos:column="43"/></name><operator pos:line="93" pos:column="43">.<pos:position pos:line="93" pos:column="44"/></operator><name pos:line="93" pos:column="44">hash<pos:position pos:line="93" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="93" pos:column="50">update<pos:position pos:line="93" pos:column="56"/></name><operator pos:line="93" pos:column="56">-&gt;<pos:position pos:line="93" pos:column="61"/></operator><name pos:line="93" pos:column="58">new_sha1<pos:position pos:line="93" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="93" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="93" pos:column="68"/></condition><then pos:line="93" pos:column="68"> <block pos:line="93" pos:column="69">{
			<comment type="block" pos:line="94" pos:column="25">/*
			 * The reference already has the desired
			 * value, so we don't need to write it.
			 */</comment>
		}<pos:position pos:line="98" pos:column="18"/></block></then> <elseif pos:line="98" pos:column="19">else <if pos:line="98" pos:column="24">if <condition pos:line="98" pos:column="27">(<expr><call><name pos:line="98" pos:column="28">write_ref_to_lockfile<pos:position pos:line="98" pos:column="49"/></name><argument_list pos:line="98" pos:column="49">(<argument><expr><name pos:line="98" pos:column="50">lock<pos:position pos:line="98" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="98" pos:column="56">update<pos:position pos:line="98" pos:column="62"/></name><operator pos:line="98" pos:column="62">-&gt;<pos:position pos:line="98" pos:column="67"/></operator><name pos:line="98" pos:column="64">new_sha1<pos:position pos:line="98" pos:column="72"/></name></name></expr></argument>,
						 <argument><expr><name pos:line="99" pos:column="50">err<pos:position pos:line="99" pos:column="53"/></name></expr></argument>)<pos:position pos:line="99" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="99" pos:column="55"/></condition><then pos:line="99" pos:column="55"> <block pos:line="99" pos:column="56">{
			<decl_stmt><decl><type><name pos:line="100" pos:column="25">char<pos:position pos:line="100" pos:column="29"/></name> <modifier pos:line="100" pos:column="30">*<pos:position pos:line="100" pos:column="31"/></modifier></type><name pos:line="100" pos:column="31">write_err<pos:position pos:line="100" pos:column="40"/></name> <init pos:line="100" pos:column="41">= <expr><call><name pos:line="100" pos:column="43">strbuf_detach<pos:position pos:line="100" pos:column="56"/></name><argument_list pos:line="100" pos:column="56">(<argument><expr><name pos:line="100" pos:column="57">err<pos:position pos:line="100" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="62">NULL<pos:position pos:line="100" pos:column="66"/></name></expr></argument>)<pos:position pos:line="100" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="100" pos:column="68"/></decl_stmt>

			<comment type="block" pos:line="102" pos:column="25">/*
			 * The lock was freed upon failure of
			 * write_ref_to_lockfile():
			 */</comment>
			<expr_stmt><expr><name><name pos:line="106" pos:column="25">update<pos:position pos:line="106" pos:column="31"/></name><operator pos:line="106" pos:column="31">-&gt;<pos:position pos:line="106" pos:column="36"/></operator><name pos:line="106" pos:column="33">lock<pos:position pos:line="106" pos:column="37"/></name></name> <operator pos:line="106" pos:column="38">=<pos:position pos:line="106" pos:column="39"/></operator> <name pos:line="106" pos:column="40">NULL<pos:position pos:line="106" pos:column="44"/></name></expr>;<pos:position pos:line="106" pos:column="45"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="107" pos:column="25">strbuf_addf<pos:position pos:line="107" pos:column="36"/></name><argument_list pos:line="107" pos:column="36">(<argument><expr><name pos:line="107" pos:column="37">err<pos:position pos:line="107" pos:column="40"/></name></expr></argument>,
				    <argument><expr><literal type="string" pos:line="108" pos:column="37">"cannot update ref '%s': %s"<pos:position pos:line="108" pos:column="65"/></literal></expr></argument>,
				    <argument><expr><name><name pos:line="109" pos:column="37">update<pos:position pos:line="109" pos:column="43"/></name><operator pos:line="109" pos:column="43">-&gt;<pos:position pos:line="109" pos:column="48"/></operator><name pos:line="109" pos:column="45">refname<pos:position pos:line="109" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="109" pos:column="54">write_err<pos:position pos:line="109" pos:column="63"/></name></expr></argument>)<pos:position pos:line="109" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="65"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="110" pos:column="25">free<pos:position pos:line="110" pos:column="29"/></name><argument_list pos:line="110" pos:column="29">(<argument><expr><name pos:line="110" pos:column="30">write_err<pos:position pos:line="110" pos:column="39"/></name></expr></argument>)<pos:position pos:line="110" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="41"/></expr_stmt>
			<return pos:line="111" pos:column="25">return <expr><name pos:line="111" pos:column="32">TRANSACTION_GENERIC_ERROR<pos:position pos:line="111" pos:column="57"/></name></expr>;<pos:position pos:line="111" pos:column="58"/></return>
		}<pos:position pos:line="112" pos:column="18"/></block></then></if></elseif> <else pos:line="112" pos:column="19">else <block pos:line="112" pos:column="24">{
			<expr_stmt><expr><name><name pos:line="113" pos:column="25">update<pos:position pos:line="113" pos:column="31"/></name><operator pos:line="113" pos:column="31">-&gt;<pos:position pos:line="113" pos:column="36"/></operator><name pos:line="113" pos:column="33">flags<pos:position pos:line="113" pos:column="38"/></name></name> <operator pos:line="113" pos:column="39">|=<pos:position pos:line="113" pos:column="41"/></operator> <name pos:line="113" pos:column="42">REF_NEEDS_COMMIT<pos:position pos:line="113" pos:column="58"/></name></expr>;<pos:position pos:line="113" pos:column="59"/></expr_stmt>
		}<pos:position pos:line="114" pos:column="18"/></block></else></if>
	}<pos:position pos:line="115" pos:column="10"/></block></then></if>
	<if pos:line="116" pos:column="9">if <condition pos:line="116" pos:column="12">(<expr><operator pos:line="116" pos:column="13">!<pos:position pos:line="116" pos:column="14"/></operator><operator pos:line="116" pos:column="14">(<pos:position pos:line="116" pos:column="15"/></operator><name><name pos:line="116" pos:column="15">update<pos:position pos:line="116" pos:column="21"/></name><operator pos:line="116" pos:column="21">-&gt;<pos:position pos:line="116" pos:column="26"/></operator><name pos:line="116" pos:column="23">flags<pos:position pos:line="116" pos:column="28"/></name></name> <operator pos:line="116" pos:column="29">&amp;<pos:position pos:line="116" pos:column="34"/></operator> <name pos:line="116" pos:column="31">REF_NEEDS_COMMIT<pos:position pos:line="116" pos:column="47"/></name><operator pos:line="116" pos:column="47">)<pos:position pos:line="116" pos:column="48"/></operator></expr>)<pos:position pos:line="116" pos:column="49"/></condition><then pos:line="116" pos:column="49"> <block pos:line="116" pos:column="50">{
		<comment type="block" pos:line="117" pos:column="17">/*
		 * We didn't call write_ref_to_lockfile(), so
		 * the lockfile is still open. Close it to
		 * free up the file descriptor:
		 */</comment>
		<if pos:line="122" pos:column="17">if <condition pos:line="122" pos:column="20">(<expr><call><name pos:line="122" pos:column="21">close_ref<pos:position pos:line="122" pos:column="30"/></name><argument_list pos:line="122" pos:column="30">(<argument><expr><name pos:line="122" pos:column="31">lock<pos:position pos:line="122" pos:column="35"/></name></expr></argument>)<pos:position pos:line="122" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="122" pos:column="37"/></condition><then pos:line="122" pos:column="37"> <block pos:line="122" pos:column="38">{
			<expr_stmt><expr><call><name pos:line="123" pos:column="25">strbuf_addf<pos:position pos:line="123" pos:column="36"/></name><argument_list pos:line="123" pos:column="36">(<argument><expr><name pos:line="123" pos:column="37">err<pos:position pos:line="123" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="123" pos:column="42">"couldn't close '%s.lock'"<pos:position pos:line="123" pos:column="68"/></literal></expr></argument>,
				    <argument><expr><name><name pos:line="124" pos:column="37">update<pos:position pos:line="124" pos:column="43"/></name><operator pos:line="124" pos:column="43">-&gt;<pos:position pos:line="124" pos:column="48"/></operator><name pos:line="124" pos:column="45">refname<pos:position pos:line="124" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="124" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="54"/></expr_stmt>
			<return pos:line="125" pos:column="25">return <expr><name pos:line="125" pos:column="32">TRANSACTION_GENERIC_ERROR<pos:position pos:line="125" pos:column="57"/></name></expr>;<pos:position pos:line="125" pos:column="58"/></return>
		}<pos:position pos:line="126" pos:column="18"/></block></then></if>
	}<pos:position pos:line="127" pos:column="10"/></block></then></if>
	<return pos:line="128" pos:column="9">return <expr><literal type="number" pos:line="128" pos:column="16">0<pos:position pos:line="128" pos:column="17"/></literal></expr>;<pos:position pos:line="128" pos:column="18"/></return>
}<pos:position pos:line="129" pos:column="2"/></block></function></unit>

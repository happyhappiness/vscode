<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_138.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">run_external_diff<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><specifier pos:line="1" pos:column="31">const<pos:position pos:line="1" pos:column="36"/></specifier> <name pos:line="1" pos:column="37">char<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">pgm<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>,
			      <parameter><decl><type><specifier pos:line="2" pos:column="31">const<pos:position pos:line="2" pos:column="36"/></specifier> <name pos:line="2" pos:column="37">char<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">name<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>,
			      <parameter><decl><type><specifier pos:line="3" pos:column="31">const<pos:position pos:line="3" pos:column="36"/></specifier> <name pos:line="3" pos:column="37">char<pos:position pos:line="3" pos:column="41"/></name> <modifier pos:line="3" pos:column="42">*<pos:position pos:line="3" pos:column="43"/></modifier></type><name pos:line="3" pos:column="43">other<pos:position pos:line="3" pos:column="48"/></name></decl></parameter>,
			      <parameter><decl><type><name><name pos:line="4" pos:column="31">struct<pos:position pos:line="4" pos:column="37"/></name> <name pos:line="4" pos:column="38">diff_filespec<pos:position pos:line="4" pos:column="51"/></name></name> <modifier pos:line="4" pos:column="52">*<pos:position pos:line="4" pos:column="53"/></modifier></type><name pos:line="4" pos:column="53">one<pos:position pos:line="4" pos:column="56"/></name></decl></parameter>,
			      <parameter><decl><type><name><name pos:line="5" pos:column="31">struct<pos:position pos:line="5" pos:column="37"/></name> <name pos:line="5" pos:column="38">diff_filespec<pos:position pos:line="5" pos:column="51"/></name></name> <modifier pos:line="5" pos:column="52">*<pos:position pos:line="5" pos:column="53"/></modifier></type><name pos:line="5" pos:column="53">two<pos:position pos:line="5" pos:column="56"/></name></decl></parameter>,
			      <parameter><decl><type><specifier pos:line="6" pos:column="31">const<pos:position pos:line="6" pos:column="36"/></specifier> <name pos:line="6" pos:column="37">char<pos:position pos:line="6" pos:column="41"/></name> <modifier pos:line="6" pos:column="42">*<pos:position pos:line="6" pos:column="43"/></modifier></type><name pos:line="6" pos:column="43">xfrm_msg<pos:position pos:line="6" pos:column="51"/></name></decl></parameter>,
			      <parameter><decl><type><name pos:line="7" pos:column="31">int<pos:position pos:line="7" pos:column="34"/></name></type> <name pos:line="7" pos:column="35">complete_rewrite<pos:position pos:line="7" pos:column="51"/></name></decl></parameter>,
			      <parameter><decl><type><name><name pos:line="8" pos:column="31">struct<pos:position pos:line="8" pos:column="37"/></name> <name pos:line="8" pos:column="38">diff_options<pos:position pos:line="8" pos:column="50"/></name></name> <modifier pos:line="8" pos:column="51">*<pos:position pos:line="8" pos:column="52"/></modifier></type><name pos:line="8" pos:column="52">o<pos:position pos:line="8" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="8" pos:column="54"/></parameter_list>
<block pos:line="9" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="10" pos:column="9">struct<pos:position pos:line="10" pos:column="15"/></name> <name pos:line="10" pos:column="16">argv_array<pos:position pos:line="10" pos:column="26"/></name></name></type> <name pos:line="10" pos:column="27">argv<pos:position pos:line="10" pos:column="31"/></name> <init pos:line="10" pos:column="32">= <expr><name pos:line="10" pos:column="34">ARGV_ARRAY_INIT<pos:position pos:line="10" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="50"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">int<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">retval<pos:position pos:line="11" pos:column="19"/></name></decl>;<pos:position pos:line="11" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="12" pos:column="9">struct<pos:position pos:line="12" pos:column="15"/></name> <name pos:line="12" pos:column="16">diff_queue_struct<pos:position pos:line="12" pos:column="33"/></name></name> <modifier pos:line="12" pos:column="34">*<pos:position pos:line="12" pos:column="35"/></modifier></type><name pos:line="12" pos:column="35">q<pos:position pos:line="12" pos:column="36"/></name> <init pos:line="12" pos:column="37">= <expr><operator pos:line="12" pos:column="39">&amp;<pos:position pos:line="12" pos:column="44"/></operator><name pos:line="12" pos:column="40">diff_queued_diff<pos:position pos:line="12" pos:column="56"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="57"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="13" pos:column="9">const<pos:position pos:line="13" pos:column="14"/></specifier> <name pos:line="13" pos:column="15">char<pos:position pos:line="13" pos:column="19"/></name> <modifier pos:line="13" pos:column="20">*<pos:position pos:line="13" pos:column="21"/></modifier></type><name><name pos:line="13" pos:column="21">env<pos:position pos:line="13" pos:column="24"/></name><index pos:line="13" pos:column="24">[<expr><literal type="number" pos:line="13" pos:column="25">3<pos:position pos:line="13" pos:column="26"/></literal></expr>]<pos:position pos:line="13" pos:column="27"/></index></name> <init pos:line="13" pos:column="28">= <expr><block pos:line="13" pos:column="30">{ <expr><name pos:line="13" pos:column="32">NULL<pos:position pos:line="13" pos:column="36"/></name></expr> }<pos:position pos:line="13" pos:column="38"/></block></expr></init></decl>;<pos:position pos:line="13" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="14" pos:column="9">char<pos:position pos:line="14" pos:column="13"/></name></type> <name><name pos:line="14" pos:column="14">env_counter<pos:position pos:line="14" pos:column="25"/></name><index pos:line="14" pos:column="25">[<expr><literal type="number" pos:line="14" pos:column="26">50<pos:position pos:line="14" pos:column="28"/></literal></expr>]<pos:position pos:line="14" pos:column="29"/></index></name></decl>;<pos:position pos:line="14" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="15" pos:column="9">char<pos:position pos:line="15" pos:column="13"/></name></type> <name><name pos:line="15" pos:column="14">env_total<pos:position pos:line="15" pos:column="23"/></name><index pos:line="15" pos:column="23">[<expr><literal type="number" pos:line="15" pos:column="24">50<pos:position pos:line="15" pos:column="26"/></literal></expr>]<pos:position pos:line="15" pos:column="27"/></index></name></decl>;<pos:position pos:line="15" pos:column="28"/></decl_stmt>

	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">one<pos:position pos:line="17" pos:column="16"/></name> <operator pos:line="17" pos:column="17">&amp;&amp;<pos:position pos:line="17" pos:column="27"/></operator> <name pos:line="17" pos:column="20">two<pos:position pos:line="17" pos:column="23"/></name></expr>)<pos:position pos:line="17" pos:column="24"/></condition><then pos:line="17" pos:column="24"> <block pos:line="17" pos:column="25">{
		<decl_stmt><decl><type><name><name pos:line="18" pos:column="17">struct<pos:position pos:line="18" pos:column="23"/></name> <name pos:line="18" pos:column="24">diff_tempfile<pos:position pos:line="18" pos:column="37"/></name></name> <modifier pos:line="18" pos:column="38">*<pos:position pos:line="18" pos:column="39"/></modifier></type><name pos:line="18" pos:column="39">temp_one<pos:position pos:line="18" pos:column="47"/></name></decl>, <modifier pos:line="18" pos:column="49">*<pos:position pos:line="18" pos:column="50"/></modifier><decl><type ref="prev"/><name pos:line="18" pos:column="50">temp_two<pos:position pos:line="18" pos:column="58"/></name></decl>;<pos:position pos:line="18" pos:column="59"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="19" pos:column="17">const<pos:position pos:line="19" pos:column="22"/></specifier> <name pos:line="19" pos:column="23">char<pos:position pos:line="19" pos:column="27"/></name> <modifier pos:line="19" pos:column="28">*<pos:position pos:line="19" pos:column="29"/></modifier></type><name pos:line="19" pos:column="29">othername<pos:position pos:line="19" pos:column="38"/></name> <init pos:line="19" pos:column="39">= <expr><operator pos:line="19" pos:column="41">(<pos:position pos:line="19" pos:column="42"/></operator><ternary><condition><expr><name pos:line="19" pos:column="42">other<pos:position pos:line="19" pos:column="47"/></name></expr> ?<pos:position pos:line="19" pos:column="49"/></condition><then pos:line="19" pos:column="49"> <expr><name pos:line="19" pos:column="50">other<pos:position pos:line="19" pos:column="55"/></name></expr> <pos:position pos:line="19" pos:column="56"/></then><else pos:line="19" pos:column="56">: <expr><name pos:line="19" pos:column="58">name<pos:position pos:line="19" pos:column="62"/></name></expr></else></ternary><operator pos:line="19" pos:column="62">)<pos:position pos:line="19" pos:column="63"/></operator></expr></init></decl>;<pos:position pos:line="19" pos:column="64"/></decl_stmt>
		<expr_stmt><expr><name pos:line="20" pos:column="17">temp_one<pos:position pos:line="20" pos:column="25"/></name> <operator pos:line="20" pos:column="26">=<pos:position pos:line="20" pos:column="27"/></operator> <call><name pos:line="20" pos:column="28">prepare_temp_file<pos:position pos:line="20" pos:column="45"/></name><argument_list pos:line="20" pos:column="45">(<argument><expr><name pos:line="20" pos:column="46">name<pos:position pos:line="20" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="52">one<pos:position pos:line="20" pos:column="55"/></name></expr></argument>)<pos:position pos:line="20" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="57"/></expr_stmt>
		<expr_stmt><expr><name pos:line="21" pos:column="17">temp_two<pos:position pos:line="21" pos:column="25"/></name> <operator pos:line="21" pos:column="26">=<pos:position pos:line="21" pos:column="27"/></operator> <call><name pos:line="21" pos:column="28">prepare_temp_file<pos:position pos:line="21" pos:column="45"/></name><argument_list pos:line="21" pos:column="45">(<argument><expr><name pos:line="21" pos:column="46">othername<pos:position pos:line="21" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="57">two<pos:position pos:line="21" pos:column="60"/></name></expr></argument>)<pos:position pos:line="21" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="62"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="22" pos:column="17">argv_array_push<pos:position pos:line="22" pos:column="32"/></name><argument_list pos:line="22" pos:column="32">(<argument><expr><operator pos:line="22" pos:column="33">&amp;<pos:position pos:line="22" pos:column="38"/></operator><name pos:line="22" pos:column="34">argv<pos:position pos:line="22" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="40">pgm<pos:position pos:line="22" pos:column="43"/></name></expr></argument>)<pos:position pos:line="22" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="23" pos:column="17">argv_array_push<pos:position pos:line="23" pos:column="32"/></name><argument_list pos:line="23" pos:column="32">(<argument><expr><operator pos:line="23" pos:column="33">&amp;<pos:position pos:line="23" pos:column="38"/></operator><name pos:line="23" pos:column="34">argv<pos:position pos:line="23" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="40">name<pos:position pos:line="23" pos:column="44"/></name></expr></argument>)<pos:position pos:line="23" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="24" pos:column="17">argv_array_push<pos:position pos:line="24" pos:column="32"/></name><argument_list pos:line="24" pos:column="32">(<argument><expr><operator pos:line="24" pos:column="33">&amp;<pos:position pos:line="24" pos:column="38"/></operator><name pos:line="24" pos:column="34">argv<pos:position pos:line="24" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="40">temp_one<pos:position pos:line="24" pos:column="48"/></name><operator pos:line="24" pos:column="48">-&gt;<pos:position pos:line="24" pos:column="53"/></operator><name pos:line="24" pos:column="50">name<pos:position pos:line="24" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="56"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="25" pos:column="17">argv_array_push<pos:position pos:line="25" pos:column="32"/></name><argument_list pos:line="25" pos:column="32">(<argument><expr><operator pos:line="25" pos:column="33">&amp;<pos:position pos:line="25" pos:column="38"/></operator><name pos:line="25" pos:column="34">argv<pos:position pos:line="25" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="40">temp_one<pos:position pos:line="25" pos:column="48"/></name><operator pos:line="25" pos:column="48">-&gt;<pos:position pos:line="25" pos:column="53"/></operator><name pos:line="25" pos:column="50">hex<pos:position pos:line="25" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="55"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="26" pos:column="17">argv_array_push<pos:position pos:line="26" pos:column="32"/></name><argument_list pos:line="26" pos:column="32">(<argument><expr><operator pos:line="26" pos:column="33">&amp;<pos:position pos:line="26" pos:column="38"/></operator><name pos:line="26" pos:column="34">argv<pos:position pos:line="26" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="40">temp_one<pos:position pos:line="26" pos:column="48"/></name><operator pos:line="26" pos:column="48">-&gt;<pos:position pos:line="26" pos:column="53"/></operator><name pos:line="26" pos:column="50">mode<pos:position pos:line="26" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="56"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="27" pos:column="17">argv_array_push<pos:position pos:line="27" pos:column="32"/></name><argument_list pos:line="27" pos:column="32">(<argument><expr><operator pos:line="27" pos:column="33">&amp;<pos:position pos:line="27" pos:column="38"/></operator><name pos:line="27" pos:column="34">argv<pos:position pos:line="27" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="40">temp_two<pos:position pos:line="27" pos:column="48"/></name><operator pos:line="27" pos:column="48">-&gt;<pos:position pos:line="27" pos:column="53"/></operator><name pos:line="27" pos:column="50">name<pos:position pos:line="27" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="56"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="28" pos:column="17">argv_array_push<pos:position pos:line="28" pos:column="32"/></name><argument_list pos:line="28" pos:column="32">(<argument><expr><operator pos:line="28" pos:column="33">&amp;<pos:position pos:line="28" pos:column="38"/></operator><name pos:line="28" pos:column="34">argv<pos:position pos:line="28" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="40">temp_two<pos:position pos:line="28" pos:column="48"/></name><operator pos:line="28" pos:column="48">-&gt;<pos:position pos:line="28" pos:column="53"/></operator><name pos:line="28" pos:column="50">hex<pos:position pos:line="28" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="55"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="29" pos:column="17">argv_array_push<pos:position pos:line="29" pos:column="32"/></name><argument_list pos:line="29" pos:column="32">(<argument><expr><operator pos:line="29" pos:column="33">&amp;<pos:position pos:line="29" pos:column="38"/></operator><name pos:line="29" pos:column="34">argv<pos:position pos:line="29" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="40">temp_two<pos:position pos:line="29" pos:column="48"/></name><operator pos:line="29" pos:column="48">-&gt;<pos:position pos:line="29" pos:column="53"/></operator><name pos:line="29" pos:column="50">mode<pos:position pos:line="29" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="56"/></expr_stmt>
		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><name pos:line="30" pos:column="21">other<pos:position pos:line="30" pos:column="26"/></name></expr>)<pos:position pos:line="30" pos:column="27"/></condition><then pos:line="30" pos:column="27"> <block pos:line="30" pos:column="28">{
			<expr_stmt><expr><call><name pos:line="31" pos:column="25">argv_array_push<pos:position pos:line="31" pos:column="40"/></name><argument_list pos:line="31" pos:column="40">(<argument><expr><operator pos:line="31" pos:column="41">&amp;<pos:position pos:line="31" pos:column="46"/></operator><name pos:line="31" pos:column="42">argv<pos:position pos:line="31" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="48">other<pos:position pos:line="31" pos:column="53"/></name></expr></argument>)<pos:position pos:line="31" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="55"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="32" pos:column="25">argv_array_push<pos:position pos:line="32" pos:column="40"/></name><argument_list pos:line="32" pos:column="40">(<argument><expr><operator pos:line="32" pos:column="41">&amp;<pos:position pos:line="32" pos:column="46"/></operator><name pos:line="32" pos:column="42">argv<pos:position pos:line="32" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="48">xfrm_msg<pos:position pos:line="32" pos:column="56"/></name></expr></argument>)<pos:position pos:line="32" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="58"/></expr_stmt>
		}<pos:position pos:line="33" pos:column="18"/></block></then></if>
	}<pos:position pos:line="34" pos:column="10"/></block></then> <else pos:line="34" pos:column="11">else <block pos:line="34" pos:column="16">{
		<expr_stmt><expr><call><name pos:line="35" pos:column="17">argv_array_push<pos:position pos:line="35" pos:column="32"/></name><argument_list pos:line="35" pos:column="32">(<argument><expr><operator pos:line="35" pos:column="33">&amp;<pos:position pos:line="35" pos:column="38"/></operator><name pos:line="35" pos:column="34">argv<pos:position pos:line="35" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="40">pgm<pos:position pos:line="35" pos:column="43"/></name></expr></argument>)<pos:position pos:line="35" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="36" pos:column="17">argv_array_push<pos:position pos:line="36" pos:column="32"/></name><argument_list pos:line="36" pos:column="32">(<argument><expr><operator pos:line="36" pos:column="33">&amp;<pos:position pos:line="36" pos:column="38"/></operator><name pos:line="36" pos:column="34">argv<pos:position pos:line="36" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="40">name<pos:position pos:line="36" pos:column="44"/></name></expr></argument>)<pos:position pos:line="36" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="46"/></expr_stmt>
	}<pos:position pos:line="37" pos:column="10"/></block></else></if>
	<expr_stmt><expr><call><name pos:line="38" pos:column="9">fflush<pos:position pos:line="38" pos:column="15"/></name><argument_list pos:line="38" pos:column="15">(<argument><expr><name pos:line="38" pos:column="16">NULL<pos:position pos:line="38" pos:column="20"/></name></expr></argument>)<pos:position pos:line="38" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="22"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="40" pos:column="9">env<pos:position pos:line="40" pos:column="12"/></name><index pos:line="40" pos:column="12">[<expr><literal type="number" pos:line="40" pos:column="13">0<pos:position pos:line="40" pos:column="14"/></literal></expr>]<pos:position pos:line="40" pos:column="15"/></index></name> <operator pos:line="40" pos:column="16">=<pos:position pos:line="40" pos:column="17"/></operator> <name pos:line="40" pos:column="18">env_counter<pos:position pos:line="40" pos:column="29"/></name></expr>;<pos:position pos:line="40" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="41" pos:column="9">snprintf<pos:position pos:line="41" pos:column="17"/></name><argument_list pos:line="41" pos:column="17">(<argument><expr><name pos:line="41" pos:column="18">env_counter<pos:position pos:line="41" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="41" pos:column="31">sizeof<argument_list pos:line="41" pos:column="37">(<argument><expr><name pos:line="41" pos:column="38">env_counter<pos:position pos:line="41" pos:column="49"/></name></expr></argument>)<pos:position pos:line="41" pos:column="50"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="52">"GIT_DIFF_PATH_COUNTER=%d"<pos:position pos:line="41" pos:column="78"/></literal></expr></argument>,
		 <argument><expr><operator pos:line="42" pos:column="18">++<pos:position pos:line="42" pos:column="20"/></operator><name><name pos:line="42" pos:column="20">o<pos:position pos:line="42" pos:column="21"/></name><operator pos:line="42" pos:column="21">-&gt;<pos:position pos:line="42" pos:column="26"/></operator><name pos:line="42" pos:column="23">diff_path_counter<pos:position pos:line="42" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="43" pos:column="9">env<pos:position pos:line="43" pos:column="12"/></name><index pos:line="43" pos:column="12">[<expr><literal type="number" pos:line="43" pos:column="13">1<pos:position pos:line="43" pos:column="14"/></literal></expr>]<pos:position pos:line="43" pos:column="15"/></index></name> <operator pos:line="43" pos:column="16">=<pos:position pos:line="43" pos:column="17"/></operator> <name pos:line="43" pos:column="18">env_total<pos:position pos:line="43" pos:column="27"/></name></expr>;<pos:position pos:line="43" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="44" pos:column="9">snprintf<pos:position pos:line="44" pos:column="17"/></name><argument_list pos:line="44" pos:column="17">(<argument><expr><name pos:line="44" pos:column="18">env_total<pos:position pos:line="44" pos:column="27"/></name></expr></argument>, <argument><expr><sizeof pos:line="44" pos:column="29">sizeof<argument_list pos:line="44" pos:column="35">(<argument><expr><name pos:line="44" pos:column="36">env_total<pos:position pos:line="44" pos:column="45"/></name></expr></argument>)<pos:position pos:line="44" pos:column="46"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="48">"GIT_DIFF_PATH_TOTAL=%d"<pos:position pos:line="44" pos:column="72"/></literal></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="74">q<pos:position pos:line="44" pos:column="75"/></name><operator pos:line="44" pos:column="75">-&gt;<pos:position pos:line="44" pos:column="80"/></operator><name pos:line="44" pos:column="77">nr<pos:position pos:line="44" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="81"/></expr_stmt>

	<expr_stmt><expr><name pos:line="46" pos:column="9">retval<pos:position pos:line="46" pos:column="15"/></name> <operator pos:line="46" pos:column="16">=<pos:position pos:line="46" pos:column="17"/></operator> <call><name pos:line="46" pos:column="18">run_command_v_opt_cd_env<pos:position pos:line="46" pos:column="42"/></name><argument_list pos:line="46" pos:column="42">(<argument><expr><name><name pos:line="46" pos:column="43">argv<pos:position pos:line="46" pos:column="47"/></name><operator pos:line="46" pos:column="47">.<pos:position pos:line="46" pos:column="48"/></operator><name pos:line="46" pos:column="48">argv<pos:position pos:line="46" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="54">RUN_USING_SHELL<pos:position pos:line="46" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="71">NULL<pos:position pos:line="46" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="77">env<pos:position pos:line="46" pos:column="80"/></name></expr></argument>)<pos:position pos:line="46" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="82"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="47" pos:column="9">remove_tempfile<pos:position pos:line="47" pos:column="24"/></name><argument_list pos:line="47" pos:column="24">()<pos:position pos:line="47" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="48" pos:column="9">argv_array_clear<pos:position pos:line="48" pos:column="25"/></name><argument_list pos:line="48" pos:column="25">(<argument><expr><operator pos:line="48" pos:column="26">&amp;<pos:position pos:line="48" pos:column="31"/></operator><name pos:line="48" pos:column="27">argv<pos:position pos:line="48" pos:column="31"/></name></expr></argument>)<pos:position pos:line="48" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="33"/></expr_stmt>
	<if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><name pos:line="49" pos:column="13">retval<pos:position pos:line="49" pos:column="19"/></name></expr>)<pos:position pos:line="49" pos:column="20"/></condition><then pos:line="49" pos:column="20"> <block pos:line="49" pos:column="21">{
		<expr_stmt><expr><call><name pos:line="50" pos:column="17">fprintf<pos:position pos:line="50" pos:column="24"/></name><argument_list pos:line="50" pos:column="24">(<argument><expr><name pos:line="50" pos:column="25">stderr<pos:position pos:line="50" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="33">"external diff died, stopping at %s.\n"<pos:position pos:line="50" pos:column="72"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="74">name<pos:position pos:line="50" pos:column="78"/></name></expr></argument>)<pos:position pos:line="50" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="80"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="51" pos:column="17">exit<pos:position pos:line="51" pos:column="21"/></name><argument_list pos:line="51" pos:column="21">(<argument><expr><literal type="number" pos:line="51" pos:column="22">1<pos:position pos:line="51" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="25"/></expr_stmt>
	}<pos:position pos:line="52" pos:column="10"/></block></then></if>
}<pos:position pos:line="53" pos:column="2"/></block></function></unit>

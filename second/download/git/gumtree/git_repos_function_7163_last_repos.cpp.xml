<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_7163_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">append_fetch_head<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">FILE<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">fp<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>,
			     <parameter><decl><type><specifier pos:line="2" pos:column="30">const<pos:position pos:line="2" pos:column="35"/></specifier> <name pos:line="2" pos:column="36">char<pos:position pos:line="2" pos:column="40"/></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">head<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="48">const<pos:position pos:line="2" pos:column="53"/></specifier> <name pos:line="2" pos:column="54">char<pos:position pos:line="2" pos:column="58"/></name> <modifier pos:line="2" pos:column="59">*<pos:position pos:line="2" pos:column="60"/></modifier></type><name pos:line="2" pos:column="60">remote<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>,
			     <parameter><decl><type><specifier pos:line="3" pos:column="30">const<pos:position pos:line="3" pos:column="35"/></specifier> <name pos:line="3" pos:column="36">char<pos:position pos:line="3" pos:column="40"/></name> <modifier pos:line="3" pos:column="41">*<pos:position pos:line="3" pos:column="42"/></modifier></type><name pos:line="3" pos:column="42">remote_name<pos:position pos:line="3" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="3" pos:column="55">const<pos:position pos:line="3" pos:column="60"/></specifier> <name pos:line="3" pos:column="61">char<pos:position pos:line="3" pos:column="65"/></name> <modifier pos:line="3" pos:column="66">*<pos:position pos:line="3" pos:column="67"/></modifier></type><name pos:line="3" pos:column="67">remote_nick<pos:position pos:line="3" pos:column="78"/></name></decl></parameter>,
			     <parameter><decl><type><specifier pos:line="4" pos:column="30">const<pos:position pos:line="4" pos:column="35"/></specifier> <name pos:line="4" pos:column="36">char<pos:position pos:line="4" pos:column="40"/></name> <modifier pos:line="4" pos:column="41">*<pos:position pos:line="4" pos:column="42"/></modifier></type><name pos:line="4" pos:column="42">local_name<pos:position pos:line="4" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="4" pos:column="54">int<pos:position pos:line="4" pos:column="57"/></name></type> <name pos:line="4" pos:column="58">not_for_merge<pos:position pos:line="4" pos:column="71"/></name></decl></parameter>,
			     <parameter><decl><type><name pos:line="5" pos:column="30">int<pos:position pos:line="5" pos:column="33"/></name></type> <name pos:line="5" pos:column="34">verbose<pos:position pos:line="5" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="5" pos:column="43">int<pos:position pos:line="5" pos:column="46"/></name></type> <name pos:line="5" pos:column="47">force<pos:position pos:line="5" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="53"/></parameter_list>
<block pos:line="6" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">commit<pos:position pos:line="7" pos:column="22"/></name></name> <modifier pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></modifier></type><name pos:line="7" pos:column="24">commit<pos:position pos:line="7" pos:column="30"/></name></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">remote_len<pos:position pos:line="8" pos:column="23"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="25">i<pos:position pos:line="8" pos:column="26"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="28">note_len<pos:position pos:line="8" pos:column="36"/></name></decl>;<pos:position pos:line="8" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">unsigned<pos:position pos:line="9" pos:column="17"/></name> <name pos:line="9" pos:column="18">char<pos:position pos:line="9" pos:column="22"/></name></type> <name><name pos:line="9" pos:column="23">sha1<pos:position pos:line="9" pos:column="27"/></name><index pos:line="9" pos:column="27">[<expr><literal type="number" pos:line="9" pos:column="28">20<pos:position pos:line="9" pos:column="30"/></literal></expr>]<pos:position pos:line="9" pos:column="31"/></index></name></decl>;<pos:position pos:line="9" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">char<pos:position pos:line="10" pos:column="13"/></name></type> <name><name pos:line="10" pos:column="14">note<pos:position pos:line="10" pos:column="18"/></name><index pos:line="10" pos:column="18">[<expr><literal type="number" pos:line="10" pos:column="19">1024<pos:position pos:line="10" pos:column="23"/></literal></expr>]<pos:position pos:line="10" pos:column="24"/></index></name></decl>;<pos:position pos:line="10" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="11" pos:column="9">const<pos:position pos:line="11" pos:column="14"/></specifier> <name pos:line="11" pos:column="15">char<pos:position pos:line="11" pos:column="19"/></name> <modifier pos:line="11" pos:column="20">*<pos:position pos:line="11" pos:column="21"/></modifier></type><name pos:line="11" pos:column="21">what<pos:position pos:line="11" pos:column="25"/></name></decl>, <modifier pos:line="11" pos:column="27">*<pos:position pos:line="11" pos:column="28"/></modifier><decl><type ref="prev"/><name pos:line="11" pos:column="28">kind<pos:position pos:line="11" pos:column="32"/></name></decl>;<pos:position pos:line="11" pos:column="33"/></decl_stmt>

	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><call><name pos:line="13" pos:column="13">get_sha1<pos:position pos:line="13" pos:column="21"/></name><argument_list pos:line="13" pos:column="21">(<argument><expr><name pos:line="13" pos:column="22">head<pos:position pos:line="13" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="28">sha1<pos:position pos:line="13" pos:column="32"/></name></expr></argument>)<pos:position pos:line="13" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="34"/></condition><then pos:line="13" pos:column="34">
		<block type="pseudo"><return pos:line="14" pos:column="17">return <expr><call><name pos:line="14" pos:column="24">error<pos:position pos:line="14" pos:column="29"/></name><argument_list pos:line="14" pos:column="29">(<argument><expr><literal type="string" pos:line="14" pos:column="30">"Not a valid object name: %s"<pos:position pos:line="14" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="61">head<pos:position pos:line="14" pos:column="65"/></name></expr></argument>)<pos:position pos:line="14" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="67"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="15" pos:column="9">commit<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <call><name pos:line="15" pos:column="18">lookup_commit_reference_gently<pos:position pos:line="15" pos:column="48"/></name><argument_list pos:line="15" pos:column="48">(<argument><expr><name pos:line="15" pos:column="49">sha1<pos:position pos:line="15" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="55">1<pos:position pos:line="15" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="58"/></expr_stmt>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><operator pos:line="16" pos:column="13">!<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="14">commit<pos:position pos:line="16" pos:column="20"/></name></expr>)<pos:position pos:line="16" pos:column="21"/></condition><then pos:line="16" pos:column="21">
		<block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="17">not_for_merge<pos:position pos:line="17" pos:column="30"/></name> <operator pos:line="17" pos:column="31">=<pos:position pos:line="17" pos:column="32"/></operator> <literal type="number" pos:line="17" pos:column="33">1<pos:position pos:line="17" pos:column="34"/></literal></expr>;<pos:position pos:line="17" pos:column="35"/></expr_stmt></block></then></if>

	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><operator pos:line="19" pos:column="13">!<pos:position pos:line="19" pos:column="14"/></operator><call><name pos:line="19" pos:column="14">strcmp<pos:position pos:line="19" pos:column="20"/></name><argument_list pos:line="19" pos:column="20">(<argument><expr><name pos:line="19" pos:column="21">remote_name<pos:position pos:line="19" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="34">"HEAD"<pos:position pos:line="19" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="42"/></condition><then pos:line="19" pos:column="42"> <block pos:line="19" pos:column="43">{
		<expr_stmt><expr><name pos:line="20" pos:column="17">kind<pos:position pos:line="20" pos:column="21"/></name> <operator pos:line="20" pos:column="22">=<pos:position pos:line="20" pos:column="23"/></operator> <literal type="string" pos:line="20" pos:column="24">""<pos:position pos:line="20" pos:column="26"/></literal></expr>;<pos:position pos:line="20" pos:column="27"/></expr_stmt>
		<expr_stmt><expr><name pos:line="21" pos:column="17">what<pos:position pos:line="21" pos:column="21"/></name> <operator pos:line="21" pos:column="22">=<pos:position pos:line="21" pos:column="23"/></operator> <literal type="string" pos:line="21" pos:column="24">""<pos:position pos:line="21" pos:column="26"/></literal></expr>;<pos:position pos:line="21" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="22" pos:column="10"/></block></then>
	<elseif pos:line="23" pos:column="9">else <if pos:line="23" pos:column="14">if <condition pos:line="23" pos:column="17">(<expr><operator pos:line="23" pos:column="18">!<pos:position pos:line="23" pos:column="19"/></operator><call><name pos:line="23" pos:column="19">strncmp<pos:position pos:line="23" pos:column="26"/></name><argument_list pos:line="23" pos:column="26">(<argument><expr><name pos:line="23" pos:column="27">remote_name<pos:position pos:line="23" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="40">"refs/heads/"<pos:position pos:line="23" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="55">11<pos:position pos:line="23" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="59"/></condition><then pos:line="23" pos:column="59"> <block pos:line="23" pos:column="60">{
		<expr_stmt><expr><name pos:line="24" pos:column="17">kind<pos:position pos:line="24" pos:column="21"/></name> <operator pos:line="24" pos:column="22">=<pos:position pos:line="24" pos:column="23"/></operator> <literal type="string" pos:line="24" pos:column="24">"branch"<pos:position pos:line="24" pos:column="32"/></literal></expr>;<pos:position pos:line="24" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><name pos:line="25" pos:column="17">what<pos:position pos:line="25" pos:column="21"/></name> <operator pos:line="25" pos:column="22">=<pos:position pos:line="25" pos:column="23"/></operator> <name pos:line="25" pos:column="24">remote_name<pos:position pos:line="25" pos:column="35"/></name> <operator pos:line="25" pos:column="36">+<pos:position pos:line="25" pos:column="37"/></operator> <literal type="number" pos:line="25" pos:column="38">11<pos:position pos:line="25" pos:column="40"/></literal></expr>;<pos:position pos:line="25" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="26" pos:column="10"/></block></then></if></elseif>
	<elseif pos:line="27" pos:column="9">else <if pos:line="27" pos:column="14">if <condition pos:line="27" pos:column="17">(<expr><operator pos:line="27" pos:column="18">!<pos:position pos:line="27" pos:column="19"/></operator><call><name pos:line="27" pos:column="19">strncmp<pos:position pos:line="27" pos:column="26"/></name><argument_list pos:line="27" pos:column="26">(<argument><expr><name pos:line="27" pos:column="27">remote_name<pos:position pos:line="27" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="40">"refs/tags/"<pos:position pos:line="27" pos:column="52"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="54">10<pos:position pos:line="27" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="58"/></condition><then pos:line="27" pos:column="58"> <block pos:line="27" pos:column="59">{
		<expr_stmt><expr><name pos:line="28" pos:column="17">kind<pos:position pos:line="28" pos:column="21"/></name> <operator pos:line="28" pos:column="22">=<pos:position pos:line="28" pos:column="23"/></operator> <literal type="string" pos:line="28" pos:column="24">"tag"<pos:position pos:line="28" pos:column="29"/></literal></expr>;<pos:position pos:line="28" pos:column="30"/></expr_stmt>
		<expr_stmt><expr><name pos:line="29" pos:column="17">what<pos:position pos:line="29" pos:column="21"/></name> <operator pos:line="29" pos:column="22">=<pos:position pos:line="29" pos:column="23"/></operator> <name pos:line="29" pos:column="24">remote_name<pos:position pos:line="29" pos:column="35"/></name> <operator pos:line="29" pos:column="36">+<pos:position pos:line="29" pos:column="37"/></operator> <literal type="number" pos:line="29" pos:column="38">10<pos:position pos:line="29" pos:column="40"/></literal></expr>;<pos:position pos:line="29" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="30" pos:column="10"/></block></then></if></elseif>
	<elseif pos:line="31" pos:column="9">else <if pos:line="31" pos:column="14">if <condition pos:line="31" pos:column="17">(<expr><operator pos:line="31" pos:column="18">!<pos:position pos:line="31" pos:column="19"/></operator><call><name pos:line="31" pos:column="19">strncmp<pos:position pos:line="31" pos:column="26"/></name><argument_list pos:line="31" pos:column="26">(<argument><expr><name pos:line="31" pos:column="27">remote_name<pos:position pos:line="31" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="40">"refs/remotes/"<pos:position pos:line="31" pos:column="55"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="57">13<pos:position pos:line="31" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="61"/></condition><then pos:line="31" pos:column="61"> <block pos:line="31" pos:column="62">{
		<expr_stmt><expr><name pos:line="32" pos:column="17">kind<pos:position pos:line="32" pos:column="21"/></name> <operator pos:line="32" pos:column="22">=<pos:position pos:line="32" pos:column="23"/></operator> <literal type="string" pos:line="32" pos:column="24">"remote-tracking branch"<pos:position pos:line="32" pos:column="48"/></literal></expr>;<pos:position pos:line="32" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><name pos:line="33" pos:column="17">what<pos:position pos:line="33" pos:column="21"/></name> <operator pos:line="33" pos:column="22">=<pos:position pos:line="33" pos:column="23"/></operator> <name pos:line="33" pos:column="24">remote_name<pos:position pos:line="33" pos:column="35"/></name> <operator pos:line="33" pos:column="36">+<pos:position pos:line="33" pos:column="37"/></operator> <literal type="number" pos:line="33" pos:column="38">13<pos:position pos:line="33" pos:column="40"/></literal></expr>;<pos:position pos:line="33" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="34" pos:column="10"/></block></then></if></elseif>
	<else pos:line="35" pos:column="9">else <block pos:line="35" pos:column="14">{
		<expr_stmt><expr><name pos:line="36" pos:column="17">kind<pos:position pos:line="36" pos:column="21"/></name> <operator pos:line="36" pos:column="22">=<pos:position pos:line="36" pos:column="23"/></operator> <literal type="string" pos:line="36" pos:column="24">""<pos:position pos:line="36" pos:column="26"/></literal></expr>;<pos:position pos:line="36" pos:column="27"/></expr_stmt>
		<expr_stmt><expr><name pos:line="37" pos:column="17">what<pos:position pos:line="37" pos:column="21"/></name> <operator pos:line="37" pos:column="22">=<pos:position pos:line="37" pos:column="23"/></operator> <name pos:line="37" pos:column="24">remote_name<pos:position pos:line="37" pos:column="35"/></name></expr>;<pos:position pos:line="37" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="38" pos:column="10"/></block></else></if>

	<expr_stmt><expr><name pos:line="40" pos:column="9">remote_len<pos:position pos:line="40" pos:column="19"/></name> <operator pos:line="40" pos:column="20">=<pos:position pos:line="40" pos:column="21"/></operator> <call><name pos:line="40" pos:column="22">strlen<pos:position pos:line="40" pos:column="28"/></name><argument_list pos:line="40" pos:column="28">(<argument><expr><name pos:line="40" pos:column="29">remote<pos:position pos:line="40" pos:column="35"/></name></expr></argument>)<pos:position pos:line="40" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="37"/></expr_stmt>
	<for pos:line="41" pos:column="9">for <control pos:line="41" pos:column="13">(<init><expr><name pos:line="41" pos:column="14">i<pos:position pos:line="41" pos:column="15"/></name> <operator pos:line="41" pos:column="16">=<pos:position pos:line="41" pos:column="17"/></operator> <name pos:line="41" pos:column="18">remote_len<pos:position pos:line="41" pos:column="28"/></name> <operator pos:line="41" pos:column="29">-<pos:position pos:line="41" pos:column="30"/></operator> <literal type="number" pos:line="41" pos:column="31">1<pos:position pos:line="41" pos:column="32"/></literal></expr>;<pos:position pos:line="41" pos:column="33"/></init> <condition><expr><name><name pos:line="41" pos:column="34">remote<pos:position pos:line="41" pos:column="40"/></name><index pos:line="41" pos:column="40">[<expr><name pos:line="41" pos:column="41">i<pos:position pos:line="41" pos:column="42"/></name></expr>]<pos:position pos:line="41" pos:column="43"/></index></name> <operator pos:line="41" pos:column="44">==<pos:position pos:line="41" pos:column="46"/></operator> <literal type="char" pos:line="41" pos:column="47">'/'<pos:position pos:line="41" pos:column="50"/></literal> <operator pos:line="41" pos:column="51">&amp;&amp;<pos:position pos:line="41" pos:column="61"/></operator> <literal type="number" pos:line="41" pos:column="54">0<pos:position pos:line="41" pos:column="55"/></literal> <operator pos:line="41" pos:column="56">&lt;=<pos:position pos:line="41" pos:column="61"/></operator> <name pos:line="41" pos:column="59">i<pos:position pos:line="41" pos:column="60"/></name></expr>;<pos:position pos:line="41" pos:column="61"/></condition> <incr><expr><name pos:line="41" pos:column="62">i<pos:position pos:line="41" pos:column="63"/></name><operator pos:line="41" pos:column="63">--<pos:position pos:line="41" pos:column="65"/></operator></expr></incr>)<pos:position pos:line="41" pos:column="66"/></control>
		<block type="pseudo"><empty_stmt pos:line="42" pos:column="17">;<pos:position pos:line="42" pos:column="18"/></empty_stmt></block></for>
	<expr_stmt><expr><name pos:line="43" pos:column="9">remote_len<pos:position pos:line="43" pos:column="19"/></name> <operator pos:line="43" pos:column="20">=<pos:position pos:line="43" pos:column="21"/></operator> <name pos:line="43" pos:column="22">i<pos:position pos:line="43" pos:column="23"/></name> <operator pos:line="43" pos:column="24">+<pos:position pos:line="43" pos:column="25"/></operator> <literal type="number" pos:line="43" pos:column="26">1<pos:position pos:line="43" pos:column="27"/></literal></expr>;<pos:position pos:line="43" pos:column="28"/></expr_stmt>
	<if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><literal type="number" pos:line="44" pos:column="13">4<pos:position pos:line="44" pos:column="14"/></literal> <operator pos:line="44" pos:column="15">&lt;<pos:position pos:line="44" pos:column="19"/></operator> <name pos:line="44" pos:column="17">i<pos:position pos:line="44" pos:column="18"/></name> <operator pos:line="44" pos:column="19">&amp;&amp;<pos:position pos:line="44" pos:column="29"/></operator> <operator pos:line="44" pos:column="22">!<pos:position pos:line="44" pos:column="23"/></operator><call><name pos:line="44" pos:column="23">strncmp<pos:position pos:line="44" pos:column="30"/></name><argument_list pos:line="44" pos:column="30">(<argument><expr><literal type="string" pos:line="44" pos:column="31">".git"<pos:position pos:line="44" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="39">remote<pos:position pos:line="44" pos:column="45"/></name> <operator pos:line="44" pos:column="46">+<pos:position pos:line="44" pos:column="47"/></operator> <name pos:line="44" pos:column="48">i<pos:position pos:line="44" pos:column="49"/></name> <operator pos:line="44" pos:column="50">-<pos:position pos:line="44" pos:column="51"/></operator> <literal type="number" pos:line="44" pos:column="52">3<pos:position pos:line="44" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="55">4<pos:position pos:line="44" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="58"/></condition><then pos:line="44" pos:column="58">
		<block type="pseudo"><expr_stmt><expr><name pos:line="45" pos:column="17">remote_len<pos:position pos:line="45" pos:column="27"/></name> <operator pos:line="45" pos:column="28">=<pos:position pos:line="45" pos:column="29"/></operator> <name pos:line="45" pos:column="30">i<pos:position pos:line="45" pos:column="31"/></name> <operator pos:line="45" pos:column="32">-<pos:position pos:line="45" pos:column="33"/></operator> <literal type="number" pos:line="45" pos:column="34">3<pos:position pos:line="45" pos:column="35"/></literal></expr>;<pos:position pos:line="45" pos:column="36"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="47" pos:column="9">note_len<pos:position pos:line="47" pos:column="17"/></name> <operator pos:line="47" pos:column="18">=<pos:position pos:line="47" pos:column="19"/></operator> <literal type="number" pos:line="47" pos:column="20">0<pos:position pos:line="47" pos:column="21"/></literal></expr>;<pos:position pos:line="47" pos:column="22"/></expr_stmt>
	<if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><operator pos:line="48" pos:column="13">*<pos:position pos:line="48" pos:column="14"/></operator><name pos:line="48" pos:column="14">what<pos:position pos:line="48" pos:column="18"/></name></expr>)<pos:position pos:line="48" pos:column="19"/></condition><then pos:line="48" pos:column="19"> <block pos:line="48" pos:column="20">{
		<if pos:line="49" pos:column="17">if <condition pos:line="49" pos:column="20">(<expr><operator pos:line="49" pos:column="21">*<pos:position pos:line="49" pos:column="22"/></operator><name pos:line="49" pos:column="22">kind<pos:position pos:line="49" pos:column="26"/></name></expr>)<pos:position pos:line="49" pos:column="27"/></condition><then pos:line="49" pos:column="27">
			<block type="pseudo"><expr_stmt><expr><name pos:line="50" pos:column="25">note_len<pos:position pos:line="50" pos:column="33"/></name> <operator pos:line="50" pos:column="34">+=<pos:position pos:line="50" pos:column="36"/></operator> <call><name pos:line="50" pos:column="37">sprintf<pos:position pos:line="50" pos:column="44"/></name><argument_list pos:line="50" pos:column="44">(<argument><expr><name pos:line="50" pos:column="45">note<pos:position pos:line="50" pos:column="49"/></name> <operator pos:line="50" pos:column="50">+<pos:position pos:line="50" pos:column="51"/></operator> <name pos:line="50" pos:column="52">note_len<pos:position pos:line="50" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="62">"%s "<pos:position pos:line="50" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="69">kind<pos:position pos:line="50" pos:column="73"/></name></expr></argument>)<pos:position pos:line="50" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="75"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="51" pos:column="17">note_len<pos:position pos:line="51" pos:column="25"/></name> <operator pos:line="51" pos:column="26">+=<pos:position pos:line="51" pos:column="28"/></operator> <call><name pos:line="51" pos:column="29">sprintf<pos:position pos:line="51" pos:column="36"/></name><argument_list pos:line="51" pos:column="36">(<argument><expr><name pos:line="51" pos:column="37">note<pos:position pos:line="51" pos:column="41"/></name> <operator pos:line="51" pos:column="42">+<pos:position pos:line="51" pos:column="43"/></operator> <name pos:line="51" pos:column="44">note_len<pos:position pos:line="51" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="54">"'%s' of "<pos:position pos:line="51" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="66">what<pos:position pos:line="51" pos:column="70"/></name></expr></argument>)<pos:position pos:line="51" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="72"/></expr_stmt>
	}<pos:position pos:line="52" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="53" pos:column="9">note_len<pos:position pos:line="53" pos:column="17"/></name> <operator pos:line="53" pos:column="18">+=<pos:position pos:line="53" pos:column="20"/></operator> <call><name pos:line="53" pos:column="21">sprintf<pos:position pos:line="53" pos:column="28"/></name><argument_list pos:line="53" pos:column="28">(<argument><expr><name pos:line="53" pos:column="29">note<pos:position pos:line="53" pos:column="33"/></name> <operator pos:line="53" pos:column="34">+<pos:position pos:line="53" pos:column="35"/></operator> <name pos:line="53" pos:column="36">note_len<pos:position pos:line="53" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="46">"%.*s"<pos:position pos:line="53" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="53" pos:column="54">remote_len<pos:position pos:line="53" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="66">remote<pos:position pos:line="53" pos:column="72"/></name></expr></argument>)<pos:position pos:line="53" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="74"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="54" pos:column="9">fprintf<pos:position pos:line="54" pos:column="16"/></name><argument_list pos:line="54" pos:column="16">(<argument><expr><name pos:line="54" pos:column="17">fp<pos:position pos:line="54" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="21">"%s\t%s\t%s\n"<pos:position pos:line="54" pos:column="35"/></literal></expr></argument>,
		<argument><expr><call><name pos:line="55" pos:column="17">sha1_to_hex<pos:position pos:line="55" pos:column="28"/></name><argument_list pos:line="55" pos:column="28">(<argument><expr><ternary><condition><expr><name pos:line="55" pos:column="29">commit<pos:position pos:line="55" pos:column="35"/></name></expr> ?<pos:position pos:line="55" pos:column="37"/></condition><then pos:line="55" pos:column="37"> <expr><name><name pos:line="55" pos:column="38">commit<pos:position pos:line="55" pos:column="44"/></name><operator pos:line="55" pos:column="44">-&gt;<pos:position pos:line="55" pos:column="49"/></operator><name pos:line="55" pos:column="46">object<pos:position pos:line="55" pos:column="52"/></name><operator pos:line="55" pos:column="52">.<pos:position pos:line="55" pos:column="53"/></operator><name pos:line="55" pos:column="53">sha1<pos:position pos:line="55" pos:column="57"/></name></name></expr> <pos:position pos:line="55" pos:column="58"/></then><else pos:line="55" pos:column="58">: <expr><name pos:line="55" pos:column="60">sha1<pos:position pos:line="55" pos:column="64"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="55" pos:column="65"/></argument_list></call></expr></argument>,
		<argument><expr><ternary><condition><expr><name pos:line="56" pos:column="17">not_for_merge<pos:position pos:line="56" pos:column="30"/></name></expr> ?<pos:position pos:line="56" pos:column="32"/></condition><then pos:line="56" pos:column="32"> <expr><literal type="string" pos:line="56" pos:column="33">"not-for-merge"<pos:position pos:line="56" pos:column="48"/></literal></expr> <pos:position pos:line="56" pos:column="49"/></then><else pos:line="56" pos:column="49">: <expr><literal type="string" pos:line="56" pos:column="51">""<pos:position pos:line="56" pos:column="53"/></literal></expr></else></ternary></expr></argument>,
		<argument><expr><name pos:line="57" pos:column="17">note<pos:position pos:line="57" pos:column="21"/></name></expr></argument>)<pos:position pos:line="57" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="23"/></expr_stmt>
	<return pos:line="58" pos:column="9">return <expr><call><name pos:line="58" pos:column="16">update_local_ref<pos:position pos:line="58" pos:column="32"/></name><argument_list pos:line="58" pos:column="32">(<argument><expr><name pos:line="58" pos:column="33">local_name<pos:position pos:line="58" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="45">head<pos:position pos:line="58" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="51">note<pos:position pos:line="58" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="57">verbose<pos:position pos:line="58" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="66">force<pos:position pos:line="58" pos:column="71"/></name></expr></argument>)<pos:position pos:line="58" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="73"/></return>
}<pos:position pos:line="59" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1915.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">show_raw_diff<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">combine_diff_path<pos:position pos:line="1" pos:column="51"/></name></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">p<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">int<pos:position pos:line="1" pos:column="59"/></name></type> <name pos:line="1" pos:column="60">num_parent<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="72">struct<pos:position pos:line="1" pos:column="78"/></name> <name pos:line="1" pos:column="79">rev_info<pos:position pos:line="1" pos:column="87"/></name></name> <modifier pos:line="1" pos:column="88">*<pos:position pos:line="1" pos:column="89"/></modifier></type><name pos:line="1" pos:column="89">rev<pos:position pos:line="1" pos:column="92"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="93"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">diff_options<pos:position pos:line="3" pos:column="28"/></name></name> <modifier pos:line="3" pos:column="29">*<pos:position pos:line="3" pos:column="30"/></modifier></type><name pos:line="3" pos:column="30">opt<pos:position pos:line="3" pos:column="33"/></name> <init pos:line="3" pos:column="34">= <expr><operator pos:line="3" pos:column="36">&amp;<pos:position pos:line="3" pos:column="41"/></operator><name><name pos:line="3" pos:column="37">rev<pos:position pos:line="3" pos:column="40"/></name><operator pos:line="3" pos:column="40">-&gt;<pos:position pos:line="3" pos:column="45"/></operator><name pos:line="3" pos:column="42">diffopt<pos:position pos:line="3" pos:column="49"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="50"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">line_termination<pos:position pos:line="4" pos:column="29"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="31">inter_name_termination<pos:position pos:line="4" pos:column="53"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="55">i<pos:position pos:line="4" pos:column="56"/></name></decl>;<pos:position pos:line="4" pos:column="57"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">line_prefix<pos:position pos:line="5" pos:column="32"/></name> <init pos:line="5" pos:column="33">= <expr><call><name pos:line="5" pos:column="35">diff_line_prefix<pos:position pos:line="5" pos:column="51"/></name><argument_list pos:line="5" pos:column="51">(<argument><expr><name pos:line="5" pos:column="52">opt<pos:position pos:line="5" pos:column="55"/></name></expr></argument>)<pos:position pos:line="5" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="57"/></decl_stmt>

	<expr_stmt><expr><name pos:line="7" pos:column="9">line_termination<pos:position pos:line="7" pos:column="25"/></name> <operator pos:line="7" pos:column="26">=<pos:position pos:line="7" pos:column="27"/></operator> <name><name pos:line="7" pos:column="28">opt<pos:position pos:line="7" pos:column="31"/></name><operator pos:line="7" pos:column="31">-&gt;<pos:position pos:line="7" pos:column="36"/></operator><name pos:line="7" pos:column="33">line_termination<pos:position pos:line="7" pos:column="49"/></name></name></expr>;<pos:position pos:line="7" pos:column="50"/></expr_stmt>
	<expr_stmt><expr><name pos:line="8" pos:column="9">inter_name_termination<pos:position pos:line="8" pos:column="31"/></name> <operator pos:line="8" pos:column="32">=<pos:position pos:line="8" pos:column="33"/></operator> <literal type="char" pos:line="8" pos:column="34">'\t'<pos:position pos:line="8" pos:column="38"/></literal></expr>;<pos:position pos:line="8" pos:column="39"/></expr_stmt>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">!<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">line_termination<pos:position pos:line="9" pos:column="30"/></name></expr>)<pos:position pos:line="9" pos:column="31"/></condition><then pos:line="9" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="17">inter_name_termination<pos:position pos:line="10" pos:column="39"/></name> <operator pos:line="10" pos:column="40">=<pos:position pos:line="10" pos:column="41"/></operator> <literal type="number" pos:line="10" pos:column="42">0<pos:position pos:line="10" pos:column="43"/></literal></expr>;<pos:position pos:line="10" pos:column="44"/></expr_stmt></block></then></if>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name><name pos:line="12" pos:column="13">rev<pos:position pos:line="12" pos:column="16"/></name><operator pos:line="12" pos:column="16">-&gt;<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="18">loginfo<pos:position pos:line="12" pos:column="25"/></name></name> <operator pos:line="12" pos:column="26">&amp;&amp;<pos:position pos:line="12" pos:column="36"/></operator> <operator pos:line="12" pos:column="29">!<pos:position pos:line="12" pos:column="30"/></operator><name><name pos:line="12" pos:column="30">rev<pos:position pos:line="12" pos:column="33"/></name><operator pos:line="12" pos:column="33">-&gt;<pos:position pos:line="12" pos:column="38"/></operator><name pos:line="12" pos:column="35">no_commit_id<pos:position pos:line="12" pos:column="47"/></name></name></expr>)<pos:position pos:line="12" pos:column="48"/></condition><then pos:line="12" pos:column="48">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="17">show_log<pos:position pos:line="13" pos:column="25"/></name><argument_list pos:line="13" pos:column="25">(<argument><expr><name pos:line="13" pos:column="26">rev<pos:position pos:line="13" pos:column="29"/></name></expr></argument>)<pos:position pos:line="13" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="31"/></expr_stmt></block></then></if>


	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name><name pos:line="16" pos:column="13">opt<pos:position pos:line="16" pos:column="16"/></name><operator pos:line="16" pos:column="16">-&gt;<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="18">output_format<pos:position pos:line="16" pos:column="31"/></name></name> <operator pos:line="16" pos:column="32">&amp;<pos:position pos:line="16" pos:column="37"/></operator> <name pos:line="16" pos:column="34">DIFF_FORMAT_RAW<pos:position pos:line="16" pos:column="49"/></name></expr>)<pos:position pos:line="16" pos:column="50"/></condition><then pos:line="16" pos:column="50"> <block pos:line="16" pos:column="51">{
		<expr_stmt><expr><call><name pos:line="17" pos:column="17">printf<pos:position pos:line="17" pos:column="23"/></name><argument_list pos:line="17" pos:column="23">(<argument><expr><literal type="string" pos:line="17" pos:column="24">"%s"<pos:position pos:line="17" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="30">line_prefix<pos:position pos:line="17" pos:column="41"/></name></expr></argument>)<pos:position pos:line="17" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="43"/></expr_stmt>

		<comment type="block" pos:line="19" pos:column="17">/* As many colons as there are parents */</comment>
		<for pos:line="20" pos:column="17">for <control pos:line="20" pos:column="21">(<init><expr><name pos:line="20" pos:column="22">i<pos:position pos:line="20" pos:column="23"/></name> <operator pos:line="20" pos:column="24">=<pos:position pos:line="20" pos:column="25"/></operator> <literal type="number" pos:line="20" pos:column="26">0<pos:position pos:line="20" pos:column="27"/></literal></expr>;<pos:position pos:line="20" pos:column="28"/></init> <condition><expr><name pos:line="20" pos:column="29">i<pos:position pos:line="20" pos:column="30"/></name> <operator pos:line="20" pos:column="31">&lt;<pos:position pos:line="20" pos:column="35"/></operator> <name pos:line="20" pos:column="33">num_parent<pos:position pos:line="20" pos:column="43"/></name></expr>;<pos:position pos:line="20" pos:column="44"/></condition> <incr><expr><name pos:line="20" pos:column="45">i<pos:position pos:line="20" pos:column="46"/></name><operator pos:line="20" pos:column="46">++<pos:position pos:line="20" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="20" pos:column="49"/></control>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="25">putchar<pos:position pos:line="21" pos:column="32"/></name><argument_list pos:line="21" pos:column="32">(<argument><expr><literal type="char" pos:line="21" pos:column="33">':'<pos:position pos:line="21" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="38"/></expr_stmt></block></for>

		<comment type="block" pos:line="23" pos:column="17">/* Show the modes */</comment>
		<for pos:line="24" pos:column="17">for <control pos:line="24" pos:column="21">(<init><expr><name pos:line="24" pos:column="22">i<pos:position pos:line="24" pos:column="23"/></name> <operator pos:line="24" pos:column="24">=<pos:position pos:line="24" pos:column="25"/></operator> <literal type="number" pos:line="24" pos:column="26">0<pos:position pos:line="24" pos:column="27"/></literal></expr>;<pos:position pos:line="24" pos:column="28"/></init> <condition><expr><name pos:line="24" pos:column="29">i<pos:position pos:line="24" pos:column="30"/></name> <operator pos:line="24" pos:column="31">&lt;<pos:position pos:line="24" pos:column="35"/></operator> <name pos:line="24" pos:column="33">num_parent<pos:position pos:line="24" pos:column="43"/></name></expr>;<pos:position pos:line="24" pos:column="44"/></condition> <incr><expr><name pos:line="24" pos:column="45">i<pos:position pos:line="24" pos:column="46"/></name><operator pos:line="24" pos:column="46">++<pos:position pos:line="24" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="24" pos:column="49"/></control>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="25">printf<pos:position pos:line="25" pos:column="31"/></name><argument_list pos:line="25" pos:column="31">(<argument><expr><literal type="string" pos:line="25" pos:column="32">"%06o "<pos:position pos:line="25" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="41">p<pos:position pos:line="25" pos:column="42"/></name><operator pos:line="25" pos:column="42">-&gt;<pos:position pos:line="25" pos:column="47"/></operator><name pos:line="25" pos:column="44">parent<pos:position pos:line="25" pos:column="50"/></name><index pos:line="25" pos:column="50">[<expr><name pos:line="25" pos:column="51">i<pos:position pos:line="25" pos:column="52"/></name></expr>]<pos:position pos:line="25" pos:column="53"/></index></name><operator pos:line="25" pos:column="53">.<pos:position pos:line="25" pos:column="54"/></operator><name pos:line="25" pos:column="54">mode<pos:position pos:line="25" pos:column="58"/></name></expr></argument>)<pos:position pos:line="25" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="60"/></expr_stmt></block></for>
		<expr_stmt><expr><call><name pos:line="26" pos:column="17">printf<pos:position pos:line="26" pos:column="23"/></name><argument_list pos:line="26" pos:column="23">(<argument><expr><literal type="string" pos:line="26" pos:column="24">"%06o"<pos:position pos:line="26" pos:column="30"/></literal></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="32">p<pos:position pos:line="26" pos:column="33"/></name><operator pos:line="26" pos:column="33">-&gt;<pos:position pos:line="26" pos:column="38"/></operator><name pos:line="26" pos:column="35">mode<pos:position pos:line="26" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="41"/></expr_stmt>

		<comment type="block" pos:line="28" pos:column="17">/* Show sha1's */</comment>
		<for pos:line="29" pos:column="17">for <control pos:line="29" pos:column="21">(<init><expr><name pos:line="29" pos:column="22">i<pos:position pos:line="29" pos:column="23"/></name> <operator pos:line="29" pos:column="24">=<pos:position pos:line="29" pos:column="25"/></operator> <literal type="number" pos:line="29" pos:column="26">0<pos:position pos:line="29" pos:column="27"/></literal></expr>;<pos:position pos:line="29" pos:column="28"/></init> <condition><expr><name pos:line="29" pos:column="29">i<pos:position pos:line="29" pos:column="30"/></name> <operator pos:line="29" pos:column="31">&lt;<pos:position pos:line="29" pos:column="35"/></operator> <name pos:line="29" pos:column="33">num_parent<pos:position pos:line="29" pos:column="43"/></name></expr>;<pos:position pos:line="29" pos:column="44"/></condition> <incr><expr><name pos:line="29" pos:column="45">i<pos:position pos:line="29" pos:column="46"/></name><operator pos:line="29" pos:column="46">++<pos:position pos:line="29" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="29" pos:column="49"/></control>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="25">printf<pos:position pos:line="30" pos:column="31"/></name><argument_list pos:line="30" pos:column="31">(<argument><expr><literal type="string" pos:line="30" pos:column="32">" %s"<pos:position pos:line="30" pos:column="37"/></literal></expr></argument>, <argument><expr><call><name pos:line="30" pos:column="39">diff_unique_abbrev<pos:position pos:line="30" pos:column="57"/></name><argument_list pos:line="30" pos:column="57">(<argument><expr><name><name pos:line="30" pos:column="58">p<pos:position pos:line="30" pos:column="59"/></name><operator pos:line="30" pos:column="59">-&gt;<pos:position pos:line="30" pos:column="64"/></operator><name pos:line="30" pos:column="61">parent<pos:position pos:line="30" pos:column="67"/></name><index pos:line="30" pos:column="67">[<expr><name pos:line="30" pos:column="68">i<pos:position pos:line="30" pos:column="69"/></name></expr>]<pos:position pos:line="30" pos:column="70"/></index></name><operator pos:line="30" pos:column="70">.<pos:position pos:line="30" pos:column="71"/></operator><name pos:line="30" pos:column="71">sha1<pos:position pos:line="30" pos:column="75"/></name></expr></argument>,
							 <argument><expr><name><name pos:line="31" pos:column="58">opt<pos:position pos:line="31" pos:column="61"/></name><operator pos:line="31" pos:column="61">-&gt;<pos:position pos:line="31" pos:column="66"/></operator><name pos:line="31" pos:column="63">abbrev<pos:position pos:line="31" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="72"/></expr_stmt></block></for>
		<expr_stmt><expr><call><name pos:line="32" pos:column="17">printf<pos:position pos:line="32" pos:column="23"/></name><argument_list pos:line="32" pos:column="23">(<argument><expr><literal type="string" pos:line="32" pos:column="24">" %s "<pos:position pos:line="32" pos:column="30"/></literal></expr></argument>, <argument><expr><call><name pos:line="32" pos:column="32">diff_unique_abbrev<pos:position pos:line="32" pos:column="50"/></name><argument_list pos:line="32" pos:column="50">(<argument><expr><name><name pos:line="32" pos:column="51">p<pos:position pos:line="32" pos:column="52"/></name><operator pos:line="32" pos:column="52">-&gt;<pos:position pos:line="32" pos:column="57"/></operator><name pos:line="32" pos:column="54">sha1<pos:position pos:line="32" pos:column="58"/></name></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="60">opt<pos:position pos:line="32" pos:column="63"/></name><operator pos:line="32" pos:column="63">-&gt;<pos:position pos:line="32" pos:column="68"/></operator><name pos:line="32" pos:column="65">abbrev<pos:position pos:line="32" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="74"/></expr_stmt>
	}<pos:position pos:line="33" pos:column="10"/></block></then></if>

	<if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><name><name pos:line="35" pos:column="13">opt<pos:position pos:line="35" pos:column="16"/></name><operator pos:line="35" pos:column="16">-&gt;<pos:position pos:line="35" pos:column="21"/></operator><name pos:line="35" pos:column="18">output_format<pos:position pos:line="35" pos:column="31"/></name></name> <operator pos:line="35" pos:column="32">&amp;<pos:position pos:line="35" pos:column="37"/></operator> <operator pos:line="35" pos:column="34">(<pos:position pos:line="35" pos:column="35"/></operator><name pos:line="35" pos:column="35">DIFF_FORMAT_RAW<pos:position pos:line="35" pos:column="50"/></name> <operator pos:line="35" pos:column="51">|<pos:position pos:line="35" pos:column="52"/></operator> <name pos:line="35" pos:column="53">DIFF_FORMAT_NAME_STATUS<pos:position pos:line="35" pos:column="76"/></name><operator pos:line="35" pos:column="76">)<pos:position pos:line="35" pos:column="77"/></operator></expr>)<pos:position pos:line="35" pos:column="78"/></condition><then pos:line="35" pos:column="78"> <block pos:line="35" pos:column="79">{
		<for pos:line="36" pos:column="17">for <control pos:line="36" pos:column="21">(<init><expr><name pos:line="36" pos:column="22">i<pos:position pos:line="36" pos:column="23"/></name> <operator pos:line="36" pos:column="24">=<pos:position pos:line="36" pos:column="25"/></operator> <literal type="number" pos:line="36" pos:column="26">0<pos:position pos:line="36" pos:column="27"/></literal></expr>;<pos:position pos:line="36" pos:column="28"/></init> <condition><expr><name pos:line="36" pos:column="29">i<pos:position pos:line="36" pos:column="30"/></name> <operator pos:line="36" pos:column="31">&lt;<pos:position pos:line="36" pos:column="35"/></operator> <name pos:line="36" pos:column="33">num_parent<pos:position pos:line="36" pos:column="43"/></name></expr>;<pos:position pos:line="36" pos:column="44"/></condition> <incr><expr><name pos:line="36" pos:column="45">i<pos:position pos:line="36" pos:column="46"/></name><operator pos:line="36" pos:column="46">++<pos:position pos:line="36" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="36" pos:column="49"/></control>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="25">putchar<pos:position pos:line="37" pos:column="32"/></name><argument_list pos:line="37" pos:column="32">(<argument><expr><name><name pos:line="37" pos:column="33">p<pos:position pos:line="37" pos:column="34"/></name><operator pos:line="37" pos:column="34">-&gt;<pos:position pos:line="37" pos:column="39"/></operator><name pos:line="37" pos:column="36">parent<pos:position pos:line="37" pos:column="42"/></name><index pos:line="37" pos:column="42">[<expr><name pos:line="37" pos:column="43">i<pos:position pos:line="37" pos:column="44"/></name></expr>]<pos:position pos:line="37" pos:column="45"/></index></name><operator pos:line="37" pos:column="45">.<pos:position pos:line="37" pos:column="46"/></operator><name pos:line="37" pos:column="46">status<pos:position pos:line="37" pos:column="52"/></name></expr></argument>)<pos:position pos:line="37" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="54"/></expr_stmt></block></for>
		<expr_stmt><expr><call><name pos:line="38" pos:column="17">putchar<pos:position pos:line="38" pos:column="24"/></name><argument_list pos:line="38" pos:column="24">(<argument><expr><name pos:line="38" pos:column="25">inter_name_termination<pos:position pos:line="38" pos:column="47"/></name></expr></argument>)<pos:position pos:line="38" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="49"/></expr_stmt>
	}<pos:position pos:line="39" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="41" pos:column="9">write_name_quoted<pos:position pos:line="41" pos:column="26"/></name><argument_list pos:line="41" pos:column="26">(<argument><expr><name><name pos:line="41" pos:column="27">p<pos:position pos:line="41" pos:column="28"/></name><operator pos:line="41" pos:column="28">-&gt;<pos:position pos:line="41" pos:column="33"/></operator><name pos:line="41" pos:column="30">path<pos:position pos:line="41" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="36">stdout<pos:position pos:line="41" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="44">line_termination<pos:position pos:line="41" pos:column="60"/></name></expr></argument>)<pos:position pos:line="41" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="62"/></expr_stmt>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

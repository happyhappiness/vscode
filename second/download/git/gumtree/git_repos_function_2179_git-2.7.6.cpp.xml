<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2179_git-2.7.6.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">transport_set_verbosity<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name><name pos:line="1" pos:column="30">struct<pos:position pos:line="1" pos:column="36"/></name> <name pos:line="1" pos:column="37">transport<pos:position pos:line="1" pos:column="46"/></name></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">transport<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="59">int<pos:position pos:line="1" pos:column="62"/></name></type> <name pos:line="1" pos:column="63">verbosity<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>,
	<parameter><decl><type><name pos:line="2" pos:column="9">int<pos:position pos:line="2" pos:column="12"/></name></type> <name pos:line="2" pos:column="13">force_progress<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="28"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><name pos:line="4" pos:column="13">verbosity<pos:position pos:line="4" pos:column="22"/></name> <operator pos:line="4" pos:column="23">&gt;=<pos:position pos:line="4" pos:column="28"/></operator> <literal type="number" pos:line="4" pos:column="26">1<pos:position pos:line="4" pos:column="27"/></literal></expr>)<pos:position pos:line="4" pos:column="28"/></condition><then pos:line="4" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="5" pos:column="17">transport<pos:position pos:line="5" pos:column="26"/></name><operator pos:line="5" pos:column="26">-&gt;<pos:position pos:line="5" pos:column="31"/></operator><name pos:line="5" pos:column="28">verbose<pos:position pos:line="5" pos:column="35"/></name></name> <operator pos:line="5" pos:column="36">=<pos:position pos:line="5" pos:column="37"/></operator> <ternary><condition><expr><name pos:line="5" pos:column="38">verbosity<pos:position pos:line="5" pos:column="47"/></name> <operator pos:line="5" pos:column="48">&lt;=<pos:position pos:line="5" pos:column="53"/></operator> <literal type="number" pos:line="5" pos:column="51">3<pos:position pos:line="5" pos:column="52"/></literal></expr> ?<pos:position pos:line="5" pos:column="54"/></condition><then pos:line="5" pos:column="54"> <expr><name pos:line="5" pos:column="55">verbosity<pos:position pos:line="5" pos:column="64"/></name></expr> <pos:position pos:line="5" pos:column="65"/></then><else pos:line="5" pos:column="65">: <expr><literal type="number" pos:line="5" pos:column="67">3<pos:position pos:line="5" pos:column="68"/></literal></expr></else></ternary></expr>;<pos:position pos:line="5" pos:column="69"/></expr_stmt></block></then></if>
	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name pos:line="6" pos:column="13">verbosity<pos:position pos:line="6" pos:column="22"/></name> <operator pos:line="6" pos:column="23">&lt;<pos:position pos:line="6" pos:column="27"/></operator> <literal type="number" pos:line="6" pos:column="25">0<pos:position pos:line="6" pos:column="26"/></literal></expr>)<pos:position pos:line="6" pos:column="27"/></condition><then pos:line="6" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="7" pos:column="17">transport<pos:position pos:line="7" pos:column="26"/></name><operator pos:line="7" pos:column="26">-&gt;<pos:position pos:line="7" pos:column="31"/></operator><name pos:line="7" pos:column="28">verbose<pos:position pos:line="7" pos:column="35"/></name></name> <operator pos:line="7" pos:column="36">=<pos:position pos:line="7" pos:column="37"/></operator> <operator pos:line="7" pos:column="38">-<pos:position pos:line="7" pos:column="39"/></operator><literal type="number" pos:line="7" pos:column="39">1<pos:position pos:line="7" pos:column="40"/></literal></expr>;<pos:position pos:line="7" pos:column="41"/></expr_stmt></block></then></if>

	<comment type="block" format="doxygen" pos:line="9" pos:column="9">/**
	 * Rules used to determine whether to report progress (processing aborts
	 * when a rule is satisfied):
	 *
	 *   . Report progress, if force_progress is 1 (ie. --progress).
	 *   . Don't report progress, if force_progress is 0 (ie. --no-progress).
	 *   . Don't report progress, if verbosity &lt; 0 (ie. -q/--quiet ).
	 *   . Report progress if isatty(2) is 1.
	 **/</comment>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">force_progress<pos:position pos:line="18" pos:column="27"/></name> <operator pos:line="18" pos:column="28">&gt;=<pos:position pos:line="18" pos:column="33"/></operator> <literal type="number" pos:line="18" pos:column="31">0<pos:position pos:line="18" pos:column="32"/></literal></expr>)<pos:position pos:line="18" pos:column="33"/></condition><then pos:line="18" pos:column="33">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="19" pos:column="17">transport<pos:position pos:line="19" pos:column="26"/></name><operator pos:line="19" pos:column="26">-&gt;<pos:position pos:line="19" pos:column="31"/></operator><name pos:line="19" pos:column="28">progress<pos:position pos:line="19" pos:column="36"/></name></name> <operator pos:line="19" pos:column="37">=<pos:position pos:line="19" pos:column="38"/></operator> <operator pos:line="19" pos:column="39">!<pos:position pos:line="19" pos:column="40"/></operator><operator pos:line="19" pos:column="40">!<pos:position pos:line="19" pos:column="41"/></operator><name pos:line="19" pos:column="41">force_progress<pos:position pos:line="19" pos:column="55"/></name></expr>;<pos:position pos:line="19" pos:column="56"/></expr_stmt></block></then>
	<else pos:line="20" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="21" pos:column="17">transport<pos:position pos:line="21" pos:column="26"/></name><operator pos:line="21" pos:column="26">-&gt;<pos:position pos:line="21" pos:column="31"/></operator><name pos:line="21" pos:column="28">progress<pos:position pos:line="21" pos:column="36"/></name></name> <operator pos:line="21" pos:column="37">=<pos:position pos:line="21" pos:column="38"/></operator> <name pos:line="21" pos:column="39">verbosity<pos:position pos:line="21" pos:column="48"/></name> <operator pos:line="21" pos:column="49">&gt;=<pos:position pos:line="21" pos:column="54"/></operator> <literal type="number" pos:line="21" pos:column="52">0<pos:position pos:line="21" pos:column="53"/></literal> <operator pos:line="21" pos:column="54">&amp;&amp;<pos:position pos:line="21" pos:column="64"/></operator> <call><name pos:line="21" pos:column="57">isatty<pos:position pos:line="21" pos:column="63"/></name><argument_list pos:line="21" pos:column="63">(<argument><expr><literal type="number" pos:line="21" pos:column="64">2<pos:position pos:line="21" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="67"/></expr_stmt></block></else></if>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

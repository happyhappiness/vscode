<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2629_git-2.13.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">receive_status<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">int<pos:position pos:line="1" pos:column="30"/></name></type> <name pos:line="1" pos:column="31">in<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="35">struct<pos:position pos:line="1" pos:column="41"/></name> <name pos:line="1" pos:column="42">ref<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">refs<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">ref<pos:position pos:line="3" pos:column="19"/></name></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">hint<pos:position pos:line="3" pos:column="25"/></name></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">ret<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>

	<expr_stmt><expr><name pos:line="6" pos:column="9">hint<pos:position pos:line="6" pos:column="13"/></name> <operator pos:line="6" pos:column="14">=<pos:position pos:line="6" pos:column="15"/></operator> <name pos:line="6" pos:column="16">NULL<pos:position pos:line="6" pos:column="20"/></name></expr>;<pos:position pos:line="6" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><name pos:line="7" pos:column="9">ret<pos:position pos:line="7" pos:column="12"/></name> <operator pos:line="7" pos:column="13">=<pos:position pos:line="7" pos:column="14"/></operator> <call><name pos:line="7" pos:column="15">receive_unpack_status<pos:position pos:line="7" pos:column="36"/></name><argument_list pos:line="7" pos:column="36">(<argument><expr><name pos:line="7" pos:column="37">in<pos:position pos:line="7" pos:column="39"/></name></expr></argument>)<pos:position pos:line="7" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="41"/></expr_stmt>
	<while pos:line="8" pos:column="9">while <condition pos:line="8" pos:column="15">(<expr><literal type="number" pos:line="8" pos:column="16">1<pos:position pos:line="8" pos:column="17"/></literal></expr>)<pos:position pos:line="8" pos:column="18"/></condition> <block pos:line="8" pos:column="19">{
		<decl_stmt><decl><type><name pos:line="9" pos:column="17">char<pos:position pos:line="9" pos:column="21"/></name> <modifier pos:line="9" pos:column="22">*<pos:position pos:line="9" pos:column="23"/></modifier></type><name pos:line="9" pos:column="23">refname<pos:position pos:line="9" pos:column="30"/></name></decl>;<pos:position pos:line="9" pos:column="31"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="10" pos:column="17">char<pos:position pos:line="10" pos:column="21"/></name> <modifier pos:line="10" pos:column="22">*<pos:position pos:line="10" pos:column="23"/></modifier></type><name pos:line="10" pos:column="23">msg<pos:position pos:line="10" pos:column="26"/></name></decl>;<pos:position pos:line="10" pos:column="27"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="11" pos:column="17">char<pos:position pos:line="11" pos:column="21"/></name> <modifier pos:line="11" pos:column="22">*<pos:position pos:line="11" pos:column="23"/></modifier></type><name pos:line="11" pos:column="23">line<pos:position pos:line="11" pos:column="27"/></name> <init pos:line="11" pos:column="28">= <expr><call><name pos:line="11" pos:column="30">packet_read_line<pos:position pos:line="11" pos:column="46"/></name><argument_list pos:line="11" pos:column="46">(<argument><expr><name pos:line="11" pos:column="47">in<pos:position pos:line="11" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="51">NULL<pos:position pos:line="11" pos:column="55"/></name></expr></argument>)<pos:position pos:line="11" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="57"/></decl_stmt>
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><operator pos:line="12" pos:column="21">!<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="22">line<pos:position pos:line="12" pos:column="26"/></name></expr>)<pos:position pos:line="12" pos:column="27"/></condition><then pos:line="12" pos:column="27">
			<block type="pseudo"><break pos:line="13" pos:column="25">break;<pos:position pos:line="13" pos:column="31"/></break></block></then></if>
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><operator pos:line="14" pos:column="21">!<pos:position pos:line="14" pos:column="22"/></operator><call><name pos:line="14" pos:column="22">starts_with<pos:position pos:line="14" pos:column="33"/></name><argument_list pos:line="14" pos:column="33">(<argument><expr><name pos:line="14" pos:column="34">line<pos:position pos:line="14" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="40">"ok "<pos:position pos:line="14" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="46"/></argument_list></call> <operator pos:line="14" pos:column="47">&amp;&amp;<pos:position pos:line="14" pos:column="57"/></operator> <operator pos:line="14" pos:column="50">!<pos:position pos:line="14" pos:column="51"/></operator><call><name pos:line="14" pos:column="51">starts_with<pos:position pos:line="14" pos:column="62"/></name><argument_list pos:line="14" pos:column="62">(<argument><expr><name pos:line="14" pos:column="63">line<pos:position pos:line="14" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="69">"ng "<pos:position pos:line="14" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="75"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="76"/></condition><then pos:line="14" pos:column="76"> <block pos:line="14" pos:column="77">{
			<expr_stmt><expr><call><name pos:line="15" pos:column="25">error<pos:position pos:line="15" pos:column="30"/></name><argument_list pos:line="15" pos:column="30">(<argument><expr><literal type="string" pos:line="15" pos:column="31">"invalid ref status from remote: %s"<pos:position pos:line="15" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="69">line<pos:position pos:line="15" pos:column="73"/></name></expr></argument>)<pos:position pos:line="15" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="75"/></expr_stmt>
			<expr_stmt><expr><name pos:line="16" pos:column="25">ret<pos:position pos:line="16" pos:column="28"/></name> <operator pos:line="16" pos:column="29">=<pos:position pos:line="16" pos:column="30"/></operator> <operator pos:line="16" pos:column="31">-<pos:position pos:line="16" pos:column="32"/></operator><literal type="number" pos:line="16" pos:column="32">1<pos:position pos:line="16" pos:column="33"/></literal></expr>;<pos:position pos:line="16" pos:column="34"/></expr_stmt>
			<break pos:line="17" pos:column="25">break;<pos:position pos:line="17" pos:column="31"/></break>
		}<pos:position pos:line="18" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="20" pos:column="17">refname<pos:position pos:line="20" pos:column="24"/></name> <operator pos:line="20" pos:column="25">=<pos:position pos:line="20" pos:column="26"/></operator> <name pos:line="20" pos:column="27">line<pos:position pos:line="20" pos:column="31"/></name> <operator pos:line="20" pos:column="32">+<pos:position pos:line="20" pos:column="33"/></operator> <literal type="number" pos:line="20" pos:column="34">3<pos:position pos:line="20" pos:column="35"/></literal></expr>;<pos:position pos:line="20" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><name pos:line="21" pos:column="17">msg<pos:position pos:line="21" pos:column="20"/></name> <operator pos:line="21" pos:column="21">=<pos:position pos:line="21" pos:column="22"/></operator> <call><name pos:line="21" pos:column="23">strchr<pos:position pos:line="21" pos:column="29"/></name><argument_list pos:line="21" pos:column="29">(<argument><expr><name pos:line="21" pos:column="30">refname<pos:position pos:line="21" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="21" pos:column="39">' '<pos:position pos:line="21" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="44"/></expr_stmt>
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><name pos:line="22" pos:column="21">msg<pos:position pos:line="22" pos:column="24"/></name></expr>)<pos:position pos:line="22" pos:column="25"/></condition><then pos:line="22" pos:column="25">
			<block type="pseudo"><expr_stmt><expr><operator pos:line="23" pos:column="25">*<pos:position pos:line="23" pos:column="26"/></operator><name pos:line="23" pos:column="26">msg<pos:position pos:line="23" pos:column="29"/></name><operator pos:line="23" pos:column="29">++<pos:position pos:line="23" pos:column="31"/></operator> <operator pos:line="23" pos:column="32">=<pos:position pos:line="23" pos:column="33"/></operator> <literal type="char" pos:line="23" pos:column="34">'\0'<pos:position pos:line="23" pos:column="38"/></literal></expr>;<pos:position pos:line="23" pos:column="39"/></expr_stmt></block></then></if>

		<comment type="block" pos:line="25" pos:column="17">/* first try searching at our hint, falling back to all refs */</comment>
		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><name pos:line="26" pos:column="21">hint<pos:position pos:line="26" pos:column="25"/></name></expr>)<pos:position pos:line="26" pos:column="26"/></condition><then pos:line="26" pos:column="26">
			<block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="25">hint<pos:position pos:line="27" pos:column="29"/></name> <operator pos:line="27" pos:column="30">=<pos:position pos:line="27" pos:column="31"/></operator> <call><name pos:line="27" pos:column="32">find_ref_by_name<pos:position pos:line="27" pos:column="48"/></name><argument_list pos:line="27" pos:column="48">(<argument><expr><name pos:line="27" pos:column="49">hint<pos:position pos:line="27" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="55">refname<pos:position pos:line="27" pos:column="62"/></name></expr></argument>)<pos:position pos:line="27" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="64"/></expr_stmt></block></then></if>
		<if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><operator pos:line="28" pos:column="21">!<pos:position pos:line="28" pos:column="22"/></operator><name pos:line="28" pos:column="22">hint<pos:position pos:line="28" pos:column="26"/></name></expr>)<pos:position pos:line="28" pos:column="27"/></condition><then pos:line="28" pos:column="27">
			<block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="25">hint<pos:position pos:line="29" pos:column="29"/></name> <operator pos:line="29" pos:column="30">=<pos:position pos:line="29" pos:column="31"/></operator> <call><name pos:line="29" pos:column="32">find_ref_by_name<pos:position pos:line="29" pos:column="48"/></name><argument_list pos:line="29" pos:column="48">(<argument><expr><name pos:line="29" pos:column="49">refs<pos:position pos:line="29" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="55">refname<pos:position pos:line="29" pos:column="62"/></name></expr></argument>)<pos:position pos:line="29" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="64"/></expr_stmt></block></then></if>
		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><operator pos:line="30" pos:column="21">!<pos:position pos:line="30" pos:column="22"/></operator><name pos:line="30" pos:column="22">hint<pos:position pos:line="30" pos:column="26"/></name></expr>)<pos:position pos:line="30" pos:column="27"/></condition><then pos:line="30" pos:column="27"> <block pos:line="30" pos:column="28">{
			<expr_stmt><expr><call><name pos:line="31" pos:column="25">warning<pos:position pos:line="31" pos:column="32"/></name><argument_list pos:line="31" pos:column="32">(<argument><expr><literal type="string" pos:line="31" pos:column="33">"remote reported status on unknown ref: %s"<pos:position pos:line="31" pos:column="76"/></literal></expr></argument>,
					<argument><expr><name pos:line="32" pos:column="41">refname<pos:position pos:line="32" pos:column="48"/></name></expr></argument>)<pos:position pos:line="32" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="50"/></expr_stmt>
			<continue pos:line="33" pos:column="25">continue;<pos:position pos:line="33" pos:column="34"/></continue>
		}<pos:position pos:line="34" pos:column="18"/></block></then></if>
		<if pos:line="35" pos:column="17">if <condition pos:line="35" pos:column="20">(<expr><name><name pos:line="35" pos:column="21">hint<pos:position pos:line="35" pos:column="25"/></name><operator pos:line="35" pos:column="25">-&gt;<pos:position pos:line="35" pos:column="30"/></operator><name pos:line="35" pos:column="27">status<pos:position pos:line="35" pos:column="33"/></name></name> <operator pos:line="35" pos:column="34">!=<pos:position pos:line="35" pos:column="36"/></operator> <name pos:line="35" pos:column="37">REF_STATUS_EXPECTING_REPORT<pos:position pos:line="35" pos:column="64"/></name></expr>)<pos:position pos:line="35" pos:column="65"/></condition><then pos:line="35" pos:column="65"> <block pos:line="35" pos:column="66">{
			<expr_stmt><expr><call><name pos:line="36" pos:column="25">warning<pos:position pos:line="36" pos:column="32"/></name><argument_list pos:line="36" pos:column="32">(<argument><expr><literal type="string" pos:line="36" pos:column="33">"remote reported status on unexpected ref: %s"<pos:position pos:line="36" pos:column="79"/></literal></expr></argument>,
					<argument><expr><name pos:line="37" pos:column="41">refname<pos:position pos:line="37" pos:column="48"/></name></expr></argument>)<pos:position pos:line="37" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="50"/></expr_stmt>
			<continue pos:line="38" pos:column="25">continue;<pos:position pos:line="38" pos:column="34"/></continue>
		}<pos:position pos:line="39" pos:column="18"/></block></then></if>

		<if pos:line="41" pos:column="17">if <condition pos:line="41" pos:column="20">(<expr><name><name pos:line="41" pos:column="21">line<pos:position pos:line="41" pos:column="25"/></name><index pos:line="41" pos:column="25">[<expr><literal type="number" pos:line="41" pos:column="26">0<pos:position pos:line="41" pos:column="27"/></literal></expr>]<pos:position pos:line="41" pos:column="28"/></index></name> <operator pos:line="41" pos:column="29">==<pos:position pos:line="41" pos:column="31"/></operator> <literal type="char" pos:line="41" pos:column="32">'o'<pos:position pos:line="41" pos:column="35"/></literal> <operator pos:line="41" pos:column="36">&amp;&amp;<pos:position pos:line="41" pos:column="46"/></operator> <name><name pos:line="41" pos:column="39">line<pos:position pos:line="41" pos:column="43"/></name><index pos:line="41" pos:column="43">[<expr><literal type="number" pos:line="41" pos:column="44">1<pos:position pos:line="41" pos:column="45"/></literal></expr>]<pos:position pos:line="41" pos:column="46"/></index></name> <operator pos:line="41" pos:column="47">==<pos:position pos:line="41" pos:column="49"/></operator> <literal type="char" pos:line="41" pos:column="50">'k'<pos:position pos:line="41" pos:column="53"/></literal></expr>)<pos:position pos:line="41" pos:column="54"/></condition><then pos:line="41" pos:column="54">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="42" pos:column="25">hint<pos:position pos:line="42" pos:column="29"/></name><operator pos:line="42" pos:column="29">-&gt;<pos:position pos:line="42" pos:column="34"/></operator><name pos:line="42" pos:column="31">status<pos:position pos:line="42" pos:column="37"/></name></name> <operator pos:line="42" pos:column="38">=<pos:position pos:line="42" pos:column="39"/></operator> <name pos:line="42" pos:column="40">REF_STATUS_OK<pos:position pos:line="42" pos:column="53"/></name></expr>;<pos:position pos:line="42" pos:column="54"/></expr_stmt></block></then>
		<else pos:line="43" pos:column="17">else <block pos:line="43" pos:column="22">{
			<expr_stmt><expr><name><name pos:line="44" pos:column="25">hint<pos:position pos:line="44" pos:column="29"/></name><operator pos:line="44" pos:column="29">-&gt;<pos:position pos:line="44" pos:column="34"/></operator><name pos:line="44" pos:column="31">status<pos:position pos:line="44" pos:column="37"/></name></name> <operator pos:line="44" pos:column="38">=<pos:position pos:line="44" pos:column="39"/></operator> <name pos:line="44" pos:column="40">REF_STATUS_REMOTE_REJECT<pos:position pos:line="44" pos:column="64"/></name></expr>;<pos:position pos:line="44" pos:column="65"/></expr_stmt>
			<expr_stmt><expr><name pos:line="45" pos:column="25">ret<pos:position pos:line="45" pos:column="28"/></name> <operator pos:line="45" pos:column="29">=<pos:position pos:line="45" pos:column="30"/></operator> <operator pos:line="45" pos:column="31">-<pos:position pos:line="45" pos:column="32"/></operator><literal type="number" pos:line="45" pos:column="32">1<pos:position pos:line="45" pos:column="33"/></literal></expr>;<pos:position pos:line="45" pos:column="34"/></expr_stmt>
		}<pos:position pos:line="46" pos:column="18"/></block></else></if>
		<expr_stmt><expr><name><name pos:line="47" pos:column="17">hint<pos:position pos:line="47" pos:column="21"/></name><operator pos:line="47" pos:column="21">-&gt;<pos:position pos:line="47" pos:column="26"/></operator><name pos:line="47" pos:column="23">remote_status<pos:position pos:line="47" pos:column="36"/></name></name> <operator pos:line="47" pos:column="37">=<pos:position pos:line="47" pos:column="38"/></operator> <call><name pos:line="47" pos:column="39">xstrdup_or_null<pos:position pos:line="47" pos:column="54"/></name><argument_list pos:line="47" pos:column="54">(<argument><expr><name pos:line="47" pos:column="55">msg<pos:position pos:line="47" pos:column="58"/></name></expr></argument>)<pos:position pos:line="47" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="60"/></expr_stmt>
		<comment type="block" pos:line="48" pos:column="17">/* start our next search from the next ref */</comment>
		<expr_stmt><expr><name pos:line="49" pos:column="17">hint<pos:position pos:line="49" pos:column="21"/></name> <operator pos:line="49" pos:column="22">=<pos:position pos:line="49" pos:column="23"/></operator> <name><name pos:line="49" pos:column="24">hint<pos:position pos:line="49" pos:column="28"/></name><operator pos:line="49" pos:column="28">-&gt;<pos:position pos:line="49" pos:column="33"/></operator><name pos:line="49" pos:column="30">next<pos:position pos:line="49" pos:column="34"/></name></name></expr>;<pos:position pos:line="49" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="50" pos:column="10"/></block></while>
	<return pos:line="51" pos:column="9">return <expr><name pos:line="51" pos:column="16">ret<pos:position pos:line="51" pos:column="19"/></name></expr>;<pos:position pos:line="51" pos:column="20"/></return>
}<pos:position pos:line="52" pos:column="2"/></block></function></unit>

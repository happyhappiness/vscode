<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6578_git-2.13.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <specifier pos:line="1" pos:column="8">inline<pos:position pos:line="1" pos:column="14"/></specifier> <type><name pos:line="1" pos:column="15">uint64_t<pos:position pos:line="1" pos:column="23"/></name></type> <name pos:line="1" pos:column="24">git_bswap64<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">uint64_t<pos:position pos:line="1" pos:column="44"/></name></type> <name pos:line="1" pos:column="45">x<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<union pos:line="3" pos:column="9">union <block pos:line="3" pos:column="15">{<public type="default" pos:line="3" pos:column="16"> <decl_stmt><decl><type><name pos:line="3" pos:column="17">uint64_t<pos:position pos:line="3" pos:column="25"/></name></type> <name pos:line="3" pos:column="26">i64<pos:position pos:line="3" pos:column="29"/></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt> <decl_stmt><decl><type><name pos:line="3" pos:column="31">uint32_t<pos:position pos:line="3" pos:column="39"/></name></type> <name><name pos:line="3" pos:column="40">i32<pos:position pos:line="3" pos:column="43"/></name><index pos:line="3" pos:column="43">[<expr><literal type="number" pos:line="3" pos:column="44">2<pos:position pos:line="3" pos:column="45"/></literal></expr>]<pos:position pos:line="3" pos:column="46"/></index></name></decl>;<pos:position pos:line="3" pos:column="47"/></decl_stmt> <pos:position pos:line="3" pos:column="48"/></public>}<pos:position pos:line="3" pos:column="49"/></block> <decl><name pos:line="3" pos:column="50">tmp<pos:position pos:line="3" pos:column="53"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="55">result<pos:position pos:line="3" pos:column="61"/></name></decl>;<pos:position pos:line="3" pos:column="62"/></union>
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><call><name pos:line="4" pos:column="13">__builtin_constant_p<pos:position pos:line="4" pos:column="33"/></name><argument_list pos:line="4" pos:column="33">(<argument><expr><name pos:line="4" pos:column="34">x<pos:position pos:line="4" pos:column="35"/></name></expr></argument>)<pos:position pos:line="4" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="37"/></condition><then pos:line="4" pos:column="37">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="5" pos:column="17">result<pos:position pos:line="5" pos:column="23"/></name><operator pos:line="5" pos:column="23">.<pos:position pos:line="5" pos:column="24"/></operator><name pos:line="5" pos:column="24">i64<pos:position pos:line="5" pos:column="27"/></name></name> <operator pos:line="5" pos:column="28">=<pos:position pos:line="5" pos:column="29"/></operator> <call><name pos:line="5" pos:column="30">default_bswap64<pos:position pos:line="5" pos:column="45"/></name><argument_list pos:line="5" pos:column="45">(<argument><expr><name pos:line="5" pos:column="46">x<pos:position pos:line="5" pos:column="47"/></name></expr></argument>)<pos:position pos:line="5" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="49"/></expr_stmt></block></then>
	<else pos:line="6" pos:column="9">else <block pos:line="6" pos:column="14">{
		<expr_stmt><expr><name><name pos:line="7" pos:column="17">tmp<pos:position pos:line="7" pos:column="20"/></name><operator pos:line="7" pos:column="20">.<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="21">i64<pos:position pos:line="7" pos:column="24"/></name></name> <operator pos:line="7" pos:column="25">=<pos:position pos:line="7" pos:column="26"/></operator> <name pos:line="7" pos:column="27">x<pos:position pos:line="7" pos:column="28"/></name></expr>;<pos:position pos:line="7" pos:column="29"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="8" pos:column="17">result<pos:position pos:line="8" pos:column="23"/></name><operator pos:line="8" pos:column="23">.<pos:position pos:line="8" pos:column="24"/></operator><name pos:line="8" pos:column="24">i32<pos:position pos:line="8" pos:column="27"/></name><index pos:line="8" pos:column="27">[<expr><literal type="number" pos:line="8" pos:column="28">0<pos:position pos:line="8" pos:column="29"/></literal></expr>]<pos:position pos:line="8" pos:column="30"/></index></name> <operator pos:line="8" pos:column="31">=<pos:position pos:line="8" pos:column="32"/></operator> <call><name pos:line="8" pos:column="33">git_bswap32<pos:position pos:line="8" pos:column="44"/></name><argument_list pos:line="8" pos:column="44">(<argument><expr><name><name pos:line="8" pos:column="45">tmp<pos:position pos:line="8" pos:column="48"/></name><operator pos:line="8" pos:column="48">.<pos:position pos:line="8" pos:column="49"/></operator><name pos:line="8" pos:column="49">i32<pos:position pos:line="8" pos:column="52"/></name><index pos:line="8" pos:column="52">[<expr><literal type="number" pos:line="8" pos:column="53">1<pos:position pos:line="8" pos:column="54"/></literal></expr>]<pos:position pos:line="8" pos:column="55"/></index></name></expr></argument>)<pos:position pos:line="8" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="57"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="9" pos:column="17">result<pos:position pos:line="9" pos:column="23"/></name><operator pos:line="9" pos:column="23">.<pos:position pos:line="9" pos:column="24"/></operator><name pos:line="9" pos:column="24">i32<pos:position pos:line="9" pos:column="27"/></name><index pos:line="9" pos:column="27">[<expr><literal type="number" pos:line="9" pos:column="28">1<pos:position pos:line="9" pos:column="29"/></literal></expr>]<pos:position pos:line="9" pos:column="30"/></index></name> <operator pos:line="9" pos:column="31">=<pos:position pos:line="9" pos:column="32"/></operator> <call><name pos:line="9" pos:column="33">git_bswap32<pos:position pos:line="9" pos:column="44"/></name><argument_list pos:line="9" pos:column="44">(<argument><expr><name><name pos:line="9" pos:column="45">tmp<pos:position pos:line="9" pos:column="48"/></name><operator pos:line="9" pos:column="48">.<pos:position pos:line="9" pos:column="49"/></operator><name pos:line="9" pos:column="49">i32<pos:position pos:line="9" pos:column="52"/></name><index pos:line="9" pos:column="52">[<expr><literal type="number" pos:line="9" pos:column="53">0<pos:position pos:line="9" pos:column="54"/></literal></expr>]<pos:position pos:line="9" pos:column="55"/></index></name></expr></argument>)<pos:position pos:line="9" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="57"/></expr_stmt>
	}<pos:position pos:line="10" pos:column="10"/></block></else></if>
	<return pos:line="11" pos:column="9">return <expr><name><name pos:line="11" pos:column="16">result<pos:position pos:line="11" pos:column="22"/></name><operator pos:line="11" pos:column="22">.<pos:position pos:line="11" pos:column="23"/></operator><name pos:line="11" pos:column="23">i64<pos:position pos:line="11" pos:column="26"/></name></name></expr>;<pos:position pos:line="11" pos:column="27"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

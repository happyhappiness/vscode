<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_570_git-2.14.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">find_subpos<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">buf<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">unsigned<pos:position pos:line="1" pos:column="50"/></name> <name pos:line="1" pos:column="51">long<pos:position pos:line="1" pos:column="55"/></name></type> <name pos:line="1" pos:column="56">sz<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>,
			<parameter><decl><type><specifier pos:line="2" pos:column="25">const<pos:position pos:line="2" pos:column="30"/></specifier> <name pos:line="2" pos:column="31">char<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier><modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="38">sub<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="43">unsigned<pos:position pos:line="2" pos:column="51"/></name> <name pos:line="2" pos:column="52">long<pos:position pos:line="2" pos:column="56"/></name> <modifier pos:line="2" pos:column="57">*<pos:position pos:line="2" pos:column="58"/></modifier></type><name pos:line="2" pos:column="58">sublen<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>,
			<parameter><decl><type><specifier pos:line="3" pos:column="25">const<pos:position pos:line="3" pos:column="30"/></specifier> <name pos:line="3" pos:column="31">char<pos:position pos:line="3" pos:column="35"/></name> <modifier pos:line="3" pos:column="36">*<pos:position pos:line="3" pos:column="37"/></modifier><modifier pos:line="3" pos:column="37">*<pos:position pos:line="3" pos:column="38"/></modifier></type><name pos:line="3" pos:column="38">body<pos:position pos:line="3" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="44">unsigned<pos:position pos:line="3" pos:column="52"/></name> <name pos:line="3" pos:column="53">long<pos:position pos:line="3" pos:column="57"/></name> <modifier pos:line="3" pos:column="58">*<pos:position pos:line="3" pos:column="59"/></modifier></type><name pos:line="3" pos:column="59">bodylen<pos:position pos:line="3" pos:column="66"/></name></decl></parameter>,
			<parameter><decl><type><name pos:line="4" pos:column="25">unsigned<pos:position pos:line="4" pos:column="33"/></name> <name pos:line="4" pos:column="34">long<pos:position pos:line="4" pos:column="38"/></name> <modifier pos:line="4" pos:column="39">*<pos:position pos:line="4" pos:column="40"/></modifier></type><name pos:line="4" pos:column="40">nonsiglen<pos:position pos:line="4" pos:column="49"/></name></decl></parameter>,
			<parameter><decl><type><specifier pos:line="5" pos:column="25">const<pos:position pos:line="5" pos:column="30"/></specifier> <name pos:line="5" pos:column="31">char<pos:position pos:line="5" pos:column="35"/></name> <modifier pos:line="5" pos:column="36">*<pos:position pos:line="5" pos:column="37"/></modifier><modifier pos:line="5" pos:column="37">*<pos:position pos:line="5" pos:column="38"/></modifier></type><name pos:line="5" pos:column="38">sig<pos:position pos:line="5" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="5" pos:column="43">unsigned<pos:position pos:line="5" pos:column="51"/></name> <name pos:line="5" pos:column="52">long<pos:position pos:line="5" pos:column="56"/></name> <modifier pos:line="5" pos:column="57">*<pos:position pos:line="5" pos:column="58"/></modifier></type><name pos:line="5" pos:column="58">siglen<pos:position pos:line="5" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="65"/></parameter_list>
<block pos:line="6" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name pos:line="7" pos:column="15">char<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">eol<pos:position pos:line="7" pos:column="24"/></name></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>
	<comment type="block" pos:line="8" pos:column="9">/* skip past header until we hit empty line */</comment>
	<while pos:line="9" pos:column="9">while <condition pos:line="9" pos:column="15">(<expr><operator pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="17">buf<pos:position pos:line="9" pos:column="20"/></name> <operator pos:line="9" pos:column="21">&amp;&amp;<pos:position pos:line="9" pos:column="31"/></operator> <operator pos:line="9" pos:column="24">*<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="25">buf<pos:position pos:line="9" pos:column="28"/></name> <operator pos:line="9" pos:column="29">!=<pos:position pos:line="9" pos:column="31"/></operator> <literal type="char" pos:line="9" pos:column="32">'\n'<pos:position pos:line="9" pos:column="36"/></literal></expr>)<pos:position pos:line="9" pos:column="37"/></condition> <block pos:line="9" pos:column="38">{
		<expr_stmt><expr><name pos:line="10" pos:column="17">eol<pos:position pos:line="10" pos:column="20"/></name> <operator pos:line="10" pos:column="21">=<pos:position pos:line="10" pos:column="22"/></operator> <call><name pos:line="10" pos:column="23">strchrnul<pos:position pos:line="10" pos:column="32"/></name><argument_list pos:line="10" pos:column="32">(<argument><expr><name pos:line="10" pos:column="33">buf<pos:position pos:line="10" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="10" pos:column="38">'\n'<pos:position pos:line="10" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="44"/></expr_stmt>
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><operator pos:line="11" pos:column="21">*<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="22">eol<pos:position pos:line="11" pos:column="25"/></name></expr>)<pos:position pos:line="11" pos:column="26"/></condition><then pos:line="11" pos:column="26">
			<block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="25">eol<pos:position pos:line="12" pos:column="28"/></name><operator pos:line="12" pos:column="28">++<pos:position pos:line="12" pos:column="30"/></operator></expr>;<pos:position pos:line="12" pos:column="31"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="13" pos:column="17">buf<pos:position pos:line="13" pos:column="20"/></name> <operator pos:line="13" pos:column="21">=<pos:position pos:line="13" pos:column="22"/></operator> <name pos:line="13" pos:column="23">eol<pos:position pos:line="13" pos:column="26"/></name></expr>;<pos:position pos:line="13" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="14" pos:column="10"/></block></while>
	<comment type="block" pos:line="15" pos:column="9">/* skip any empty lines */</comment>
	<while pos:line="16" pos:column="9">while <condition pos:line="16" pos:column="15">(<expr><operator pos:line="16" pos:column="16">*<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="17">buf<pos:position pos:line="16" pos:column="20"/></name> <operator pos:line="16" pos:column="21">==<pos:position pos:line="16" pos:column="23"/></operator> <literal type="char" pos:line="16" pos:column="24">'\n'<pos:position pos:line="16" pos:column="28"/></literal></expr>)<pos:position pos:line="16" pos:column="29"/></condition>
		<block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="17">buf<pos:position pos:line="17" pos:column="20"/></name><operator pos:line="17" pos:column="20">++<pos:position pos:line="17" pos:column="22"/></operator></expr>;<pos:position pos:line="17" pos:column="23"/></expr_stmt></block></while>

	<comment type="block" pos:line="19" pos:column="9">/* parse signature first; we might not even have a subject line */</comment>
	<expr_stmt><expr><operator pos:line="20" pos:column="9">*<pos:position pos:line="20" pos:column="10"/></operator><name pos:line="20" pos:column="10">sig<pos:position pos:line="20" pos:column="13"/></name> <operator pos:line="20" pos:column="14">=<pos:position pos:line="20" pos:column="15"/></operator> <name pos:line="20" pos:column="16">buf<pos:position pos:line="20" pos:column="19"/></name> <operator pos:line="20" pos:column="20">+<pos:position pos:line="20" pos:column="21"/></operator> <call><name pos:line="20" pos:column="22">parse_signature<pos:position pos:line="20" pos:column="37"/></name><argument_list pos:line="20" pos:column="37">(<argument><expr><name pos:line="20" pos:column="38">buf<pos:position pos:line="20" pos:column="41"/></name></expr></argument>, <argument><expr><call><name pos:line="20" pos:column="43">strlen<pos:position pos:line="20" pos:column="49"/></name><argument_list pos:line="20" pos:column="49">(<argument><expr><name pos:line="20" pos:column="50">buf<pos:position pos:line="20" pos:column="53"/></name></expr></argument>)<pos:position pos:line="20" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="56"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="21" pos:column="9">*<pos:position pos:line="21" pos:column="10"/></operator><name pos:line="21" pos:column="10">siglen<pos:position pos:line="21" pos:column="16"/></name> <operator pos:line="21" pos:column="17">=<pos:position pos:line="21" pos:column="18"/></operator> <call><name pos:line="21" pos:column="19">strlen<pos:position pos:line="21" pos:column="25"/></name><argument_list pos:line="21" pos:column="25">(<argument><expr><operator pos:line="21" pos:column="26">*<pos:position pos:line="21" pos:column="27"/></operator><name pos:line="21" pos:column="27">sig<pos:position pos:line="21" pos:column="30"/></name></expr></argument>)<pos:position pos:line="21" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="32"/></expr_stmt>

	<comment type="block" pos:line="23" pos:column="9">/* subject is first non-empty line */</comment>
	<expr_stmt><expr><operator pos:line="24" pos:column="9">*<pos:position pos:line="24" pos:column="10"/></operator><name pos:line="24" pos:column="10">sub<pos:position pos:line="24" pos:column="13"/></name> <operator pos:line="24" pos:column="14">=<pos:position pos:line="24" pos:column="15"/></operator> <name pos:line="24" pos:column="16">buf<pos:position pos:line="24" pos:column="19"/></name></expr>;<pos:position pos:line="24" pos:column="20"/></expr_stmt>
	<comment type="block" pos:line="25" pos:column="9">/* subject goes to first empty line */</comment>
	<while pos:line="26" pos:column="9">while <condition pos:line="26" pos:column="15">(<expr><name pos:line="26" pos:column="16">buf<pos:position pos:line="26" pos:column="19"/></name> <operator pos:line="26" pos:column="20">&lt;<pos:position pos:line="26" pos:column="24"/></operator> <operator pos:line="26" pos:column="22">*<pos:position pos:line="26" pos:column="23"/></operator><name pos:line="26" pos:column="23">sig<pos:position pos:line="26" pos:column="26"/></name> <operator pos:line="26" pos:column="27">&amp;&amp;<pos:position pos:line="26" pos:column="37"/></operator> <operator pos:line="26" pos:column="30">*<pos:position pos:line="26" pos:column="31"/></operator><name pos:line="26" pos:column="31">buf<pos:position pos:line="26" pos:column="34"/></name> <operator pos:line="26" pos:column="35">&amp;&amp;<pos:position pos:line="26" pos:column="45"/></operator> <operator pos:line="26" pos:column="38">*<pos:position pos:line="26" pos:column="39"/></operator><name pos:line="26" pos:column="39">buf<pos:position pos:line="26" pos:column="42"/></name> <operator pos:line="26" pos:column="43">!=<pos:position pos:line="26" pos:column="45"/></operator> <literal type="char" pos:line="26" pos:column="46">'\n'<pos:position pos:line="26" pos:column="50"/></literal></expr>)<pos:position pos:line="26" pos:column="51"/></condition> <block pos:line="26" pos:column="52">{
		<expr_stmt><expr><name pos:line="27" pos:column="17">eol<pos:position pos:line="27" pos:column="20"/></name> <operator pos:line="27" pos:column="21">=<pos:position pos:line="27" pos:column="22"/></operator> <call><name pos:line="27" pos:column="23">strchrnul<pos:position pos:line="27" pos:column="32"/></name><argument_list pos:line="27" pos:column="32">(<argument><expr><name pos:line="27" pos:column="33">buf<pos:position pos:line="27" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="27" pos:column="38">'\n'<pos:position pos:line="27" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="44"/></expr_stmt>
		<if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><operator pos:line="28" pos:column="21">*<pos:position pos:line="28" pos:column="22"/></operator><name pos:line="28" pos:column="22">eol<pos:position pos:line="28" pos:column="25"/></name></expr>)<pos:position pos:line="28" pos:column="26"/></condition><then pos:line="28" pos:column="26">
			<block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="25">eol<pos:position pos:line="29" pos:column="28"/></name><operator pos:line="29" pos:column="28">++<pos:position pos:line="29" pos:column="30"/></operator></expr>;<pos:position pos:line="29" pos:column="31"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="30" pos:column="17">buf<pos:position pos:line="30" pos:column="20"/></name> <operator pos:line="30" pos:column="21">=<pos:position pos:line="30" pos:column="22"/></operator> <name pos:line="30" pos:column="23">eol<pos:position pos:line="30" pos:column="26"/></name></expr>;<pos:position pos:line="30" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="31" pos:column="10"/></block></while>
	<expr_stmt><expr><operator pos:line="32" pos:column="9">*<pos:position pos:line="32" pos:column="10"/></operator><name pos:line="32" pos:column="10">sublen<pos:position pos:line="32" pos:column="16"/></name> <operator pos:line="32" pos:column="17">=<pos:position pos:line="32" pos:column="18"/></operator> <name pos:line="32" pos:column="19">buf<pos:position pos:line="32" pos:column="22"/></name> <operator pos:line="32" pos:column="23">-<pos:position pos:line="32" pos:column="24"/></operator> <operator pos:line="32" pos:column="25">*<pos:position pos:line="32" pos:column="26"/></operator><name pos:line="32" pos:column="26">sub<pos:position pos:line="32" pos:column="29"/></name></expr>;<pos:position pos:line="32" pos:column="30"/></expr_stmt>
	<comment type="block" pos:line="33" pos:column="9">/* drop trailing newline, if present */</comment>
	<if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><operator pos:line="34" pos:column="13">*<pos:position pos:line="34" pos:column="14"/></operator><name pos:line="34" pos:column="14">sublen<pos:position pos:line="34" pos:column="20"/></name> <operator pos:line="34" pos:column="21">&amp;&amp;<pos:position pos:line="34" pos:column="31"/></operator> <operator pos:line="34" pos:column="24">(<pos:position pos:line="34" pos:column="25"/></operator><operator pos:line="34" pos:column="25">*<pos:position pos:line="34" pos:column="26"/></operator><name pos:line="34" pos:column="26">sub<pos:position pos:line="34" pos:column="29"/></name><operator pos:line="34" pos:column="29">)<pos:position pos:line="34" pos:column="30"/></operator><index pos:line="34" pos:column="30">[<expr><operator pos:line="34" pos:column="31">*<pos:position pos:line="34" pos:column="32"/></operator><name pos:line="34" pos:column="32">sublen<pos:position pos:line="34" pos:column="38"/></name> <operator pos:line="34" pos:column="39">-<pos:position pos:line="34" pos:column="40"/></operator> <literal type="number" pos:line="34" pos:column="41">1<pos:position pos:line="34" pos:column="42"/></literal></expr>]<pos:position pos:line="34" pos:column="43"/></index> <operator pos:line="34" pos:column="44">==<pos:position pos:line="34" pos:column="46"/></operator> <literal type="char" pos:line="34" pos:column="47">'\n'<pos:position pos:line="34" pos:column="51"/></literal></expr>)<pos:position pos:line="34" pos:column="52"/></condition><then pos:line="34" pos:column="52">
		<block type="pseudo"><expr_stmt><expr><operator pos:line="35" pos:column="17">*<pos:position pos:line="35" pos:column="18"/></operator><name pos:line="35" pos:column="18">sublen<pos:position pos:line="35" pos:column="24"/></name> <operator pos:line="35" pos:column="25">-=<pos:position pos:line="35" pos:column="27"/></operator> <literal type="number" pos:line="35" pos:column="28">1<pos:position pos:line="35" pos:column="29"/></literal></expr>;<pos:position pos:line="35" pos:column="30"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="37" pos:column="9">/* skip any empty lines */</comment>
	<while pos:line="38" pos:column="9">while <condition pos:line="38" pos:column="15">(<expr><operator pos:line="38" pos:column="16">*<pos:position pos:line="38" pos:column="17"/></operator><name pos:line="38" pos:column="17">buf<pos:position pos:line="38" pos:column="20"/></name> <operator pos:line="38" pos:column="21">==<pos:position pos:line="38" pos:column="23"/></operator> <literal type="char" pos:line="38" pos:column="24">'\n'<pos:position pos:line="38" pos:column="28"/></literal></expr>)<pos:position pos:line="38" pos:column="29"/></condition>
		<block type="pseudo"><expr_stmt><expr><name pos:line="39" pos:column="17">buf<pos:position pos:line="39" pos:column="20"/></name><operator pos:line="39" pos:column="20">++<pos:position pos:line="39" pos:column="22"/></operator></expr>;<pos:position pos:line="39" pos:column="23"/></expr_stmt></block></while>
	<expr_stmt><expr><operator pos:line="40" pos:column="9">*<pos:position pos:line="40" pos:column="10"/></operator><name pos:line="40" pos:column="10">body<pos:position pos:line="40" pos:column="14"/></name> <operator pos:line="40" pos:column="15">=<pos:position pos:line="40" pos:column="16"/></operator> <name pos:line="40" pos:column="17">buf<pos:position pos:line="40" pos:column="20"/></name></expr>;<pos:position pos:line="40" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="41" pos:column="9">*<pos:position pos:line="41" pos:column="10"/></operator><name pos:line="41" pos:column="10">bodylen<pos:position pos:line="41" pos:column="17"/></name> <operator pos:line="41" pos:column="18">=<pos:position pos:line="41" pos:column="19"/></operator> <call><name pos:line="41" pos:column="20">strlen<pos:position pos:line="41" pos:column="26"/></name><argument_list pos:line="41" pos:column="26">(<argument><expr><name pos:line="41" pos:column="27">buf<pos:position pos:line="41" pos:column="30"/></name></expr></argument>)<pos:position pos:line="41" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="42" pos:column="9">*<pos:position pos:line="42" pos:column="10"/></operator><name pos:line="42" pos:column="10">nonsiglen<pos:position pos:line="42" pos:column="19"/></name> <operator pos:line="42" pos:column="20">=<pos:position pos:line="42" pos:column="21"/></operator> <operator pos:line="42" pos:column="22">*<pos:position pos:line="42" pos:column="23"/></operator><name pos:line="42" pos:column="23">sig<pos:position pos:line="42" pos:column="26"/></name> <operator pos:line="42" pos:column="27">-<pos:position pos:line="42" pos:column="28"/></operator> <name pos:line="42" pos:column="29">buf<pos:position pos:line="42" pos:column="32"/></name></expr>;<pos:position pos:line="42" pos:column="33"/></expr_stmt>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

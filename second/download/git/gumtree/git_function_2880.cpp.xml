<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2880.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">check_local_mod<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">unsigned<pos:position pos:line="1" pos:column="36"/></name> <name pos:line="1" pos:column="37">char<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">head<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">int<pos:position pos:line="1" pos:column="52"/></name></type> <name pos:line="1" pos:column="53">index_only<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<comment type="block" pos:line="3" pos:column="9">/*
	 * Items in list are already sorted in the cache order,
	 * so we could do this a lot more efficiently by using
	 * tree_desc based traversal if we wanted to, but I am
	 * lazy, and who cares if removal of files is a tad
	 * slower than the theoretical maximum speed?
	 */</comment>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">i<pos:position pos:line="10" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="16">no_head<pos:position pos:line="10" pos:column="23"/></name></decl>;<pos:position pos:line="10" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">int<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">errs<pos:position pos:line="11" pos:column="17"/></name> <init pos:line="11" pos:column="18">= <expr><literal type="number" pos:line="11" pos:column="20">0<pos:position pos:line="11" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="12" pos:column="9">struct<pos:position pos:line="12" pos:column="15"/></name> <name pos:line="12" pos:column="16">string_list<pos:position pos:line="12" pos:column="27"/></name></name></type> <name pos:line="12" pos:column="28">files_staged<pos:position pos:line="12" pos:column="40"/></name> <init pos:line="12" pos:column="41">= <expr><name pos:line="12" pos:column="43">STRING_LIST_INIT_NODUP<pos:position pos:line="12" pos:column="65"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="66"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="13" pos:column="9">struct<pos:position pos:line="13" pos:column="15"/></name> <name pos:line="13" pos:column="16">string_list<pos:position pos:line="13" pos:column="27"/></name></name></type> <name pos:line="13" pos:column="28">files_cached<pos:position pos:line="13" pos:column="40"/></name> <init pos:line="13" pos:column="41">= <expr><name pos:line="13" pos:column="43">STRING_LIST_INIT_NODUP<pos:position pos:line="13" pos:column="65"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="66"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="14" pos:column="9">struct<pos:position pos:line="14" pos:column="15"/></name> <name pos:line="14" pos:column="16">string_list<pos:position pos:line="14" pos:column="27"/></name></name></type> <name pos:line="14" pos:column="28">files_submodule<pos:position pos:line="14" pos:column="43"/></name> <init pos:line="14" pos:column="44">= <expr><name pos:line="14" pos:column="46">STRING_LIST_INIT_NODUP<pos:position pos:line="14" pos:column="68"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="69"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="15" pos:column="9">struct<pos:position pos:line="15" pos:column="15"/></name> <name pos:line="15" pos:column="16">string_list<pos:position pos:line="15" pos:column="27"/></name></name></type> <name pos:line="15" pos:column="28">files_local<pos:position pos:line="15" pos:column="39"/></name> <init pos:line="15" pos:column="40">= <expr><name pos:line="15" pos:column="42">STRING_LIST_INIT_NODUP<pos:position pos:line="15" pos:column="64"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="65"/></decl_stmt>

	<expr_stmt><expr><name pos:line="17" pos:column="9">no_head<pos:position pos:line="17" pos:column="16"/></name> <operator pos:line="17" pos:column="17">=<pos:position pos:line="17" pos:column="18"/></operator> <call><name pos:line="17" pos:column="19">is_null_sha1<pos:position pos:line="17" pos:column="31"/></name><argument_list pos:line="17" pos:column="31">(<argument><expr><name pos:line="17" pos:column="32">head<pos:position pos:line="17" pos:column="36"/></name></expr></argument>)<pos:position pos:line="17" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="38"/></expr_stmt>
	<for pos:line="18" pos:column="9">for <control pos:line="18" pos:column="13">(<init><expr><name pos:line="18" pos:column="14">i<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">=<pos:position pos:line="18" pos:column="17"/></operator> <literal type="number" pos:line="18" pos:column="18">0<pos:position pos:line="18" pos:column="19"/></literal></expr>;<pos:position pos:line="18" pos:column="20"/></init> <condition><expr><name pos:line="18" pos:column="21">i<pos:position pos:line="18" pos:column="22"/></name> <operator pos:line="18" pos:column="23">&lt;<pos:position pos:line="18" pos:column="27"/></operator> <name><name pos:line="18" pos:column="25">list<pos:position pos:line="18" pos:column="29"/></name><operator pos:line="18" pos:column="29">.<pos:position pos:line="18" pos:column="30"/></operator><name pos:line="18" pos:column="30">nr<pos:position pos:line="18" pos:column="32"/></name></name></expr>;<pos:position pos:line="18" pos:column="33"/></condition> <incr><expr><name pos:line="18" pos:column="34">i<pos:position pos:line="18" pos:column="35"/></name><operator pos:line="18" pos:column="35">++<pos:position pos:line="18" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="18" pos:column="38"/></control> <block pos:line="18" pos:column="39">{
		<decl_stmt><decl><type><name><name pos:line="19" pos:column="17">struct<pos:position pos:line="19" pos:column="23"/></name> <name pos:line="19" pos:column="24">stat<pos:position pos:line="19" pos:column="28"/></name></name></type> <name pos:line="19" pos:column="29">st<pos:position pos:line="19" pos:column="31"/></name></decl>;<pos:position pos:line="19" pos:column="32"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="20" pos:column="17">int<pos:position pos:line="20" pos:column="20"/></name></type> <name pos:line="20" pos:column="21">pos<pos:position pos:line="20" pos:column="24"/></name></decl>;<pos:position pos:line="20" pos:column="25"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="21" pos:column="17">const<pos:position pos:line="21" pos:column="22"/></specifier> <name><name pos:line="21" pos:column="23">struct<pos:position pos:line="21" pos:column="29"/></name> <name pos:line="21" pos:column="30">cache_entry<pos:position pos:line="21" pos:column="41"/></name></name> <modifier pos:line="21" pos:column="42">*<pos:position pos:line="21" pos:column="43"/></modifier></type><name pos:line="21" pos:column="43">ce<pos:position pos:line="21" pos:column="45"/></name></decl>;<pos:position pos:line="21" pos:column="46"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="22" pos:column="17">const<pos:position pos:line="22" pos:column="22"/></specifier> <name pos:line="22" pos:column="23">char<pos:position pos:line="22" pos:column="27"/></name> <modifier pos:line="22" pos:column="28">*<pos:position pos:line="22" pos:column="29"/></modifier></type><name pos:line="22" pos:column="29">name<pos:position pos:line="22" pos:column="33"/></name> <init pos:line="22" pos:column="34">= <expr><name><name pos:line="22" pos:column="36">list<pos:position pos:line="22" pos:column="40"/></name><operator pos:line="22" pos:column="40">.<pos:position pos:line="22" pos:column="41"/></operator><name pos:line="22" pos:column="41">entry<pos:position pos:line="22" pos:column="46"/></name><index pos:line="22" pos:column="46">[<expr><name pos:line="22" pos:column="47">i<pos:position pos:line="22" pos:column="48"/></name></expr>]<pos:position pos:line="22" pos:column="49"/></index></name><operator pos:line="22" pos:column="49">.<pos:position pos:line="22" pos:column="50"/></operator><name pos:line="22" pos:column="50">name<pos:position pos:line="22" pos:column="54"/></name></expr></init></decl>;<pos:position pos:line="22" pos:column="55"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="23" pos:column="17">unsigned<pos:position pos:line="23" pos:column="25"/></name> <name pos:line="23" pos:column="26">char<pos:position pos:line="23" pos:column="30"/></name></type> <name><name pos:line="23" pos:column="31">sha1<pos:position pos:line="23" pos:column="35"/></name><index pos:line="23" pos:column="35">[<expr><literal type="number" pos:line="23" pos:column="36">20<pos:position pos:line="23" pos:column="38"/></literal></expr>]<pos:position pos:line="23" pos:column="39"/></index></name></decl>;<pos:position pos:line="23" pos:column="40"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="24" pos:column="17">unsigned<pos:position pos:line="24" pos:column="25"/></name></type> <name pos:line="24" pos:column="26">mode<pos:position pos:line="24" pos:column="30"/></name></decl>;<pos:position pos:line="24" pos:column="31"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="25" pos:column="17">int<pos:position pos:line="25" pos:column="20"/></name></type> <name pos:line="25" pos:column="21">local_changes<pos:position pos:line="25" pos:column="34"/></name> <init pos:line="25" pos:column="35">= <expr><literal type="number" pos:line="25" pos:column="37">0<pos:position pos:line="25" pos:column="38"/></literal></expr></init></decl>;<pos:position pos:line="25" pos:column="39"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="26" pos:column="17">int<pos:position pos:line="26" pos:column="20"/></name></type> <name pos:line="26" pos:column="21">staged_changes<pos:position pos:line="26" pos:column="35"/></name> <init pos:line="26" pos:column="36">= <expr><literal type="number" pos:line="26" pos:column="38">0<pos:position pos:line="26" pos:column="39"/></literal></expr></init></decl>;<pos:position pos:line="26" pos:column="40"/></decl_stmt>

		<expr_stmt><expr><name pos:line="28" pos:column="17">pos<pos:position pos:line="28" pos:column="20"/></name> <operator pos:line="28" pos:column="21">=<pos:position pos:line="28" pos:column="22"/></operator> <call><name pos:line="28" pos:column="23">cache_name_pos<pos:position pos:line="28" pos:column="37"/></name><argument_list pos:line="28" pos:column="37">(<argument><expr><name pos:line="28" pos:column="38">name<pos:position pos:line="28" pos:column="42"/></name></expr></argument>, <argument><expr><call><name pos:line="28" pos:column="44">strlen<pos:position pos:line="28" pos:column="50"/></name><argument_list pos:line="28" pos:column="50">(<argument><expr><name pos:line="28" pos:column="51">name<pos:position pos:line="28" pos:column="55"/></name></expr></argument>)<pos:position pos:line="28" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="58"/></expr_stmt>
		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><name pos:line="29" pos:column="21">pos<pos:position pos:line="29" pos:column="24"/></name> <operator pos:line="29" pos:column="25">&lt;<pos:position pos:line="29" pos:column="29"/></operator> <literal type="number" pos:line="29" pos:column="27">0<pos:position pos:line="29" pos:column="28"/></literal></expr>)<pos:position pos:line="29" pos:column="29"/></condition><then pos:line="29" pos:column="29"> <block pos:line="29" pos:column="30">{
			<comment type="block" pos:line="30" pos:column="25">/*
			 * Skip unmerged entries except for populated submodules
			 * that could lose history when removed.
			 */</comment>
			<expr_stmt><expr><name pos:line="34" pos:column="25">pos<pos:position pos:line="34" pos:column="28"/></name> <operator pos:line="34" pos:column="29">=<pos:position pos:line="34" pos:column="30"/></operator> <call><name pos:line="34" pos:column="31">get_ours_cache_pos<pos:position pos:line="34" pos:column="49"/></name><argument_list pos:line="34" pos:column="49">(<argument><expr><name pos:line="34" pos:column="50">name<pos:position pos:line="34" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="56">pos<pos:position pos:line="34" pos:column="59"/></name></expr></argument>)<pos:position pos:line="34" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="61"/></expr_stmt>
			<if pos:line="35" pos:column="25">if <condition pos:line="35" pos:column="28">(<expr><name pos:line="35" pos:column="29">pos<pos:position pos:line="35" pos:column="32"/></name> <operator pos:line="35" pos:column="33">&lt;<pos:position pos:line="35" pos:column="37"/></operator> <literal type="number" pos:line="35" pos:column="35">0<pos:position pos:line="35" pos:column="36"/></literal></expr>)<pos:position pos:line="35" pos:column="37"/></condition><then pos:line="35" pos:column="37">
				<block type="pseudo"><continue pos:line="36" pos:column="33">continue;<pos:position pos:line="36" pos:column="42"/></continue></block></then></if>

			<if pos:line="38" pos:column="25">if <condition pos:line="38" pos:column="28">(<expr><operator pos:line="38" pos:column="29">!<pos:position pos:line="38" pos:column="30"/></operator><call><name pos:line="38" pos:column="30">S_ISGITLINK<pos:position pos:line="38" pos:column="41"/></name><argument_list pos:line="38" pos:column="41">(<argument><expr><name><name pos:line="38" pos:column="42">active_cache<pos:position pos:line="38" pos:column="54"/></name><index pos:line="38" pos:column="54">[<expr><name pos:line="38" pos:column="55">pos<pos:position pos:line="38" pos:column="58"/></name></expr>]<pos:position pos:line="38" pos:column="59"/></index></name><operator pos:line="38" pos:column="59">-&gt;<pos:position pos:line="38" pos:column="64"/></operator><name pos:line="38" pos:column="61">ce_mode<pos:position pos:line="38" pos:column="68"/></name></expr></argument>)<pos:position pos:line="38" pos:column="69"/></argument_list></call> <operator pos:line="38" pos:column="70">||<pos:position pos:line="38" pos:column="72"/></operator>
			    <call><name pos:line="39" pos:column="29">is_empty_dir<pos:position pos:line="39" pos:column="41"/></name><argument_list pos:line="39" pos:column="41">(<argument><expr><name pos:line="39" pos:column="42">name<pos:position pos:line="39" pos:column="46"/></name></expr></argument>)<pos:position pos:line="39" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="48"/></condition><then pos:line="39" pos:column="48">
				<block type="pseudo"><continue pos:line="40" pos:column="33">continue;<pos:position pos:line="40" pos:column="42"/></continue></block></then></if>
		}<pos:position pos:line="41" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="42" pos:column="17">ce<pos:position pos:line="42" pos:column="19"/></name> <operator pos:line="42" pos:column="20">=<pos:position pos:line="42" pos:column="21"/></operator> <name><name pos:line="42" pos:column="22">active_cache<pos:position pos:line="42" pos:column="34"/></name><index pos:line="42" pos:column="34">[<expr><name pos:line="42" pos:column="35">pos<pos:position pos:line="42" pos:column="38"/></name></expr>]<pos:position pos:line="42" pos:column="39"/></index></name></expr>;<pos:position pos:line="42" pos:column="40"/></expr_stmt>

		<if pos:line="44" pos:column="17">if <condition pos:line="44" pos:column="20">(<expr><call><name pos:line="44" pos:column="21">lstat<pos:position pos:line="44" pos:column="26"/></name><argument_list pos:line="44" pos:column="26">(<argument><expr><name><name pos:line="44" pos:column="27">ce<pos:position pos:line="44" pos:column="29"/></name><operator pos:line="44" pos:column="29">-&gt;<pos:position pos:line="44" pos:column="34"/></operator><name pos:line="44" pos:column="31">name<pos:position pos:line="44" pos:column="35"/></name></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="37">&amp;<pos:position pos:line="44" pos:column="42"/></operator><name pos:line="44" pos:column="38">st<pos:position pos:line="44" pos:column="40"/></name></expr></argument>)<pos:position pos:line="44" pos:column="41"/></argument_list></call> <operator pos:line="44" pos:column="42">&lt;<pos:position pos:line="44" pos:column="46"/></operator> <literal type="number" pos:line="44" pos:column="44">0<pos:position pos:line="44" pos:column="45"/></literal></expr>)<pos:position pos:line="44" pos:column="46"/></condition><then pos:line="44" pos:column="46"> <block pos:line="44" pos:column="47">{
			<if pos:line="45" pos:column="25">if <condition pos:line="45" pos:column="28">(<expr><name pos:line="45" pos:column="29">errno<pos:position pos:line="45" pos:column="34"/></name> <operator pos:line="45" pos:column="35">!=<pos:position pos:line="45" pos:column="37"/></operator> <name pos:line="45" pos:column="38">ENOENT<pos:position pos:line="45" pos:column="44"/></name> <operator pos:line="45" pos:column="45">&amp;&amp;<pos:position pos:line="45" pos:column="55"/></operator> <name pos:line="45" pos:column="48">errno<pos:position pos:line="45" pos:column="53"/></name> <operator pos:line="45" pos:column="54">!=<pos:position pos:line="45" pos:column="56"/></operator> <name pos:line="45" pos:column="57">ENOTDIR<pos:position pos:line="45" pos:column="64"/></name></expr>)<pos:position pos:line="45" pos:column="65"/></condition><then pos:line="45" pos:column="65">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="46" pos:column="33">warning<pos:position pos:line="46" pos:column="40"/></name><argument_list pos:line="46" pos:column="40">(<argument><expr><literal type="string" pos:line="46" pos:column="41">"'%s': %s"<pos:position pos:line="46" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="53">ce<pos:position pos:line="46" pos:column="55"/></name><operator pos:line="46" pos:column="55">-&gt;<pos:position pos:line="46" pos:column="60"/></operator><name pos:line="46" pos:column="57">name<pos:position pos:line="46" pos:column="61"/></name></name></expr></argument>, <argument><expr><call><name pos:line="46" pos:column="63">strerror<pos:position pos:line="46" pos:column="71"/></name><argument_list pos:line="46" pos:column="71">(<argument><expr><name pos:line="46" pos:column="72">errno<pos:position pos:line="46" pos:column="77"/></name></expr></argument>)<pos:position pos:line="46" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="46" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="80"/></expr_stmt></block></then></if>
			<comment type="block" pos:line="47" pos:column="25">/* It already vanished from the working tree */</comment>
			<continue pos:line="48" pos:column="25">continue;<pos:position pos:line="48" pos:column="34"/></continue>
		}<pos:position pos:line="49" pos:column="18"/></block></then>
		<elseif pos:line="50" pos:column="17">else <if pos:line="50" pos:column="22">if <condition pos:line="50" pos:column="25">(<expr><call><name pos:line="50" pos:column="26">S_ISDIR<pos:position pos:line="50" pos:column="33"/></name><argument_list pos:line="50" pos:column="33">(<argument><expr><name><name pos:line="50" pos:column="34">st<pos:position pos:line="50" pos:column="36"/></name><operator pos:line="50" pos:column="36">.<pos:position pos:line="50" pos:column="37"/></operator><name pos:line="50" pos:column="37">st_mode<pos:position pos:line="50" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="50" pos:column="46"/></condition><then pos:line="50" pos:column="46"> <block pos:line="50" pos:column="47">{
			<comment type="block" pos:line="51" pos:column="25">/* if a file was removed and it is now a
			 * directory, that is the same as ENOENT as
			 * far as git is concerned; we do not track
			 * directories unless they are submodules.
			 */</comment>
			<if pos:line="56" pos:column="25">if <condition pos:line="56" pos:column="28">(<expr><operator pos:line="56" pos:column="29">!<pos:position pos:line="56" pos:column="30"/></operator><call><name pos:line="56" pos:column="30">S_ISGITLINK<pos:position pos:line="56" pos:column="41"/></name><argument_list pos:line="56" pos:column="41">(<argument><expr><name><name pos:line="56" pos:column="42">ce<pos:position pos:line="56" pos:column="44"/></name><operator pos:line="56" pos:column="44">-&gt;<pos:position pos:line="56" pos:column="49"/></operator><name pos:line="56" pos:column="46">ce_mode<pos:position pos:line="56" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="56" pos:column="55"/></condition><then pos:line="56" pos:column="55">
				<block type="pseudo"><continue pos:line="57" pos:column="33">continue;<pos:position pos:line="57" pos:column="42"/></continue></block></then></if>
		}<pos:position pos:line="58" pos:column="18"/></block></then></if></elseif></if>

		<comment type="block" pos:line="60" pos:column="17">/*
		 * "rm" of a path that has changes need to be treated
		 * carefully not to allow losing local changes
		 * accidentally.  A local change could be (1) file in
		 * work tree is different since the index; and/or (2)
		 * the user staged a content that is different from
		 * the current commit in the index.
		 *
		 * In such a case, you would need to --force the
		 * removal.  However, "rm --cached" (remove only from
		 * the index) is safe if the index matches the file in
		 * the work tree or the HEAD commit, as it means that
		 * the content being removed is available elsewhere.
		 */</comment>

		<comment type="block" pos:line="75" pos:column="17">/*
		 * Is the index different from the file in the work tree?
		 * If it's a submodule, is its work tree modified?
		 */</comment>
		<if pos:line="79" pos:column="17">if <condition pos:line="79" pos:column="20">(<expr><call><name pos:line="79" pos:column="21">ce_match_stat<pos:position pos:line="79" pos:column="34"/></name><argument_list pos:line="79" pos:column="34">(<argument><expr><name pos:line="79" pos:column="35">ce<pos:position pos:line="79" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="79" pos:column="39">&amp;<pos:position pos:line="79" pos:column="44"/></operator><name pos:line="79" pos:column="40">st<pos:position pos:line="79" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="79" pos:column="44">0<pos:position pos:line="79" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="46"/></argument_list></call> <operator pos:line="79" pos:column="47">||<pos:position pos:line="79" pos:column="49"/></operator>
		    <operator pos:line="80" pos:column="21">(<pos:position pos:line="80" pos:column="22"/></operator><call><name pos:line="80" pos:column="22">S_ISGITLINK<pos:position pos:line="80" pos:column="33"/></name><argument_list pos:line="80" pos:column="33">(<argument><expr><name><name pos:line="80" pos:column="34">ce<pos:position pos:line="80" pos:column="36"/></name><operator pos:line="80" pos:column="36">-&gt;<pos:position pos:line="80" pos:column="41"/></operator><name pos:line="80" pos:column="38">ce_mode<pos:position pos:line="80" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="80" pos:column="46"/></argument_list></call> <operator pos:line="80" pos:column="47">&amp;&amp;<pos:position pos:line="80" pos:column="57"/></operator>
		     <operator pos:line="81" pos:column="22">!<pos:position pos:line="81" pos:column="23"/></operator><call><name pos:line="81" pos:column="23">ok_to_remove_submodule<pos:position pos:line="81" pos:column="45"/></name><argument_list pos:line="81" pos:column="45">(<argument><expr><name><name pos:line="81" pos:column="46">ce<pos:position pos:line="81" pos:column="48"/></name><operator pos:line="81" pos:column="48">-&gt;<pos:position pos:line="81" pos:column="53"/></operator><name pos:line="81" pos:column="50">name<pos:position pos:line="81" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="81" pos:column="55"/></argument_list></call><operator pos:line="81" pos:column="55">)<pos:position pos:line="81" pos:column="56"/></operator></expr>)<pos:position pos:line="81" pos:column="57"/></condition><then pos:line="81" pos:column="57">
			<block type="pseudo"><expr_stmt><expr><name pos:line="82" pos:column="25">local_changes<pos:position pos:line="82" pos:column="38"/></name> <operator pos:line="82" pos:column="39">=<pos:position pos:line="82" pos:column="40"/></operator> <literal type="number" pos:line="82" pos:column="41">1<pos:position pos:line="82" pos:column="42"/></literal></expr>;<pos:position pos:line="82" pos:column="43"/></expr_stmt></block></then></if>

		<comment type="block" pos:line="84" pos:column="17">/*
		 * Is the index different from the HEAD commit?  By
		 * definition, before the very initial commit,
		 * anything staged in the index is treated by the same
		 * way as changed from the HEAD.
		 */</comment>
		<if pos:line="90" pos:column="17">if <condition pos:line="90" pos:column="20">(<expr><name pos:line="90" pos:column="21">no_head<pos:position pos:line="90" pos:column="28"/></name>
		     <operator pos:line="91" pos:column="22">||<pos:position pos:line="91" pos:column="24"/></operator> <call><name pos:line="91" pos:column="25">get_tree_entry<pos:position pos:line="91" pos:column="39"/></name><argument_list pos:line="91" pos:column="39">(<argument><expr><name pos:line="91" pos:column="40">head<pos:position pos:line="91" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="46">name<pos:position pos:line="91" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="52">sha1<pos:position pos:line="91" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="91" pos:column="58">&amp;<pos:position pos:line="91" pos:column="63"/></operator><name pos:line="91" pos:column="59">mode<pos:position pos:line="91" pos:column="63"/></name></expr></argument>)<pos:position pos:line="91" pos:column="64"/></argument_list></call>
		     <operator pos:line="92" pos:column="22">||<pos:position pos:line="92" pos:column="24"/></operator> <name><name pos:line="92" pos:column="25">ce<pos:position pos:line="92" pos:column="27"/></name><operator pos:line="92" pos:column="27">-&gt;<pos:position pos:line="92" pos:column="32"/></operator><name pos:line="92" pos:column="29">ce_mode<pos:position pos:line="92" pos:column="36"/></name></name> <operator pos:line="92" pos:column="37">!=<pos:position pos:line="92" pos:column="39"/></operator> <call><name pos:line="92" pos:column="40">create_ce_mode<pos:position pos:line="92" pos:column="54"/></name><argument_list pos:line="92" pos:column="54">(<argument><expr><name pos:line="92" pos:column="55">mode<pos:position pos:line="92" pos:column="59"/></name></expr></argument>)<pos:position pos:line="92" pos:column="60"/></argument_list></call>
		     <operator pos:line="93" pos:column="22">||<pos:position pos:line="93" pos:column="24"/></operator> <call><name pos:line="93" pos:column="25">hashcmp<pos:position pos:line="93" pos:column="32"/></name><argument_list pos:line="93" pos:column="32">(<argument><expr><name><name pos:line="93" pos:column="33">ce<pos:position pos:line="93" pos:column="35"/></name><operator pos:line="93" pos:column="35">-&gt;<pos:position pos:line="93" pos:column="40"/></operator><name pos:line="93" pos:column="37">sha1<pos:position pos:line="93" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="43">sha1<pos:position pos:line="93" pos:column="47"/></name></expr></argument>)<pos:position pos:line="93" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="93" pos:column="49"/></condition><then pos:line="93" pos:column="49">
			<block type="pseudo"><expr_stmt><expr><name pos:line="94" pos:column="25">staged_changes<pos:position pos:line="94" pos:column="39"/></name> <operator pos:line="94" pos:column="40">=<pos:position pos:line="94" pos:column="41"/></operator> <literal type="number" pos:line="94" pos:column="42">1<pos:position pos:line="94" pos:column="43"/></literal></expr>;<pos:position pos:line="94" pos:column="44"/></expr_stmt></block></then></if>

		<comment type="block" pos:line="96" pos:column="17">/*
		 * If the index does not match the file in the work
		 * tree and if it does not match the HEAD commit
		 * either, (1) "git rm" without --cached definitely
		 * will lose information; (2) "git rm --cached" will
		 * lose information unless it is about removing an
		 * "intent to add" entry.
		 */</comment>
		<if pos:line="104" pos:column="17">if <condition pos:line="104" pos:column="20">(<expr><name pos:line="104" pos:column="21">local_changes<pos:position pos:line="104" pos:column="34"/></name> <operator pos:line="104" pos:column="35">&amp;&amp;<pos:position pos:line="104" pos:column="45"/></operator> <name pos:line="104" pos:column="38">staged_changes<pos:position pos:line="104" pos:column="52"/></name></expr>)<pos:position pos:line="104" pos:column="53"/></condition><then pos:line="104" pos:column="53"> <block pos:line="104" pos:column="54">{
			<if pos:line="105" pos:column="25">if <condition pos:line="105" pos:column="28">(<expr><operator pos:line="105" pos:column="29">!<pos:position pos:line="105" pos:column="30"/></operator><name pos:line="105" pos:column="30">index_only<pos:position pos:line="105" pos:column="40"/></name> <operator pos:line="105" pos:column="41">||<pos:position pos:line="105" pos:column="43"/></operator> <operator pos:line="105" pos:column="44">!<pos:position pos:line="105" pos:column="45"/></operator><call><name pos:line="105" pos:column="45">ce_intent_to_add<pos:position pos:line="105" pos:column="61"/></name><argument_list pos:line="105" pos:column="61">(<argument><expr><name pos:line="105" pos:column="62">ce<pos:position pos:line="105" pos:column="64"/></name></expr></argument>)<pos:position pos:line="105" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="105" pos:column="66"/></condition><then pos:line="105" pos:column="66">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="106" pos:column="33">string_list_append<pos:position pos:line="106" pos:column="51"/></name><argument_list pos:line="106" pos:column="51">(<argument><expr><operator pos:line="106" pos:column="52">&amp;<pos:position pos:line="106" pos:column="57"/></operator><name pos:line="106" pos:column="53">files_staged<pos:position pos:line="106" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="67">name<pos:position pos:line="106" pos:column="71"/></name></expr></argument>)<pos:position pos:line="106" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="73"/></expr_stmt></block></then></if>
		}<pos:position pos:line="107" pos:column="18"/></block></then>
		<elseif pos:line="108" pos:column="17">else <if pos:line="108" pos:column="22">if <condition pos:line="108" pos:column="25">(<expr><operator pos:line="108" pos:column="26">!<pos:position pos:line="108" pos:column="27"/></operator><name pos:line="108" pos:column="27">index_only<pos:position pos:line="108" pos:column="37"/></name></expr>)<pos:position pos:line="108" pos:column="38"/></condition><then pos:line="108" pos:column="38"> <block pos:line="108" pos:column="39">{
			<if pos:line="109" pos:column="25">if <condition pos:line="109" pos:column="28">(<expr><name pos:line="109" pos:column="29">staged_changes<pos:position pos:line="109" pos:column="43"/></name></expr>)<pos:position pos:line="109" pos:column="44"/></condition><then pos:line="109" pos:column="44">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="110" pos:column="33">string_list_append<pos:position pos:line="110" pos:column="51"/></name><argument_list pos:line="110" pos:column="51">(<argument><expr><operator pos:line="110" pos:column="52">&amp;<pos:position pos:line="110" pos:column="57"/></operator><name pos:line="110" pos:column="53">files_cached<pos:position pos:line="110" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="67">name<pos:position pos:line="110" pos:column="71"/></name></expr></argument>)<pos:position pos:line="110" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="73"/></expr_stmt></block></then></if>
			<if pos:line="111" pos:column="25">if <condition pos:line="111" pos:column="28">(<expr><name pos:line="111" pos:column="29">local_changes<pos:position pos:line="111" pos:column="42"/></name></expr>)<pos:position pos:line="111" pos:column="43"/></condition><then pos:line="111" pos:column="43"> <block pos:line="111" pos:column="44">{
				<if pos:line="112" pos:column="33">if <condition pos:line="112" pos:column="36">(<expr><call><name pos:line="112" pos:column="37">S_ISGITLINK<pos:position pos:line="112" pos:column="48"/></name><argument_list pos:line="112" pos:column="48">(<argument><expr><name><name pos:line="112" pos:column="49">ce<pos:position pos:line="112" pos:column="51"/></name><operator pos:line="112" pos:column="51">-&gt;<pos:position pos:line="112" pos:column="56"/></operator><name pos:line="112" pos:column="53">ce_mode<pos:position pos:line="112" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="112" pos:column="61"/></argument_list></call> <operator pos:line="112" pos:column="62">&amp;&amp;<pos:position pos:line="112" pos:column="72"/></operator>
				    <operator pos:line="113" pos:column="37">!<pos:position pos:line="113" pos:column="38"/></operator><call><name pos:line="113" pos:column="38">submodule_uses_gitfile<pos:position pos:line="113" pos:column="60"/></name><argument_list pos:line="113" pos:column="60">(<argument><expr><name pos:line="113" pos:column="61">name<pos:position pos:line="113" pos:column="65"/></name></expr></argument>)<pos:position pos:line="113" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="113" pos:column="67"/></condition><then pos:line="113" pos:column="67">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="114" pos:column="41">string_list_append<pos:position pos:line="114" pos:column="59"/></name><argument_list pos:line="114" pos:column="59">(<argument><expr><operator pos:line="114" pos:column="60">&amp;<pos:position pos:line="114" pos:column="65"/></operator><name pos:line="114" pos:column="61">files_submodule<pos:position pos:line="114" pos:column="76"/></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="78">name<pos:position pos:line="114" pos:column="82"/></name></expr></argument>)<pos:position pos:line="114" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="84"/></expr_stmt></block></then>
				<else pos:line="115" pos:column="33">else
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="116" pos:column="41">string_list_append<pos:position pos:line="116" pos:column="59"/></name><argument_list pos:line="116" pos:column="59">(<argument><expr><operator pos:line="116" pos:column="60">&amp;<pos:position pos:line="116" pos:column="65"/></operator><name pos:line="116" pos:column="61">files_local<pos:position pos:line="116" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="116" pos:column="74">name<pos:position pos:line="116" pos:column="78"/></name></expr></argument>)<pos:position pos:line="116" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="80"/></expr_stmt></block></else></if>
			}<pos:position pos:line="117" pos:column="26"/></block></then></if>
		}<pos:position pos:line="118" pos:column="18"/></block></then></if></elseif></if>
	}<pos:position pos:line="119" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="120" pos:column="9">print_error_files<pos:position pos:line="120" pos:column="26"/></name><argument_list pos:line="120" pos:column="26">(<argument><expr><operator pos:line="120" pos:column="27">&amp;<pos:position pos:line="120" pos:column="32"/></operator><name pos:line="120" pos:column="28">files_staged<pos:position pos:line="120" pos:column="40"/></name></expr></argument>,
			  <argument><expr><call><name pos:line="121" pos:column="27">Q_<pos:position pos:line="121" pos:column="29"/></name><argument_list pos:line="121" pos:column="29">(<argument><expr><literal type="string" pos:line="121" pos:column="30">"the following file has staged content different "<pos:position pos:line="121" pos:column="80"/></literal>
			     <literal type="string" pos:line="122" pos:column="30">"from both the\nfile and the HEAD:"<pos:position pos:line="122" pos:column="65"/></literal></expr></argument>,
			     <argument><expr><literal type="string" pos:line="123" pos:column="30">"the following files have staged content different"<pos:position pos:line="123" pos:column="81"/></literal>
			     <literal type="string" pos:line="124" pos:column="30">" from both the\nfile and the HEAD:"<pos:position pos:line="124" pos:column="66"/></literal></expr></argument>,
			     <argument><expr><name><name pos:line="125" pos:column="30">files_staged<pos:position pos:line="125" pos:column="42"/></name><operator pos:line="125" pos:column="42">.<pos:position pos:line="125" pos:column="43"/></operator><name pos:line="125" pos:column="43">nr<pos:position pos:line="125" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="125" pos:column="46"/></argument_list></call></expr></argument>,
			  <argument><expr><call><name pos:line="126" pos:column="27">_<pos:position pos:line="126" pos:column="28"/></name><argument_list pos:line="126" pos:column="28">(<argument><expr><literal type="string" pos:line="126" pos:column="29">"\n(use -f to force removal)"<pos:position pos:line="126" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="126" pos:column="59"/></argument_list></call></expr></argument>,
			  <argument><expr><operator pos:line="127" pos:column="27">&amp;<pos:position pos:line="127" pos:column="32"/></operator><name pos:line="127" pos:column="28">errs<pos:position pos:line="127" pos:column="32"/></name></expr></argument>)<pos:position pos:line="127" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="128" pos:column="9">string_list_clear<pos:position pos:line="128" pos:column="26"/></name><argument_list pos:line="128" pos:column="26">(<argument><expr><operator pos:line="128" pos:column="27">&amp;<pos:position pos:line="128" pos:column="32"/></operator><name pos:line="128" pos:column="28">files_staged<pos:position pos:line="128" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="128" pos:column="42">0<pos:position pos:line="128" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="128" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="129" pos:column="9">print_error_files<pos:position pos:line="129" pos:column="26"/></name><argument_list pos:line="129" pos:column="26">(<argument><expr><operator pos:line="129" pos:column="27">&amp;<pos:position pos:line="129" pos:column="32"/></operator><name pos:line="129" pos:column="28">files_cached<pos:position pos:line="129" pos:column="40"/></name></expr></argument>,
			  <argument><expr><call><name pos:line="130" pos:column="27">Q_<pos:position pos:line="130" pos:column="29"/></name><argument_list pos:line="130" pos:column="29">(<argument><expr><literal type="string" pos:line="130" pos:column="30">"the following file has changes "<pos:position pos:line="130" pos:column="63"/></literal>
			     <literal type="string" pos:line="131" pos:column="30">"staged in the index:"<pos:position pos:line="131" pos:column="52"/></literal></expr></argument>,
			     <argument><expr><literal type="string" pos:line="132" pos:column="30">"the following files have changes "<pos:position pos:line="132" pos:column="65"/></literal>
			     <literal type="string" pos:line="133" pos:column="30">"staged in the index:"<pos:position pos:line="133" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="133" pos:column="54">files_cached<pos:position pos:line="133" pos:column="66"/></name><operator pos:line="133" pos:column="66">.<pos:position pos:line="133" pos:column="67"/></operator><name pos:line="133" pos:column="67">nr<pos:position pos:line="133" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="133" pos:column="70"/></argument_list></call></expr></argument>,
			  <argument><expr><call><name pos:line="134" pos:column="27">_<pos:position pos:line="134" pos:column="28"/></name><argument_list pos:line="134" pos:column="28">(<argument><expr><literal type="string" pos:line="134" pos:column="29">"\n(use --cached to keep the file,"<pos:position pos:line="134" pos:column="64"/></literal>
			    <literal type="string" pos:line="135" pos:column="29">" or -f to force removal)"<pos:position pos:line="135" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="135" pos:column="56"/></argument_list></call></expr></argument>,
			  <argument><expr><operator pos:line="136" pos:column="27">&amp;<pos:position pos:line="136" pos:column="32"/></operator><name pos:line="136" pos:column="28">errs<pos:position pos:line="136" pos:column="32"/></name></expr></argument>)<pos:position pos:line="136" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="137" pos:column="9">string_list_clear<pos:position pos:line="137" pos:column="26"/></name><argument_list pos:line="137" pos:column="26">(<argument><expr><operator pos:line="137" pos:column="27">&amp;<pos:position pos:line="137" pos:column="32"/></operator><name pos:line="137" pos:column="28">files_cached<pos:position pos:line="137" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="137" pos:column="42">0<pos:position pos:line="137" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="137" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="45"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="139" pos:column="9">error_removing_concrete_submodules<pos:position pos:line="139" pos:column="43"/></name><argument_list pos:line="139" pos:column="43">(<argument><expr><operator pos:line="139" pos:column="44">&amp;<pos:position pos:line="139" pos:column="49"/></operator><name pos:line="139" pos:column="45">files_submodule<pos:position pos:line="139" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="139" pos:column="62">&amp;<pos:position pos:line="139" pos:column="67"/></operator><name pos:line="139" pos:column="63">errs<pos:position pos:line="139" pos:column="67"/></name></expr></argument>)<pos:position pos:line="139" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="69"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="141" pos:column="9">print_error_files<pos:position pos:line="141" pos:column="26"/></name><argument_list pos:line="141" pos:column="26">(<argument><expr><operator pos:line="141" pos:column="27">&amp;<pos:position pos:line="141" pos:column="32"/></operator><name pos:line="141" pos:column="28">files_local<pos:position pos:line="141" pos:column="39"/></name></expr></argument>,
			  <argument><expr><call><name pos:line="142" pos:column="27">Q_<pos:position pos:line="142" pos:column="29"/></name><argument_list pos:line="142" pos:column="29">(<argument><expr><literal type="string" pos:line="142" pos:column="30">"the following file has local modifications:"<pos:position pos:line="142" pos:column="75"/></literal></expr></argument>,
			     <argument><expr><literal type="string" pos:line="143" pos:column="30">"the following files have local modifications:"<pos:position pos:line="143" pos:column="77"/></literal></expr></argument>,
			     <argument><expr><name><name pos:line="144" pos:column="30">files_local<pos:position pos:line="144" pos:column="41"/></name><operator pos:line="144" pos:column="41">.<pos:position pos:line="144" pos:column="42"/></operator><name pos:line="144" pos:column="42">nr<pos:position pos:line="144" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="144" pos:column="45"/></argument_list></call></expr></argument>,
			  <argument><expr><call><name pos:line="145" pos:column="27">_<pos:position pos:line="145" pos:column="28"/></name><argument_list pos:line="145" pos:column="28">(<argument><expr><literal type="string" pos:line="145" pos:column="29">"\n(use --cached to keep the file,"<pos:position pos:line="145" pos:column="64"/></literal>
			    <literal type="string" pos:line="146" pos:column="29">" or -f to force removal)"<pos:position pos:line="146" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="146" pos:column="56"/></argument_list></call></expr></argument>,
			  <argument><expr><operator pos:line="147" pos:column="27">&amp;<pos:position pos:line="147" pos:column="32"/></operator><name pos:line="147" pos:column="28">errs<pos:position pos:line="147" pos:column="32"/></name></expr></argument>)<pos:position pos:line="147" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="148" pos:column="9">string_list_clear<pos:position pos:line="148" pos:column="26"/></name><argument_list pos:line="148" pos:column="26">(<argument><expr><operator pos:line="148" pos:column="27">&amp;<pos:position pos:line="148" pos:column="32"/></operator><name pos:line="148" pos:column="28">files_local<pos:position pos:line="148" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="148" pos:column="41">0<pos:position pos:line="148" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="148" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="44"/></expr_stmt>

	<return pos:line="150" pos:column="9">return <expr><name pos:line="150" pos:column="16">errs<pos:position pos:line="150" pos:column="20"/></name></expr>;<pos:position pos:line="150" pos:column="21"/></return>
}<pos:position pos:line="151" pos:column="2"/></block></function></unit>

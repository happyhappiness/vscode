<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5180_git-2.8.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_cat_file<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name pos:line="1" pos:column="18">int<pos:position pos:line="1" pos:column="21"/></name></type> <name pos:line="1" pos:column="22">argc<pos:position pos:line="1" pos:column="26"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier><modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">argv<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="47">const<pos:position pos:line="1" pos:column="52"/></specifier> <name pos:line="1" pos:column="53">char<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">prefix<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">opt<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><literal type="number" pos:line="3" pos:column="19">0<pos:position pos:line="3" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">exp_type<pos:position pos:line="4" pos:column="29"/></name> <init pos:line="4" pos:column="30">= <expr><name pos:line="4" pos:column="32">NULL<pos:position pos:line="4" pos:column="36"/></name></expr></init></decl>, <modifier pos:line="4" pos:column="38">*<pos:position pos:line="4" pos:column="39"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="39">obj_name<pos:position pos:line="4" pos:column="47"/></name> <init pos:line="4" pos:column="48">= <expr><name pos:line="4" pos:column="50">NULL<pos:position pos:line="4" pos:column="54"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="55"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">batch_options<pos:position pos:line="5" pos:column="29"/></name></name></type> <name pos:line="5" pos:column="30">batch<pos:position pos:line="5" pos:column="35"/></name> <init pos:line="5" pos:column="36">= <expr><block pos:line="5" pos:column="38">{<expr><literal type="number" pos:line="5" pos:column="39">0<pos:position pos:line="5" pos:column="40"/></literal></expr>}<pos:position pos:line="5" pos:column="41"/></block></expr></init></decl>;<pos:position pos:line="5" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">unknown_type<pos:position pos:line="6" pos:column="25"/></name> <init pos:line="6" pos:column="26">= <expr><literal type="number" pos:line="6" pos:column="28">0<pos:position pos:line="6" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>

	<decl_stmt><decl><type><specifier pos:line="8" pos:column="9">const<pos:position pos:line="8" pos:column="14"/></specifier> <name><name pos:line="8" pos:column="15">struct<pos:position pos:line="8" pos:column="21"/></name> <name pos:line="8" pos:column="22">option<pos:position pos:line="8" pos:column="28"/></name></name></type> <name><name pos:line="8" pos:column="29">options<pos:position pos:line="8" pos:column="36"/></name><index pos:line="8" pos:column="36">[]<pos:position pos:line="8" pos:column="38"/></index></name> <init pos:line="8" pos:column="39">= <expr><block pos:line="8" pos:column="41">{
		<expr><call><name pos:line="9" pos:column="17">OPT_GROUP<pos:position pos:line="9" pos:column="26"/></name><argument_list pos:line="9" pos:column="26">(<argument><expr><call><name pos:line="9" pos:column="27">N_<pos:position pos:line="9" pos:column="29"/></name><argument_list pos:line="9" pos:column="29">(<argument><expr><literal type="string" pos:line="9" pos:column="30">"&lt;type&gt; can be one of: blob, tree, commit, tag"<pos:position pos:line="9" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="79"/></argument_list></call></expr>,
		<expr><call><name pos:line="10" pos:column="17">OPT_CMDMODE<pos:position pos:line="10" pos:column="28"/></name><argument_list pos:line="10" pos:column="28">(<argument><expr><literal type="char" pos:line="10" pos:column="29">'t'<pos:position pos:line="10" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="34">NULL<pos:position pos:line="10" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="40">&amp;<pos:position pos:line="10" pos:column="45"/></operator><name pos:line="10" pos:column="41">opt<pos:position pos:line="10" pos:column="44"/></name></expr></argument>, <argument><expr><call><name pos:line="10" pos:column="46">N_<pos:position pos:line="10" pos:column="48"/></name><argument_list pos:line="10" pos:column="48">(<argument><expr><literal type="string" pos:line="10" pos:column="49">"show object type"<pos:position pos:line="10" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="68"/></argument_list></call></expr></argument>, <argument><expr><literal type="char" pos:line="10" pos:column="70">'t'<pos:position pos:line="10" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="74"/></argument_list></call></expr>,
		<expr><call><name pos:line="11" pos:column="17">OPT_CMDMODE<pos:position pos:line="11" pos:column="28"/></name><argument_list pos:line="11" pos:column="28">(<argument><expr><literal type="char" pos:line="11" pos:column="29">'s'<pos:position pos:line="11" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="34">NULL<pos:position pos:line="11" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="40">&amp;<pos:position pos:line="11" pos:column="45"/></operator><name pos:line="11" pos:column="41">opt<pos:position pos:line="11" pos:column="44"/></name></expr></argument>, <argument><expr><call><name pos:line="11" pos:column="46">N_<pos:position pos:line="11" pos:column="48"/></name><argument_list pos:line="11" pos:column="48">(<argument><expr><literal type="string" pos:line="11" pos:column="49">"show object size"<pos:position pos:line="11" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="68"/></argument_list></call></expr></argument>, <argument><expr><literal type="char" pos:line="11" pos:column="70">'s'<pos:position pos:line="11" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="74"/></argument_list></call></expr>,
		<expr><call><name pos:line="12" pos:column="17">OPT_CMDMODE<pos:position pos:line="12" pos:column="28"/></name><argument_list pos:line="12" pos:column="28">(<argument><expr><literal type="char" pos:line="12" pos:column="29">'e'<pos:position pos:line="12" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="34">NULL<pos:position pos:line="12" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="40">&amp;<pos:position pos:line="12" pos:column="45"/></operator><name pos:line="12" pos:column="41">opt<pos:position pos:line="12" pos:column="44"/></name></expr></argument>,
			    <argument><expr><call><name pos:line="13" pos:column="29">N_<pos:position pos:line="13" pos:column="31"/></name><argument_list pos:line="13" pos:column="31">(<argument><expr><literal type="string" pos:line="13" pos:column="32">"exit with zero when there's no error"<pos:position pos:line="13" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="71"/></argument_list></call></expr></argument>, <argument><expr><literal type="char" pos:line="13" pos:column="73">'e'<pos:position pos:line="13" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="77"/></argument_list></call></expr>,
		<expr><call><name pos:line="14" pos:column="17">OPT_CMDMODE<pos:position pos:line="14" pos:column="28"/></name><argument_list pos:line="14" pos:column="28">(<argument><expr><literal type="char" pos:line="14" pos:column="29">'p'<pos:position pos:line="14" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="34">NULL<pos:position pos:line="14" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="40">&amp;<pos:position pos:line="14" pos:column="45"/></operator><name pos:line="14" pos:column="41">opt<pos:position pos:line="14" pos:column="44"/></name></expr></argument>, <argument><expr><call><name pos:line="14" pos:column="46">N_<pos:position pos:line="14" pos:column="48"/></name><argument_list pos:line="14" pos:column="48">(<argument><expr><literal type="string" pos:line="14" pos:column="49">"pretty-print object's content"<pos:position pos:line="14" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="81"/></argument_list></call></expr></argument>, <argument><expr><literal type="char" pos:line="14" pos:column="83">'p'<pos:position pos:line="14" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="87"/></argument_list></call></expr>,
		<expr><call><name pos:line="15" pos:column="17">OPT_CMDMODE<pos:position pos:line="15" pos:column="28"/></name><argument_list pos:line="15" pos:column="28">(<argument><expr><literal type="number" pos:line="15" pos:column="29">0<pos:position pos:line="15" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="32">"textconv"<pos:position pos:line="15" pos:column="42"/></literal></expr></argument>, <argument><expr><operator pos:line="15" pos:column="44">&amp;<pos:position pos:line="15" pos:column="49"/></operator><name pos:line="15" pos:column="45">opt<pos:position pos:line="15" pos:column="48"/></name></expr></argument>,
			    <argument><expr><call><name pos:line="16" pos:column="29">N_<pos:position pos:line="16" pos:column="31"/></name><argument_list pos:line="16" pos:column="31">(<argument><expr><literal type="string" pos:line="16" pos:column="32">"for blob objects, run textconv on object's content"<pos:position pos:line="16" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="85"/></argument_list></call></expr></argument>, <argument><expr><literal type="char" pos:line="16" pos:column="87">'c'<pos:position pos:line="16" pos:column="90"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="91"/></argument_list></call></expr>,
		<expr><call><name pos:line="17" pos:column="17">OPT_BOOL<pos:position pos:line="17" pos:column="25"/></name><argument_list pos:line="17" pos:column="25">(<argument><expr><literal type="number" pos:line="17" pos:column="26">0<pos:position pos:line="17" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="29">"allow-unknown-type"<pos:position pos:line="17" pos:column="49"/></literal></expr></argument>, <argument><expr><operator pos:line="17" pos:column="51">&amp;<pos:position pos:line="17" pos:column="56"/></operator><name pos:line="17" pos:column="52">unknown_type<pos:position pos:line="17" pos:column="64"/></name></expr></argument>,
			  <argument><expr><call><name pos:line="18" pos:column="27">N_<pos:position pos:line="18" pos:column="29"/></name><argument_list pos:line="18" pos:column="29">(<argument><expr><literal type="string" pos:line="18" pos:column="30">"allow -s and -t to work with broken/corrupt objects"<pos:position pos:line="18" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="84"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="85"/></argument_list></call></expr>,
		<expr><call><name pos:line="19" pos:column="17">OPT_BOOL<pos:position pos:line="19" pos:column="25"/></name><argument_list pos:line="19" pos:column="25">(<argument><expr><literal type="number" pos:line="19" pos:column="26">0<pos:position pos:line="19" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="29">"buffer"<pos:position pos:line="19" pos:column="37"/></literal></expr></argument>, <argument><expr><operator pos:line="19" pos:column="39">&amp;<pos:position pos:line="19" pos:column="44"/></operator><name><name pos:line="19" pos:column="40">batch<pos:position pos:line="19" pos:column="45"/></name><operator pos:line="19" pos:column="45">.<pos:position pos:line="19" pos:column="46"/></operator><name pos:line="19" pos:column="46">buffer_output<pos:position pos:line="19" pos:column="59"/></name></name></expr></argument>, <argument><expr><call><name pos:line="19" pos:column="61">N_<pos:position pos:line="19" pos:column="63"/></name><argument_list pos:line="19" pos:column="63">(<argument><expr><literal type="string" pos:line="19" pos:column="64">"buffer --batch output"<pos:position pos:line="19" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="88"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="89"/></argument_list></call></expr>,
		<expr><block pos:line="20" pos:column="17">{ <expr><name pos:line="20" pos:column="19">OPTION_CALLBACK<pos:position pos:line="20" pos:column="34"/></name></expr>, <expr><literal type="number" pos:line="20" pos:column="36">0<pos:position pos:line="20" pos:column="37"/></literal></expr>, <expr><literal type="string" pos:line="20" pos:column="39">"batch"<pos:position pos:line="20" pos:column="46"/></literal></expr>, <expr><operator pos:line="20" pos:column="48">&amp;<pos:position pos:line="20" pos:column="53"/></operator><name pos:line="20" pos:column="49">batch<pos:position pos:line="20" pos:column="54"/></name></expr>, <expr><literal type="string" pos:line="20" pos:column="56">"format"<pos:position pos:line="20" pos:column="64"/></literal></expr>,
			<expr><call><name pos:line="21" pos:column="25">N_<pos:position pos:line="21" pos:column="27"/></name><argument_list pos:line="21" pos:column="27">(<argument><expr><literal type="string" pos:line="21" pos:column="28">"show info and content of objects fed from the standard input"<pos:position pos:line="21" pos:column="90"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="91"/></argument_list></call></expr>,
			<expr><name pos:line="22" pos:column="25">PARSE_OPT_OPTARG<pos:position pos:line="22" pos:column="41"/></name></expr>, <expr><name pos:line="22" pos:column="43">batch_option_callback<pos:position pos:line="22" pos:column="64"/></name></expr> }<pos:position pos:line="22" pos:column="66"/></block></expr>,
		<expr><block pos:line="23" pos:column="17">{ <expr><name pos:line="23" pos:column="19">OPTION_CALLBACK<pos:position pos:line="23" pos:column="34"/></name></expr>, <expr><literal type="number" pos:line="23" pos:column="36">0<pos:position pos:line="23" pos:column="37"/></literal></expr>, <expr><literal type="string" pos:line="23" pos:column="39">"batch-check"<pos:position pos:line="23" pos:column="52"/></literal></expr>, <expr><operator pos:line="23" pos:column="54">&amp;<pos:position pos:line="23" pos:column="59"/></operator><name pos:line="23" pos:column="55">batch<pos:position pos:line="23" pos:column="60"/></name></expr>, <expr><literal type="string" pos:line="23" pos:column="62">"format"<pos:position pos:line="23" pos:column="70"/></literal></expr>,
			<expr><call><name pos:line="24" pos:column="25">N_<pos:position pos:line="24" pos:column="27"/></name><argument_list pos:line="24" pos:column="27">(<argument><expr><literal type="string" pos:line="24" pos:column="28">"show info about objects fed from the standard input"<pos:position pos:line="24" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="82"/></argument_list></call></expr>,
			<expr><name pos:line="25" pos:column="25">PARSE_OPT_OPTARG<pos:position pos:line="25" pos:column="41"/></name></expr>, <expr><name pos:line="25" pos:column="43">batch_option_callback<pos:position pos:line="25" pos:column="64"/></name></expr> }<pos:position pos:line="25" pos:column="66"/></block></expr>,
		<expr><call><name pos:line="26" pos:column="17">OPT_BOOL<pos:position pos:line="26" pos:column="25"/></name><argument_list pos:line="26" pos:column="25">(<argument><expr><literal type="number" pos:line="26" pos:column="26">0<pos:position pos:line="26" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="29">"follow-symlinks"<pos:position pos:line="26" pos:column="46"/></literal></expr></argument>, <argument><expr><operator pos:line="26" pos:column="48">&amp;<pos:position pos:line="26" pos:column="53"/></operator><name><name pos:line="26" pos:column="49">batch<pos:position pos:line="26" pos:column="54"/></name><operator pos:line="26" pos:column="54">.<pos:position pos:line="26" pos:column="55"/></operator><name pos:line="26" pos:column="55">follow_symlinks<pos:position pos:line="26" pos:column="70"/></name></name></expr></argument>,
			 <argument><expr><call><name pos:line="27" pos:column="26">N_<pos:position pos:line="27" pos:column="28"/></name><argument_list pos:line="27" pos:column="28">(<argument><expr><literal type="string" pos:line="27" pos:column="29">"follow in-tree symlinks (used with --batch or --batch-check)"<pos:position pos:line="27" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="92"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="93"/></argument_list></call></expr>,
		<expr><call><name pos:line="28" pos:column="17">OPT_BOOL<pos:position pos:line="28" pos:column="25"/></name><argument_list pos:line="28" pos:column="25">(<argument><expr><literal type="number" pos:line="28" pos:column="26">0<pos:position pos:line="28" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="29">"batch-all-objects"<pos:position pos:line="28" pos:column="48"/></literal></expr></argument>, <argument><expr><operator pos:line="28" pos:column="50">&amp;<pos:position pos:line="28" pos:column="55"/></operator><name><name pos:line="28" pos:column="51">batch<pos:position pos:line="28" pos:column="56"/></name><operator pos:line="28" pos:column="56">.<pos:position pos:line="28" pos:column="57"/></operator><name pos:line="28" pos:column="57">all_objects<pos:position pos:line="28" pos:column="68"/></name></name></expr></argument>,
			 <argument><expr><call><name pos:line="29" pos:column="26">N_<pos:position pos:line="29" pos:column="28"/></name><argument_list pos:line="29" pos:column="28">(<argument><expr><literal type="string" pos:line="29" pos:column="29">"show all objects with --batch or --batch-check"<pos:position pos:line="29" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="79"/></argument_list></call></expr>,
		<macro><name pos:line="30" pos:column="17">OPT_END<pos:position pos:line="30" pos:column="24"/></name><argument_list pos:line="30" pos:column="24">()<pos:position pos:line="30" pos:column="26"/></argument_list></macro>
	}<pos:position pos:line="31" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="31" pos:column="11"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="33" pos:column="9">git_config<pos:position pos:line="33" pos:column="19"/></name><argument_list pos:line="33" pos:column="19">(<argument><expr><name pos:line="33" pos:column="20">git_cat_file_config<pos:position pos:line="33" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="41">NULL<pos:position pos:line="33" pos:column="45"/></name></expr></argument>)<pos:position pos:line="33" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="47"/></expr_stmt>

	<expr_stmt><expr><name pos:line="35" pos:column="9">argc<pos:position pos:line="35" pos:column="13"/></name> <operator pos:line="35" pos:column="14">=<pos:position pos:line="35" pos:column="15"/></operator> <call><name pos:line="35" pos:column="16">parse_options<pos:position pos:line="35" pos:column="29"/></name><argument_list pos:line="35" pos:column="29">(<argument><expr><name pos:line="35" pos:column="30">argc<pos:position pos:line="35" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="36">argv<pos:position pos:line="35" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="42">prefix<pos:position pos:line="35" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="50">options<pos:position pos:line="35" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="59">cat_file_usage<pos:position pos:line="35" pos:column="73"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="75">0<pos:position pos:line="35" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="78"/></expr_stmt>

	<if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><name pos:line="37" pos:column="13">opt<pos:position pos:line="37" pos:column="16"/></name></expr>)<pos:position pos:line="37" pos:column="17"/></condition><then pos:line="37" pos:column="17"> <block pos:line="37" pos:column="18">{
		<if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><name pos:line="38" pos:column="21">argc<pos:position pos:line="38" pos:column="25"/></name> <operator pos:line="38" pos:column="26">==<pos:position pos:line="38" pos:column="28"/></operator> <literal type="number" pos:line="38" pos:column="29">1<pos:position pos:line="38" pos:column="30"/></literal></expr>)<pos:position pos:line="38" pos:column="31"/></condition><then pos:line="38" pos:column="31">
			<block type="pseudo"><expr_stmt><expr><name pos:line="39" pos:column="25">obj_name<pos:position pos:line="39" pos:column="33"/></name> <operator pos:line="39" pos:column="34">=<pos:position pos:line="39" pos:column="35"/></operator> <name><name pos:line="39" pos:column="36">argv<pos:position pos:line="39" pos:column="40"/></name><index pos:line="39" pos:column="40">[<expr><literal type="number" pos:line="39" pos:column="41">0<pos:position pos:line="39" pos:column="42"/></literal></expr>]<pos:position pos:line="39" pos:column="43"/></index></name></expr>;<pos:position pos:line="39" pos:column="44"/></expr_stmt></block></then>
		<else pos:line="40" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="41" pos:column="25">usage_with_options<pos:position pos:line="41" pos:column="43"/></name><argument_list pos:line="41" pos:column="43">(<argument><expr><name pos:line="41" pos:column="44">cat_file_usage<pos:position pos:line="41" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="60">options<pos:position pos:line="41" pos:column="67"/></name></expr></argument>)<pos:position pos:line="41" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="69"/></expr_stmt></block></else></if>
	}<pos:position pos:line="42" pos:column="10"/></block></then></if>
	<if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><operator pos:line="43" pos:column="13">!<pos:position pos:line="43" pos:column="14"/></operator><name pos:line="43" pos:column="14">opt<pos:position pos:line="43" pos:column="17"/></name> <operator pos:line="43" pos:column="18">&amp;&amp;<pos:position pos:line="43" pos:column="28"/></operator> <operator pos:line="43" pos:column="21">!<pos:position pos:line="43" pos:column="22"/></operator><name><name pos:line="43" pos:column="22">batch<pos:position pos:line="43" pos:column="27"/></name><operator pos:line="43" pos:column="27">.<pos:position pos:line="43" pos:column="28"/></operator><name pos:line="43" pos:column="28">enabled<pos:position pos:line="43" pos:column="35"/></name></name></expr>)<pos:position pos:line="43" pos:column="36"/></condition><then pos:line="43" pos:column="36"> <block pos:line="43" pos:column="37">{
		<if pos:line="44" pos:column="17">if <condition pos:line="44" pos:column="20">(<expr><name pos:line="44" pos:column="21">argc<pos:position pos:line="44" pos:column="25"/></name> <operator pos:line="44" pos:column="26">==<pos:position pos:line="44" pos:column="28"/></operator> <literal type="number" pos:line="44" pos:column="29">2<pos:position pos:line="44" pos:column="30"/></literal></expr>)<pos:position pos:line="44" pos:column="31"/></condition><then pos:line="44" pos:column="31"> <block pos:line="44" pos:column="32">{
			<expr_stmt><expr><name pos:line="45" pos:column="25">exp_type<pos:position pos:line="45" pos:column="33"/></name> <operator pos:line="45" pos:column="34">=<pos:position pos:line="45" pos:column="35"/></operator> <name><name pos:line="45" pos:column="36">argv<pos:position pos:line="45" pos:column="40"/></name><index pos:line="45" pos:column="40">[<expr><literal type="number" pos:line="45" pos:column="41">0<pos:position pos:line="45" pos:column="42"/></literal></expr>]<pos:position pos:line="45" pos:column="43"/></index></name></expr>;<pos:position pos:line="45" pos:column="44"/></expr_stmt>
			<expr_stmt><expr><name pos:line="46" pos:column="25">obj_name<pos:position pos:line="46" pos:column="33"/></name> <operator pos:line="46" pos:column="34">=<pos:position pos:line="46" pos:column="35"/></operator> <name><name pos:line="46" pos:column="36">argv<pos:position pos:line="46" pos:column="40"/></name><index pos:line="46" pos:column="40">[<expr><literal type="number" pos:line="46" pos:column="41">1<pos:position pos:line="46" pos:column="42"/></literal></expr>]<pos:position pos:line="46" pos:column="43"/></index></name></expr>;<pos:position pos:line="46" pos:column="44"/></expr_stmt>
		}<pos:position pos:line="47" pos:column="18"/></block></then> <else pos:line="47" pos:column="19">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="48" pos:column="25">usage_with_options<pos:position pos:line="48" pos:column="43"/></name><argument_list pos:line="48" pos:column="43">(<argument><expr><name pos:line="48" pos:column="44">cat_file_usage<pos:position pos:line="48" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="60">options<pos:position pos:line="48" pos:column="67"/></name></expr></argument>)<pos:position pos:line="48" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="69"/></expr_stmt></block></else></if>
	}<pos:position pos:line="49" pos:column="10"/></block></then></if>
	<if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><name><name pos:line="50" pos:column="13">batch<pos:position pos:line="50" pos:column="18"/></name><operator pos:line="50" pos:column="18">.<pos:position pos:line="50" pos:column="19"/></operator><name pos:line="50" pos:column="19">enabled<pos:position pos:line="50" pos:column="26"/></name></name> <operator pos:line="50" pos:column="27">&amp;&amp;<pos:position pos:line="50" pos:column="37"/></operator> <operator pos:line="50" pos:column="30">(<pos:position pos:line="50" pos:column="31"/></operator><name pos:line="50" pos:column="31">opt<pos:position pos:line="50" pos:column="34"/></name> <operator pos:line="50" pos:column="35">||<pos:position pos:line="50" pos:column="37"/></operator> <name pos:line="50" pos:column="38">argc<pos:position pos:line="50" pos:column="42"/></name><operator pos:line="50" pos:column="42">)<pos:position pos:line="50" pos:column="43"/></operator></expr>)<pos:position pos:line="50" pos:column="44"/></condition><then pos:line="50" pos:column="44"> <block pos:line="50" pos:column="45">{
		<expr_stmt><expr><call><name pos:line="51" pos:column="17">usage_with_options<pos:position pos:line="51" pos:column="35"/></name><argument_list pos:line="51" pos:column="35">(<argument><expr><name pos:line="51" pos:column="36">cat_file_usage<pos:position pos:line="51" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="52">options<pos:position pos:line="51" pos:column="59"/></name></expr></argument>)<pos:position pos:line="51" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="61"/></expr_stmt>
	}<pos:position pos:line="52" pos:column="10"/></block></then></if>

	<if pos:line="54" pos:column="9">if <condition pos:line="54" pos:column="12">(<expr><operator pos:line="54" pos:column="13">(<pos:position pos:line="54" pos:column="14"/></operator><name><name pos:line="54" pos:column="14">batch<pos:position pos:line="54" pos:column="19"/></name><operator pos:line="54" pos:column="19">.<pos:position pos:line="54" pos:column="20"/></operator><name pos:line="54" pos:column="20">follow_symlinks<pos:position pos:line="54" pos:column="35"/></name></name> <operator pos:line="54" pos:column="36">||<pos:position pos:line="54" pos:column="38"/></operator> <name><name pos:line="54" pos:column="39">batch<pos:position pos:line="54" pos:column="44"/></name><operator pos:line="54" pos:column="44">.<pos:position pos:line="54" pos:column="45"/></operator><name pos:line="54" pos:column="45">all_objects<pos:position pos:line="54" pos:column="56"/></name></name><operator pos:line="54" pos:column="56">)<pos:position pos:line="54" pos:column="57"/></operator> <operator pos:line="54" pos:column="58">&amp;&amp;<pos:position pos:line="54" pos:column="68"/></operator> <operator pos:line="54" pos:column="61">!<pos:position pos:line="54" pos:column="62"/></operator><name><name pos:line="54" pos:column="62">batch<pos:position pos:line="54" pos:column="67"/></name><operator pos:line="54" pos:column="67">.<pos:position pos:line="54" pos:column="68"/></operator><name pos:line="54" pos:column="68">enabled<pos:position pos:line="54" pos:column="75"/></name></name></expr>)<pos:position pos:line="54" pos:column="76"/></condition><then pos:line="54" pos:column="76"> <block pos:line="54" pos:column="77">{
		<expr_stmt><expr><call><name pos:line="55" pos:column="17">usage_with_options<pos:position pos:line="55" pos:column="35"/></name><argument_list pos:line="55" pos:column="35">(<argument><expr><name pos:line="55" pos:column="36">cat_file_usage<pos:position pos:line="55" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="52">options<pos:position pos:line="55" pos:column="59"/></name></expr></argument>)<pos:position pos:line="55" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="61"/></expr_stmt>
	}<pos:position pos:line="56" pos:column="10"/></block></then></if>

	<if pos:line="58" pos:column="9">if <condition pos:line="58" pos:column="12">(<expr><name><name pos:line="58" pos:column="13">batch<pos:position pos:line="58" pos:column="18"/></name><operator pos:line="58" pos:column="18">.<pos:position pos:line="58" pos:column="19"/></operator><name pos:line="58" pos:column="19">enabled<pos:position pos:line="58" pos:column="26"/></name></name></expr>)<pos:position pos:line="58" pos:column="27"/></condition><then pos:line="58" pos:column="27">
		<block type="pseudo"><return pos:line="59" pos:column="17">return <expr><call><name pos:line="59" pos:column="24">batch_objects<pos:position pos:line="59" pos:column="37"/></name><argument_list pos:line="59" pos:column="37">(<argument><expr><operator pos:line="59" pos:column="38">&amp;<pos:position pos:line="59" pos:column="43"/></operator><name pos:line="59" pos:column="39">batch<pos:position pos:line="59" pos:column="44"/></name></expr></argument>)<pos:position pos:line="59" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="46"/></return></block></then></if>

	<if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><name pos:line="61" pos:column="13">unknown_type<pos:position pos:line="61" pos:column="25"/></name> <operator pos:line="61" pos:column="26">&amp;&amp;<pos:position pos:line="61" pos:column="36"/></operator> <name pos:line="61" pos:column="29">opt<pos:position pos:line="61" pos:column="32"/></name> <operator pos:line="61" pos:column="33">!=<pos:position pos:line="61" pos:column="35"/></operator> <literal type="char" pos:line="61" pos:column="36">'t'<pos:position pos:line="61" pos:column="39"/></literal> <operator pos:line="61" pos:column="40">&amp;&amp;<pos:position pos:line="61" pos:column="50"/></operator> <name pos:line="61" pos:column="43">opt<pos:position pos:line="61" pos:column="46"/></name> <operator pos:line="61" pos:column="47">!=<pos:position pos:line="61" pos:column="49"/></operator> <literal type="char" pos:line="61" pos:column="50">'s'<pos:position pos:line="61" pos:column="53"/></literal></expr>)<pos:position pos:line="61" pos:column="54"/></condition><then pos:line="61" pos:column="54">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="62" pos:column="17">die<pos:position pos:line="62" pos:column="20"/></name><argument_list pos:line="62" pos:column="20">(<argument><expr><literal type="string" pos:line="62" pos:column="21">"git cat-file --allow-unknown-type: use with -s or -t"<pos:position pos:line="62" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="77"/></expr_stmt></block></then></if>
	<return pos:line="63" pos:column="9">return <expr><call><name pos:line="63" pos:column="16">cat_one_file<pos:position pos:line="63" pos:column="28"/></name><argument_list pos:line="63" pos:column="28">(<argument><expr><name pos:line="63" pos:column="29">opt<pos:position pos:line="63" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="34">exp_type<pos:position pos:line="63" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="44">obj_name<pos:position pos:line="63" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="54">unknown_type<pos:position pos:line="63" pos:column="66"/></name></expr></argument>)<pos:position pos:line="63" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="68"/></return>
}<pos:position pos:line="64" pos:column="2"/></block></function></unit>

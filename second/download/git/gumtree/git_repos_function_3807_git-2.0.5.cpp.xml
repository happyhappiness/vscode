<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3807_git-2.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">pass_blame_to_parent<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name><name pos:line="1" pos:column="33">struct<pos:position pos:line="1" pos:column="39"/></name> <name pos:line="1" pos:column="40">scoreboard<pos:position pos:line="1" pos:column="50"/></name></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">sb<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>,
				<parameter><decl><type><name><name pos:line="2" pos:column="33">struct<pos:position pos:line="2" pos:column="39"/></name> <name pos:line="2" pos:column="40">origin<pos:position pos:line="2" pos:column="46"/></name></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">target<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>,
				<parameter><decl><type><name><name pos:line="3" pos:column="33">struct<pos:position pos:line="3" pos:column="39"/></name> <name pos:line="3" pos:column="40">origin<pos:position pos:line="3" pos:column="46"/></name></name> <modifier pos:line="3" pos:column="47">*<pos:position pos:line="3" pos:column="48"/></modifier></type><name pos:line="3" pos:column="48">parent<pos:position pos:line="3" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="55"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">last_in_target<pos:position pos:line="5" pos:column="27"/></name></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">mmfile_t<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">file_p<pos:position pos:line="6" pos:column="24"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="26">file_o<pos:position pos:line="6" pos:column="32"/></name></decl>;<pos:position pos:line="6" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">blame_chunk_cb_data<pos:position pos:line="7" pos:column="35"/></name></name></type> <name pos:line="7" pos:column="36">d<pos:position pos:line="7" pos:column="37"/></name></decl>;<pos:position pos:line="7" pos:column="38"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="9" pos:column="9">memset<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><operator pos:line="9" pos:column="16">&amp;<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="17">d<pos:position pos:line="9" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="20">0<pos:position pos:line="9" pos:column="21"/></literal></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="23">sizeof<argument_list pos:line="9" pos:column="29">(<argument><expr><name pos:line="9" pos:column="30">d<pos:position pos:line="9" pos:column="31"/></name></expr></argument>)<pos:position pos:line="9" pos:column="32"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="10" pos:column="9">d<pos:position pos:line="10" pos:column="10"/></name><operator pos:line="10" pos:column="10">.<pos:position pos:line="10" pos:column="11"/></operator><name pos:line="10" pos:column="11">sb<pos:position pos:line="10" pos:column="13"/></name></name> <operator pos:line="10" pos:column="14">=<pos:position pos:line="10" pos:column="15"/></operator> <name pos:line="10" pos:column="16">sb<pos:position pos:line="10" pos:column="18"/></name></expr>;<pos:position pos:line="10" pos:column="19"/></expr_stmt> <expr_stmt><expr><name><name pos:line="10" pos:column="20">d<pos:position pos:line="10" pos:column="21"/></name><operator pos:line="10" pos:column="21">.<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="22">target<pos:position pos:line="10" pos:column="28"/></name></name> <operator pos:line="10" pos:column="29">=<pos:position pos:line="10" pos:column="30"/></operator> <name pos:line="10" pos:column="31">target<pos:position pos:line="10" pos:column="37"/></name></expr>;<pos:position pos:line="10" pos:column="38"/></expr_stmt> <expr_stmt><expr><name><name pos:line="10" pos:column="39">d<pos:position pos:line="10" pos:column="40"/></name><operator pos:line="10" pos:column="40">.<pos:position pos:line="10" pos:column="41"/></operator><name pos:line="10" pos:column="41">parent<pos:position pos:line="10" pos:column="47"/></name></name> <operator pos:line="10" pos:column="48">=<pos:position pos:line="10" pos:column="49"/></operator> <name pos:line="10" pos:column="50">parent<pos:position pos:line="10" pos:column="56"/></name></expr>;<pos:position pos:line="10" pos:column="57"/></expr_stmt>
	<expr_stmt><expr><name pos:line="11" pos:column="9">last_in_target<pos:position pos:line="11" pos:column="23"/></name> <operator pos:line="11" pos:column="24">=<pos:position pos:line="11" pos:column="25"/></operator> <call><name pos:line="11" pos:column="26">find_last_in_target<pos:position pos:line="11" pos:column="45"/></name><argument_list pos:line="11" pos:column="45">(<argument><expr><name pos:line="11" pos:column="46">sb<pos:position pos:line="11" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="50">target<pos:position pos:line="11" pos:column="56"/></name></expr></argument>)<pos:position pos:line="11" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="58"/></expr_stmt>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">last_in_target<pos:position pos:line="12" pos:column="27"/></name> <operator pos:line="12" pos:column="28">&lt;<pos:position pos:line="12" pos:column="32"/></operator> <literal type="number" pos:line="12" pos:column="30">0<pos:position pos:line="12" pos:column="31"/></literal></expr>)<pos:position pos:line="12" pos:column="32"/></condition><then pos:line="12" pos:column="32">
		<block type="pseudo"><return pos:line="13" pos:column="17">return <expr><literal type="number" pos:line="13" pos:column="24">1<pos:position pos:line="13" pos:column="25"/></literal></expr>;<pos:position pos:line="13" pos:column="26"/></return></block></then></if> <comment type="block" pos:line="13" pos:column="27">/* nothing remains for this target */</comment>

	<expr_stmt><expr><call><name pos:line="15" pos:column="9">fill_origin_blob<pos:position pos:line="15" pos:column="25"/></name><argument_list pos:line="15" pos:column="25">(<argument><expr><operator pos:line="15" pos:column="26">&amp;<pos:position pos:line="15" pos:column="31"/></operator><name><name pos:line="15" pos:column="27">sb<pos:position pos:line="15" pos:column="29"/></name><operator pos:line="15" pos:column="29">-&gt;<pos:position pos:line="15" pos:column="34"/></operator><name pos:line="15" pos:column="31">revs<pos:position pos:line="15" pos:column="35"/></name><operator pos:line="15" pos:column="35">-&gt;<pos:position pos:line="15" pos:column="40"/></operator><name pos:line="15" pos:column="37">diffopt<pos:position pos:line="15" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="46">parent<pos:position pos:line="15" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="54">&amp;<pos:position pos:line="15" pos:column="59"/></operator><name pos:line="15" pos:column="55">file_p<pos:position pos:line="15" pos:column="61"/></name></expr></argument>)<pos:position pos:line="15" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="63"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="16" pos:column="9">fill_origin_blob<pos:position pos:line="16" pos:column="25"/></name><argument_list pos:line="16" pos:column="25">(<argument><expr><operator pos:line="16" pos:column="26">&amp;<pos:position pos:line="16" pos:column="31"/></operator><name><name pos:line="16" pos:column="27">sb<pos:position pos:line="16" pos:column="29"/></name><operator pos:line="16" pos:column="29">-&gt;<pos:position pos:line="16" pos:column="34"/></operator><name pos:line="16" pos:column="31">revs<pos:position pos:line="16" pos:column="35"/></name><operator pos:line="16" pos:column="35">-&gt;<pos:position pos:line="16" pos:column="40"/></operator><name pos:line="16" pos:column="37">diffopt<pos:position pos:line="16" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="46">target<pos:position pos:line="16" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="54">&amp;<pos:position pos:line="16" pos:column="59"/></operator><name pos:line="16" pos:column="55">file_o<pos:position pos:line="16" pos:column="61"/></name></expr></argument>)<pos:position pos:line="16" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="63"/></expr_stmt>
	<expr_stmt><expr><name pos:line="17" pos:column="9">num_get_patch<pos:position pos:line="17" pos:column="22"/></name><operator pos:line="17" pos:column="22">++<pos:position pos:line="17" pos:column="24"/></operator></expr>;<pos:position pos:line="17" pos:column="25"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="19" pos:column="9">diff_hunks<pos:position pos:line="19" pos:column="19"/></name><argument_list pos:line="19" pos:column="19">(<argument><expr><operator pos:line="19" pos:column="20">&amp;<pos:position pos:line="19" pos:column="25"/></operator><name pos:line="19" pos:column="21">file_p<pos:position pos:line="19" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="29">&amp;<pos:position pos:line="19" pos:column="34"/></operator><name pos:line="19" pos:column="30">file_o<pos:position pos:line="19" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="38">0<pos:position pos:line="19" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="41">blame_chunk_cb<pos:position pos:line="19" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="57">&amp;<pos:position pos:line="19" pos:column="62"/></operator><name pos:line="19" pos:column="58">d<pos:position pos:line="19" pos:column="59"/></name></expr></argument>)<pos:position pos:line="19" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="61"/></expr_stmt>
	<comment type="block" pos:line="20" pos:column="9">/* The rest (i.e. anything after tlno) are the same as the parent */</comment>
	<expr_stmt><expr><call><name pos:line="21" pos:column="9">blame_chunk<pos:position pos:line="21" pos:column="20"/></name><argument_list pos:line="21" pos:column="20">(<argument><expr><name pos:line="21" pos:column="21">sb<pos:position pos:line="21" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="25">d<pos:position pos:line="21" pos:column="26"/></name><operator pos:line="21" pos:column="26">.<pos:position pos:line="21" pos:column="27"/></operator><name pos:line="21" pos:column="27">tlno<pos:position pos:line="21" pos:column="31"/></name></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="33">d<pos:position pos:line="21" pos:column="34"/></name><operator pos:line="21" pos:column="34">.<pos:position pos:line="21" pos:column="35"/></operator><name pos:line="21" pos:column="35">plno<pos:position pos:line="21" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="41">last_in_target<pos:position pos:line="21" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="57">target<pos:position pos:line="21" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="65">parent<pos:position pos:line="21" pos:column="71"/></name></expr></argument>)<pos:position pos:line="21" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="73"/></expr_stmt>

	<return pos:line="23" pos:column="9">return <expr><literal type="number" pos:line="23" pos:column="16">0<pos:position pos:line="23" pos:column="17"/></literal></expr>;<pos:position pos:line="23" pos:column="18"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2883_git-2.11.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">gather_convert_stats_ascii<pos:position pos:line="1" pos:column="46"/></name><parameter_list pos:line="1" pos:column="46">(<parameter><decl><type><specifier pos:line="1" pos:column="47">const<pos:position pos:line="1" pos:column="52"/></specifier> <name pos:line="1" pos:column="53">char<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">data<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="65">unsigned<pos:position pos:line="1" pos:column="73"/></name> <name pos:line="1" pos:column="74">long<pos:position pos:line="1" pos:column="78"/></name></type> <name pos:line="1" pos:column="79">size<pos:position pos:line="1" pos:column="83"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="84"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">unsigned<pos:position pos:line="3" pos:column="17"/></name> <name pos:line="3" pos:column="18">int<pos:position pos:line="3" pos:column="21"/></name></type> <name pos:line="3" pos:column="22">convert_stats<pos:position pos:line="3" pos:column="35"/></name> <init pos:line="3" pos:column="36">= <expr><call><name pos:line="3" pos:column="38">gather_convert_stats<pos:position pos:line="3" pos:column="58"/></name><argument_list pos:line="3" pos:column="58">(<argument><expr><name pos:line="3" pos:column="59">data<pos:position pos:line="3" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="65">size<pos:position pos:line="3" pos:column="69"/></name></expr></argument>)<pos:position pos:line="3" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="71"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">convert_stats<pos:position pos:line="5" pos:column="26"/></name> <operator pos:line="5" pos:column="27">&amp;<pos:position pos:line="5" pos:column="32"/></operator> <name pos:line="5" pos:column="29">CONVERT_STAT_BITS_BIN<pos:position pos:line="5" pos:column="50"/></name></expr>)<pos:position pos:line="5" pos:column="51"/></condition><then pos:line="5" pos:column="51">
		<block type="pseudo"><return pos:line="6" pos:column="17">return <expr><literal type="string" pos:line="6" pos:column="24">"-text"<pos:position pos:line="6" pos:column="31"/></literal></expr>;<pos:position pos:line="6" pos:column="32"/></return></block></then></if>
	<switch pos:line="7" pos:column="9">switch <condition pos:line="7" pos:column="16">(<expr><name pos:line="7" pos:column="17">convert_stats<pos:position pos:line="7" pos:column="30"/></name></expr>)<pos:position pos:line="7" pos:column="31"/></condition> <block pos:line="7" pos:column="32">{
	<case pos:line="8" pos:column="9">case <expr><name pos:line="8" pos:column="14">CONVERT_STAT_BITS_TXT_LF<pos:position pos:line="8" pos:column="38"/></name></expr>:<pos:position pos:line="8" pos:column="39"/></case>
		<return pos:line="9" pos:column="17">return <expr><literal type="string" pos:line="9" pos:column="24">"lf"<pos:position pos:line="9" pos:column="28"/></literal></expr>;<pos:position pos:line="9" pos:column="29"/></return>
	<case pos:line="10" pos:column="9">case <expr><name pos:line="10" pos:column="14">CONVERT_STAT_BITS_TXT_CRLF<pos:position pos:line="10" pos:column="40"/></name></expr>:<pos:position pos:line="10" pos:column="41"/></case>
		<return pos:line="11" pos:column="17">return <expr><literal type="string" pos:line="11" pos:column="24">"crlf"<pos:position pos:line="11" pos:column="30"/></literal></expr>;<pos:position pos:line="11" pos:column="31"/></return>
	<case pos:line="12" pos:column="9">case <expr><name pos:line="12" pos:column="14">CONVERT_STAT_BITS_TXT_LF<pos:position pos:line="12" pos:column="38"/></name> <operator pos:line="12" pos:column="39">|<pos:position pos:line="12" pos:column="40"/></operator> <name pos:line="12" pos:column="41">CONVERT_STAT_BITS_TXT_CRLF<pos:position pos:line="12" pos:column="67"/></name></expr>:<pos:position pos:line="12" pos:column="68"/></case>
		<return pos:line="13" pos:column="17">return <expr><literal type="string" pos:line="13" pos:column="24">"mixed"<pos:position pos:line="13" pos:column="31"/></literal></expr>;<pos:position pos:line="13" pos:column="32"/></return>
	<default pos:line="14" pos:column="9">default:<pos:position pos:line="14" pos:column="17"/></default>
		<return pos:line="15" pos:column="17">return <expr><literal type="string" pos:line="15" pos:column="24">"none"<pos:position pos:line="15" pos:column="30"/></literal></expr>;<pos:position pos:line="15" pos:column="31"/></return>
	}<pos:position pos:line="16" pos:column="10"/></block></switch>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

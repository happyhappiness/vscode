<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4333_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">compile_pcre1_regexp<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name><name pos:line="1" pos:column="34">struct<pos:position pos:line="1" pos:column="40"/></name> <name pos:line="1" pos:column="41">grep_pat<pos:position pos:line="1" pos:column="49"/></name></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">p<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="54">const<pos:position pos:line="1" pos:column="59"/></specifier> <name><name pos:line="1" pos:column="60">struct<pos:position pos:line="1" pos:column="66"/></name> <name pos:line="1" pos:column="67">grep_opt<pos:position pos:line="1" pos:column="75"/></name></name> <modifier pos:line="1" pos:column="76">*<pos:position pos:line="1" pos:column="77"/></modifier></type><name pos:line="1" pos:column="77">opt<pos:position pos:line="1" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="81"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">error<pos:position pos:line="3" pos:column="26"/></name></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">erroffset<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">options<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><name pos:line="5" pos:column="23">PCRE_MULTILINE<pos:position pos:line="5" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="38"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name><name pos:line="7" pos:column="13">opt<pos:position pos:line="7" pos:column="16"/></name><operator pos:line="7" pos:column="16">-&gt;<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="18">ignore_case<pos:position pos:line="7" pos:column="29"/></name></name></expr>)<pos:position pos:line="7" pos:column="30"/></condition><then pos:line="7" pos:column="30"> <block pos:line="7" pos:column="31">{
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><call><name pos:line="8" pos:column="21">has_non_ascii<pos:position pos:line="8" pos:column="34"/></name><argument_list pos:line="8" pos:column="34">(<argument><expr><name><name pos:line="8" pos:column="35">p<pos:position pos:line="8" pos:column="36"/></name><operator pos:line="8" pos:column="36">-&gt;<pos:position pos:line="8" pos:column="41"/></operator><name pos:line="8" pos:column="38">pattern<pos:position pos:line="8" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="47"/></condition><then pos:line="8" pos:column="47">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="9" pos:column="25">p<pos:position pos:line="9" pos:column="26"/></name><operator pos:line="9" pos:column="26">-&gt;<pos:position pos:line="9" pos:column="31"/></operator><name pos:line="9" pos:column="28">pcre1_tables<pos:position pos:line="9" pos:column="40"/></name></name> <operator pos:line="9" pos:column="41">=<pos:position pos:line="9" pos:column="42"/></operator> <call><name pos:line="9" pos:column="43">pcre_maketables<pos:position pos:line="9" pos:column="58"/></name><argument_list pos:line="9" pos:column="58">()<pos:position pos:line="9" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="61"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="10" pos:column="17">options<pos:position pos:line="10" pos:column="24"/></name> <operator pos:line="10" pos:column="25">|=<pos:position pos:line="10" pos:column="27"/></operator> <name pos:line="10" pos:column="28">PCRE_CASELESS<pos:position pos:line="10" pos:column="41"/></name></expr>;<pos:position pos:line="10" pos:column="42"/></expr_stmt>
	}<pos:position pos:line="11" pos:column="10"/></block></then></if>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><call><name pos:line="12" pos:column="13">is_utf8_locale<pos:position pos:line="12" pos:column="27"/></name><argument_list pos:line="12" pos:column="27">()<pos:position pos:line="12" pos:column="29"/></argument_list></call> <operator pos:line="12" pos:column="30">&amp;&amp;<pos:position pos:line="12" pos:column="40"/></operator> <call><name pos:line="12" pos:column="33">has_non_ascii<pos:position pos:line="12" pos:column="46"/></name><argument_list pos:line="12" pos:column="46">(<argument><expr><name><name pos:line="12" pos:column="47">p<pos:position pos:line="12" pos:column="48"/></name><operator pos:line="12" pos:column="48">-&gt;<pos:position pos:line="12" pos:column="53"/></operator><name pos:line="12" pos:column="50">pattern<pos:position pos:line="12" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="59"/></condition><then pos:line="12" pos:column="59">
		<block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="17">options<pos:position pos:line="13" pos:column="24"/></name> <operator pos:line="13" pos:column="25">|=<pos:position pos:line="13" pos:column="27"/></operator> <name pos:line="13" pos:column="28">PCRE_UTF8<pos:position pos:line="13" pos:column="37"/></name></expr>;<pos:position pos:line="13" pos:column="38"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name><name pos:line="15" pos:column="9">p<pos:position pos:line="15" pos:column="10"/></name><operator pos:line="15" pos:column="10">-&gt;<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="12">pcre1_regexp<pos:position pos:line="15" pos:column="24"/></name></name> <operator pos:line="15" pos:column="25">=<pos:position pos:line="15" pos:column="26"/></operator> <call><name pos:line="15" pos:column="27">pcre_compile<pos:position pos:line="15" pos:column="39"/></name><argument_list pos:line="15" pos:column="39">(<argument><expr><name><name pos:line="15" pos:column="40">p<pos:position pos:line="15" pos:column="41"/></name><operator pos:line="15" pos:column="41">-&gt;<pos:position pos:line="15" pos:column="46"/></operator><name pos:line="15" pos:column="43">pattern<pos:position pos:line="15" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="52">options<pos:position pos:line="15" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="61">&amp;<pos:position pos:line="15" pos:column="66"/></operator><name pos:line="15" pos:column="62">error<pos:position pos:line="15" pos:column="67"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="69">&amp;<pos:position pos:line="15" pos:column="74"/></operator><name pos:line="15" pos:column="70">erroffset<pos:position pos:line="15" pos:column="79"/></name></expr></argument>,
				      <argument><expr><name><name pos:line="16" pos:column="39">p<pos:position pos:line="16" pos:column="40"/></name><operator pos:line="16" pos:column="40">-&gt;<pos:position pos:line="16" pos:column="45"/></operator><name pos:line="16" pos:column="42">pcre1_tables<pos:position pos:line="16" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="56"/></expr_stmt>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><operator pos:line="17" pos:column="13">!<pos:position pos:line="17" pos:column="14"/></operator><name><name pos:line="17" pos:column="14">p<pos:position pos:line="17" pos:column="15"/></name><operator pos:line="17" pos:column="15">-&gt;<pos:position pos:line="17" pos:column="20"/></operator><name pos:line="17" pos:column="17">pcre1_regexp<pos:position pos:line="17" pos:column="29"/></name></name></expr>)<pos:position pos:line="17" pos:column="30"/></condition><then pos:line="17" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="17">compile_regexp_failed<pos:position pos:line="18" pos:column="38"/></name><argument_list pos:line="18" pos:column="38">(<argument><expr><name pos:line="18" pos:column="39">p<pos:position pos:line="18" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="42">error<pos:position pos:line="18" pos:column="47"/></name></expr></argument>)<pos:position pos:line="18" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="49"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name><name pos:line="20" pos:column="9">p<pos:position pos:line="20" pos:column="10"/></name><operator pos:line="20" pos:column="10">-&gt;<pos:position pos:line="20" pos:column="15"/></operator><name pos:line="20" pos:column="12">pcre1_extra_info<pos:position pos:line="20" pos:column="28"/></name></name> <operator pos:line="20" pos:column="29">=<pos:position pos:line="20" pos:column="30"/></operator> <call><name pos:line="20" pos:column="31">pcre_study<pos:position pos:line="20" pos:column="41"/></name><argument_list pos:line="20" pos:column="41">(<argument><expr><name><name pos:line="20" pos:column="42">p<pos:position pos:line="20" pos:column="43"/></name><operator pos:line="20" pos:column="43">-&gt;<pos:position pos:line="20" pos:column="48"/></operator><name pos:line="20" pos:column="45">pcre1_regexp<pos:position pos:line="20" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="59">PCRE_STUDY_JIT_COMPILE<pos:position pos:line="20" pos:column="81"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="83">&amp;<pos:position pos:line="20" pos:column="88"/></operator><name pos:line="20" pos:column="84">error<pos:position pos:line="20" pos:column="89"/></name></expr></argument>)<pos:position pos:line="20" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="91"/></expr_stmt>
	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><operator pos:line="21" pos:column="13">!<pos:position pos:line="21" pos:column="14"/></operator><name><name pos:line="21" pos:column="14">p<pos:position pos:line="21" pos:column="15"/></name><operator pos:line="21" pos:column="15">-&gt;<pos:position pos:line="21" pos:column="20"/></operator><name pos:line="21" pos:column="17">pcre1_extra_info<pos:position pos:line="21" pos:column="33"/></name></name> <operator pos:line="21" pos:column="34">&amp;&amp;<pos:position pos:line="21" pos:column="44"/></operator> <name pos:line="21" pos:column="37">error<pos:position pos:line="21" pos:column="42"/></name></expr>)<pos:position pos:line="21" pos:column="43"/></condition><then pos:line="21" pos:column="43">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="17">die<pos:position pos:line="22" pos:column="20"/></name><argument_list pos:line="22" pos:column="20">(<argument><expr><literal type="string" pos:line="22" pos:column="21">"%s"<pos:position pos:line="22" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="27">error<pos:position pos:line="22" pos:column="32"/></name></expr></argument>)<pos:position pos:line="22" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="34"/></expr_stmt></block></then></if>

<cpp:ifdef pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">ifdef<pos:position pos:line="24" pos:column="7"/></cpp:directive> <name pos:line="24" pos:column="8">GIT_PCRE1_USE_JIT<pos:position pos:line="24" pos:column="25"/></name></cpp:ifdef>
	<expr_stmt><expr><call><name pos:line="25" pos:column="9">pcre_config<pos:position pos:line="25" pos:column="20"/></name><argument_list pos:line="25" pos:column="20">(<argument><expr><name pos:line="25" pos:column="21">PCRE_CONFIG_JIT<pos:position pos:line="25" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="38">&amp;<pos:position pos:line="25" pos:column="43"/></operator><name><name pos:line="25" pos:column="39">p<pos:position pos:line="25" pos:column="40"/></name><operator pos:line="25" pos:column="40">-&gt;<pos:position pos:line="25" pos:column="45"/></operator><name pos:line="25" pos:column="42">pcre1_jit_on<pos:position pos:line="25" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="56"/></expr_stmt>
	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name><name pos:line="26" pos:column="13">p<pos:position pos:line="26" pos:column="14"/></name><operator pos:line="26" pos:column="14">-&gt;<pos:position pos:line="26" pos:column="19"/></operator><name pos:line="26" pos:column="16">pcre1_jit_on<pos:position pos:line="26" pos:column="28"/></name></name> <operator pos:line="26" pos:column="29">==<pos:position pos:line="26" pos:column="31"/></operator> <literal type="number" pos:line="26" pos:column="32">1<pos:position pos:line="26" pos:column="33"/></literal></expr>)<pos:position pos:line="26" pos:column="34"/></condition><then pos:line="26" pos:column="34"> <block pos:line="26" pos:column="35">{
		<expr_stmt><expr><name><name pos:line="27" pos:column="17">p<pos:position pos:line="27" pos:column="18"/></name><operator pos:line="27" pos:column="18">-&gt;<pos:position pos:line="27" pos:column="23"/></operator><name pos:line="27" pos:column="20">pcre1_jit_stack<pos:position pos:line="27" pos:column="35"/></name></name> <operator pos:line="27" pos:column="36">=<pos:position pos:line="27" pos:column="37"/></operator> <call><name pos:line="27" pos:column="38">pcre_jit_stack_alloc<pos:position pos:line="27" pos:column="58"/></name><argument_list pos:line="27" pos:column="58">(<argument><expr><literal type="number" pos:line="27" pos:column="59">1<pos:position pos:line="27" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="62">1024<pos:position pos:line="27" pos:column="66"/></literal> <operator pos:line="27" pos:column="67">*<pos:position pos:line="27" pos:column="68"/></operator> <literal type="number" pos:line="27" pos:column="69">1024<pos:position pos:line="27" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="75"/></expr_stmt>
		<if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><operator pos:line="28" pos:column="21">!<pos:position pos:line="28" pos:column="22"/></operator><name><name pos:line="28" pos:column="22">p<pos:position pos:line="28" pos:column="23"/></name><operator pos:line="28" pos:column="23">-&gt;<pos:position pos:line="28" pos:column="28"/></operator><name pos:line="28" pos:column="25">pcre1_jit_stack<pos:position pos:line="28" pos:column="40"/></name></name></expr>)<pos:position pos:line="28" pos:column="41"/></condition><then pos:line="28" pos:column="41">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="25">die<pos:position pos:line="29" pos:column="28"/></name><argument_list pos:line="29" pos:column="28">(<argument><expr><literal type="string" pos:line="29" pos:column="29">"Couldn't allocate PCRE JIT stack"<pos:position pos:line="29" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="65"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="30" pos:column="17">pcre_assign_jit_stack<pos:position pos:line="30" pos:column="38"/></name><argument_list pos:line="30" pos:column="38">(<argument><expr><name><name pos:line="30" pos:column="39">p<pos:position pos:line="30" pos:column="40"/></name><operator pos:line="30" pos:column="40">-&gt;<pos:position pos:line="30" pos:column="45"/></operator><name pos:line="30" pos:column="42">pcre1_extra_info<pos:position pos:line="30" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="60">NULL<pos:position pos:line="30" pos:column="64"/></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="66">p<pos:position pos:line="30" pos:column="67"/></name><operator pos:line="30" pos:column="67">-&gt;<pos:position pos:line="30" pos:column="72"/></operator><name pos:line="30" pos:column="69">pcre1_jit_stack<pos:position pos:line="30" pos:column="84"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="86"/></expr_stmt>
	}<pos:position pos:line="31" pos:column="10"/></block></then> <elseif pos:line="31" pos:column="11">else <if pos:line="31" pos:column="16">if <condition pos:line="31" pos:column="19">(<expr><name><name pos:line="31" pos:column="20">p<pos:position pos:line="31" pos:column="21"/></name><operator pos:line="31" pos:column="21">-&gt;<pos:position pos:line="31" pos:column="26"/></operator><name pos:line="31" pos:column="23">pcre1_jit_on<pos:position pos:line="31" pos:column="35"/></name></name> <operator pos:line="31" pos:column="36">!=<pos:position pos:line="31" pos:column="38"/></operator> <literal type="number" pos:line="31" pos:column="39">0<pos:position pos:line="31" pos:column="40"/></literal></expr>)<pos:position pos:line="31" pos:column="41"/></condition><then pos:line="31" pos:column="41"> <block pos:line="31" pos:column="42">{
		<expr_stmt><expr><call><name pos:line="32" pos:column="17">die<pos:position pos:line="32" pos:column="20"/></name><argument_list pos:line="32" pos:column="20">(<argument><expr><literal type="string" pos:line="32" pos:column="21">"BUG: The pcre1_jit_on variable should be 0 or 1, not %d"<pos:position pos:line="32" pos:column="78"/></literal></expr></argument>,
		    <argument><expr><name><name pos:line="33" pos:column="21">p<pos:position pos:line="33" pos:column="22"/></name><operator pos:line="33" pos:column="22">-&gt;<pos:position pos:line="33" pos:column="27"/></operator><name pos:line="33" pos:column="24">pcre1_jit_on<pos:position pos:line="33" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="34" pos:column="10"/></block></then></if></elseif></if>
<cpp:endif pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">endif<pos:position pos:line="35" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6460_git-2.12.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name> <name pos:line="1" pos:column="12">WSAAPI<pos:position pos:line="1" pos:column="18"/></name></type> <name pos:line="1" pos:column="19">getnameinfo_stub<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><specifier pos:line="1" pos:column="36">const<pos:position pos:line="1" pos:column="41"/></specifier> <name><name pos:line="1" pos:column="42">struct<pos:position pos:line="1" pos:column="48"/></name> <name pos:line="1" pos:column="49">sockaddr<pos:position pos:line="1" pos:column="57"/></name></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">sa<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="63">socklen_t<pos:position pos:line="1" pos:column="72"/></name></type> <name pos:line="1" pos:column="73">salen<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>,
				   <parameter><decl><type><name pos:line="2" pos:column="36">char<pos:position pos:line="2" pos:column="40"/></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">host<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="48">DWORD<pos:position pos:line="2" pos:column="53"/></name></type> <name pos:line="2" pos:column="54">hostlen<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>,
				   <parameter><decl><type><name pos:line="3" pos:column="36">char<pos:position pos:line="3" pos:column="40"/></name> <modifier pos:line="3" pos:column="41">*<pos:position pos:line="3" pos:column="42"/></modifier></type><name pos:line="3" pos:column="42">serv<pos:position pos:line="3" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="48">DWORD<pos:position pos:line="3" pos:column="53"/></name></type> <name pos:line="3" pos:column="54">servlen<pos:position pos:line="3" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="63">int<pos:position pos:line="3" pos:column="66"/></name></type> <name pos:line="3" pos:column="67">flags<pos:position pos:line="3" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="73"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name><name pos:line="5" pos:column="15">struct<pos:position pos:line="5" pos:column="21"/></name> <name pos:line="5" pos:column="22">sockaddr_in<pos:position pos:line="5" pos:column="33"/></name></name> <modifier pos:line="5" pos:column="34">*<pos:position pos:line="5" pos:column="35"/></modifier></type><name pos:line="5" pos:column="35">sin<pos:position pos:line="5" pos:column="38"/></name> <init pos:line="5" pos:column="39">= <expr><operator pos:line="5" pos:column="41">(<pos:position pos:line="5" pos:column="42"/></operator><specifier pos:line="5" pos:column="42">const<pos:position pos:line="5" pos:column="47"/></specifier> struct <name pos:line="5" pos:column="55">sockaddr_in<pos:position pos:line="5" pos:column="66"/></name> <operator pos:line="5" pos:column="67">*<pos:position pos:line="5" pos:column="68"/></operator><operator pos:line="5" pos:column="68">)<pos:position pos:line="5" pos:column="69"/></operator><name pos:line="5" pos:column="69">sa<pos:position pos:line="5" pos:column="71"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="72"/></decl_stmt>
	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name><name pos:line="6" pos:column="13">sa<pos:position pos:line="6" pos:column="15"/></name><operator pos:line="6" pos:column="15">-&gt;<pos:position pos:line="6" pos:column="20"/></operator><name pos:line="6" pos:column="17">sa_family<pos:position pos:line="6" pos:column="26"/></name></name> <operator pos:line="6" pos:column="27">!=<pos:position pos:line="6" pos:column="29"/></operator> <name pos:line="6" pos:column="30">AF_INET<pos:position pos:line="6" pos:column="37"/></name></expr>)<pos:position pos:line="6" pos:column="38"/></condition><then pos:line="6" pos:column="38">
		<block type="pseudo"><return pos:line="7" pos:column="17">return <expr><name pos:line="7" pos:column="24">EAI_FAMILY<pos:position pos:line="7" pos:column="34"/></name></expr>;<pos:position pos:line="7" pos:column="35"/></return></block></then></if>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">!<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">host<pos:position pos:line="8" pos:column="18"/></name> <operator pos:line="8" pos:column="19">&amp;&amp;<pos:position pos:line="8" pos:column="29"/></operator> <operator pos:line="8" pos:column="22">!<pos:position pos:line="8" pos:column="23"/></operator><name pos:line="8" pos:column="23">serv<pos:position pos:line="8" pos:column="27"/></name></expr>)<pos:position pos:line="8" pos:column="28"/></condition><then pos:line="8" pos:column="28">
		<block type="pseudo"><return pos:line="9" pos:column="17">return <expr><name pos:line="9" pos:column="24">EAI_NONAME<pos:position pos:line="9" pos:column="34"/></name></expr>;<pos:position pos:line="9" pos:column="35"/></return></block></then></if>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">host<pos:position pos:line="11" pos:column="17"/></name> <operator pos:line="11" pos:column="18">&amp;&amp;<pos:position pos:line="11" pos:column="28"/></operator> <name pos:line="11" pos:column="21">hostlen<pos:position pos:line="11" pos:column="28"/></name> <operator pos:line="11" pos:column="29">&gt;<pos:position pos:line="11" pos:column="33"/></operator> <literal type="number" pos:line="11" pos:column="31">0<pos:position pos:line="11" pos:column="32"/></literal></expr>)<pos:position pos:line="11" pos:column="33"/></condition><then pos:line="11" pos:column="33"> <block pos:line="11" pos:column="34">{
		<decl_stmt><decl><type><name><name pos:line="12" pos:column="17">struct<pos:position pos:line="12" pos:column="23"/></name> <name pos:line="12" pos:column="24">hostent<pos:position pos:line="12" pos:column="31"/></name></name> <modifier pos:line="12" pos:column="32">*<pos:position pos:line="12" pos:column="33"/></modifier></type><name pos:line="12" pos:column="33">ent<pos:position pos:line="12" pos:column="36"/></name> <init pos:line="12" pos:column="37">= <expr><name pos:line="12" pos:column="39">NULL<pos:position pos:line="12" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="44"/></decl_stmt>
		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><operator pos:line="13" pos:column="21">!<pos:position pos:line="13" pos:column="22"/></operator><operator pos:line="13" pos:column="22">(<pos:position pos:line="13" pos:column="23"/></operator><name pos:line="13" pos:column="23">flags<pos:position pos:line="13" pos:column="28"/></name> <operator pos:line="13" pos:column="29">&amp;<pos:position pos:line="13" pos:column="34"/></operator> <name pos:line="13" pos:column="31">NI_NUMERICHOST<pos:position pos:line="13" pos:column="45"/></name><operator pos:line="13" pos:column="45">)<pos:position pos:line="13" pos:column="46"/></operator></expr>)<pos:position pos:line="13" pos:column="47"/></condition><then pos:line="13" pos:column="47">
			<block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="25">ent<pos:position pos:line="14" pos:column="28"/></name> <operator pos:line="14" pos:column="29">=<pos:position pos:line="14" pos:column="30"/></operator> <call><name pos:line="14" pos:column="31">gethostbyaddr<pos:position pos:line="14" pos:column="44"/></name><argument_list pos:line="14" pos:column="44">(<argument><expr><operator pos:line="14" pos:column="45">(<pos:position pos:line="14" pos:column="46"/></operator><specifier pos:line="14" pos:column="46">const<pos:position pos:line="14" pos:column="51"/></specifier> <name pos:line="14" pos:column="52">char<pos:position pos:line="14" pos:column="56"/></name> <operator pos:line="14" pos:column="57">*<pos:position pos:line="14" pos:column="58"/></operator><operator pos:line="14" pos:column="58">)<pos:position pos:line="14" pos:column="59"/></operator><operator pos:line="14" pos:column="59">&amp;<pos:position pos:line="14" pos:column="64"/></operator><name><name pos:line="14" pos:column="60">sin<pos:position pos:line="14" pos:column="63"/></name><operator pos:line="14" pos:column="63">-&gt;<pos:position pos:line="14" pos:column="68"/></operator><name pos:line="14" pos:column="65">sin_addr<pos:position pos:line="14" pos:column="73"/></name></name></expr></argument>,
					    <argument><expr><sizeof pos:line="15" pos:column="45">sizeof<argument_list pos:line="15" pos:column="51">(<argument><expr><name><name pos:line="15" pos:column="52">sin<pos:position pos:line="15" pos:column="55"/></name><operator pos:line="15" pos:column="55">-&gt;<pos:position pos:line="15" pos:column="60"/></operator><name pos:line="15" pos:column="57">sin_addr<pos:position pos:line="15" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="66"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="15" pos:column="68">AF_INET<pos:position pos:line="15" pos:column="75"/></name></expr></argument>)<pos:position pos:line="15" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="77"/></expr_stmt></block></then></if>

		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><name pos:line="17" pos:column="21">ent<pos:position pos:line="17" pos:column="24"/></name></expr>)<pos:position pos:line="17" pos:column="25"/></condition><then pos:line="17" pos:column="25">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="25">snprintf<pos:position pos:line="18" pos:column="33"/></name><argument_list pos:line="18" pos:column="33">(<argument><expr><name pos:line="18" pos:column="34">host<pos:position pos:line="18" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="40">hostlen<pos:position pos:line="18" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="49">"%s"<pos:position pos:line="18" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="55">ent<pos:position pos:line="18" pos:column="58"/></name><operator pos:line="18" pos:column="58">-&gt;<pos:position pos:line="18" pos:column="63"/></operator><name pos:line="18" pos:column="60">h_name<pos:position pos:line="18" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="68"/></expr_stmt></block></then>
		<elseif pos:line="19" pos:column="17">else <if pos:line="19" pos:column="22">if <condition pos:line="19" pos:column="25">(<expr><name pos:line="19" pos:column="26">flags<pos:position pos:line="19" pos:column="31"/></name> <operator pos:line="19" pos:column="32">&amp;<pos:position pos:line="19" pos:column="37"/></operator> <name pos:line="19" pos:column="34">NI_NAMEREQD<pos:position pos:line="19" pos:column="45"/></name></expr>)<pos:position pos:line="19" pos:column="46"/></condition><then pos:line="19" pos:column="46">
			<block type="pseudo"><return pos:line="20" pos:column="25">return <expr><name pos:line="20" pos:column="32">EAI_NONAME<pos:position pos:line="20" pos:column="42"/></name></expr>;<pos:position pos:line="20" pos:column="43"/></return></block></then></if></elseif>
		<else pos:line="21" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="25">snprintf<pos:position pos:line="22" pos:column="33"/></name><argument_list pos:line="22" pos:column="33">(<argument><expr><name pos:line="22" pos:column="34">host<pos:position pos:line="22" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="40">hostlen<pos:position pos:line="22" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="49">"%s"<pos:position pos:line="22" pos:column="53"/></literal></expr></argument>, <argument><expr><call><name pos:line="22" pos:column="55">inet_ntoa<pos:position pos:line="22" pos:column="64"/></name><argument_list pos:line="22" pos:column="64">(<argument><expr><name><name pos:line="22" pos:column="65">sin<pos:position pos:line="22" pos:column="68"/></name><operator pos:line="22" pos:column="68">-&gt;<pos:position pos:line="22" pos:column="73"/></operator><name pos:line="22" pos:column="70">sin_addr<pos:position pos:line="22" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="81"/></expr_stmt></block></else></if>
	}<pos:position pos:line="23" pos:column="10"/></block></then></if>

	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">serv<pos:position pos:line="25" pos:column="17"/></name> <operator pos:line="25" pos:column="18">&amp;&amp;<pos:position pos:line="25" pos:column="28"/></operator> <name pos:line="25" pos:column="21">servlen<pos:position pos:line="25" pos:column="28"/></name> <operator pos:line="25" pos:column="29">&gt;<pos:position pos:line="25" pos:column="33"/></operator> <literal type="number" pos:line="25" pos:column="31">0<pos:position pos:line="25" pos:column="32"/></literal></expr>)<pos:position pos:line="25" pos:column="33"/></condition><then pos:line="25" pos:column="33"> <block pos:line="25" pos:column="34">{
		<decl_stmt><decl><type><name><name pos:line="26" pos:column="17">struct<pos:position pos:line="26" pos:column="23"/></name> <name pos:line="26" pos:column="24">servent<pos:position pos:line="26" pos:column="31"/></name></name> <modifier pos:line="26" pos:column="32">*<pos:position pos:line="26" pos:column="33"/></modifier></type><name pos:line="26" pos:column="33">ent<pos:position pos:line="26" pos:column="36"/></name> <init pos:line="26" pos:column="37">= <expr><name pos:line="26" pos:column="39">NULL<pos:position pos:line="26" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="26" pos:column="44"/></decl_stmt>
		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><operator pos:line="27" pos:column="21">!<pos:position pos:line="27" pos:column="22"/></operator><operator pos:line="27" pos:column="22">(<pos:position pos:line="27" pos:column="23"/></operator><name pos:line="27" pos:column="23">flags<pos:position pos:line="27" pos:column="28"/></name> <operator pos:line="27" pos:column="29">&amp;<pos:position pos:line="27" pos:column="34"/></operator> <name pos:line="27" pos:column="31">NI_NUMERICSERV<pos:position pos:line="27" pos:column="45"/></name><operator pos:line="27" pos:column="45">)<pos:position pos:line="27" pos:column="46"/></operator></expr>)<pos:position pos:line="27" pos:column="47"/></condition><then pos:line="27" pos:column="47">
			<block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="25">ent<pos:position pos:line="28" pos:column="28"/></name> <operator pos:line="28" pos:column="29">=<pos:position pos:line="28" pos:column="30"/></operator> <call><name pos:line="28" pos:column="31">getservbyport<pos:position pos:line="28" pos:column="44"/></name><argument_list pos:line="28" pos:column="44">(<argument><expr><name><name pos:line="28" pos:column="45">sin<pos:position pos:line="28" pos:column="48"/></name><operator pos:line="28" pos:column="48">-&gt;<pos:position pos:line="28" pos:column="53"/></operator><name pos:line="28" pos:column="50">sin_port<pos:position pos:line="28" pos:column="58"/></name></name></expr></argument>,
					    <argument><expr><ternary><condition><expr><name pos:line="29" pos:column="45">flags<pos:position pos:line="29" pos:column="50"/></name> <operator pos:line="29" pos:column="51">&amp;<pos:position pos:line="29" pos:column="56"/></operator> <name pos:line="29" pos:column="53">NI_DGRAM<pos:position pos:line="29" pos:column="61"/></name></expr> ?<pos:position pos:line="29" pos:column="63"/></condition><then pos:line="29" pos:column="63"> <expr><literal type="string" pos:line="29" pos:column="64">"udp"<pos:position pos:line="29" pos:column="69"/></literal></expr> <pos:position pos:line="29" pos:column="70"/></then><else pos:line="29" pos:column="70">: <expr><literal type="string" pos:line="29" pos:column="72">"tcp"<pos:position pos:line="29" pos:column="77"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="29" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="79"/></expr_stmt></block></then></if>

		<if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><name pos:line="31" pos:column="21">ent<pos:position pos:line="31" pos:column="24"/></name></expr>)<pos:position pos:line="31" pos:column="25"/></condition><then pos:line="31" pos:column="25">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="32" pos:column="25">snprintf<pos:position pos:line="32" pos:column="33"/></name><argument_list pos:line="32" pos:column="33">(<argument><expr><name pos:line="32" pos:column="34">serv<pos:position pos:line="32" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="40">servlen<pos:position pos:line="32" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="49">"%s"<pos:position pos:line="32" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="55">ent<pos:position pos:line="32" pos:column="58"/></name><operator pos:line="32" pos:column="58">-&gt;<pos:position pos:line="32" pos:column="63"/></operator><name pos:line="32" pos:column="60">s_name<pos:position pos:line="32" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="68"/></expr_stmt></block></then>
		<else pos:line="33" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="25">snprintf<pos:position pos:line="34" pos:column="33"/></name><argument_list pos:line="34" pos:column="33">(<argument><expr><name pos:line="34" pos:column="34">serv<pos:position pos:line="34" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="40">servlen<pos:position pos:line="34" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="49">"%d"<pos:position pos:line="34" pos:column="53"/></literal></expr></argument>, <argument><expr><call><name pos:line="34" pos:column="55">ntohs<pos:position pos:line="34" pos:column="60"/></name><argument_list pos:line="34" pos:column="60">(<argument><expr><name><name pos:line="34" pos:column="61">sin<pos:position pos:line="34" pos:column="64"/></name><operator pos:line="34" pos:column="64">-&gt;<pos:position pos:line="34" pos:column="69"/></operator><name pos:line="34" pos:column="66">sin_port<pos:position pos:line="34" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="77"/></expr_stmt></block></else></if>
	}<pos:position pos:line="35" pos:column="10"/></block></then></if>

	<return pos:line="37" pos:column="9">return <expr><literal type="number" pos:line="37" pos:column="16">0<pos:position pos:line="37" pos:column="17"/></literal></expr>;<pos:position pos:line="37" pos:column="18"/></return>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1114_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">split_commit_in_progress<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name><name pos:line="1" pos:column="37">struct<pos:position pos:line="1" pos:column="43"/></name> <name pos:line="1" pos:column="44">wt_status<pos:position pos:line="1" pos:column="53"/></name></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">s<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">split_in_progress<pos:position pos:line="3" pos:column="30"/></name> <init pos:line="3" pos:column="31">= <expr><literal type="number" pos:line="3" pos:column="33">0<pos:position pos:line="3" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">head<pos:position pos:line="4" pos:column="19"/></name></decl>, <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="22">orig_head<pos:position pos:line="4" pos:column="31"/></name></decl>, <modifier pos:line="4" pos:column="33">*<pos:position pos:line="4" pos:column="34"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="34">rebase_amend<pos:position pos:line="4" pos:column="46"/></name></decl>, <modifier pos:line="4" pos:column="48">*<pos:position pos:line="4" pos:column="49"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="49">rebase_orig_head<pos:position pos:line="4" pos:column="65"/></name></decl>;<pos:position pos:line="4" pos:column="66"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">(<pos:position pos:line="6" pos:column="14"/></operator><operator pos:line="6" pos:column="14">!<pos:position pos:line="6" pos:column="15"/></operator><name><name pos:line="6" pos:column="15">s<pos:position pos:line="6" pos:column="16"/></name><operator pos:line="6" pos:column="16">-&gt;<pos:position pos:line="6" pos:column="21"/></operator><name pos:line="6" pos:column="18">amend<pos:position pos:line="6" pos:column="23"/></name></name> <operator pos:line="6" pos:column="24">&amp;&amp;<pos:position pos:line="6" pos:column="34"/></operator> <operator pos:line="6" pos:column="27">!<pos:position pos:line="6" pos:column="28"/></operator><name><name pos:line="6" pos:column="28">s<pos:position pos:line="6" pos:column="29"/></name><operator pos:line="6" pos:column="29">-&gt;<pos:position pos:line="6" pos:column="34"/></operator><name pos:line="6" pos:column="31">nowarn<pos:position pos:line="6" pos:column="37"/></name></name> <operator pos:line="6" pos:column="38">&amp;&amp;<pos:position pos:line="6" pos:column="48"/></operator> <operator pos:line="6" pos:column="41">!<pos:position pos:line="6" pos:column="42"/></operator><name><name pos:line="6" pos:column="42">s<pos:position pos:line="6" pos:column="43"/></name><operator pos:line="6" pos:column="43">-&gt;<pos:position pos:line="6" pos:column="48"/></operator><name pos:line="6" pos:column="45">workdir_dirty<pos:position pos:line="6" pos:column="58"/></name></name><operator pos:line="6" pos:column="58">)<pos:position pos:line="6" pos:column="59"/></operator> <operator pos:line="6" pos:column="60">||<pos:position pos:line="6" pos:column="62"/></operator>
	    <operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><name><name pos:line="7" pos:column="14">s<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">-&gt;<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="17">branch<pos:position pos:line="7" pos:column="23"/></name></name> <operator pos:line="7" pos:column="24">||<pos:position pos:line="7" pos:column="26"/></operator> <call><name pos:line="7" pos:column="27">strcmp<pos:position pos:line="7" pos:column="33"/></name><argument_list pos:line="7" pos:column="33">(<argument><expr><name><name pos:line="7" pos:column="34">s<pos:position pos:line="7" pos:column="35"/></name><operator pos:line="7" pos:column="35">-&gt;<pos:position pos:line="7" pos:column="40"/></operator><name pos:line="7" pos:column="37">branch<pos:position pos:line="7" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="45">"HEAD"<pos:position pos:line="7" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="53"/></condition><then pos:line="7" pos:column="53">
		<block type="pseudo"><return pos:line="8" pos:column="17">return <expr><literal type="number" pos:line="8" pos:column="24">0<pos:position pos:line="8" pos:column="25"/></literal></expr>;<pos:position pos:line="8" pos:column="26"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="10" pos:column="9">head<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">=<pos:position pos:line="10" pos:column="15"/></operator> <call><name pos:line="10" pos:column="16">read_line_from_git_path<pos:position pos:line="10" pos:column="39"/></name><argument_list pos:line="10" pos:column="39">(<argument><expr><literal type="string" pos:line="10" pos:column="40">"HEAD"<pos:position pos:line="10" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="48"/></expr_stmt>
	<expr_stmt><expr><name pos:line="11" pos:column="9">orig_head<pos:position pos:line="11" pos:column="18"/></name> <operator pos:line="11" pos:column="19">=<pos:position pos:line="11" pos:column="20"/></operator> <call><name pos:line="11" pos:column="21">read_line_from_git_path<pos:position pos:line="11" pos:column="44"/></name><argument_list pos:line="11" pos:column="44">(<argument><expr><literal type="string" pos:line="11" pos:column="45">"ORIG_HEAD"<pos:position pos:line="11" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="58"/></expr_stmt>
	<expr_stmt><expr><name pos:line="12" pos:column="9">rebase_amend<pos:position pos:line="12" pos:column="21"/></name> <operator pos:line="12" pos:column="22">=<pos:position pos:line="12" pos:column="23"/></operator> <call><name pos:line="12" pos:column="24">read_line_from_git_path<pos:position pos:line="12" pos:column="47"/></name><argument_list pos:line="12" pos:column="47">(<argument><expr><literal type="string" pos:line="12" pos:column="48">"rebase-merge/amend"<pos:position pos:line="12" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="70"/></expr_stmt>
	<expr_stmt><expr><name pos:line="13" pos:column="9">rebase_orig_head<pos:position pos:line="13" pos:column="25"/></name> <operator pos:line="13" pos:column="26">=<pos:position pos:line="13" pos:column="27"/></operator> <call><name pos:line="13" pos:column="28">read_line_from_git_path<pos:position pos:line="13" pos:column="51"/></name><argument_list pos:line="13" pos:column="51">(<argument><expr><literal type="string" pos:line="13" pos:column="52">"rebase-merge/orig-head"<pos:position pos:line="13" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="78"/></expr_stmt>

	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">!<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">head<pos:position pos:line="15" pos:column="18"/></name> <operator pos:line="15" pos:column="19">||<pos:position pos:line="15" pos:column="21"/></operator> <operator pos:line="15" pos:column="22">!<pos:position pos:line="15" pos:column="23"/></operator><name pos:line="15" pos:column="23">orig_head<pos:position pos:line="15" pos:column="32"/></name> <operator pos:line="15" pos:column="33">||<pos:position pos:line="15" pos:column="35"/></operator> <operator pos:line="15" pos:column="36">!<pos:position pos:line="15" pos:column="37"/></operator><name pos:line="15" pos:column="37">rebase_amend<pos:position pos:line="15" pos:column="49"/></name> <operator pos:line="15" pos:column="50">||<pos:position pos:line="15" pos:column="52"/></operator> <operator pos:line="15" pos:column="53">!<pos:position pos:line="15" pos:column="54"/></operator><name pos:line="15" pos:column="54">rebase_orig_head<pos:position pos:line="15" pos:column="70"/></name></expr>)<pos:position pos:line="15" pos:column="71"/></condition><then pos:line="15" pos:column="71">
		<block type="pseudo"><empty_stmt pos:line="16" pos:column="17">;<pos:position pos:line="16" pos:column="18"/></empty_stmt></block></then> <comment type="block" pos:line="16" pos:column="19">/* fall through, no split in progress */</comment>
	<elseif pos:line="17" pos:column="9">else <if pos:line="17" pos:column="14">if <condition pos:line="17" pos:column="17">(<expr><operator pos:line="17" pos:column="18">!<pos:position pos:line="17" pos:column="19"/></operator><call><name pos:line="17" pos:column="19">strcmp<pos:position pos:line="17" pos:column="25"/></name><argument_list pos:line="17" pos:column="25">(<argument><expr><name pos:line="17" pos:column="26">rebase_amend<pos:position pos:line="17" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="40">rebase_orig_head<pos:position pos:line="17" pos:column="56"/></name></expr></argument>)<pos:position pos:line="17" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="58"/></condition><then pos:line="17" pos:column="58">
		<block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="17">split_in_progress<pos:position pos:line="18" pos:column="34"/></name> <operator pos:line="18" pos:column="35">=<pos:position pos:line="18" pos:column="36"/></operator> <operator pos:line="18" pos:column="37">!<pos:position pos:line="18" pos:column="38"/></operator><operator pos:line="18" pos:column="38">!<pos:position pos:line="18" pos:column="39"/></operator><call><name pos:line="18" pos:column="39">strcmp<pos:position pos:line="18" pos:column="45"/></name><argument_list pos:line="18" pos:column="45">(<argument><expr><name pos:line="18" pos:column="46">head<pos:position pos:line="18" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="52">rebase_amend<pos:position pos:line="18" pos:column="64"/></name></expr></argument>)<pos:position pos:line="18" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="66"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="19" pos:column="9">else <if pos:line="19" pos:column="14">if <condition pos:line="19" pos:column="17">(<expr><call><name pos:line="19" pos:column="18">strcmp<pos:position pos:line="19" pos:column="24"/></name><argument_list pos:line="19" pos:column="24">(<argument><expr><name pos:line="19" pos:column="25">orig_head<pos:position pos:line="19" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="36">rebase_orig_head<pos:position pos:line="19" pos:column="52"/></name></expr></argument>)<pos:position pos:line="19" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="54"/></condition><then pos:line="19" pos:column="54">
		<block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="17">split_in_progress<pos:position pos:line="20" pos:column="34"/></name> <operator pos:line="20" pos:column="35">=<pos:position pos:line="20" pos:column="36"/></operator> <literal type="number" pos:line="20" pos:column="37">1<pos:position pos:line="20" pos:column="38"/></literal></expr>;<pos:position pos:line="20" pos:column="39"/></expr_stmt></block></then></if></elseif></if>

	<expr_stmt><expr><call><name pos:line="22" pos:column="9">free<pos:position pos:line="22" pos:column="13"/></name><argument_list pos:line="22" pos:column="13">(<argument><expr><name pos:line="22" pos:column="14">head<pos:position pos:line="22" pos:column="18"/></name></expr></argument>)<pos:position pos:line="22" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="20"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="23" pos:column="9">free<pos:position pos:line="23" pos:column="13"/></name><argument_list pos:line="23" pos:column="13">(<argument><expr><name pos:line="23" pos:column="14">orig_head<pos:position pos:line="23" pos:column="23"/></name></expr></argument>)<pos:position pos:line="23" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="24" pos:column="9">free<pos:position pos:line="24" pos:column="13"/></name><argument_list pos:line="24" pos:column="13">(<argument><expr><name pos:line="24" pos:column="14">rebase_amend<pos:position pos:line="24" pos:column="26"/></name></expr></argument>)<pos:position pos:line="24" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="25" pos:column="9">free<pos:position pos:line="25" pos:column="13"/></name><argument_list pos:line="25" pos:column="13">(<argument><expr><name pos:line="25" pos:column="14">rebase_orig_head<pos:position pos:line="25" pos:column="30"/></name></expr></argument>)<pos:position pos:line="25" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="32"/></expr_stmt>

	<return pos:line="27" pos:column="9">return <expr><name pos:line="27" pos:column="16">split_in_progress<pos:position pos:line="27" pos:column="33"/></name></expr>;<pos:position pos:line="27" pos:column="34"/></return>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2613_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">unix_stream_listen<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">path<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="41"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">fd<pos:position pos:line="3" pos:column="15"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="17">saved_errno<pos:position pos:line="3" pos:column="28"/></name></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">sockaddr_un<pos:position pos:line="4" pos:column="27"/></name></name></type> <name pos:line="4" pos:column="28">sa<pos:position pos:line="4" pos:column="30"/></name></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">unix_sockaddr_context<pos:position pos:line="5" pos:column="37"/></name></name></type> <name pos:line="5" pos:column="38">ctx<pos:position pos:line="5" pos:column="41"/></name></decl>;<pos:position pos:line="5" pos:column="42"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="7" pos:column="9">unlink<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><name pos:line="7" pos:column="16">path<pos:position pos:line="7" pos:column="20"/></name></expr></argument>)<pos:position pos:line="7" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="22"/></expr_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><call><name pos:line="9" pos:column="13">unix_sockaddr_init<pos:position pos:line="9" pos:column="31"/></name><argument_list pos:line="9" pos:column="31">(<argument><expr><operator pos:line="9" pos:column="32">&amp;<pos:position pos:line="9" pos:column="37"/></operator><name pos:line="9" pos:column="33">sa<pos:position pos:line="9" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="37">path<pos:position pos:line="9" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="43">&amp;<pos:position pos:line="9" pos:column="48"/></operator><name pos:line="9" pos:column="44">ctx<pos:position pos:line="9" pos:column="47"/></name></expr></argument>)<pos:position pos:line="9" pos:column="48"/></argument_list></call> <operator pos:line="9" pos:column="49">&lt;<pos:position pos:line="9" pos:column="53"/></operator> <literal type="number" pos:line="9" pos:column="51">0<pos:position pos:line="9" pos:column="52"/></literal></expr>)<pos:position pos:line="9" pos:column="53"/></condition><then pos:line="9" pos:column="53">
		<block type="pseudo"><return pos:line="10" pos:column="17">return <expr><operator pos:line="10" pos:column="24">-<pos:position pos:line="10" pos:column="25"/></operator><literal type="number" pos:line="10" pos:column="25">1<pos:position pos:line="10" pos:column="26"/></literal></expr>;<pos:position pos:line="10" pos:column="27"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="11" pos:column="9">fd<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <call><name pos:line="11" pos:column="14">unix_stream_socket<pos:position pos:line="11" pos:column="32"/></name><argument_list pos:line="11" pos:column="32">()<pos:position pos:line="11" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="35"/></expr_stmt>

	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><call><name pos:line="13" pos:column="13">bind<pos:position pos:line="13" pos:column="17"/></name><argument_list pos:line="13" pos:column="17">(<argument><expr><name pos:line="13" pos:column="18">fd<pos:position pos:line="13" pos:column="20"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="22">(<pos:position pos:line="13" pos:column="23"/></operator>struct <name pos:line="13" pos:column="30">sockaddr<pos:position pos:line="13" pos:column="38"/></name> <operator pos:line="13" pos:column="39">*<pos:position pos:line="13" pos:column="40"/></operator><operator pos:line="13" pos:column="40">)<pos:position pos:line="13" pos:column="41"/></operator><operator pos:line="13" pos:column="41">&amp;<pos:position pos:line="13" pos:column="46"/></operator><name pos:line="13" pos:column="42">sa<pos:position pos:line="13" pos:column="44"/></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="46">sizeof<argument_list pos:line="13" pos:column="52">(<argument><expr><name pos:line="13" pos:column="53">sa<pos:position pos:line="13" pos:column="55"/></name></expr></argument>)<pos:position pos:line="13" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="57"/></argument_list></call> <operator pos:line="13" pos:column="58">&lt;<pos:position pos:line="13" pos:column="62"/></operator> <literal type="number" pos:line="13" pos:column="60">0<pos:position pos:line="13" pos:column="61"/></literal></expr>)<pos:position pos:line="13" pos:column="62"/></condition><then pos:line="13" pos:column="62">
		<block type="pseudo"><goto pos:line="14" pos:column="17">goto <name pos:line="14" pos:column="22">fail<pos:position pos:line="14" pos:column="26"/></name>;<pos:position pos:line="14" pos:column="27"/></goto></block></then></if>

	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><call><name pos:line="16" pos:column="13">listen<pos:position pos:line="16" pos:column="19"/></name><argument_list pos:line="16" pos:column="19">(<argument><expr><name pos:line="16" pos:column="20">fd<pos:position pos:line="16" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="24">5<pos:position pos:line="16" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="26"/></argument_list></call> <operator pos:line="16" pos:column="27">&lt;<pos:position pos:line="16" pos:column="31"/></operator> <literal type="number" pos:line="16" pos:column="29">0<pos:position pos:line="16" pos:column="30"/></literal></expr>)<pos:position pos:line="16" pos:column="31"/></condition><then pos:line="16" pos:column="31">
		<block type="pseudo"><goto pos:line="17" pos:column="17">goto <name pos:line="17" pos:column="22">fail<pos:position pos:line="17" pos:column="26"/></name>;<pos:position pos:line="17" pos:column="27"/></goto></block></then></if>

	<expr_stmt><expr><call><name pos:line="19" pos:column="9">unix_sockaddr_cleanup<pos:position pos:line="19" pos:column="30"/></name><argument_list pos:line="19" pos:column="30">(<argument><expr><operator pos:line="19" pos:column="31">&amp;<pos:position pos:line="19" pos:column="36"/></operator><name pos:line="19" pos:column="32">ctx<pos:position pos:line="19" pos:column="35"/></name></expr></argument>)<pos:position pos:line="19" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="37"/></expr_stmt>
	<return pos:line="20" pos:column="9">return <expr><name pos:line="20" pos:column="16">fd<pos:position pos:line="20" pos:column="18"/></name></expr>;<pos:position pos:line="20" pos:column="19"/></return>

<label><name pos:line="22" pos:column="1">fail<pos:position pos:line="22" pos:column="5"/></name>:<pos:position pos:line="22" pos:column="6"/></label>
	<expr_stmt><expr><name pos:line="23" pos:column="9">saved_errno<pos:position pos:line="23" pos:column="20"/></name> <operator pos:line="23" pos:column="21">=<pos:position pos:line="23" pos:column="22"/></operator> <name pos:line="23" pos:column="23">errno<pos:position pos:line="23" pos:column="28"/></name></expr>;<pos:position pos:line="23" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="24" pos:column="9">unix_sockaddr_cleanup<pos:position pos:line="24" pos:column="30"/></name><argument_list pos:line="24" pos:column="30">(<argument><expr><operator pos:line="24" pos:column="31">&amp;<pos:position pos:line="24" pos:column="36"/></operator><name pos:line="24" pos:column="32">ctx<pos:position pos:line="24" pos:column="35"/></name></expr></argument>)<pos:position pos:line="24" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="25" pos:column="9">close<pos:position pos:line="25" pos:column="14"/></name><argument_list pos:line="25" pos:column="14">(<argument><expr><name pos:line="25" pos:column="15">fd<pos:position pos:line="25" pos:column="17"/></name></expr></argument>)<pos:position pos:line="25" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="19"/></expr_stmt>
	<expr_stmt><expr><name pos:line="26" pos:column="9">errno<pos:position pos:line="26" pos:column="14"/></name> <operator pos:line="26" pos:column="15">=<pos:position pos:line="26" pos:column="16"/></operator> <name pos:line="26" pos:column="17">saved_errno<pos:position pos:line="26" pos:column="28"/></name></expr>;<pos:position pos:line="26" pos:column="29"/></expr_stmt>
	<return pos:line="27" pos:column="9">return <expr><operator pos:line="27" pos:column="16">-<pos:position pos:line="27" pos:column="17"/></operator><literal type="number" pos:line="27" pos:column="17">1<pos:position pos:line="27" pos:column="18"/></literal></expr>;<pos:position pos:line="27" pos:column="19"/></return>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

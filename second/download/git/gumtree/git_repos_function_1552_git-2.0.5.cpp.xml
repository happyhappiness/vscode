<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1552_git-2.0.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">clear_delta_base_cache<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">void<pos:position pos:line="1" pos:column="33"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="34"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">unsigned<pos:position pos:line="3" pos:column="17"/></name> <name pos:line="3" pos:column="18">long<pos:position pos:line="3" pos:column="22"/></name></type> <name pos:line="3" pos:column="23">p<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
	<for pos:line="4" pos:column="9">for <control pos:line="4" pos:column="13">(<init><expr><name pos:line="4" pos:column="14">p<pos:position pos:line="4" pos:column="15"/></name> <operator pos:line="4" pos:column="16">=<pos:position pos:line="4" pos:column="17"/></operator> <literal type="number" pos:line="4" pos:column="18">0<pos:position pos:line="4" pos:column="19"/></literal></expr>;<pos:position pos:line="4" pos:column="20"/></init> <condition><expr><name pos:line="4" pos:column="21">p<pos:position pos:line="4" pos:column="22"/></name> <operator pos:line="4" pos:column="23">&lt;<pos:position pos:line="4" pos:column="27"/></operator> <name pos:line="4" pos:column="25">MAX_DELTA_CACHE<pos:position pos:line="4" pos:column="40"/></name></expr>;<pos:position pos:line="4" pos:column="41"/></condition> <incr><expr><name pos:line="4" pos:column="42">p<pos:position pos:line="4" pos:column="43"/></name><operator pos:line="4" pos:column="43">++<pos:position pos:line="4" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="4" pos:column="46"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="5" pos:column="17">release_delta_base_cache<pos:position pos:line="5" pos:column="41"/></name><argument_list pos:line="5" pos:column="41">(<argument><expr><operator pos:line="5" pos:column="42">&amp;<pos:position pos:line="5" pos:column="47"/></operator><name><name pos:line="5" pos:column="43">delta_base_cache<pos:position pos:line="5" pos:column="59"/></name><index pos:line="5" pos:column="59">[<expr><name pos:line="5" pos:column="60">p<pos:position pos:line="5" pos:column="61"/></name></expr>]<pos:position pos:line="5" pos:column="62"/></index></name></expr></argument>)<pos:position pos:line="5" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="64"/></expr_stmt></block></for>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

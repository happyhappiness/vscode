<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1330_git-2.5.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">alloc_report<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><name pos:line="1" pos:column="19">void<pos:position pos:line="1" pos:column="23"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="24"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="3" pos:column="9">REPORT<pos:position pos:line="3" pos:column="15"/></name><argument_list pos:line="3" pos:column="15">(<argument><expr><name pos:line="3" pos:column="16">blob<pos:position pos:line="3" pos:column="20"/></name></expr></argument>, <argument><expr pos:line="3" pos:column="22">struct <name pos:line="3" pos:column="29">blob<pos:position pos:line="3" pos:column="33"/></name></expr></argument>)<pos:position pos:line="3" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="4" pos:column="9">REPORT<pos:position pos:line="4" pos:column="15"/></name><argument_list pos:line="4" pos:column="15">(<argument><expr><name pos:line="4" pos:column="16">tree<pos:position pos:line="4" pos:column="20"/></name></expr></argument>, <argument><expr pos:line="4" pos:column="22">struct <name pos:line="4" pos:column="29">tree<pos:position pos:line="4" pos:column="33"/></name></expr></argument>)<pos:position pos:line="4" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="5" pos:column="9">REPORT<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><name pos:line="5" pos:column="16">commit<pos:position pos:line="5" pos:column="22"/></name></expr></argument>, <argument><expr pos:line="5" pos:column="24">struct <name pos:line="5" pos:column="31">commit<pos:position pos:line="5" pos:column="37"/></name></expr></argument>)<pos:position pos:line="5" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="6" pos:column="9">REPORT<pos:position pos:line="6" pos:column="15"/></name><argument_list pos:line="6" pos:column="15">(<argument><expr><name pos:line="6" pos:column="16">tag<pos:position pos:line="6" pos:column="19"/></name></expr></argument>, <argument><expr pos:line="6" pos:column="21">struct <name pos:line="6" pos:column="28">tag<pos:position pos:line="6" pos:column="31"/></name></expr></argument>)<pos:position pos:line="6" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="7" pos:column="9">REPORT<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><name pos:line="7" pos:column="16">object<pos:position pos:line="7" pos:column="22"/></name></expr></argument>, <argument><expr pos:line="7" pos:column="24">union <name pos:line="7" pos:column="30">any_object<pos:position pos:line="7" pos:column="40"/></name></expr></argument>)<pos:position pos:line="7" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="42"/></expr_stmt>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

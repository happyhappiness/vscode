<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5871_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_fmt_merge_msg<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">int<pos:position pos:line="1" pos:column="26"/></name></type> <name pos:line="1" pos:column="27">argc<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="33">const<pos:position pos:line="1" pos:column="38"/></specifier> <name pos:line="1" pos:column="39">char<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier><modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">argv<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="52">const<pos:position pos:line="1" pos:column="57"/></specifier> <name pos:line="1" pos:column="58">char<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">prefix<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="71"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">inpath<pos:position pos:line="3" pos:column="27"/></name> <init pos:line="3" pos:column="28">= <expr><name pos:line="3" pos:column="30">NULL<pos:position pos:line="3" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">message<pos:position pos:line="4" pos:column="28"/></name> <init pos:line="4" pos:column="29">= <expr><name pos:line="4" pos:column="31">NULL<pos:position pos:line="4" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">shortlog_len<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><operator pos:line="5" pos:column="28">-<pos:position pos:line="5" pos:column="29"/></operator><literal type="number" pos:line="5" pos:column="29">1<pos:position pos:line="5" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">option<pos:position pos:line="6" pos:column="22"/></name></name></type> <name><name pos:line="6" pos:column="23">options<pos:position pos:line="6" pos:column="30"/></name><index pos:line="6" pos:column="30">[]<pos:position pos:line="6" pos:column="32"/></index></name> <init pos:line="6" pos:column="33">= <expr><block pos:line="6" pos:column="35">{
		<expr><block pos:line="7" pos:column="17">{ <expr><name pos:line="7" pos:column="19">OPTION_INTEGER<pos:position pos:line="7" pos:column="33"/></name></expr>, <expr><literal type="number" pos:line="7" pos:column="35">0<pos:position pos:line="7" pos:column="36"/></literal></expr>, <expr><literal type="string" pos:line="7" pos:column="38">"log"<pos:position pos:line="7" pos:column="43"/></literal></expr>, <expr><operator pos:line="7" pos:column="45">&amp;<pos:position pos:line="7" pos:column="50"/></operator><name pos:line="7" pos:column="46">shortlog_len<pos:position pos:line="7" pos:column="58"/></name></expr>, <expr><call><name pos:line="7" pos:column="60">N_<pos:position pos:line="7" pos:column="62"/></name><argument_list pos:line="7" pos:column="62">(<argument><expr><literal type="string" pos:line="7" pos:column="63">"n"<pos:position pos:line="7" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="67"/></argument_list></call></expr>,
		  <expr><call><name pos:line="8" pos:column="19">N_<pos:position pos:line="8" pos:column="21"/></name><argument_list pos:line="8" pos:column="21">(<argument><expr><literal type="string" pos:line="8" pos:column="22">"populate log with at most &lt;n&gt; entries from shortlog"<pos:position pos:line="8" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="76"/></argument_list></call></expr>,
		  <expr><name pos:line="9" pos:column="19">PARSE_OPT_OPTARG<pos:position pos:line="9" pos:column="35"/></name></expr>, <expr><name pos:line="9" pos:column="37">NULL<pos:position pos:line="9" pos:column="41"/></name></expr>, <expr><name pos:line="9" pos:column="43">DEFAULT_MERGE_LOG_LEN<pos:position pos:line="9" pos:column="64"/></name></expr> }<pos:position pos:line="9" pos:column="66"/></block></expr>,
		<expr><block pos:line="10" pos:column="17">{ <expr><name pos:line="10" pos:column="19">OPTION_INTEGER<pos:position pos:line="10" pos:column="33"/></name></expr>, <expr><literal type="number" pos:line="10" pos:column="35">0<pos:position pos:line="10" pos:column="36"/></literal></expr>, <expr><literal type="string" pos:line="10" pos:column="38">"summary"<pos:position pos:line="10" pos:column="47"/></literal></expr>, <expr><operator pos:line="10" pos:column="49">&amp;<pos:position pos:line="10" pos:column="54"/></operator><name pos:line="10" pos:column="50">shortlog_len<pos:position pos:line="10" pos:column="62"/></name></expr>, <expr><call><name pos:line="10" pos:column="64">N_<pos:position pos:line="10" pos:column="66"/></name><argument_list pos:line="10" pos:column="66">(<argument><expr><literal type="string" pos:line="10" pos:column="67">"n"<pos:position pos:line="10" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="71"/></argument_list></call></expr>,
		  <expr><call><name pos:line="11" pos:column="19">N_<pos:position pos:line="11" pos:column="21"/></name><argument_list pos:line="11" pos:column="21">(<argument><expr><literal type="string" pos:line="11" pos:column="22">"alias for --log (deprecated)"<pos:position pos:line="11" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="53"/></argument_list></call></expr>,
		  <expr><name pos:line="12" pos:column="19">PARSE_OPT_OPTARG<pos:position pos:line="12" pos:column="35"/></name> <operator pos:line="12" pos:column="36">|<pos:position pos:line="12" pos:column="37"/></operator> <name pos:line="12" pos:column="38">PARSE_OPT_HIDDEN<pos:position pos:line="12" pos:column="54"/></name></expr>, <expr><name pos:line="12" pos:column="56">NULL<pos:position pos:line="12" pos:column="60"/></name></expr>,
		  <expr><name pos:line="13" pos:column="19">DEFAULT_MERGE_LOG_LEN<pos:position pos:line="13" pos:column="40"/></name></expr> }<pos:position pos:line="13" pos:column="42"/></block></expr>,
		<expr><call><name pos:line="14" pos:column="17">OPT_STRING<pos:position pos:line="14" pos:column="27"/></name><argument_list pos:line="14" pos:column="27">(<argument><expr><literal type="char" pos:line="14" pos:column="28">'m'<pos:position pos:line="14" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="33">"message"<pos:position pos:line="14" pos:column="42"/></literal></expr></argument>, <argument><expr><operator pos:line="14" pos:column="44">&amp;<pos:position pos:line="14" pos:column="49"/></operator><name pos:line="14" pos:column="45">message<pos:position pos:line="14" pos:column="52"/></name></expr></argument>, <argument><expr><call><name pos:line="14" pos:column="54">N_<pos:position pos:line="14" pos:column="56"/></name><argument_list pos:line="14" pos:column="56">(<argument><expr><literal type="string" pos:line="14" pos:column="57">"text"<pos:position pos:line="14" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="64"/></argument_list></call></expr></argument>,
			<argument><expr><call><name pos:line="15" pos:column="25">N_<pos:position pos:line="15" pos:column="27"/></name><argument_list pos:line="15" pos:column="27">(<argument><expr><literal type="string" pos:line="15" pos:column="28">"use &lt;text&gt; as start of message"<pos:position pos:line="15" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="62"/></argument_list></call></expr>,
		<expr><call><name pos:line="16" pos:column="17">OPT_FILENAME<pos:position pos:line="16" pos:column="29"/></name><argument_list pos:line="16" pos:column="29">(<argument><expr><literal type="char" pos:line="16" pos:column="30">'F'<pos:position pos:line="16" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="35">"file"<pos:position pos:line="16" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="16" pos:column="43">&amp;<pos:position pos:line="16" pos:column="48"/></operator><name pos:line="16" pos:column="44">inpath<pos:position pos:line="16" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="16" pos:column="52">N_<pos:position pos:line="16" pos:column="54"/></name><argument_list pos:line="16" pos:column="54">(<argument><expr><literal type="string" pos:line="16" pos:column="55">"file to read from"<pos:position pos:line="16" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="76"/></argument_list></call></expr>,
		<macro><name pos:line="17" pos:column="17">OPT_END<pos:position pos:line="17" pos:column="24"/></name><argument_list pos:line="17" pos:column="24">()<pos:position pos:line="17" pos:column="26"/></argument_list></macro>
	}<pos:position pos:line="18" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="18" pos:column="11"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="20" pos:column="9">FILE<pos:position pos:line="20" pos:column="13"/></name> <modifier pos:line="20" pos:column="14">*<pos:position pos:line="20" pos:column="15"/></modifier></type><name pos:line="20" pos:column="15">in<pos:position pos:line="20" pos:column="17"/></name> <init pos:line="20" pos:column="18">= <expr><name pos:line="20" pos:column="20">stdin<pos:position pos:line="20" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="20" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="21" pos:column="9">struct<pos:position pos:line="21" pos:column="15"/></name> <name pos:line="21" pos:column="16">strbuf<pos:position pos:line="21" pos:column="22"/></name></name></type> <name pos:line="21" pos:column="23">input<pos:position pos:line="21" pos:column="28"/></name> <init pos:line="21" pos:column="29">= <expr><name pos:line="21" pos:column="31">STRBUF_INIT<pos:position pos:line="21" pos:column="42"/></name></expr></init></decl>, <decl><type ref="prev"/><name pos:line="21" pos:column="44">output<pos:position pos:line="21" pos:column="50"/></name> <init pos:line="21" pos:column="51">= <expr><name pos:line="21" pos:column="53">STRBUF_INIT<pos:position pos:line="21" pos:column="64"/></name></expr></init></decl>;<pos:position pos:line="21" pos:column="65"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="22" pos:column="9">int<pos:position pos:line="22" pos:column="12"/></name></type> <name pos:line="22" pos:column="13">ret<pos:position pos:line="22" pos:column="16"/></name></decl>;<pos:position pos:line="22" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="23" pos:column="9">struct<pos:position pos:line="23" pos:column="15"/></name> <name pos:line="23" pos:column="16">fmt_merge_msg_opts<pos:position pos:line="23" pos:column="34"/></name></name></type> <name pos:line="23" pos:column="35">opts<pos:position pos:line="23" pos:column="39"/></name></decl>;<pos:position pos:line="23" pos:column="40"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="25" pos:column="9">git_config<pos:position pos:line="25" pos:column="19"/></name><argument_list pos:line="25" pos:column="19">(<argument><expr><name pos:line="25" pos:column="20">fmt_merge_msg_config<pos:position pos:line="25" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="42">NULL<pos:position pos:line="25" pos:column="46"/></name></expr></argument>)<pos:position pos:line="25" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="48"/></expr_stmt>
	<expr_stmt><expr><name pos:line="26" pos:column="9">argc<pos:position pos:line="26" pos:column="13"/></name> <operator pos:line="26" pos:column="14">=<pos:position pos:line="26" pos:column="15"/></operator> <call><name pos:line="26" pos:column="16">parse_options<pos:position pos:line="26" pos:column="29"/></name><argument_list pos:line="26" pos:column="29">(<argument><expr><name pos:line="26" pos:column="30">argc<pos:position pos:line="26" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="36">argv<pos:position pos:line="26" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="42">prefix<pos:position pos:line="26" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="50">options<pos:position pos:line="26" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="59">fmt_merge_msg_usage<pos:position pos:line="26" pos:column="78"/></name></expr></argument>,
			     <argument><expr><literal type="number" pos:line="27" pos:column="30">0<pos:position pos:line="27" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="33"/></expr_stmt>
	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name pos:line="28" pos:column="13">argc<pos:position pos:line="28" pos:column="17"/></name> <operator pos:line="28" pos:column="18">&gt;<pos:position pos:line="28" pos:column="22"/></operator> <literal type="number" pos:line="28" pos:column="20">0<pos:position pos:line="28" pos:column="21"/></literal></expr>)<pos:position pos:line="28" pos:column="22"/></condition><then pos:line="28" pos:column="22">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="17">usage_with_options<pos:position pos:line="29" pos:column="35"/></name><argument_list pos:line="29" pos:column="35">(<argument><expr><name pos:line="29" pos:column="36">fmt_merge_msg_usage<pos:position pos:line="29" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="57">options<pos:position pos:line="29" pos:column="64"/></name></expr></argument>)<pos:position pos:line="29" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="66"/></expr_stmt></block></then></if>
	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name pos:line="30" pos:column="13">shortlog_len<pos:position pos:line="30" pos:column="25"/></name> <operator pos:line="30" pos:column="26">&lt;<pos:position pos:line="30" pos:column="30"/></operator> <literal type="number" pos:line="30" pos:column="28">0<pos:position pos:line="30" pos:column="29"/></literal></expr>)<pos:position pos:line="30" pos:column="30"/></condition><then pos:line="30" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="17">shortlog_len<pos:position pos:line="31" pos:column="29"/></name> <operator pos:line="31" pos:column="30">=<pos:position pos:line="31" pos:column="31"/></operator> <ternary><condition><expr><operator pos:line="31" pos:column="32">(<pos:position pos:line="31" pos:column="33"/></operator><name pos:line="31" pos:column="33">merge_log_config<pos:position pos:line="31" pos:column="49"/></name> <operator pos:line="31" pos:column="50">&gt;<pos:position pos:line="31" pos:column="54"/></operator> <literal type="number" pos:line="31" pos:column="52">0<pos:position pos:line="31" pos:column="53"/></literal><operator pos:line="31" pos:column="53">)<pos:position pos:line="31" pos:column="54"/></operator></expr> ?<pos:position pos:line="31" pos:column="56"/></condition><then pos:line="31" pos:column="56"> <expr><name pos:line="31" pos:column="57">merge_log_config<pos:position pos:line="31" pos:column="73"/></name></expr> <pos:position pos:line="31" pos:column="74"/></then><else pos:line="31" pos:column="74">: <expr><literal type="number" pos:line="31" pos:column="76">0<pos:position pos:line="31" pos:column="77"/></literal></expr></else></ternary></expr>;<pos:position pos:line="31" pos:column="78"/></expr_stmt></block></then></if>

	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name pos:line="33" pos:column="13">inpath<pos:position pos:line="33" pos:column="19"/></name> <operator pos:line="33" pos:column="20">&amp;&amp;<pos:position pos:line="33" pos:column="30"/></operator> <call><name pos:line="33" pos:column="23">strcmp<pos:position pos:line="33" pos:column="29"/></name><argument_list pos:line="33" pos:column="29">(<argument><expr><name pos:line="33" pos:column="30">inpath<pos:position pos:line="33" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="38">"-"<pos:position pos:line="33" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="43"/></condition><then pos:line="33" pos:column="43"> <block pos:line="33" pos:column="44">{
		<expr_stmt><expr><name pos:line="34" pos:column="17">in<pos:position pos:line="34" pos:column="19"/></name> <operator pos:line="34" pos:column="20">=<pos:position pos:line="34" pos:column="21"/></operator> <call><name pos:line="34" pos:column="22">fopen<pos:position pos:line="34" pos:column="27"/></name><argument_list pos:line="34" pos:column="27">(<argument><expr><name pos:line="34" pos:column="28">inpath<pos:position pos:line="34" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="36">"r"<pos:position pos:line="34" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="41"/></expr_stmt>
		<if pos:line="35" pos:column="17">if <condition pos:line="35" pos:column="20">(<expr><operator pos:line="35" pos:column="21">!<pos:position pos:line="35" pos:column="22"/></operator><name pos:line="35" pos:column="22">in<pos:position pos:line="35" pos:column="24"/></name></expr>)<pos:position pos:line="35" pos:column="25"/></condition><then pos:line="35" pos:column="25">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="25">die_errno<pos:position pos:line="36" pos:column="34"/></name><argument_list pos:line="36" pos:column="34">(<argument><expr><literal type="string" pos:line="36" pos:column="35">"cannot open '%s'"<pos:position pos:line="36" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="55">inpath<pos:position pos:line="36" pos:column="61"/></name></expr></argument>)<pos:position pos:line="36" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="63"/></expr_stmt></block></then></if>
	}<pos:position pos:line="37" pos:column="10"/></block></then></if>

	<if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><call><name pos:line="39" pos:column="13">strbuf_read<pos:position pos:line="39" pos:column="24"/></name><argument_list pos:line="39" pos:column="24">(<argument><expr><operator pos:line="39" pos:column="25">&amp;<pos:position pos:line="39" pos:column="30"/></operator><name pos:line="39" pos:column="26">input<pos:position pos:line="39" pos:column="31"/></name></expr></argument>, <argument><expr><call><name pos:line="39" pos:column="33">fileno<pos:position pos:line="39" pos:column="39"/></name><argument_list pos:line="39" pos:column="39">(<argument><expr><name pos:line="39" pos:column="40">in<pos:position pos:line="39" pos:column="42"/></name></expr></argument>)<pos:position pos:line="39" pos:column="43"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="45">0<pos:position pos:line="39" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="47"/></argument_list></call> <operator pos:line="39" pos:column="48">&lt;<pos:position pos:line="39" pos:column="52"/></operator> <literal type="number" pos:line="39" pos:column="50">0<pos:position pos:line="39" pos:column="51"/></literal></expr>)<pos:position pos:line="39" pos:column="52"/></condition><then pos:line="39" pos:column="52">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="17">die_errno<pos:position pos:line="40" pos:column="26"/></name><argument_list pos:line="40" pos:column="26">(<argument><expr><literal type="string" pos:line="40" pos:column="27">"could not read input file"<pos:position pos:line="40" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="56"/></expr_stmt></block></then></if>

	<if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><name pos:line="42" pos:column="13">message<pos:position pos:line="42" pos:column="20"/></name></expr>)<pos:position pos:line="42" pos:column="21"/></condition><then pos:line="42" pos:column="21">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="43" pos:column="17">strbuf_addstr<pos:position pos:line="43" pos:column="30"/></name><argument_list pos:line="43" pos:column="30">(<argument><expr><operator pos:line="43" pos:column="31">&amp;<pos:position pos:line="43" pos:column="36"/></operator><name pos:line="43" pos:column="32">output<pos:position pos:line="43" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="40">message<pos:position pos:line="43" pos:column="47"/></name></expr></argument>)<pos:position pos:line="43" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="49"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="45" pos:column="9">memset<pos:position pos:line="45" pos:column="15"/></name><argument_list pos:line="45" pos:column="15">(<argument><expr><operator pos:line="45" pos:column="16">&amp;<pos:position pos:line="45" pos:column="21"/></operator><name pos:line="45" pos:column="17">opts<pos:position pos:line="45" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="23">0<pos:position pos:line="45" pos:column="24"/></literal></expr></argument>, <argument><expr><sizeof pos:line="45" pos:column="26">sizeof<argument_list pos:line="45" pos:column="32">(<argument><expr><name pos:line="45" pos:column="33">opts<pos:position pos:line="45" pos:column="37"/></name></expr></argument>)<pos:position pos:line="45" pos:column="38"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="45" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="46" pos:column="9">opts<pos:position pos:line="46" pos:column="13"/></name><operator pos:line="46" pos:column="13">.<pos:position pos:line="46" pos:column="14"/></operator><name pos:line="46" pos:column="14">add_title<pos:position pos:line="46" pos:column="23"/></name></name> <operator pos:line="46" pos:column="24">=<pos:position pos:line="46" pos:column="25"/></operator> <operator pos:line="46" pos:column="26">!<pos:position pos:line="46" pos:column="27"/></operator><name pos:line="46" pos:column="27">message<pos:position pos:line="46" pos:column="34"/></name></expr>;<pos:position pos:line="46" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="47" pos:column="9">opts<pos:position pos:line="47" pos:column="13"/></name><operator pos:line="47" pos:column="13">.<pos:position pos:line="47" pos:column="14"/></operator><name pos:line="47" pos:column="14">credit_people<pos:position pos:line="47" pos:column="27"/></name></name> <operator pos:line="47" pos:column="28">=<pos:position pos:line="47" pos:column="29"/></operator> <literal type="number" pos:line="47" pos:column="30">1<pos:position pos:line="47" pos:column="31"/></literal></expr>;<pos:position pos:line="47" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="48" pos:column="9">opts<pos:position pos:line="48" pos:column="13"/></name><operator pos:line="48" pos:column="13">.<pos:position pos:line="48" pos:column="14"/></operator><name pos:line="48" pos:column="14">shortlog_len<pos:position pos:line="48" pos:column="26"/></name></name> <operator pos:line="48" pos:column="27">=<pos:position pos:line="48" pos:column="28"/></operator> <name pos:line="48" pos:column="29">shortlog_len<pos:position pos:line="48" pos:column="41"/></name></expr>;<pos:position pos:line="48" pos:column="42"/></expr_stmt>

	<expr_stmt><expr><name pos:line="50" pos:column="9">ret<pos:position pos:line="50" pos:column="12"/></name> <operator pos:line="50" pos:column="13">=<pos:position pos:line="50" pos:column="14"/></operator> <call><name pos:line="50" pos:column="15">fmt_merge_msg<pos:position pos:line="50" pos:column="28"/></name><argument_list pos:line="50" pos:column="28">(<argument><expr><operator pos:line="50" pos:column="29">&amp;<pos:position pos:line="50" pos:column="34"/></operator><name pos:line="50" pos:column="30">input<pos:position pos:line="50" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="37">&amp;<pos:position pos:line="50" pos:column="42"/></operator><name pos:line="50" pos:column="38">output<pos:position pos:line="50" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="46">&amp;<pos:position pos:line="50" pos:column="51"/></operator><name pos:line="50" pos:column="47">opts<pos:position pos:line="50" pos:column="51"/></name></expr></argument>)<pos:position pos:line="50" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="53"/></expr_stmt>
	<if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><name pos:line="51" pos:column="13">ret<pos:position pos:line="51" pos:column="16"/></name></expr>)<pos:position pos:line="51" pos:column="17"/></condition><then pos:line="51" pos:column="17">
		<block type="pseudo"><return pos:line="52" pos:column="17">return <expr><name pos:line="52" pos:column="24">ret<pos:position pos:line="52" pos:column="27"/></name></expr>;<pos:position pos:line="52" pos:column="28"/></return></block></then></if>
	<expr_stmt><expr><call><name pos:line="53" pos:column="9">write_in_full<pos:position pos:line="53" pos:column="22"/></name><argument_list pos:line="53" pos:column="22">(<argument><expr><name pos:line="53" pos:column="23">STDOUT_FILENO<pos:position pos:line="53" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="38">output<pos:position pos:line="53" pos:column="44"/></name><operator pos:line="53" pos:column="44">.<pos:position pos:line="53" pos:column="45"/></operator><name pos:line="53" pos:column="45">buf<pos:position pos:line="53" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="50">output<pos:position pos:line="53" pos:column="56"/></name><operator pos:line="53" pos:column="56">.<pos:position pos:line="53" pos:column="57"/></operator><name pos:line="53" pos:column="57">len<pos:position pos:line="53" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="62"/></expr_stmt>
	<return pos:line="54" pos:column="9">return <expr><literal type="number" pos:line="54" pos:column="16">0<pos:position pos:line="54" pos:column="17"/></literal></expr>;<pos:position pos:line="54" pos:column="18"/></return>
}<pos:position pos:line="55" pos:column="2"/></block></function></unit>

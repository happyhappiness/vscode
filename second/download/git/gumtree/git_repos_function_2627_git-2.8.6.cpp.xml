<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2627_git-2.8.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">read_convert_config<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><specifier pos:line="1" pos:column="32">const<pos:position pos:line="1" pos:column="37"/></specifier> <name pos:line="1" pos:column="38">char<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">var<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="49">const<pos:position pos:line="1" pos:column="54"/></specifier> <name pos:line="1" pos:column="55">char<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">value<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="68">void<pos:position pos:line="1" pos:column="72"/></name> <modifier pos:line="1" pos:column="73">*<pos:position pos:line="1" pos:column="74"/></modifier></type><name pos:line="1" pos:column="74">cb<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="77"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">key<pos:position pos:line="3" pos:column="24"/></name></decl>, <modifier pos:line="3" pos:column="26">*<pos:position pos:line="3" pos:column="27"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="27">name<pos:position pos:line="3" pos:column="31"/></name></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">namelen<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">convert_driver<pos:position pos:line="5" pos:column="30"/></name></name> <modifier pos:line="5" pos:column="31">*<pos:position pos:line="5" pos:column="32"/></modifier></type><name pos:line="5" pos:column="32">drv<pos:position pos:line="5" pos:column="35"/></name></decl>;<pos:position pos:line="5" pos:column="36"/></decl_stmt>

	<comment type="block" pos:line="7" pos:column="9">/*
	 * External conversion drivers are configured using
	 * "filter.&lt;name&gt;.variable".
	 */</comment>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><call><name pos:line="11" pos:column="13">parse_config_key<pos:position pos:line="11" pos:column="29"/></name><argument_list pos:line="11" pos:column="29">(<argument><expr><name pos:line="11" pos:column="30">var<pos:position pos:line="11" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="35">"filter"<pos:position pos:line="11" pos:column="43"/></literal></expr></argument>, <argument><expr><operator pos:line="11" pos:column="45">&amp;<pos:position pos:line="11" pos:column="50"/></operator><name pos:line="11" pos:column="46">name<pos:position pos:line="11" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="52">&amp;<pos:position pos:line="11" pos:column="57"/></operator><name pos:line="11" pos:column="53">namelen<pos:position pos:line="11" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="62">&amp;<pos:position pos:line="11" pos:column="67"/></operator><name pos:line="11" pos:column="63">key<pos:position pos:line="11" pos:column="66"/></name></expr></argument>)<pos:position pos:line="11" pos:column="67"/></argument_list></call> <operator pos:line="11" pos:column="68">&lt;<pos:position pos:line="11" pos:column="72"/></operator> <literal type="number" pos:line="11" pos:column="70">0<pos:position pos:line="11" pos:column="71"/></literal> <operator pos:line="11" pos:column="72">||<pos:position pos:line="11" pos:column="74"/></operator> <operator pos:line="11" pos:column="75">!<pos:position pos:line="11" pos:column="76"/></operator><name pos:line="11" pos:column="76">name<pos:position pos:line="11" pos:column="80"/></name></expr>)<pos:position pos:line="11" pos:column="81"/></condition><then pos:line="11" pos:column="81">
		<block type="pseudo"><return pos:line="12" pos:column="17">return <expr><literal type="number" pos:line="12" pos:column="24">0<pos:position pos:line="12" pos:column="25"/></literal></expr>;<pos:position pos:line="12" pos:column="26"/></return></block></then></if>
	<for pos:line="13" pos:column="9">for <control pos:line="13" pos:column="13">(<init><expr><name pos:line="13" pos:column="14">drv<pos:position pos:line="13" pos:column="17"/></name> <operator pos:line="13" pos:column="18">=<pos:position pos:line="13" pos:column="19"/></operator> <name pos:line="13" pos:column="20">user_convert<pos:position pos:line="13" pos:column="32"/></name></expr>;<pos:position pos:line="13" pos:column="33"/></init> <condition><expr><name pos:line="13" pos:column="34">drv<pos:position pos:line="13" pos:column="37"/></name></expr>;<pos:position pos:line="13" pos:column="38"/></condition> <incr><expr><name pos:line="13" pos:column="39">drv<pos:position pos:line="13" pos:column="42"/></name> <operator pos:line="13" pos:column="43">=<pos:position pos:line="13" pos:column="44"/></operator> <name><name pos:line="13" pos:column="45">drv<pos:position pos:line="13" pos:column="48"/></name><operator pos:line="13" pos:column="48">-&gt;<pos:position pos:line="13" pos:column="53"/></operator><name pos:line="13" pos:column="50">next<pos:position pos:line="13" pos:column="54"/></name></name></expr></incr>)<pos:position pos:line="13" pos:column="55"/></control>
		<block type="pseudo"><if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><operator pos:line="14" pos:column="21">!<pos:position pos:line="14" pos:column="22"/></operator><call><name pos:line="14" pos:column="22">strncmp<pos:position pos:line="14" pos:column="29"/></name><argument_list pos:line="14" pos:column="29">(<argument><expr><name><name pos:line="14" pos:column="30">drv<pos:position pos:line="14" pos:column="33"/></name><operator pos:line="14" pos:column="33">-&gt;<pos:position pos:line="14" pos:column="38"/></operator><name pos:line="14" pos:column="35">name<pos:position pos:line="14" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="41">name<pos:position pos:line="14" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="47">namelen<pos:position pos:line="14" pos:column="54"/></name></expr></argument>)<pos:position pos:line="14" pos:column="55"/></argument_list></call> <operator pos:line="14" pos:column="56">&amp;&amp;<pos:position pos:line="14" pos:column="66"/></operator> <operator pos:line="14" pos:column="59">!<pos:position pos:line="14" pos:column="60"/></operator><name><name pos:line="14" pos:column="60">drv<pos:position pos:line="14" pos:column="63"/></name><operator pos:line="14" pos:column="63">-&gt;<pos:position pos:line="14" pos:column="68"/></operator><name pos:line="14" pos:column="65">name<pos:position pos:line="14" pos:column="69"/></name><index pos:line="14" pos:column="69">[<expr><name pos:line="14" pos:column="70">namelen<pos:position pos:line="14" pos:column="77"/></name></expr>]<pos:position pos:line="14" pos:column="78"/></index></name></expr>)<pos:position pos:line="14" pos:column="79"/></condition><then pos:line="14" pos:column="79">
			<block type="pseudo"><break pos:line="15" pos:column="25">break;<pos:position pos:line="15" pos:column="31"/></break></block></then></if></block></for>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><operator pos:line="16" pos:column="13">!<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="14">drv<pos:position pos:line="16" pos:column="17"/></name></expr>)<pos:position pos:line="16" pos:column="18"/></condition><then pos:line="16" pos:column="18"> <block pos:line="16" pos:column="19">{
		<expr_stmt><expr><name pos:line="17" pos:column="17">drv<pos:position pos:line="17" pos:column="20"/></name> <operator pos:line="17" pos:column="21">=<pos:position pos:line="17" pos:column="22"/></operator> <call><name pos:line="17" pos:column="23">xcalloc<pos:position pos:line="17" pos:column="30"/></name><argument_list pos:line="17" pos:column="30">(<argument><expr><literal type="number" pos:line="17" pos:column="31">1<pos:position pos:line="17" pos:column="32"/></literal></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="34">sizeof<argument_list pos:line="17" pos:column="40">(<argument><expr pos:line="17" pos:column="41">struct <name pos:line="17" pos:column="48">convert_driver<pos:position pos:line="17" pos:column="62"/></name></expr></argument>)<pos:position pos:line="17" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="65"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="18" pos:column="17">drv<pos:position pos:line="18" pos:column="20"/></name><operator pos:line="18" pos:column="20">-&gt;<pos:position pos:line="18" pos:column="25"/></operator><name pos:line="18" pos:column="22">name<pos:position pos:line="18" pos:column="26"/></name></name> <operator pos:line="18" pos:column="27">=<pos:position pos:line="18" pos:column="28"/></operator> <call><name pos:line="18" pos:column="29">xmemdupz<pos:position pos:line="18" pos:column="37"/></name><argument_list pos:line="18" pos:column="37">(<argument><expr><name pos:line="18" pos:column="38">name<pos:position pos:line="18" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="44">namelen<pos:position pos:line="18" pos:column="51"/></name></expr></argument>)<pos:position pos:line="18" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="53"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="19" pos:column="17">*<pos:position pos:line="19" pos:column="18"/></operator><name pos:line="19" pos:column="18">user_convert_tail<pos:position pos:line="19" pos:column="35"/></name> <operator pos:line="19" pos:column="36">=<pos:position pos:line="19" pos:column="37"/></operator> <name pos:line="19" pos:column="38">drv<pos:position pos:line="19" pos:column="41"/></name></expr>;<pos:position pos:line="19" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><name pos:line="20" pos:column="17">user_convert_tail<pos:position pos:line="20" pos:column="34"/></name> <operator pos:line="20" pos:column="35">=<pos:position pos:line="20" pos:column="36"/></operator> <operator pos:line="20" pos:column="37">&amp;<pos:position pos:line="20" pos:column="42"/></operator><operator pos:line="20" pos:column="38">(<pos:position pos:line="20" pos:column="39"/></operator><name><name pos:line="20" pos:column="39">drv<pos:position pos:line="20" pos:column="42"/></name><operator pos:line="20" pos:column="42">-&gt;<pos:position pos:line="20" pos:column="47"/></operator><name pos:line="20" pos:column="44">next<pos:position pos:line="20" pos:column="48"/></name></name><operator pos:line="20" pos:column="48">)<pos:position pos:line="20" pos:column="49"/></operator></expr>;<pos:position pos:line="20" pos:column="50"/></expr_stmt>
	}<pos:position pos:line="21" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="23" pos:column="9">/*
	 * filter.&lt;name&gt;.smudge and filter.&lt;name&gt;.clean specifies
	 * the command line:
	 *
	 *	command-line
	 *
	 * The command-line will not be interpolated in any way.
	 */</comment>

	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><operator pos:line="32" pos:column="13">!<pos:position pos:line="32" pos:column="14"/></operator><call><name pos:line="32" pos:column="14">strcmp<pos:position pos:line="32" pos:column="20"/></name><argument_list pos:line="32" pos:column="20">(<argument><expr><literal type="string" pos:line="32" pos:column="21">"smudge"<pos:position pos:line="32" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="31">key<pos:position pos:line="32" pos:column="34"/></name></expr></argument>)<pos:position pos:line="32" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="36"/></condition><then pos:line="32" pos:column="36">
		<block type="pseudo"><return pos:line="33" pos:column="17">return <expr><call><name pos:line="33" pos:column="24">git_config_string<pos:position pos:line="33" pos:column="41"/></name><argument_list pos:line="33" pos:column="41">(<argument><expr><operator pos:line="33" pos:column="42">&amp;<pos:position pos:line="33" pos:column="47"/></operator><name><name pos:line="33" pos:column="43">drv<pos:position pos:line="33" pos:column="46"/></name><operator pos:line="33" pos:column="46">-&gt;<pos:position pos:line="33" pos:column="51"/></operator><name pos:line="33" pos:column="48">smudge<pos:position pos:line="33" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="56">var<pos:position pos:line="33" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="61">value<pos:position pos:line="33" pos:column="66"/></name></expr></argument>)<pos:position pos:line="33" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="68"/></return></block></then></if>

	<if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><operator pos:line="35" pos:column="13">!<pos:position pos:line="35" pos:column="14"/></operator><call><name pos:line="35" pos:column="14">strcmp<pos:position pos:line="35" pos:column="20"/></name><argument_list pos:line="35" pos:column="20">(<argument><expr><literal type="string" pos:line="35" pos:column="21">"clean"<pos:position pos:line="35" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="30">key<pos:position pos:line="35" pos:column="33"/></name></expr></argument>)<pos:position pos:line="35" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="35"/></condition><then pos:line="35" pos:column="35">
		<block type="pseudo"><return pos:line="36" pos:column="17">return <expr><call><name pos:line="36" pos:column="24">git_config_string<pos:position pos:line="36" pos:column="41"/></name><argument_list pos:line="36" pos:column="41">(<argument><expr><operator pos:line="36" pos:column="42">&amp;<pos:position pos:line="36" pos:column="47"/></operator><name><name pos:line="36" pos:column="43">drv<pos:position pos:line="36" pos:column="46"/></name><operator pos:line="36" pos:column="46">-&gt;<pos:position pos:line="36" pos:column="51"/></operator><name pos:line="36" pos:column="48">clean<pos:position pos:line="36" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="55">var<pos:position pos:line="36" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="60">value<pos:position pos:line="36" pos:column="65"/></name></expr></argument>)<pos:position pos:line="36" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="67"/></return></block></then></if>

	<if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><operator pos:line="38" pos:column="13">!<pos:position pos:line="38" pos:column="14"/></operator><call><name pos:line="38" pos:column="14">strcmp<pos:position pos:line="38" pos:column="20"/></name><argument_list pos:line="38" pos:column="20">(<argument><expr><literal type="string" pos:line="38" pos:column="21">"required"<pos:position pos:line="38" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="33">key<pos:position pos:line="38" pos:column="36"/></name></expr></argument>)<pos:position pos:line="38" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="38"/></condition><then pos:line="38" pos:column="38"> <block pos:line="38" pos:column="39">{
		<expr_stmt><expr><name><name pos:line="39" pos:column="17">drv<pos:position pos:line="39" pos:column="20"/></name><operator pos:line="39" pos:column="20">-&gt;<pos:position pos:line="39" pos:column="25"/></operator><name pos:line="39" pos:column="22">required<pos:position pos:line="39" pos:column="30"/></name></name> <operator pos:line="39" pos:column="31">=<pos:position pos:line="39" pos:column="32"/></operator> <call><name pos:line="39" pos:column="33">git_config_bool<pos:position pos:line="39" pos:column="48"/></name><argument_list pos:line="39" pos:column="48">(<argument><expr><name pos:line="39" pos:column="49">var<pos:position pos:line="39" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="54">value<pos:position pos:line="39" pos:column="59"/></name></expr></argument>)<pos:position pos:line="39" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="61"/></expr_stmt>
		<return pos:line="40" pos:column="17">return <expr><literal type="number" pos:line="40" pos:column="24">0<pos:position pos:line="40" pos:column="25"/></literal></expr>;<pos:position pos:line="40" pos:column="26"/></return>
	}<pos:position pos:line="41" pos:column="10"/></block></then></if>

	<return pos:line="43" pos:column="9">return <expr><literal type="number" pos:line="43" pos:column="16">0<pos:position pos:line="43" pos:column="17"/></literal></expr>;<pos:position pos:line="43" pos:column="18"/></return>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1538.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">prune_remote<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">remote<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">int<pos:position pos:line="1" pos:column="48"/></name></type> <name pos:line="1" pos:column="49">dry_run<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">result<pos:position pos:line="3" pos:column="19"/></name> <init pos:line="3" pos:column="20">= <expr><literal type="number" pos:line="3" pos:column="22">0<pos:position pos:line="3" pos:column="23"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="25">i<pos:position pos:line="3" pos:column="26"/></name></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">ref_states<pos:position pos:line="4" pos:column="26"/></name></name></type> <name pos:line="4" pos:column="27">states<pos:position pos:line="4" pos:column="33"/></name></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">string_list<pos:position pos:line="5" pos:column="27"/></name></name></type> <name pos:line="5" pos:column="28">delete_refs_list<pos:position pos:line="5" pos:column="44"/></name> <init pos:line="5" pos:column="45">= <expr><name pos:line="5" pos:column="47">STRING_LIST_INIT_NODUP<pos:position pos:line="5" pos:column="69"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="70"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier><modifier pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></modifier></type><name pos:line="6" pos:column="22">delete_refs<pos:position pos:line="6" pos:column="33"/></name></decl>;<pos:position pos:line="6" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name pos:line="7" pos:column="15">char<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">dangling_msg<pos:position pos:line="7" pos:column="33"/></name> <init pos:line="7" pos:column="34">= <expr><ternary><condition><expr><name pos:line="7" pos:column="36">dry_run<pos:position pos:line="7" pos:column="43"/></name></expr>
		?<pos:position pos:line="8" pos:column="18"/></condition><then pos:line="8" pos:column="18"> <expr><call><name pos:line="8" pos:column="19">_<pos:position pos:line="8" pos:column="20"/></name><argument_list pos:line="8" pos:column="20">(<argument><expr><literal type="string" pos:line="8" pos:column="21">" %s will become dangling!"<pos:position pos:line="8" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="49"/></argument_list></call></expr>
		<pos:position pos:line="9" pos:column="3"/></then><else pos:line="9" pos:column="17">: <expr><call><name pos:line="9" pos:column="19">_<pos:position pos:line="9" pos:column="20"/></name><argument_list pos:line="9" pos:column="20">(<argument><expr><literal type="string" pos:line="9" pos:column="21">" %s has become dangling!"<pos:position pos:line="9" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="48"/></argument_list></call></expr></else></ternary></expr></init></decl>;<pos:position pos:line="9" pos:column="49"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="11" pos:column="9">memset<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><operator pos:line="11" pos:column="16">&amp;<pos:position pos:line="11" pos:column="21"/></operator><name pos:line="11" pos:column="17">states<pos:position pos:line="11" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="25">0<pos:position pos:line="11" pos:column="26"/></literal></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="28">sizeof<argument_list pos:line="11" pos:column="34">(<argument><expr><name pos:line="11" pos:column="35">states<pos:position pos:line="11" pos:column="41"/></name></expr></argument>)<pos:position pos:line="11" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="12" pos:column="9">get_remote_ref_states<pos:position pos:line="12" pos:column="30"/></name><argument_list pos:line="12" pos:column="30">(<argument><expr><name pos:line="12" pos:column="31">remote<pos:position pos:line="12" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="39">&amp;<pos:position pos:line="12" pos:column="44"/></operator><name pos:line="12" pos:column="40">states<pos:position pos:line="12" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="48">GET_REF_STATES<pos:position pos:line="12" pos:column="62"/></name></expr></argument>)<pos:position pos:line="12" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="64"/></expr_stmt>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name><name pos:line="14" pos:column="13">states<pos:position pos:line="14" pos:column="19"/></name><operator pos:line="14" pos:column="19">.<pos:position pos:line="14" pos:column="20"/></operator><name pos:line="14" pos:column="20">stale<pos:position pos:line="14" pos:column="25"/></name><operator pos:line="14" pos:column="25">.<pos:position pos:line="14" pos:column="26"/></operator><name pos:line="14" pos:column="26">nr<pos:position pos:line="14" pos:column="28"/></name></name></expr>)<pos:position pos:line="14" pos:column="29"/></condition><then pos:line="14" pos:column="29"> <block pos:line="14" pos:column="30">{
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">printf_ln<pos:position pos:line="15" pos:column="26"/></name><argument_list pos:line="15" pos:column="26">(<argument><expr><call><name pos:line="15" pos:column="27">_<pos:position pos:line="15" pos:column="28"/></name><argument_list pos:line="15" pos:column="28">(<argument><expr><literal type="string" pos:line="15" pos:column="29">"Pruning %s"<pos:position pos:line="15" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="42"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="15" pos:column="44">remote<pos:position pos:line="15" pos:column="50"/></name></expr></argument>)<pos:position pos:line="15" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">printf_ln<pos:position pos:line="16" pos:column="26"/></name><argument_list pos:line="16" pos:column="26">(<argument><expr><call><name pos:line="16" pos:column="27">_<pos:position pos:line="16" pos:column="28"/></name><argument_list pos:line="16" pos:column="28">(<argument><expr><literal type="string" pos:line="16" pos:column="29">"URL: %s"<pos:position pos:line="16" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="39"/></argument_list></call></expr></argument>,
		       <argument><expr><ternary><condition><expr><name><name pos:line="17" pos:column="24">states<pos:position pos:line="17" pos:column="30"/></name><operator pos:line="17" pos:column="30">.<pos:position pos:line="17" pos:column="31"/></operator><name pos:line="17" pos:column="31">remote<pos:position pos:line="17" pos:column="37"/></name><operator pos:line="17" pos:column="37">-&gt;<pos:position pos:line="17" pos:column="42"/></operator><name pos:line="17" pos:column="39">url_nr<pos:position pos:line="17" pos:column="45"/></name></name></expr>
		       ?<pos:position pos:line="18" pos:column="25"/></condition><then pos:line="18" pos:column="25"> <expr><name><name pos:line="18" pos:column="26">states<pos:position pos:line="18" pos:column="32"/></name><operator pos:line="18" pos:column="32">.<pos:position pos:line="18" pos:column="33"/></operator><name pos:line="18" pos:column="33">remote<pos:position pos:line="18" pos:column="39"/></name><operator pos:line="18" pos:column="39">-&gt;<pos:position pos:line="18" pos:column="44"/></operator><name pos:line="18" pos:column="41">url<pos:position pos:line="18" pos:column="44"/></name><index pos:line="18" pos:column="44">[<expr><literal type="number" pos:line="18" pos:column="45">0<pos:position pos:line="18" pos:column="46"/></literal></expr>]<pos:position pos:line="18" pos:column="47"/></index></name></expr>
		       <pos:position pos:line="19" pos:column="10"/></then><else pos:line="19" pos:column="24">: <expr><call><name pos:line="19" pos:column="26">_<pos:position pos:line="19" pos:column="27"/></name><argument_list pos:line="19" pos:column="27">(<argument><expr><literal type="string" pos:line="19" pos:column="28">"(no URL)"<pos:position pos:line="19" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="39"/></argument_list></call></expr></else></ternary></expr></argument>)<pos:position pos:line="19" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="41"/></expr_stmt>

		<expr_stmt><expr><name pos:line="21" pos:column="17">delete_refs<pos:position pos:line="21" pos:column="28"/></name> <operator pos:line="21" pos:column="29">=<pos:position pos:line="21" pos:column="30"/></operator> <call><name pos:line="21" pos:column="31">xmalloc<pos:position pos:line="21" pos:column="38"/></name><argument_list pos:line="21" pos:column="38">(<argument><expr><name><name pos:line="21" pos:column="39">states<pos:position pos:line="21" pos:column="45"/></name><operator pos:line="21" pos:column="45">.<pos:position pos:line="21" pos:column="46"/></operator><name pos:line="21" pos:column="46">stale<pos:position pos:line="21" pos:column="51"/></name><operator pos:line="21" pos:column="51">.<pos:position pos:line="21" pos:column="52"/></operator><name pos:line="21" pos:column="52">nr<pos:position pos:line="21" pos:column="54"/></name></name> <operator pos:line="21" pos:column="55">*<pos:position pos:line="21" pos:column="56"/></operator> <sizeof pos:line="21" pos:column="57">sizeof<argument_list pos:line="21" pos:column="63">(<argument><expr><operator pos:line="21" pos:column="64">*<pos:position pos:line="21" pos:column="65"/></operator><name pos:line="21" pos:column="65">delete_refs<pos:position pos:line="21" pos:column="76"/></name></expr></argument>)<pos:position pos:line="21" pos:column="77"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="21" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="79"/></expr_stmt>
		<for pos:line="22" pos:column="17">for <control pos:line="22" pos:column="21">(<init><expr><name pos:line="22" pos:column="22">i<pos:position pos:line="22" pos:column="23"/></name> <operator pos:line="22" pos:column="24">=<pos:position pos:line="22" pos:column="25"/></operator> <literal type="number" pos:line="22" pos:column="26">0<pos:position pos:line="22" pos:column="27"/></literal></expr>;<pos:position pos:line="22" pos:column="28"/></init> <condition><expr><name pos:line="22" pos:column="29">i<pos:position pos:line="22" pos:column="30"/></name> <operator pos:line="22" pos:column="31">&lt;<pos:position pos:line="22" pos:column="35"/></operator> <name><name pos:line="22" pos:column="33">states<pos:position pos:line="22" pos:column="39"/></name><operator pos:line="22" pos:column="39">.<pos:position pos:line="22" pos:column="40"/></operator><name pos:line="22" pos:column="40">stale<pos:position pos:line="22" pos:column="45"/></name><operator pos:line="22" pos:column="45">.<pos:position pos:line="22" pos:column="46"/></operator><name pos:line="22" pos:column="46">nr<pos:position pos:line="22" pos:column="48"/></name></name></expr>;<pos:position pos:line="22" pos:column="49"/></condition> <incr><expr><name pos:line="22" pos:column="50">i<pos:position pos:line="22" pos:column="51"/></name><operator pos:line="22" pos:column="51">++<pos:position pos:line="22" pos:column="53"/></operator></expr></incr>)<pos:position pos:line="22" pos:column="54"/></control>
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="23" pos:column="25">delete_refs<pos:position pos:line="23" pos:column="36"/></name><index pos:line="23" pos:column="36">[<expr><name pos:line="23" pos:column="37">i<pos:position pos:line="23" pos:column="38"/></name></expr>]<pos:position pos:line="23" pos:column="39"/></index></name> <operator pos:line="23" pos:column="40">=<pos:position pos:line="23" pos:column="41"/></operator> <name><name pos:line="23" pos:column="42">states<pos:position pos:line="23" pos:column="48"/></name><operator pos:line="23" pos:column="48">.<pos:position pos:line="23" pos:column="49"/></operator><name pos:line="23" pos:column="49">stale<pos:position pos:line="23" pos:column="54"/></name><operator pos:line="23" pos:column="54">.<pos:position pos:line="23" pos:column="55"/></operator><name pos:line="23" pos:column="55">items<pos:position pos:line="23" pos:column="60"/></name><index pos:line="23" pos:column="60">[<expr><name pos:line="23" pos:column="61">i<pos:position pos:line="23" pos:column="62"/></name></expr>]<pos:position pos:line="23" pos:column="63"/></index></name><operator pos:line="23" pos:column="63">.<pos:position pos:line="23" pos:column="64"/></operator><name pos:line="23" pos:column="64">util<pos:position pos:line="23" pos:column="68"/></name></expr>;<pos:position pos:line="23" pos:column="69"/></expr_stmt></block></for>
		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><operator pos:line="24" pos:column="21">!<pos:position pos:line="24" pos:column="22"/></operator><name pos:line="24" pos:column="22">dry_run<pos:position pos:line="24" pos:column="29"/></name></expr>)<pos:position pos:line="24" pos:column="30"/></condition><then pos:line="24" pos:column="30"> <block pos:line="24" pos:column="31">{
			<decl_stmt><decl><type><name><name pos:line="25" pos:column="25">struct<pos:position pos:line="25" pos:column="31"/></name> <name pos:line="25" pos:column="32">strbuf<pos:position pos:line="25" pos:column="38"/></name></name></type> <name pos:line="25" pos:column="39">err<pos:position pos:line="25" pos:column="42"/></name> <init pos:line="25" pos:column="43">= <expr><name pos:line="25" pos:column="45">STRBUF_INIT<pos:position pos:line="25" pos:column="56"/></name></expr></init></decl>;<pos:position pos:line="25" pos:column="57"/></decl_stmt>
			<if pos:line="26" pos:column="25">if <condition pos:line="26" pos:column="28">(<expr><call><name pos:line="26" pos:column="29">repack_without_refs<pos:position pos:line="26" pos:column="48"/></name><argument_list pos:line="26" pos:column="48">(<argument><expr><name pos:line="26" pos:column="49">delete_refs<pos:position pos:line="26" pos:column="60"/></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="62">states<pos:position pos:line="26" pos:column="68"/></name><operator pos:line="26" pos:column="68">.<pos:position pos:line="26" pos:column="69"/></operator><name pos:line="26" pos:column="69">stale<pos:position pos:line="26" pos:column="74"/></name><operator pos:line="26" pos:column="74">.<pos:position pos:line="26" pos:column="75"/></operator><name pos:line="26" pos:column="75">nr<pos:position pos:line="26" pos:column="77"/></name></name></expr></argument>,
						<argument><expr><operator pos:line="27" pos:column="49">&amp;<pos:position pos:line="27" pos:column="54"/></operator><name pos:line="27" pos:column="50">err<pos:position pos:line="27" pos:column="53"/></name></expr></argument>)<pos:position pos:line="27" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="55"/></condition><then pos:line="27" pos:column="55">
				<block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="33">result<pos:position pos:line="28" pos:column="39"/></name> <operator pos:line="28" pos:column="40">|=<pos:position pos:line="28" pos:column="42"/></operator> <call><name pos:line="28" pos:column="43">error<pos:position pos:line="28" pos:column="48"/></name><argument_list pos:line="28" pos:column="48">(<argument><expr><literal type="string" pos:line="28" pos:column="49">"%s"<pos:position pos:line="28" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="55">err<pos:position pos:line="28" pos:column="58"/></name><operator pos:line="28" pos:column="58">.<pos:position pos:line="28" pos:column="59"/></operator><name pos:line="28" pos:column="59">buf<pos:position pos:line="28" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="64"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="29" pos:column="25">strbuf_release<pos:position pos:line="29" pos:column="39"/></name><argument_list pos:line="29" pos:column="39">(<argument><expr><operator pos:line="29" pos:column="40">&amp;<pos:position pos:line="29" pos:column="45"/></operator><name pos:line="29" pos:column="41">err<pos:position pos:line="29" pos:column="44"/></name></expr></argument>)<pos:position pos:line="29" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="46"/></expr_stmt>
		}<pos:position pos:line="30" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="31" pos:column="17">free<pos:position pos:line="31" pos:column="21"/></name><argument_list pos:line="31" pos:column="21">(<argument><expr><name pos:line="31" pos:column="22">delete_refs<pos:position pos:line="31" pos:column="33"/></name></expr></argument>)<pos:position pos:line="31" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="32" pos:column="10"/></block></then></if>

	<for pos:line="34" pos:column="9">for <control pos:line="34" pos:column="13">(<init><expr><name pos:line="34" pos:column="14">i<pos:position pos:line="34" pos:column="15"/></name> <operator pos:line="34" pos:column="16">=<pos:position pos:line="34" pos:column="17"/></operator> <literal type="number" pos:line="34" pos:column="18">0<pos:position pos:line="34" pos:column="19"/></literal></expr>;<pos:position pos:line="34" pos:column="20"/></init> <condition><expr><name pos:line="34" pos:column="21">i<pos:position pos:line="34" pos:column="22"/></name> <operator pos:line="34" pos:column="23">&lt;<pos:position pos:line="34" pos:column="27"/></operator> <name><name pos:line="34" pos:column="25">states<pos:position pos:line="34" pos:column="31"/></name><operator pos:line="34" pos:column="31">.<pos:position pos:line="34" pos:column="32"/></operator><name pos:line="34" pos:column="32">stale<pos:position pos:line="34" pos:column="37"/></name><operator pos:line="34" pos:column="37">.<pos:position pos:line="34" pos:column="38"/></operator><name pos:line="34" pos:column="38">nr<pos:position pos:line="34" pos:column="40"/></name></name></expr>;<pos:position pos:line="34" pos:column="41"/></condition> <incr><expr><name pos:line="34" pos:column="42">i<pos:position pos:line="34" pos:column="43"/></name><operator pos:line="34" pos:column="43">++<pos:position pos:line="34" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="34" pos:column="46"/></control> <block pos:line="34" pos:column="47">{
		<decl_stmt><decl><type><specifier pos:line="35" pos:column="17">const<pos:position pos:line="35" pos:column="22"/></specifier> <name pos:line="35" pos:column="23">char<pos:position pos:line="35" pos:column="27"/></name> <modifier pos:line="35" pos:column="28">*<pos:position pos:line="35" pos:column="29"/></modifier></type><name pos:line="35" pos:column="29">refname<pos:position pos:line="35" pos:column="36"/></name> <init pos:line="35" pos:column="37">= <expr><name><name pos:line="35" pos:column="39">states<pos:position pos:line="35" pos:column="45"/></name><operator pos:line="35" pos:column="45">.<pos:position pos:line="35" pos:column="46"/></operator><name pos:line="35" pos:column="46">stale<pos:position pos:line="35" pos:column="51"/></name><operator pos:line="35" pos:column="51">.<pos:position pos:line="35" pos:column="52"/></operator><name pos:line="35" pos:column="52">items<pos:position pos:line="35" pos:column="57"/></name><index pos:line="35" pos:column="57">[<expr><name pos:line="35" pos:column="58">i<pos:position pos:line="35" pos:column="59"/></name></expr>]<pos:position pos:line="35" pos:column="60"/></index></name><operator pos:line="35" pos:column="60">.<pos:position pos:line="35" pos:column="61"/></operator><name pos:line="35" pos:column="61">util<pos:position pos:line="35" pos:column="65"/></name></expr></init></decl>;<pos:position pos:line="35" pos:column="66"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="37" pos:column="17">string_list_insert<pos:position pos:line="37" pos:column="35"/></name><argument_list pos:line="37" pos:column="35">(<argument><expr><operator pos:line="37" pos:column="36">&amp;<pos:position pos:line="37" pos:column="41"/></operator><name pos:line="37" pos:column="37">delete_refs_list<pos:position pos:line="37" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="55">refname<pos:position pos:line="37" pos:column="62"/></name></expr></argument>)<pos:position pos:line="37" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="64"/></expr_stmt>

		<if pos:line="39" pos:column="17">if <condition pos:line="39" pos:column="20">(<expr><operator pos:line="39" pos:column="21">!<pos:position pos:line="39" pos:column="22"/></operator><name pos:line="39" pos:column="22">dry_run<pos:position pos:line="39" pos:column="29"/></name></expr>)<pos:position pos:line="39" pos:column="30"/></condition><then pos:line="39" pos:column="30">
			<block type="pseudo"><expr_stmt><expr><name pos:line="40" pos:column="25">result<pos:position pos:line="40" pos:column="31"/></name> <operator pos:line="40" pos:column="32">|=<pos:position pos:line="40" pos:column="34"/></operator> <call><name pos:line="40" pos:column="35">delete_ref<pos:position pos:line="40" pos:column="45"/></name><argument_list pos:line="40" pos:column="45">(<argument><expr><name pos:line="40" pos:column="46">refname<pos:position pos:line="40" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="55">NULL<pos:position pos:line="40" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="61">0<pos:position pos:line="40" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="64"/></expr_stmt></block></then></if>

		<if pos:line="42" pos:column="17">if <condition pos:line="42" pos:column="20">(<expr><name pos:line="42" pos:column="21">dry_run<pos:position pos:line="42" pos:column="28"/></name></expr>)<pos:position pos:line="42" pos:column="29"/></condition><then pos:line="42" pos:column="29">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="43" pos:column="25">printf_ln<pos:position pos:line="43" pos:column="34"/></name><argument_list pos:line="43" pos:column="34">(<argument><expr><call><name pos:line="43" pos:column="35">_<pos:position pos:line="43" pos:column="36"/></name><argument_list pos:line="43" pos:column="36">(<argument><expr><literal type="string" pos:line="43" pos:column="37">" * [would prune] %s"<pos:position pos:line="43" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="59"/></argument_list></call></expr></argument>,
			       <argument><expr><call><name pos:line="44" pos:column="32">abbrev_ref<pos:position pos:line="44" pos:column="42"/></name><argument_list pos:line="44" pos:column="42">(<argument><expr><name pos:line="44" pos:column="43">refname<pos:position pos:line="44" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="52">"refs/remotes/"<pos:position pos:line="44" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="70"/></expr_stmt></block></then>
		<else pos:line="45" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="46" pos:column="25">printf_ln<pos:position pos:line="46" pos:column="34"/></name><argument_list pos:line="46" pos:column="34">(<argument><expr><call><name pos:line="46" pos:column="35">_<pos:position pos:line="46" pos:column="36"/></name><argument_list pos:line="46" pos:column="36">(<argument><expr><literal type="string" pos:line="46" pos:column="37">" * [pruned] %s"<pos:position pos:line="46" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="54"/></argument_list></call></expr></argument>,
			       <argument><expr><call><name pos:line="47" pos:column="32">abbrev_ref<pos:position pos:line="47" pos:column="42"/></name><argument_list pos:line="47" pos:column="42">(<argument><expr><name pos:line="47" pos:column="43">refname<pos:position pos:line="47" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="52">"refs/remotes/"<pos:position pos:line="47" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="47" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="70"/></expr_stmt></block></else></if>
	}<pos:position pos:line="48" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="50" pos:column="9">warn_dangling_symrefs<pos:position pos:line="50" pos:column="30"/></name><argument_list pos:line="50" pos:column="30">(<argument><expr><name pos:line="50" pos:column="31">stdout<pos:position pos:line="50" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="39">dangling_msg<pos:position pos:line="50" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="53">&amp;<pos:position pos:line="50" pos:column="58"/></operator><name pos:line="50" pos:column="54">delete_refs_list<pos:position pos:line="50" pos:column="70"/></name></expr></argument>)<pos:position pos:line="50" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="72"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="51" pos:column="9">string_list_clear<pos:position pos:line="51" pos:column="26"/></name><argument_list pos:line="51" pos:column="26">(<argument><expr><operator pos:line="51" pos:column="27">&amp;<pos:position pos:line="51" pos:column="32"/></operator><name pos:line="51" pos:column="28">delete_refs_list<pos:position pos:line="51" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="51" pos:column="46">0<pos:position pos:line="51" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="49"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="53" pos:column="9">free_remote_ref_states<pos:position pos:line="53" pos:column="31"/></name><argument_list pos:line="53" pos:column="31">(<argument><expr><operator pos:line="53" pos:column="32">&amp;<pos:position pos:line="53" pos:column="37"/></operator><name pos:line="53" pos:column="33">states<pos:position pos:line="53" pos:column="39"/></name></expr></argument>)<pos:position pos:line="53" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="41"/></expr_stmt>
	<return pos:line="54" pos:column="9">return <expr><name pos:line="54" pos:column="16">result<pos:position pos:line="54" pos:column="22"/></name></expr>;<pos:position pos:line="54" pos:column="23"/></return>
}<pos:position pos:line="55" pos:column="2"/></block></function></unit>

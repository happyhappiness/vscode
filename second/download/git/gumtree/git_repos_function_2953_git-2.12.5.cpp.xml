<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2953_git-2.12.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">convert_to_git_filter_fd<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><specifier pos:line="1" pos:column="31">const<pos:position pos:line="1" pos:column="36"/></specifier> <name pos:line="1" pos:column="37">char<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">path<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">int<pos:position pos:line="1" pos:column="52"/></name></type> <name pos:line="1" pos:column="53">fd<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="57">struct<pos:position pos:line="1" pos:column="63"/></name> <name pos:line="1" pos:column="64">strbuf<pos:position pos:line="1" pos:column="70"/></name></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">dst<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>,
			      <parameter><decl><type><name><name pos:line="2" pos:column="31">enum<pos:position pos:line="2" pos:column="35"/></name> <name pos:line="2" pos:column="36">safe_crlf<pos:position pos:line="2" pos:column="45"/></name></name></type> <name pos:line="2" pos:column="46">checksafe<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="56"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">conv_attrs<pos:position pos:line="4" pos:column="26"/></name></name></type> <name pos:line="4" pos:column="27">ca<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
	<expr_stmt><expr><call><name pos:line="5" pos:column="9">convert_attrs<pos:position pos:line="5" pos:column="22"/></name><argument_list pos:line="5" pos:column="22">(<argument><expr><operator pos:line="5" pos:column="23">&amp;<pos:position pos:line="5" pos:column="28"/></operator><name pos:line="5" pos:column="24">ca<pos:position pos:line="5" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="28">path<pos:position pos:line="5" pos:column="32"/></name></expr></argument>)<pos:position pos:line="5" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="34"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="7" pos:column="9">assert<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><name><name pos:line="7" pos:column="16">ca<pos:position pos:line="7" pos:column="18"/></name><operator pos:line="7" pos:column="18">.<pos:position pos:line="7" pos:column="19"/></operator><name pos:line="7" pos:column="19">drv<pos:position pos:line="7" pos:column="22"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="8" pos:column="9">assert<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><name><name pos:line="8" pos:column="16">ca<pos:position pos:line="8" pos:column="18"/></name><operator pos:line="8" pos:column="18">.<pos:position pos:line="8" pos:column="19"/></operator><name pos:line="8" pos:column="19">drv<pos:position pos:line="8" pos:column="22"/></name><operator pos:line="8" pos:column="22">-&gt;<pos:position pos:line="8" pos:column="27"/></operator><name pos:line="8" pos:column="24">clean<pos:position pos:line="8" pos:column="29"/></name></name> <operator pos:line="8" pos:column="30">||<pos:position pos:line="8" pos:column="32"/></operator> <name><name pos:line="8" pos:column="33">ca<pos:position pos:line="8" pos:column="35"/></name><operator pos:line="8" pos:column="35">.<pos:position pos:line="8" pos:column="36"/></operator><name pos:line="8" pos:column="36">drv<pos:position pos:line="8" pos:column="39"/></name><operator pos:line="8" pos:column="39">-&gt;<pos:position pos:line="8" pos:column="44"/></operator><name pos:line="8" pos:column="41">process<pos:position pos:line="8" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="50"/></expr_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">!<pos:position pos:line="10" pos:column="14"/></operator><call><name pos:line="10" pos:column="14">apply_filter<pos:position pos:line="10" pos:column="26"/></name><argument_list pos:line="10" pos:column="26">(<argument><expr><name pos:line="10" pos:column="27">path<pos:position pos:line="10" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="33">NULL<pos:position pos:line="10" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="39">0<pos:position pos:line="10" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="42">fd<pos:position pos:line="10" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="46">dst<pos:position pos:line="10" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="51">ca<pos:position pos:line="10" pos:column="53"/></name><operator pos:line="10" pos:column="53">.<pos:position pos:line="10" pos:column="54"/></operator><name pos:line="10" pos:column="54">drv<pos:position pos:line="10" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="59">CAP_CLEAN<pos:position pos:line="10" pos:column="68"/></name></expr></argument>)<pos:position pos:line="10" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="70"/></condition><then pos:line="10" pos:column="70">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="17">die<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">(<argument><expr><literal type="string" pos:line="11" pos:column="21">"%s: clean filter '%s' failed"<pos:position pos:line="11" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="53">path<pos:position pos:line="11" pos:column="57"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="59">ca<pos:position pos:line="11" pos:column="61"/></name><operator pos:line="11" pos:column="61">.<pos:position pos:line="11" pos:column="62"/></operator><name pos:line="11" pos:column="62">drv<pos:position pos:line="11" pos:column="65"/></name><operator pos:line="11" pos:column="65">-&gt;<pos:position pos:line="11" pos:column="70"/></operator><name pos:line="11" pos:column="67">name<pos:position pos:line="11" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="73"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="13" pos:column="9">crlf_to_git<pos:position pos:line="13" pos:column="20"/></name><argument_list pos:line="13" pos:column="20">(<argument><expr><name pos:line="13" pos:column="21">path<pos:position pos:line="13" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="27">dst<pos:position pos:line="13" pos:column="30"/></name><operator pos:line="13" pos:column="30">-&gt;<pos:position pos:line="13" pos:column="35"/></operator><name pos:line="13" pos:column="32">buf<pos:position pos:line="13" pos:column="35"/></name></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="37">dst<pos:position pos:line="13" pos:column="40"/></name><operator pos:line="13" pos:column="40">-&gt;<pos:position pos:line="13" pos:column="45"/></operator><name pos:line="13" pos:column="42">len<pos:position pos:line="13" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="47">dst<pos:position pos:line="13" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="52">ca<pos:position pos:line="13" pos:column="54"/></name><operator pos:line="13" pos:column="54">.<pos:position pos:line="13" pos:column="55"/></operator><name pos:line="13" pos:column="55">crlf_action<pos:position pos:line="13" pos:column="66"/></name></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="68">checksafe<pos:position pos:line="13" pos:column="77"/></name></expr></argument>)<pos:position pos:line="13" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="79"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="14" pos:column="9">ident_to_git<pos:position pos:line="14" pos:column="21"/></name><argument_list pos:line="14" pos:column="21">(<argument><expr><name pos:line="14" pos:column="22">path<pos:position pos:line="14" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="28">dst<pos:position pos:line="14" pos:column="31"/></name><operator pos:line="14" pos:column="31">-&gt;<pos:position pos:line="14" pos:column="36"/></operator><name pos:line="14" pos:column="33">buf<pos:position pos:line="14" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="38">dst<pos:position pos:line="14" pos:column="41"/></name><operator pos:line="14" pos:column="41">-&gt;<pos:position pos:line="14" pos:column="46"/></operator><name pos:line="14" pos:column="43">len<pos:position pos:line="14" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="48">dst<pos:position pos:line="14" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="53">ca<pos:position pos:line="14" pos:column="55"/></name><operator pos:line="14" pos:column="55">.<pos:position pos:line="14" pos:column="56"/></operator><name pos:line="14" pos:column="56">ident<pos:position pos:line="14" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="63"/></expr_stmt>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

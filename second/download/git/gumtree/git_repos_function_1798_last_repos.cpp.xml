<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1798_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">tree_content_get<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(
	<parameter><decl><type><name><name pos:line="2" pos:column="9">struct<pos:position pos:line="2" pos:column="15"/></name> <name pos:line="2" pos:column="16">tree_entry<pos:position pos:line="2" pos:column="26"/></name></name> <modifier pos:line="2" pos:column="27">*<pos:position pos:line="2" pos:column="28"/></modifier></type><name pos:line="2" pos:column="28">root<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>,
	<parameter><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">p<pos:position pos:line="3" pos:column="22"/></name></decl></parameter>,
	<parameter><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">tree_entry<pos:position pos:line="4" pos:column="26"/></name></name> <modifier pos:line="4" pos:column="27">*<pos:position pos:line="4" pos:column="28"/></modifier></type><name pos:line="4" pos:column="28">leaf<pos:position pos:line="4" pos:column="32"/></name></decl></parameter>,
	<parameter><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">allow_root<pos:position pos:line="5" pos:column="23"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="24"/></parameter_list>
<block pos:line="6" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">tree_content<pos:position pos:line="7" pos:column="28"/></name></name> <modifier pos:line="7" pos:column="29">*<pos:position pos:line="7" pos:column="30"/></modifier></type><name pos:line="7" pos:column="30">t<pos:position pos:line="7" pos:column="31"/></name></decl>;<pos:position pos:line="7" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="8" pos:column="9">const<pos:position pos:line="8" pos:column="14"/></specifier> <name pos:line="8" pos:column="15">char<pos:position pos:line="8" pos:column="19"/></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">slash1<pos:position pos:line="8" pos:column="27"/></name></decl>;<pos:position pos:line="8" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">unsigned<pos:position pos:line="9" pos:column="17"/></name> <name pos:line="9" pos:column="18">int<pos:position pos:line="9" pos:column="21"/></name></type> <name pos:line="9" pos:column="22">i<pos:position pos:line="9" pos:column="23"/></name></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="25">n<pos:position pos:line="9" pos:column="26"/></name></decl>;<pos:position pos:line="9" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="10" pos:column="9">struct<pos:position pos:line="10" pos:column="15"/></name> <name pos:line="10" pos:column="16">tree_entry<pos:position pos:line="10" pos:column="26"/></name></name> <modifier pos:line="10" pos:column="27">*<pos:position pos:line="10" pos:column="28"/></modifier></type><name pos:line="10" pos:column="28">e<pos:position pos:line="10" pos:column="29"/></name></decl>;<pos:position pos:line="10" pos:column="30"/></decl_stmt>

	<expr_stmt><expr><name pos:line="12" pos:column="9">slash1<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <call><name pos:line="12" pos:column="18">strchrnul<pos:position pos:line="12" pos:column="27"/></name><argument_list pos:line="12" pos:column="27">(<argument><expr><name pos:line="12" pos:column="28">p<pos:position pos:line="12" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="12" pos:column="31">'/'<pos:position pos:line="12" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><name pos:line="13" pos:column="9">n<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">=<pos:position pos:line="13" pos:column="12"/></operator> <name pos:line="13" pos:column="13">slash1<pos:position pos:line="13" pos:column="19"/></name> <operator pos:line="13" pos:column="20">-<pos:position pos:line="13" pos:column="21"/></operator> <name pos:line="13" pos:column="22">p<pos:position pos:line="13" pos:column="23"/></name></expr>;<pos:position pos:line="13" pos:column="24"/></expr_stmt>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">!<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="14">n<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">&amp;&amp;<pos:position pos:line="14" pos:column="26"/></operator> <operator pos:line="14" pos:column="19">!<pos:position pos:line="14" pos:column="20"/></operator><name pos:line="14" pos:column="20">allow_root<pos:position pos:line="14" pos:column="30"/></name></expr>)<pos:position pos:line="14" pos:column="31"/></condition><then pos:line="14" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="17">die<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">(<argument><expr><literal type="string" pos:line="15" pos:column="21">"Empty path component found in input"<pos:position pos:line="15" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="60"/></expr_stmt></block></then></if>

	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><operator pos:line="17" pos:column="13">!<pos:position pos:line="17" pos:column="14"/></operator><name><name pos:line="17" pos:column="14">root<pos:position pos:line="17" pos:column="18"/></name><operator pos:line="17" pos:column="18">-&gt;<pos:position pos:line="17" pos:column="23"/></operator><name pos:line="17" pos:column="20">tree<pos:position pos:line="17" pos:column="24"/></name></name></expr>)<pos:position pos:line="17" pos:column="25"/></condition><then pos:line="17" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="17">load_tree<pos:position pos:line="18" pos:column="26"/></name><argument_list pos:line="18" pos:column="26">(<argument><expr><name pos:line="18" pos:column="27">root<pos:position pos:line="18" pos:column="31"/></name></expr></argument>)<pos:position pos:line="18" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="33"/></expr_stmt></block></then></if>

	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><operator pos:line="20" pos:column="13">!<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="14">n<pos:position pos:line="20" pos:column="15"/></name></expr>)<pos:position pos:line="20" pos:column="16"/></condition><then pos:line="20" pos:column="16"> <block pos:line="20" pos:column="17">{
		<expr_stmt><expr><name pos:line="21" pos:column="17">e<pos:position pos:line="21" pos:column="18"/></name> <operator pos:line="21" pos:column="19">=<pos:position pos:line="21" pos:column="20"/></operator> <name pos:line="21" pos:column="21">root<pos:position pos:line="21" pos:column="25"/></name></expr>;<pos:position pos:line="21" pos:column="26"/></expr_stmt>
		<goto pos:line="22" pos:column="17">goto <name pos:line="22" pos:column="22">found_entry<pos:position pos:line="22" pos:column="33"/></name>;<pos:position pos:line="22" pos:column="34"/></goto>
	}<pos:position pos:line="23" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="25" pos:column="9">t<pos:position pos:line="25" pos:column="10"/></name> <operator pos:line="25" pos:column="11">=<pos:position pos:line="25" pos:column="12"/></operator> <name><name pos:line="25" pos:column="13">root<pos:position pos:line="25" pos:column="17"/></name><operator pos:line="25" pos:column="17">-&gt;<pos:position pos:line="25" pos:column="22"/></operator><name pos:line="25" pos:column="19">tree<pos:position pos:line="25" pos:column="23"/></name></name></expr>;<pos:position pos:line="25" pos:column="24"/></expr_stmt>
	<for pos:line="26" pos:column="9">for <control pos:line="26" pos:column="13">(<init><expr><name pos:line="26" pos:column="14">i<pos:position pos:line="26" pos:column="15"/></name> <operator pos:line="26" pos:column="16">=<pos:position pos:line="26" pos:column="17"/></operator> <literal type="number" pos:line="26" pos:column="18">0<pos:position pos:line="26" pos:column="19"/></literal></expr>;<pos:position pos:line="26" pos:column="20"/></init> <condition><expr><name pos:line="26" pos:column="21">i<pos:position pos:line="26" pos:column="22"/></name> <operator pos:line="26" pos:column="23">&lt;<pos:position pos:line="26" pos:column="27"/></operator> <name><name pos:line="26" pos:column="25">t<pos:position pos:line="26" pos:column="26"/></name><operator pos:line="26" pos:column="26">-&gt;<pos:position pos:line="26" pos:column="31"/></operator><name pos:line="26" pos:column="28">entry_count<pos:position pos:line="26" pos:column="39"/></name></name></expr>;<pos:position pos:line="26" pos:column="40"/></condition> <incr><expr><name pos:line="26" pos:column="41">i<pos:position pos:line="26" pos:column="42"/></name><operator pos:line="26" pos:column="42">++<pos:position pos:line="26" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="26" pos:column="45"/></control> <block pos:line="26" pos:column="46">{
		<expr_stmt><expr><name pos:line="27" pos:column="17">e<pos:position pos:line="27" pos:column="18"/></name> <operator pos:line="27" pos:column="19">=<pos:position pos:line="27" pos:column="20"/></operator> <name><name pos:line="27" pos:column="21">t<pos:position pos:line="27" pos:column="22"/></name><operator pos:line="27" pos:column="22">-&gt;<pos:position pos:line="27" pos:column="27"/></operator><name pos:line="27" pos:column="24">entries<pos:position pos:line="27" pos:column="31"/></name><index pos:line="27" pos:column="31">[<expr><name pos:line="27" pos:column="32">i<pos:position pos:line="27" pos:column="33"/></name></expr>]<pos:position pos:line="27" pos:column="34"/></index></name></expr>;<pos:position pos:line="27" pos:column="35"/></expr_stmt>
		<if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><name><name pos:line="28" pos:column="21">e<pos:position pos:line="28" pos:column="22"/></name><operator pos:line="28" pos:column="22">-&gt;<pos:position pos:line="28" pos:column="27"/></operator><name pos:line="28" pos:column="24">name<pos:position pos:line="28" pos:column="28"/></name><operator pos:line="28" pos:column="28">-&gt;<pos:position pos:line="28" pos:column="33"/></operator><name pos:line="28" pos:column="30">str_len<pos:position pos:line="28" pos:column="37"/></name></name> <operator pos:line="28" pos:column="38">==<pos:position pos:line="28" pos:column="40"/></operator> <name pos:line="28" pos:column="41">n<pos:position pos:line="28" pos:column="42"/></name> <operator pos:line="28" pos:column="43">&amp;&amp;<pos:position pos:line="28" pos:column="53"/></operator> <operator pos:line="28" pos:column="46">!<pos:position pos:line="28" pos:column="47"/></operator><call><name pos:line="28" pos:column="47">fspathncmp<pos:position pos:line="28" pos:column="57"/></name><argument_list pos:line="28" pos:column="57">(<argument><expr><name pos:line="28" pos:column="58">p<pos:position pos:line="28" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="61">e<pos:position pos:line="28" pos:column="62"/></name><operator pos:line="28" pos:column="62">-&gt;<pos:position pos:line="28" pos:column="67"/></operator><name pos:line="28" pos:column="64">name<pos:position pos:line="28" pos:column="68"/></name><operator pos:line="28" pos:column="68">-&gt;<pos:position pos:line="28" pos:column="73"/></operator><name pos:line="28" pos:column="70">str_dat<pos:position pos:line="28" pos:column="77"/></name></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="79">n<pos:position pos:line="28" pos:column="80"/></name></expr></argument>)<pos:position pos:line="28" pos:column="81"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="82"/></condition><then pos:line="28" pos:column="82"> <block pos:line="28" pos:column="83">{
			<if pos:line="29" pos:column="25">if <condition pos:line="29" pos:column="28">(<expr><operator pos:line="29" pos:column="29">!<pos:position pos:line="29" pos:column="30"/></operator><operator pos:line="29" pos:column="30">*<pos:position pos:line="29" pos:column="31"/></operator><name pos:line="29" pos:column="31">slash1<pos:position pos:line="29" pos:column="37"/></name></expr>)<pos:position pos:line="29" pos:column="38"/></condition><then pos:line="29" pos:column="38">
				<block type="pseudo"><goto pos:line="30" pos:column="33">goto <name pos:line="30" pos:column="38">found_entry<pos:position pos:line="30" pos:column="49"/></name>;<pos:position pos:line="30" pos:column="50"/></goto></block></then></if>
			<if pos:line="31" pos:column="25">if <condition pos:line="31" pos:column="28">(<expr><operator pos:line="31" pos:column="29">!<pos:position pos:line="31" pos:column="30"/></operator><call><name pos:line="31" pos:column="30">S_ISDIR<pos:position pos:line="31" pos:column="37"/></name><argument_list pos:line="31" pos:column="37">(<argument><expr><name><name pos:line="31" pos:column="38">e<pos:position pos:line="31" pos:column="39"/></name><operator pos:line="31" pos:column="39">-&gt;<pos:position pos:line="31" pos:column="44"/></operator><name pos:line="31" pos:column="41">versions<pos:position pos:line="31" pos:column="49"/></name><index pos:line="31" pos:column="49">[<expr><literal type="number" pos:line="31" pos:column="50">1<pos:position pos:line="31" pos:column="51"/></literal></expr>]<pos:position pos:line="31" pos:column="52"/></index></name><operator pos:line="31" pos:column="52">.<pos:position pos:line="31" pos:column="53"/></operator><name pos:line="31" pos:column="53">mode<pos:position pos:line="31" pos:column="57"/></name></expr></argument>)<pos:position pos:line="31" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="59"/></condition><then pos:line="31" pos:column="59">
				<block type="pseudo"><return pos:line="32" pos:column="33">return <expr><literal type="number" pos:line="32" pos:column="40">0<pos:position pos:line="32" pos:column="41"/></literal></expr>;<pos:position pos:line="32" pos:column="42"/></return></block></then></if>
			<if pos:line="33" pos:column="25">if <condition pos:line="33" pos:column="28">(<expr><operator pos:line="33" pos:column="29">!<pos:position pos:line="33" pos:column="30"/></operator><name><name pos:line="33" pos:column="30">e<pos:position pos:line="33" pos:column="31"/></name><operator pos:line="33" pos:column="31">-&gt;<pos:position pos:line="33" pos:column="36"/></operator><name pos:line="33" pos:column="33">tree<pos:position pos:line="33" pos:column="37"/></name></name></expr>)<pos:position pos:line="33" pos:column="38"/></condition><then pos:line="33" pos:column="38">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="33">load_tree<pos:position pos:line="34" pos:column="42"/></name><argument_list pos:line="34" pos:column="42">(<argument><expr><name pos:line="34" pos:column="43">e<pos:position pos:line="34" pos:column="44"/></name></expr></argument>)<pos:position pos:line="34" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="46"/></expr_stmt></block></then></if>
			<return pos:line="35" pos:column="25">return <expr><call><name pos:line="35" pos:column="32">tree_content_get<pos:position pos:line="35" pos:column="48"/></name><argument_list pos:line="35" pos:column="48">(<argument><expr><name pos:line="35" pos:column="49">e<pos:position pos:line="35" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="52">slash1<pos:position pos:line="35" pos:column="58"/></name> <operator pos:line="35" pos:column="59">+<pos:position pos:line="35" pos:column="60"/></operator> <literal type="number" pos:line="35" pos:column="61">1<pos:position pos:line="35" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="64">leaf<pos:position pos:line="35" pos:column="68"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="70">0<pos:position pos:line="35" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="73"/></return>
		}<pos:position pos:line="36" pos:column="18"/></block></then></if>
	}<pos:position pos:line="37" pos:column="10"/></block></for>
	<return pos:line="38" pos:column="9">return <expr><literal type="number" pos:line="38" pos:column="16">0<pos:position pos:line="38" pos:column="17"/></literal></expr>;<pos:position pos:line="38" pos:column="18"/></return>

<label><name pos:line="40" pos:column="1">found_entry<pos:position pos:line="40" pos:column="12"/></name>:<pos:position pos:line="40" pos:column="13"/></label>
	<expr_stmt><expr><call><name pos:line="41" pos:column="9">memcpy<pos:position pos:line="41" pos:column="15"/></name><argument_list pos:line="41" pos:column="15">(<argument><expr><name pos:line="41" pos:column="16">leaf<pos:position pos:line="41" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="22">e<pos:position pos:line="41" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="41" pos:column="25">sizeof<argument_list pos:line="41" pos:column="31">(<argument><expr><operator pos:line="41" pos:column="32">*<pos:position pos:line="41" pos:column="33"/></operator><name pos:line="41" pos:column="33">leaf<pos:position pos:line="41" pos:column="37"/></name></expr></argument>)<pos:position pos:line="41" pos:column="38"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="41" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="40"/></expr_stmt>
	<if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><name><name pos:line="42" pos:column="13">e<pos:position pos:line="42" pos:column="14"/></name><operator pos:line="42" pos:column="14">-&gt;<pos:position pos:line="42" pos:column="19"/></operator><name pos:line="42" pos:column="16">tree<pos:position pos:line="42" pos:column="20"/></name></name> <operator pos:line="42" pos:column="21">&amp;&amp;<pos:position pos:line="42" pos:column="31"/></operator> <call><name pos:line="42" pos:column="24">is_null_oid<pos:position pos:line="42" pos:column="35"/></name><argument_list pos:line="42" pos:column="35">(<argument><expr><operator pos:line="42" pos:column="36">&amp;<pos:position pos:line="42" pos:column="41"/></operator><name><name pos:line="42" pos:column="37">e<pos:position pos:line="42" pos:column="38"/></name><operator pos:line="42" pos:column="38">-&gt;<pos:position pos:line="42" pos:column="43"/></operator><name pos:line="42" pos:column="40">versions<pos:position pos:line="42" pos:column="48"/></name><index pos:line="42" pos:column="48">[<expr><literal type="number" pos:line="42" pos:column="49">1<pos:position pos:line="42" pos:column="50"/></literal></expr>]<pos:position pos:line="42" pos:column="51"/></index></name><operator pos:line="42" pos:column="51">.<pos:position pos:line="42" pos:column="52"/></operator><name pos:line="42" pos:column="52">oid<pos:position pos:line="42" pos:column="55"/></name></expr></argument>)<pos:position pos:line="42" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="57"/></condition><then pos:line="42" pos:column="57">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="43" pos:column="17">leaf<pos:position pos:line="43" pos:column="21"/></name><operator pos:line="43" pos:column="21">-&gt;<pos:position pos:line="43" pos:column="26"/></operator><name pos:line="43" pos:column="23">tree<pos:position pos:line="43" pos:column="27"/></name></name> <operator pos:line="43" pos:column="28">=<pos:position pos:line="43" pos:column="29"/></operator> <call><name pos:line="43" pos:column="30">dup_tree_content<pos:position pos:line="43" pos:column="46"/></name><argument_list pos:line="43" pos:column="46">(<argument><expr><name><name pos:line="43" pos:column="47">e<pos:position pos:line="43" pos:column="48"/></name><operator pos:line="43" pos:column="48">-&gt;<pos:position pos:line="43" pos:column="53"/></operator><name pos:line="43" pos:column="50">tree<pos:position pos:line="43" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="56"/></expr_stmt></block></then>
	<else pos:line="44" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="45" pos:column="17">leaf<pos:position pos:line="45" pos:column="21"/></name><operator pos:line="45" pos:column="21">-&gt;<pos:position pos:line="45" pos:column="26"/></operator><name pos:line="45" pos:column="23">tree<pos:position pos:line="45" pos:column="27"/></name></name> <operator pos:line="45" pos:column="28">=<pos:position pos:line="45" pos:column="29"/></operator> <name pos:line="45" pos:column="30">NULL<pos:position pos:line="45" pos:column="34"/></name></expr>;<pos:position pos:line="45" pos:column="35"/></expr_stmt></block></else></if>
	<return pos:line="46" pos:column="9">return <expr><literal type="number" pos:line="46" pos:column="16">1<pos:position pos:line="46" pos:column="17"/></literal></expr>;<pos:position pos:line="46" pos:column="18"/></return>
}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

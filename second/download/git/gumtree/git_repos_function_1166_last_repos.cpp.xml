<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1166_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mbs_chrlen<pos:position pos:line="1" pos:column="15"/></name><parameter_list pos:line="1" pos:column="15">(<parameter><decl><type><specifier pos:line="1" pos:column="16">const<pos:position pos:line="1" pos:column="21"/></specifier> <name pos:line="1" pos:column="22">char<pos:position pos:line="1" pos:column="26"/></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier><modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">text<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="35">size_t<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">remainder_p<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="56">const<pos:position pos:line="1" pos:column="61"/></specifier> <name pos:line="1" pos:column="62">char<pos:position pos:line="1" pos:column="66"/></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">encoding<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="77"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">chrlen<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">p<pos:position pos:line="4" pos:column="22"/></name> <init pos:line="4" pos:column="23">= <expr><operator pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></operator><name pos:line="4" pos:column="26">text<pos:position pos:line="4" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">size_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">r<pos:position pos:line="5" pos:column="17"/></name> <init pos:line="5" pos:column="18">= <expr><operator pos:line="5" pos:column="20">(<pos:position pos:line="5" pos:column="21"/></operator><ternary><condition><expr><name pos:line="5" pos:column="21">remainder_p<pos:position pos:line="5" pos:column="32"/></name></expr> ?<pos:position pos:line="5" pos:column="34"/></condition><then pos:line="5" pos:column="34"> <expr><operator pos:line="5" pos:column="35">*<pos:position pos:line="5" pos:column="36"/></operator><name pos:line="5" pos:column="36">remainder_p<pos:position pos:line="5" pos:column="47"/></name></expr> <pos:position pos:line="5" pos:column="48"/></then><else pos:line="5" pos:column="48">: <expr><name pos:line="5" pos:column="50">SIZE_MAX<pos:position pos:line="5" pos:column="58"/></name></expr></else></ternary><operator pos:line="5" pos:column="58">)<pos:position pos:line="5" pos:column="59"/></operator></expr></init></decl>;<pos:position pos:line="5" pos:column="60"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">r<pos:position pos:line="7" pos:column="14"/></name> <operator pos:line="7" pos:column="15">&lt;<pos:position pos:line="7" pos:column="19"/></operator> <literal type="number" pos:line="7" pos:column="17">1<pos:position pos:line="7" pos:column="18"/></literal></expr>)<pos:position pos:line="7" pos:column="19"/></condition><then pos:line="7" pos:column="19">
		<block type="pseudo"><return pos:line="8" pos:column="17">return <expr><literal type="number" pos:line="8" pos:column="24">0<pos:position pos:line="8" pos:column="25"/></literal></expr>;<pos:position pos:line="8" pos:column="26"/></return></block></then></if>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><call><name pos:line="10" pos:column="13">is_encoding_utf8<pos:position pos:line="10" pos:column="29"/></name><argument_list pos:line="10" pos:column="29">(<argument><expr><name pos:line="10" pos:column="30">encoding<pos:position pos:line="10" pos:column="38"/></name></expr></argument>)<pos:position pos:line="10" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="40"/></condition><then pos:line="10" pos:column="40"> <block pos:line="10" pos:column="41">{
		<expr_stmt><expr><call><name pos:line="11" pos:column="17">pick_one_utf8_char<pos:position pos:line="11" pos:column="35"/></name><argument_list pos:line="11" pos:column="35">(<argument><expr><operator pos:line="11" pos:column="36">&amp;<pos:position pos:line="11" pos:column="41"/></operator><name pos:line="11" pos:column="37">p<pos:position pos:line="11" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="40">&amp;<pos:position pos:line="11" pos:column="45"/></operator><name pos:line="11" pos:column="41">r<pos:position pos:line="11" pos:column="42"/></name></expr></argument>)<pos:position pos:line="11" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="44"/></expr_stmt>

		<expr_stmt><expr><name pos:line="13" pos:column="17">chrlen<pos:position pos:line="13" pos:column="23"/></name> <operator pos:line="13" pos:column="24">=<pos:position pos:line="13" pos:column="25"/></operator> <ternary><condition><expr><name pos:line="13" pos:column="26">p<pos:position pos:line="13" pos:column="27"/></name></expr> ?<pos:position pos:line="13" pos:column="29"/></condition><then pos:line="13" pos:column="29"> <expr><operator pos:line="13" pos:column="30">(<pos:position pos:line="13" pos:column="31"/></operator><name pos:line="13" pos:column="31">p<pos:position pos:line="13" pos:column="32"/></name> <operator pos:line="13" pos:column="33">-<pos:position pos:line="13" pos:column="34"/></operator> <operator pos:line="13" pos:column="35">*<pos:position pos:line="13" pos:column="36"/></operator><name pos:line="13" pos:column="36">text<pos:position pos:line="13" pos:column="40"/></name><operator pos:line="13" pos:column="40">)<pos:position pos:line="13" pos:column="41"/></operator></expr>
			   <pos:position pos:line="14" pos:column="7"/></then><else pos:line="14" pos:column="28">: <expr><literal type="number" pos:line="14" pos:column="30">1<pos:position pos:line="14" pos:column="31"/></literal></expr></else></ternary></expr> <comment type="block" pos:line="14" pos:column="32">/* not valid UTF-8 -&gt; raw byte sequence */</comment>;<pos:position pos:line="14" pos:column="75"/></expr_stmt>
	}<pos:position pos:line="15" pos:column="10"/></block></then>
	<else pos:line="16" pos:column="9">else <block pos:line="16" pos:column="14">{
		<comment type="block" pos:line="17" pos:column="17">/*
		 * TODO use iconv to decode one char and obtain its chrlen
		 * for now, let's treat encodings != UTF-8 as one-byte
		 */</comment>
		<expr_stmt><expr><name pos:line="21" pos:column="17">chrlen<pos:position pos:line="21" pos:column="23"/></name> <operator pos:line="21" pos:column="24">=<pos:position pos:line="21" pos:column="25"/></operator> <literal type="number" pos:line="21" pos:column="26">1<pos:position pos:line="21" pos:column="27"/></literal></expr>;<pos:position pos:line="21" pos:column="28"/></expr_stmt>
	}<pos:position pos:line="22" pos:column="10"/></block></else></if>

	<expr_stmt><expr><operator pos:line="24" pos:column="9">*<pos:position pos:line="24" pos:column="10"/></operator><name pos:line="24" pos:column="10">text<pos:position pos:line="24" pos:column="14"/></name> <operator pos:line="24" pos:column="15">+=<pos:position pos:line="24" pos:column="17"/></operator> <name pos:line="24" pos:column="18">chrlen<pos:position pos:line="24" pos:column="24"/></name></expr>;<pos:position pos:line="24" pos:column="25"/></expr_stmt>
	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">remainder_p<pos:position pos:line="25" pos:column="24"/></name></expr>)<pos:position pos:line="25" pos:column="25"/></condition><then pos:line="25" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><operator pos:line="26" pos:column="17">*<pos:position pos:line="26" pos:column="18"/></operator><name pos:line="26" pos:column="18">remainder_p<pos:position pos:line="26" pos:column="29"/></name> <operator pos:line="26" pos:column="30">-=<pos:position pos:line="26" pos:column="32"/></operator> <name pos:line="26" pos:column="33">chrlen<pos:position pos:line="26" pos:column="39"/></name></expr>;<pos:position pos:line="26" pos:column="40"/></expr_stmt></block></then></if>

	<return pos:line="28" pos:column="9">return <expr><name pos:line="28" pos:column="16">chrlen<pos:position pos:line="28" pos:column="22"/></name></expr>;<pos:position pos:line="28" pos:column="23"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

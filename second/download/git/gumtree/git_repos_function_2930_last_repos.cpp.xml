<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2930_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">print_variable<pos:position pos:line="2" pos:column="15"/></name> <parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name pos:line="2" pos:column="23">char<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">var_ptr<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="38">size_t<pos:position pos:line="2" pos:column="44"/></name></type> <name pos:line="2" pos:column="45">var_len<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="53"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <expr_stmt><expr><call><name pos:line="4" pos:column="3">fwrite<pos:position pos:line="4" pos:column="9"/></name> <argument_list pos:line="4" pos:column="10">(<argument><expr><name pos:line="4" pos:column="11">var_ptr<pos:position pos:line="4" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="20">var_len<pos:position pos:line="4" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="29">1<pos:position pos:line="4" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="32">stdout<pos:position pos:line="4" pos:column="38"/></name></expr></argument>)<pos:position pos:line="4" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="40"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="5" pos:column="3">putchar<pos:position pos:line="5" pos:column="10"/></name> <argument_list pos:line="5" pos:column="11">(<argument><expr><literal type="char" pos:line="5" pos:column="12">'\n'<pos:position pos:line="5" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="18"/></expr_stmt>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

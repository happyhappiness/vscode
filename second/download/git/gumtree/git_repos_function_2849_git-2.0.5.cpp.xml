<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2849_git-2.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">check_locks<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">void<pos:position pos:line="1" pos:column="29"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="30"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">remote_lock<pos:position pos:line="3" pos:column="27"/></name></name> <modifier pos:line="3" pos:column="28">*<pos:position pos:line="3" pos:column="29"/></modifier></type><name pos:line="3" pos:column="29">lock<pos:position pos:line="3" pos:column="33"/></name> <init pos:line="3" pos:column="34">= <expr><name><name pos:line="3" pos:column="36">repo<pos:position pos:line="3" pos:column="40"/></name><operator pos:line="3" pos:column="40">-&gt;<pos:position pos:line="3" pos:column="45"/></operator><name pos:line="3" pos:column="42">locks<pos:position pos:line="3" pos:column="47"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="48"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">time_t<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">current_time<pos:position pos:line="4" pos:column="28"/></name> <init pos:line="4" pos:column="29">= <expr><call><name pos:line="4" pos:column="31">time<pos:position pos:line="4" pos:column="35"/></name><argument_list pos:line="4" pos:column="35">(<argument><expr><name pos:line="4" pos:column="36">NULL<pos:position pos:line="4" pos:column="40"/></name></expr></argument>)<pos:position pos:line="4" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">time_remaining<pos:position pos:line="5" pos:column="27"/></name></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>

	<while pos:line="7" pos:column="9">while <condition pos:line="7" pos:column="15">(<expr><name pos:line="7" pos:column="16">lock<pos:position pos:line="7" pos:column="20"/></name></expr>)<pos:position pos:line="7" pos:column="21"/></condition> <block pos:line="7" pos:column="22">{
		<expr_stmt><expr><name pos:line="8" pos:column="17">time_remaining<pos:position pos:line="8" pos:column="31"/></name> <operator pos:line="8" pos:column="32">=<pos:position pos:line="8" pos:column="33"/></operator> <name><name pos:line="8" pos:column="34">lock<pos:position pos:line="8" pos:column="38"/></name><operator pos:line="8" pos:column="38">-&gt;<pos:position pos:line="8" pos:column="43"/></operator><name pos:line="8" pos:column="40">start_time<pos:position pos:line="8" pos:column="50"/></name></name> <operator pos:line="8" pos:column="51">+<pos:position pos:line="8" pos:column="52"/></operator> <name><name pos:line="8" pos:column="53">lock<pos:position pos:line="8" pos:column="57"/></name><operator pos:line="8" pos:column="57">-&gt;<pos:position pos:line="8" pos:column="62"/></operator><name pos:line="8" pos:column="59">timeout<pos:position pos:line="8" pos:column="66"/></name></name> <operator pos:line="8" pos:column="67">-<pos:position pos:line="8" pos:column="68"/></operator>
			<name pos:line="9" pos:column="25">current_time<pos:position pos:line="9" pos:column="37"/></name></expr>;<pos:position pos:line="9" pos:column="38"/></expr_stmt>
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><operator pos:line="10" pos:column="21">!<pos:position pos:line="10" pos:column="22"/></operator><name><name pos:line="10" pos:column="22">lock<pos:position pos:line="10" pos:column="26"/></name><operator pos:line="10" pos:column="26">-&gt;<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="28">refreshing<pos:position pos:line="10" pos:column="38"/></name></name> <operator pos:line="10" pos:column="39">&amp;&amp;<pos:position pos:line="10" pos:column="49"/></operator> <name pos:line="10" pos:column="42">time_remaining<pos:position pos:line="10" pos:column="56"/></name> <operator pos:line="10" pos:column="57">&lt;<pos:position pos:line="10" pos:column="61"/></operator> <name pos:line="10" pos:column="59">LOCK_REFRESH<pos:position pos:line="10" pos:column="71"/></name></expr>)<pos:position pos:line="10" pos:column="72"/></condition><then pos:line="10" pos:column="72"> <block pos:line="10" pos:column="73">{
			<if pos:line="11" pos:column="25">if <condition pos:line="11" pos:column="28">(<expr><operator pos:line="11" pos:column="29">!<pos:position pos:line="11" pos:column="30"/></operator><call><name pos:line="11" pos:column="30">refresh_lock<pos:position pos:line="11" pos:column="42"/></name><argument_list pos:line="11" pos:column="42">(<argument><expr><name pos:line="11" pos:column="43">lock<pos:position pos:line="11" pos:column="47"/></name></expr></argument>)<pos:position pos:line="11" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="49"/></condition><then pos:line="11" pos:column="49"> <block pos:line="11" pos:column="50">{
				<expr_stmt><expr><call><name pos:line="12" pos:column="33">fprintf<pos:position pos:line="12" pos:column="40"/></name><argument_list pos:line="12" pos:column="40">(<argument><expr><name pos:line="12" pos:column="41">stderr<pos:position pos:line="12" pos:column="47"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="13" pos:column="41">"Unable to refresh lock for %s\n"<pos:position pos:line="13" pos:column="74"/></literal></expr></argument>,
					<argument><expr><name><name pos:line="14" pos:column="41">lock<pos:position pos:line="14" pos:column="45"/></name><operator pos:line="14" pos:column="45">-&gt;<pos:position pos:line="14" pos:column="50"/></operator><name pos:line="14" pos:column="47">url<pos:position pos:line="14" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="52"/></expr_stmt>
				<expr_stmt><expr><name pos:line="15" pos:column="33">aborted<pos:position pos:line="15" pos:column="40"/></name> <operator pos:line="15" pos:column="41">=<pos:position pos:line="15" pos:column="42"/></operator> <literal type="number" pos:line="15" pos:column="43">1<pos:position pos:line="15" pos:column="44"/></literal></expr>;<pos:position pos:line="15" pos:column="45"/></expr_stmt>
				<return pos:line="16" pos:column="33">return;<pos:position pos:line="16" pos:column="40"/></return>
			}<pos:position pos:line="17" pos:column="26"/></block></then></if>
		}<pos:position pos:line="18" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="19" pos:column="17">lock<pos:position pos:line="19" pos:column="21"/></name> <operator pos:line="19" pos:column="22">=<pos:position pos:line="19" pos:column="23"/></operator> <name><name pos:line="19" pos:column="24">lock<pos:position pos:line="19" pos:column="28"/></name><operator pos:line="19" pos:column="28">-&gt;<pos:position pos:line="19" pos:column="33"/></operator><name pos:line="19" pos:column="30">next<pos:position pos:line="19" pos:column="34"/></name></name></expr>;<pos:position pos:line="19" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="20" pos:column="10"/></block></while>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

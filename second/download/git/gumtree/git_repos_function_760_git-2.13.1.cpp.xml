<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_760_git-2.13.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">parse_opt_abbrev_cb<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">option<pos:position pos:line="1" pos:column="44"/></name></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">opt<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="51">const<pos:position pos:line="1" pos:column="56"/></specifier> <name pos:line="1" pos:column="57">char<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">arg<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="68">int<pos:position pos:line="1" pos:column="71"/></name></type> <name pos:line="1" pos:column="72">unset<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="78"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">v<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">arg<pos:position pos:line="5" pos:column="17"/></name></expr>)<pos:position pos:line="5" pos:column="18"/></condition><then pos:line="5" pos:column="18"> <block pos:line="5" pos:column="19">{
		<expr_stmt><expr><name pos:line="6" pos:column="17">v<pos:position pos:line="6" pos:column="18"/></name> <operator pos:line="6" pos:column="19">=<pos:position pos:line="6" pos:column="20"/></operator> <ternary><condition><expr><name pos:line="6" pos:column="21">unset<pos:position pos:line="6" pos:column="26"/></name></expr> ?<pos:position pos:line="6" pos:column="28"/></condition><then pos:line="6" pos:column="28"> <expr><literal type="number" pos:line="6" pos:column="29">0<pos:position pos:line="6" pos:column="30"/></literal></expr> <pos:position pos:line="6" pos:column="31"/></then><else pos:line="6" pos:column="31">: <expr><name pos:line="6" pos:column="33">DEFAULT_ABBREV<pos:position pos:line="6" pos:column="47"/></name></expr></else></ternary></expr>;<pos:position pos:line="6" pos:column="48"/></expr_stmt>
	}<pos:position pos:line="7" pos:column="10"/></block></then> <else pos:line="7" pos:column="11">else <block pos:line="7" pos:column="16">{
		<expr_stmt><expr><name pos:line="8" pos:column="17">v<pos:position pos:line="8" pos:column="18"/></name> <operator pos:line="8" pos:column="19">=<pos:position pos:line="8" pos:column="20"/></operator> <call><name pos:line="8" pos:column="21">strtol<pos:position pos:line="8" pos:column="27"/></name><argument_list pos:line="8" pos:column="27">(<argument><expr><name pos:line="8" pos:column="28">arg<pos:position pos:line="8" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="33">(<pos:position pos:line="8" pos:column="34"/></operator><name pos:line="8" pos:column="34">char<pos:position pos:line="8" pos:column="38"/></name> <operator pos:line="8" pos:column="39">*<pos:position pos:line="8" pos:column="40"/></operator><operator pos:line="8" pos:column="40">*<pos:position pos:line="8" pos:column="41"/></operator><operator pos:line="8" pos:column="41">)<pos:position pos:line="8" pos:column="42"/></operator><operator pos:line="8" pos:column="42">&amp;<pos:position pos:line="8" pos:column="47"/></operator><name pos:line="8" pos:column="43">arg<pos:position pos:line="8" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="48">10<pos:position pos:line="8" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="52"/></expr_stmt>
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><operator pos:line="9" pos:column="21">*<pos:position pos:line="9" pos:column="22"/></operator><name pos:line="9" pos:column="22">arg<pos:position pos:line="9" pos:column="25"/></name></expr>)<pos:position pos:line="9" pos:column="26"/></condition><then pos:line="9" pos:column="26">
			<block type="pseudo"><return pos:line="10" pos:column="25">return <expr><call><name pos:line="10" pos:column="32">opterror<pos:position pos:line="10" pos:column="40"/></name><argument_list pos:line="10" pos:column="40">(<argument><expr><name pos:line="10" pos:column="41">opt<pos:position pos:line="10" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="46">"expects a numerical value"<pos:position pos:line="10" pos:column="73"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="75">0<pos:position pos:line="10" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="78"/></return></block></then></if>
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><name pos:line="11" pos:column="21">v<pos:position pos:line="11" pos:column="22"/></name> <operator pos:line="11" pos:column="23">&amp;&amp;<pos:position pos:line="11" pos:column="33"/></operator> <name pos:line="11" pos:column="26">v<pos:position pos:line="11" pos:column="27"/></name> <operator pos:line="11" pos:column="28">&lt;<pos:position pos:line="11" pos:column="32"/></operator> <name pos:line="11" pos:column="30">MINIMUM_ABBREV<pos:position pos:line="11" pos:column="44"/></name></expr>)<pos:position pos:line="11" pos:column="45"/></condition><then pos:line="11" pos:column="45">
			<block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="25">v<pos:position pos:line="12" pos:column="26"/></name> <operator pos:line="12" pos:column="27">=<pos:position pos:line="12" pos:column="28"/></operator> <name pos:line="12" pos:column="29">MINIMUM_ABBREV<pos:position pos:line="12" pos:column="43"/></name></expr>;<pos:position pos:line="12" pos:column="44"/></expr_stmt></block></then>
		<elseif pos:line="13" pos:column="17">else <if pos:line="13" pos:column="22">if <condition pos:line="13" pos:column="25">(<expr><name pos:line="13" pos:column="26">v<pos:position pos:line="13" pos:column="27"/></name> <operator pos:line="13" pos:column="28">&gt;<pos:position pos:line="13" pos:column="32"/></operator> <literal type="number" pos:line="13" pos:column="30">40<pos:position pos:line="13" pos:column="32"/></literal></expr>)<pos:position pos:line="13" pos:column="33"/></condition><then pos:line="13" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="25">v<pos:position pos:line="14" pos:column="26"/></name> <operator pos:line="14" pos:column="27">=<pos:position pos:line="14" pos:column="28"/></operator> <literal type="number" pos:line="14" pos:column="29">40<pos:position pos:line="14" pos:column="31"/></literal></expr>;<pos:position pos:line="14" pos:column="32"/></expr_stmt></block></then></if></elseif></if>
	}<pos:position pos:line="15" pos:column="10"/></block></else></if>
	<expr_stmt><expr><operator pos:line="16" pos:column="9">*<pos:position pos:line="16" pos:column="10"/></operator><operator pos:line="16" pos:column="10">(<pos:position pos:line="16" pos:column="11"/></operator><name pos:line="16" pos:column="11">int<pos:position pos:line="16" pos:column="14"/></name> <operator pos:line="16" pos:column="15">*<pos:position pos:line="16" pos:column="16"/></operator><operator pos:line="16" pos:column="16">)<pos:position pos:line="16" pos:column="17"/></operator><operator pos:line="16" pos:column="17">(<pos:position pos:line="16" pos:column="18"/></operator><name><name pos:line="16" pos:column="18">opt<pos:position pos:line="16" pos:column="21"/></name><operator pos:line="16" pos:column="21">-&gt;<pos:position pos:line="16" pos:column="26"/></operator><name pos:line="16" pos:column="23">value<pos:position pos:line="16" pos:column="28"/></name></name><operator pos:line="16" pos:column="28">)<pos:position pos:line="16" pos:column="29"/></operator> <operator pos:line="16" pos:column="30">=<pos:position pos:line="16" pos:column="31"/></operator> <name pos:line="16" pos:column="32">v<pos:position pos:line="16" pos:column="33"/></name></expr>;<pos:position pos:line="16" pos:column="34"/></expr_stmt>
	<return pos:line="17" pos:column="9">return <expr><literal type="number" pos:line="17" pos:column="16">0<pos:position pos:line="17" pos:column="17"/></literal></expr>;<pos:position pos:line="17" pos:column="18"/></return>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

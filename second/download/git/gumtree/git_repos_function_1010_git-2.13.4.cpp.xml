<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1010_git-2.13.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">wt_longstatus_print_submodule_summary<pos:position pos:line="1" pos:column="50"/></name><parameter_list pos:line="1" pos:column="50">(<parameter><decl><type><name><name pos:line="1" pos:column="51">struct<pos:position pos:line="1" pos:column="57"/></name> <name pos:line="1" pos:column="58">wt_status<pos:position pos:line="1" pos:column="67"/></name></name> <modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier></type><name pos:line="1" pos:column="69">s<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="72">int<pos:position pos:line="1" pos:column="75"/></name></type> <name pos:line="1" pos:column="76">uncommitted<pos:position pos:line="1" pos:column="87"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="88"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">child_process<pos:position pos:line="3" pos:column="29"/></name></name></type> <name pos:line="3" pos:column="30">sm_summary<pos:position pos:line="3" pos:column="40"/></name> <init pos:line="3" pos:column="41">= <expr><name pos:line="3" pos:column="43">CHILD_PROCESS_INIT<pos:position pos:line="3" pos:column="61"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="62"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">strbuf<pos:position pos:line="4" pos:column="22"/></name></name></type> <name pos:line="4" pos:column="23">cmd_stdout<pos:position pos:line="4" pos:column="33"/></name> <init pos:line="4" pos:column="34">= <expr><name pos:line="4" pos:column="36">STRBUF_INIT<pos:position pos:line="4" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="48"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">strbuf<pos:position pos:line="5" pos:column="22"/></name></name></type> <name pos:line="5" pos:column="23">summary<pos:position pos:line="5" pos:column="30"/></name> <init pos:line="5" pos:column="31">= <expr><name pos:line="5" pos:column="33">STRBUF_INIT<pos:position pos:line="5" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="45"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">summary_content<pos:position pos:line="6" pos:column="30"/></name></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="8" pos:column="9">argv_array_pushf<pos:position pos:line="8" pos:column="25"/></name><argument_list pos:line="8" pos:column="25">(<argument><expr><operator pos:line="8" pos:column="26">&amp;<pos:position pos:line="8" pos:column="31"/></operator><name><name pos:line="8" pos:column="27">sm_summary<pos:position pos:line="8" pos:column="37"/></name><operator pos:line="8" pos:column="37">.<pos:position pos:line="8" pos:column="38"/></operator><name pos:line="8" pos:column="38">env_array<pos:position pos:line="8" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="49">"GIT_INDEX_FILE=%s"<pos:position pos:line="8" pos:column="68"/></literal></expr></argument>,
			 <argument><expr><name><name pos:line="9" pos:column="26">s<pos:position pos:line="9" pos:column="27"/></name><operator pos:line="9" pos:column="27">-&gt;<pos:position pos:line="9" pos:column="32"/></operator><name pos:line="9" pos:column="29">index_file<pos:position pos:line="9" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="41"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="11" pos:column="9">argv_array_push<pos:position pos:line="11" pos:column="24"/></name><argument_list pos:line="11" pos:column="24">(<argument><expr><operator pos:line="11" pos:column="25">&amp;<pos:position pos:line="11" pos:column="30"/></operator><name><name pos:line="11" pos:column="26">sm_summary<pos:position pos:line="11" pos:column="36"/></name><operator pos:line="11" pos:column="36">.<pos:position pos:line="11" pos:column="37"/></operator><name pos:line="11" pos:column="37">args<pos:position pos:line="11" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="43">"submodule"<pos:position pos:line="11" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="56"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="12" pos:column="9">argv_array_push<pos:position pos:line="12" pos:column="24"/></name><argument_list pos:line="12" pos:column="24">(<argument><expr><operator pos:line="12" pos:column="25">&amp;<pos:position pos:line="12" pos:column="30"/></operator><name><name pos:line="12" pos:column="26">sm_summary<pos:position pos:line="12" pos:column="36"/></name><operator pos:line="12" pos:column="36">.<pos:position pos:line="12" pos:column="37"/></operator><name pos:line="12" pos:column="37">args<pos:position pos:line="12" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="43">"summary"<pos:position pos:line="12" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="54"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="13" pos:column="9">argv_array_push<pos:position pos:line="13" pos:column="24"/></name><argument_list pos:line="13" pos:column="24">(<argument><expr><operator pos:line="13" pos:column="25">&amp;<pos:position pos:line="13" pos:column="30"/></operator><name><name pos:line="13" pos:column="26">sm_summary<pos:position pos:line="13" pos:column="36"/></name><operator pos:line="13" pos:column="36">.<pos:position pos:line="13" pos:column="37"/></operator><name pos:line="13" pos:column="37">args<pos:position pos:line="13" pos:column="41"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="13" pos:column="43">uncommitted<pos:position pos:line="13" pos:column="54"/></name></expr> ?<pos:position pos:line="13" pos:column="56"/></condition><then pos:line="13" pos:column="56"> <expr><literal type="string" pos:line="13" pos:column="57">"--files"<pos:position pos:line="13" pos:column="66"/></literal></expr> <pos:position pos:line="13" pos:column="67"/></then><else pos:line="13" pos:column="67">: <expr><literal type="string" pos:line="13" pos:column="69">"--cached"<pos:position pos:line="13" pos:column="79"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="13" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="81"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="14" pos:column="9">argv_array_push<pos:position pos:line="14" pos:column="24"/></name><argument_list pos:line="14" pos:column="24">(<argument><expr><operator pos:line="14" pos:column="25">&amp;<pos:position pos:line="14" pos:column="30"/></operator><name><name pos:line="14" pos:column="26">sm_summary<pos:position pos:line="14" pos:column="36"/></name><operator pos:line="14" pos:column="36">.<pos:position pos:line="14" pos:column="37"/></operator><name pos:line="14" pos:column="37">args<pos:position pos:line="14" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="43">"--for-status"<pos:position pos:line="14" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="59"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="15" pos:column="9">argv_array_push<pos:position pos:line="15" pos:column="24"/></name><argument_list pos:line="15" pos:column="24">(<argument><expr><operator pos:line="15" pos:column="25">&amp;<pos:position pos:line="15" pos:column="30"/></operator><name><name pos:line="15" pos:column="26">sm_summary<pos:position pos:line="15" pos:column="36"/></name><operator pos:line="15" pos:column="36">.<pos:position pos:line="15" pos:column="37"/></operator><name pos:line="15" pos:column="37">args<pos:position pos:line="15" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="43">"--summary-limit"<pos:position pos:line="15" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="62"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="16" pos:column="9">argv_array_pushf<pos:position pos:line="16" pos:column="25"/></name><argument_list pos:line="16" pos:column="25">(<argument><expr><operator pos:line="16" pos:column="26">&amp;<pos:position pos:line="16" pos:column="31"/></operator><name><name pos:line="16" pos:column="27">sm_summary<pos:position pos:line="16" pos:column="37"/></name><operator pos:line="16" pos:column="37">.<pos:position pos:line="16" pos:column="38"/></operator><name pos:line="16" pos:column="38">args<pos:position pos:line="16" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="44">"%d"<pos:position pos:line="16" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="50">s<pos:position pos:line="16" pos:column="51"/></name><operator pos:line="16" pos:column="51">-&gt;<pos:position pos:line="16" pos:column="56"/></operator><name pos:line="16" pos:column="53">submodule_summary<pos:position pos:line="16" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="72"/></expr_stmt>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><operator pos:line="17" pos:column="13">!<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="14">uncommitted<pos:position pos:line="17" pos:column="25"/></name></expr>)<pos:position pos:line="17" pos:column="26"/></condition><then pos:line="17" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="17">argv_array_push<pos:position pos:line="18" pos:column="32"/></name><argument_list pos:line="18" pos:column="32">(<argument><expr><operator pos:line="18" pos:column="33">&amp;<pos:position pos:line="18" pos:column="38"/></operator><name><name pos:line="18" pos:column="34">sm_summary<pos:position pos:line="18" pos:column="44"/></name><operator pos:line="18" pos:column="44">.<pos:position pos:line="18" pos:column="45"/></operator><name pos:line="18" pos:column="45">args<pos:position pos:line="18" pos:column="49"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="18" pos:column="51">s<pos:position pos:line="18" pos:column="52"/></name><operator pos:line="18" pos:column="52">-&gt;<pos:position pos:line="18" pos:column="57"/></operator><name pos:line="18" pos:column="54">amend<pos:position pos:line="18" pos:column="59"/></name></name></expr> ?<pos:position pos:line="18" pos:column="61"/></condition><then pos:line="18" pos:column="61"> <expr><literal type="string" pos:line="18" pos:column="62">"HEAD^"<pos:position pos:line="18" pos:column="69"/></literal></expr> <pos:position pos:line="18" pos:column="70"/></then><else pos:line="18" pos:column="70">: <expr><literal type="string" pos:line="18" pos:column="72">"HEAD"<pos:position pos:line="18" pos:column="78"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="18" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="80"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name><name pos:line="20" pos:column="9">sm_summary<pos:position pos:line="20" pos:column="19"/></name><operator pos:line="20" pos:column="19">.<pos:position pos:line="20" pos:column="20"/></operator><name pos:line="20" pos:column="20">git_cmd<pos:position pos:line="20" pos:column="27"/></name></name> <operator pos:line="20" pos:column="28">=<pos:position pos:line="20" pos:column="29"/></operator> <literal type="number" pos:line="20" pos:column="30">1<pos:position pos:line="20" pos:column="31"/></literal></expr>;<pos:position pos:line="20" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="21" pos:column="9">sm_summary<pos:position pos:line="21" pos:column="19"/></name><operator pos:line="21" pos:column="19">.<pos:position pos:line="21" pos:column="20"/></operator><name pos:line="21" pos:column="20">no_stdin<pos:position pos:line="21" pos:column="28"/></name></name> <operator pos:line="21" pos:column="29">=<pos:position pos:line="21" pos:column="30"/></operator> <literal type="number" pos:line="21" pos:column="31">1<pos:position pos:line="21" pos:column="32"/></literal></expr>;<pos:position pos:line="21" pos:column="33"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="23" pos:column="9">capture_command<pos:position pos:line="23" pos:column="24"/></name><argument_list pos:line="23" pos:column="24">(<argument><expr><operator pos:line="23" pos:column="25">&amp;<pos:position pos:line="23" pos:column="30"/></operator><name pos:line="23" pos:column="26">sm_summary<pos:position pos:line="23" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="38">&amp;<pos:position pos:line="23" pos:column="43"/></operator><name pos:line="23" pos:column="39">cmd_stdout<pos:position pos:line="23" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="51">1024<pos:position pos:line="23" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="57"/></expr_stmt>

	<comment type="block" pos:line="25" pos:column="9">/* prepend header, only if there's an actual output */</comment>
	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name><name pos:line="26" pos:column="13">cmd_stdout<pos:position pos:line="26" pos:column="23"/></name><operator pos:line="26" pos:column="23">.<pos:position pos:line="26" pos:column="24"/></operator><name pos:line="26" pos:column="24">len<pos:position pos:line="26" pos:column="27"/></name></name></expr>)<pos:position pos:line="26" pos:column="28"/></condition><then pos:line="26" pos:column="28"> <block pos:line="26" pos:column="29">{
		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><name pos:line="27" pos:column="21">uncommitted<pos:position pos:line="27" pos:column="32"/></name></expr>)<pos:position pos:line="27" pos:column="33"/></condition><then pos:line="27" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="25">strbuf_addstr<pos:position pos:line="28" pos:column="38"/></name><argument_list pos:line="28" pos:column="38">(<argument><expr><operator pos:line="28" pos:column="39">&amp;<pos:position pos:line="28" pos:column="44"/></operator><name pos:line="28" pos:column="40">summary<pos:position pos:line="28" pos:column="47"/></name></expr></argument>, <argument><expr><call><name pos:line="28" pos:column="49">_<pos:position pos:line="28" pos:column="50"/></name><argument_list pos:line="28" pos:column="50">(<argument><expr><literal type="string" pos:line="28" pos:column="51">"Submodules changed but not updated:"<pos:position pos:line="28" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="89"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="91"/></expr_stmt></block></then>
		<else pos:line="29" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="25">strbuf_addstr<pos:position pos:line="30" pos:column="38"/></name><argument_list pos:line="30" pos:column="38">(<argument><expr><operator pos:line="30" pos:column="39">&amp;<pos:position pos:line="30" pos:column="44"/></operator><name pos:line="30" pos:column="40">summary<pos:position pos:line="30" pos:column="47"/></name></expr></argument>, <argument><expr><call><name pos:line="30" pos:column="49">_<pos:position pos:line="30" pos:column="50"/></name><argument_list pos:line="30" pos:column="50">(<argument><expr><literal type="string" pos:line="30" pos:column="51">"Submodule changes to be committed:"<pos:position pos:line="30" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="88"/></argument_list></call></expr></argument>)<pos:position pos:line="30" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="90"/></expr_stmt></block></else></if>
		<expr_stmt><expr><call><name pos:line="31" pos:column="17">strbuf_addstr<pos:position pos:line="31" pos:column="30"/></name><argument_list pos:line="31" pos:column="30">(<argument><expr><operator pos:line="31" pos:column="31">&amp;<pos:position pos:line="31" pos:column="36"/></operator><name pos:line="31" pos:column="32">summary<pos:position pos:line="31" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="41">"\n\n"<pos:position pos:line="31" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="49"/></expr_stmt>
	}<pos:position pos:line="32" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="33" pos:column="9">strbuf_addbuf<pos:position pos:line="33" pos:column="22"/></name><argument_list pos:line="33" pos:column="22">(<argument><expr><operator pos:line="33" pos:column="23">&amp;<pos:position pos:line="33" pos:column="28"/></operator><name pos:line="33" pos:column="24">summary<pos:position pos:line="33" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="33">&amp;<pos:position pos:line="33" pos:column="38"/></operator><name pos:line="33" pos:column="34">cmd_stdout<pos:position pos:line="33" pos:column="44"/></name></expr></argument>)<pos:position pos:line="33" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="34" pos:column="9">strbuf_release<pos:position pos:line="34" pos:column="23"/></name><argument_list pos:line="34" pos:column="23">(<argument><expr><operator pos:line="34" pos:column="24">&amp;<pos:position pos:line="34" pos:column="29"/></operator><name pos:line="34" pos:column="25">cmd_stdout<pos:position pos:line="34" pos:column="35"/></name></expr></argument>)<pos:position pos:line="34" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="37"/></expr_stmt>

	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name><name pos:line="36" pos:column="13">s<pos:position pos:line="36" pos:column="14"/></name><operator pos:line="36" pos:column="14">-&gt;<pos:position pos:line="36" pos:column="19"/></operator><name pos:line="36" pos:column="16">display_comment_prefix<pos:position pos:line="36" pos:column="38"/></name></name></expr>)<pos:position pos:line="36" pos:column="39"/></condition><then pos:line="36" pos:column="39"> <block pos:line="36" pos:column="40">{
		<decl_stmt><decl><type><name pos:line="37" pos:column="17">size_t<pos:position pos:line="37" pos:column="23"/></name></type> <name pos:line="37" pos:column="24">len<pos:position pos:line="37" pos:column="27"/></name></decl>;<pos:position pos:line="37" pos:column="28"/></decl_stmt>
		<expr_stmt><expr><name pos:line="38" pos:column="17">summary_content<pos:position pos:line="38" pos:column="32"/></name> <operator pos:line="38" pos:column="33">=<pos:position pos:line="38" pos:column="34"/></operator> <call><name pos:line="38" pos:column="35">strbuf_detach<pos:position pos:line="38" pos:column="48"/></name><argument_list pos:line="38" pos:column="48">(<argument><expr><operator pos:line="38" pos:column="49">&amp;<pos:position pos:line="38" pos:column="54"/></operator><name pos:line="38" pos:column="50">summary<pos:position pos:line="38" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="59">&amp;<pos:position pos:line="38" pos:column="64"/></operator><name pos:line="38" pos:column="60">len<pos:position pos:line="38" pos:column="63"/></name></expr></argument>)<pos:position pos:line="38" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="65"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="39" pos:column="17">strbuf_add_commented_lines<pos:position pos:line="39" pos:column="43"/></name><argument_list pos:line="39" pos:column="43">(<argument><expr><operator pos:line="39" pos:column="44">&amp;<pos:position pos:line="39" pos:column="49"/></operator><name pos:line="39" pos:column="45">summary<pos:position pos:line="39" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="54">summary_content<pos:position pos:line="39" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="71">len<pos:position pos:line="39" pos:column="74"/></name></expr></argument>)<pos:position pos:line="39" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="76"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="40" pos:column="17">free<pos:position pos:line="40" pos:column="21"/></name><argument_list pos:line="40" pos:column="21">(<argument><expr><name pos:line="40" pos:column="22">summary_content<pos:position pos:line="40" pos:column="37"/></name></expr></argument>)<pos:position pos:line="40" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="39"/></expr_stmt>
	}<pos:position pos:line="41" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="43" pos:column="9">fputs<pos:position pos:line="43" pos:column="14"/></name><argument_list pos:line="43" pos:column="14">(<argument><expr><name><name pos:line="43" pos:column="15">summary<pos:position pos:line="43" pos:column="22"/></name><operator pos:line="43" pos:column="22">.<pos:position pos:line="43" pos:column="23"/></operator><name pos:line="43" pos:column="23">buf<pos:position pos:line="43" pos:column="26"/></name></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="28">s<pos:position pos:line="43" pos:column="29"/></name><operator pos:line="43" pos:column="29">-&gt;<pos:position pos:line="43" pos:column="34"/></operator><name pos:line="43" pos:column="31">fp<pos:position pos:line="43" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="44" pos:column="9">strbuf_release<pos:position pos:line="44" pos:column="23"/></name><argument_list pos:line="44" pos:column="23">(<argument><expr><operator pos:line="44" pos:column="24">&amp;<pos:position pos:line="44" pos:column="29"/></operator><name pos:line="44" pos:column="25">summary<pos:position pos:line="44" pos:column="32"/></name></expr></argument>)<pos:position pos:line="44" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="34"/></expr_stmt>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

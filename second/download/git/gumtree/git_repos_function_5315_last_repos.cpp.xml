<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5315_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">builtin_diff_b_f<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name><name pos:line="1" pos:column="29">struct<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">rev_info<pos:position pos:line="1" pos:column="44"/></name></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">revs<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>,
			    <parameter><decl><type><name pos:line="2" pos:column="29">int<pos:position pos:line="2" pos:column="32"/></name></type> <name pos:line="2" pos:column="33">argc<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="39">const<pos:position pos:line="2" pos:column="44"/></specifier> <name pos:line="2" pos:column="45">char<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier><modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">argv<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>,
			    <parameter><decl><type><name><name pos:line="3" pos:column="29">struct<pos:position pos:line="3" pos:column="35"/></name> <name pos:line="3" pos:column="36">object_array_entry<pos:position pos:line="3" pos:column="54"/></name></name> <modifier pos:line="3" pos:column="55">*<pos:position pos:line="3" pos:column="56"/></modifier><modifier pos:line="3" pos:column="56">*<pos:position pos:line="3" pos:column="57"/></modifier></type><name pos:line="3" pos:column="57">blob<pos:position pos:line="3" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="62"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<comment type="block" pos:line="5" pos:column="9">/* Blob vs file in the working tree*/</comment>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">stat<pos:position pos:line="6" pos:column="20"/></name></name></type> <name pos:line="6" pos:column="21">st<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name pos:line="7" pos:column="15">char<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">path<pos:position pos:line="7" pos:column="25"/></name></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">argc<pos:position pos:line="9" pos:column="17"/></name> <operator pos:line="9" pos:column="18">&gt;<pos:position pos:line="9" pos:column="22"/></operator> <literal type="number" pos:line="9" pos:column="20">1<pos:position pos:line="9" pos:column="21"/></literal></expr>)<pos:position pos:line="9" pos:column="22"/></condition><then pos:line="9" pos:column="22">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="17">usage<pos:position pos:line="10" pos:column="22"/></name><argument_list pos:line="10" pos:column="22">(<argument><expr><name pos:line="10" pos:column="23">builtin_diff_usage<pos:position pos:line="10" pos:column="41"/></name></expr></argument>)<pos:position pos:line="10" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="43"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="12" pos:column="9">GUARD_PATHSPEC<pos:position pos:line="12" pos:column="23"/></name><argument_list pos:line="12" pos:column="23">(<argument><expr><operator pos:line="12" pos:column="24">&amp;<pos:position pos:line="12" pos:column="29"/></operator><name><name pos:line="12" pos:column="25">revs<pos:position pos:line="12" pos:column="29"/></name><operator pos:line="12" pos:column="29">-&gt;<pos:position pos:line="12" pos:column="34"/></operator><name pos:line="12" pos:column="31">prune_data<pos:position pos:line="12" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="43">PATHSPEC_FROMTOP<pos:position pos:line="12" pos:column="59"/></name> <operator pos:line="12" pos:column="60">|<pos:position pos:line="12" pos:column="61"/></operator> <name pos:line="12" pos:column="62">PATHSPEC_LITERAL<pos:position pos:line="12" pos:column="78"/></name></expr></argument>)<pos:position pos:line="12" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="80"/></expr_stmt>
	<expr_stmt><expr><name pos:line="13" pos:column="9">path<pos:position pos:line="13" pos:column="13"/></name> <operator pos:line="13" pos:column="14">=<pos:position pos:line="13" pos:column="15"/></operator> <name><name pos:line="13" pos:column="16">revs<pos:position pos:line="13" pos:column="20"/></name><operator pos:line="13" pos:column="20">-&gt;<pos:position pos:line="13" pos:column="25"/></operator><name pos:line="13" pos:column="22">prune_data<pos:position pos:line="13" pos:column="32"/></name><operator pos:line="13" pos:column="32">.<pos:position pos:line="13" pos:column="33"/></operator><name pos:line="13" pos:column="33">items<pos:position pos:line="13" pos:column="38"/></name><index pos:line="13" pos:column="38">[<expr><literal type="number" pos:line="13" pos:column="39">0<pos:position pos:line="13" pos:column="40"/></literal></expr>]<pos:position pos:line="13" pos:column="41"/></index></name><operator pos:line="13" pos:column="41">.<pos:position pos:line="13" pos:column="42"/></operator><name pos:line="13" pos:column="42">match<pos:position pos:line="13" pos:column="47"/></name></expr>;<pos:position pos:line="13" pos:column="48"/></expr_stmt>

	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><call><name pos:line="15" pos:column="13">lstat<pos:position pos:line="15" pos:column="18"/></name><argument_list pos:line="15" pos:column="18">(<argument><expr><name pos:line="15" pos:column="19">path<pos:position pos:line="15" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="25">&amp;<pos:position pos:line="15" pos:column="30"/></operator><name pos:line="15" pos:column="26">st<pos:position pos:line="15" pos:column="28"/></name></expr></argument>)<pos:position pos:line="15" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="30"/></condition><then pos:line="15" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="17">die_errno<pos:position pos:line="16" pos:column="26"/></name><argument_list pos:line="16" pos:column="26">(<argument><expr><call><name pos:line="16" pos:column="27">_<pos:position pos:line="16" pos:column="28"/></name><argument_list pos:line="16" pos:column="28">(<argument><expr><literal type="string" pos:line="16" pos:column="29">"failed to stat '%s'"<pos:position pos:line="16" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="51"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="16" pos:column="53">path<pos:position pos:line="16" pos:column="57"/></name></expr></argument>)<pos:position pos:line="16" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="59"/></expr_stmt></block></then></if>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><operator pos:line="17" pos:column="13">!<pos:position pos:line="17" pos:column="14"/></operator><operator pos:line="17" pos:column="14">(<pos:position pos:line="17" pos:column="15"/></operator><call><name pos:line="17" pos:column="15">S_ISREG<pos:position pos:line="17" pos:column="22"/></name><argument_list pos:line="17" pos:column="22">(<argument><expr><name><name pos:line="17" pos:column="23">st<pos:position pos:line="17" pos:column="25"/></name><operator pos:line="17" pos:column="25">.<pos:position pos:line="17" pos:column="26"/></operator><name pos:line="17" pos:column="26">st_mode<pos:position pos:line="17" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="34"/></argument_list></call> <operator pos:line="17" pos:column="35">||<pos:position pos:line="17" pos:column="37"/></operator> <call><name pos:line="17" pos:column="38">S_ISLNK<pos:position pos:line="17" pos:column="45"/></name><argument_list pos:line="17" pos:column="45">(<argument><expr><name><name pos:line="17" pos:column="46">st<pos:position pos:line="17" pos:column="48"/></name><operator pos:line="17" pos:column="48">.<pos:position pos:line="17" pos:column="49"/></operator><name pos:line="17" pos:column="49">st_mode<pos:position pos:line="17" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="57"/></argument_list></call><operator pos:line="17" pos:column="57">)<pos:position pos:line="17" pos:column="58"/></operator></expr>)<pos:position pos:line="17" pos:column="59"/></condition><then pos:line="17" pos:column="59">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="17">die<pos:position pos:line="18" pos:column="20"/></name><argument_list pos:line="18" pos:column="20">(<argument><expr><call><name pos:line="18" pos:column="21">_<pos:position pos:line="18" pos:column="22"/></name><argument_list pos:line="18" pos:column="22">(<argument><expr><literal type="string" pos:line="18" pos:column="23">"'%s': not a regular file or symlink"<pos:position pos:line="18" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="61"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="18" pos:column="63">path<pos:position pos:line="18" pos:column="67"/></name></expr></argument>)<pos:position pos:line="18" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="69"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="20" pos:column="9">diff_set_mnemonic_prefix<pos:position pos:line="20" pos:column="33"/></name><argument_list pos:line="20" pos:column="33">(<argument><expr><operator pos:line="20" pos:column="34">&amp;<pos:position pos:line="20" pos:column="39"/></operator><name><name pos:line="20" pos:column="35">revs<pos:position pos:line="20" pos:column="39"/></name><operator pos:line="20" pos:column="39">-&gt;<pos:position pos:line="20" pos:column="44"/></operator><name pos:line="20" pos:column="41">diffopt<pos:position pos:line="20" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="50">"o/"<pos:position pos:line="20" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="56">"w/"<pos:position pos:line="20" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="62"/></expr_stmt>

	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name><name pos:line="22" pos:column="13">blob<pos:position pos:line="22" pos:column="17"/></name><index pos:line="22" pos:column="17">[<expr><literal type="number" pos:line="22" pos:column="18">0<pos:position pos:line="22" pos:column="19"/></literal></expr>]<pos:position pos:line="22" pos:column="20"/></index></name><operator pos:line="22" pos:column="20">-&gt;<pos:position pos:line="22" pos:column="25"/></operator><name pos:line="22" pos:column="22">mode<pos:position pos:line="22" pos:column="26"/></name> <operator pos:line="22" pos:column="27">==<pos:position pos:line="22" pos:column="29"/></operator> <name pos:line="22" pos:column="30">S_IFINVALID<pos:position pos:line="22" pos:column="41"/></name></expr>)<pos:position pos:line="22" pos:column="42"/></condition><then pos:line="22" pos:column="42">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="23" pos:column="17">blob<pos:position pos:line="23" pos:column="21"/></name><index pos:line="23" pos:column="21">[<expr><literal type="number" pos:line="23" pos:column="22">0<pos:position pos:line="23" pos:column="23"/></literal></expr>]<pos:position pos:line="23" pos:column="24"/></index></name><operator pos:line="23" pos:column="24">-&gt;<pos:position pos:line="23" pos:column="29"/></operator><name pos:line="23" pos:column="26">mode<pos:position pos:line="23" pos:column="30"/></name> <operator pos:line="23" pos:column="31">=<pos:position pos:line="23" pos:column="32"/></operator> <call><name pos:line="23" pos:column="33">canon_mode<pos:position pos:line="23" pos:column="43"/></name><argument_list pos:line="23" pos:column="43">(<argument><expr><name><name pos:line="23" pos:column="44">st<pos:position pos:line="23" pos:column="46"/></name><operator pos:line="23" pos:column="46">.<pos:position pos:line="23" pos:column="47"/></operator><name pos:line="23" pos:column="47">st_mode<pos:position pos:line="23" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="56"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="25" pos:column="9">stuff_change<pos:position pos:line="25" pos:column="21"/></name><argument_list pos:line="25" pos:column="21">(<argument><expr><operator pos:line="25" pos:column="22">&amp;<pos:position pos:line="25" pos:column="27"/></operator><name><name pos:line="25" pos:column="23">revs<pos:position pos:line="25" pos:column="27"/></name><operator pos:line="25" pos:column="27">-&gt;<pos:position pos:line="25" pos:column="32"/></operator><name pos:line="25" pos:column="29">diffopt<pos:position pos:line="25" pos:column="36"/></name></name></expr></argument>,
		     <argument><expr><name><name pos:line="26" pos:column="22">blob<pos:position pos:line="26" pos:column="26"/></name><index pos:line="26" pos:column="26">[<expr><literal type="number" pos:line="26" pos:column="27">0<pos:position pos:line="26" pos:column="28"/></literal></expr>]<pos:position pos:line="26" pos:column="29"/></index></name><operator pos:line="26" pos:column="29">-&gt;<pos:position pos:line="26" pos:column="34"/></operator><name pos:line="26" pos:column="31">mode<pos:position pos:line="26" pos:column="35"/></name></expr></argument>, <argument><expr><call><name pos:line="26" pos:column="37">canon_mode<pos:position pos:line="26" pos:column="47"/></name><argument_list pos:line="26" pos:column="47">(<argument><expr><name><name pos:line="26" pos:column="48">st<pos:position pos:line="26" pos:column="50"/></name><operator pos:line="26" pos:column="50">.<pos:position pos:line="26" pos:column="51"/></operator><name pos:line="26" pos:column="51">st_mode<pos:position pos:line="26" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="59"/></argument_list></call></expr></argument>,
		     <argument><expr><operator pos:line="27" pos:column="22">&amp;<pos:position pos:line="27" pos:column="27"/></operator><name><name pos:line="27" pos:column="23">blob<pos:position pos:line="27" pos:column="27"/></name><index pos:line="27" pos:column="27">[<expr><literal type="number" pos:line="27" pos:column="28">0<pos:position pos:line="27" pos:column="29"/></literal></expr>]<pos:position pos:line="27" pos:column="30"/></index></name><operator pos:line="27" pos:column="30">-&gt;<pos:position pos:line="27" pos:column="35"/></operator><name><name pos:line="27" pos:column="32">item<pos:position pos:line="27" pos:column="36"/></name><operator pos:line="27" pos:column="36">-&gt;<pos:position pos:line="27" pos:column="41"/></operator><name pos:line="27" pos:column="38">oid<pos:position pos:line="27" pos:column="41"/></name></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="43">&amp;<pos:position pos:line="27" pos:column="48"/></operator><name pos:line="27" pos:column="44">null_oid<pos:position pos:line="27" pos:column="52"/></name></expr></argument>,
		     <argument><expr><literal type="number" pos:line="28" pos:column="22">1<pos:position pos:line="28" pos:column="23"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="25">0<pos:position pos:line="28" pos:column="26"/></literal></expr></argument>,
		     <argument><expr><ternary><condition><expr><name><name pos:line="29" pos:column="22">blob<pos:position pos:line="29" pos:column="26"/></name><index pos:line="29" pos:column="26">[<expr><literal type="number" pos:line="29" pos:column="27">0<pos:position pos:line="29" pos:column="28"/></literal></expr>]<pos:position pos:line="29" pos:column="29"/></index></name><operator pos:line="29" pos:column="29">-&gt;<pos:position pos:line="29" pos:column="34"/></operator><name pos:line="29" pos:column="31">path<pos:position pos:line="29" pos:column="35"/></name></expr> ?<pos:position pos:line="29" pos:column="37"/></condition><then pos:line="29" pos:column="37"> <expr><name><name pos:line="29" pos:column="38">blob<pos:position pos:line="29" pos:column="42"/></name><index pos:line="29" pos:column="42">[<expr><literal type="number" pos:line="29" pos:column="43">0<pos:position pos:line="29" pos:column="44"/></literal></expr>]<pos:position pos:line="29" pos:column="45"/></index></name><operator pos:line="29" pos:column="45">-&gt;<pos:position pos:line="29" pos:column="50"/></operator><name pos:line="29" pos:column="47">path<pos:position pos:line="29" pos:column="51"/></name></expr> <pos:position pos:line="29" pos:column="52"/></then><else pos:line="29" pos:column="52">: <expr><name pos:line="29" pos:column="54">path<pos:position pos:line="29" pos:column="58"/></name></expr></else></ternary></expr></argument>,
		     <argument><expr><name pos:line="30" pos:column="22">path<pos:position pos:line="30" pos:column="26"/></name></expr></argument>)<pos:position pos:line="30" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="31" pos:column="9">diffcore_std<pos:position pos:line="31" pos:column="21"/></name><argument_list pos:line="31" pos:column="21">(<argument><expr><operator pos:line="31" pos:column="22">&amp;<pos:position pos:line="31" pos:column="27"/></operator><name><name pos:line="31" pos:column="23">revs<pos:position pos:line="31" pos:column="27"/></name><operator pos:line="31" pos:column="27">-&gt;<pos:position pos:line="31" pos:column="32"/></operator><name pos:line="31" pos:column="29">diffopt<pos:position pos:line="31" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="32" pos:column="9">diff_flush<pos:position pos:line="32" pos:column="19"/></name><argument_list pos:line="32" pos:column="19">(<argument><expr><operator pos:line="32" pos:column="20">&amp;<pos:position pos:line="32" pos:column="25"/></operator><name><name pos:line="32" pos:column="21">revs<pos:position pos:line="32" pos:column="25"/></name><operator pos:line="32" pos:column="25">-&gt;<pos:position pos:line="32" pos:column="30"/></operator><name pos:line="32" pos:column="27">diffopt<pos:position pos:line="32" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="36"/></expr_stmt>
	<return pos:line="33" pos:column="9">return <expr><literal type="number" pos:line="33" pos:column="16">0<pos:position pos:line="33" pos:column="17"/></literal></expr>;<pos:position pos:line="33" pos:column="18"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

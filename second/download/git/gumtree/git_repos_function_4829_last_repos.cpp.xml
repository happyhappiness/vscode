<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4829_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">long<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">get_func_line<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">xdfenv_t<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">xe<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">xdemitconf_t<pos:position pos:line="1" pos:column="53"/></name> <specifier pos:line="1" pos:column="54">const<pos:position pos:line="1" pos:column="59"/></specifier> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">xecfg<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>,
			  <parameter><decl><type><name><name pos:line="2" pos:column="27">struct<pos:position pos:line="2" pos:column="33"/></name> <name pos:line="2" pos:column="34">func_line<pos:position pos:line="2" pos:column="43"/></name></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">func_line<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="56">long<pos:position pos:line="2" pos:column="60"/></name></type> <name pos:line="2" pos:column="61">start<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="68">long<pos:position pos:line="2" pos:column="72"/></name></type> <name pos:line="2" pos:column="73">limit<pos:position pos:line="2" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="79"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">long<pos:position pos:line="4" pos:column="13"/></name></type> <name pos:line="4" pos:column="14">l<pos:position pos:line="4" pos:column="15"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="17">size<pos:position pos:line="4" pos:column="21"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="23">step<pos:position pos:line="4" pos:column="27"/></name> <init pos:line="4" pos:column="28">= <expr><ternary><condition><expr><operator pos:line="4" pos:column="30">(<pos:position pos:line="4" pos:column="31"/></operator><name pos:line="4" pos:column="31">start<pos:position pos:line="4" pos:column="36"/></name> <operator pos:line="4" pos:column="37">&gt;<pos:position pos:line="4" pos:column="41"/></operator> <name pos:line="4" pos:column="39">limit<pos:position pos:line="4" pos:column="44"/></name><operator pos:line="4" pos:column="44">)<pos:position pos:line="4" pos:column="45"/></operator></expr> ?<pos:position pos:line="4" pos:column="47"/></condition><then pos:line="4" pos:column="47"> <expr><operator pos:line="4" pos:column="48">-<pos:position pos:line="4" pos:column="49"/></operator><literal type="number" pos:line="4" pos:column="49">1<pos:position pos:line="4" pos:column="50"/></literal></expr> <pos:position pos:line="4" pos:column="51"/></then><else pos:line="4" pos:column="51">: <expr><literal type="number" pos:line="4" pos:column="53">1<pos:position pos:line="4" pos:column="54"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="4" pos:column="55"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">buf<pos:position pos:line="5" pos:column="18"/></name></decl>, <decl><type ref="prev"/><name><name pos:line="5" pos:column="20">dummy<pos:position pos:line="5" pos:column="25"/></name><index pos:line="5" pos:column="25">[<expr><literal type="number" pos:line="5" pos:column="26">1<pos:position pos:line="5" pos:column="27"/></literal></expr>]<pos:position pos:line="5" pos:column="28"/></index></name></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>

	<expr_stmt><expr><name pos:line="7" pos:column="9">buf<pos:position pos:line="7" pos:column="12"/></name> <operator pos:line="7" pos:column="13">=<pos:position pos:line="7" pos:column="14"/></operator> <ternary><condition><expr><name pos:line="7" pos:column="15">func_line<pos:position pos:line="7" pos:column="24"/></name></expr> ?<pos:position pos:line="7" pos:column="26"/></condition><then pos:line="7" pos:column="26"> <expr><name><name pos:line="7" pos:column="27">func_line<pos:position pos:line="7" pos:column="36"/></name><operator pos:line="7" pos:column="36">-&gt;<pos:position pos:line="7" pos:column="41"/></operator><name pos:line="7" pos:column="38">buf<pos:position pos:line="7" pos:column="41"/></name></name></expr> <pos:position pos:line="7" pos:column="42"/></then><else pos:line="7" pos:column="42">: <expr><name pos:line="7" pos:column="44">dummy<pos:position pos:line="7" pos:column="49"/></name></expr></else></ternary></expr>;<pos:position pos:line="7" pos:column="50"/></expr_stmt>
	<expr_stmt><expr><name pos:line="8" pos:column="9">size<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">=<pos:position pos:line="8" pos:column="15"/></operator> <ternary><condition><expr><name pos:line="8" pos:column="16">func_line<pos:position pos:line="8" pos:column="25"/></name></expr> ?<pos:position pos:line="8" pos:column="27"/></condition><then pos:line="8" pos:column="27"> <expr><sizeof pos:line="8" pos:column="28">sizeof<argument_list pos:line="8" pos:column="34">(<argument><expr><name><name pos:line="8" pos:column="35">func_line<pos:position pos:line="8" pos:column="44"/></name><operator pos:line="8" pos:column="44">-&gt;<pos:position pos:line="8" pos:column="49"/></operator><name pos:line="8" pos:column="46">buf<pos:position pos:line="8" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="50"/></argument_list></sizeof></expr> <pos:position pos:line="8" pos:column="51"/></then><else pos:line="8" pos:column="51">: <expr><sizeof pos:line="8" pos:column="53">sizeof<argument_list pos:line="8" pos:column="59">(<argument><expr><name pos:line="8" pos:column="60">dummy<pos:position pos:line="8" pos:column="65"/></name></expr></argument>)<pos:position pos:line="8" pos:column="66"/></argument_list></sizeof></expr></else></ternary></expr>;<pos:position pos:line="8" pos:column="67"/></expr_stmt>

	<for pos:line="10" pos:column="9">for <control pos:line="10" pos:column="13">(<init><expr><name pos:line="10" pos:column="14">l<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">=<pos:position pos:line="10" pos:column="17"/></operator> <name pos:line="10" pos:column="18">start<pos:position pos:line="10" pos:column="23"/></name></expr>;<pos:position pos:line="10" pos:column="24"/></init> <condition><expr><name pos:line="10" pos:column="25">l<pos:position pos:line="10" pos:column="26"/></name> <operator pos:line="10" pos:column="27">!=<pos:position pos:line="10" pos:column="29"/></operator> <name pos:line="10" pos:column="30">limit<pos:position pos:line="10" pos:column="35"/></name> <operator pos:line="10" pos:column="36">&amp;&amp;<pos:position pos:line="10" pos:column="46"/></operator> <literal type="number" pos:line="10" pos:column="39">0<pos:position pos:line="10" pos:column="40"/></literal> <operator pos:line="10" pos:column="41">&lt;=<pos:position pos:line="10" pos:column="46"/></operator> <name pos:line="10" pos:column="44">l<pos:position pos:line="10" pos:column="45"/></name> <operator pos:line="10" pos:column="46">&amp;&amp;<pos:position pos:line="10" pos:column="56"/></operator> <name pos:line="10" pos:column="49">l<pos:position pos:line="10" pos:column="50"/></name> <operator pos:line="10" pos:column="51">&lt;<pos:position pos:line="10" pos:column="55"/></operator> <name><name pos:line="10" pos:column="53">xe<pos:position pos:line="10" pos:column="55"/></name><operator pos:line="10" pos:column="55">-&gt;<pos:position pos:line="10" pos:column="60"/></operator><name pos:line="10" pos:column="57">xdf1<pos:position pos:line="10" pos:column="61"/></name><operator pos:line="10" pos:column="61">.<pos:position pos:line="10" pos:column="62"/></operator><name pos:line="10" pos:column="62">nrec<pos:position pos:line="10" pos:column="66"/></name></name></expr>;<pos:position pos:line="10" pos:column="67"/></condition> <incr><expr><name pos:line="10" pos:column="68">l<pos:position pos:line="10" pos:column="69"/></name> <operator pos:line="10" pos:column="70">+=<pos:position pos:line="10" pos:column="72"/></operator> <name pos:line="10" pos:column="73">step<pos:position pos:line="10" pos:column="77"/></name></expr></incr>)<pos:position pos:line="10" pos:column="78"/></control> <block pos:line="10" pos:column="79">{
		<decl_stmt><decl><type><name pos:line="11" pos:column="17">long<pos:position pos:line="11" pos:column="21"/></name></type> <name pos:line="11" pos:column="22">len<pos:position pos:line="11" pos:column="25"/></name> <init pos:line="11" pos:column="26">= <expr><call><name pos:line="11" pos:column="28">match_func_rec<pos:position pos:line="11" pos:column="42"/></name><argument_list pos:line="11" pos:column="42">(<argument><expr><operator pos:line="11" pos:column="43">&amp;<pos:position pos:line="11" pos:column="48"/></operator><name><name pos:line="11" pos:column="44">xe<pos:position pos:line="11" pos:column="46"/></name><operator pos:line="11" pos:column="46">-&gt;<pos:position pos:line="11" pos:column="51"/></operator><name pos:line="11" pos:column="48">xdf1<pos:position pos:line="11" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="54">xecfg<pos:position pos:line="11" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="61">l<pos:position pos:line="11" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="64">buf<pos:position pos:line="11" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="69">size<pos:position pos:line="11" pos:column="73"/></name></expr></argument>)<pos:position pos:line="11" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="75"/></decl_stmt>
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><name pos:line="12" pos:column="21">len<pos:position pos:line="12" pos:column="24"/></name> <operator pos:line="12" pos:column="25">&gt;=<pos:position pos:line="12" pos:column="30"/></operator> <literal type="number" pos:line="12" pos:column="28">0<pos:position pos:line="12" pos:column="29"/></literal></expr>)<pos:position pos:line="12" pos:column="30"/></condition><then pos:line="12" pos:column="30"> <block pos:line="12" pos:column="31">{
			<if pos:line="13" pos:column="25">if <condition pos:line="13" pos:column="28">(<expr><name pos:line="13" pos:column="29">func_line<pos:position pos:line="13" pos:column="38"/></name></expr>)<pos:position pos:line="13" pos:column="39"/></condition><then pos:line="13" pos:column="39">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="14" pos:column="33">func_line<pos:position pos:line="14" pos:column="42"/></name><operator pos:line="14" pos:column="42">-&gt;<pos:position pos:line="14" pos:column="47"/></operator><name pos:line="14" pos:column="44">len<pos:position pos:line="14" pos:column="47"/></name></name> <operator pos:line="14" pos:column="48">=<pos:position pos:line="14" pos:column="49"/></operator> <name pos:line="14" pos:column="50">len<pos:position pos:line="14" pos:column="53"/></name></expr>;<pos:position pos:line="14" pos:column="54"/></expr_stmt></block></then></if>
			<return pos:line="15" pos:column="25">return <expr><name pos:line="15" pos:column="32">l<pos:position pos:line="15" pos:column="33"/></name></expr>;<pos:position pos:line="15" pos:column="34"/></return>
		}<pos:position pos:line="16" pos:column="18"/></block></then></if>
	}<pos:position pos:line="17" pos:column="10"/></block></for>
	<return pos:line="18" pos:column="9">return <expr><operator pos:line="18" pos:column="16">-<pos:position pos:line="18" pos:column="17"/></operator><literal type="number" pos:line="18" pos:column="17">1<pos:position pos:line="18" pos:column="18"/></literal></expr>;<pos:position pos:line="18" pos:column="19"/></return>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

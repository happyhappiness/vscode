<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6927_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">win32_compute_revents_socket<pos:position pos:line="2" pos:column="29"/></name> <parameter_list pos:line="2" pos:column="30">(<parameter><decl><type><name pos:line="2" pos:column="31">SOCKET<pos:position pos:line="2" pos:column="37"/></name></type> <name pos:line="2" pos:column="38">h<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="41">int<pos:position pos:line="2" pos:column="44"/></name></type> <name pos:line="2" pos:column="45">sought<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="53">long<pos:position pos:line="2" pos:column="57"/></name></type> <name pos:line="2" pos:column="58">lNetworkEvents<pos:position pos:line="2" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="73"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">happened<pos:position pos:line="4" pos:column="15"/></name> <init pos:line="4" pos:column="16">= <expr><literal type="number" pos:line="4" pos:column="18">0<pos:position pos:line="4" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><operator pos:line="6" pos:column="7">(<pos:position pos:line="6" pos:column="8"/></operator><name pos:line="6" pos:column="8">lNetworkEvents<pos:position pos:line="6" pos:column="22"/></name> <operator pos:line="6" pos:column="23">&amp;<pos:position pos:line="6" pos:column="28"/></operator> <operator pos:line="6" pos:column="25">(<pos:position pos:line="6" pos:column="26"/></operator><name pos:line="6" pos:column="26">FD_READ<pos:position pos:line="6" pos:column="33"/></name> <operator pos:line="6" pos:column="34">|<pos:position pos:line="6" pos:column="35"/></operator> <name pos:line="6" pos:column="36">FD_ACCEPT<pos:position pos:line="6" pos:column="45"/></name> <operator pos:line="6" pos:column="46">|<pos:position pos:line="6" pos:column="47"/></operator> <name pos:line="6" pos:column="48">FD_CLOSE<pos:position pos:line="6" pos:column="56"/></name><operator pos:line="6" pos:column="56">)<pos:position pos:line="6" pos:column="57"/></operator><operator pos:line="6" pos:column="57">)<pos:position pos:line="6" pos:column="58"/></operator> <operator pos:line="6" pos:column="59">==<pos:position pos:line="6" pos:column="61"/></operator> <name pos:line="6" pos:column="62">FD_ACCEPT<pos:position pos:line="6" pos:column="71"/></name></expr>)<pos:position pos:line="6" pos:column="72"/></condition><then pos:line="6" pos:column="72">
    <block type="pseudo"><expr_stmt><expr><name pos:line="7" pos:column="5">happened<pos:position pos:line="7" pos:column="13"/></name> <operator pos:line="7" pos:column="14">|=<pos:position pos:line="7" pos:column="16"/></operator> <operator pos:line="7" pos:column="17">(<pos:position pos:line="7" pos:column="18"/></operator><name pos:line="7" pos:column="18">POLLIN<pos:position pos:line="7" pos:column="24"/></name> <operator pos:line="7" pos:column="25">|<pos:position pos:line="7" pos:column="26"/></operator> <name pos:line="7" pos:column="27">POLLRDNORM<pos:position pos:line="7" pos:column="37"/></name><operator pos:line="7" pos:column="37">)<pos:position pos:line="7" pos:column="38"/></operator> <operator pos:line="7" pos:column="39">&amp;<pos:position pos:line="7" pos:column="44"/></operator> <name pos:line="7" pos:column="41">sought<pos:position pos:line="7" pos:column="47"/></name></expr>;<pos:position pos:line="7" pos:column="48"/></expr_stmt></block></then>

  <elseif pos:line="9" pos:column="3">else <if pos:line="9" pos:column="8">if <condition pos:line="9" pos:column="11">(<expr><name pos:line="9" pos:column="12">lNetworkEvents<pos:position pos:line="9" pos:column="26"/></name> <operator pos:line="9" pos:column="27">&amp;<pos:position pos:line="9" pos:column="32"/></operator> <operator pos:line="9" pos:column="29">(<pos:position pos:line="9" pos:column="30"/></operator><name pos:line="9" pos:column="30">FD_READ<pos:position pos:line="9" pos:column="37"/></name> <operator pos:line="9" pos:column="38">|<pos:position pos:line="9" pos:column="39"/></operator> <name pos:line="9" pos:column="40">FD_ACCEPT<pos:position pos:line="9" pos:column="49"/></name> <operator pos:line="9" pos:column="50">|<pos:position pos:line="9" pos:column="51"/></operator> <name pos:line="9" pos:column="52">FD_CLOSE<pos:position pos:line="9" pos:column="60"/></name><operator pos:line="9" pos:column="60">)<pos:position pos:line="9" pos:column="61"/></operator></expr>)<pos:position pos:line="9" pos:column="62"/></condition><then pos:line="9" pos:column="62">
    <block pos:line="10" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="11" pos:column="7">int<pos:position pos:line="11" pos:column="10"/></name></type> <name pos:line="11" pos:column="11">r<pos:position pos:line="11" pos:column="12"/></name></decl>, <decl><type ref="prev"/><name pos:line="11" pos:column="14">error<pos:position pos:line="11" pos:column="19"/></name></decl>;<pos:position pos:line="11" pos:column="20"/></decl_stmt>

      <decl_stmt><decl><type><name pos:line="13" pos:column="7">char<pos:position pos:line="13" pos:column="11"/></name></type> <name><name pos:line="13" pos:column="12">data<pos:position pos:line="13" pos:column="16"/></name><index pos:line="13" pos:column="16">[<expr><literal type="number" pos:line="13" pos:column="17">64<pos:position pos:line="13" pos:column="19"/></literal></expr>]<pos:position pos:line="13" pos:column="20"/></index></name></decl>;<pos:position pos:line="13" pos:column="21"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="14" pos:column="7">WSASetLastError<pos:position pos:line="14" pos:column="22"/></name> <argument_list pos:line="14" pos:column="23">(<argument><expr><literal type="number" pos:line="14" pos:column="24">0<pos:position pos:line="14" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="27"/></expr_stmt>
      <expr_stmt><expr><name pos:line="15" pos:column="7">r<pos:position pos:line="15" pos:column="8"/></name> <operator pos:line="15" pos:column="9">=<pos:position pos:line="15" pos:column="10"/></operator> <call><name pos:line="15" pos:column="11">recv<pos:position pos:line="15" pos:column="15"/></name> <argument_list pos:line="15" pos:column="16">(<argument><expr><name pos:line="15" pos:column="17">h<pos:position pos:line="15" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="20">data<pos:position pos:line="15" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="26">sizeof <argument_list pos:line="15" pos:column="33">(<argument><expr><name pos:line="15" pos:column="34">data<pos:position pos:line="15" pos:column="38"/></name></expr></argument>)<pos:position pos:line="15" pos:column="39"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="15" pos:column="41">MSG_PEEK<pos:position pos:line="15" pos:column="49"/></name></expr></argument>)<pos:position pos:line="15" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="51"/></expr_stmt>
      <expr_stmt><expr><name pos:line="16" pos:column="7">error<pos:position pos:line="16" pos:column="12"/></name> <operator pos:line="16" pos:column="13">=<pos:position pos:line="16" pos:column="14"/></operator> <call><name pos:line="16" pos:column="15">WSAGetLastError<pos:position pos:line="16" pos:column="30"/></name> <argument_list pos:line="16" pos:column="31">()<pos:position pos:line="16" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="34"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="17" pos:column="7">WSASetLastError<pos:position pos:line="17" pos:column="22"/></name> <argument_list pos:line="17" pos:column="23">(<argument><expr><literal type="number" pos:line="17" pos:column="24">0<pos:position pos:line="17" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="27"/></expr_stmt>

      <if pos:line="19" pos:column="7">if <condition pos:line="19" pos:column="10">(<expr><name pos:line="19" pos:column="11">r<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">&gt;<pos:position pos:line="19" pos:column="17"/></operator> <literal type="number" pos:line="19" pos:column="15">0<pos:position pos:line="19" pos:column="16"/></literal> <operator pos:line="19" pos:column="17">||<pos:position pos:line="19" pos:column="19"/></operator> <name pos:line="19" pos:column="20">error<pos:position pos:line="19" pos:column="25"/></name> <operator pos:line="19" pos:column="26">==<pos:position pos:line="19" pos:column="28"/></operator> <name pos:line="19" pos:column="29">WSAENOTCONN<pos:position pos:line="19" pos:column="40"/></name></expr>)<pos:position pos:line="19" pos:column="41"/></condition><then pos:line="19" pos:column="41">
	<block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="9">happened<pos:position pos:line="20" pos:column="17"/></name> <operator pos:line="20" pos:column="18">|=<pos:position pos:line="20" pos:column="20"/></operator> <operator pos:line="20" pos:column="21">(<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="22">POLLIN<pos:position pos:line="20" pos:column="28"/></name> <operator pos:line="20" pos:column="29">|<pos:position pos:line="20" pos:column="30"/></operator> <name pos:line="20" pos:column="31">POLLRDNORM<pos:position pos:line="20" pos:column="41"/></name><operator pos:line="20" pos:column="41">)<pos:position pos:line="20" pos:column="42"/></operator> <operator pos:line="20" pos:column="43">&amp;<pos:position pos:line="20" pos:column="48"/></operator> <name pos:line="20" pos:column="45">sought<pos:position pos:line="20" pos:column="51"/></name></expr>;<pos:position pos:line="20" pos:column="52"/></expr_stmt></block></then>

      <comment type="block" pos:line="22" pos:column="7">/* Distinguish hung-up sockets from other errors.  */</comment>
      <elseif pos:line="23" pos:column="7">else <if pos:line="23" pos:column="12">if <condition pos:line="23" pos:column="15">(<expr><name pos:line="23" pos:column="16">r<pos:position pos:line="23" pos:column="17"/></name> <operator pos:line="23" pos:column="18">==<pos:position pos:line="23" pos:column="20"/></operator> <literal type="number" pos:line="23" pos:column="21">0<pos:position pos:line="23" pos:column="22"/></literal> <operator pos:line="23" pos:column="23">||<pos:position pos:line="23" pos:column="25"/></operator> <name pos:line="23" pos:column="26">error<pos:position pos:line="23" pos:column="31"/></name> <operator pos:line="23" pos:column="32">==<pos:position pos:line="23" pos:column="34"/></operator> <name pos:line="23" pos:column="35">WSAESHUTDOWN<pos:position pos:line="23" pos:column="47"/></name> <operator pos:line="23" pos:column="48">||<pos:position pos:line="23" pos:column="50"/></operator> <name pos:line="23" pos:column="51">error<pos:position pos:line="23" pos:column="56"/></name> <operator pos:line="23" pos:column="57">==<pos:position pos:line="23" pos:column="59"/></operator> <name pos:line="23" pos:column="60">WSAECONNRESET<pos:position pos:line="23" pos:column="73"/></name>
	       <operator pos:line="24" pos:column="16">||<pos:position pos:line="24" pos:column="18"/></operator> <name pos:line="24" pos:column="19">error<pos:position pos:line="24" pos:column="24"/></name> <operator pos:line="24" pos:column="25">==<pos:position pos:line="24" pos:column="27"/></operator> <name pos:line="24" pos:column="28">WSAECONNABORTED<pos:position pos:line="24" pos:column="43"/></name> <operator pos:line="24" pos:column="44">||<pos:position pos:line="24" pos:column="46"/></operator> <name pos:line="24" pos:column="47">error<pos:position pos:line="24" pos:column="52"/></name> <operator pos:line="24" pos:column="53">==<pos:position pos:line="24" pos:column="55"/></operator> <name pos:line="24" pos:column="56">WSAENETRESET<pos:position pos:line="24" pos:column="68"/></name></expr>)<pos:position pos:line="24" pos:column="69"/></condition><then pos:line="24" pos:column="69">
	<block type="pseudo"><expr_stmt><expr><name pos:line="25" pos:column="9">happened<pos:position pos:line="25" pos:column="17"/></name> <operator pos:line="25" pos:column="18">|=<pos:position pos:line="25" pos:column="20"/></operator> <name pos:line="25" pos:column="21">POLLHUP<pos:position pos:line="25" pos:column="28"/></name></expr>;<pos:position pos:line="25" pos:column="29"/></expr_stmt></block></then></if></elseif>

      <else pos:line="27" pos:column="7">else
	<block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="9">happened<pos:position pos:line="28" pos:column="17"/></name> <operator pos:line="28" pos:column="18">|=<pos:position pos:line="28" pos:column="20"/></operator> <name pos:line="28" pos:column="21">POLLERR<pos:position pos:line="28" pos:column="28"/></name></expr>;<pos:position pos:line="28" pos:column="29"/></expr_stmt></block></else></if>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if></elseif></if>

  <if pos:line="31" pos:column="3">if <condition pos:line="31" pos:column="6">(<expr><name pos:line="31" pos:column="7">lNetworkEvents<pos:position pos:line="31" pos:column="21"/></name> <operator pos:line="31" pos:column="22">&amp;<pos:position pos:line="31" pos:column="27"/></operator> <operator pos:line="31" pos:column="24">(<pos:position pos:line="31" pos:column="25"/></operator><name pos:line="31" pos:column="25">FD_WRITE<pos:position pos:line="31" pos:column="33"/></name> <operator pos:line="31" pos:column="34">|<pos:position pos:line="31" pos:column="35"/></operator> <name pos:line="31" pos:column="36">FD_CONNECT<pos:position pos:line="31" pos:column="46"/></name><operator pos:line="31" pos:column="46">)<pos:position pos:line="31" pos:column="47"/></operator></expr>)<pos:position pos:line="31" pos:column="48"/></condition><then pos:line="31" pos:column="48">
    <block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="5">happened<pos:position pos:line="32" pos:column="13"/></name> <operator pos:line="32" pos:column="14">|=<pos:position pos:line="32" pos:column="16"/></operator> <operator pos:line="32" pos:column="17">(<pos:position pos:line="32" pos:column="18"/></operator><name pos:line="32" pos:column="18">POLLOUT<pos:position pos:line="32" pos:column="25"/></name> <operator pos:line="32" pos:column="26">|<pos:position pos:line="32" pos:column="27"/></operator> <name pos:line="32" pos:column="28">POLLWRNORM<pos:position pos:line="32" pos:column="38"/></name> <operator pos:line="32" pos:column="39">|<pos:position pos:line="32" pos:column="40"/></operator> <name pos:line="32" pos:column="41">POLLWRBAND<pos:position pos:line="32" pos:column="51"/></name><operator pos:line="32" pos:column="51">)<pos:position pos:line="32" pos:column="52"/></operator> <operator pos:line="32" pos:column="53">&amp;<pos:position pos:line="32" pos:column="58"/></operator> <name pos:line="32" pos:column="55">sought<pos:position pos:line="32" pos:column="61"/></name></expr>;<pos:position pos:line="32" pos:column="62"/></expr_stmt></block></then></if>

  <if pos:line="34" pos:column="3">if <condition pos:line="34" pos:column="6">(<expr><name pos:line="34" pos:column="7">lNetworkEvents<pos:position pos:line="34" pos:column="21"/></name> <operator pos:line="34" pos:column="22">&amp;<pos:position pos:line="34" pos:column="27"/></operator> <name pos:line="34" pos:column="24">FD_OOB<pos:position pos:line="34" pos:column="30"/></name></expr>)<pos:position pos:line="34" pos:column="31"/></condition><then pos:line="34" pos:column="31">
    <block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="5">happened<pos:position pos:line="35" pos:column="13"/></name> <operator pos:line="35" pos:column="14">|=<pos:position pos:line="35" pos:column="16"/></operator> <operator pos:line="35" pos:column="17">(<pos:position pos:line="35" pos:column="18"/></operator><name pos:line="35" pos:column="18">POLLPRI<pos:position pos:line="35" pos:column="25"/></name> <operator pos:line="35" pos:column="26">|<pos:position pos:line="35" pos:column="27"/></operator> <name pos:line="35" pos:column="28">POLLRDBAND<pos:position pos:line="35" pos:column="38"/></name><operator pos:line="35" pos:column="38">)<pos:position pos:line="35" pos:column="39"/></operator> <operator pos:line="35" pos:column="40">&amp;<pos:position pos:line="35" pos:column="45"/></operator> <name pos:line="35" pos:column="42">sought<pos:position pos:line="35" pos:column="48"/></name></expr>;<pos:position pos:line="35" pos:column="49"/></expr_stmt></block></then></if>

  <return pos:line="37" pos:column="3">return <expr><name pos:line="37" pos:column="10">happened<pos:position pos:line="37" pos:column="18"/></name></expr>;<pos:position pos:line="37" pos:column="19"/></return>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

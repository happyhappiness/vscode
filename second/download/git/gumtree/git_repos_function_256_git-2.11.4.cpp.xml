<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_256_git-2.11.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">uint32_t<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">count_object_type<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name><name pos:line="1" pos:column="35">struct<pos:position pos:line="1" pos:column="41"/></name> <name pos:line="1" pos:column="42">bitmap<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">objects<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>,
				  <parameter><decl><type><name><name pos:line="2" pos:column="35">enum<pos:position pos:line="2" pos:column="39"/></name> <name pos:line="2" pos:column="40">object_type<pos:position pos:line="2" pos:column="51"/></name></name></type> <name pos:line="2" pos:column="52">type<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="57"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">eindex<pos:position pos:line="4" pos:column="22"/></name></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">eindex<pos:position pos:line="4" pos:column="30"/></name> <init pos:line="4" pos:column="31">= <expr><operator pos:line="4" pos:column="33">&amp;<pos:position pos:line="4" pos:column="38"/></operator><name><name pos:line="4" pos:column="34">bitmap_git<pos:position pos:line="4" pos:column="44"/></name><operator pos:line="4" pos:column="44">.<pos:position pos:line="4" pos:column="45"/></operator><name pos:line="4" pos:column="45">ext_index<pos:position pos:line="4" pos:column="54"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="55"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="6" pos:column="9">uint32_t<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">i<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><literal type="number" pos:line="6" pos:column="22">0<pos:position pos:line="6" pos:column="23"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="25">count<pos:position pos:line="6" pos:column="30"/></name> <init pos:line="6" pos:column="31">= <expr><literal type="number" pos:line="6" pos:column="33">0<pos:position pos:line="6" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">ewah_iterator<pos:position pos:line="7" pos:column="29"/></name></name></type> <name pos:line="7" pos:column="30">it<pos:position pos:line="7" pos:column="32"/></name></decl>;<pos:position pos:line="7" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">eword_t<pos:position pos:line="8" pos:column="16"/></name></type> <name pos:line="8" pos:column="17">filter<pos:position pos:line="8" pos:column="23"/></name></decl>;<pos:position pos:line="8" pos:column="24"/></decl_stmt>

	<switch pos:line="10" pos:column="9">switch <condition pos:line="10" pos:column="16">(<expr><name pos:line="10" pos:column="17">type<pos:position pos:line="10" pos:column="21"/></name></expr>)<pos:position pos:line="10" pos:column="22"/></condition> <block pos:line="10" pos:column="23">{
	<case pos:line="11" pos:column="9">case <expr><name pos:line="11" pos:column="14">OBJ_COMMIT<pos:position pos:line="11" pos:column="24"/></name></expr>:<pos:position pos:line="11" pos:column="25"/></case>
		<expr_stmt><expr><call><name pos:line="12" pos:column="17">ewah_iterator_init<pos:position pos:line="12" pos:column="35"/></name><argument_list pos:line="12" pos:column="35">(<argument><expr><operator pos:line="12" pos:column="36">&amp;<pos:position pos:line="12" pos:column="41"/></operator><name pos:line="12" pos:column="37">it<pos:position pos:line="12" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="41">bitmap_git<pos:position pos:line="12" pos:column="51"/></name><operator pos:line="12" pos:column="51">.<pos:position pos:line="12" pos:column="52"/></operator><name pos:line="12" pos:column="52">commits<pos:position pos:line="12" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="61"/></expr_stmt>
		<break pos:line="13" pos:column="17">break;<pos:position pos:line="13" pos:column="23"/></break>

	<case pos:line="15" pos:column="9">case <expr><name pos:line="15" pos:column="14">OBJ_TREE<pos:position pos:line="15" pos:column="22"/></name></expr>:<pos:position pos:line="15" pos:column="23"/></case>
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">ewah_iterator_init<pos:position pos:line="16" pos:column="35"/></name><argument_list pos:line="16" pos:column="35">(<argument><expr><operator pos:line="16" pos:column="36">&amp;<pos:position pos:line="16" pos:column="41"/></operator><name pos:line="16" pos:column="37">it<pos:position pos:line="16" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="41">bitmap_git<pos:position pos:line="16" pos:column="51"/></name><operator pos:line="16" pos:column="51">.<pos:position pos:line="16" pos:column="52"/></operator><name pos:line="16" pos:column="52">trees<pos:position pos:line="16" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="59"/></expr_stmt>
		<break pos:line="17" pos:column="17">break;<pos:position pos:line="17" pos:column="23"/></break>

	<case pos:line="19" pos:column="9">case <expr><name pos:line="19" pos:column="14">OBJ_BLOB<pos:position pos:line="19" pos:column="22"/></name></expr>:<pos:position pos:line="19" pos:column="23"/></case>
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">ewah_iterator_init<pos:position pos:line="20" pos:column="35"/></name><argument_list pos:line="20" pos:column="35">(<argument><expr><operator pos:line="20" pos:column="36">&amp;<pos:position pos:line="20" pos:column="41"/></operator><name pos:line="20" pos:column="37">it<pos:position pos:line="20" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="41">bitmap_git<pos:position pos:line="20" pos:column="51"/></name><operator pos:line="20" pos:column="51">.<pos:position pos:line="20" pos:column="52"/></operator><name pos:line="20" pos:column="52">blobs<pos:position pos:line="20" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="59"/></expr_stmt>
		<break pos:line="21" pos:column="17">break;<pos:position pos:line="21" pos:column="23"/></break>

	<case pos:line="23" pos:column="9">case <expr><name pos:line="23" pos:column="14">OBJ_TAG<pos:position pos:line="23" pos:column="21"/></name></expr>:<pos:position pos:line="23" pos:column="22"/></case>
		<expr_stmt><expr><call><name pos:line="24" pos:column="17">ewah_iterator_init<pos:position pos:line="24" pos:column="35"/></name><argument_list pos:line="24" pos:column="35">(<argument><expr><operator pos:line="24" pos:column="36">&amp;<pos:position pos:line="24" pos:column="41"/></operator><name pos:line="24" pos:column="37">it<pos:position pos:line="24" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="41">bitmap_git<pos:position pos:line="24" pos:column="51"/></name><operator pos:line="24" pos:column="51">.<pos:position pos:line="24" pos:column="52"/></operator><name pos:line="24" pos:column="52">tags<pos:position pos:line="24" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="58"/></expr_stmt>
		<break pos:line="25" pos:column="17">break;<pos:position pos:line="25" pos:column="23"/></break>

	<default pos:line="27" pos:column="9">default:<pos:position pos:line="27" pos:column="17"/></default>
		<return pos:line="28" pos:column="17">return <expr><literal type="number" pos:line="28" pos:column="24">0<pos:position pos:line="28" pos:column="25"/></literal></expr>;<pos:position pos:line="28" pos:column="26"/></return>
	}<pos:position pos:line="29" pos:column="10"/></block></switch>

	<while pos:line="31" pos:column="9">while <condition pos:line="31" pos:column="15">(<expr><name pos:line="31" pos:column="16">i<pos:position pos:line="31" pos:column="17"/></name> <operator pos:line="31" pos:column="18">&lt;<pos:position pos:line="31" pos:column="22"/></operator> <name><name pos:line="31" pos:column="20">objects<pos:position pos:line="31" pos:column="27"/></name><operator pos:line="31" pos:column="27">-&gt;<pos:position pos:line="31" pos:column="32"/></operator><name pos:line="31" pos:column="29">word_alloc<pos:position pos:line="31" pos:column="39"/></name></name> <operator pos:line="31" pos:column="40">&amp;&amp;<pos:position pos:line="31" pos:column="50"/></operator> <call><name pos:line="31" pos:column="43">ewah_iterator_next<pos:position pos:line="31" pos:column="61"/></name><argument_list pos:line="31" pos:column="61">(<argument><expr><operator pos:line="31" pos:column="62">&amp;<pos:position pos:line="31" pos:column="67"/></operator><name pos:line="31" pos:column="63">filter<pos:position pos:line="31" pos:column="69"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="71">&amp;<pos:position pos:line="31" pos:column="76"/></operator><name pos:line="31" pos:column="72">it<pos:position pos:line="31" pos:column="74"/></name></expr></argument>)<pos:position pos:line="31" pos:column="75"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="76"/></condition> <block pos:line="31" pos:column="77">{
		<decl_stmt><decl><type><name pos:line="32" pos:column="17">eword_t<pos:position pos:line="32" pos:column="24"/></name></type> <name pos:line="32" pos:column="25">word<pos:position pos:line="32" pos:column="29"/></name> <init pos:line="32" pos:column="30">= <expr><name><name pos:line="32" pos:column="32">objects<pos:position pos:line="32" pos:column="39"/></name><operator pos:line="32" pos:column="39">-&gt;<pos:position pos:line="32" pos:column="44"/></operator><name pos:line="32" pos:column="41">words<pos:position pos:line="32" pos:column="46"/></name><index pos:line="32" pos:column="46">[<expr><name pos:line="32" pos:column="47">i<pos:position pos:line="32" pos:column="48"/></name><operator pos:line="32" pos:column="48">++<pos:position pos:line="32" pos:column="50"/></operator></expr>]<pos:position pos:line="32" pos:column="51"/></index></name> <operator pos:line="32" pos:column="52">&amp;<pos:position pos:line="32" pos:column="57"/></operator> <name pos:line="32" pos:column="54">filter<pos:position pos:line="32" pos:column="60"/></name></expr></init></decl>;<pos:position pos:line="32" pos:column="61"/></decl_stmt>
		<expr_stmt><expr><name pos:line="33" pos:column="17">count<pos:position pos:line="33" pos:column="22"/></name> <operator pos:line="33" pos:column="23">+=<pos:position pos:line="33" pos:column="25"/></operator> <call><name pos:line="33" pos:column="26">ewah_bit_popcount64<pos:position pos:line="33" pos:column="45"/></name><argument_list pos:line="33" pos:column="45">(<argument><expr><name pos:line="33" pos:column="46">word<pos:position pos:line="33" pos:column="50"/></name></expr></argument>)<pos:position pos:line="33" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="52"/></expr_stmt>
	}<pos:position pos:line="34" pos:column="10"/></block></while>

	<for pos:line="36" pos:column="9">for <control pos:line="36" pos:column="13">(<init><expr><name pos:line="36" pos:column="14">i<pos:position pos:line="36" pos:column="15"/></name> <operator pos:line="36" pos:column="16">=<pos:position pos:line="36" pos:column="17"/></operator> <literal type="number" pos:line="36" pos:column="18">0<pos:position pos:line="36" pos:column="19"/></literal></expr>;<pos:position pos:line="36" pos:column="20"/></init> <condition><expr><name pos:line="36" pos:column="21">i<pos:position pos:line="36" pos:column="22"/></name> <operator pos:line="36" pos:column="23">&lt;<pos:position pos:line="36" pos:column="27"/></operator> <name><name pos:line="36" pos:column="25">eindex<pos:position pos:line="36" pos:column="31"/></name><operator pos:line="36" pos:column="31">-&gt;<pos:position pos:line="36" pos:column="36"/></operator><name pos:line="36" pos:column="33">count<pos:position pos:line="36" pos:column="38"/></name></name></expr>;<pos:position pos:line="36" pos:column="39"/></condition> <incr><expr><operator pos:line="36" pos:column="40">++<pos:position pos:line="36" pos:column="42"/></operator><name pos:line="36" pos:column="42">i<pos:position pos:line="36" pos:column="43"/></name></expr></incr>)<pos:position pos:line="36" pos:column="44"/></control> <block pos:line="36" pos:column="45">{
		<if pos:line="37" pos:column="17">if <condition pos:line="37" pos:column="20">(<expr><name><name pos:line="37" pos:column="21">eindex<pos:position pos:line="37" pos:column="27"/></name><operator pos:line="37" pos:column="27">-&gt;<pos:position pos:line="37" pos:column="32"/></operator><name pos:line="37" pos:column="29">objects<pos:position pos:line="37" pos:column="36"/></name><index pos:line="37" pos:column="36">[<expr><name pos:line="37" pos:column="37">i<pos:position pos:line="37" pos:column="38"/></name></expr>]<pos:position pos:line="37" pos:column="39"/></index></name><operator pos:line="37" pos:column="39">-&gt;<pos:position pos:line="37" pos:column="44"/></operator><name pos:line="37" pos:column="41">type<pos:position pos:line="37" pos:column="45"/></name> <operator pos:line="37" pos:column="46">==<pos:position pos:line="37" pos:column="48"/></operator> <name pos:line="37" pos:column="49">type<pos:position pos:line="37" pos:column="53"/></name> <operator pos:line="37" pos:column="54">&amp;&amp;<pos:position pos:line="37" pos:column="64"/></operator>
			<call><name pos:line="38" pos:column="25">bitmap_get<pos:position pos:line="38" pos:column="35"/></name><argument_list pos:line="38" pos:column="35">(<argument><expr><name pos:line="38" pos:column="36">objects<pos:position pos:line="38" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="45">bitmap_git<pos:position pos:line="38" pos:column="55"/></name><operator pos:line="38" pos:column="55">.<pos:position pos:line="38" pos:column="56"/></operator><name pos:line="38" pos:column="56">pack<pos:position pos:line="38" pos:column="60"/></name><operator pos:line="38" pos:column="60">-&gt;<pos:position pos:line="38" pos:column="65"/></operator><name pos:line="38" pos:column="62">num_objects<pos:position pos:line="38" pos:column="73"/></name></name> <operator pos:line="38" pos:column="74">+<pos:position pos:line="38" pos:column="75"/></operator> <name pos:line="38" pos:column="76">i<pos:position pos:line="38" pos:column="77"/></name></expr></argument>)<pos:position pos:line="38" pos:column="78"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="79"/></condition><then pos:line="38" pos:column="79">
			<block type="pseudo"><expr_stmt><expr><name pos:line="39" pos:column="25">count<pos:position pos:line="39" pos:column="30"/></name><operator pos:line="39" pos:column="30">++<pos:position pos:line="39" pos:column="32"/></operator></expr>;<pos:position pos:line="39" pos:column="33"/></expr_stmt></block></then></if>
	}<pos:position pos:line="40" pos:column="10"/></block></for>

	<return pos:line="42" pos:column="9">return <expr><name pos:line="42" pos:column="16">count<pos:position pos:line="42" pos:column="21"/></name></expr>;<pos:position pos:line="42" pos:column="22"/></return>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

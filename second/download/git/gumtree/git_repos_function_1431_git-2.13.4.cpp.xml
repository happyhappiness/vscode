<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1431_git-2.13.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">long<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">parse_algorithm_value<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">value<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><operator pos:line="3" pos:column="13">!<pos:position pos:line="3" pos:column="14"/></operator><name pos:line="3" pos:column="14">value<pos:position pos:line="3" pos:column="19"/></name></expr>)<pos:position pos:line="3" pos:column="20"/></condition><then pos:line="3" pos:column="20">
		<block type="pseudo"><return pos:line="4" pos:column="17">return <expr><operator pos:line="4" pos:column="24">-<pos:position pos:line="4" pos:column="25"/></operator><literal type="number" pos:line="4" pos:column="25">1<pos:position pos:line="4" pos:column="26"/></literal></expr>;<pos:position pos:line="4" pos:column="27"/></return></block></then>
	<elseif pos:line="5" pos:column="9">else <if pos:line="5" pos:column="14">if <condition pos:line="5" pos:column="17">(<expr><operator pos:line="5" pos:column="18">!<pos:position pos:line="5" pos:column="19"/></operator><call><name pos:line="5" pos:column="19">strcasecmp<pos:position pos:line="5" pos:column="29"/></name><argument_list pos:line="5" pos:column="29">(<argument><expr><name pos:line="5" pos:column="30">value<pos:position pos:line="5" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="37">"myers"<pos:position pos:line="5" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="45"/></argument_list></call> <operator pos:line="5" pos:column="46">||<pos:position pos:line="5" pos:column="48"/></operator> <operator pos:line="5" pos:column="49">!<pos:position pos:line="5" pos:column="50"/></operator><call><name pos:line="5" pos:column="50">strcasecmp<pos:position pos:line="5" pos:column="60"/></name><argument_list pos:line="5" pos:column="60">(<argument><expr><name pos:line="5" pos:column="61">value<pos:position pos:line="5" pos:column="66"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="68">"default"<pos:position pos:line="5" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="78"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="79"/></condition><then pos:line="5" pos:column="79">
		<block type="pseudo"><return pos:line="6" pos:column="17">return <expr><literal type="number" pos:line="6" pos:column="24">0<pos:position pos:line="6" pos:column="25"/></literal></expr>;<pos:position pos:line="6" pos:column="26"/></return></block></then></if></elseif>
	<elseif pos:line="7" pos:column="9">else <if pos:line="7" pos:column="14">if <condition pos:line="7" pos:column="17">(<expr><operator pos:line="7" pos:column="18">!<pos:position pos:line="7" pos:column="19"/></operator><call><name pos:line="7" pos:column="19">strcasecmp<pos:position pos:line="7" pos:column="29"/></name><argument_list pos:line="7" pos:column="29">(<argument><expr><name pos:line="7" pos:column="30">value<pos:position pos:line="7" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="37">"minimal"<pos:position pos:line="7" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="48"/></condition><then pos:line="7" pos:column="48">
		<block type="pseudo"><return pos:line="8" pos:column="17">return <expr><name pos:line="8" pos:column="24">XDF_NEED_MINIMAL<pos:position pos:line="8" pos:column="40"/></name></expr>;<pos:position pos:line="8" pos:column="41"/></return></block></then></if></elseif>
	<elseif pos:line="9" pos:column="9">else <if pos:line="9" pos:column="14">if <condition pos:line="9" pos:column="17">(<expr><operator pos:line="9" pos:column="18">!<pos:position pos:line="9" pos:column="19"/></operator><call><name pos:line="9" pos:column="19">strcasecmp<pos:position pos:line="9" pos:column="29"/></name><argument_list pos:line="9" pos:column="29">(<argument><expr><name pos:line="9" pos:column="30">value<pos:position pos:line="9" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="37">"patience"<pos:position pos:line="9" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="49"/></condition><then pos:line="9" pos:column="49">
		<block type="pseudo"><return pos:line="10" pos:column="17">return <expr><name pos:line="10" pos:column="24">XDF_PATIENCE_DIFF<pos:position pos:line="10" pos:column="41"/></name></expr>;<pos:position pos:line="10" pos:column="42"/></return></block></then></if></elseif>
	<elseif pos:line="11" pos:column="9">else <if pos:line="11" pos:column="14">if <condition pos:line="11" pos:column="17">(<expr><operator pos:line="11" pos:column="18">!<pos:position pos:line="11" pos:column="19"/></operator><call><name pos:line="11" pos:column="19">strcasecmp<pos:position pos:line="11" pos:column="29"/></name><argument_list pos:line="11" pos:column="29">(<argument><expr><name pos:line="11" pos:column="30">value<pos:position pos:line="11" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="37">"histogram"<pos:position pos:line="11" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="50"/></condition><then pos:line="11" pos:column="50">
		<block type="pseudo"><return pos:line="12" pos:column="17">return <expr><name pos:line="12" pos:column="24">XDF_HISTOGRAM_DIFF<pos:position pos:line="12" pos:column="42"/></name></expr>;<pos:position pos:line="12" pos:column="43"/></return></block></then></if></elseif></if>
	<return pos:line="13" pos:column="9">return <expr><operator pos:line="13" pos:column="16">-<pos:position pos:line="13" pos:column="17"/></operator><literal type="number" pos:line="13" pos:column="17">1<pos:position pos:line="13" pos:column="18"/></literal></expr>;<pos:position pos:line="13" pos:column="19"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

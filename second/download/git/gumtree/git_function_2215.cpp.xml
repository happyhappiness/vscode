<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2215.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type><name pos:line="1" pos:column="13">read_gitfile<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">path<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">buf<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">dir<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">slash<pos:position pos:line="5" pos:column="26"/></name></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">stat<pos:position pos:line="6" pos:column="20"/></name></name></type> <name pos:line="6" pos:column="21">st<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">fd<pos:position pos:line="7" pos:column="15"/></name></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">ssize_t<pos:position pos:line="8" pos:column="16"/></name></type> <name pos:line="8" pos:column="17">len<pos:position pos:line="8" pos:column="20"/></name></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><call><name pos:line="10" pos:column="13">stat<pos:position pos:line="10" pos:column="17"/></name><argument_list pos:line="10" pos:column="17">(<argument><expr><name pos:line="10" pos:column="18">path<pos:position pos:line="10" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="24">&amp;<pos:position pos:line="10" pos:column="29"/></operator><name pos:line="10" pos:column="25">st<pos:position pos:line="10" pos:column="27"/></name></expr></argument>)<pos:position pos:line="10" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="29"/></condition><then pos:line="10" pos:column="29">
		<block type="pseudo"><return pos:line="11" pos:column="17">return <expr><name pos:line="11" pos:column="24">NULL<pos:position pos:line="11" pos:column="28"/></name></expr>;<pos:position pos:line="11" pos:column="29"/></return></block></then></if>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">!<pos:position pos:line="12" pos:column="14"/></operator><call><name pos:line="12" pos:column="14">S_ISREG<pos:position pos:line="12" pos:column="21"/></name><argument_list pos:line="12" pos:column="21">(<argument><expr><name><name pos:line="12" pos:column="22">st<pos:position pos:line="12" pos:column="24"/></name><operator pos:line="12" pos:column="24">.<pos:position pos:line="12" pos:column="25"/></operator><name pos:line="12" pos:column="25">st_mode<pos:position pos:line="12" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="34"/></condition><then pos:line="12" pos:column="34">
		<block type="pseudo"><return pos:line="13" pos:column="17">return <expr><name pos:line="13" pos:column="24">NULL<pos:position pos:line="13" pos:column="28"/></name></expr>;<pos:position pos:line="13" pos:column="29"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="14" pos:column="9">fd<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <call><name pos:line="14" pos:column="14">open<pos:position pos:line="14" pos:column="18"/></name><argument_list pos:line="14" pos:column="18">(<argument><expr><name pos:line="14" pos:column="19">path<pos:position pos:line="14" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="25">O_RDONLY<pos:position pos:line="14" pos:column="33"/></name></expr></argument>)<pos:position pos:line="14" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="35"/></expr_stmt>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">fd<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">&lt;<pos:position pos:line="15" pos:column="20"/></operator> <literal type="number" pos:line="15" pos:column="18">0<pos:position pos:line="15" pos:column="19"/></literal></expr>)<pos:position pos:line="15" pos:column="20"/></condition><then pos:line="15" pos:column="20">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="17">die_errno<pos:position pos:line="16" pos:column="26"/></name><argument_list pos:line="16" pos:column="26">(<argument><expr><literal type="string" pos:line="16" pos:column="27">"Error opening '%s'"<pos:position pos:line="16" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="49">path<pos:position pos:line="16" pos:column="53"/></name></expr></argument>)<pos:position pos:line="16" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="55"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="17" pos:column="9">buf<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">=<pos:position pos:line="17" pos:column="14"/></operator> <call><name pos:line="17" pos:column="15">xmalloc<pos:position pos:line="17" pos:column="22"/></name><argument_list pos:line="17" pos:column="22">(<argument><expr><name><name pos:line="17" pos:column="23">st<pos:position pos:line="17" pos:column="25"/></name><operator pos:line="17" pos:column="25">.<pos:position pos:line="17" pos:column="26"/></operator><name pos:line="17" pos:column="26">st_size<pos:position pos:line="17" pos:column="33"/></name></name> <operator pos:line="17" pos:column="34">+<pos:position pos:line="17" pos:column="35"/></operator> <literal type="number" pos:line="17" pos:column="36">1<pos:position pos:line="17" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><name pos:line="18" pos:column="9">len<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">=<pos:position pos:line="18" pos:column="14"/></operator> <call><name pos:line="18" pos:column="15">read_in_full<pos:position pos:line="18" pos:column="27"/></name><argument_list pos:line="18" pos:column="27">(<argument><expr><name pos:line="18" pos:column="28">fd<pos:position pos:line="18" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="32">buf<pos:position pos:line="18" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="37">st<pos:position pos:line="18" pos:column="39"/></name><operator pos:line="18" pos:column="39">.<pos:position pos:line="18" pos:column="40"/></operator><name pos:line="18" pos:column="40">st_size<pos:position pos:line="18" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="49"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="19" pos:column="9">close<pos:position pos:line="19" pos:column="14"/></name><argument_list pos:line="19" pos:column="14">(<argument><expr><name pos:line="19" pos:column="15">fd<pos:position pos:line="19" pos:column="17"/></name></expr></argument>)<pos:position pos:line="19" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="19"/></expr_stmt>
	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name pos:line="20" pos:column="13">len<pos:position pos:line="20" pos:column="16"/></name> <operator pos:line="20" pos:column="17">!=<pos:position pos:line="20" pos:column="19"/></operator> <name><name pos:line="20" pos:column="20">st<pos:position pos:line="20" pos:column="22"/></name><operator pos:line="20" pos:column="22">.<pos:position pos:line="20" pos:column="23"/></operator><name pos:line="20" pos:column="23">st_size<pos:position pos:line="20" pos:column="30"/></name></name></expr>)<pos:position pos:line="20" pos:column="31"/></condition><then pos:line="20" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="17">die<pos:position pos:line="21" pos:column="20"/></name><argument_list pos:line="21" pos:column="20">(<argument><expr><literal type="string" pos:line="21" pos:column="21">"Error reading %s"<pos:position pos:line="21" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="41">path<pos:position pos:line="21" pos:column="45"/></name></expr></argument>)<pos:position pos:line="21" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="47"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name><name pos:line="22" pos:column="9">buf<pos:position pos:line="22" pos:column="12"/></name><index pos:line="22" pos:column="12">[<expr><name pos:line="22" pos:column="13">len<pos:position pos:line="22" pos:column="16"/></name></expr>]<pos:position pos:line="22" pos:column="17"/></index></name> <operator pos:line="22" pos:column="18">=<pos:position pos:line="22" pos:column="19"/></operator> <literal type="char" pos:line="22" pos:column="20">'\0'<pos:position pos:line="22" pos:column="24"/></literal></expr>;<pos:position pos:line="22" pos:column="25"/></expr_stmt>
	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><operator pos:line="23" pos:column="13">!<pos:position pos:line="23" pos:column="14"/></operator><call><name pos:line="23" pos:column="14">starts_with<pos:position pos:line="23" pos:column="25"/></name><argument_list pos:line="23" pos:column="25">(<argument><expr><name pos:line="23" pos:column="26">buf<pos:position pos:line="23" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="31">"gitdir: "<pos:position pos:line="23" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="43"/></condition><then pos:line="23" pos:column="43">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="17">die<pos:position pos:line="24" pos:column="20"/></name><argument_list pos:line="24" pos:column="20">(<argument><expr><literal type="string" pos:line="24" pos:column="21">"Invalid gitfile format: %s"<pos:position pos:line="24" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="51">path<pos:position pos:line="24" pos:column="55"/></name></expr></argument>)<pos:position pos:line="24" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="57"/></expr_stmt></block></then></if>
	<while pos:line="25" pos:column="9">while <condition pos:line="25" pos:column="15">(<expr><name><name pos:line="25" pos:column="16">buf<pos:position pos:line="25" pos:column="19"/></name><index pos:line="25" pos:column="19">[<expr><name pos:line="25" pos:column="20">len<pos:position pos:line="25" pos:column="23"/></name> <operator pos:line="25" pos:column="24">-<pos:position pos:line="25" pos:column="25"/></operator> <literal type="number" pos:line="25" pos:column="26">1<pos:position pos:line="25" pos:column="27"/></literal></expr>]<pos:position pos:line="25" pos:column="28"/></index></name> <operator pos:line="25" pos:column="29">==<pos:position pos:line="25" pos:column="31"/></operator> <literal type="char" pos:line="25" pos:column="32">'\n'<pos:position pos:line="25" pos:column="36"/></literal> <operator pos:line="25" pos:column="37">||<pos:position pos:line="25" pos:column="39"/></operator> <name><name pos:line="25" pos:column="40">buf<pos:position pos:line="25" pos:column="43"/></name><index pos:line="25" pos:column="43">[<expr><name pos:line="25" pos:column="44">len<pos:position pos:line="25" pos:column="47"/></name> <operator pos:line="25" pos:column="48">-<pos:position pos:line="25" pos:column="49"/></operator> <literal type="number" pos:line="25" pos:column="50">1<pos:position pos:line="25" pos:column="51"/></literal></expr>]<pos:position pos:line="25" pos:column="52"/></index></name> <operator pos:line="25" pos:column="53">==<pos:position pos:line="25" pos:column="55"/></operator> <literal type="char" pos:line="25" pos:column="56">'\r'<pos:position pos:line="25" pos:column="60"/></literal></expr>)<pos:position pos:line="25" pos:column="61"/></condition>
		<block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="17">len<pos:position pos:line="26" pos:column="20"/></name><operator pos:line="26" pos:column="20">--<pos:position pos:line="26" pos:column="22"/></operator></expr>;<pos:position pos:line="26" pos:column="23"/></expr_stmt></block></while>
	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><name pos:line="27" pos:column="13">len<pos:position pos:line="27" pos:column="16"/></name> <operator pos:line="27" pos:column="17">&lt;<pos:position pos:line="27" pos:column="21"/></operator> <literal type="number" pos:line="27" pos:column="19">9<pos:position pos:line="27" pos:column="20"/></literal></expr>)<pos:position pos:line="27" pos:column="21"/></condition><then pos:line="27" pos:column="21">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="17">die<pos:position pos:line="28" pos:column="20"/></name><argument_list pos:line="28" pos:column="20">(<argument><expr><literal type="string" pos:line="28" pos:column="21">"No path in gitfile: %s"<pos:position pos:line="28" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="47">path<pos:position pos:line="28" pos:column="51"/></name></expr></argument>)<pos:position pos:line="28" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="53"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name><name pos:line="29" pos:column="9">buf<pos:position pos:line="29" pos:column="12"/></name><index pos:line="29" pos:column="12">[<expr><name pos:line="29" pos:column="13">len<pos:position pos:line="29" pos:column="16"/></name></expr>]<pos:position pos:line="29" pos:column="17"/></index></name> <operator pos:line="29" pos:column="18">=<pos:position pos:line="29" pos:column="19"/></operator> <literal type="char" pos:line="29" pos:column="20">'\0'<pos:position pos:line="29" pos:column="24"/></literal></expr>;<pos:position pos:line="29" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><name pos:line="30" pos:column="9">dir<pos:position pos:line="30" pos:column="12"/></name> <operator pos:line="30" pos:column="13">=<pos:position pos:line="30" pos:column="14"/></operator> <name pos:line="30" pos:column="15">buf<pos:position pos:line="30" pos:column="18"/></name> <operator pos:line="30" pos:column="19">+<pos:position pos:line="30" pos:column="20"/></operator> <literal type="number" pos:line="30" pos:column="21">8<pos:position pos:line="30" pos:column="22"/></literal></expr>;<pos:position pos:line="30" pos:column="23"/></expr_stmt>

	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><operator pos:line="32" pos:column="13">!<pos:position pos:line="32" pos:column="14"/></operator><call><name pos:line="32" pos:column="14">is_absolute_path<pos:position pos:line="32" pos:column="30"/></name><argument_list pos:line="32" pos:column="30">(<argument><expr><name pos:line="32" pos:column="31">dir<pos:position pos:line="32" pos:column="34"/></name></expr></argument>)<pos:position pos:line="32" pos:column="35"/></argument_list></call> <operator pos:line="32" pos:column="36">&amp;&amp;<pos:position pos:line="32" pos:column="46"/></operator> <operator pos:line="32" pos:column="39">(<pos:position pos:line="32" pos:column="40"/></operator><name pos:line="32" pos:column="40">slash<pos:position pos:line="32" pos:column="45"/></name> <operator pos:line="32" pos:column="46">=<pos:position pos:line="32" pos:column="47"/></operator> <call><name pos:line="32" pos:column="48">strrchr<pos:position pos:line="32" pos:column="55"/></name><argument_list pos:line="32" pos:column="55">(<argument><expr><name pos:line="32" pos:column="56">path<pos:position pos:line="32" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="32" pos:column="62">'/'<pos:position pos:line="32" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="66"/></argument_list></call><operator pos:line="32" pos:column="66">)<pos:position pos:line="32" pos:column="67"/></operator></expr>)<pos:position pos:line="32" pos:column="68"/></condition><then pos:line="32" pos:column="68"> <block pos:line="32" pos:column="69">{
		<decl_stmt><decl><type><name pos:line="33" pos:column="17">size_t<pos:position pos:line="33" pos:column="23"/></name></type> <name pos:line="33" pos:column="24">pathlen<pos:position pos:line="33" pos:column="31"/></name> <init pos:line="33" pos:column="32">= <expr><name pos:line="33" pos:column="34">slash<pos:position pos:line="33" pos:column="39"/></name><operator pos:line="33" pos:column="39">+<pos:position pos:line="33" pos:column="40"/></operator><literal type="number" pos:line="33" pos:column="40">1<pos:position pos:line="33" pos:column="41"/></literal> <operator pos:line="33" pos:column="42">-<pos:position pos:line="33" pos:column="43"/></operator> <name pos:line="33" pos:column="44">path<pos:position pos:line="33" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="33" pos:column="49"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="34" pos:column="17">size_t<pos:position pos:line="34" pos:column="23"/></name></type> <name pos:line="34" pos:column="24">dirlen<pos:position pos:line="34" pos:column="30"/></name> <init pos:line="34" pos:column="31">= <expr><name pos:line="34" pos:column="33">pathlen<pos:position pos:line="34" pos:column="40"/></name> <operator pos:line="34" pos:column="41">+<pos:position pos:line="34" pos:column="42"/></operator> <name pos:line="34" pos:column="43">len<pos:position pos:line="34" pos:column="46"/></name> <operator pos:line="34" pos:column="47">-<pos:position pos:line="34" pos:column="48"/></operator> <literal type="number" pos:line="34" pos:column="49">8<pos:position pos:line="34" pos:column="50"/></literal></expr></init></decl>;<pos:position pos:line="34" pos:column="51"/></decl_stmt>
		<expr_stmt><expr><name pos:line="35" pos:column="17">dir<pos:position pos:line="35" pos:column="20"/></name> <operator pos:line="35" pos:column="21">=<pos:position pos:line="35" pos:column="22"/></operator> <call><name pos:line="35" pos:column="23">xmalloc<pos:position pos:line="35" pos:column="30"/></name><argument_list pos:line="35" pos:column="30">(<argument><expr><name pos:line="35" pos:column="31">dirlen<pos:position pos:line="35" pos:column="37"/></name> <operator pos:line="35" pos:column="38">+<pos:position pos:line="35" pos:column="39"/></operator> <literal type="number" pos:line="35" pos:column="40">1<pos:position pos:line="35" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="36" pos:column="17">strncpy<pos:position pos:line="36" pos:column="24"/></name><argument_list pos:line="36" pos:column="24">(<argument><expr><name pos:line="36" pos:column="25">dir<pos:position pos:line="36" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="30">path<pos:position pos:line="36" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="36">pathlen<pos:position pos:line="36" pos:column="43"/></name></expr></argument>)<pos:position pos:line="36" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="37" pos:column="17">strncpy<pos:position pos:line="37" pos:column="24"/></name><argument_list pos:line="37" pos:column="24">(<argument><expr><name pos:line="37" pos:column="25">dir<pos:position pos:line="37" pos:column="28"/></name> <operator pos:line="37" pos:column="29">+<pos:position pos:line="37" pos:column="30"/></operator> <name pos:line="37" pos:column="31">pathlen<pos:position pos:line="37" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="40">buf<pos:position pos:line="37" pos:column="43"/></name> <operator pos:line="37" pos:column="44">+<pos:position pos:line="37" pos:column="45"/></operator> <literal type="number" pos:line="37" pos:column="46">8<pos:position pos:line="37" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="49">len<pos:position pos:line="37" pos:column="52"/></name> <operator pos:line="37" pos:column="53">-<pos:position pos:line="37" pos:column="54"/></operator> <literal type="number" pos:line="37" pos:column="55">8<pos:position pos:line="37" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="58"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="38" pos:column="17">dir<pos:position pos:line="38" pos:column="20"/></name><index pos:line="38" pos:column="20">[<expr><name pos:line="38" pos:column="21">dirlen<pos:position pos:line="38" pos:column="27"/></name></expr>]<pos:position pos:line="38" pos:column="28"/></index></name> <operator pos:line="38" pos:column="29">=<pos:position pos:line="38" pos:column="30"/></operator> <literal type="char" pos:line="38" pos:column="31">'\0'<pos:position pos:line="38" pos:column="35"/></literal></expr>;<pos:position pos:line="38" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="39" pos:column="17">free<pos:position pos:line="39" pos:column="21"/></name><argument_list pos:line="39" pos:column="21">(<argument><expr><name pos:line="39" pos:column="22">buf<pos:position pos:line="39" pos:column="25"/></name></expr></argument>)<pos:position pos:line="39" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="27"/></expr_stmt>
		<expr_stmt><expr><name pos:line="40" pos:column="17">buf<pos:position pos:line="40" pos:column="20"/></name> <operator pos:line="40" pos:column="21">=<pos:position pos:line="40" pos:column="22"/></operator> <name pos:line="40" pos:column="23">dir<pos:position pos:line="40" pos:column="26"/></name></expr>;<pos:position pos:line="40" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="41" pos:column="10"/></block></then></if>

	<if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><operator pos:line="43" pos:column="13">!<pos:position pos:line="43" pos:column="14"/></operator><call><name pos:line="43" pos:column="14">is_git_directory<pos:position pos:line="43" pos:column="30"/></name><argument_list pos:line="43" pos:column="30">(<argument><expr><name pos:line="43" pos:column="31">dir<pos:position pos:line="43" pos:column="34"/></name></expr></argument>)<pos:position pos:line="43" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="36"/></condition><then pos:line="43" pos:column="36">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="44" pos:column="17">die<pos:position pos:line="44" pos:column="20"/></name><argument_list pos:line="44" pos:column="20">(<argument><expr><literal type="string" pos:line="44" pos:column="21">"Not a git repository: %s"<pos:position pos:line="44" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="49">dir<pos:position pos:line="44" pos:column="52"/></name></expr></argument>)<pos:position pos:line="44" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="54"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="46" pos:column="9">update_linked_gitdir<pos:position pos:line="46" pos:column="29"/></name><argument_list pos:line="46" pos:column="29">(<argument><expr><name pos:line="46" pos:column="30">path<pos:position pos:line="46" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="36">dir<pos:position pos:line="46" pos:column="39"/></name></expr></argument>)<pos:position pos:line="46" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><name pos:line="47" pos:column="9">path<pos:position pos:line="47" pos:column="13"/></name> <operator pos:line="47" pos:column="14">=<pos:position pos:line="47" pos:column="15"/></operator> <call><name pos:line="47" pos:column="16">real_path<pos:position pos:line="47" pos:column="25"/></name><argument_list pos:line="47" pos:column="25">(<argument><expr><name pos:line="47" pos:column="26">dir<pos:position pos:line="47" pos:column="29"/></name></expr></argument>)<pos:position pos:line="47" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="31"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="49" pos:column="9">free<pos:position pos:line="49" pos:column="13"/></name><argument_list pos:line="49" pos:column="13">(<argument><expr><name pos:line="49" pos:column="14">buf<pos:position pos:line="49" pos:column="17"/></name></expr></argument>)<pos:position pos:line="49" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="19"/></expr_stmt>
	<return pos:line="50" pos:column="9">return <expr><name pos:line="50" pos:column="16">path<pos:position pos:line="50" pos:column="20"/></name></expr>;<pos:position pos:line="50" pos:column="21"/></return>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

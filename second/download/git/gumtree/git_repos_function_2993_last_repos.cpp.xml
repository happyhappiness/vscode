<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2993_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">populate_opts_cb<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">key<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="46">const<pos:position pos:line="1" pos:column="51"/></specifier> <name pos:line="1" pos:column="52">char<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">value<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="65">void<pos:position pos:line="1" pos:column="69"/></name> <modifier pos:line="1" pos:column="70">*<pos:position pos:line="1" pos:column="71"/></modifier></type><name pos:line="1" pos:column="71">data<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="76"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">replay_opts<pos:position pos:line="3" pos:column="27"/></name></name> <modifier pos:line="3" pos:column="28">*<pos:position pos:line="3" pos:column="29"/></modifier></type><name pos:line="3" pos:column="29">opts<pos:position pos:line="3" pos:column="33"/></name> <init pos:line="3" pos:column="34">= <expr><name pos:line="3" pos:column="36">data<pos:position pos:line="3" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">error_flag<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><literal type="number" pos:line="4" pos:column="26">1<pos:position pos:line="4" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">!<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="14">value<pos:position pos:line="6" pos:column="19"/></name></expr>)<pos:position pos:line="6" pos:column="20"/></condition><then pos:line="6" pos:column="20">
		<block type="pseudo"><expr_stmt><expr><name pos:line="7" pos:column="17">error_flag<pos:position pos:line="7" pos:column="27"/></name> <operator pos:line="7" pos:column="28">=<pos:position pos:line="7" pos:column="29"/></operator> <literal type="number" pos:line="7" pos:column="30">0<pos:position pos:line="7" pos:column="31"/></literal></expr>;<pos:position pos:line="7" pos:column="32"/></expr_stmt></block></then>
	<elseif pos:line="8" pos:column="9">else <if pos:line="8" pos:column="14">if <condition pos:line="8" pos:column="17">(<expr><operator pos:line="8" pos:column="18">!<pos:position pos:line="8" pos:column="19"/></operator><call><name pos:line="8" pos:column="19">strcmp<pos:position pos:line="8" pos:column="25"/></name><argument_list pos:line="8" pos:column="25">(<argument><expr><name pos:line="8" pos:column="26">key<pos:position pos:line="8" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="31">"options.no-commit"<pos:position pos:line="8" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="52"/></condition><then pos:line="8" pos:column="52">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="9" pos:column="17">opts<pos:position pos:line="9" pos:column="21"/></name><operator pos:line="9" pos:column="21">-&gt;<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="23">no_commit<pos:position pos:line="9" pos:column="32"/></name></name> <operator pos:line="9" pos:column="33">=<pos:position pos:line="9" pos:column="34"/></operator> <call><name pos:line="9" pos:column="35">git_config_bool_or_int<pos:position pos:line="9" pos:column="57"/></name><argument_list pos:line="9" pos:column="57">(<argument><expr><name pos:line="9" pos:column="58">key<pos:position pos:line="9" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="63">value<pos:position pos:line="9" pos:column="68"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="70">&amp;<pos:position pos:line="9" pos:column="75"/></operator><name pos:line="9" pos:column="71">error_flag<pos:position pos:line="9" pos:column="81"/></name></expr></argument>)<pos:position pos:line="9" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="83"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="10" pos:column="9">else <if pos:line="10" pos:column="14">if <condition pos:line="10" pos:column="17">(<expr><operator pos:line="10" pos:column="18">!<pos:position pos:line="10" pos:column="19"/></operator><call><name pos:line="10" pos:column="19">strcmp<pos:position pos:line="10" pos:column="25"/></name><argument_list pos:line="10" pos:column="25">(<argument><expr><name pos:line="10" pos:column="26">key<pos:position pos:line="10" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="31">"options.edit"<pos:position pos:line="10" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="47"/></condition><then pos:line="10" pos:column="47">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="11" pos:column="17">opts<pos:position pos:line="11" pos:column="21"/></name><operator pos:line="11" pos:column="21">-&gt;<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="23">edit<pos:position pos:line="11" pos:column="27"/></name></name> <operator pos:line="11" pos:column="28">=<pos:position pos:line="11" pos:column="29"/></operator> <call><name pos:line="11" pos:column="30">git_config_bool_or_int<pos:position pos:line="11" pos:column="52"/></name><argument_list pos:line="11" pos:column="52">(<argument><expr><name pos:line="11" pos:column="53">key<pos:position pos:line="11" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="58">value<pos:position pos:line="11" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="65">&amp;<pos:position pos:line="11" pos:column="70"/></operator><name pos:line="11" pos:column="66">error_flag<pos:position pos:line="11" pos:column="76"/></name></expr></argument>)<pos:position pos:line="11" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="78"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="12" pos:column="9">else <if pos:line="12" pos:column="14">if <condition pos:line="12" pos:column="17">(<expr><operator pos:line="12" pos:column="18">!<pos:position pos:line="12" pos:column="19"/></operator><call><name pos:line="12" pos:column="19">strcmp<pos:position pos:line="12" pos:column="25"/></name><argument_list pos:line="12" pos:column="25">(<argument><expr><name pos:line="12" pos:column="26">key<pos:position pos:line="12" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="31">"options.signoff"<pos:position pos:line="12" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="50"/></condition><then pos:line="12" pos:column="50">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="13" pos:column="17">opts<pos:position pos:line="13" pos:column="21"/></name><operator pos:line="13" pos:column="21">-&gt;<pos:position pos:line="13" pos:column="26"/></operator><name pos:line="13" pos:column="23">signoff<pos:position pos:line="13" pos:column="30"/></name></name> <operator pos:line="13" pos:column="31">=<pos:position pos:line="13" pos:column="32"/></operator> <call><name pos:line="13" pos:column="33">git_config_bool_or_int<pos:position pos:line="13" pos:column="55"/></name><argument_list pos:line="13" pos:column="55">(<argument><expr><name pos:line="13" pos:column="56">key<pos:position pos:line="13" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="61">value<pos:position pos:line="13" pos:column="66"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="68">&amp;<pos:position pos:line="13" pos:column="73"/></operator><name pos:line="13" pos:column="69">error_flag<pos:position pos:line="13" pos:column="79"/></name></expr></argument>)<pos:position pos:line="13" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="81"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="14" pos:column="9">else <if pos:line="14" pos:column="14">if <condition pos:line="14" pos:column="17">(<expr><operator pos:line="14" pos:column="18">!<pos:position pos:line="14" pos:column="19"/></operator><call><name pos:line="14" pos:column="19">strcmp<pos:position pos:line="14" pos:column="25"/></name><argument_list pos:line="14" pos:column="25">(<argument><expr><name pos:line="14" pos:column="26">key<pos:position pos:line="14" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="31">"options.record-origin"<pos:position pos:line="14" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="56"/></condition><then pos:line="14" pos:column="56">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="15" pos:column="17">opts<pos:position pos:line="15" pos:column="21"/></name><operator pos:line="15" pos:column="21">-&gt;<pos:position pos:line="15" pos:column="26"/></operator><name pos:line="15" pos:column="23">record_origin<pos:position pos:line="15" pos:column="36"/></name></name> <operator pos:line="15" pos:column="37">=<pos:position pos:line="15" pos:column="38"/></operator> <call><name pos:line="15" pos:column="39">git_config_bool_or_int<pos:position pos:line="15" pos:column="61"/></name><argument_list pos:line="15" pos:column="61">(<argument><expr><name pos:line="15" pos:column="62">key<pos:position pos:line="15" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="67">value<pos:position pos:line="15" pos:column="72"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="74">&amp;<pos:position pos:line="15" pos:column="79"/></operator><name pos:line="15" pos:column="75">error_flag<pos:position pos:line="15" pos:column="85"/></name></expr></argument>)<pos:position pos:line="15" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="87"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="16" pos:column="9">else <if pos:line="16" pos:column="14">if <condition pos:line="16" pos:column="17">(<expr><operator pos:line="16" pos:column="18">!<pos:position pos:line="16" pos:column="19"/></operator><call><name pos:line="16" pos:column="19">strcmp<pos:position pos:line="16" pos:column="25"/></name><argument_list pos:line="16" pos:column="25">(<argument><expr><name pos:line="16" pos:column="26">key<pos:position pos:line="16" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="31">"options.allow-ff"<pos:position pos:line="16" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="51"/></condition><then pos:line="16" pos:column="51">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="17" pos:column="17">opts<pos:position pos:line="17" pos:column="21"/></name><operator pos:line="17" pos:column="21">-&gt;<pos:position pos:line="17" pos:column="26"/></operator><name pos:line="17" pos:column="23">allow_ff<pos:position pos:line="17" pos:column="31"/></name></name> <operator pos:line="17" pos:column="32">=<pos:position pos:line="17" pos:column="33"/></operator> <call><name pos:line="17" pos:column="34">git_config_bool_or_int<pos:position pos:line="17" pos:column="56"/></name><argument_list pos:line="17" pos:column="56">(<argument><expr><name pos:line="17" pos:column="57">key<pos:position pos:line="17" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="62">value<pos:position pos:line="17" pos:column="67"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="69">&amp;<pos:position pos:line="17" pos:column="74"/></operator><name pos:line="17" pos:column="70">error_flag<pos:position pos:line="17" pos:column="80"/></name></expr></argument>)<pos:position pos:line="17" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="82"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="18" pos:column="9">else <if pos:line="18" pos:column="14">if <condition pos:line="18" pos:column="17">(<expr><operator pos:line="18" pos:column="18">!<pos:position pos:line="18" pos:column="19"/></operator><call><name pos:line="18" pos:column="19">strcmp<pos:position pos:line="18" pos:column="25"/></name><argument_list pos:line="18" pos:column="25">(<argument><expr><name pos:line="18" pos:column="26">key<pos:position pos:line="18" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="31">"options.mainline"<pos:position pos:line="18" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="51"/></condition><then pos:line="18" pos:column="51">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="19" pos:column="17">opts<pos:position pos:line="19" pos:column="21"/></name><operator pos:line="19" pos:column="21">-&gt;<pos:position pos:line="19" pos:column="26"/></operator><name pos:line="19" pos:column="23">mainline<pos:position pos:line="19" pos:column="31"/></name></name> <operator pos:line="19" pos:column="32">=<pos:position pos:line="19" pos:column="33"/></operator> <call><name pos:line="19" pos:column="34">git_config_int<pos:position pos:line="19" pos:column="48"/></name><argument_list pos:line="19" pos:column="48">(<argument><expr><name pos:line="19" pos:column="49">key<pos:position pos:line="19" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="54">value<pos:position pos:line="19" pos:column="59"/></name></expr></argument>)<pos:position pos:line="19" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="61"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="20" pos:column="9">else <if pos:line="20" pos:column="14">if <condition pos:line="20" pos:column="17">(<expr><operator pos:line="20" pos:column="18">!<pos:position pos:line="20" pos:column="19"/></operator><call><name pos:line="20" pos:column="19">strcmp<pos:position pos:line="20" pos:column="25"/></name><argument_list pos:line="20" pos:column="25">(<argument><expr><name pos:line="20" pos:column="26">key<pos:position pos:line="20" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="31">"options.strategy"<pos:position pos:line="20" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="51"/></condition><then pos:line="20" pos:column="51">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="17">git_config_string_dup<pos:position pos:line="21" pos:column="38"/></name><argument_list pos:line="21" pos:column="38">(<argument><expr><operator pos:line="21" pos:column="39">&amp;<pos:position pos:line="21" pos:column="44"/></operator><name><name pos:line="21" pos:column="40">opts<pos:position pos:line="21" pos:column="44"/></name><operator pos:line="21" pos:column="44">-&gt;<pos:position pos:line="21" pos:column="49"/></operator><name pos:line="21" pos:column="46">strategy<pos:position pos:line="21" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="56">key<pos:position pos:line="21" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="61">value<pos:position pos:line="21" pos:column="66"/></name></expr></argument>)<pos:position pos:line="21" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="68"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="22" pos:column="9">else <if pos:line="22" pos:column="14">if <condition pos:line="22" pos:column="17">(<expr><operator pos:line="22" pos:column="18">!<pos:position pos:line="22" pos:column="19"/></operator><call><name pos:line="22" pos:column="19">strcmp<pos:position pos:line="22" pos:column="25"/></name><argument_list pos:line="22" pos:column="25">(<argument><expr><name pos:line="22" pos:column="26">key<pos:position pos:line="22" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="31">"options.gpg-sign"<pos:position pos:line="22" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="51"/></condition><then pos:line="22" pos:column="51">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="17">git_config_string_dup<pos:position pos:line="23" pos:column="38"/></name><argument_list pos:line="23" pos:column="38">(<argument><expr><operator pos:line="23" pos:column="39">&amp;<pos:position pos:line="23" pos:column="44"/></operator><name><name pos:line="23" pos:column="40">opts<pos:position pos:line="23" pos:column="44"/></name><operator pos:line="23" pos:column="44">-&gt;<pos:position pos:line="23" pos:column="49"/></operator><name pos:line="23" pos:column="46">gpg_sign<pos:position pos:line="23" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="56">key<pos:position pos:line="23" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="61">value<pos:position pos:line="23" pos:column="66"/></name></expr></argument>)<pos:position pos:line="23" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="68"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="24" pos:column="9">else <if pos:line="24" pos:column="14">if <condition pos:line="24" pos:column="17">(<expr><operator pos:line="24" pos:column="18">!<pos:position pos:line="24" pos:column="19"/></operator><call><name pos:line="24" pos:column="19">strcmp<pos:position pos:line="24" pos:column="25"/></name><argument_list pos:line="24" pos:column="25">(<argument><expr><name pos:line="24" pos:column="26">key<pos:position pos:line="24" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="31">"options.strategy-option"<pos:position pos:line="24" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="58"/></condition><then pos:line="24" pos:column="58"> <block pos:line="24" pos:column="59">{
		<expr_stmt><expr><call><name pos:line="25" pos:column="17">ALLOC_GROW<pos:position pos:line="25" pos:column="27"/></name><argument_list pos:line="25" pos:column="27">(<argument><expr><name><name pos:line="25" pos:column="28">opts<pos:position pos:line="25" pos:column="32"/></name><operator pos:line="25" pos:column="32">-&gt;<pos:position pos:line="25" pos:column="37"/></operator><name pos:line="25" pos:column="34">xopts<pos:position pos:line="25" pos:column="39"/></name></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="41">opts<pos:position pos:line="25" pos:column="45"/></name><operator pos:line="25" pos:column="45">-&gt;<pos:position pos:line="25" pos:column="50"/></operator><name pos:line="25" pos:column="47">xopts_nr<pos:position pos:line="25" pos:column="55"/></name></name> <operator pos:line="25" pos:column="56">+<pos:position pos:line="25" pos:column="57"/></operator> <literal type="number" pos:line="25" pos:column="58">1<pos:position pos:line="25" pos:column="59"/></literal></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="61">opts<pos:position pos:line="25" pos:column="65"/></name><operator pos:line="25" pos:column="65">-&gt;<pos:position pos:line="25" pos:column="70"/></operator><name pos:line="25" pos:column="67">xopts_alloc<pos:position pos:line="25" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="80"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="26" pos:column="17">opts<pos:position pos:line="26" pos:column="21"/></name><operator pos:line="26" pos:column="21">-&gt;<pos:position pos:line="26" pos:column="26"/></operator><name pos:line="26" pos:column="23">xopts<pos:position pos:line="26" pos:column="28"/></name><index pos:line="26" pos:column="28">[<expr><name><name pos:line="26" pos:column="29">opts<pos:position pos:line="26" pos:column="33"/></name><operator pos:line="26" pos:column="33">-&gt;<pos:position pos:line="26" pos:column="38"/></operator><name pos:line="26" pos:column="35">xopts_nr<pos:position pos:line="26" pos:column="43"/></name></name><operator pos:line="26" pos:column="43">++<pos:position pos:line="26" pos:column="45"/></operator></expr>]<pos:position pos:line="26" pos:column="46"/></index></name> <operator pos:line="26" pos:column="47">=<pos:position pos:line="26" pos:column="48"/></operator> <call><name pos:line="26" pos:column="49">xstrdup<pos:position pos:line="26" pos:column="56"/></name><argument_list pos:line="26" pos:column="56">(<argument><expr><name pos:line="26" pos:column="57">value<pos:position pos:line="26" pos:column="62"/></name></expr></argument>)<pos:position pos:line="26" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="64"/></expr_stmt>
	}<pos:position pos:line="27" pos:column="10"/></block></then></if></elseif> <elseif pos:line="27" pos:column="11">else <if pos:line="27" pos:column="16">if <condition pos:line="27" pos:column="19">(<expr><operator pos:line="27" pos:column="20">!<pos:position pos:line="27" pos:column="21"/></operator><call><name pos:line="27" pos:column="21">strcmp<pos:position pos:line="27" pos:column="27"/></name><argument_list pos:line="27" pos:column="27">(<argument><expr><name pos:line="27" pos:column="28">key<pos:position pos:line="27" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="33">"options.allow-rerere-auto"<pos:position pos:line="27" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="62"/></condition><then pos:line="27" pos:column="62">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="28" pos:column="17">opts<pos:position pos:line="28" pos:column="21"/></name><operator pos:line="28" pos:column="21">-&gt;<pos:position pos:line="28" pos:column="26"/></operator><name pos:line="28" pos:column="23">allow_rerere_auto<pos:position pos:line="28" pos:column="40"/></name></name> <operator pos:line="28" pos:column="41">=<pos:position pos:line="28" pos:column="42"/></operator>
			<ternary><condition><expr><call><name pos:line="29" pos:column="25">git_config_bool_or_int<pos:position pos:line="29" pos:column="47"/></name><argument_list pos:line="29" pos:column="47">(<argument><expr><name pos:line="29" pos:column="48">key<pos:position pos:line="29" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="53">value<pos:position pos:line="29" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="60">&amp;<pos:position pos:line="29" pos:column="65"/></operator><name pos:line="29" pos:column="61">error_flag<pos:position pos:line="29" pos:column="71"/></name></expr></argument>)<pos:position pos:line="29" pos:column="72"/></argument_list></call></expr> ?<pos:position pos:line="29" pos:column="74"/></condition><then pos:line="29" pos:column="74">
				<expr><name pos:line="30" pos:column="33">RERERE_AUTOUPDATE<pos:position pos:line="30" pos:column="50"/></name></expr> <pos:position pos:line="30" pos:column="51"/></then><else pos:line="30" pos:column="51">: <expr><name pos:line="30" pos:column="53">RERERE_NOAUTOUPDATE<pos:position pos:line="30" pos:column="72"/></name></expr></else></ternary></expr>;<pos:position pos:line="30" pos:column="73"/></expr_stmt></block></then></if></elseif>
	<else pos:line="31" pos:column="9">else
		<block type="pseudo"><return pos:line="32" pos:column="17">return <expr><call><name pos:line="32" pos:column="24">error<pos:position pos:line="32" pos:column="29"/></name><argument_list pos:line="32" pos:column="29">(<argument><expr><call><name pos:line="32" pos:column="30">_<pos:position pos:line="32" pos:column="31"/></name><argument_list pos:line="32" pos:column="31">(<argument><expr><literal type="string" pos:line="32" pos:column="32">"invalid key: %s"<pos:position pos:line="32" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="50"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="32" pos:column="52">key<pos:position pos:line="32" pos:column="55"/></name></expr></argument>)<pos:position pos:line="32" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="57"/></return></block></else></if>

	<if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><operator pos:line="34" pos:column="13">!<pos:position pos:line="34" pos:column="14"/></operator><name pos:line="34" pos:column="14">error_flag<pos:position pos:line="34" pos:column="24"/></name></expr>)<pos:position pos:line="34" pos:column="25"/></condition><then pos:line="34" pos:column="25">
		<block type="pseudo"><return pos:line="35" pos:column="17">return <expr><call><name pos:line="35" pos:column="24">error<pos:position pos:line="35" pos:column="29"/></name><argument_list pos:line="35" pos:column="29">(<argument><expr><call><name pos:line="35" pos:column="30">_<pos:position pos:line="35" pos:column="31"/></name><argument_list pos:line="35" pos:column="31">(<argument><expr><literal type="string" pos:line="35" pos:column="32">"invalid value for %s: %s"<pos:position pos:line="35" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="59"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="35" pos:column="61">key<pos:position pos:line="35" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="66">value<pos:position pos:line="35" pos:column="71"/></name></expr></argument>)<pos:position pos:line="35" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="73"/></return></block></then></if>

	<return pos:line="37" pos:column="9">return <expr><literal type="number" pos:line="37" pos:column="16">0<pos:position pos:line="37" pos:column="17"/></literal></expr>;<pos:position pos:line="37" pos:column="18"/></return>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

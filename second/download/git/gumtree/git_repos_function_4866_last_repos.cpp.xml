<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4866_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">is_cr_needed<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">xdfenv_t<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">xe1<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">xdfenv_t<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">xe2<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">xdmerge_t<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">m<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">needs_cr<pos:position pos:line="3" pos:column="21"/></name></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>

	<comment type="block" pos:line="5" pos:column="9">/* Match post-images' preceding, or first, lines' end-of-line style */</comment>
	<expr_stmt><expr><name pos:line="6" pos:column="9">needs_cr<pos:position pos:line="6" pos:column="17"/></name> <operator pos:line="6" pos:column="18">=<pos:position pos:line="6" pos:column="19"/></operator> <call><name pos:line="6" pos:column="20">is_eol_crlf<pos:position pos:line="6" pos:column="31"/></name><argument_list pos:line="6" pos:column="31">(<argument><expr><operator pos:line="6" pos:column="32">&amp;<pos:position pos:line="6" pos:column="37"/></operator><name><name pos:line="6" pos:column="33">xe1<pos:position pos:line="6" pos:column="36"/></name><operator pos:line="6" pos:column="36">-&gt;<pos:position pos:line="6" pos:column="41"/></operator><name pos:line="6" pos:column="38">xdf2<pos:position pos:line="6" pos:column="42"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="6" pos:column="44">m<pos:position pos:line="6" pos:column="45"/></name><operator pos:line="6" pos:column="45">-&gt;<pos:position pos:line="6" pos:column="50"/></operator><name pos:line="6" pos:column="47">i1<pos:position pos:line="6" pos:column="49"/></name></name></expr> ?<pos:position pos:line="6" pos:column="51"/></condition><then pos:line="6" pos:column="51"> <expr><name><name pos:line="6" pos:column="52">m<pos:position pos:line="6" pos:column="53"/></name><operator pos:line="6" pos:column="53">-&gt;<pos:position pos:line="6" pos:column="58"/></operator><name pos:line="6" pos:column="55">i1<pos:position pos:line="6" pos:column="57"/></name></name> <operator pos:line="6" pos:column="58">-<pos:position pos:line="6" pos:column="59"/></operator> <literal type="number" pos:line="6" pos:column="60">1<pos:position pos:line="6" pos:column="61"/></literal></expr> <pos:position pos:line="6" pos:column="62"/></then><else pos:line="6" pos:column="62">: <expr><literal type="number" pos:line="6" pos:column="64">0<pos:position pos:line="6" pos:column="65"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="6" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="67"/></expr_stmt>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">needs_cr<pos:position pos:line="7" pos:column="21"/></name></expr>)<pos:position pos:line="7" pos:column="22"/></condition><then pos:line="7" pos:column="22">
		<block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="17">needs_cr<pos:position pos:line="8" pos:column="25"/></name> <operator pos:line="8" pos:column="26">=<pos:position pos:line="8" pos:column="27"/></operator> <call><name pos:line="8" pos:column="28">is_eol_crlf<pos:position pos:line="8" pos:column="39"/></name><argument_list pos:line="8" pos:column="39">(<argument><expr><operator pos:line="8" pos:column="40">&amp;<pos:position pos:line="8" pos:column="45"/></operator><name><name pos:line="8" pos:column="41">xe2<pos:position pos:line="8" pos:column="44"/></name><operator pos:line="8" pos:column="44">-&gt;<pos:position pos:line="8" pos:column="49"/></operator><name pos:line="8" pos:column="46">xdf2<pos:position pos:line="8" pos:column="50"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="8" pos:column="52">m<pos:position pos:line="8" pos:column="53"/></name><operator pos:line="8" pos:column="53">-&gt;<pos:position pos:line="8" pos:column="58"/></operator><name pos:line="8" pos:column="55">i2<pos:position pos:line="8" pos:column="57"/></name></name></expr> ?<pos:position pos:line="8" pos:column="59"/></condition><then pos:line="8" pos:column="59"> <expr><name><name pos:line="8" pos:column="60">m<pos:position pos:line="8" pos:column="61"/></name><operator pos:line="8" pos:column="61">-&gt;<pos:position pos:line="8" pos:column="66"/></operator><name pos:line="8" pos:column="63">i2<pos:position pos:line="8" pos:column="65"/></name></name> <operator pos:line="8" pos:column="66">-<pos:position pos:line="8" pos:column="67"/></operator> <literal type="number" pos:line="8" pos:column="68">1<pos:position pos:line="8" pos:column="69"/></literal></expr> <pos:position pos:line="8" pos:column="70"/></then><else pos:line="8" pos:column="70">: <expr><literal type="number" pos:line="8" pos:column="72">0<pos:position pos:line="8" pos:column="73"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="8" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="75"/></expr_stmt></block></then></if>
	<comment type="block" pos:line="9" pos:column="9">/* Look at pre-image's first line, unless we already settled on LF */</comment>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">needs_cr<pos:position pos:line="10" pos:column="21"/></name></expr>)<pos:position pos:line="10" pos:column="22"/></condition><then pos:line="10" pos:column="22">
		<block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="17">needs_cr<pos:position pos:line="11" pos:column="25"/></name> <operator pos:line="11" pos:column="26">=<pos:position pos:line="11" pos:column="27"/></operator> <call><name pos:line="11" pos:column="28">is_eol_crlf<pos:position pos:line="11" pos:column="39"/></name><argument_list pos:line="11" pos:column="39">(<argument><expr><operator pos:line="11" pos:column="40">&amp;<pos:position pos:line="11" pos:column="45"/></operator><name><name pos:line="11" pos:column="41">xe1<pos:position pos:line="11" pos:column="44"/></name><operator pos:line="11" pos:column="44">-&gt;<pos:position pos:line="11" pos:column="49"/></operator><name pos:line="11" pos:column="46">xdf1<pos:position pos:line="11" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="52">0<pos:position pos:line="11" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="55"/></expr_stmt></block></then></if>
	<comment type="block" pos:line="12" pos:column="9">/* If still undecided, use LF-only */</comment>
	<return pos:line="13" pos:column="9">return <expr><ternary><condition><expr><name pos:line="13" pos:column="16">needs_cr<pos:position pos:line="13" pos:column="24"/></name> <operator pos:line="13" pos:column="25">&lt;<pos:position pos:line="13" pos:column="29"/></operator> <literal type="number" pos:line="13" pos:column="27">0<pos:position pos:line="13" pos:column="28"/></literal></expr> ?<pos:position pos:line="13" pos:column="30"/></condition><then pos:line="13" pos:column="30"> <expr><literal type="number" pos:line="13" pos:column="31">0<pos:position pos:line="13" pos:column="32"/></literal></expr> <pos:position pos:line="13" pos:column="33"/></then><else pos:line="13" pos:column="33">: <expr><name pos:line="13" pos:column="35">needs_cr<pos:position pos:line="13" pos:column="43"/></name></expr></else></ternary></expr>;<pos:position pos:line="13" pos:column="44"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1381.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">bitmap_writer_build_type_index<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name><name pos:line="1" pos:column="37">struct<pos:position pos:line="1" pos:column="43"/></name> <name pos:line="1" pos:column="44">pack_idx_entry<pos:position pos:line="1" pos:column="58"/></name></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier><modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">index<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>,
				    <parameter><decl><type><name pos:line="2" pos:column="37">uint32_t<pos:position pos:line="2" pos:column="45"/></name></type> <name pos:line="2" pos:column="46">index_nr<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">uint32_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">i<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>

	<expr_stmt><expr><name><name pos:line="6" pos:column="9">writer<pos:position pos:line="6" pos:column="15"/></name><operator pos:line="6" pos:column="15">.<pos:position pos:line="6" pos:column="16"/></operator><name pos:line="6" pos:column="16">commits<pos:position pos:line="6" pos:column="23"/></name></name> <operator pos:line="6" pos:column="24">=<pos:position pos:line="6" pos:column="25"/></operator> <call><name pos:line="6" pos:column="26">ewah_new<pos:position pos:line="6" pos:column="34"/></name><argument_list pos:line="6" pos:column="34">()<pos:position pos:line="6" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="7" pos:column="9">writer<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">.<pos:position pos:line="7" pos:column="16"/></operator><name pos:line="7" pos:column="16">trees<pos:position pos:line="7" pos:column="21"/></name></name> <operator pos:line="7" pos:column="22">=<pos:position pos:line="7" pos:column="23"/></operator> <call><name pos:line="7" pos:column="24">ewah_new<pos:position pos:line="7" pos:column="32"/></name><argument_list pos:line="7" pos:column="32">()<pos:position pos:line="7" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="8" pos:column="9">writer<pos:position pos:line="8" pos:column="15"/></name><operator pos:line="8" pos:column="15">.<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="16">blobs<pos:position pos:line="8" pos:column="21"/></name></name> <operator pos:line="8" pos:column="22">=<pos:position pos:line="8" pos:column="23"/></operator> <call><name pos:line="8" pos:column="24">ewah_new<pos:position pos:line="8" pos:column="32"/></name><argument_list pos:line="8" pos:column="32">()<pos:position pos:line="8" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="9" pos:column="9">writer<pos:position pos:line="9" pos:column="15"/></name><operator pos:line="9" pos:column="15">.<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="16">tags<pos:position pos:line="9" pos:column="20"/></name></name> <operator pos:line="9" pos:column="21">=<pos:position pos:line="9" pos:column="22"/></operator> <call><name pos:line="9" pos:column="23">ewah_new<pos:position pos:line="9" pos:column="31"/></name><argument_list pos:line="9" pos:column="31">()<pos:position pos:line="9" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="34"/></expr_stmt>

	<for pos:line="11" pos:column="9">for <control pos:line="11" pos:column="13">(<init><expr><name pos:line="11" pos:column="14">i<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <literal type="number" pos:line="11" pos:column="18">0<pos:position pos:line="11" pos:column="19"/></literal></expr>;<pos:position pos:line="11" pos:column="20"/></init> <condition><expr><name pos:line="11" pos:column="21">i<pos:position pos:line="11" pos:column="22"/></name> <operator pos:line="11" pos:column="23">&lt;<pos:position pos:line="11" pos:column="27"/></operator> <name pos:line="11" pos:column="25">index_nr<pos:position pos:line="11" pos:column="33"/></name></expr>;<pos:position pos:line="11" pos:column="34"/></condition> <incr><expr><operator pos:line="11" pos:column="35">++<pos:position pos:line="11" pos:column="37"/></operator><name pos:line="11" pos:column="37">i<pos:position pos:line="11" pos:column="38"/></name></expr></incr>)<pos:position pos:line="11" pos:column="39"/></control> <block pos:line="11" pos:column="40">{
		<decl_stmt><decl><type><name><name pos:line="12" pos:column="17">struct<pos:position pos:line="12" pos:column="23"/></name> <name pos:line="12" pos:column="24">object_entry<pos:position pos:line="12" pos:column="36"/></name></name> <modifier pos:line="12" pos:column="37">*<pos:position pos:line="12" pos:column="38"/></modifier></type><name pos:line="12" pos:column="38">entry<pos:position pos:line="12" pos:column="43"/></name> <init pos:line="12" pos:column="44">= <expr><operator pos:line="12" pos:column="46">(<pos:position pos:line="12" pos:column="47"/></operator>struct <name pos:line="12" pos:column="54">object_entry<pos:position pos:line="12" pos:column="66"/></name> <operator pos:line="12" pos:column="67">*<pos:position pos:line="12" pos:column="68"/></operator><operator pos:line="12" pos:column="68">)<pos:position pos:line="12" pos:column="69"/></operator><name><name pos:line="12" pos:column="69">index<pos:position pos:line="12" pos:column="74"/></name><index pos:line="12" pos:column="74">[<expr><name pos:line="12" pos:column="75">i<pos:position pos:line="12" pos:column="76"/></name></expr>]<pos:position pos:line="12" pos:column="77"/></index></name></expr></init></decl>;<pos:position pos:line="12" pos:column="78"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="13" pos:column="17">enum<pos:position pos:line="13" pos:column="21"/></name> <name pos:line="13" pos:column="22">object_type<pos:position pos:line="13" pos:column="33"/></name></name></type> <name pos:line="13" pos:column="34">real_type<pos:position pos:line="13" pos:column="43"/></name></decl>;<pos:position pos:line="13" pos:column="44"/></decl_stmt>

		<expr_stmt><expr><name><name pos:line="15" pos:column="17">entry<pos:position pos:line="15" pos:column="22"/></name><operator pos:line="15" pos:column="22">-&gt;<pos:position pos:line="15" pos:column="27"/></operator><name pos:line="15" pos:column="24">in_pack_pos<pos:position pos:line="15" pos:column="35"/></name></name> <operator pos:line="15" pos:column="36">=<pos:position pos:line="15" pos:column="37"/></operator> <name pos:line="15" pos:column="38">i<pos:position pos:line="15" pos:column="39"/></name></expr>;<pos:position pos:line="15" pos:column="40"/></expr_stmt>

		<switch pos:line="17" pos:column="17">switch <condition pos:line="17" pos:column="24">(<expr><name><name pos:line="17" pos:column="25">entry<pos:position pos:line="17" pos:column="30"/></name><operator pos:line="17" pos:column="30">-&gt;<pos:position pos:line="17" pos:column="35"/></operator><name pos:line="17" pos:column="32">type<pos:position pos:line="17" pos:column="36"/></name></name></expr>)<pos:position pos:line="17" pos:column="37"/></condition> <block pos:line="17" pos:column="38">{
		<case pos:line="18" pos:column="17">case <expr><name pos:line="18" pos:column="22">OBJ_COMMIT<pos:position pos:line="18" pos:column="32"/></name></expr>:<pos:position pos:line="18" pos:column="33"/></case>
		<case pos:line="19" pos:column="17">case <expr><name pos:line="19" pos:column="22">OBJ_TREE<pos:position pos:line="19" pos:column="30"/></name></expr>:<pos:position pos:line="19" pos:column="31"/></case>
		<case pos:line="20" pos:column="17">case <expr><name pos:line="20" pos:column="22">OBJ_BLOB<pos:position pos:line="20" pos:column="30"/></name></expr>:<pos:position pos:line="20" pos:column="31"/></case>
		<case pos:line="21" pos:column="17">case <expr><name pos:line="21" pos:column="22">OBJ_TAG<pos:position pos:line="21" pos:column="29"/></name></expr>:<pos:position pos:line="21" pos:column="30"/></case>
			<expr_stmt><expr><name pos:line="22" pos:column="25">real_type<pos:position pos:line="22" pos:column="34"/></name> <operator pos:line="22" pos:column="35">=<pos:position pos:line="22" pos:column="36"/></operator> <name><name pos:line="22" pos:column="37">entry<pos:position pos:line="22" pos:column="42"/></name><operator pos:line="22" pos:column="42">-&gt;<pos:position pos:line="22" pos:column="47"/></operator><name pos:line="22" pos:column="44">type<pos:position pos:line="22" pos:column="48"/></name></name></expr>;<pos:position pos:line="22" pos:column="49"/></expr_stmt>
			<break pos:line="23" pos:column="25">break;<pos:position pos:line="23" pos:column="31"/></break>

		<default pos:line="25" pos:column="17">default:<pos:position pos:line="25" pos:column="25"/></default>
			<expr_stmt><expr><name pos:line="26" pos:column="25">real_type<pos:position pos:line="26" pos:column="34"/></name> <operator pos:line="26" pos:column="35">=<pos:position pos:line="26" pos:column="36"/></operator> <call><name pos:line="26" pos:column="37">sha1_object_info<pos:position pos:line="26" pos:column="53"/></name><argument_list pos:line="26" pos:column="53">(<argument><expr><name><name pos:line="26" pos:column="54">entry<pos:position pos:line="26" pos:column="59"/></name><operator pos:line="26" pos:column="59">-&gt;<pos:position pos:line="26" pos:column="64"/></operator><name pos:line="26" pos:column="61">idx<pos:position pos:line="26" pos:column="64"/></name><operator pos:line="26" pos:column="64">.<pos:position pos:line="26" pos:column="65"/></operator><name pos:line="26" pos:column="65">sha1<pos:position pos:line="26" pos:column="69"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="71">NULL<pos:position pos:line="26" pos:column="75"/></name></expr></argument>)<pos:position pos:line="26" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="77"/></expr_stmt>
			<break pos:line="27" pos:column="25">break;<pos:position pos:line="27" pos:column="31"/></break>
		}<pos:position pos:line="28" pos:column="18"/></block></switch>

		<switch pos:line="30" pos:column="17">switch <condition pos:line="30" pos:column="24">(<expr><name pos:line="30" pos:column="25">real_type<pos:position pos:line="30" pos:column="34"/></name></expr>)<pos:position pos:line="30" pos:column="35"/></condition> <block pos:line="30" pos:column="36">{
		<case pos:line="31" pos:column="17">case <expr><name pos:line="31" pos:column="22">OBJ_COMMIT<pos:position pos:line="31" pos:column="32"/></name></expr>:<pos:position pos:line="31" pos:column="33"/></case>
			<expr_stmt><expr><call><name pos:line="32" pos:column="25">ewah_set<pos:position pos:line="32" pos:column="33"/></name><argument_list pos:line="32" pos:column="33">(<argument><expr><name><name pos:line="32" pos:column="34">writer<pos:position pos:line="32" pos:column="40"/></name><operator pos:line="32" pos:column="40">.<pos:position pos:line="32" pos:column="41"/></operator><name pos:line="32" pos:column="41">commits<pos:position pos:line="32" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="50">i<pos:position pos:line="32" pos:column="51"/></name></expr></argument>)<pos:position pos:line="32" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="53"/></expr_stmt>
			<break pos:line="33" pos:column="25">break;<pos:position pos:line="33" pos:column="31"/></break>

		<case pos:line="35" pos:column="17">case <expr><name pos:line="35" pos:column="22">OBJ_TREE<pos:position pos:line="35" pos:column="30"/></name></expr>:<pos:position pos:line="35" pos:column="31"/></case>
			<expr_stmt><expr><call><name pos:line="36" pos:column="25">ewah_set<pos:position pos:line="36" pos:column="33"/></name><argument_list pos:line="36" pos:column="33">(<argument><expr><name><name pos:line="36" pos:column="34">writer<pos:position pos:line="36" pos:column="40"/></name><operator pos:line="36" pos:column="40">.<pos:position pos:line="36" pos:column="41"/></operator><name pos:line="36" pos:column="41">trees<pos:position pos:line="36" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="48">i<pos:position pos:line="36" pos:column="49"/></name></expr></argument>)<pos:position pos:line="36" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="51"/></expr_stmt>
			<break pos:line="37" pos:column="25">break;<pos:position pos:line="37" pos:column="31"/></break>

		<case pos:line="39" pos:column="17">case <expr><name pos:line="39" pos:column="22">OBJ_BLOB<pos:position pos:line="39" pos:column="30"/></name></expr>:<pos:position pos:line="39" pos:column="31"/></case>
			<expr_stmt><expr><call><name pos:line="40" pos:column="25">ewah_set<pos:position pos:line="40" pos:column="33"/></name><argument_list pos:line="40" pos:column="33">(<argument><expr><name><name pos:line="40" pos:column="34">writer<pos:position pos:line="40" pos:column="40"/></name><operator pos:line="40" pos:column="40">.<pos:position pos:line="40" pos:column="41"/></operator><name pos:line="40" pos:column="41">blobs<pos:position pos:line="40" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="48">i<pos:position pos:line="40" pos:column="49"/></name></expr></argument>)<pos:position pos:line="40" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="51"/></expr_stmt>
			<break pos:line="41" pos:column="25">break;<pos:position pos:line="41" pos:column="31"/></break>

		<case pos:line="43" pos:column="17">case <expr><name pos:line="43" pos:column="22">OBJ_TAG<pos:position pos:line="43" pos:column="29"/></name></expr>:<pos:position pos:line="43" pos:column="30"/></case>
			<expr_stmt><expr><call><name pos:line="44" pos:column="25">ewah_set<pos:position pos:line="44" pos:column="33"/></name><argument_list pos:line="44" pos:column="33">(<argument><expr><name><name pos:line="44" pos:column="34">writer<pos:position pos:line="44" pos:column="40"/></name><operator pos:line="44" pos:column="40">.<pos:position pos:line="44" pos:column="41"/></operator><name pos:line="44" pos:column="41">tags<pos:position pos:line="44" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="47">i<pos:position pos:line="44" pos:column="48"/></name></expr></argument>)<pos:position pos:line="44" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="50"/></expr_stmt>
			<break pos:line="45" pos:column="25">break;<pos:position pos:line="45" pos:column="31"/></break>

		<default pos:line="47" pos:column="17">default:<pos:position pos:line="47" pos:column="25"/></default>
			<expr_stmt><expr><call><name pos:line="48" pos:column="25">die<pos:position pos:line="48" pos:column="28"/></name><argument_list pos:line="48" pos:column="28">(<argument><expr><literal type="string" pos:line="48" pos:column="29">"Missing type information for %s (%d/%d)"<pos:position pos:line="48" pos:column="70"/></literal></expr></argument>,
			    <argument><expr><call><name pos:line="49" pos:column="29">sha1_to_hex<pos:position pos:line="49" pos:column="40"/></name><argument_list pos:line="49" pos:column="40">(<argument><expr><name><name pos:line="49" pos:column="41">entry<pos:position pos:line="49" pos:column="46"/></name><operator pos:line="49" pos:column="46">-&gt;<pos:position pos:line="49" pos:column="51"/></operator><name pos:line="49" pos:column="48">idx<pos:position pos:line="49" pos:column="51"/></name><operator pos:line="49" pos:column="51">.<pos:position pos:line="49" pos:column="52"/></operator><name pos:line="49" pos:column="52">sha1<pos:position pos:line="49" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="57"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="49" pos:column="59">real_type<pos:position pos:line="49" pos:column="68"/></name></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="70">entry<pos:position pos:line="49" pos:column="75"/></name><operator pos:line="49" pos:column="75">-&gt;<pos:position pos:line="49" pos:column="80"/></operator><name pos:line="49" pos:column="77">type<pos:position pos:line="49" pos:column="81"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="83"/></expr_stmt>
		}<pos:position pos:line="50" pos:column="18"/></block></switch>
	}<pos:position pos:line="51" pos:column="10"/></block></for>
}<pos:position pos:line="52" pos:column="2"/></block></function></unit>

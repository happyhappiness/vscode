<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4589_git-2.13.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">write_each_non_note_until<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><specifier pos:line="1" pos:column="38">const<pos:position pos:line="1" pos:column="43"/></specifier> <name pos:line="1" pos:column="44">char<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">note_path<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>,
		<parameter><decl><type><name><name pos:line="2" pos:column="17">struct<pos:position pos:line="2" pos:column="23"/></name> <name pos:line="2" pos:column="24">write_each_note_data<pos:position pos:line="2" pos:column="44"/></name></name> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="46">d<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="48"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">non_note<pos:position pos:line="4" pos:column="24"/></name></name> <modifier pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></modifier></type><name pos:line="4" pos:column="26">n<pos:position pos:line="4" pos:column="27"/></name> <init pos:line="4" pos:column="28">= <expr><name><name pos:line="4" pos:column="30">d<pos:position pos:line="4" pos:column="31"/></name><operator pos:line="4" pos:column="31">-&gt;<pos:position pos:line="4" pos:column="36"/></operator><name pos:line="4" pos:column="33">next_non_note<pos:position pos:line="4" pos:column="46"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">cmp<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><literal type="number" pos:line="5" pos:column="19">0<pos:position pos:line="5" pos:column="20"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="22">ret<pos:position pos:line="5" pos:column="25"/></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
	<while pos:line="6" pos:column="9">while <condition pos:line="6" pos:column="15">(<expr><name pos:line="6" pos:column="16">n<pos:position pos:line="6" pos:column="17"/></name> <operator pos:line="6" pos:column="18">&amp;&amp;<pos:position pos:line="6" pos:column="28"/></operator> <operator pos:line="6" pos:column="21">(<pos:position pos:line="6" pos:column="22"/></operator><operator pos:line="6" pos:column="22">!<pos:position pos:line="6" pos:column="23"/></operator><name pos:line="6" pos:column="23">note_path<pos:position pos:line="6" pos:column="32"/></name> <operator pos:line="6" pos:column="33">||<pos:position pos:line="6" pos:column="35"/></operator> <operator pos:line="6" pos:column="36">(<pos:position pos:line="6" pos:column="37"/></operator><name pos:line="6" pos:column="37">cmp<pos:position pos:line="6" pos:column="40"/></name> <operator pos:line="6" pos:column="41">=<pos:position pos:line="6" pos:column="42"/></operator> <call><name pos:line="6" pos:column="43">strcmp<pos:position pos:line="6" pos:column="49"/></name><argument_list pos:line="6" pos:column="49">(<argument><expr><name><name pos:line="6" pos:column="50">n<pos:position pos:line="6" pos:column="51"/></name><operator pos:line="6" pos:column="51">-&gt;<pos:position pos:line="6" pos:column="56"/></operator><name pos:line="6" pos:column="53">path<pos:position pos:line="6" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="59">note_path<pos:position pos:line="6" pos:column="68"/></name></expr></argument>)<pos:position pos:line="6" pos:column="69"/></argument_list></call><operator pos:line="6" pos:column="69">)<pos:position pos:line="6" pos:column="70"/></operator> <operator pos:line="6" pos:column="71">&lt;=<pos:position pos:line="6" pos:column="76"/></operator> <literal type="number" pos:line="6" pos:column="74">0<pos:position pos:line="6" pos:column="75"/></literal><operator pos:line="6" pos:column="75">)<pos:position pos:line="6" pos:column="76"/></operator></expr>)<pos:position pos:line="6" pos:column="77"/></condition> <block pos:line="6" pos:column="78">{
		<if pos:line="7" pos:column="17">if <condition pos:line="7" pos:column="20">(<expr><name pos:line="7" pos:column="21">note_path<pos:position pos:line="7" pos:column="30"/></name> <operator pos:line="7" pos:column="31">&amp;&amp;<pos:position pos:line="7" pos:column="41"/></operator> <name pos:line="7" pos:column="34">cmp<pos:position pos:line="7" pos:column="37"/></name> <operator pos:line="7" pos:column="38">==<pos:position pos:line="7" pos:column="40"/></operator> <literal type="number" pos:line="7" pos:column="41">0<pos:position pos:line="7" pos:column="42"/></literal></expr>)<pos:position pos:line="7" pos:column="43"/></condition><then pos:line="7" pos:column="43">
			<block type="pseudo"><empty_stmt pos:line="8" pos:column="25">;<pos:position pos:line="8" pos:column="26"/></empty_stmt></block></then> <comment type="block" pos:line="8" pos:column="27">/* do nothing, prefer note to non-note */</comment>
		<else pos:line="9" pos:column="17">else <block pos:line="9" pos:column="22">{
			<expr_stmt><expr><name pos:line="10" pos:column="25">ret<pos:position pos:line="10" pos:column="28"/></name> <operator pos:line="10" pos:column="29">=<pos:position pos:line="10" pos:column="30"/></operator> <call><name pos:line="10" pos:column="31">write_each_note_helper<pos:position pos:line="10" pos:column="53"/></name><argument_list pos:line="10" pos:column="53">(<argument><expr><name><name pos:line="10" pos:column="54">d<pos:position pos:line="10" pos:column="55"/></name><operator pos:line="10" pos:column="55">-&gt;<pos:position pos:line="10" pos:column="60"/></operator><name pos:line="10" pos:column="57">root<pos:position pos:line="10" pos:column="61"/></name></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="63">n<pos:position pos:line="10" pos:column="64"/></name><operator pos:line="10" pos:column="64">-&gt;<pos:position pos:line="10" pos:column="69"/></operator><name pos:line="10" pos:column="66">path<pos:position pos:line="10" pos:column="70"/></name></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="72">n<pos:position pos:line="10" pos:column="73"/></name><operator pos:line="10" pos:column="73">-&gt;<pos:position pos:line="10" pos:column="78"/></operator><name pos:line="10" pos:column="75">mode<pos:position pos:line="10" pos:column="79"/></name></name></expr></argument>,
						     <argument><expr><name><name pos:line="11" pos:column="54">n<pos:position pos:line="11" pos:column="55"/></name><operator pos:line="11" pos:column="55">-&gt;<pos:position pos:line="11" pos:column="60"/></operator><name pos:line="11" pos:column="57">sha1<pos:position pos:line="11" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="63"/></expr_stmt>
			<if pos:line="12" pos:column="25">if <condition pos:line="12" pos:column="28">(<expr><name pos:line="12" pos:column="29">ret<pos:position pos:line="12" pos:column="32"/></name></expr>)<pos:position pos:line="12" pos:column="33"/></condition><then pos:line="12" pos:column="33">
				<block type="pseudo"><return pos:line="13" pos:column="33">return <expr><name pos:line="13" pos:column="40">ret<pos:position pos:line="13" pos:column="43"/></name></expr>;<pos:position pos:line="13" pos:column="44"/></return></block></then></if>
		}<pos:position pos:line="14" pos:column="18"/></block></else></if>
		<expr_stmt><expr><name pos:line="15" pos:column="17">n<pos:position pos:line="15" pos:column="18"/></name> <operator pos:line="15" pos:column="19">=<pos:position pos:line="15" pos:column="20"/></operator> <name><name pos:line="15" pos:column="21">n<pos:position pos:line="15" pos:column="22"/></name><operator pos:line="15" pos:column="22">-&gt;<pos:position pos:line="15" pos:column="27"/></operator><name pos:line="15" pos:column="24">next<pos:position pos:line="15" pos:column="28"/></name></name></expr>;<pos:position pos:line="15" pos:column="29"/></expr_stmt>
	}<pos:position pos:line="16" pos:column="10"/></block></while>
	<expr_stmt><expr><name><name pos:line="17" pos:column="9">d<pos:position pos:line="17" pos:column="10"/></name><operator pos:line="17" pos:column="10">-&gt;<pos:position pos:line="17" pos:column="15"/></operator><name pos:line="17" pos:column="12">next_non_note<pos:position pos:line="17" pos:column="25"/></name></name> <operator pos:line="17" pos:column="26">=<pos:position pos:line="17" pos:column="27"/></operator> <name pos:line="17" pos:column="28">n<pos:position pos:line="17" pos:column="29"/></name></expr>;<pos:position pos:line="17" pos:column="30"/></expr_stmt>
	<return pos:line="18" pos:column="9">return <expr><literal type="number" pos:line="18" pos:column="16">0<pos:position pos:line="18" pos:column="17"/></literal></expr>;<pos:position pos:line="18" pos:column="18"/></return>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

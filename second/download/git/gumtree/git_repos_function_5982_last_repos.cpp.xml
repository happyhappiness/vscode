<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5982_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_repack<pos:position pos:line="1" pos:column="15"/></name><parameter_list pos:line="1" pos:column="15">(<parameter><decl><type><name pos:line="1" pos:column="16">int<pos:position pos:line="1" pos:column="19"/></name></type> <name pos:line="1" pos:column="20">argc<pos:position pos:line="1" pos:column="24"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier><modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">argv<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="45">const<pos:position pos:line="1" pos:column="50"/></specifier> <name pos:line="1" pos:column="51">char<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">prefix<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<struct pos:line="3" pos:column="9">struct <block pos:line="3" pos:column="16">{<public type="default" pos:line="3" pos:column="17">
		<decl_stmt><decl><type><specifier pos:line="4" pos:column="17">const<pos:position pos:line="4" pos:column="22"/></specifier> <name pos:line="4" pos:column="23">char<pos:position pos:line="4" pos:column="27"/></name> <modifier pos:line="4" pos:column="28">*<pos:position pos:line="4" pos:column="29"/></modifier></type><name pos:line="4" pos:column="29">name<pos:position pos:line="4" pos:column="33"/></name></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="5" pos:column="17">unsigned<pos:position pos:line="5" pos:column="25"/></name></type> <name pos:line="5" pos:column="26">optional<pos:position pos:line="5" pos:column="34"/></name><range pos:line="5" pos:column="34">:<expr><literal type="number" pos:line="5" pos:column="35">1<pos:position pos:line="5" pos:column="36"/></literal></expr></range></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>
	<pos:position pos:line="6" pos:column="2"/></public>}<pos:position pos:line="6" pos:column="10"/></block> <decl><name><name pos:line="6" pos:column="11">exts<pos:position pos:line="6" pos:column="15"/></name><index pos:line="6" pos:column="15">[]<pos:position pos:line="6" pos:column="17"/></index></name> <init pos:line="6" pos:column="18">= <expr><block pos:line="6" pos:column="20">{
		<expr><block pos:line="7" pos:column="17">{<expr><literal type="string" pos:line="7" pos:column="18">".pack"<pos:position pos:line="7" pos:column="25"/></literal></expr>}<pos:position pos:line="7" pos:column="26"/></block></expr>,
		<expr><block pos:line="8" pos:column="17">{<expr><literal type="string" pos:line="8" pos:column="18">".idx"<pos:position pos:line="8" pos:column="24"/></literal></expr>}<pos:position pos:line="8" pos:column="25"/></block></expr>,
		<expr><block pos:line="9" pos:column="17">{<expr><literal type="string" pos:line="9" pos:column="18">".bitmap"<pos:position pos:line="9" pos:column="27"/></literal></expr>, <expr><literal type="number" pos:line="9" pos:column="29">1<pos:position pos:line="9" pos:column="30"/></literal></expr>}<pos:position pos:line="9" pos:column="31"/></block></expr>,
	}<pos:position pos:line="10" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="10" pos:column="11"/></struct>
	<decl_stmt><decl><type><name><name pos:line="11" pos:column="9">struct<pos:position pos:line="11" pos:column="15"/></name> <name pos:line="11" pos:column="16">child_process<pos:position pos:line="11" pos:column="29"/></name></name></type> <name pos:line="11" pos:column="30">cmd<pos:position pos:line="11" pos:column="33"/></name> <init pos:line="11" pos:column="34">= <expr><name pos:line="11" pos:column="36">CHILD_PROCESS_INIT<pos:position pos:line="11" pos:column="54"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="55"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="12" pos:column="9">struct<pos:position pos:line="12" pos:column="15"/></name> <name pos:line="12" pos:column="16">string_list_item<pos:position pos:line="12" pos:column="32"/></name></name> <modifier pos:line="12" pos:column="33">*<pos:position pos:line="12" pos:column="34"/></modifier></type><name pos:line="12" pos:column="34">item<pos:position pos:line="12" pos:column="38"/></name></decl>;<pos:position pos:line="12" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="13" pos:column="9">struct<pos:position pos:line="13" pos:column="15"/></name> <name pos:line="13" pos:column="16">string_list<pos:position pos:line="13" pos:column="27"/></name></name></type> <name pos:line="13" pos:column="28">names<pos:position pos:line="13" pos:column="33"/></name> <init pos:line="13" pos:column="34">= <expr><name pos:line="13" pos:column="36">STRING_LIST_INIT_DUP<pos:position pos:line="13" pos:column="56"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="57"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="14" pos:column="9">struct<pos:position pos:line="14" pos:column="15"/></name> <name pos:line="14" pos:column="16">string_list<pos:position pos:line="14" pos:column="27"/></name></name></type> <name pos:line="14" pos:column="28">rollback<pos:position pos:line="14" pos:column="36"/></name> <init pos:line="14" pos:column="37">= <expr><name pos:line="14" pos:column="39">STRING_LIST_INIT_NODUP<pos:position pos:line="14" pos:column="61"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="62"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="15" pos:column="9">struct<pos:position pos:line="15" pos:column="15"/></name> <name pos:line="15" pos:column="16">string_list<pos:position pos:line="15" pos:column="27"/></name></name></type> <name pos:line="15" pos:column="28">existing_packs<pos:position pos:line="15" pos:column="42"/></name> <init pos:line="15" pos:column="43">= <expr><name pos:line="15" pos:column="45">STRING_LIST_INIT_DUP<pos:position pos:line="15" pos:column="65"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="66"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="16" pos:column="9">struct<pos:position pos:line="16" pos:column="15"/></name> <name pos:line="16" pos:column="16">strbuf<pos:position pos:line="16" pos:column="22"/></name></name></type> <name pos:line="16" pos:column="23">line<pos:position pos:line="16" pos:column="27"/></name> <init pos:line="16" pos:column="28">= <expr><name pos:line="16" pos:column="30">STRBUF_INIT<pos:position pos:line="16" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="16" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="17" pos:column="9">int<pos:position pos:line="17" pos:column="12"/></name></type> <name pos:line="17" pos:column="13">ext<pos:position pos:line="17" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="17" pos:column="18">ret<pos:position pos:line="17" pos:column="21"/></name></decl>, <decl><type ref="prev"/><name pos:line="17" pos:column="23">failed<pos:position pos:line="17" pos:column="29"/></name></decl>;<pos:position pos:line="17" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="18" pos:column="9">FILE<pos:position pos:line="18" pos:column="13"/></name> <modifier pos:line="18" pos:column="14">*<pos:position pos:line="18" pos:column="15"/></modifier></type><name pos:line="18" pos:column="15">out<pos:position pos:line="18" pos:column="18"/></name></decl>;<pos:position pos:line="18" pos:column="19"/></decl_stmt>

	<comment type="block" pos:line="20" pos:column="9">/* variables to be filled by option parsing */</comment>
	<decl_stmt><decl><type><name pos:line="21" pos:column="9">int<pos:position pos:line="21" pos:column="12"/></name></type> <name pos:line="21" pos:column="13">pack_everything<pos:position pos:line="21" pos:column="28"/></name> <init pos:line="21" pos:column="29">= <expr><literal type="number" pos:line="21" pos:column="31">0<pos:position pos:line="21" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="21" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="22" pos:column="9">int<pos:position pos:line="22" pos:column="12"/></name></type> <name pos:line="22" pos:column="13">delete_redundant<pos:position pos:line="22" pos:column="29"/></name> <init pos:line="22" pos:column="30">= <expr><literal type="number" pos:line="22" pos:column="32">0<pos:position pos:line="22" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="22" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="23" pos:column="9">const<pos:position pos:line="23" pos:column="14"/></specifier> <name pos:line="23" pos:column="15">char<pos:position pos:line="23" pos:column="19"/></name> <modifier pos:line="23" pos:column="20">*<pos:position pos:line="23" pos:column="21"/></modifier></type><name pos:line="23" pos:column="21">unpack_unreachable<pos:position pos:line="23" pos:column="39"/></name> <init pos:line="23" pos:column="40">= <expr><name pos:line="23" pos:column="42">NULL<pos:position pos:line="23" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="23" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="24" pos:column="9">int<pos:position pos:line="24" pos:column="12"/></name></type> <name pos:line="24" pos:column="13">keep_unreachable<pos:position pos:line="24" pos:column="29"/></name> <init pos:line="24" pos:column="30">= <expr><literal type="number" pos:line="24" pos:column="32">0<pos:position pos:line="24" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="24" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="25" pos:column="9">const<pos:position pos:line="25" pos:column="14"/></specifier> <name pos:line="25" pos:column="15">char<pos:position pos:line="25" pos:column="19"/></name> <modifier pos:line="25" pos:column="20">*<pos:position pos:line="25" pos:column="21"/></modifier></type><name pos:line="25" pos:column="21">window<pos:position pos:line="25" pos:column="27"/></name> <init pos:line="25" pos:column="28">= <expr><name pos:line="25" pos:column="30">NULL<pos:position pos:line="25" pos:column="34"/></name></expr></init></decl>, <modifier pos:line="25" pos:column="36">*<pos:position pos:line="25" pos:column="37"/></modifier><decl><type ref="prev"/><name pos:line="25" pos:column="37">window_memory<pos:position pos:line="25" pos:column="50"/></name> <init pos:line="25" pos:column="51">= <expr><name pos:line="25" pos:column="53">NULL<pos:position pos:line="25" pos:column="57"/></name></expr></init></decl>;<pos:position pos:line="25" pos:column="58"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="26" pos:column="9">const<pos:position pos:line="26" pos:column="14"/></specifier> <name pos:line="26" pos:column="15">char<pos:position pos:line="26" pos:column="19"/></name> <modifier pos:line="26" pos:column="20">*<pos:position pos:line="26" pos:column="21"/></modifier></type><name pos:line="26" pos:column="21">depth<pos:position pos:line="26" pos:column="26"/></name> <init pos:line="26" pos:column="27">= <expr><name pos:line="26" pos:column="29">NULL<pos:position pos:line="26" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="26" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="27" pos:column="9">const<pos:position pos:line="27" pos:column="14"/></specifier> <name pos:line="27" pos:column="15">char<pos:position pos:line="27" pos:column="19"/></name> <modifier pos:line="27" pos:column="20">*<pos:position pos:line="27" pos:column="21"/></modifier></type><name pos:line="27" pos:column="21">threads<pos:position pos:line="27" pos:column="28"/></name> <init pos:line="27" pos:column="29">= <expr><name pos:line="27" pos:column="31">NULL<pos:position pos:line="27" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="27" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="28" pos:column="9">const<pos:position pos:line="28" pos:column="14"/></specifier> <name pos:line="28" pos:column="15">char<pos:position pos:line="28" pos:column="19"/></name> <modifier pos:line="28" pos:column="20">*<pos:position pos:line="28" pos:column="21"/></modifier></type><name pos:line="28" pos:column="21">max_pack_size<pos:position pos:line="28" pos:column="34"/></name> <init pos:line="28" pos:column="35">= <expr><name pos:line="28" pos:column="37">NULL<pos:position pos:line="28" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="28" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="29" pos:column="9">int<pos:position pos:line="29" pos:column="12"/></name></type> <name pos:line="29" pos:column="13">no_reuse_delta<pos:position pos:line="29" pos:column="27"/></name> <init pos:line="29" pos:column="28">= <expr><literal type="number" pos:line="29" pos:column="30">0<pos:position pos:line="29" pos:column="31"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="29" pos:column="33">no_reuse_object<pos:position pos:line="29" pos:column="48"/></name> <init pos:line="29" pos:column="49">= <expr><literal type="number" pos:line="29" pos:column="51">0<pos:position pos:line="29" pos:column="52"/></literal></expr></init></decl>;<pos:position pos:line="29" pos:column="53"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="30" pos:column="9">int<pos:position pos:line="30" pos:column="12"/></name></type> <name pos:line="30" pos:column="13">no_update_server_info<pos:position pos:line="30" pos:column="34"/></name> <init pos:line="30" pos:column="35">= <expr><literal type="number" pos:line="30" pos:column="37">0<pos:position pos:line="30" pos:column="38"/></literal></expr></init></decl>;<pos:position pos:line="30" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="31" pos:column="9">int<pos:position pos:line="31" pos:column="12"/></name></type> <name pos:line="31" pos:column="13">quiet<pos:position pos:line="31" pos:column="18"/></name> <init pos:line="31" pos:column="19">= <expr><literal type="number" pos:line="31" pos:column="21">0<pos:position pos:line="31" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="31" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="32" pos:column="9">int<pos:position pos:line="32" pos:column="12"/></name></type> <name pos:line="32" pos:column="13">local<pos:position pos:line="32" pos:column="18"/></name> <init pos:line="32" pos:column="19">= <expr><literal type="number" pos:line="32" pos:column="21">0<pos:position pos:line="32" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="32" pos:column="23"/></decl_stmt>

	<decl_stmt><decl><type><name><name pos:line="34" pos:column="9">struct<pos:position pos:line="34" pos:column="15"/></name> <name pos:line="34" pos:column="16">option<pos:position pos:line="34" pos:column="22"/></name></name></type> <name><name pos:line="34" pos:column="23">builtin_repack_options<pos:position pos:line="34" pos:column="45"/></name><index pos:line="34" pos:column="45">[]<pos:position pos:line="34" pos:column="47"/></index></name> <init pos:line="34" pos:column="48">= <expr><block pos:line="34" pos:column="50">{
		<expr><call><name pos:line="35" pos:column="17">OPT_BIT<pos:position pos:line="35" pos:column="24"/></name><argument_list pos:line="35" pos:column="24">(<argument><expr><literal type="char" pos:line="35" pos:column="25">'a'<pos:position pos:line="35" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="30">NULL<pos:position pos:line="35" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="36">&amp;<pos:position pos:line="35" pos:column="41"/></operator><name pos:line="35" pos:column="37">pack_everything<pos:position pos:line="35" pos:column="52"/></name></expr></argument>,
				<argument><expr><call><name pos:line="36" pos:column="33">N_<pos:position pos:line="36" pos:column="35"/></name><argument_list pos:line="36" pos:column="35">(<argument><expr><literal type="string" pos:line="36" pos:column="36">"pack everything in a single pack"<pos:position pos:line="36" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="71"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="36" pos:column="73">ALL_INTO_ONE<pos:position pos:line="36" pos:column="85"/></name></expr></argument>)<pos:position pos:line="36" pos:column="86"/></argument_list></call></expr>,
		<expr><call><name pos:line="37" pos:column="17">OPT_BIT<pos:position pos:line="37" pos:column="24"/></name><argument_list pos:line="37" pos:column="24">(<argument><expr><literal type="char" pos:line="37" pos:column="25">'A'<pos:position pos:line="37" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="30">NULL<pos:position pos:line="37" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="36">&amp;<pos:position pos:line="37" pos:column="41"/></operator><name pos:line="37" pos:column="37">pack_everything<pos:position pos:line="37" pos:column="52"/></name></expr></argument>,
				<argument><expr><call><name pos:line="38" pos:column="33">N_<pos:position pos:line="38" pos:column="35"/></name><argument_list pos:line="38" pos:column="35">(<argument><expr><literal type="string" pos:line="38" pos:column="36">"same as -a, and turn unreachable objects loose"<pos:position pos:line="38" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="85"/></argument_list></call></expr></argument>,
				   <argument><expr><name pos:line="39" pos:column="36">LOOSEN_UNREACHABLE<pos:position pos:line="39" pos:column="54"/></name> <operator pos:line="39" pos:column="55">|<pos:position pos:line="39" pos:column="56"/></operator> <name pos:line="39" pos:column="57">ALL_INTO_ONE<pos:position pos:line="39" pos:column="69"/></name></expr></argument>)<pos:position pos:line="39" pos:column="70"/></argument_list></call></expr>,
		<expr><call><name pos:line="40" pos:column="17">OPT_BOOL<pos:position pos:line="40" pos:column="25"/></name><argument_list pos:line="40" pos:column="25">(<argument><expr><literal type="char" pos:line="40" pos:column="26">'d'<pos:position pos:line="40" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="31">NULL<pos:position pos:line="40" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="37">&amp;<pos:position pos:line="40" pos:column="42"/></operator><name pos:line="40" pos:column="38">delete_redundant<pos:position pos:line="40" pos:column="54"/></name></expr></argument>,
				<argument><expr><call><name pos:line="41" pos:column="33">N_<pos:position pos:line="41" pos:column="35"/></name><argument_list pos:line="41" pos:column="35">(<argument><expr><literal type="string" pos:line="41" pos:column="36">"remove redundant packs, and run git-prune-packed"<pos:position pos:line="41" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="87"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="88"/></argument_list></call></expr>,
		<expr><call><name pos:line="42" pos:column="17">OPT_BOOL<pos:position pos:line="42" pos:column="25"/></name><argument_list pos:line="42" pos:column="25">(<argument><expr><literal type="char" pos:line="42" pos:column="26">'f'<pos:position pos:line="42" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="31">NULL<pos:position pos:line="42" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="37">&amp;<pos:position pos:line="42" pos:column="42"/></operator><name pos:line="42" pos:column="38">no_reuse_delta<pos:position pos:line="42" pos:column="52"/></name></expr></argument>,
				<argument><expr><call><name pos:line="43" pos:column="33">N_<pos:position pos:line="43" pos:column="35"/></name><argument_list pos:line="43" pos:column="35">(<argument><expr><literal type="string" pos:line="43" pos:column="36">"pass --no-reuse-delta to git-pack-objects"<pos:position pos:line="43" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="43" pos:column="81"/></argument_list></call></expr>,
		<expr><call><name pos:line="44" pos:column="17">OPT_BOOL<pos:position pos:line="44" pos:column="25"/></name><argument_list pos:line="44" pos:column="25">(<argument><expr><literal type="char" pos:line="44" pos:column="26">'F'<pos:position pos:line="44" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="31">NULL<pos:position pos:line="44" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="37">&amp;<pos:position pos:line="44" pos:column="42"/></operator><name pos:line="44" pos:column="38">no_reuse_object<pos:position pos:line="44" pos:column="53"/></name></expr></argument>,
				<argument><expr><call><name pos:line="45" pos:column="33">N_<pos:position pos:line="45" pos:column="35"/></name><argument_list pos:line="45" pos:column="35">(<argument><expr><literal type="string" pos:line="45" pos:column="36">"pass --no-reuse-object to git-pack-objects"<pos:position pos:line="45" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="81"/></argument_list></call></expr></argument>)<pos:position pos:line="45" pos:column="82"/></argument_list></call></expr>,
		<expr><call><name pos:line="46" pos:column="17">OPT_BOOL<pos:position pos:line="46" pos:column="25"/></name><argument_list pos:line="46" pos:column="25">(<argument><expr><literal type="char" pos:line="46" pos:column="26">'n'<pos:position pos:line="46" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="31">NULL<pos:position pos:line="46" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="37">&amp;<pos:position pos:line="46" pos:column="42"/></operator><name pos:line="46" pos:column="38">no_update_server_info<pos:position pos:line="46" pos:column="59"/></name></expr></argument>,
				<argument><expr><call><name pos:line="47" pos:column="33">N_<pos:position pos:line="47" pos:column="35"/></name><argument_list pos:line="47" pos:column="35">(<argument><expr><literal type="string" pos:line="47" pos:column="36">"do not run git-update-server-info"<pos:position pos:line="47" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="47" pos:column="73"/></argument_list></call></expr>,
		<expr><call><name pos:line="48" pos:column="17">OPT__QUIET<pos:position pos:line="48" pos:column="27"/></name><argument_list pos:line="48" pos:column="27">(<argument><expr><operator pos:line="48" pos:column="28">&amp;<pos:position pos:line="48" pos:column="33"/></operator><name pos:line="48" pos:column="29">quiet<pos:position pos:line="48" pos:column="34"/></name></expr></argument>, <argument><expr><call><name pos:line="48" pos:column="36">N_<pos:position pos:line="48" pos:column="38"/></name><argument_list pos:line="48" pos:column="38">(<argument><expr><literal type="string" pos:line="48" pos:column="39">"be quiet"<pos:position pos:line="48" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="48" pos:column="51"/></argument_list></call></expr>,
		<expr><call><name pos:line="49" pos:column="17">OPT_BOOL<pos:position pos:line="49" pos:column="25"/></name><argument_list pos:line="49" pos:column="25">(<argument><expr><literal type="char" pos:line="49" pos:column="26">'l'<pos:position pos:line="49" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="31">"local"<pos:position pos:line="49" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="49" pos:column="40">&amp;<pos:position pos:line="49" pos:column="45"/></operator><name pos:line="49" pos:column="41">local<pos:position pos:line="49" pos:column="46"/></name></expr></argument>,
				<argument><expr><call><name pos:line="50" pos:column="33">N_<pos:position pos:line="50" pos:column="35"/></name><argument_list pos:line="50" pos:column="35">(<argument><expr><literal type="string" pos:line="50" pos:column="36">"pass --local to git-pack-objects"<pos:position pos:line="50" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="50" pos:column="72"/></argument_list></call></expr>,
		<expr><call><name pos:line="51" pos:column="17">OPT_BOOL<pos:position pos:line="51" pos:column="25"/></name><argument_list pos:line="51" pos:column="25">(<argument><expr><literal type="char" pos:line="51" pos:column="26">'b'<pos:position pos:line="51" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="31">"write-bitmap-index"<pos:position pos:line="51" pos:column="51"/></literal></expr></argument>, <argument><expr><operator pos:line="51" pos:column="53">&amp;<pos:position pos:line="51" pos:column="58"/></operator><name pos:line="51" pos:column="54">write_bitmaps<pos:position pos:line="51" pos:column="67"/></name></expr></argument>,
				<argument><expr><call><name pos:line="52" pos:column="33">N_<pos:position pos:line="52" pos:column="35"/></name><argument_list pos:line="52" pos:column="35">(<argument><expr><literal type="string" pos:line="52" pos:column="36">"write bitmap index"<pos:position pos:line="52" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="52" pos:column="58"/></argument_list></call></expr>,
		<expr><call><name pos:line="53" pos:column="17">OPT_STRING<pos:position pos:line="53" pos:column="27"/></name><argument_list pos:line="53" pos:column="27">(<argument><expr><literal type="number" pos:line="53" pos:column="28">0<pos:position pos:line="53" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="31">"unpack-unreachable"<pos:position pos:line="53" pos:column="51"/></literal></expr></argument>, <argument><expr><operator pos:line="53" pos:column="53">&amp;<pos:position pos:line="53" pos:column="58"/></operator><name pos:line="53" pos:column="54">unpack_unreachable<pos:position pos:line="53" pos:column="72"/></name></expr></argument>, <argument><expr><call><name pos:line="53" pos:column="74">N_<pos:position pos:line="53" pos:column="76"/></name><argument_list pos:line="53" pos:column="76">(<argument><expr><literal type="string" pos:line="53" pos:column="77">"approxidate"<pos:position pos:line="53" pos:column="90"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="91"/></argument_list></call></expr></argument>,
				<argument><expr><call><name pos:line="54" pos:column="33">N_<pos:position pos:line="54" pos:column="35"/></name><argument_list pos:line="54" pos:column="35">(<argument><expr><literal type="string" pos:line="54" pos:column="36">"with -A, do not loosen objects older than this"<pos:position pos:line="54" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="85"/></argument_list></call></expr></argument>)<pos:position pos:line="54" pos:column="86"/></argument_list></call></expr>,
		<expr><call><name pos:line="55" pos:column="17">OPT_BOOL<pos:position pos:line="55" pos:column="25"/></name><argument_list pos:line="55" pos:column="25">(<argument><expr><literal type="char" pos:line="55" pos:column="26">'k'<pos:position pos:line="55" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="31">"keep-unreachable"<pos:position pos:line="55" pos:column="49"/></literal></expr></argument>, <argument><expr><operator pos:line="55" pos:column="51">&amp;<pos:position pos:line="55" pos:column="56"/></operator><name pos:line="55" pos:column="52">keep_unreachable<pos:position pos:line="55" pos:column="68"/></name></expr></argument>,
				<argument><expr><call><name pos:line="56" pos:column="33">N_<pos:position pos:line="56" pos:column="35"/></name><argument_list pos:line="56" pos:column="35">(<argument><expr><literal type="string" pos:line="56" pos:column="36">"with -a, repack unreachable objects"<pos:position pos:line="56" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="56" pos:column="75"/></argument_list></call></expr>,
		<expr><call><name pos:line="57" pos:column="17">OPT_STRING<pos:position pos:line="57" pos:column="27"/></name><argument_list pos:line="57" pos:column="27">(<argument><expr><literal type="number" pos:line="57" pos:column="28">0<pos:position pos:line="57" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="31">"window"<pos:position pos:line="57" pos:column="39"/></literal></expr></argument>, <argument><expr><operator pos:line="57" pos:column="41">&amp;<pos:position pos:line="57" pos:column="46"/></operator><name pos:line="57" pos:column="42">window<pos:position pos:line="57" pos:column="48"/></name></expr></argument>, <argument><expr><call><name pos:line="57" pos:column="50">N_<pos:position pos:line="57" pos:column="52"/></name><argument_list pos:line="57" pos:column="52">(<argument><expr><literal type="string" pos:line="57" pos:column="53">"n"<pos:position pos:line="57" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="57"/></argument_list></call></expr></argument>,
				<argument><expr><call><name pos:line="58" pos:column="33">N_<pos:position pos:line="58" pos:column="35"/></name><argument_list pos:line="58" pos:column="35">(<argument><expr><literal type="string" pos:line="58" pos:column="36">"size of the window used for delta compression"<pos:position pos:line="58" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="84"/></argument_list></call></expr></argument>)<pos:position pos:line="58" pos:column="85"/></argument_list></call></expr>,
		<expr><call><name pos:line="59" pos:column="17">OPT_STRING<pos:position pos:line="59" pos:column="27"/></name><argument_list pos:line="59" pos:column="27">(<argument><expr><literal type="number" pos:line="59" pos:column="28">0<pos:position pos:line="59" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="31">"window-memory"<pos:position pos:line="59" pos:column="46"/></literal></expr></argument>, <argument><expr><operator pos:line="59" pos:column="48">&amp;<pos:position pos:line="59" pos:column="53"/></operator><name pos:line="59" pos:column="49">window_memory<pos:position pos:line="59" pos:column="62"/></name></expr></argument>, <argument><expr><call><name pos:line="59" pos:column="64">N_<pos:position pos:line="59" pos:column="66"/></name><argument_list pos:line="59" pos:column="66">(<argument><expr><literal type="string" pos:line="59" pos:column="67">"bytes"<pos:position pos:line="59" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="75"/></argument_list></call></expr></argument>,
				<argument><expr><call><name pos:line="60" pos:column="33">N_<pos:position pos:line="60" pos:column="35"/></name><argument_list pos:line="60" pos:column="35">(<argument><expr><literal type="string" pos:line="60" pos:column="36">"same as the above, but limit memory size instead of entries count"<pos:position pos:line="60" pos:column="103"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="104"/></argument_list></call></expr></argument>)<pos:position pos:line="60" pos:column="105"/></argument_list></call></expr>,
		<expr><call><name pos:line="61" pos:column="17">OPT_STRING<pos:position pos:line="61" pos:column="27"/></name><argument_list pos:line="61" pos:column="27">(<argument><expr><literal type="number" pos:line="61" pos:column="28">0<pos:position pos:line="61" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="31">"depth"<pos:position pos:line="61" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="61" pos:column="40">&amp;<pos:position pos:line="61" pos:column="45"/></operator><name pos:line="61" pos:column="41">depth<pos:position pos:line="61" pos:column="46"/></name></expr></argument>, <argument><expr><call><name pos:line="61" pos:column="48">N_<pos:position pos:line="61" pos:column="50"/></name><argument_list pos:line="61" pos:column="50">(<argument><expr><literal type="string" pos:line="61" pos:column="51">"n"<pos:position pos:line="61" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="55"/></argument_list></call></expr></argument>,
				<argument><expr><call><name pos:line="62" pos:column="33">N_<pos:position pos:line="62" pos:column="35"/></name><argument_list pos:line="62" pos:column="35">(<argument><expr><literal type="string" pos:line="62" pos:column="36">"limits the maximum delta depth"<pos:position pos:line="62" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="62" pos:column="70"/></argument_list></call></expr>,
		<expr><call><name pos:line="63" pos:column="17">OPT_STRING<pos:position pos:line="63" pos:column="27"/></name><argument_list pos:line="63" pos:column="27">(<argument><expr><literal type="number" pos:line="63" pos:column="28">0<pos:position pos:line="63" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="31">"threads"<pos:position pos:line="63" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="63" pos:column="42">&amp;<pos:position pos:line="63" pos:column="47"/></operator><name pos:line="63" pos:column="43">threads<pos:position pos:line="63" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="63" pos:column="52">N_<pos:position pos:line="63" pos:column="54"/></name><argument_list pos:line="63" pos:column="54">(<argument><expr><literal type="string" pos:line="63" pos:column="55">"n"<pos:position pos:line="63" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="59"/></argument_list></call></expr></argument>,
				<argument><expr><call><name pos:line="64" pos:column="33">N_<pos:position pos:line="64" pos:column="35"/></name><argument_list pos:line="64" pos:column="35">(<argument><expr><literal type="string" pos:line="64" pos:column="36">"limits the maximum number of threads"<pos:position pos:line="64" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="64" pos:column="76"/></argument_list></call></expr>,
		<expr><call><name pos:line="65" pos:column="17">OPT_STRING<pos:position pos:line="65" pos:column="27"/></name><argument_list pos:line="65" pos:column="27">(<argument><expr><literal type="number" pos:line="65" pos:column="28">0<pos:position pos:line="65" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="31">"max-pack-size"<pos:position pos:line="65" pos:column="46"/></literal></expr></argument>, <argument><expr><operator pos:line="65" pos:column="48">&amp;<pos:position pos:line="65" pos:column="53"/></operator><name pos:line="65" pos:column="49">max_pack_size<pos:position pos:line="65" pos:column="62"/></name></expr></argument>, <argument><expr><call><name pos:line="65" pos:column="64">N_<pos:position pos:line="65" pos:column="66"/></name><argument_list pos:line="65" pos:column="66">(<argument><expr><literal type="string" pos:line="65" pos:column="67">"bytes"<pos:position pos:line="65" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="75"/></argument_list></call></expr></argument>,
				<argument><expr><call><name pos:line="66" pos:column="33">N_<pos:position pos:line="66" pos:column="35"/></name><argument_list pos:line="66" pos:column="35">(<argument><expr><literal type="string" pos:line="66" pos:column="36">"maximum size of each packfile"<pos:position pos:line="66" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="66" pos:column="69"/></argument_list></call></expr>,
		<expr><call><name pos:line="67" pos:column="17">OPT_BOOL<pos:position pos:line="67" pos:column="25"/></name><argument_list pos:line="67" pos:column="25">(<argument><expr><literal type="number" pos:line="67" pos:column="26">0<pos:position pos:line="67" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="29">"pack-kept-objects"<pos:position pos:line="67" pos:column="48"/></literal></expr></argument>, <argument><expr><operator pos:line="67" pos:column="50">&amp;<pos:position pos:line="67" pos:column="55"/></operator><name pos:line="67" pos:column="51">pack_kept_objects<pos:position pos:line="67" pos:column="68"/></name></expr></argument>,
				<argument><expr><call><name pos:line="68" pos:column="33">N_<pos:position pos:line="68" pos:column="35"/></name><argument_list pos:line="68" pos:column="35">(<argument><expr><literal type="string" pos:line="68" pos:column="36">"repack objects in packs marked with .keep"<pos:position pos:line="68" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="68" pos:column="81"/></argument_list></call></expr>,
		<macro><name pos:line="69" pos:column="17">OPT_END<pos:position pos:line="69" pos:column="24"/></name><argument_list pos:line="69" pos:column="24">()<pos:position pos:line="69" pos:column="26"/></argument_list></macro>
	}<pos:position pos:line="70" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="70" pos:column="11"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="72" pos:column="9">git_config<pos:position pos:line="72" pos:column="19"/></name><argument_list pos:line="72" pos:column="19">(<argument><expr><name pos:line="72" pos:column="20">repack_config<pos:position pos:line="72" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="35">NULL<pos:position pos:line="72" pos:column="39"/></name></expr></argument>)<pos:position pos:line="72" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="41"/></expr_stmt>

	<expr_stmt><expr><name pos:line="74" pos:column="9">argc<pos:position pos:line="74" pos:column="13"/></name> <operator pos:line="74" pos:column="14">=<pos:position pos:line="74" pos:column="15"/></operator> <call><name pos:line="74" pos:column="16">parse_options<pos:position pos:line="74" pos:column="29"/></name><argument_list pos:line="74" pos:column="29">(<argument><expr><name pos:line="74" pos:column="30">argc<pos:position pos:line="74" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="36">argv<pos:position pos:line="74" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="42">prefix<pos:position pos:line="74" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="50">builtin_repack_options<pos:position pos:line="74" pos:column="72"/></name></expr></argument>,
				<argument><expr><name pos:line="75" pos:column="33">git_repack_usage<pos:position pos:line="75" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="75" pos:column="51">0<pos:position pos:line="75" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="54"/></expr_stmt>

	<if pos:line="77" pos:column="9">if <condition pos:line="77" pos:column="12">(<expr><name pos:line="77" pos:column="13">delete_redundant<pos:position pos:line="77" pos:column="29"/></name> <operator pos:line="77" pos:column="30">&amp;&amp;<pos:position pos:line="77" pos:column="40"/></operator> <name pos:line="77" pos:column="33">repository_format_precious_objects<pos:position pos:line="77" pos:column="67"/></name></expr>)<pos:position pos:line="77" pos:column="68"/></condition><then pos:line="77" pos:column="68">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="78" pos:column="17">die<pos:position pos:line="78" pos:column="20"/></name><argument_list pos:line="78" pos:column="20">(<argument><expr><call><name pos:line="78" pos:column="21">_<pos:position pos:line="78" pos:column="22"/></name><argument_list pos:line="78" pos:column="22">(<argument><expr><literal type="string" pos:line="78" pos:column="23">"cannot delete packs in a precious-objects repo"<pos:position pos:line="78" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="78" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="74"/></expr_stmt></block></then></if>

	<if pos:line="80" pos:column="9">if <condition pos:line="80" pos:column="12">(<expr><name pos:line="80" pos:column="13">keep_unreachable<pos:position pos:line="80" pos:column="29"/></name> <operator pos:line="80" pos:column="30">&amp;&amp;<pos:position pos:line="80" pos:column="40"/></operator>
	    <operator pos:line="81" pos:column="13">(<pos:position pos:line="81" pos:column="14"/></operator><name pos:line="81" pos:column="14">unpack_unreachable<pos:position pos:line="81" pos:column="32"/></name> <operator pos:line="81" pos:column="33">||<pos:position pos:line="81" pos:column="35"/></operator> <operator pos:line="81" pos:column="36">(<pos:position pos:line="81" pos:column="37"/></operator><name pos:line="81" pos:column="37">pack_everything<pos:position pos:line="81" pos:column="52"/></name> <operator pos:line="81" pos:column="53">&amp;<pos:position pos:line="81" pos:column="58"/></operator> <name pos:line="81" pos:column="55">LOOSEN_UNREACHABLE<pos:position pos:line="81" pos:column="73"/></name><operator pos:line="81" pos:column="73">)<pos:position pos:line="81" pos:column="74"/></operator><operator pos:line="81" pos:column="74">)<pos:position pos:line="81" pos:column="75"/></operator></expr>)<pos:position pos:line="81" pos:column="76"/></condition><then pos:line="81" pos:column="76">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="82" pos:column="17">die<pos:position pos:line="82" pos:column="20"/></name><argument_list pos:line="82" pos:column="20">(<argument><expr><call><name pos:line="82" pos:column="21">_<pos:position pos:line="82" pos:column="22"/></name><argument_list pos:line="82" pos:column="22">(<argument><expr><literal type="string" pos:line="82" pos:column="23">"--keep-unreachable and -A are incompatible"<pos:position pos:line="82" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="82" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="70"/></expr_stmt></block></then></if>

	<if pos:line="84" pos:column="9">if <condition pos:line="84" pos:column="12">(<expr><name pos:line="84" pos:column="13">pack_kept_objects<pos:position pos:line="84" pos:column="30"/></name> <operator pos:line="84" pos:column="31">&lt;<pos:position pos:line="84" pos:column="35"/></operator> <literal type="number" pos:line="84" pos:column="33">0<pos:position pos:line="84" pos:column="34"/></literal></expr>)<pos:position pos:line="84" pos:column="35"/></condition><then pos:line="84" pos:column="35">
		<block type="pseudo"><expr_stmt><expr><name pos:line="85" pos:column="17">pack_kept_objects<pos:position pos:line="85" pos:column="34"/></name> <operator pos:line="85" pos:column="35">=<pos:position pos:line="85" pos:column="36"/></operator> <name pos:line="85" pos:column="37">write_bitmaps<pos:position pos:line="85" pos:column="50"/></name></expr>;<pos:position pos:line="85" pos:column="51"/></expr_stmt></block></then></if>

	<if pos:line="87" pos:column="9">if <condition pos:line="87" pos:column="12">(<expr><name pos:line="87" pos:column="13">write_bitmaps<pos:position pos:line="87" pos:column="26"/></name> <operator pos:line="87" pos:column="27">&amp;&amp;<pos:position pos:line="87" pos:column="37"/></operator> <operator pos:line="87" pos:column="30">!<pos:position pos:line="87" pos:column="31"/></operator><operator pos:line="87" pos:column="31">(<pos:position pos:line="87" pos:column="32"/></operator><name pos:line="87" pos:column="32">pack_everything<pos:position pos:line="87" pos:column="47"/></name> <operator pos:line="87" pos:column="48">&amp;<pos:position pos:line="87" pos:column="53"/></operator> <name pos:line="87" pos:column="50">ALL_INTO_ONE<pos:position pos:line="87" pos:column="62"/></name><operator pos:line="87" pos:column="62">)<pos:position pos:line="87" pos:column="63"/></operator></expr>)<pos:position pos:line="87" pos:column="64"/></condition><then pos:line="87" pos:column="64">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="88" pos:column="17">die<pos:position pos:line="88" pos:column="20"/></name><argument_list pos:line="88" pos:column="20">(<argument><expr><call><name pos:line="88" pos:column="21">_<pos:position pos:line="88" pos:column="22"/></name><argument_list pos:line="88" pos:column="22">(<argument><expr><name pos:line="88" pos:column="23">incremental_bitmap_conflict_error<pos:position pos:line="88" pos:column="56"/></name></expr></argument>)<pos:position pos:line="88" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="88" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="59"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="90" pos:column="9">packdir<pos:position pos:line="90" pos:column="16"/></name> <operator pos:line="90" pos:column="17">=<pos:position pos:line="90" pos:column="18"/></operator> <call><name pos:line="90" pos:column="19">mkpathdup<pos:position pos:line="90" pos:column="28"/></name><argument_list pos:line="90" pos:column="28">(<argument><expr><literal type="string" pos:line="90" pos:column="29">"%s/pack"<pos:position pos:line="90" pos:column="38"/></literal></expr></argument>, <argument><expr><call><name pos:line="90" pos:column="40">get_object_directory<pos:position pos:line="90" pos:column="60"/></name><argument_list pos:line="90" pos:column="60">()<pos:position pos:line="90" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="90" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="64"/></expr_stmt>
	<expr_stmt><expr><name pos:line="91" pos:column="9">packtmp<pos:position pos:line="91" pos:column="16"/></name> <operator pos:line="91" pos:column="17">=<pos:position pos:line="91" pos:column="18"/></operator> <call><name pos:line="91" pos:column="19">mkpathdup<pos:position pos:line="91" pos:column="28"/></name><argument_list pos:line="91" pos:column="28">(<argument><expr><literal type="string" pos:line="91" pos:column="29">"%s/.tmp-%d-pack"<pos:position pos:line="91" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="91" pos:column="48">packdir<pos:position pos:line="91" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="91" pos:column="57">(<pos:position pos:line="91" pos:column="58"/></operator><name pos:line="91" pos:column="58">int<pos:position pos:line="91" pos:column="61"/></name><operator pos:line="91" pos:column="61">)<pos:position pos:line="91" pos:column="62"/></operator><call><name pos:line="91" pos:column="62">getpid<pos:position pos:line="91" pos:column="68"/></name><argument_list pos:line="91" pos:column="68">()<pos:position pos:line="91" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="91" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="72"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="93" pos:column="9">sigchain_push_common<pos:position pos:line="93" pos:column="29"/></name><argument_list pos:line="93" pos:column="29">(<argument><expr><name pos:line="93" pos:column="30">remove_pack_on_signal<pos:position pos:line="93" pos:column="51"/></name></expr></argument>)<pos:position pos:line="93" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="53"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="95" pos:column="9">argv_array_push<pos:position pos:line="95" pos:column="24"/></name><argument_list pos:line="95" pos:column="24">(<argument><expr><operator pos:line="95" pos:column="25">&amp;<pos:position pos:line="95" pos:column="30"/></operator><name><name pos:line="95" pos:column="26">cmd<pos:position pos:line="95" pos:column="29"/></name><operator pos:line="95" pos:column="29">.<pos:position pos:line="95" pos:column="30"/></operator><name pos:line="95" pos:column="30">args<pos:position pos:line="95" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="95" pos:column="36">"pack-objects"<pos:position pos:line="95" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="52"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="96" pos:column="9">argv_array_push<pos:position pos:line="96" pos:column="24"/></name><argument_list pos:line="96" pos:column="24">(<argument><expr><operator pos:line="96" pos:column="25">&amp;<pos:position pos:line="96" pos:column="30"/></operator><name><name pos:line="96" pos:column="26">cmd<pos:position pos:line="96" pos:column="29"/></name><operator pos:line="96" pos:column="29">.<pos:position pos:line="96" pos:column="30"/></operator><name pos:line="96" pos:column="30">args<pos:position pos:line="96" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="96" pos:column="36">"--keep-true-parents"<pos:position pos:line="96" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="96" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="59"/></expr_stmt>
	<if pos:line="97" pos:column="9">if <condition pos:line="97" pos:column="12">(<expr><operator pos:line="97" pos:column="13">!<pos:position pos:line="97" pos:column="14"/></operator><name pos:line="97" pos:column="14">pack_kept_objects<pos:position pos:line="97" pos:column="31"/></name></expr>)<pos:position pos:line="97" pos:column="32"/></condition><then pos:line="97" pos:column="32">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="98" pos:column="17">argv_array_push<pos:position pos:line="98" pos:column="32"/></name><argument_list pos:line="98" pos:column="32">(<argument><expr><operator pos:line="98" pos:column="33">&amp;<pos:position pos:line="98" pos:column="38"/></operator><name><name pos:line="98" pos:column="34">cmd<pos:position pos:line="98" pos:column="37"/></name><operator pos:line="98" pos:column="37">.<pos:position pos:line="98" pos:column="38"/></operator><name pos:line="98" pos:column="38">args<pos:position pos:line="98" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="98" pos:column="44">"--honor-pack-keep"<pos:position pos:line="98" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="98" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="65"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="99" pos:column="9">argv_array_push<pos:position pos:line="99" pos:column="24"/></name><argument_list pos:line="99" pos:column="24">(<argument><expr><operator pos:line="99" pos:column="25">&amp;<pos:position pos:line="99" pos:column="30"/></operator><name><name pos:line="99" pos:column="26">cmd<pos:position pos:line="99" pos:column="29"/></name><operator pos:line="99" pos:column="29">.<pos:position pos:line="99" pos:column="30"/></operator><name pos:line="99" pos:column="30">args<pos:position pos:line="99" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="99" pos:column="36">"--non-empty"<pos:position pos:line="99" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="99" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="51"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="100" pos:column="9">argv_array_push<pos:position pos:line="100" pos:column="24"/></name><argument_list pos:line="100" pos:column="24">(<argument><expr><operator pos:line="100" pos:column="25">&amp;<pos:position pos:line="100" pos:column="30"/></operator><name><name pos:line="100" pos:column="26">cmd<pos:position pos:line="100" pos:column="29"/></name><operator pos:line="100" pos:column="29">.<pos:position pos:line="100" pos:column="30"/></operator><name pos:line="100" pos:column="30">args<pos:position pos:line="100" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="100" pos:column="36">"--all"<pos:position pos:line="100" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="100" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="101" pos:column="9">argv_array_push<pos:position pos:line="101" pos:column="24"/></name><argument_list pos:line="101" pos:column="24">(<argument><expr><operator pos:line="101" pos:column="25">&amp;<pos:position pos:line="101" pos:column="30"/></operator><name><name pos:line="101" pos:column="26">cmd<pos:position pos:line="101" pos:column="29"/></name><operator pos:line="101" pos:column="29">.<pos:position pos:line="101" pos:column="30"/></operator><name pos:line="101" pos:column="30">args<pos:position pos:line="101" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="101" pos:column="36">"--reflog"<pos:position pos:line="101" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="101" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="48"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="102" pos:column="9">argv_array_push<pos:position pos:line="102" pos:column="24"/></name><argument_list pos:line="102" pos:column="24">(<argument><expr><operator pos:line="102" pos:column="25">&amp;<pos:position pos:line="102" pos:column="30"/></operator><name><name pos:line="102" pos:column="26">cmd<pos:position pos:line="102" pos:column="29"/></name><operator pos:line="102" pos:column="29">.<pos:position pos:line="102" pos:column="30"/></operator><name pos:line="102" pos:column="30">args<pos:position pos:line="102" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="102" pos:column="36">"--indexed-objects"<pos:position pos:line="102" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="102" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="57"/></expr_stmt>
	<if pos:line="103" pos:column="9">if <condition pos:line="103" pos:column="12">(<expr><name pos:line="103" pos:column="13">window<pos:position pos:line="103" pos:column="19"/></name></expr>)<pos:position pos:line="103" pos:column="20"/></condition><then pos:line="103" pos:column="20">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="104" pos:column="17">argv_array_pushf<pos:position pos:line="104" pos:column="33"/></name><argument_list pos:line="104" pos:column="33">(<argument><expr><operator pos:line="104" pos:column="34">&amp;<pos:position pos:line="104" pos:column="39"/></operator><name><name pos:line="104" pos:column="35">cmd<pos:position pos:line="104" pos:column="38"/></name><operator pos:line="104" pos:column="38">.<pos:position pos:line="104" pos:column="39"/></operator><name pos:line="104" pos:column="39">args<pos:position pos:line="104" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="104" pos:column="45">"--window=%s"<pos:position pos:line="104" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="104" pos:column="60">window<pos:position pos:line="104" pos:column="66"/></name></expr></argument>)<pos:position pos:line="104" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="68"/></expr_stmt></block></then></if>
	<if pos:line="105" pos:column="9">if <condition pos:line="105" pos:column="12">(<expr><name pos:line="105" pos:column="13">window_memory<pos:position pos:line="105" pos:column="26"/></name></expr>)<pos:position pos:line="105" pos:column="27"/></condition><then pos:line="105" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="106" pos:column="17">argv_array_pushf<pos:position pos:line="106" pos:column="33"/></name><argument_list pos:line="106" pos:column="33">(<argument><expr><operator pos:line="106" pos:column="34">&amp;<pos:position pos:line="106" pos:column="39"/></operator><name><name pos:line="106" pos:column="35">cmd<pos:position pos:line="106" pos:column="38"/></name><operator pos:line="106" pos:column="38">.<pos:position pos:line="106" pos:column="39"/></operator><name pos:line="106" pos:column="39">args<pos:position pos:line="106" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="106" pos:column="45">"--window-memory=%s"<pos:position pos:line="106" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="106" pos:column="67">window_memory<pos:position pos:line="106" pos:column="80"/></name></expr></argument>)<pos:position pos:line="106" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="82"/></expr_stmt></block></then></if>
	<if pos:line="107" pos:column="9">if <condition pos:line="107" pos:column="12">(<expr><name pos:line="107" pos:column="13">depth<pos:position pos:line="107" pos:column="18"/></name></expr>)<pos:position pos:line="107" pos:column="19"/></condition><then pos:line="107" pos:column="19">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="108" pos:column="17">argv_array_pushf<pos:position pos:line="108" pos:column="33"/></name><argument_list pos:line="108" pos:column="33">(<argument><expr><operator pos:line="108" pos:column="34">&amp;<pos:position pos:line="108" pos:column="39"/></operator><name><name pos:line="108" pos:column="35">cmd<pos:position pos:line="108" pos:column="38"/></name><operator pos:line="108" pos:column="38">.<pos:position pos:line="108" pos:column="39"/></operator><name pos:line="108" pos:column="39">args<pos:position pos:line="108" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="108" pos:column="45">"--depth=%s"<pos:position pos:line="108" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="108" pos:column="59">depth<pos:position pos:line="108" pos:column="64"/></name></expr></argument>)<pos:position pos:line="108" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="66"/></expr_stmt></block></then></if>
	<if pos:line="109" pos:column="9">if <condition pos:line="109" pos:column="12">(<expr><name pos:line="109" pos:column="13">threads<pos:position pos:line="109" pos:column="20"/></name></expr>)<pos:position pos:line="109" pos:column="21"/></condition><then pos:line="109" pos:column="21">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="110" pos:column="17">argv_array_pushf<pos:position pos:line="110" pos:column="33"/></name><argument_list pos:line="110" pos:column="33">(<argument><expr><operator pos:line="110" pos:column="34">&amp;<pos:position pos:line="110" pos:column="39"/></operator><name><name pos:line="110" pos:column="35">cmd<pos:position pos:line="110" pos:column="38"/></name><operator pos:line="110" pos:column="38">.<pos:position pos:line="110" pos:column="39"/></operator><name pos:line="110" pos:column="39">args<pos:position pos:line="110" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="110" pos:column="45">"--threads=%s"<pos:position pos:line="110" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="110" pos:column="61">threads<pos:position pos:line="110" pos:column="68"/></name></expr></argument>)<pos:position pos:line="110" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="70"/></expr_stmt></block></then></if>
	<if pos:line="111" pos:column="9">if <condition pos:line="111" pos:column="12">(<expr><name pos:line="111" pos:column="13">max_pack_size<pos:position pos:line="111" pos:column="26"/></name></expr>)<pos:position pos:line="111" pos:column="27"/></condition><then pos:line="111" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="112" pos:column="17">argv_array_pushf<pos:position pos:line="112" pos:column="33"/></name><argument_list pos:line="112" pos:column="33">(<argument><expr><operator pos:line="112" pos:column="34">&amp;<pos:position pos:line="112" pos:column="39"/></operator><name><name pos:line="112" pos:column="35">cmd<pos:position pos:line="112" pos:column="38"/></name><operator pos:line="112" pos:column="38">.<pos:position pos:line="112" pos:column="39"/></operator><name pos:line="112" pos:column="39">args<pos:position pos:line="112" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="112" pos:column="45">"--max-pack-size=%s"<pos:position pos:line="112" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="112" pos:column="67">max_pack_size<pos:position pos:line="112" pos:column="80"/></name></expr></argument>)<pos:position pos:line="112" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="82"/></expr_stmt></block></then></if>
	<if pos:line="113" pos:column="9">if <condition pos:line="113" pos:column="12">(<expr><name pos:line="113" pos:column="13">no_reuse_delta<pos:position pos:line="113" pos:column="27"/></name></expr>)<pos:position pos:line="113" pos:column="28"/></condition><then pos:line="113" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="114" pos:column="17">argv_array_pushf<pos:position pos:line="114" pos:column="33"/></name><argument_list pos:line="114" pos:column="33">(<argument><expr><operator pos:line="114" pos:column="34">&amp;<pos:position pos:line="114" pos:column="39"/></operator><name><name pos:line="114" pos:column="35">cmd<pos:position pos:line="114" pos:column="38"/></name><operator pos:line="114" pos:column="38">.<pos:position pos:line="114" pos:column="39"/></operator><name pos:line="114" pos:column="39">args<pos:position pos:line="114" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="114" pos:column="45">"--no-reuse-delta"<pos:position pos:line="114" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="114" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="65"/></expr_stmt></block></then></if>
	<if pos:line="115" pos:column="9">if <condition pos:line="115" pos:column="12">(<expr><name pos:line="115" pos:column="13">no_reuse_object<pos:position pos:line="115" pos:column="28"/></name></expr>)<pos:position pos:line="115" pos:column="29"/></condition><then pos:line="115" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="116" pos:column="17">argv_array_pushf<pos:position pos:line="116" pos:column="33"/></name><argument_list pos:line="116" pos:column="33">(<argument><expr><operator pos:line="116" pos:column="34">&amp;<pos:position pos:line="116" pos:column="39"/></operator><name><name pos:line="116" pos:column="35">cmd<pos:position pos:line="116" pos:column="38"/></name><operator pos:line="116" pos:column="38">.<pos:position pos:line="116" pos:column="39"/></operator><name pos:line="116" pos:column="39">args<pos:position pos:line="116" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="116" pos:column="45">"--no-reuse-object"<pos:position pos:line="116" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="116" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="66"/></expr_stmt></block></then></if>
	<if pos:line="117" pos:column="9">if <condition pos:line="117" pos:column="12">(<expr><name pos:line="117" pos:column="13">write_bitmaps<pos:position pos:line="117" pos:column="26"/></name></expr>)<pos:position pos:line="117" pos:column="27"/></condition><then pos:line="117" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="118" pos:column="17">argv_array_push<pos:position pos:line="118" pos:column="32"/></name><argument_list pos:line="118" pos:column="32">(<argument><expr><operator pos:line="118" pos:column="33">&amp;<pos:position pos:line="118" pos:column="38"/></operator><name><name pos:line="118" pos:column="34">cmd<pos:position pos:line="118" pos:column="37"/></name><operator pos:line="118" pos:column="37">.<pos:position pos:line="118" pos:column="38"/></operator><name pos:line="118" pos:column="38">args<pos:position pos:line="118" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="118" pos:column="44">"--write-bitmap-index"<pos:position pos:line="118" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="118" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="68"/></expr_stmt></block></then></if>

	<if pos:line="120" pos:column="9">if <condition pos:line="120" pos:column="12">(<expr><name pos:line="120" pos:column="13">pack_everything<pos:position pos:line="120" pos:column="28"/></name> <operator pos:line="120" pos:column="29">&amp;<pos:position pos:line="120" pos:column="34"/></operator> <name pos:line="120" pos:column="31">ALL_INTO_ONE<pos:position pos:line="120" pos:column="43"/></name></expr>)<pos:position pos:line="120" pos:column="44"/></condition><then pos:line="120" pos:column="44"> <block pos:line="120" pos:column="45">{
		<expr_stmt><expr><call><name pos:line="121" pos:column="17">get_non_kept_pack_filenames<pos:position pos:line="121" pos:column="44"/></name><argument_list pos:line="121" pos:column="44">(<argument><expr><operator pos:line="121" pos:column="45">&amp;<pos:position pos:line="121" pos:column="50"/></operator><name pos:line="121" pos:column="46">existing_packs<pos:position pos:line="121" pos:column="60"/></name></expr></argument>)<pos:position pos:line="121" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="62"/></expr_stmt>

		<if pos:line="123" pos:column="17">if <condition pos:line="123" pos:column="20">(<expr><name><name pos:line="123" pos:column="21">existing_packs<pos:position pos:line="123" pos:column="35"/></name><operator pos:line="123" pos:column="35">.<pos:position pos:line="123" pos:column="36"/></operator><name pos:line="123" pos:column="36">nr<pos:position pos:line="123" pos:column="38"/></name></name> <operator pos:line="123" pos:column="39">&amp;&amp;<pos:position pos:line="123" pos:column="49"/></operator> <name pos:line="123" pos:column="42">delete_redundant<pos:position pos:line="123" pos:column="58"/></name></expr>)<pos:position pos:line="123" pos:column="59"/></condition><then pos:line="123" pos:column="59"> <block pos:line="123" pos:column="60">{
			<if pos:line="124" pos:column="25">if <condition pos:line="124" pos:column="28">(<expr><name pos:line="124" pos:column="29">unpack_unreachable<pos:position pos:line="124" pos:column="47"/></name></expr>)<pos:position pos:line="124" pos:column="48"/></condition><then pos:line="124" pos:column="48"> <block pos:line="124" pos:column="49">{
				<expr_stmt><expr><call><name pos:line="125" pos:column="33">argv_array_pushf<pos:position pos:line="125" pos:column="49"/></name><argument_list pos:line="125" pos:column="49">(<argument><expr><operator pos:line="125" pos:column="50">&amp;<pos:position pos:line="125" pos:column="55"/></operator><name><name pos:line="125" pos:column="51">cmd<pos:position pos:line="125" pos:column="54"/></name><operator pos:line="125" pos:column="54">.<pos:position pos:line="125" pos:column="55"/></operator><name pos:line="125" pos:column="55">args<pos:position pos:line="125" pos:column="59"/></name></name></expr></argument>,
						<argument><expr><literal type="string" pos:line="126" pos:column="49">"--unpack-unreachable=%s"<pos:position pos:line="126" pos:column="74"/></literal></expr></argument>,
						<argument><expr><name pos:line="127" pos:column="49">unpack_unreachable<pos:position pos:line="127" pos:column="67"/></name></expr></argument>)<pos:position pos:line="127" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="69"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="128" pos:column="33">argv_array_push<pos:position pos:line="128" pos:column="48"/></name><argument_list pos:line="128" pos:column="48">(<argument><expr><operator pos:line="128" pos:column="49">&amp;<pos:position pos:line="128" pos:column="54"/></operator><name><name pos:line="128" pos:column="50">cmd<pos:position pos:line="128" pos:column="53"/></name><operator pos:line="128" pos:column="53">.<pos:position pos:line="128" pos:column="54"/></operator><name pos:line="128" pos:column="54">env_array<pos:position pos:line="128" pos:column="63"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="128" pos:column="65">"GIT_REF_PARANOIA=1"<pos:position pos:line="128" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="128" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="87"/></expr_stmt>
			}<pos:position pos:line="129" pos:column="26"/></block></then> <elseif pos:line="129" pos:column="27">else <if pos:line="129" pos:column="32">if <condition pos:line="129" pos:column="35">(<expr><name pos:line="129" pos:column="36">pack_everything<pos:position pos:line="129" pos:column="51"/></name> <operator pos:line="129" pos:column="52">&amp;<pos:position pos:line="129" pos:column="57"/></operator> <name pos:line="129" pos:column="54">LOOSEN_UNREACHABLE<pos:position pos:line="129" pos:column="72"/></name></expr>)<pos:position pos:line="129" pos:column="73"/></condition><then pos:line="129" pos:column="73"> <block pos:line="129" pos:column="74">{
				<expr_stmt><expr><call><name pos:line="130" pos:column="33">argv_array_push<pos:position pos:line="130" pos:column="48"/></name><argument_list pos:line="130" pos:column="48">(<argument><expr><operator pos:line="130" pos:column="49">&amp;<pos:position pos:line="130" pos:column="54"/></operator><name><name pos:line="130" pos:column="50">cmd<pos:position pos:line="130" pos:column="53"/></name><operator pos:line="130" pos:column="53">.<pos:position pos:line="130" pos:column="54"/></operator><name pos:line="130" pos:column="54">args<pos:position pos:line="130" pos:column="58"/></name></name></expr></argument>,
						<argument><expr><literal type="string" pos:line="131" pos:column="49">"--unpack-unreachable"<pos:position pos:line="131" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="131" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="73"/></expr_stmt>
			}<pos:position pos:line="132" pos:column="26"/></block></then></if></elseif> <elseif pos:line="132" pos:column="27">else <if pos:line="132" pos:column="32">if <condition pos:line="132" pos:column="35">(<expr><name pos:line="132" pos:column="36">keep_unreachable<pos:position pos:line="132" pos:column="52"/></name></expr>)<pos:position pos:line="132" pos:column="53"/></condition><then pos:line="132" pos:column="53"> <block pos:line="132" pos:column="54">{
				<expr_stmt><expr><call><name pos:line="133" pos:column="33">argv_array_push<pos:position pos:line="133" pos:column="48"/></name><argument_list pos:line="133" pos:column="48">(<argument><expr><operator pos:line="133" pos:column="49">&amp;<pos:position pos:line="133" pos:column="54"/></operator><name><name pos:line="133" pos:column="50">cmd<pos:position pos:line="133" pos:column="53"/></name><operator pos:line="133" pos:column="53">.<pos:position pos:line="133" pos:column="54"/></operator><name pos:line="133" pos:column="54">args<pos:position pos:line="133" pos:column="58"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="133" pos:column="60">"--keep-unreachable"<pos:position pos:line="133" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="133" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="82"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="134" pos:column="33">argv_array_push<pos:position pos:line="134" pos:column="48"/></name><argument_list pos:line="134" pos:column="48">(<argument><expr><operator pos:line="134" pos:column="49">&amp;<pos:position pos:line="134" pos:column="54"/></operator><name><name pos:line="134" pos:column="50">cmd<pos:position pos:line="134" pos:column="53"/></name><operator pos:line="134" pos:column="53">.<pos:position pos:line="134" pos:column="54"/></operator><name pos:line="134" pos:column="54">args<pos:position pos:line="134" pos:column="58"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="134" pos:column="60">"--pack-loose-unreachable"<pos:position pos:line="134" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="134" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="88"/></expr_stmt>
			}<pos:position pos:line="135" pos:column="26"/></block></then></if></elseif> <else pos:line="135" pos:column="27">else <block pos:line="135" pos:column="32">{
				<expr_stmt><expr><call><name pos:line="136" pos:column="33">argv_array_push<pos:position pos:line="136" pos:column="48"/></name><argument_list pos:line="136" pos:column="48">(<argument><expr><operator pos:line="136" pos:column="49">&amp;<pos:position pos:line="136" pos:column="54"/></operator><name><name pos:line="136" pos:column="50">cmd<pos:position pos:line="136" pos:column="53"/></name><operator pos:line="136" pos:column="53">.<pos:position pos:line="136" pos:column="54"/></operator><name pos:line="136" pos:column="54">env_array<pos:position pos:line="136" pos:column="63"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="136" pos:column="65">"GIT_REF_PARANOIA=1"<pos:position pos:line="136" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="136" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="87"/></expr_stmt>
			}<pos:position pos:line="137" pos:column="26"/></block></else></if>
		}<pos:position pos:line="138" pos:column="18"/></block></then></if>
	}<pos:position pos:line="139" pos:column="10"/></block></then> <else pos:line="139" pos:column="11">else <block pos:line="139" pos:column="16">{
		<expr_stmt><expr><call><name pos:line="140" pos:column="17">argv_array_push<pos:position pos:line="140" pos:column="32"/></name><argument_list pos:line="140" pos:column="32">(<argument><expr><operator pos:line="140" pos:column="33">&amp;<pos:position pos:line="140" pos:column="38"/></operator><name><name pos:line="140" pos:column="34">cmd<pos:position pos:line="140" pos:column="37"/></name><operator pos:line="140" pos:column="37">.<pos:position pos:line="140" pos:column="38"/></operator><name pos:line="140" pos:column="38">args<pos:position pos:line="140" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="140" pos:column="44">"--unpacked"<pos:position pos:line="140" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="140" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="58"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="141" pos:column="17">argv_array_push<pos:position pos:line="141" pos:column="32"/></name><argument_list pos:line="141" pos:column="32">(<argument><expr><operator pos:line="141" pos:column="33">&amp;<pos:position pos:line="141" pos:column="38"/></operator><name><name pos:line="141" pos:column="34">cmd<pos:position pos:line="141" pos:column="37"/></name><operator pos:line="141" pos:column="37">.<pos:position pos:line="141" pos:column="38"/></operator><name pos:line="141" pos:column="38">args<pos:position pos:line="141" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="141" pos:column="44">"--incremental"<pos:position pos:line="141" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="141" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="61"/></expr_stmt>
	}<pos:position pos:line="142" pos:column="10"/></block></else></if>

	<if pos:line="144" pos:column="9">if <condition pos:line="144" pos:column="12">(<expr><name pos:line="144" pos:column="13">local<pos:position pos:line="144" pos:column="18"/></name></expr>)<pos:position pos:line="144" pos:column="19"/></condition><then pos:line="144" pos:column="19">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="145" pos:column="17">argv_array_push<pos:position pos:line="145" pos:column="32"/></name><argument_list pos:line="145" pos:column="32">(<argument><expr><operator pos:line="145" pos:column="33">&amp;<pos:position pos:line="145" pos:column="38"/></operator><name><name pos:line="145" pos:column="34">cmd<pos:position pos:line="145" pos:column="37"/></name><operator pos:line="145" pos:column="37">.<pos:position pos:line="145" pos:column="38"/></operator><name pos:line="145" pos:column="38">args<pos:position pos:line="145" pos:column="42"/></name></name></expr></argument>,  <argument><expr><literal type="string" pos:line="145" pos:column="45">"--local"<pos:position pos:line="145" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="145" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="56"/></expr_stmt></block></then></if>
	<if pos:line="146" pos:column="9">if <condition pos:line="146" pos:column="12">(<expr><name pos:line="146" pos:column="13">quiet<pos:position pos:line="146" pos:column="18"/></name></expr>)<pos:position pos:line="146" pos:column="19"/></condition><then pos:line="146" pos:column="19">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="147" pos:column="17">argv_array_push<pos:position pos:line="147" pos:column="32"/></name><argument_list pos:line="147" pos:column="32">(<argument><expr><operator pos:line="147" pos:column="33">&amp;<pos:position pos:line="147" pos:column="38"/></operator><name><name pos:line="147" pos:column="34">cmd<pos:position pos:line="147" pos:column="37"/></name><operator pos:line="147" pos:column="37">.<pos:position pos:line="147" pos:column="38"/></operator><name pos:line="147" pos:column="38">args<pos:position pos:line="147" pos:column="42"/></name></name></expr></argument>,  <argument><expr><literal type="string" pos:line="147" pos:column="45">"--quiet"<pos:position pos:line="147" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="147" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="56"/></expr_stmt></block></then></if>
	<if pos:line="148" pos:column="9">if <condition pos:line="148" pos:column="12">(<expr><name pos:line="148" pos:column="13">delta_base_offset<pos:position pos:line="148" pos:column="30"/></name></expr>)<pos:position pos:line="148" pos:column="31"/></condition><then pos:line="148" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="149" pos:column="17">argv_array_push<pos:position pos:line="149" pos:column="32"/></name><argument_list pos:line="149" pos:column="32">(<argument><expr><operator pos:line="149" pos:column="33">&amp;<pos:position pos:line="149" pos:column="38"/></operator><name><name pos:line="149" pos:column="34">cmd<pos:position pos:line="149" pos:column="37"/></name><operator pos:line="149" pos:column="37">.<pos:position pos:line="149" pos:column="38"/></operator><name pos:line="149" pos:column="38">args<pos:position pos:line="149" pos:column="42"/></name></name></expr></argument>,  <argument><expr><literal type="string" pos:line="149" pos:column="45">"--delta-base-offset"<pos:position pos:line="149" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="149" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="68"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="151" pos:column="9">argv_array_push<pos:position pos:line="151" pos:column="24"/></name><argument_list pos:line="151" pos:column="24">(<argument><expr><operator pos:line="151" pos:column="25">&amp;<pos:position pos:line="151" pos:column="30"/></operator><name><name pos:line="151" pos:column="26">cmd<pos:position pos:line="151" pos:column="29"/></name><operator pos:line="151" pos:column="29">.<pos:position pos:line="151" pos:column="30"/></operator><name pos:line="151" pos:column="30">args<pos:position pos:line="151" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="151" pos:column="36">packtmp<pos:position pos:line="151" pos:column="43"/></name></expr></argument>)<pos:position pos:line="151" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="45"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="153" pos:column="9">cmd<pos:position pos:line="153" pos:column="12"/></name><operator pos:line="153" pos:column="12">.<pos:position pos:line="153" pos:column="13"/></operator><name pos:line="153" pos:column="13">git_cmd<pos:position pos:line="153" pos:column="20"/></name></name> <operator pos:line="153" pos:column="21">=<pos:position pos:line="153" pos:column="22"/></operator> <literal type="number" pos:line="153" pos:column="23">1<pos:position pos:line="153" pos:column="24"/></literal></expr>;<pos:position pos:line="153" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="154" pos:column="9">cmd<pos:position pos:line="154" pos:column="12"/></name><operator pos:line="154" pos:column="12">.<pos:position pos:line="154" pos:column="13"/></operator><name pos:line="154" pos:column="13">out<pos:position pos:line="154" pos:column="16"/></name></name> <operator pos:line="154" pos:column="17">=<pos:position pos:line="154" pos:column="18"/></operator> <operator pos:line="154" pos:column="19">-<pos:position pos:line="154" pos:column="20"/></operator><literal type="number" pos:line="154" pos:column="20">1<pos:position pos:line="154" pos:column="21"/></literal></expr>;<pos:position pos:line="154" pos:column="22"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="155" pos:column="9">cmd<pos:position pos:line="155" pos:column="12"/></name><operator pos:line="155" pos:column="12">.<pos:position pos:line="155" pos:column="13"/></operator><name pos:line="155" pos:column="13">no_stdin<pos:position pos:line="155" pos:column="21"/></name></name> <operator pos:line="155" pos:column="22">=<pos:position pos:line="155" pos:column="23"/></operator> <literal type="number" pos:line="155" pos:column="24">1<pos:position pos:line="155" pos:column="25"/></literal></expr>;<pos:position pos:line="155" pos:column="26"/></expr_stmt>

	<expr_stmt><expr><name pos:line="157" pos:column="9">ret<pos:position pos:line="157" pos:column="12"/></name> <operator pos:line="157" pos:column="13">=<pos:position pos:line="157" pos:column="14"/></operator> <call><name pos:line="157" pos:column="15">start_command<pos:position pos:line="157" pos:column="28"/></name><argument_list pos:line="157" pos:column="28">(<argument><expr><operator pos:line="157" pos:column="29">&amp;<pos:position pos:line="157" pos:column="34"/></operator><name pos:line="157" pos:column="30">cmd<pos:position pos:line="157" pos:column="33"/></name></expr></argument>)<pos:position pos:line="157" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="35"/></expr_stmt>
	<if pos:line="158" pos:column="9">if <condition pos:line="158" pos:column="12">(<expr><name pos:line="158" pos:column="13">ret<pos:position pos:line="158" pos:column="16"/></name></expr>)<pos:position pos:line="158" pos:column="17"/></condition><then pos:line="158" pos:column="17">
		<block type="pseudo"><return pos:line="159" pos:column="17">return <expr><name pos:line="159" pos:column="24">ret<pos:position pos:line="159" pos:column="27"/></name></expr>;<pos:position pos:line="159" pos:column="28"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="161" pos:column="9">out<pos:position pos:line="161" pos:column="12"/></name> <operator pos:line="161" pos:column="13">=<pos:position pos:line="161" pos:column="14"/></operator> <call><name pos:line="161" pos:column="15">xfdopen<pos:position pos:line="161" pos:column="22"/></name><argument_list pos:line="161" pos:column="22">(<argument><expr><name><name pos:line="161" pos:column="23">cmd<pos:position pos:line="161" pos:column="26"/></name><operator pos:line="161" pos:column="26">.<pos:position pos:line="161" pos:column="27"/></operator><name pos:line="161" pos:column="27">out<pos:position pos:line="161" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="161" pos:column="32">"r"<pos:position pos:line="161" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="161" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="37"/></expr_stmt>
	<while pos:line="162" pos:column="9">while <condition pos:line="162" pos:column="15">(<expr><call><name pos:line="162" pos:column="16">strbuf_getline_lf<pos:position pos:line="162" pos:column="33"/></name><argument_list pos:line="162" pos:column="33">(<argument><expr><operator pos:line="162" pos:column="34">&amp;<pos:position pos:line="162" pos:column="39"/></operator><name pos:line="162" pos:column="35">line<pos:position pos:line="162" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="162" pos:column="41">out<pos:position pos:line="162" pos:column="44"/></name></expr></argument>)<pos:position pos:line="162" pos:column="45"/></argument_list></call> <operator pos:line="162" pos:column="46">!=<pos:position pos:line="162" pos:column="48"/></operator> <name pos:line="162" pos:column="49">EOF<pos:position pos:line="162" pos:column="52"/></name></expr>)<pos:position pos:line="162" pos:column="53"/></condition> <block pos:line="162" pos:column="54">{
		<if pos:line="163" pos:column="17">if <condition pos:line="163" pos:column="20">(<expr><name><name pos:line="163" pos:column="21">line<pos:position pos:line="163" pos:column="25"/></name><operator pos:line="163" pos:column="25">.<pos:position pos:line="163" pos:column="26"/></operator><name pos:line="163" pos:column="26">len<pos:position pos:line="163" pos:column="29"/></name></name> <operator pos:line="163" pos:column="30">!=<pos:position pos:line="163" pos:column="32"/></operator> <literal type="number" pos:line="163" pos:column="33">40<pos:position pos:line="163" pos:column="35"/></literal></expr>)<pos:position pos:line="163" pos:column="36"/></condition><then pos:line="163" pos:column="36">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="164" pos:column="25">die<pos:position pos:line="164" pos:column="28"/></name><argument_list pos:line="164" pos:column="28">(<argument><expr><literal type="string" pos:line="164" pos:column="29">"repack: Expecting 40 character sha1 lines only from pack-objects."<pos:position pos:line="164" pos:column="96"/></literal></expr></argument>)<pos:position pos:line="164" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="98"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="165" pos:column="17">string_list_append<pos:position pos:line="165" pos:column="35"/></name><argument_list pos:line="165" pos:column="35">(<argument><expr><operator pos:line="165" pos:column="36">&amp;<pos:position pos:line="165" pos:column="41"/></operator><name pos:line="165" pos:column="37">names<pos:position pos:line="165" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="165" pos:column="44">line<pos:position pos:line="165" pos:column="48"/></name><operator pos:line="165" pos:column="48">.<pos:position pos:line="165" pos:column="49"/></operator><name pos:line="165" pos:column="49">buf<pos:position pos:line="165" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="165" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="54"/></expr_stmt>
	}<pos:position pos:line="166" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="167" pos:column="9">fclose<pos:position pos:line="167" pos:column="15"/></name><argument_list pos:line="167" pos:column="15">(<argument><expr><name pos:line="167" pos:column="16">out<pos:position pos:line="167" pos:column="19"/></name></expr></argument>)<pos:position pos:line="167" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><name pos:line="168" pos:column="9">ret<pos:position pos:line="168" pos:column="12"/></name> <operator pos:line="168" pos:column="13">=<pos:position pos:line="168" pos:column="14"/></operator> <call><name pos:line="168" pos:column="15">finish_command<pos:position pos:line="168" pos:column="29"/></name><argument_list pos:line="168" pos:column="29">(<argument><expr><operator pos:line="168" pos:column="30">&amp;<pos:position pos:line="168" pos:column="35"/></operator><name pos:line="168" pos:column="31">cmd<pos:position pos:line="168" pos:column="34"/></name></expr></argument>)<pos:position pos:line="168" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="36"/></expr_stmt>
	<if pos:line="169" pos:column="9">if <condition pos:line="169" pos:column="12">(<expr><name pos:line="169" pos:column="13">ret<pos:position pos:line="169" pos:column="16"/></name></expr>)<pos:position pos:line="169" pos:column="17"/></condition><then pos:line="169" pos:column="17">
		<block type="pseudo"><return pos:line="170" pos:column="17">return <expr><name pos:line="170" pos:column="24">ret<pos:position pos:line="170" pos:column="27"/></name></expr>;<pos:position pos:line="170" pos:column="28"/></return></block></then></if>

	<if pos:line="172" pos:column="9">if <condition pos:line="172" pos:column="12">(<expr><operator pos:line="172" pos:column="13">!<pos:position pos:line="172" pos:column="14"/></operator><name><name pos:line="172" pos:column="14">names<pos:position pos:line="172" pos:column="19"/></name><operator pos:line="172" pos:column="19">.<pos:position pos:line="172" pos:column="20"/></operator><name pos:line="172" pos:column="20">nr<pos:position pos:line="172" pos:column="22"/></name></name> <operator pos:line="172" pos:column="23">&amp;&amp;<pos:position pos:line="172" pos:column="33"/></operator> <operator pos:line="172" pos:column="26">!<pos:position pos:line="172" pos:column="27"/></operator><name pos:line="172" pos:column="27">quiet<pos:position pos:line="172" pos:column="32"/></name></expr>)<pos:position pos:line="172" pos:column="33"/></condition><then pos:line="172" pos:column="33">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="173" pos:column="17">printf<pos:position pos:line="173" pos:column="23"/></name><argument_list pos:line="173" pos:column="23">(<argument><expr><literal type="string" pos:line="173" pos:column="24">"Nothing new to pack.\n"<pos:position pos:line="173" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="173" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="173" pos:column="50"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="175" pos:column="9">/*
	 * Ok we have prepared all new packfiles.
	 * First see if there are packs of the same name and if so
	 * if we can move them out of the way (this can happen if we
	 * repacked immediately after packing fully.
	 */</comment>
	<expr_stmt><expr><name pos:line="181" pos:column="9">failed<pos:position pos:line="181" pos:column="15"/></name> <operator pos:line="181" pos:column="16">=<pos:position pos:line="181" pos:column="17"/></operator> <literal type="number" pos:line="181" pos:column="18">0<pos:position pos:line="181" pos:column="19"/></literal></expr>;<pos:position pos:line="181" pos:column="20"/></expr_stmt>
	<macro><name pos:line="182" pos:column="9">for_each_string_list_item<pos:position pos:line="182" pos:column="34"/></name><argument_list pos:line="182" pos:column="34">(<argument pos:line="182" pos:column="35">item<pos:position pos:line="182" pos:column="39"/></argument>, <argument pos:line="182" pos:column="41">&amp;names<pos:position pos:line="182" pos:column="47"/></argument>)<pos:position pos:line="182" pos:column="48"/></argument_list></macro> <block pos:line="182" pos:column="49">{
		<for pos:line="183" pos:column="17">for <control pos:line="183" pos:column="21">(<init><expr><name pos:line="183" pos:column="22">ext<pos:position pos:line="183" pos:column="25"/></name> <operator pos:line="183" pos:column="26">=<pos:position pos:line="183" pos:column="27"/></operator> <literal type="number" pos:line="183" pos:column="28">0<pos:position pos:line="183" pos:column="29"/></literal></expr>;<pos:position pos:line="183" pos:column="30"/></init> <condition><expr><name pos:line="183" pos:column="31">ext<pos:position pos:line="183" pos:column="34"/></name> <operator pos:line="183" pos:column="35">&lt;<pos:position pos:line="183" pos:column="39"/></operator> <call><name pos:line="183" pos:column="37">ARRAY_SIZE<pos:position pos:line="183" pos:column="47"/></name><argument_list pos:line="183" pos:column="47">(<argument><expr><name pos:line="183" pos:column="48">exts<pos:position pos:line="183" pos:column="52"/></name></expr></argument>)<pos:position pos:line="183" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="183" pos:column="54"/></condition> <incr><expr><name pos:line="183" pos:column="55">ext<pos:position pos:line="183" pos:column="58"/></name><operator pos:line="183" pos:column="58">++<pos:position pos:line="183" pos:column="60"/></operator></expr></incr>)<pos:position pos:line="183" pos:column="61"/></control> <block pos:line="183" pos:column="62">{
			<decl_stmt><decl><type><name pos:line="184" pos:column="25">char<pos:position pos:line="184" pos:column="29"/></name> <modifier pos:line="184" pos:column="30">*<pos:position pos:line="184" pos:column="31"/></modifier></type><name pos:line="184" pos:column="31">fname<pos:position pos:line="184" pos:column="36"/></name></decl>, <modifier pos:line="184" pos:column="38">*<pos:position pos:line="184" pos:column="39"/></modifier><decl><type ref="prev"/><name pos:line="184" pos:column="39">fname_old<pos:position pos:line="184" pos:column="48"/></name></decl>;<pos:position pos:line="184" pos:column="49"/></decl_stmt>
			<expr_stmt><expr><name pos:line="185" pos:column="25">fname<pos:position pos:line="185" pos:column="30"/></name> <operator pos:line="185" pos:column="31">=<pos:position pos:line="185" pos:column="32"/></operator> <call><name pos:line="185" pos:column="33">mkpathdup<pos:position pos:line="185" pos:column="42"/></name><argument_list pos:line="185" pos:column="42">(<argument><expr><literal type="string" pos:line="185" pos:column="43">"%s/pack-%s%s"<pos:position pos:line="185" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="185" pos:column="59">packdir<pos:position pos:line="185" pos:column="66"/></name></expr></argument>,
						<argument><expr><name><name pos:line="186" pos:column="49">item<pos:position pos:line="186" pos:column="53"/></name><operator pos:line="186" pos:column="53">-&gt;<pos:position pos:line="186" pos:column="58"/></operator><name pos:line="186" pos:column="55">string<pos:position pos:line="186" pos:column="61"/></name></name></expr></argument>, <argument><expr><name><name pos:line="186" pos:column="63">exts<pos:position pos:line="186" pos:column="67"/></name><index pos:line="186" pos:column="67">[<expr><name pos:line="186" pos:column="68">ext<pos:position pos:line="186" pos:column="71"/></name></expr>]<pos:position pos:line="186" pos:column="72"/></index></name><operator pos:line="186" pos:column="72">.<pos:position pos:line="186" pos:column="73"/></operator><name pos:line="186" pos:column="73">name<pos:position pos:line="186" pos:column="77"/></name></expr></argument>)<pos:position pos:line="186" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="186" pos:column="79"/></expr_stmt>
			<if pos:line="187" pos:column="25">if <condition pos:line="187" pos:column="28">(<expr><operator pos:line="187" pos:column="29">!<pos:position pos:line="187" pos:column="30"/></operator><call><name pos:line="187" pos:column="30">file_exists<pos:position pos:line="187" pos:column="41"/></name><argument_list pos:line="187" pos:column="41">(<argument><expr><name pos:line="187" pos:column="42">fname<pos:position pos:line="187" pos:column="47"/></name></expr></argument>)<pos:position pos:line="187" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="187" pos:column="49"/></condition><then pos:line="187" pos:column="49"> <block pos:line="187" pos:column="50">{
				<expr_stmt><expr><call><name pos:line="188" pos:column="33">free<pos:position pos:line="188" pos:column="37"/></name><argument_list pos:line="188" pos:column="37">(<argument><expr><name pos:line="188" pos:column="38">fname<pos:position pos:line="188" pos:column="43"/></name></expr></argument>)<pos:position pos:line="188" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="188" pos:column="45"/></expr_stmt>
				<continue pos:line="189" pos:column="33">continue;<pos:position pos:line="189" pos:column="42"/></continue>
			}<pos:position pos:line="190" pos:column="26"/></block></then></if>

			<expr_stmt><expr><name pos:line="192" pos:column="25">fname_old<pos:position pos:line="192" pos:column="34"/></name> <operator pos:line="192" pos:column="35">=<pos:position pos:line="192" pos:column="36"/></operator> <call><name pos:line="192" pos:column="37">mkpathdup<pos:position pos:line="192" pos:column="46"/></name><argument_list pos:line="192" pos:column="46">(<argument><expr><literal type="string" pos:line="192" pos:column="47">"%s/old-%s%s"<pos:position pos:line="192" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="192" pos:column="62">packdir<pos:position pos:line="192" pos:column="69"/></name></expr></argument>,
						<argument><expr><name><name pos:line="193" pos:column="49">item<pos:position pos:line="193" pos:column="53"/></name><operator pos:line="193" pos:column="53">-&gt;<pos:position pos:line="193" pos:column="58"/></operator><name pos:line="193" pos:column="55">string<pos:position pos:line="193" pos:column="61"/></name></name></expr></argument>, <argument><expr><name><name pos:line="193" pos:column="63">exts<pos:position pos:line="193" pos:column="67"/></name><index pos:line="193" pos:column="67">[<expr><name pos:line="193" pos:column="68">ext<pos:position pos:line="193" pos:column="71"/></name></expr>]<pos:position pos:line="193" pos:column="72"/></index></name><operator pos:line="193" pos:column="72">.<pos:position pos:line="193" pos:column="73"/></operator><name pos:line="193" pos:column="73">name<pos:position pos:line="193" pos:column="77"/></name></expr></argument>)<pos:position pos:line="193" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="79"/></expr_stmt>
			<if pos:line="194" pos:column="25">if <condition pos:line="194" pos:column="28">(<expr><call><name pos:line="194" pos:column="29">file_exists<pos:position pos:line="194" pos:column="40"/></name><argument_list pos:line="194" pos:column="40">(<argument><expr><name pos:line="194" pos:column="41">fname_old<pos:position pos:line="194" pos:column="50"/></name></expr></argument>)<pos:position pos:line="194" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="194" pos:column="52"/></condition><then pos:line="194" pos:column="52">
				<block type="pseudo"><if pos:line="195" pos:column="33">if <condition pos:line="195" pos:column="36">(<expr><call><name pos:line="195" pos:column="37">unlink<pos:position pos:line="195" pos:column="43"/></name><argument_list pos:line="195" pos:column="43">(<argument><expr><name pos:line="195" pos:column="44">fname_old<pos:position pos:line="195" pos:column="53"/></name></expr></argument>)<pos:position pos:line="195" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="195" pos:column="55"/></condition><then pos:line="195" pos:column="55">
					<block type="pseudo"><expr_stmt><expr><name pos:line="196" pos:column="41">failed<pos:position pos:line="196" pos:column="47"/></name> <operator pos:line="196" pos:column="48">=<pos:position pos:line="196" pos:column="49"/></operator> <literal type="number" pos:line="196" pos:column="50">1<pos:position pos:line="196" pos:column="51"/></literal></expr>;<pos:position pos:line="196" pos:column="52"/></expr_stmt></block></then></if></block></then></if>

			<if pos:line="198" pos:column="25">if <condition pos:line="198" pos:column="28">(<expr><operator pos:line="198" pos:column="29">!<pos:position pos:line="198" pos:column="30"/></operator><name pos:line="198" pos:column="30">failed<pos:position pos:line="198" pos:column="36"/></name> <operator pos:line="198" pos:column="37">&amp;&amp;<pos:position pos:line="198" pos:column="47"/></operator> <call><name pos:line="198" pos:column="40">rename<pos:position pos:line="198" pos:column="46"/></name><argument_list pos:line="198" pos:column="46">(<argument><expr><name pos:line="198" pos:column="47">fname<pos:position pos:line="198" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="198" pos:column="54">fname_old<pos:position pos:line="198" pos:column="63"/></name></expr></argument>)<pos:position pos:line="198" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="198" pos:column="65"/></condition><then pos:line="198" pos:column="65"> <block pos:line="198" pos:column="66">{
				<expr_stmt><expr><call><name pos:line="199" pos:column="33">free<pos:position pos:line="199" pos:column="37"/></name><argument_list pos:line="199" pos:column="37">(<argument><expr><name pos:line="199" pos:column="38">fname<pos:position pos:line="199" pos:column="43"/></name></expr></argument>)<pos:position pos:line="199" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="199" pos:column="45"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="200" pos:column="33">free<pos:position pos:line="200" pos:column="37"/></name><argument_list pos:line="200" pos:column="37">(<argument><expr><name pos:line="200" pos:column="38">fname_old<pos:position pos:line="200" pos:column="47"/></name></expr></argument>)<pos:position pos:line="200" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="200" pos:column="49"/></expr_stmt>
				<expr_stmt><expr><name pos:line="201" pos:column="33">failed<pos:position pos:line="201" pos:column="39"/></name> <operator pos:line="201" pos:column="40">=<pos:position pos:line="201" pos:column="41"/></operator> <literal type="number" pos:line="201" pos:column="42">1<pos:position pos:line="201" pos:column="43"/></literal></expr>;<pos:position pos:line="201" pos:column="44"/></expr_stmt>
				<break pos:line="202" pos:column="33">break;<pos:position pos:line="202" pos:column="39"/></break>
			}<pos:position pos:line="203" pos:column="26"/></block></then> <else pos:line="203" pos:column="27">else <block pos:line="203" pos:column="32">{
				<expr_stmt><expr><call><name pos:line="204" pos:column="33">string_list_append<pos:position pos:line="204" pos:column="51"/></name><argument_list pos:line="204" pos:column="51">(<argument><expr><operator pos:line="204" pos:column="52">&amp;<pos:position pos:line="204" pos:column="57"/></operator><name pos:line="204" pos:column="53">rollback<pos:position pos:line="204" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="204" pos:column="63">fname<pos:position pos:line="204" pos:column="68"/></name></expr></argument>)<pos:position pos:line="204" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="204" pos:column="70"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="205" pos:column="33">free<pos:position pos:line="205" pos:column="37"/></name><argument_list pos:line="205" pos:column="37">(<argument><expr><name pos:line="205" pos:column="38">fname_old<pos:position pos:line="205" pos:column="47"/></name></expr></argument>)<pos:position pos:line="205" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="205" pos:column="49"/></expr_stmt>
			}<pos:position pos:line="206" pos:column="26"/></block></else></if>
		}<pos:position pos:line="207" pos:column="18"/></block></for>
		<if pos:line="208" pos:column="17">if <condition pos:line="208" pos:column="20">(<expr><name pos:line="208" pos:column="21">failed<pos:position pos:line="208" pos:column="27"/></name></expr>)<pos:position pos:line="208" pos:column="28"/></condition><then pos:line="208" pos:column="28">
			<block type="pseudo"><break pos:line="209" pos:column="25">break;<pos:position pos:line="209" pos:column="31"/></break></block></then></if>
	}<pos:position pos:line="210" pos:column="10"/></block>
	<if pos:line="211" pos:column="9">if <condition pos:line="211" pos:column="12">(<expr><name pos:line="211" pos:column="13">failed<pos:position pos:line="211" pos:column="19"/></name></expr>)<pos:position pos:line="211" pos:column="20"/></condition><then pos:line="211" pos:column="20"> <block pos:line="211" pos:column="21">{
		<decl_stmt><decl><type><name><name pos:line="212" pos:column="17">struct<pos:position pos:line="212" pos:column="23"/></name> <name pos:line="212" pos:column="24">string_list<pos:position pos:line="212" pos:column="35"/></name></name></type> <name pos:line="212" pos:column="36">rollback_failure<pos:position pos:line="212" pos:column="52"/></name> <init pos:line="212" pos:column="53">= <expr><name pos:line="212" pos:column="55">STRING_LIST_INIT_DUP<pos:position pos:line="212" pos:column="75"/></name></expr></init></decl>;<pos:position pos:line="212" pos:column="76"/></decl_stmt>
		<macro><name pos:line="213" pos:column="17">for_each_string_list_item<pos:position pos:line="213" pos:column="42"/></name><argument_list pos:line="213" pos:column="42">(<argument pos:line="213" pos:column="43">item<pos:position pos:line="213" pos:column="47"/></argument>, <argument pos:line="213" pos:column="49">&amp;rollback<pos:position pos:line="213" pos:column="58"/></argument>)<pos:position pos:line="213" pos:column="59"/></argument_list></macro> <block pos:line="213" pos:column="60">{
			<decl_stmt><decl><type><name pos:line="214" pos:column="25">char<pos:position pos:line="214" pos:column="29"/></name> <modifier pos:line="214" pos:column="30">*<pos:position pos:line="214" pos:column="31"/></modifier></type><name pos:line="214" pos:column="31">fname<pos:position pos:line="214" pos:column="36"/></name></decl>, <modifier pos:line="214" pos:column="38">*<pos:position pos:line="214" pos:column="39"/></modifier><decl><type ref="prev"/><name pos:line="214" pos:column="39">fname_old<pos:position pos:line="214" pos:column="48"/></name></decl>;<pos:position pos:line="214" pos:column="49"/></decl_stmt>
			<expr_stmt><expr><name pos:line="215" pos:column="25">fname<pos:position pos:line="215" pos:column="30"/></name> <operator pos:line="215" pos:column="31">=<pos:position pos:line="215" pos:column="32"/></operator> <call><name pos:line="215" pos:column="33">mkpathdup<pos:position pos:line="215" pos:column="42"/></name><argument_list pos:line="215" pos:column="42">(<argument><expr><literal type="string" pos:line="215" pos:column="43">"%s/%s"<pos:position pos:line="215" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="215" pos:column="52">packdir<pos:position pos:line="215" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="215" pos:column="61">item<pos:position pos:line="215" pos:column="65"/></name><operator pos:line="215" pos:column="65">-&gt;<pos:position pos:line="215" pos:column="70"/></operator><name pos:line="215" pos:column="67">string<pos:position pos:line="215" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="215" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="215" pos:column="75"/></expr_stmt>
			<expr_stmt><expr><name pos:line="216" pos:column="25">fname_old<pos:position pos:line="216" pos:column="34"/></name> <operator pos:line="216" pos:column="35">=<pos:position pos:line="216" pos:column="36"/></operator> <call><name pos:line="216" pos:column="37">mkpathdup<pos:position pos:line="216" pos:column="46"/></name><argument_list pos:line="216" pos:column="46">(<argument><expr><literal type="string" pos:line="216" pos:column="47">"%s/old-%s"<pos:position pos:line="216" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="216" pos:column="60">packdir<pos:position pos:line="216" pos:column="67"/></name></expr></argument>, <argument><expr><name><name pos:line="216" pos:column="69">item<pos:position pos:line="216" pos:column="73"/></name><operator pos:line="216" pos:column="73">-&gt;<pos:position pos:line="216" pos:column="78"/></operator><name pos:line="216" pos:column="75">string<pos:position pos:line="216" pos:column="81"/></name></name></expr></argument>)<pos:position pos:line="216" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="216" pos:column="83"/></expr_stmt>
			<if pos:line="217" pos:column="25">if <condition pos:line="217" pos:column="28">(<expr><call><name pos:line="217" pos:column="29">rename<pos:position pos:line="217" pos:column="35"/></name><argument_list pos:line="217" pos:column="35">(<argument><expr><name pos:line="217" pos:column="36">fname_old<pos:position pos:line="217" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="217" pos:column="47">fname<pos:position pos:line="217" pos:column="52"/></name></expr></argument>)<pos:position pos:line="217" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="217" pos:column="54"/></condition><then pos:line="217" pos:column="54">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="218" pos:column="33">string_list_append<pos:position pos:line="218" pos:column="51"/></name><argument_list pos:line="218" pos:column="51">(<argument><expr><operator pos:line="218" pos:column="52">&amp;<pos:position pos:line="218" pos:column="57"/></operator><name pos:line="218" pos:column="53">rollback_failure<pos:position pos:line="218" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="218" pos:column="71">fname<pos:position pos:line="218" pos:column="76"/></name></expr></argument>)<pos:position pos:line="218" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="218" pos:column="78"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="219" pos:column="25">free<pos:position pos:line="219" pos:column="29"/></name><argument_list pos:line="219" pos:column="29">(<argument><expr><name pos:line="219" pos:column="30">fname<pos:position pos:line="219" pos:column="35"/></name></expr></argument>)<pos:position pos:line="219" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="219" pos:column="37"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="220" pos:column="25">free<pos:position pos:line="220" pos:column="29"/></name><argument_list pos:line="220" pos:column="29">(<argument><expr><name pos:line="220" pos:column="30">fname_old<pos:position pos:line="220" pos:column="39"/></name></expr></argument>)<pos:position pos:line="220" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="220" pos:column="41"/></expr_stmt>
		}<pos:position pos:line="221" pos:column="18"/></block>

		<if pos:line="223" pos:column="17">if <condition pos:line="223" pos:column="20">(<expr><name><name pos:line="223" pos:column="21">rollback_failure<pos:position pos:line="223" pos:column="37"/></name><operator pos:line="223" pos:column="37">.<pos:position pos:line="223" pos:column="38"/></operator><name pos:line="223" pos:column="38">nr<pos:position pos:line="223" pos:column="40"/></name></name></expr>)<pos:position pos:line="223" pos:column="41"/></condition><then pos:line="223" pos:column="41"> <block pos:line="223" pos:column="42">{
			<decl_stmt><decl><type><name pos:line="224" pos:column="25">int<pos:position pos:line="224" pos:column="28"/></name></type> <name pos:line="224" pos:column="29">i<pos:position pos:line="224" pos:column="30"/></name></decl>;<pos:position pos:line="224" pos:column="31"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="225" pos:column="25">fprintf<pos:position pos:line="225" pos:column="32"/></name><argument_list pos:line="225" pos:column="32">(<argument><expr><name pos:line="225" pos:column="33">stderr<pos:position pos:line="225" pos:column="39"/></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="226" pos:column="33">"WARNING: Some packs in use have been renamed by\n"<pos:position pos:line="226" pos:column="84"/></literal>
				<literal type="string" pos:line="227" pos:column="33">"WARNING: prefixing old- to their name, in order to\n"<pos:position pos:line="227" pos:column="87"/></literal>
				<literal type="string" pos:line="228" pos:column="33">"WARNING: replace them with the new version of the\n"<pos:position pos:line="228" pos:column="86"/></literal>
				<literal type="string" pos:line="229" pos:column="33">"WARNING: file.  But the operation failed, and the\n"<pos:position pos:line="229" pos:column="86"/></literal>
				<literal type="string" pos:line="230" pos:column="33">"WARNING: attempt to rename them back to their\n"<pos:position pos:line="230" pos:column="82"/></literal>
				<literal type="string" pos:line="231" pos:column="33">"WARNING: original names also failed.\n"<pos:position pos:line="231" pos:column="73"/></literal>
				<literal type="string" pos:line="232" pos:column="33">"WARNING: Please rename them in %s manually:\n"<pos:position pos:line="232" pos:column="80"/></literal></expr></argument>, <argument><expr><name pos:line="232" pos:column="82">packdir<pos:position pos:line="232" pos:column="89"/></name></expr></argument>)<pos:position pos:line="232" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="232" pos:column="91"/></expr_stmt>
			<for pos:line="233" pos:column="25">for <control pos:line="233" pos:column="29">(<init><expr><name pos:line="233" pos:column="30">i<pos:position pos:line="233" pos:column="31"/></name> <operator pos:line="233" pos:column="32">=<pos:position pos:line="233" pos:column="33"/></operator> <literal type="number" pos:line="233" pos:column="34">0<pos:position pos:line="233" pos:column="35"/></literal></expr>;<pos:position pos:line="233" pos:column="36"/></init> <condition><expr><name pos:line="233" pos:column="37">i<pos:position pos:line="233" pos:column="38"/></name> <operator pos:line="233" pos:column="39">&lt;<pos:position pos:line="233" pos:column="43"/></operator> <name><name pos:line="233" pos:column="41">rollback_failure<pos:position pos:line="233" pos:column="57"/></name><operator pos:line="233" pos:column="57">.<pos:position pos:line="233" pos:column="58"/></operator><name pos:line="233" pos:column="58">nr<pos:position pos:line="233" pos:column="60"/></name></name></expr>;<pos:position pos:line="233" pos:column="61"/></condition> <incr><expr><name pos:line="233" pos:column="62">i<pos:position pos:line="233" pos:column="63"/></name><operator pos:line="233" pos:column="63">++<pos:position pos:line="233" pos:column="65"/></operator></expr></incr>)<pos:position pos:line="233" pos:column="66"/></control>
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="234" pos:column="33">fprintf<pos:position pos:line="234" pos:column="40"/></name><argument_list pos:line="234" pos:column="40">(<argument><expr><name pos:line="234" pos:column="41">stderr<pos:position pos:line="234" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="234" pos:column="49">"WARNING:   old-%s -&gt; %s\n"<pos:position pos:line="234" pos:column="79"/></literal></expr></argument>,
					<argument><expr><name><name pos:line="235" pos:column="41">rollback_failure<pos:position pos:line="235" pos:column="57"/></name><operator pos:line="235" pos:column="57">.<pos:position pos:line="235" pos:column="58"/></operator><name pos:line="235" pos:column="58">items<pos:position pos:line="235" pos:column="63"/></name><index pos:line="235" pos:column="63">[<expr><name pos:line="235" pos:column="64">i<pos:position pos:line="235" pos:column="65"/></name></expr>]<pos:position pos:line="235" pos:column="66"/></index></name><operator pos:line="235" pos:column="66">.<pos:position pos:line="235" pos:column="67"/></operator><name pos:line="235" pos:column="67">string<pos:position pos:line="235" pos:column="73"/></name></expr></argument>,
					<argument><expr><name><name pos:line="236" pos:column="41">rollback_failure<pos:position pos:line="236" pos:column="57"/></name><operator pos:line="236" pos:column="57">.<pos:position pos:line="236" pos:column="58"/></operator><name pos:line="236" pos:column="58">items<pos:position pos:line="236" pos:column="63"/></name><index pos:line="236" pos:column="63">[<expr><name pos:line="236" pos:column="64">i<pos:position pos:line="236" pos:column="65"/></name></expr>]<pos:position pos:line="236" pos:column="66"/></index></name><operator pos:line="236" pos:column="66">.<pos:position pos:line="236" pos:column="67"/></operator><name pos:line="236" pos:column="67">string<pos:position pos:line="236" pos:column="73"/></name></expr></argument>)<pos:position pos:line="236" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="236" pos:column="75"/></expr_stmt></block></for>
		}<pos:position pos:line="237" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="238" pos:column="17">exit<pos:position pos:line="238" pos:column="21"/></name><argument_list pos:line="238" pos:column="21">(<argument><expr><literal type="number" pos:line="238" pos:column="22">1<pos:position pos:line="238" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="238" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="238" pos:column="25"/></expr_stmt>
	}<pos:position pos:line="239" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="241" pos:column="9">/* Now the ones with the same name are out of the way... */</comment>
	<macro><name pos:line="242" pos:column="9">for_each_string_list_item<pos:position pos:line="242" pos:column="34"/></name><argument_list pos:line="242" pos:column="34">(<argument pos:line="242" pos:column="35">item<pos:position pos:line="242" pos:column="39"/></argument>, <argument pos:line="242" pos:column="41">&amp;names<pos:position pos:line="242" pos:column="47"/></argument>)<pos:position pos:line="242" pos:column="48"/></argument_list></macro> <block pos:line="242" pos:column="49">{
		<for pos:line="243" pos:column="17">for <control pos:line="243" pos:column="21">(<init><expr><name pos:line="243" pos:column="22">ext<pos:position pos:line="243" pos:column="25"/></name> <operator pos:line="243" pos:column="26">=<pos:position pos:line="243" pos:column="27"/></operator> <literal type="number" pos:line="243" pos:column="28">0<pos:position pos:line="243" pos:column="29"/></literal></expr>;<pos:position pos:line="243" pos:column="30"/></init> <condition><expr><name pos:line="243" pos:column="31">ext<pos:position pos:line="243" pos:column="34"/></name> <operator pos:line="243" pos:column="35">&lt;<pos:position pos:line="243" pos:column="39"/></operator> <call><name pos:line="243" pos:column="37">ARRAY_SIZE<pos:position pos:line="243" pos:column="47"/></name><argument_list pos:line="243" pos:column="47">(<argument><expr><name pos:line="243" pos:column="48">exts<pos:position pos:line="243" pos:column="52"/></name></expr></argument>)<pos:position pos:line="243" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="243" pos:column="54"/></condition> <incr><expr><name pos:line="243" pos:column="55">ext<pos:position pos:line="243" pos:column="58"/></name><operator pos:line="243" pos:column="58">++<pos:position pos:line="243" pos:column="60"/></operator></expr></incr>)<pos:position pos:line="243" pos:column="61"/></control> <block pos:line="243" pos:column="62">{
			<decl_stmt><decl><type><name pos:line="244" pos:column="25">char<pos:position pos:line="244" pos:column="29"/></name> <modifier pos:line="244" pos:column="30">*<pos:position pos:line="244" pos:column="31"/></modifier></type><name pos:line="244" pos:column="31">fname<pos:position pos:line="244" pos:column="36"/></name></decl>, <modifier pos:line="244" pos:column="38">*<pos:position pos:line="244" pos:column="39"/></modifier><decl><type ref="prev"/><name pos:line="244" pos:column="39">fname_old<pos:position pos:line="244" pos:column="48"/></name></decl>;<pos:position pos:line="244" pos:column="49"/></decl_stmt>
			<decl_stmt><decl><type><name><name pos:line="245" pos:column="25">struct<pos:position pos:line="245" pos:column="31"/></name> <name pos:line="245" pos:column="32">stat<pos:position pos:line="245" pos:column="36"/></name></name></type> <name pos:line="245" pos:column="37">statbuffer<pos:position pos:line="245" pos:column="47"/></name></decl>;<pos:position pos:line="245" pos:column="48"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="246" pos:column="25">int<pos:position pos:line="246" pos:column="28"/></name></type> <name pos:line="246" pos:column="29">exists<pos:position pos:line="246" pos:column="35"/></name> <init pos:line="246" pos:column="36">= <expr><literal type="number" pos:line="246" pos:column="38">0<pos:position pos:line="246" pos:column="39"/></literal></expr></init></decl>;<pos:position pos:line="246" pos:column="40"/></decl_stmt>
			<expr_stmt><expr><name pos:line="247" pos:column="25">fname<pos:position pos:line="247" pos:column="30"/></name> <operator pos:line="247" pos:column="31">=<pos:position pos:line="247" pos:column="32"/></operator> <call><name pos:line="247" pos:column="33">mkpathdup<pos:position pos:line="247" pos:column="42"/></name><argument_list pos:line="247" pos:column="42">(<argument><expr><literal type="string" pos:line="247" pos:column="43">"%s/pack-%s%s"<pos:position pos:line="247" pos:column="57"/></literal></expr></argument>,
					<argument><expr><name pos:line="248" pos:column="41">packdir<pos:position pos:line="248" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="248" pos:column="50">item<pos:position pos:line="248" pos:column="54"/></name><operator pos:line="248" pos:column="54">-&gt;<pos:position pos:line="248" pos:column="59"/></operator><name pos:line="248" pos:column="56">string<pos:position pos:line="248" pos:column="62"/></name></name></expr></argument>, <argument><expr><name><name pos:line="248" pos:column="64">exts<pos:position pos:line="248" pos:column="68"/></name><index pos:line="248" pos:column="68">[<expr><name pos:line="248" pos:column="69">ext<pos:position pos:line="248" pos:column="72"/></name></expr>]<pos:position pos:line="248" pos:column="73"/></index></name><operator pos:line="248" pos:column="73">.<pos:position pos:line="248" pos:column="74"/></operator><name pos:line="248" pos:column="74">name<pos:position pos:line="248" pos:column="78"/></name></expr></argument>)<pos:position pos:line="248" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="248" pos:column="80"/></expr_stmt>
			<expr_stmt><expr><name pos:line="249" pos:column="25">fname_old<pos:position pos:line="249" pos:column="34"/></name> <operator pos:line="249" pos:column="35">=<pos:position pos:line="249" pos:column="36"/></operator> <call><name pos:line="249" pos:column="37">mkpathdup<pos:position pos:line="249" pos:column="46"/></name><argument_list pos:line="249" pos:column="46">(<argument><expr><literal type="string" pos:line="249" pos:column="47">"%s-%s%s"<pos:position pos:line="249" pos:column="56"/></literal></expr></argument>,
					<argument><expr><name pos:line="250" pos:column="41">packtmp<pos:position pos:line="250" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="250" pos:column="50">item<pos:position pos:line="250" pos:column="54"/></name><operator pos:line="250" pos:column="54">-&gt;<pos:position pos:line="250" pos:column="59"/></operator><name pos:line="250" pos:column="56">string<pos:position pos:line="250" pos:column="62"/></name></name></expr></argument>, <argument><expr><name><name pos:line="250" pos:column="64">exts<pos:position pos:line="250" pos:column="68"/></name><index pos:line="250" pos:column="68">[<expr><name pos:line="250" pos:column="69">ext<pos:position pos:line="250" pos:column="72"/></name></expr>]<pos:position pos:line="250" pos:column="73"/></index></name><operator pos:line="250" pos:column="73">.<pos:position pos:line="250" pos:column="74"/></operator><name pos:line="250" pos:column="74">name<pos:position pos:line="250" pos:column="78"/></name></expr></argument>)<pos:position pos:line="250" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="250" pos:column="80"/></expr_stmt>
			<if pos:line="251" pos:column="25">if <condition pos:line="251" pos:column="28">(<expr><operator pos:line="251" pos:column="29">!<pos:position pos:line="251" pos:column="30"/></operator><call><name pos:line="251" pos:column="30">stat<pos:position pos:line="251" pos:column="34"/></name><argument_list pos:line="251" pos:column="34">(<argument><expr><name pos:line="251" pos:column="35">fname_old<pos:position pos:line="251" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="251" pos:column="46">&amp;<pos:position pos:line="251" pos:column="51"/></operator><name pos:line="251" pos:column="47">statbuffer<pos:position pos:line="251" pos:column="57"/></name></expr></argument>)<pos:position pos:line="251" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="251" pos:column="59"/></condition><then pos:line="251" pos:column="59"> <block pos:line="251" pos:column="60">{
				<expr_stmt><expr><name><name pos:line="252" pos:column="33">statbuffer<pos:position pos:line="252" pos:column="43"/></name><operator pos:line="252" pos:column="43">.<pos:position pos:line="252" pos:column="44"/></operator><name pos:line="252" pos:column="44">st_mode<pos:position pos:line="252" pos:column="51"/></name></name> <operator pos:line="252" pos:column="52">&amp;=<pos:position pos:line="252" pos:column="58"/></operator> <operator pos:line="252" pos:column="55">~<pos:position pos:line="252" pos:column="56"/></operator><operator pos:line="252" pos:column="56">(<pos:position pos:line="252" pos:column="57"/></operator><macro><name pos:line="252" pos:column="57">S_IWUSR<pos:position pos:line="252" pos:column="64"/></name></macro></expr></expr_stmt></block></then></if></block></for></block></block></function> </unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1531.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">show_ref<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><specifier pos:line="1" pos:column="22">const<pos:position pos:line="1" pos:column="27"/></specifier> <name pos:line="1" pos:column="28">char<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">path<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="40">const<pos:position pos:line="1" pos:column="45"/></specifier> <name pos:line="1" pos:column="46">unsigned<pos:position pos:line="1" pos:column="54"/></name> <name pos:line="1" pos:column="55">char<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">sha1<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><call><name pos:line="3" pos:column="13">ref_is_hidden<pos:position pos:line="3" pos:column="26"/></name><argument_list pos:line="3" pos:column="26">(<argument><expr><name pos:line="3" pos:column="27">path<pos:position pos:line="3" pos:column="31"/></name></expr></argument>)<pos:position pos:line="3" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="33"/></condition><then pos:line="3" pos:column="33">
		<block type="pseudo"><return pos:line="4" pos:column="17">return;<pos:position pos:line="4" pos:column="24"/></return></block></then></if>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name pos:line="6" pos:column="13">sent_capabilities<pos:position pos:line="6" pos:column="30"/></name></expr>)<pos:position pos:line="6" pos:column="31"/></condition><then pos:line="6" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="17">packet_write<pos:position pos:line="7" pos:column="29"/></name><argument_list pos:line="7" pos:column="29">(<argument><expr><literal type="number" pos:line="7" pos:column="30">1<pos:position pos:line="7" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="33">"%s %s\n"<pos:position pos:line="7" pos:column="42"/></literal></expr></argument>, <argument><expr><call><name pos:line="7" pos:column="44">sha1_to_hex<pos:position pos:line="7" pos:column="55"/></name><argument_list pos:line="7" pos:column="55">(<argument><expr><name pos:line="7" pos:column="56">sha1<pos:position pos:line="7" pos:column="60"/></name></expr></argument>)<pos:position pos:line="7" pos:column="61"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="7" pos:column="63">path<pos:position pos:line="7" pos:column="67"/></name></expr></argument>)<pos:position pos:line="7" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="69"/></expr_stmt></block></then>
	<else pos:line="8" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="17">packet_write<pos:position pos:line="9" pos:column="29"/></name><argument_list pos:line="9" pos:column="29">(<argument><expr><literal type="number" pos:line="9" pos:column="30">1<pos:position pos:line="9" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="33">"%s %s%c%s%s agent=%s\n"<pos:position pos:line="9" pos:column="57"/></literal></expr></argument>,
			     <argument><expr><call><name pos:line="10" pos:column="30">sha1_to_hex<pos:position pos:line="10" pos:column="41"/></name><argument_list pos:line="10" pos:column="41">(<argument><expr><name pos:line="10" pos:column="42">sha1<pos:position pos:line="10" pos:column="46"/></name></expr></argument>)<pos:position pos:line="10" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="10" pos:column="49">path<pos:position pos:line="10" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="55">0<pos:position pos:line="10" pos:column="56"/></literal></expr></argument>,
			     <argument><expr><literal type="string" pos:line="11" pos:column="30">" report-status delete-refs side-band-64k quiet"<pos:position pos:line="11" pos:column="78"/></literal></expr></argument>,
			     <argument><expr><ternary><condition><expr><name pos:line="12" pos:column="30">prefer_ofs_delta<pos:position pos:line="12" pos:column="46"/></name></expr> ?<pos:position pos:line="12" pos:column="48"/></condition><then pos:line="12" pos:column="48"> <expr><literal type="string" pos:line="12" pos:column="49">" ofs-delta"<pos:position pos:line="12" pos:column="61"/></literal></expr> <pos:position pos:line="12" pos:column="62"/></then><else pos:line="12" pos:column="62">: <expr><literal type="string" pos:line="12" pos:column="64">""<pos:position pos:line="12" pos:column="66"/></literal></expr></else></ternary></expr></argument>,
			     <argument><expr><call><name pos:line="13" pos:column="30">git_user_agent_sanitized<pos:position pos:line="13" pos:column="54"/></name><argument_list pos:line="13" pos:column="54">()<pos:position pos:line="13" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="58"/></expr_stmt></block></else></if>
	<expr_stmt><expr><name pos:line="14" pos:column="9">sent_capabilities<pos:position pos:line="14" pos:column="26"/></name> <operator pos:line="14" pos:column="27">=<pos:position pos:line="14" pos:column="28"/></operator> <literal type="number" pos:line="14" pos:column="29">1<pos:position pos:line="14" pos:column="30"/></literal></expr>;<pos:position pos:line="14" pos:column="31"/></expr_stmt>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

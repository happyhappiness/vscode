Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/abspath.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/abspath.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/abspath.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/abspath.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/advice.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/advice.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/advice.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/advice.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/alias.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/alias.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/alias.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/alias.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/alloc.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/alloc.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/alloc.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/alloc.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/archive.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/archive.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/archive.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/archive.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/archive-tar.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/archive-tar.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/archive-tar.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/archive-tar.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/archive-zip.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/archive-zip.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/archive-zip.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/archive-zip.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/argv-array.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/argv-array.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/argv-array.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/argv-array.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/attr.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/attr.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/attr.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/attr.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/base85.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/base85.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/base85.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/base85.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/git /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/git
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/git	2017-10-10 14:25:06.342382780 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/git	2017-10-10 14:28:54.822374406 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2 and git.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3 and git.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/git" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/git-cvsserver /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/git-cvsserver
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/git-cvsserver	2017-10-10 14:25:06.354382779 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/git-cvsserver	2017-10-10 14:28:54.834374406 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2 and git-cvsserver.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3 and git-cvsserver.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/git-cvsserver" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/git-receive-pack /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/git-receive-pack
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/git-receive-pack	2017-10-10 14:25:06.346382780 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/git-receive-pack	2017-10-10 14:28:54.826374406 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2 and git-receive-pack.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3 and git-receive-pack.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/git-receive-pack" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/git-shell /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/git-shell
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/git-shell	2017-10-10 14:25:06.354382779 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/git-shell	2017-10-10 14:28:54.834374406 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2 and git-shell.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3 and git-shell.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/git-shell" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/git-upload-archive /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/git-upload-archive
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/git-upload-archive	2017-10-10 14:25:06.350382779 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/git-upload-archive	2017-10-10 14:28:54.830374406 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2 and git-upload-archive.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3 and git-upload-archive.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/git-upload-archive" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/git-upload-pack /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/git-upload-pack
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/git-upload-pack	2017-10-10 14:25:06.346382780 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/git-upload-pack	2017-10-10 14:28:54.826374406 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2 and git-upload-pack.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3 and git-upload-pack.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/git-upload-pack" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-chmtime /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-chmtime
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-chmtime	2017-10-10 14:25:06.358382779 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-chmtime	2017-10-10 14:28:54.838374405 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2 and test-chmtime.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3 and test-chmtime.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-chmtime" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-config /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-config
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-config	2017-10-10 14:25:06.362382779 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-config	2017-10-10 14:28:54.842374405 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2 and test-config.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3 and test-config.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-config" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-ctype /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-ctype
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-ctype	2017-10-10 14:25:06.358382779 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-ctype	2017-10-10 14:28:54.838374405 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2 and test-ctype.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3 and test-ctype.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-ctype" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-date /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-date
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-date	2017-10-10 14:25:06.362382779 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-date	2017-10-10 14:28:54.846374405 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2 and test-date.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3 and test-date.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-date" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-delta /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-delta
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-delta	2017-10-10 14:25:06.366382779 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-delta	2017-10-10 14:28:54.846374405 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2 and test-delta.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3 and test-delta.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-delta" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-dump-cache-tree /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-dump-cache-tree
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-dump-cache-tree	2017-10-10 14:25:06.370382779 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-dump-cache-tree	2017-10-10 14:28:54.850374405 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2 and test-dump-cache-tree.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3 and test-dump-cache-tree.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-dump-cache-tree" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-dump-split-index /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-dump-split-index
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-dump-split-index	2017-10-10 14:25:06.370382779 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-dump-split-index	2017-10-10 14:28:54.850374405 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2 and test-dump-split-index.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3 and test-dump-split-index.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-dump-split-index" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-dump-untracked-cache /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-dump-untracked-cache
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-dump-untracked-cache	2017-10-10 14:25:06.374382779 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-dump-untracked-cache	2017-10-10 14:28:54.854374405 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2 and test-dump-untracked-cache.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3 and test-dump-untracked-cache.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-dump-untracked-cache" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-genrandom /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-genrandom
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-genrandom	2017-10-10 14:25:06.374382779 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-genrandom	2017-10-10 14:28:54.854374405 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2 and test-genrandom.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3 and test-genrandom.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-genrandom" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-hashmap /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-hashmap
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-hashmap	2017-10-10 14:25:06.378382778 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-hashmap	2017-10-10 14:28:54.858374405 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2 and test-hashmap.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3 and test-hashmap.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-hashmap" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-index-version /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-index-version
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-index-version	2017-10-10 14:25:06.382382778 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-index-version	2017-10-10 14:28:54.862374405 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2 and test-index-version.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3 and test-index-version.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-index-version" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-line-buffer /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-line-buffer
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-line-buffer	2017-10-10 14:25:06.382382778 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-line-buffer	2017-10-10 14:28:54.862374405 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2 and test-line-buffer.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3 and test-line-buffer.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-line-buffer" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-match-trees /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-match-trees
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-match-trees	2017-10-10 14:25:06.386382778 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-match-trees	2017-10-10 14:28:54.866374404 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2 and test-match-trees.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3 and test-match-trees.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-match-trees" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-mergesort /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-mergesort
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-mergesort	2017-10-10 14:25:06.386382778 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-mergesort	2017-10-10 14:28:54.866374404 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2 and test-mergesort.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3 and test-mergesort.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-mergesort" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-mktemp /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-mktemp
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-mktemp	2017-10-10 14:25:06.390382778 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-mktemp	2017-10-10 14:28:54.870374404 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2 and test-mktemp.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3 and test-mktemp.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-mktemp" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-parse-options /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-parse-options
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-parse-options	2017-10-10 14:25:06.390382778 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-parse-options	2017-10-10 14:28:54.870374404 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2 and test-parse-options.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3 and test-parse-options.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-parse-options" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-path-utils /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-path-utils
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-path-utils	2017-10-10 14:25:06.394382778 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-path-utils	2017-10-10 14:28:54.874374404 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2 and test-path-utils.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3 and test-path-utils.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-path-utils" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-prio-queue /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-prio-queue
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-prio-queue	2017-10-10 14:25:06.394382778 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-prio-queue	2017-10-10 14:28:54.878374404 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2 and test-prio-queue.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3 and test-prio-queue.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-prio-queue" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-read-cache /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-read-cache
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-read-cache	2017-10-10 14:25:06.398382778 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-read-cache	2017-10-10 14:28:54.878374404 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2 and test-read-cache.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3 and test-read-cache.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-read-cache" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-regex /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-regex
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-regex	2017-10-10 14:25:06.402382777 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-regex	2017-10-10 14:28:54.882374404 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2 and test-regex.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3 and test-regex.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-regex" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-revision-walking /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-revision-walking
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-revision-walking	2017-10-10 14:25:06.402382777 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-revision-walking	2017-10-10 14:28:54.882374404 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2 and test-revision-walking.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3 and test-revision-walking.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-revision-walking" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-run-command /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-run-command
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-run-command	2017-10-10 14:25:06.406382777 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-run-command	2017-10-10 14:28:54.886374404 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2 and test-run-command.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3 and test-run-command.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-run-command" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-scrap-cache-tree /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-scrap-cache-tree
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-scrap-cache-tree	2017-10-10 14:25:06.406382777 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-scrap-cache-tree	2017-10-10 14:28:54.886374404 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2 and test-scrap-cache-tree.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3 and test-scrap-cache-tree.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-scrap-cache-tree" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-sha1 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-sha1
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-sha1	2017-10-10 14:25:06.410382777 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-sha1	2017-10-10 14:28:54.890374404 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2 and test-sha1.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3 and test-sha1.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-sha1" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-sha1-array /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-sha1-array
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-sha1-array	2017-10-10 14:25:06.410382777 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-sha1-array	2017-10-10 14:28:54.894374403 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2 and test-sha1-array.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3 and test-sha1-array.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-sha1-array" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-sigchain /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-sigchain
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-sigchain	2017-10-10 14:25:06.414382777 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-sigchain	2017-10-10 14:28:54.894374403 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2 and test-sigchain.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3 and test-sigchain.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-sigchain" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-string-list /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-string-list
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-string-list	2017-10-10 14:25:06.418382777 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-string-list	2017-10-10 14:28:54.898374403 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2 and test-string-list.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3 and test-string-list.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-string-list" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-submodule-config /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-submodule-config
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-submodule-config	2017-10-10 14:25:06.418382777 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-submodule-config	2017-10-10 14:28:54.898374403 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2 and test-submodule-config.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3 and test-submodule-config.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-submodule-config" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-subprocess /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-subprocess
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-subprocess	2017-10-10 14:25:06.422382777 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-subprocess	2017-10-10 14:28:54.902374403 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2 and test-subprocess.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3 and test-subprocess.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-subprocess" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-svn-fe /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-svn-fe
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-svn-fe	2017-10-10 14:25:06.422382777 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-svn-fe	2017-10-10 14:28:54.902374403 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2 and test-svn-fe.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3 and test-svn-fe.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-svn-fe" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-urlmatch-normalization /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-urlmatch-normalization
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-urlmatch-normalization	2017-10-10 14:25:06.426382777 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-urlmatch-normalization	2017-10-10 14:28:54.906374403 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2 and test-urlmatch-normalization.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3 and test-urlmatch-normalization.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-urlmatch-normalization" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-wildmatch /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-wildmatch
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers/test-wildmatch	2017-10-10 14:25:06.426382777 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers/test-wildmatch	2017-10-10 14:28:54.906374403 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2 and test-wildmatch.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3 and test-wildmatch.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-wildmatch" "$@"
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bisect.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bisect.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bisect.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bisect.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/blob.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/blob.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/blob.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/blob.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/block-sha1/sha1.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/block-sha1/sha1.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/block-sha1/sha1.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/block-sha1/sha1.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/branch.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/branch.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/branch.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/branch.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/build_ir.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/build_ir.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/build_ir.sh	2017-10-10 14:25:06.446382776 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/build_ir.sh	2017-10-10 14:28:54.934374402 +0800
@@ -11,1602 +11,1602 @@
 	then
 		succ=`expr $succ + 1`;
 	fi
 	total=`expr $total + 1`;
 }
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/credential-store.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/credential-store.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/credential-store.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/credential-store.c.bc
 check
-echo "1 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/credential-store.c to bc" >&2
+echo "1 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/credential-store.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/abspath.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/abspath.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/abspath.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/abspath.c.bc
 check
-echo "2 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/abspath.c to bc" >&2
+echo "2 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/abspath.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/advice.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/advice.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/advice.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/advice.c.bc
 check
-echo "3 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/advice.c to bc" >&2
+echo "3 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/advice.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/alias.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/alias.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/alias.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/alias.c.bc
 check
-echo "4 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/alias.c to bc" >&2
+echo "4 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/alias.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/alloc.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/alloc.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/alloc.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/alloc.c.bc
 check
-echo "5 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/alloc.c to bc" >&2
+echo "5 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/alloc.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/archive.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/archive.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/archive.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/archive.c.bc
 check
-echo "6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/archive.c to bc" >&2
+echo "6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/archive.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/archive-tar.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/archive-tar.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/archive-tar.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/archive-tar.c.bc
 check
-echo "7 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/archive-tar.c to bc" >&2
+echo "7 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/archive-tar.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/archive-zip.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/archive-zip.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/archive-zip.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/archive-zip.c.bc
 check
-echo "8 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/archive-zip.c to bc" >&2
+echo "8 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/archive-zip.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/argv-array.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/argv-array.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/argv-array.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/argv-array.c.bc
 check
-echo "9 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/argv-array.c to bc" >&2
+echo "9 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/argv-array.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DETC_GITATTRIBUTES=\"/usr/local/etc/gitattributes\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/attr.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/attr.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DETC_GITATTRIBUTES=\"/usr/local/etc/gitattributes\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/attr.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/attr.c.bc
 check
-echo "10 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/attr.c to bc" >&2
+echo "10 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/attr.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/base85.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/base85.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/base85.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/base85.c.bc
 check
-echo "11 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/base85.c to bc" >&2
+echo "11 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/base85.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bisect.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bisect.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bisect.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bisect.c.bc
 check
-echo "12 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bisect.c to bc" >&2
+echo "12 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bisect.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/blob.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/blob.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/blob.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/blob.c.bc
 check
-echo "13 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/blob.c to bc" >&2
+echo "13 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/blob.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/branch.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/branch.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/branch.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/branch.c.bc
 check
-echo "14 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/branch.c to bc" >&2
+echo "14 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/branch.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bulk-checkin.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bulk-checkin.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bulk-checkin.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bulk-checkin.c.bc
 check
-echo "15 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bulk-checkin.c to bc" >&2
+echo "15 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bulk-checkin.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bundle.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bundle.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bundle.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bundle.c.bc
 check
-echo "16 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bundle.c to bc" >&2
+echo "16 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bundle.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/cache-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/cache-tree.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/cache-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/cache-tree.c.bc
 check
-echo "17 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/cache-tree.c to bc" >&2
+echo "17 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/cache-tree.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/color.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/color.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/color.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/color.c.bc
 check
-echo "18 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/color.c to bc" >&2
+echo "18 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/color.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/column.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/column.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/column.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/column.c.bc
 check
-echo "19 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/column.c to bc" >&2
+echo "19 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/column.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/combine-diff.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/combine-diff.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/combine-diff.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/combine-diff.c.bc
 check
-echo "20 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/combine-diff.c to bc" >&2
+echo "20 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/combine-diff.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/commit.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/commit.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/commit.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/commit.c.bc
 check
-echo "21 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/commit.c to bc" >&2
+echo "21 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/commit.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/compat/obstack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/compat/obstack.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/compat/obstack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/compat/obstack.c.bc
 check
-echo "22 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/compat/obstack.c to bc" >&2
+echo "22 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/compat/obstack.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/compat/terminal.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/compat/terminal.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/compat/terminal.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/compat/terminal.c.bc
 check
-echo "23 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/compat/terminal.c to bc" >&2
+echo "23 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/compat/terminal.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DETC_GITCONFIG=\"/usr/local/etc/gitconfig\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/config.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/config.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DETC_GITCONFIG=\"/usr/local/etc/gitconfig\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/config.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/config.c.bc
 check
-echo "24 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/config.c to bc" >&2
+echo "24 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/config.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/connect.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/connect.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/connect.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/connect.c.bc
 check
-echo "25 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/connect.c to bc" >&2
+echo "25 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/connect.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/connected.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/connected.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/connected.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/connected.c.bc
 check
-echo "26 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/connected.c to bc" >&2
+echo "26 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/connected.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/convert.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/convert.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/convert.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/convert.c.bc
 check
-echo "27 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/convert.c to bc" >&2
+echo "27 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/convert.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/copy.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/copy.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/copy.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/copy.c.bc
 check
-echo "28 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/copy.c to bc" >&2
+echo "28 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/copy.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/credential.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/credential.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/credential.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/credential.c.bc
 check
-echo "29 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/credential.c to bc" >&2
+echo "29 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/credential.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/csum-file.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/csum-file.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/csum-file.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/csum-file.c.bc
 check
-echo "30 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/csum-file.c to bc" >&2
+echo "30 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/csum-file.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ctype.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ctype.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ctype.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ctype.c.bc
 check
-echo "31 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ctype.c to bc" >&2
+echo "31 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ctype.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/date.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/date.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/date.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/date.c.bc
 check
-echo "32 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/date.c to bc" >&2
+echo "32 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/date.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/decorate.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/decorate.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/decorate.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/decorate.c.bc
 check
-echo "33 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/decorate.c to bc" >&2
+echo "33 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/decorate.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diffcore-break.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diffcore-break.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diffcore-break.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diffcore-break.c.bc
 check
-echo "34 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diffcore-break.c to bc" >&2
+echo "34 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diffcore-break.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diffcore-delta.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diffcore-delta.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diffcore-delta.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diffcore-delta.c.bc
 check
-echo "35 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diffcore-delta.c to bc" >&2
+echo "35 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diffcore-delta.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diffcore-order.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diffcore-order.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diffcore-order.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diffcore-order.c.bc
 check
-echo "36 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diffcore-order.c to bc" >&2
+echo "36 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diffcore-order.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diffcore-pickaxe.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diffcore-pickaxe.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diffcore-pickaxe.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diffcore-pickaxe.c.bc
 check
-echo "37 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diffcore-pickaxe.c to bc" >&2
+echo "37 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diffcore-pickaxe.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diffcore-rename.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diffcore-rename.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diffcore-rename.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diffcore-rename.c.bc
 check
-echo "38 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diffcore-rename.c to bc" >&2
+echo "38 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diffcore-rename.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diff-delta.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diff-delta.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diff-delta.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diff-delta.c.bc
 check
-echo "39 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diff-delta.c to bc" >&2
+echo "39 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diff-delta.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diff-lib.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diff-lib.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diff-lib.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diff-lib.c.bc
 check
-echo "40 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diff-lib.c to bc" >&2
+echo "40 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diff-lib.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diff-no-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diff-no-index.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diff-no-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diff-no-index.c.bc
 check
-echo "41 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diff-no-index.c to bc" >&2
+echo "41 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diff-no-index.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diff.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diff.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diff.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diff.c.bc
 check
-echo "42 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diff.c to bc" >&2
+echo "42 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diff.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/dir.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/dir.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/dir.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/dir.c.bc
 check
-echo "43 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/dir.c to bc" >&2
+echo "43 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/dir.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/editor.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/editor.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/editor.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/editor.c.bc
 check
-echo "44 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/editor.c to bc" >&2
+echo "44 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/editor.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/entry.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/entry.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/entry.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/entry.c.bc
 check
-echo "45 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/entry.c to bc" >&2
+echo "45 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/entry.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/environment.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/environment.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/environment.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/environment.c.bc
 check
-echo "46 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/environment.c to bc" >&2
+echo "46 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/environment.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ewah/bitmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ewah/bitmap.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ewah/bitmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ewah/bitmap.c.bc
 check
-echo "47 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ewah/bitmap.c to bc" >&2
+echo "47 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ewah/bitmap.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ewah/ewah_bitmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ewah/ewah_bitmap.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ewah/ewah_bitmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ewah/ewah_bitmap.c.bc
 check
-echo "48 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ewah/ewah_bitmap.c to bc" >&2
+echo "48 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ewah/ewah_bitmap.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ewah/ewah_io.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ewah/ewah_io.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ewah/ewah_io.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ewah/ewah_io.c.bc
 check
-echo "49 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ewah/ewah_io.c to bc" >&2
+echo "49 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ewah/ewah_io.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ewah/ewah_rlw.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ewah/ewah_rlw.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ewah/ewah_rlw.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ewah/ewah_rlw.c.bc
 check
-echo "50 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ewah/ewah_rlw.c to bc" >&2
+echo "50 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ewah/ewah_rlw.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_EXEC_PATH=\"/usr/local/libexec/git-core\" -DBINDIR=\"bin\" -DPREFIX=\"/usr/local\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/exec_cmd.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/exec_cmd.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_EXEC_PATH=\"/usr/local/libexec/git-core\" -DBINDIR=\"bin\" -DPREFIX=\"/usr/local\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/exec_cmd.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/exec_cmd.c.bc
 check
-echo "51 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/exec_cmd.c to bc" >&2
+echo "51 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/exec_cmd.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/fetch-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/fetch-pack.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/fetch-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/fetch-pack.c.bc
 check
-echo "52 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/fetch-pack.c to bc" >&2
+echo "52 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/fetch-pack.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/fsck.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/fsck.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/fsck.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/fsck.c.bc
 check
-echo "53 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/fsck.c to bc" >&2
+echo "53 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/fsck.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_LOCALE_PATH=\"/usr/local/share/locale\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/gettext.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/gettext.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_LOCALE_PATH=\"/usr/local/share/locale\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/gettext.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/gettext.c.bc
 check
-echo "54 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/gettext.c to bc" >&2
+echo "54 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/gettext.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/gpg-interface.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/gpg-interface.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/gpg-interface.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/gpg-interface.c.bc
 check
-echo "55 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/gpg-interface.c to bc" >&2
+echo "55 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/gpg-interface.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/graph.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/graph.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/graph.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/graph.c.bc
 check
-echo "56 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/graph.c to bc" >&2
+echo "56 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/graph.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/grep.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/grep.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/grep.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/grep.c.bc
 check
-echo "57 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/grep.c to bc" >&2
+echo "57 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/grep.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/hashmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/hashmap.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/hashmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/hashmap.c.bc
 check
-echo "58 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/hashmap.c to bc" >&2
+echo "58 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/hashmap.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/help.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/help.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/help.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/help.c.bc
 check
-echo "59 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/help.c to bc" >&2
+echo "59 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/help.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/hex.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/hex.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/hex.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/hex.c.bc
 check
-echo "60 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/hex.c to bc" >&2
+echo "60 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/hex.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ident.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ident.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ident.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ident.c.bc
 check
-echo "61 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ident.c to bc" >&2
+echo "61 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ident.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/kwset.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/kwset.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/kwset.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/kwset.c.bc
 check
-echo "62 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/kwset.c to bc" >&2
+echo "62 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/kwset.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/levenshtein.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/levenshtein.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/levenshtein.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/levenshtein.c.bc
 check
-echo "63 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/levenshtein.c to bc" >&2
+echo "63 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/levenshtein.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/line-log.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/line-log.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/line-log.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/line-log.c.bc
 check
-echo "64 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/line-log.c to bc" >&2
+echo "64 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/line-log.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/line-range.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/line-range.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/line-range.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/line-range.c.bc
 check
-echo "65 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/line-range.c to bc" >&2
+echo "65 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/line-range.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/list-objects.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/list-objects.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/list-objects.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/list-objects.c.bc
 check
-echo "66 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/list-objects.c to bc" >&2
+echo "66 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/list-objects.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ll-merge.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ll-merge.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ll-merge.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ll-merge.c.bc
 check
-echo "67 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ll-merge.c to bc" >&2
+echo "67 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ll-merge.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/lockfile.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/lockfile.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/lockfile.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/lockfile.c.bc
 check
-echo "68 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/lockfile.c to bc" >&2
+echo "68 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/lockfile.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/log-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/log-tree.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/log-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/log-tree.c.bc
 check
-echo "69 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/log-tree.c to bc" >&2
+echo "69 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/log-tree.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/mailmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/mailmap.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/mailmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/mailmap.c.bc
 check
-echo "70 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/mailmap.c to bc" >&2
+echo "70 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/mailmap.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/match-trees.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/match-trees.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/match-trees.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/match-trees.c.bc
 check
-echo "71 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/match-trees.c to bc" >&2
+echo "71 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/match-trees.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/merge.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/merge.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/merge.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/merge.c.bc
 check
-echo "72 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/merge.c to bc" >&2
+echo "72 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/merge.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/merge-blobs.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/merge-blobs.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/merge-blobs.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/merge-blobs.c.bc
 check
-echo "73 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/merge-blobs.c to bc" >&2
+echo "73 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/merge-blobs.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/merge-recursive.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/merge-recursive.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/merge-recursive.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/merge-recursive.c.bc
 check
-echo "74 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/merge-recursive.c to bc" >&2
+echo "74 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/merge-recursive.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/mergesort.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/mergesort.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/mergesort.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/mergesort.c.bc
 check
-echo "75 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/mergesort.c to bc" >&2
+echo "75 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/mergesort.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/name-hash.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/name-hash.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/name-hash.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/name-hash.c.bc
 check
-echo "76 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/name-hash.c to bc" >&2
+echo "76 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/name-hash.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/notes.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/notes.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/notes.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/notes.c.bc
 check
-echo "77 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/notes.c to bc" >&2
+echo "77 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/notes.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/notes-cache.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/notes-cache.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/notes-cache.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/notes-cache.c.bc
 check
-echo "78 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/notes-cache.c to bc" >&2
+echo "78 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/notes-cache.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/notes-merge.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/notes-merge.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/notes-merge.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/notes-merge.c.bc
 check
-echo "79 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/notes-merge.c to bc" >&2
+echo "79 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/notes-merge.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/notes-utils.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/notes-utils.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/notes-utils.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/notes-utils.c.bc
 check
-echo "80 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/notes-utils.c to bc" >&2
+echo "80 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/notes-utils.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/object.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/object.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/object.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/object.c.bc
 check
-echo "81 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/object.c to bc" >&2
+echo "81 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/object.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pack-bitmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pack-bitmap.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pack-bitmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pack-bitmap.c.bc
 check
-echo "82 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pack-bitmap.c to bc" >&2
+echo "82 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pack-bitmap.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pack-bitmap-write.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pack-bitmap-write.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pack-bitmap-write.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pack-bitmap-write.c.bc
 check
-echo "83 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pack-bitmap-write.c to bc" >&2
+echo "83 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pack-bitmap-write.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pack-check.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pack-check.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pack-check.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pack-check.c.bc
 check
-echo "84 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pack-check.c to bc" >&2
+echo "84 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pack-check.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pack-objects.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pack-objects.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pack-objects.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pack-objects.c.bc
 check
-echo "85 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pack-objects.c to bc" >&2
+echo "85 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pack-objects.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pack-revindex.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pack-revindex.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pack-revindex.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pack-revindex.c.bc
 check
-echo "86 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pack-revindex.c to bc" >&2
+echo "86 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pack-revindex.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pack-write.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pack-write.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pack-write.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pack-write.c.bc
 check
-echo "87 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pack-write.c to bc" >&2
+echo "87 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pack-write.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pager.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pager.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pager.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pager.c.bc
 check
-echo "88 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pager.c to bc" >&2
+echo "88 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pager.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/parse-options.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/parse-options.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/parse-options.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/parse-options.c.bc
 check
-echo "89 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/parse-options.c to bc" >&2
+echo "89 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/parse-options.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/parse-options-cb.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/parse-options-cb.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/parse-options-cb.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/parse-options-cb.c.bc
 check
-echo "90 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/parse-options-cb.c to bc" >&2
+echo "90 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/parse-options-cb.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/patch-delta.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/patch-delta.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/patch-delta.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/patch-delta.c.bc
 check
-echo "91 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/patch-delta.c to bc" >&2
+echo "91 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/patch-delta.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/patch-ids.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/patch-ids.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/patch-ids.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/patch-ids.c.bc
 check
-echo "92 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/patch-ids.c to bc" >&2
+echo "92 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/patch-ids.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/path.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/path.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/path.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/path.c.bc
 check
-echo "93 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/path.c to bc" >&2
+echo "93 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/path.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pathspec.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pathspec.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pathspec.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pathspec.c.bc
 check
-echo "94 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pathspec.c to bc" >&2
+echo "94 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pathspec.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pkt-line.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pkt-line.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pkt-line.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pkt-line.c.bc
 check
-echo "95 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pkt-line.c to bc" >&2
+echo "95 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pkt-line.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/preload-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/preload-index.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/preload-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/preload-index.c.bc
 check
-echo "96 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/preload-index.c to bc" >&2
+echo "96 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/preload-index.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pretty.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pretty.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pretty.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pretty.c.bc
 check
-echo "97 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pretty.c to bc" >&2
+echo "97 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pretty.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/prio-queue.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/prio-queue.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/prio-queue.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/prio-queue.c.bc
 check
-echo "98 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/prio-queue.c to bc" >&2
+echo "98 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/prio-queue.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/progress.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/progress.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/progress.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/progress.c.bc
 check
-echo "99 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/progress.c to bc" >&2
+echo "99 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/progress.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/prompt.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/prompt.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/prompt.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/prompt.c.bc
 check
-echo "100 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/prompt.c to bc" >&2
+echo "100 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/prompt.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/quote.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/quote.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/quote.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/quote.c.bc
 check
-echo "101 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/quote.c to bc" >&2
+echo "101 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/quote.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/reachable.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/reachable.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/reachable.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/reachable.c.bc
 check
-echo "102 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/reachable.c to bc" >&2
+echo "102 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/reachable.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/read-cache.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/read-cache.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/read-cache.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/read-cache.c.bc
 check
-echo "103 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/read-cache.c to bc" >&2
+echo "103 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/read-cache.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/reflog-walk.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/reflog-walk.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/reflog-walk.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/reflog-walk.c.bc
 check
-echo "104 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/reflog-walk.c to bc" >&2
+echo "104 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/reflog-walk.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/refs.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/refs.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/refs.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/refs.c.bc
 check
-echo "105 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/refs.c to bc" >&2
+echo "105 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/refs.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ref-filter.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ref-filter.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ref-filter.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ref-filter.c.bc
 check
-echo "106 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ref-filter.c to bc" >&2
+echo "106 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ref-filter.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/remote.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/remote.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/remote.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/remote.c.bc
 check
-echo "107 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/remote.c to bc" >&2
+echo "107 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/remote.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/replace_object.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/replace_object.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/replace_object.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/replace_object.c.bc
 check
-echo "108 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/replace_object.c to bc" >&2
+echo "108 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/replace_object.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/rerere.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/rerere.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/rerere.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/rerere.c.bc
 check
-echo "109 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/rerere.c to bc" >&2
+echo "109 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/rerere.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/resolve-undo.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/resolve-undo.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/resolve-undo.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/resolve-undo.c.bc
 check
-echo "110 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/resolve-undo.c to bc" >&2
+echo "110 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/resolve-undo.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/revision.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/revision.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/revision.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/revision.c.bc
 check
-echo "111 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/revision.c to bc" >&2
+echo "111 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/revision.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/run-command.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/run-command.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/run-command.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/run-command.c.bc
 check
-echo "112 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/run-command.c to bc" >&2
+echo "112 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/run-command.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/send-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/send-pack.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/send-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/send-pack.c.bc
 check
-echo "113 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/send-pack.c to bc" >&2
+echo "113 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/send-pack.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/sequencer.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/sequencer.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/sequencer.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/sequencer.c.bc
 check
-echo "114 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/sequencer.c to bc" >&2
+echo "114 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/sequencer.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/server-info.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/server-info.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/server-info.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/server-info.c.bc
 check
-echo "115 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/server-info.c to bc" >&2
+echo "115 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/server-info.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/setup.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/setup.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/setup.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/setup.c.bc
 check
-echo "116 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/setup.c to bc" >&2
+echo "116 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/setup.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/sha1-array.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/sha1-array.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/sha1-array.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/sha1-array.c.bc
 check
-echo "117 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/sha1-array.c to bc" >&2
+echo "117 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/sha1-array.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/sha1-lookup.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/sha1-lookup.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/sha1-lookup.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/sha1-lookup.c.bc
 check
-echo "118 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/sha1-lookup.c to bc" >&2
+echo "118 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/sha1-lookup.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/sha1_file.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/sha1_file.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/sha1_file.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/sha1_file.c.bc
 check
-echo "119 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/sha1_file.c to bc" >&2
+echo "119 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/sha1_file.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/sha1_name.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/sha1_name.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/sha1_name.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/sha1_name.c.bc
 check
-echo "120 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/sha1_name.c to bc" >&2
+echo "120 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/sha1_name.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/shallow.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/shallow.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/shallow.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/shallow.c.bc
 check
-echo "121 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/shallow.c to bc" >&2
+echo "121 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/shallow.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/sideband.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/sideband.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/sideband.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/sideband.c.bc
 check
-echo "122 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/sideband.c to bc" >&2
+echo "122 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/sideband.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/sigchain.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/sigchain.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/sigchain.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/sigchain.c.bc
 check
-echo "123 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/sigchain.c to bc" >&2
+echo "123 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/sigchain.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/split-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/split-index.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/split-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/split-index.c.bc
 check
-echo "124 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/split-index.c to bc" >&2
+echo "124 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/split-index.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/strbuf.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/strbuf.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/strbuf.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/strbuf.c.bc
 check
-echo "125 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/strbuf.c to bc" >&2
+echo "125 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/strbuf.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/streaming.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/streaming.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/streaming.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/streaming.c.bc
 check
-echo "126 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/streaming.c to bc" >&2
+echo "126 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/streaming.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/string-list.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/string-list.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/string-list.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/string-list.c.bc
 check
-echo "127 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/string-list.c to bc" >&2
+echo "127 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/string-list.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/submodule.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/submodule.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/submodule.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/submodule.c.bc
 check
-echo "128 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/submodule.c to bc" >&2
+echo "128 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/submodule.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/submodule-config.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/submodule-config.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/submodule-config.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/submodule-config.c.bc
 check
-echo "129 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/submodule-config.c to bc" >&2
+echo "129 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/submodule-config.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/symlinks.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/symlinks.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/symlinks.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/symlinks.c.bc
 check
-echo "130 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/symlinks.c to bc" >&2
+echo "130 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/symlinks.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/tag.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/tag.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/tag.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/tag.c.bc
 check
-echo "131 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/tag.c to bc" >&2
+echo "131 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/tag.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/tempfile.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/tempfile.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/tempfile.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/tempfile.c.bc
 check
-echo "132 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/tempfile.c to bc" >&2
+echo "132 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/tempfile.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/trace.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/trace.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/trace.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/trace.c.bc
 check
-echo "133 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/trace.c to bc" >&2
+echo "133 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/trace.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/trailer.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/trailer.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/trailer.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/trailer.c.bc
 check
-echo "134 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/trailer.c to bc" >&2
+echo "134 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/trailer.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/transport.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/transport.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/transport.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/transport.c.bc
 check
-echo "135 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/transport.c to bc" >&2
+echo "135 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/transport.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/transport-helper.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/transport-helper.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/transport-helper.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/transport-helper.c.bc
 check
-echo "136 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/transport-helper.c to bc" >&2
+echo "136 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/transport-helper.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/tree-diff.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/tree-diff.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/tree-diff.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/tree-diff.c.bc
 check
-echo "137 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/tree-diff.c to bc" >&2
+echo "137 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/tree-diff.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/tree.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/tree.c.bc
 check
-echo "138 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/tree.c to bc" >&2
+echo "138 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/tree.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/tree-walk.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/tree-walk.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/tree-walk.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/tree-walk.c.bc
 check
-echo "139 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/tree-walk.c to bc" >&2
+echo "139 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/tree-walk.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/unpack-trees.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/unpack-trees.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/unpack-trees.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/unpack-trees.c.bc
 check
-echo "140 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/unpack-trees.c to bc" >&2
+echo "140 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/unpack-trees.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/url.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/url.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/url.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/url.c.bc
 check
-echo "141 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/url.c to bc" >&2
+echo "141 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/url.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/urlmatch.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/urlmatch.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/urlmatch.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/urlmatch.c.bc
 check
-echo "142 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/urlmatch.c to bc" >&2
+echo "142 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/urlmatch.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/usage.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/usage.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/usage.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/usage.c.bc
 check
-echo "143 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/usage.c to bc" >&2
+echo "143 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/usage.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/userdiff.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/userdiff.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/userdiff.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/userdiff.c.bc
 check
-echo "144 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/userdiff.c to bc" >&2
+echo "144 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/userdiff.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/utf8.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/utf8.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/utf8.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/utf8.c.bc
 check
-echo "145 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/utf8.c to bc" >&2
+echo "145 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/utf8.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/varint.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/varint.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/varint.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/varint.c.bc
 check
-echo "146 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/varint.c to bc" >&2
+echo "146 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/varint.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_VERSION=\"2.6.2\" -DGIT_USER_AGENT=\"git/2.6.2\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/version.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/version.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_VERSION=\"2.6.3\" -DGIT_USER_AGENT=\"git/2.6.3\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/version.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/version.c.bc
 check
-echo "147 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/version.c to bc" >&2
+echo "147 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/version.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/versioncmp.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/versioncmp.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/versioncmp.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/versioncmp.c.bc
 check
-echo "148 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/versioncmp.c to bc" >&2
+echo "148 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/versioncmp.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/walker.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/walker.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/walker.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/walker.c.bc
 check
-echo "149 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/walker.c to bc" >&2
+echo "149 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/walker.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/wildmatch.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/wildmatch.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/wildmatch.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/wildmatch.c.bc
 check
-echo "150 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/wildmatch.c to bc" >&2
+echo "150 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/wildmatch.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/wrapper.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/wrapper.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/wrapper.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/wrapper.c.bc
 check
-echo "151 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/wrapper.c to bc" >&2
+echo "151 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/wrapper.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/write_or_die.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/write_or_die.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/write_or_die.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/write_or_die.c.bc
 check
-echo "152 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/write_or_die.c to bc" >&2
+echo "152 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/write_or_die.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ws.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ws.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ws.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ws.c.bc
 check
-echo "153 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ws.c to bc" >&2
+echo "153 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ws.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/wt-status.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/wt-status.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/wt-status.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/wt-status.c.bc
 check
-echo "154 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/wt-status.c to bc" >&2
+echo "154 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/wt-status.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/xdiff-interface.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/xdiff-interface.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/xdiff-interface.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/xdiff-interface.c.bc
 check
-echo "155 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/xdiff-interface.c to bc" >&2
+echo "155 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/xdiff-interface.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/zlib.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/zlib.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/zlib.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/zlib.c.bc
 check
-echo "156 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/zlib.c to bc" >&2
+echo "156 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/zlib.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/unix-socket.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/unix-socket.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/unix-socket.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/unix-socket.c.bc
 check
-echo "157 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/unix-socket.c to bc" >&2
+echo "157 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/unix-socket.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/block-sha1/sha1.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/block-sha1/sha1.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/block-sha1/sha1.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/block-sha1/sha1.c.bc
 check
-echo "158 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/block-sha1/sha1.c to bc" >&2
+echo "158 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/block-sha1/sha1.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/thread-utils.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/thread-utils.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/thread-utils.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/thread-utils.c.bc
 check
-echo "159 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/thread-utils.c to bc" >&2
+echo "159 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/thread-utils.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/compat/strlcpy.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/compat/strlcpy.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/compat/strlcpy.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/compat/strlcpy.c.bc
 check
-echo "160 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/compat/strlcpy.c to bc" >&2
+echo "160 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/compat/strlcpy.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/xdiff/xdiffi.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/xdiff/xdiffi.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/xdiff/xdiffi.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/xdiff/xdiffi.c.bc
 check
-echo "161 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/xdiff/xdiffi.c to bc" >&2
+echo "161 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/xdiff/xdiffi.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/xdiff/xprepare.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/xdiff/xprepare.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/xdiff/xprepare.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/xdiff/xprepare.c.bc
 check
-echo "162 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/xdiff/xprepare.c to bc" >&2
+echo "162 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/xdiff/xprepare.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/xdiff/xutils.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/xdiff/xutils.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/xdiff/xutils.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/xdiff/xutils.c.bc
 check
-echo "163 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/xdiff/xutils.c to bc" >&2
+echo "163 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/xdiff/xutils.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/xdiff/xemit.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/xdiff/xemit.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/xdiff/xemit.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/xdiff/xemit.c.bc
 check
-echo "164 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/xdiff/xemit.c to bc" >&2
+echo "164 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/xdiff/xemit.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/xdiff/xmerge.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/xdiff/xmerge.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/xdiff/xmerge.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/xdiff/xmerge.c.bc
 check
-echo "165 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/xdiff/xmerge.c to bc" >&2
+echo "165 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/xdiff/xmerge.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/xdiff/xpatience.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/xdiff/xpatience.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/xdiff/xpatience.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/xdiff/xpatience.c.bc
 check
-echo "166 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/xdiff/xpatience.c to bc" >&2
+echo "166 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/xdiff/xpatience.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/xdiff/xhistogram.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/xdiff/xhistogram.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/xdiff/xhistogram.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/xdiff/xhistogram.c.bc
 check
-echo "167 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/xdiff/xhistogram.c to bc" >&2
+echo "167 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/xdiff/xhistogram.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/daemon.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/daemon.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/daemon.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/daemon.c.bc
 check
-echo "168 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/daemon.c to bc" >&2
+echo "168 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/daemon.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/fast-import.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/fast-import.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/fast-import.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/fast-import.c.bc
 check
-echo "169 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/fast-import.c to bc" >&2
+echo "169 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/fast-import.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/http-backend.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/http-backend.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/http-backend.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/http-backend.c.bc
 check
-echo "170 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/http-backend.c to bc" >&2
+echo "170 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/http-backend.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/imap-send.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/imap-send.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/imap-send.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/imap-send.c.bc
 check
-echo "171 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/imap-send.c to bc" >&2
+echo "171 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/imap-send.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/sh-i18n--envsubst.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/sh-i18n--envsubst.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/sh-i18n--envsubst.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/sh-i18n--envsubst.c.bc
 check
-echo "172 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/sh-i18n--envsubst.c to bc" >&2
+echo "172 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/sh-i18n--envsubst.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/shell.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/shell.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/shell.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/shell.c.bc
 check
-echo "173 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/shell.c to bc" >&2
+echo "173 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/shell.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/show-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/show-index.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/show-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/show-index.c.bc
 check
-echo "174 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/show-index.c to bc" >&2
+echo "174 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/show-index.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/upload-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/upload-pack.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/upload-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/upload-pack.c.bc
 check
-echo "175 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/upload-pack.c to bc" >&2
+echo "175 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/upload-pack.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/remote-testsvn.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/remote-testsvn.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/remote-testsvn.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/remote-testsvn.c.bc
 check
-echo "176 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/remote-testsvn.c to bc" >&2
+echo "176 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/remote-testsvn.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/vcs-svn/line_buffer.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/vcs-svn/line_buffer.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/vcs-svn/line_buffer.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/vcs-svn/line_buffer.c.bc
 check
-echo "177 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/vcs-svn/line_buffer.c to bc" >&2
+echo "177 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/vcs-svn/line_buffer.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/vcs-svn/sliding_window.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/vcs-svn/sliding_window.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/vcs-svn/sliding_window.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/vcs-svn/sliding_window.c.bc
 check
-echo "178 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/vcs-svn/sliding_window.c to bc" >&2
+echo "178 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/vcs-svn/sliding_window.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/vcs-svn/repo_tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/vcs-svn/repo_tree.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/vcs-svn/repo_tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/vcs-svn/repo_tree.c.bc
 check
-echo "179 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/vcs-svn/repo_tree.c to bc" >&2
+echo "179 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/vcs-svn/repo_tree.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/vcs-svn/fast_export.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/vcs-svn/fast_export.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/vcs-svn/fast_export.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/vcs-svn/fast_export.c.bc
 check
-echo "180 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/vcs-svn/fast_export.c to bc" >&2
+echo "180 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/vcs-svn/fast_export.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/vcs-svn/svndiff.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/vcs-svn/svndiff.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/vcs-svn/svndiff.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/vcs-svn/svndiff.c.bc
 check
-echo "181 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/vcs-svn/svndiff.c to bc" >&2
+echo "181 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/vcs-svn/svndiff.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/vcs-svn/svndump.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/vcs-svn/svndump.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/vcs-svn/svndump.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/vcs-svn/svndump.c.bc
 check
-echo "182 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/vcs-svn/svndump.c to bc" >&2
+echo "182 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/vcs-svn/svndump.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/credential-cache.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/credential-cache.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/credential-cache.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/credential-cache.c.bc
 check
-echo "183 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/credential-cache.c to bc" >&2
+echo "183 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/credential-cache.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/credential-cache--daemon.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/credential-cache--daemon.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/credential-cache--daemon.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/credential-cache--daemon.c.bc
 check
-echo "184 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/credential-cache--daemon.c to bc" >&2
+echo "184 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/credential-cache--daemon.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_HTML_PATH=\"share/doc/git\" -DGIT_MAN_PATH=\"share/man\" -DGIT_INFO_PATH=\"share/info\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_HTML_PATH=\"share/doc/git\" -DGIT_MAN_PATH=\"share/man\" -DGIT_INFO_PATH=\"share/info\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git.c.bc
 check
-echo "185 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git.c to bc" >&2
+echo "185 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/add.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/add.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/add.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/add.c.bc
 check
-echo "186 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/add.c to bc" >&2
+echo "186 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/add.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/am.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/am.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/am.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/am.c.bc
 check
-echo "187 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/am.c to bc" >&2
+echo "187 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/am.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/annotate.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/annotate.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/annotate.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/annotate.c.bc
 check
-echo "188 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/annotate.c to bc" >&2
+echo "188 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/annotate.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/apply.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/apply.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/apply.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/apply.c.bc
 check
-echo "189 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/apply.c to bc" >&2
+echo "189 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/apply.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/archive.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/archive.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/archive.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/archive.c.bc
 check
-echo "190 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/archive.c to bc" >&2
+echo "190 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/archive.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/bisect--helper.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/bisect--helper.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/bisect--helper.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/bisect--helper.c.bc
 check
-echo "191 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/bisect--helper.c to bc" >&2
+echo "191 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/bisect--helper.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/blame.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/blame.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/blame.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/blame.c.bc
 check
-echo "192 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/blame.c to bc" >&2
+echo "192 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/blame.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/branch.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/branch.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/branch.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/branch.c.bc
 check
-echo "193 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/branch.c to bc" >&2
+echo "193 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/branch.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/bundle.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/bundle.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/bundle.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/bundle.c.bc
 check
-echo "194 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/bundle.c to bc" >&2
+echo "194 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/bundle.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/cat-file.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/cat-file.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/cat-file.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/cat-file.c.bc
 check
-echo "195 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/cat-file.c to bc" >&2
+echo "195 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/cat-file.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/check-attr.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/check-attr.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/check-attr.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/check-attr.c.bc
 check
-echo "196 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/check-attr.c to bc" >&2
+echo "196 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/check-attr.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/check-ignore.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/check-ignore.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/check-ignore.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/check-ignore.c.bc
 check
-echo "197 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/check-ignore.c to bc" >&2
+echo "197 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/check-ignore.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/check-mailmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/check-mailmap.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/check-mailmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/check-mailmap.c.bc
 check
-echo "198 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/check-mailmap.c to bc" >&2
+echo "198 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/check-mailmap.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/check-ref-format.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/check-ref-format.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/check-ref-format.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/check-ref-format.c.bc
 check
-echo "199 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/check-ref-format.c to bc" >&2
+echo "199 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/check-ref-format.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/checkout-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/checkout-index.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/checkout-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/checkout-index.c.bc
 check
-echo "200 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/checkout-index.c to bc" >&2
+echo "200 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/checkout-index.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/checkout.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/checkout.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/checkout.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/checkout.c.bc
 check
-echo "201 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/checkout.c to bc" >&2
+echo "201 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/checkout.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/clean.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/clean.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/clean.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/clean.c.bc
 check
-echo "202 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/clean.c to bc" >&2
+echo "202 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/clean.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/clone.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/clone.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/clone.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/clone.c.bc
 check
-echo "203 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/clone.c to bc" >&2
+echo "203 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/clone.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/column.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/column.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/column.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/column.c.bc
 check
-echo "204 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/column.c to bc" >&2
+echo "204 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/column.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/commit-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/commit-tree.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/commit-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/commit-tree.c.bc
 check
-echo "205 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/commit-tree.c to bc" >&2
+echo "205 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/commit-tree.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/commit.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/commit.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/commit.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/commit.c.bc
 check
-echo "206 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/commit.c to bc" >&2
+echo "206 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/commit.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/config.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/config.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/config.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/config.c.bc
 check
-echo "207 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/config.c to bc" >&2
+echo "207 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/config.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/count-objects.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/count-objects.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/count-objects.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/count-objects.c.bc
 check
-echo "208 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/count-objects.c to bc" >&2
+echo "208 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/count-objects.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/credential.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/credential.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/credential.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/credential.c.bc
 check
-echo "209 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/credential.c to bc" >&2
+echo "209 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/credential.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/describe.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/describe.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/describe.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/describe.c.bc
 check
-echo "210 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/describe.c to bc" >&2
+echo "210 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/describe.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/diff-files.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/diff-files.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/diff-files.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/diff-files.c.bc
 check
-echo "211 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/diff-files.c to bc" >&2
+echo "211 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/diff-files.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/diff-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/diff-index.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/diff-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/diff-index.c.bc
 check
-echo "212 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/diff-index.c to bc" >&2
+echo "212 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/diff-index.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/diff-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/diff-tree.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/diff-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/diff-tree.c.bc
 check
-echo "213 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/diff-tree.c to bc" >&2
+echo "213 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/diff-tree.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/diff.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/diff.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/diff.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/diff.c.bc
 check
-echo "214 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/diff.c to bc" >&2
+echo "214 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/diff.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/fast-export.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/fast-export.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/fast-export.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/fast-export.c.bc
 check
-echo "215 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/fast-export.c to bc" >&2
+echo "215 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/fast-export.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/fetch-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/fetch-pack.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/fetch-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/fetch-pack.c.bc
 check
-echo "216 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/fetch-pack.c to bc" >&2
+echo "216 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/fetch-pack.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/fetch.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/fetch.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/fetch.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/fetch.c.bc
 check
-echo "217 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/fetch.c to bc" >&2
+echo "217 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/fetch.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/fmt-merge-msg.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/fmt-merge-msg.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/fmt-merge-msg.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/fmt-merge-msg.c.bc
 check
-echo "218 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/fmt-merge-msg.c to bc" >&2
+echo "218 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/fmt-merge-msg.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/for-each-ref.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/for-each-ref.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/for-each-ref.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/for-each-ref.c.bc
 check
-echo "219 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/for-each-ref.c to bc" >&2
+echo "219 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/for-each-ref.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/fsck.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/fsck.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/fsck.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/fsck.c.bc
 check
-echo "220 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/fsck.c to bc" >&2
+echo "220 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/fsck.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/gc.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/gc.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/gc.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/gc.c.bc
 check
-echo "221 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/gc.c to bc" >&2
+echo "221 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/gc.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/get-tar-commit-id.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/get-tar-commit-id.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/get-tar-commit-id.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/get-tar-commit-id.c.bc
 check
-echo "222 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/get-tar-commit-id.c to bc" >&2
+echo "222 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/get-tar-commit-id.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/grep.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/grep.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/grep.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/grep.c.bc
 check
-echo "223 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/grep.c to bc" >&2
+echo "223 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/grep.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/hash-object.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/hash-object.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/hash-object.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/hash-object.c.bc
 check
-echo "224 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/hash-object.c to bc" >&2
+echo "224 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/hash-object.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_HTML_PATH=\"share/doc/git\" -DGIT_MAN_PATH=\"share/man\" -DGIT_INFO_PATH=\"share/info\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/help.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/help.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_HTML_PATH=\"share/doc/git\" -DGIT_MAN_PATH=\"share/man\" -DGIT_INFO_PATH=\"share/info\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/help.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/help.c.bc
 check
-echo "225 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/help.c to bc" >&2
+echo "225 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/help.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/index-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/index-pack.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/index-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/index-pack.c.bc
 check
-echo "226 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/index-pack.c to bc" >&2
+echo "226 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/index-pack.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DDEFAULT_GIT_TEMPLATE_DIR=\"/usr/local/share/git-core/templates\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/init-db.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/init-db.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DDEFAULT_GIT_TEMPLATE_DIR=\"/usr/local/share/git-core/templates\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/init-db.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/init-db.c.bc
 check
-echo "227 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/init-db.c to bc" >&2
+echo "227 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/init-db.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/interpret-trailers.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/interpret-trailers.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/interpret-trailers.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/interpret-trailers.c.bc
 check
-echo "228 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/interpret-trailers.c to bc" >&2
+echo "228 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/interpret-trailers.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/log.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/log.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/log.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/log.c.bc
 check
-echo "229 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/log.c to bc" >&2
+echo "229 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/log.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/ls-files.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/ls-files.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/ls-files.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/ls-files.c.bc
 check
-echo "230 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/ls-files.c to bc" >&2
+echo "230 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/ls-files.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/ls-remote.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/ls-remote.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/ls-remote.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/ls-remote.c.bc
 check
-echo "231 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/ls-remote.c to bc" >&2
+echo "231 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/ls-remote.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/ls-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/ls-tree.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/ls-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/ls-tree.c.bc
 check
-echo "232 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/ls-tree.c to bc" >&2
+echo "232 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/ls-tree.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/mailinfo.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/mailinfo.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/mailinfo.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/mailinfo.c.bc
 check
-echo "233 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/mailinfo.c to bc" >&2
+echo "233 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/mailinfo.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/mailsplit.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/mailsplit.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/mailsplit.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/mailsplit.c.bc
 check
-echo "234 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/mailsplit.c to bc" >&2
+echo "234 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/mailsplit.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/merge.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/merge.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/merge.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/merge.c.bc
 check
-echo "235 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/merge.c to bc" >&2
+echo "235 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/merge.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/merge-base.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/merge-base.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/merge-base.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/merge-base.c.bc
 check
-echo "236 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/merge-base.c to bc" >&2
+echo "236 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/merge-base.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/merge-file.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/merge-file.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/merge-file.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/merge-file.c.bc
 check
-echo "237 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/merge-file.c to bc" >&2
+echo "237 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/merge-file.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/merge-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/merge-index.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/merge-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/merge-index.c.bc
 check
-echo "238 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/merge-index.c to bc" >&2
+echo "238 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/merge-index.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/merge-ours.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/merge-ours.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/merge-ours.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/merge-ours.c.bc
 check
-echo "239 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/merge-ours.c to bc" >&2
+echo "239 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/merge-ours.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/merge-recursive.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/merge-recursive.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/merge-recursive.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/merge-recursive.c.bc
 check
-echo "240 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/merge-recursive.c to bc" >&2
+echo "240 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/merge-recursive.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/merge-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/merge-tree.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/merge-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/merge-tree.c.bc
 check
-echo "241 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/merge-tree.c to bc" >&2
+echo "241 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/merge-tree.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/mktag.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/mktag.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/mktag.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/mktag.c.bc
 check
-echo "242 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/mktag.c to bc" >&2
+echo "242 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/mktag.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/mktree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/mktree.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/mktree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/mktree.c.bc
 check
-echo "243 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/mktree.c to bc" >&2
+echo "243 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/mktree.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/mv.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/mv.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/mv.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/mv.c.bc
 check
-echo "244 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/mv.c to bc" >&2
+echo "244 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/mv.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/name-rev.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/name-rev.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/name-rev.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/name-rev.c.bc
 check
-echo "245 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/name-rev.c to bc" >&2
+echo "245 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/name-rev.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/notes.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/notes.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/notes.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/notes.c.bc
 check
-echo "246 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/notes.c to bc" >&2
+echo "246 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/notes.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/pack-objects.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/pack-objects.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/pack-objects.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/pack-objects.c.bc
 check
-echo "247 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/pack-objects.c to bc" >&2
+echo "247 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/pack-objects.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/pack-redundant.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/pack-redundant.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/pack-redundant.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/pack-redundant.c.bc
 check
-echo "248 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/pack-redundant.c to bc" >&2
+echo "248 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/pack-redundant.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/pack-refs.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/pack-refs.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/pack-refs.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/pack-refs.c.bc
 check
-echo "249 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/pack-refs.c to bc" >&2
+echo "249 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/pack-refs.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/patch-id.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/patch-id.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/patch-id.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/patch-id.c.bc
 check
-echo "250 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/patch-id.c to bc" >&2
+echo "250 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/patch-id.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/prune-packed.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/prune-packed.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/prune-packed.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/prune-packed.c.bc
 check
-echo "251 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/prune-packed.c to bc" >&2
+echo "251 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/prune-packed.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/prune.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/prune.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/prune.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/prune.c.bc
 check
-echo "252 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/prune.c to bc" >&2
+echo "252 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/prune.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/pull.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/pull.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/pull.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/pull.c.bc
 check
-echo "253 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/pull.c to bc" >&2
+echo "253 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/pull.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/push.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/push.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/push.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/push.c.bc
 check
-echo "254 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/push.c to bc" >&2
+echo "254 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/push.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/read-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/read-tree.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/read-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/read-tree.c.bc
 check
-echo "255 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/read-tree.c to bc" >&2
+echo "255 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/read-tree.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/receive-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/receive-pack.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/receive-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/receive-pack.c.bc
 check
-echo "256 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/receive-pack.c to bc" >&2
+echo "256 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/receive-pack.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/reflog.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/reflog.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/reflog.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/reflog.c.bc
 check
-echo "257 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/reflog.c to bc" >&2
+echo "257 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/reflog.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/remote.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/remote.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/remote.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/remote.c.bc
 check
-echo "258 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/remote.c to bc" >&2
+echo "258 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/remote.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/remote-ext.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/remote-ext.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/remote-ext.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/remote-ext.c.bc
 check
-echo "259 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/remote-ext.c to bc" >&2
+echo "259 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/remote-ext.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/remote-fd.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/remote-fd.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/remote-fd.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/remote-fd.c.bc
 check
-echo "260 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/remote-fd.c to bc" >&2
+echo "260 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/remote-fd.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/repack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/repack.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/repack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/repack.c.bc
 check
-echo "261 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/repack.c to bc" >&2
+echo "261 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/repack.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/replace.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/replace.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/replace.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/replace.c.bc
 check
-echo "262 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/replace.c to bc" >&2
+echo "262 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/replace.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/rerere.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/rerere.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/rerere.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/rerere.c.bc
 check
-echo "263 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/rerere.c to bc" >&2
+echo "263 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/rerere.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/reset.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/reset.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/reset.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/reset.c.bc
 check
-echo "264 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/reset.c to bc" >&2
+echo "264 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/reset.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/rev-list.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/rev-list.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/rev-list.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/rev-list.c.bc
 check
-echo "265 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/rev-list.c to bc" >&2
+echo "265 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/rev-list.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/rev-parse.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/rev-parse.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/rev-parse.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/rev-parse.c.bc
 check
-echo "266 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/rev-parse.c to bc" >&2
+echo "266 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/rev-parse.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/revert.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/revert.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/revert.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/revert.c.bc
 check
-echo "267 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/revert.c to bc" >&2
+echo "267 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/revert.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/rm.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/rm.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/rm.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/rm.c.bc
 check
-echo "268 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/rm.c to bc" >&2
+echo "268 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/rm.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/send-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/send-pack.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/send-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/send-pack.c.bc
 check
-echo "269 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/send-pack.c to bc" >&2
+echo "269 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/send-pack.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/shortlog.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/shortlog.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/shortlog.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/shortlog.c.bc
 check
-echo "270 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/shortlog.c to bc" >&2
+echo "270 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/shortlog.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/show-branch.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/show-branch.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/show-branch.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/show-branch.c.bc
 check
-echo "271 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/show-branch.c to bc" >&2
+echo "271 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/show-branch.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/show-ref.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/show-ref.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/show-ref.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/show-ref.c.bc
 check
-echo "272 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/show-ref.c to bc" >&2
+echo "272 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/show-ref.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/stripspace.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/stripspace.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/stripspace.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/stripspace.c.bc
 check
-echo "273 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/stripspace.c to bc" >&2
+echo "273 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/stripspace.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/symbolic-ref.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/symbolic-ref.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/symbolic-ref.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/symbolic-ref.c.bc
 check
-echo "274 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/symbolic-ref.c to bc" >&2
+echo "274 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/symbolic-ref.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/tag.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/tag.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/tag.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/tag.c.bc
 check
-echo "275 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/tag.c to bc" >&2
+echo "275 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/tag.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/unpack-file.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/unpack-file.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/unpack-file.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/unpack-file.c.bc
 check
-echo "276 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/unpack-file.c to bc" >&2
+echo "276 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/unpack-file.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/unpack-objects.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/unpack-objects.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/unpack-objects.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/unpack-objects.c.bc
 check
-echo "277 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/unpack-objects.c to bc" >&2
+echo "277 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/unpack-objects.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/update-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/update-index.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/update-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/update-index.c.bc
 check
-echo "278 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/update-index.c to bc" >&2
+echo "278 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/update-index.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/update-ref.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/update-ref.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/update-ref.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/update-ref.c.bc
 check
-echo "279 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/update-ref.c to bc" >&2
+echo "279 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/update-ref.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/update-server-info.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/update-server-info.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/update-server-info.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/update-server-info.c.bc
 check
-echo "280 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/update-server-info.c to bc" >&2
+echo "280 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/update-server-info.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/upload-archive.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/upload-archive.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/upload-archive.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/upload-archive.c.bc
 check
-echo "281 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/upload-archive.c to bc" >&2
+echo "281 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/upload-archive.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/var.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/var.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/var.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/var.c.bc
 check
-echo "282 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/var.c to bc" >&2
+echo "282 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/var.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/verify-commit.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/verify-commit.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/verify-commit.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/verify-commit.c.bc
 check
-echo "283 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/verify-commit.c to bc" >&2
+echo "283 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/verify-commit.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/verify-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/verify-pack.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/verify-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/verify-pack.c.bc
 check
-echo "284 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/verify-pack.c to bc" >&2
+echo "284 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/verify-pack.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/verify-tag.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/verify-tag.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/verify-tag.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/verify-tag.c.bc
 check
-echo "285 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/verify-tag.c to bc" >&2
+echo "285 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/verify-tag.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/worktree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/worktree.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/worktree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/worktree.c.bc
 check
-echo "286 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/worktree.c to bc" >&2
+echo "286 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/worktree.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/write-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/write-tree.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/write-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/write-tree.c.bc
 check
-echo "287 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/write-tree.c to bc" >&2
+echo "287 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/write-tree.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-chmtime.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-chmtime.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-chmtime.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-chmtime.c.bc
 check
-echo "288 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-chmtime.c to bc" >&2
+echo "288 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-chmtime.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-ctype.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-ctype.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-ctype.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-ctype.c.bc
 check
-echo "289 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-ctype.c to bc" >&2
+echo "289 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-ctype.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-config.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-config.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-config.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-config.c.bc
 check
-echo "290 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-config.c to bc" >&2
+echo "290 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-config.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-date.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-date.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-date.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-date.c.bc
 check
-echo "291 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-date.c to bc" >&2
+echo "291 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-date.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-delta.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-delta.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-delta.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-delta.c.bc
 check
-echo "292 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-delta.c to bc" >&2
+echo "292 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-delta.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-dump-cache-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-dump-cache-tree.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-dump-cache-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-dump-cache-tree.c.bc
 check
-echo "293 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-dump-cache-tree.c to bc" >&2
+echo "293 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-dump-cache-tree.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-dump-split-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-dump-split-index.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-dump-split-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-dump-split-index.c.bc
 check
-echo "294 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-dump-split-index.c to bc" >&2
+echo "294 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-dump-split-index.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-dump-untracked-cache.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-dump-untracked-cache.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-dump-untracked-cache.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-dump-untracked-cache.c.bc
 check
-echo "295 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-dump-untracked-cache.c to bc" >&2
+echo "295 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-dump-untracked-cache.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-genrandom.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-genrandom.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-genrandom.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-genrandom.c.bc
 check
-echo "296 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-genrandom.c to bc" >&2
+echo "296 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-genrandom.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-hashmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-hashmap.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-hashmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-hashmap.c.bc
 check
-echo "297 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-hashmap.c to bc" >&2
+echo "297 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-hashmap.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-index-version.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-index-version.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-index-version.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-index-version.c.bc
 check
-echo "298 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-index-version.c to bc" >&2
+echo "298 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-index-version.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-line-buffer.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-line-buffer.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-line-buffer.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-line-buffer.c.bc
 check
-echo "299 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-line-buffer.c to bc" >&2
+echo "299 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-line-buffer.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-match-trees.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-match-trees.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-match-trees.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-match-trees.c.bc
 check
-echo "300 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-match-trees.c to bc" >&2
+echo "300 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-match-trees.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-mergesort.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-mergesort.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-mergesort.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-mergesort.c.bc
 check
-echo "301 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-mergesort.c to bc" >&2
+echo "301 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-mergesort.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-mktemp.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-mktemp.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-mktemp.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-mktemp.c.bc
 check
-echo "302 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-mktemp.c to bc" >&2
+echo "302 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-mktemp.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-parse-options.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-parse-options.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-parse-options.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-parse-options.c.bc
 check
-echo "303 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-parse-options.c to bc" >&2
+echo "303 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-parse-options.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-path-utils.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-path-utils.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-path-utils.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-path-utils.c.bc
 check
-echo "304 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-path-utils.c to bc" >&2
+echo "304 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-path-utils.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-prio-queue.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-prio-queue.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-prio-queue.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-prio-queue.c.bc
 check
-echo "305 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-prio-queue.c to bc" >&2
+echo "305 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-prio-queue.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-read-cache.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-read-cache.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-read-cache.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-read-cache.c.bc
 check
-echo "306 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-read-cache.c to bc" >&2
+echo "306 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-read-cache.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-regex.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-regex.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-regex.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-regex.c.bc
 check
-echo "307 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-regex.c to bc" >&2
+echo "307 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-regex.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-revision-walking.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-revision-walking.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-revision-walking.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-revision-walking.c.bc
 check
-echo "308 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-revision-walking.c to bc" >&2
+echo "308 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-revision-walking.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-run-command.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-run-command.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-run-command.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-run-command.c.bc
 check
-echo "309 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-run-command.c to bc" >&2
+echo "309 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-run-command.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-scrap-cache-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-scrap-cache-tree.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-scrap-cache-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-scrap-cache-tree.c.bc
 check
-echo "310 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-scrap-cache-tree.c to bc" >&2
+echo "310 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-scrap-cache-tree.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-sha1.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-sha1.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-sha1.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-sha1.c.bc
 check
-echo "311 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-sha1.c to bc" >&2
+echo "311 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-sha1.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-sha1-array.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-sha1-array.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-sha1-array.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-sha1-array.c.bc
 check
-echo "312 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-sha1-array.c to bc" >&2
+echo "312 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-sha1-array.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-sigchain.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-sigchain.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-sigchain.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-sigchain.c.bc
 check
-echo "313 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-sigchain.c to bc" >&2
+echo "313 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-sigchain.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-string-list.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-string-list.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-string-list.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-string-list.c.bc
 check
-echo "314 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-string-list.c to bc" >&2
+echo "314 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-string-list.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-submodule-config.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-submodule-config.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-submodule-config.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-submodule-config.c.bc
 check
-echo "315 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-submodule-config.c to bc" >&2
+echo "315 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-submodule-config.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-subprocess.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-subprocess.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-subprocess.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-subprocess.c.bc
 check
-echo "316 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-subprocess.c to bc" >&2
+echo "316 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-subprocess.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-svn-fe.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-svn-fe.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-svn-fe.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-svn-fe.c.bc
 check
-echo "317 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-svn-fe.c to bc" >&2
+echo "317 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-svn-fe.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-urlmatch-normalization.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-urlmatch-normalization.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-urlmatch-normalization.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-urlmatch-normalization.c.bc
 check
-echo "318 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-urlmatch-normalization.c to bc" >&2
+echo "318 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-urlmatch-normalization.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-wildmatch.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-wildmatch.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-wildmatch.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-wildmatch.c.bc
 check
-echo "319 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-wildmatch.c to bc" >&2
+echo "319 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-wildmatch.c to bc" >&2
 echo "Total ir $total" >&2
 echo "Succ ir $succ" >&2
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/add.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/add.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/add.c	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/add.c	2015-11-06 05:31:55.000000000 +0800
@@ -333,20 +333,14 @@
 		/* Turn "git add pathspec..." to "git add -A pathspec..." */
 		addremove = 1;
 
 	if (!show_only && ignore_missing)
 		die(_("Option --ignore-missing can only be used together with --dry-run"));
 
-	if ((0 < addremove_explicit || take_worktree_changes) && !argc) {
-		static const char *whole[2] = { ":/", NULL };
-		argc = 1;
-		argv = whole;
-	}
-
 	add_new_files = !take_worktree_changes && !refresh_only;
-	require_pathspec = !take_worktree_changes;
+	require_pathspec = !(take_worktree_changes || (0 < addremove_explicit));
 
 	hold_locked_index(&lock_file, 1);
 
 	flags = ((verbose ? ADD_CACHE_VERBOSE : 0) |
 		 (show_only ? ADD_CACHE_PRETEND : 0) |
 		 (intent_to_add ? ADD_CACHE_INTENT : 0) |
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/add.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/add.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/add.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/add.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/am.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/am.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/am.c	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/am.c	2015-11-06 05:31:55.000000000 +0800
@@ -1340,13 +1340,13 @@
 		die_user_resolve(state);
 	}
 
 	strbuf_addstr(&msg, "\n\n");
 	if (strbuf_read_file(&msg, am_path(state, "msg"), 0) < 0)
 		die_errno(_("could not read '%s'"), am_path(state, "msg"));
-	stripspace(&msg, 0);
+	strbuf_stripspace(&msg, 0);
 
 	if (state->signoff)
 		am_signoff(&msg);
 
 	assert(!state->author_name);
 	state->author_name = strbuf_detach(&author_name, NULL);
@@ -1587,22 +1587,50 @@
 		return -1;
 
 	return 0;
 }
 
 /**
+ * Do the three-way merge using fake ancestor, his tree constructed
+ * from the fake ancestor and the postimage of the patch, and our
+ * state.
+ */
+static int run_fallback_merge_recursive(const struct am_state *state,
+					unsigned char *orig_tree,
+					unsigned char *our_tree,
+					unsigned char *his_tree)
+{
+	struct child_process cp = CHILD_PROCESS_INIT;
+	int status;
+
+	cp.git_cmd = 1;
+
+	argv_array_pushf(&cp.env_array, "GITHEAD_%s=%.*s",
+			 sha1_to_hex(his_tree), linelen(state->msg), state->msg);
+	if (state->quiet)
+		argv_array_push(&cp.env_array, "GIT_MERGE_VERBOSITY=0");
+
+	argv_array_push(&cp.args, "merge-recursive");
+	argv_array_push(&cp.args, sha1_to_hex(orig_tree));
+	argv_array_push(&cp.args, "--");
+	argv_array_push(&cp.args, sha1_to_hex(our_tree));
+	argv_array_push(&cp.args, sha1_to_hex(his_tree));
+
+	status = run_command(&cp) ? (-1) : 0;
+	discard_cache();
+	read_cache();
+	return status;
+}
+
+/**
  * Attempt a threeway merge, using index_path as the temporary index.
  */
 static int fall_back_threeway(const struct am_state *state, const char *index_path)
 {
 	unsigned char orig_tree[GIT_SHA1_RAWSZ], his_tree[GIT_SHA1_RAWSZ],
 		      our_tree[GIT_SHA1_RAWSZ];
-	const unsigned char *bases[1] = {orig_tree};
-	struct merge_options o;
-	struct commit *result;
-	char *his_tree_name;
 
 	if (get_sha1("HEAD", our_tree) < 0)
 		hashcpy(our_tree, EMPTY_TREE_SHA1_BIN);
 
 	if (build_fake_ancestor(state, index_path))
 		return error("could not build fake ancestor");
@@ -1648,28 +1676,17 @@
 	 * may be wildly different from ours, but his_tree has the same set of
 	 * wildly different changes in parts the patch did not touch, so
 	 * recursive ends up canceling them, saying that we reverted all those
 	 * changes.
 	 */
 
-	init_merge_options(&o);
-
-	o.branch1 = "HEAD";
-	his_tree_name = xstrfmt("%.*s", linelen(state->msg), state->msg);
-	o.branch2 = his_tree_name;
-
-	if (state->quiet)
-		o.verbosity = 0;
-
-	if (merge_recursive_generic(&o, our_tree, his_tree, 1, bases, &result)) {
+	if (run_fallback_merge_recursive(state, orig_tree, our_tree, his_tree)) {
 		rerere(state->allow_rerere_autoupdate);
-		free(his_tree_name);
 		return error(_("Failed to merge in the changes."));
 	}
 
-	free(his_tree_name);
 	return 0;
 }
 
 /**
  * Commits the current index with state->msg as the commit message and
  * state->author_name, state->author_email and state->author_date as the author
@@ -2226,14 +2243,14 @@
 	int keep_cr = -1;
 	int patch_format = PATCH_FORMAT_UNKNOWN;
 	enum resume_mode resume = RESUME_FALSE;
 	int in_progress;
 
 	const char * const usage[] = {
-		N_("git am [options] [(<mbox>|<Maildir>)...]"),
-		N_("git am [options] (--continue | --skip | --abort)"),
+		N_("git am [<options>] [(<mbox>|<Maildir>)...]"),
+		N_("git am [<options>] (--continue | --skip | --abort)"),
 		NULL
 	};
 
 	struct option options[] = {
 		OPT_BOOL('i', "interactive", &state.interactive,
 			N_("run interactively")),
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/am.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/am.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/am.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/am.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/annotate.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/annotate.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/annotate.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/annotate.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/apply.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/apply.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/apply.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/apply.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/archive.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/archive.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/archive.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/archive.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/bisect--helper.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/bisect--helper.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/bisect--helper.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/bisect--helper.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/blame.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/blame.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/blame.c	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/blame.c	2015-11-06 05:31:55.000000000 +0800
@@ -2688,13 +2688,13 @@
 	sb.revs = &revs;
 	if (!reverse) {
 		final_commit_name = prepare_final(&sb);
 		sb.commits.compare = compare_commits_by_commit_date;
 	}
 	else if (contents_from)
-		die("--contents and --children do not blend well.");
+		die("--contents and --reverse do not blend well.");
 	else if (revs.first_parent_only)
 		die("combining --first-parent and --reverse is not supported");
 	else {
 		final_commit_name = prepare_initial(&sb);
 		sb.commits.compare = compare_commits_by_reverse_commit_date;
 	}
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/blame.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/blame.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/blame.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/blame.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/branch.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/branch.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/branch.c	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/branch.c	2015-11-06 05:31:55.000000000 +0800
@@ -783,13 +783,13 @@
 	}
 	strbuf_reset(&buf);
 	if (launch_editor(git_path(edit_description), &buf, NULL)) {
 		strbuf_release(&buf);
 		return -1;
 	}
-	stripspace(&buf, 1);
+	strbuf_stripspace(&buf, 1);
 
 	strbuf_addf(&name, "branch.%s.description", branch_name);
 	status = git_config_set(name.buf, buf.len ? buf.buf : NULL);
 	strbuf_release(&name);
 	strbuf_release(&buf);
 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/branch.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/branch.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/branch.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/branch.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/bundle.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/bundle.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/bundle.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/bundle.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/cat-file.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/cat-file.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/cat-file.c	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/cat-file.c	2015-11-06 05:31:55.000000000 +0800
@@ -423,13 +423,13 @@
 	warn_on_object_refname_ambiguity = save_warning;
 	return retval;
 }
 
 static const char * const cat_file_usage[] = {
 	N_("git cat-file (-t [--allow-unknown-type]|-s [--allow-unknown-type]|-e|-p|<type>|--textconv) <object>"),
-	N_("git cat-file (--batch | --batch-check) [--follow-symlinks] < <list-of-objects>"),
+	N_("git cat-file (--batch | --batch-check) [--follow-symlinks]"),
 	NULL
 };
 
 static int git_cat_file_config(const char *var, const char *value, void *cb)
 {
 	if (userdiff_config(var, value) < 0)
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/cat-file.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/cat-file.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/cat-file.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/cat-file.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/check-attr.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/check-attr.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/check-attr.c	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/check-attr.c	2015-11-06 05:31:55.000000000 +0800
@@ -6,13 +6,13 @@
 
 static int all_attrs;
 static int cached_attrs;
 static int stdin_paths;
 static const char * const check_attr_usage[] = {
 N_("git check-attr [-a | --all | <attr>...] [--] <pathname>..."),
-N_("git check-attr --stdin [-z] [-a | --all | <attr>...] < <list-of-paths>"),
+N_("git check-attr --stdin [-z] [-a | --all | <attr>...]"),
 NULL
 };
 
 static int nul_term_line;
 
 static const struct option check_attr_options[] = {
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/check-attr.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/check-attr.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/check-attr.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/check-attr.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/check-ignore.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/check-ignore.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/check-ignore.c	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/check-ignore.c	2015-11-06 05:31:55.000000000 +0800
@@ -5,13 +5,13 @@
 #include "pathspec.h"
 #include "parse-options.h"
 
 static int quiet, verbose, stdin_paths, show_non_matching, no_index;
 static const char * const check_ignore_usage[] = {
 "git check-ignore [<options>] <pathname>...",
-"git check-ignore [<options>] --stdin < <list-of-paths>",
+"git check-ignore [<options>] --stdin",
 NULL
 };
 
 static int nul_term_line;
 
 static const struct option check_ignore_options[] = {
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/check-ignore.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/check-ignore.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/check-ignore.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/check-ignore.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/check-mailmap.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/check-mailmap.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/check-mailmap.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/check-mailmap.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/checkout.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/checkout.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/checkout-index.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/checkout-index.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/checkout-index.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/checkout-index.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/checkout.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/checkout.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/check-ref-format.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/check-ref-format.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/check-ref-format.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/check-ref-format.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/clean.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/clean.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/clean.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/clean.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/clone.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/clone.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/clone.c	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/clone.c	2015-11-06 05:31:55.000000000 +0800
@@ -291,15 +291,20 @@
 	}
 
 	if (!repo && is_directory(mkpath("%s/.git/objects", ref_git))) {
 		char *ref_git_git = mkpathdup("%s/.git", ref_git);
 		free(ref_git);
 		ref_git = ref_git_git;
-	} else if (!is_directory(mkpath("%s/objects", ref_git)))
+	} else if (!is_directory(mkpath("%s/objects", ref_git))) {
+		struct strbuf sb = STRBUF_INIT;
+		if (get_common_dir(&sb, ref_git))
+			die(_("reference repository '%s' as a linked checkout is not supported yet."),
+			    item->string);
 		die(_("reference repository '%s' is not a local repository."),
 		    item->string);
+	}
 
 	if (!access(mkpath("%s/shallow", ref_git), F_OK))
 		die(_("reference repository '%s' is shallow"), item->string);
 
 	if (!access(mkpath("%s/info/grafts", ref_git), F_OK))
 		die(_("reference repository '%s' is grafted"), item->string);
@@ -421,14 +426,16 @@
 		strbuf_addf(&alt, "%s/objects", src_repo);
 		add_to_alternates_file(alt.buf);
 		strbuf_release(&alt);
 	} else {
 		struct strbuf src = STRBUF_INIT;
 		struct strbuf dest = STRBUF_INIT;
-		strbuf_addf(&src, "%s/objects", src_repo);
-		strbuf_addf(&dest, "%s/objects", dest_repo);
+		get_common_dir(&src, src_repo);
+		get_common_dir(&dest, dest_repo);
+		strbuf_addstr(&src, "/objects");
+		strbuf_addstr(&dest, "/objects");
 		copy_or_link_directory(&src, &dest, src_repo, src.len);
 		strbuf_release(&src);
 		strbuf_release(&dest);
 	}
 
 	if (0 <= option_verbosity)
@@ -1061,14 +1068,16 @@
 
 	update_head(our_head_points_at, remote_head, reflog_msg.buf);
 
 	transport_unlock_pack(transport);
 	transport_disconnect(transport);
 
-	if (option_dissociate)
+	if (option_dissociate) {
+		close_all_packs();
 		dissociate_from_references();
+	}
 
 	junk_mode = JUNK_LEAVE_REPO;
 	err = checkout();
 
 	strbuf_release(&reflog_msg);
 	strbuf_release(&branch_top);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/clone.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/clone.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/clone.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/clone.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/column.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/column.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/column.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/column.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/commit.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/commit.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/commit.c	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/commit.c	2015-11-06 05:31:55.000000000 +0800
@@ -772,13 +772,13 @@
 	 * Most hints are counter-productive when the commit has
 	 * already started.
 	 */
 	s->hints = 0;
 
 	if (clean_message_contents)
-		stripspace(&sb, 0);
+		strbuf_stripspace(&sb, 0);
 
 	if (signoff)
 		append_signoff(&sb, ignore_non_trailer(&sb), 0);
 
 	if (fwrite(sb.buf, 1, sb.len, s->fp) < sb.len)
 		die_errno(_("could not write commit template"));
@@ -1011,13 +1011,13 @@
 	if (cleanup_mode == CLEANUP_NONE && sb->len)
 		return 0;
 
 	if (!template_file || strbuf_read_file(&tmpl, template_file, 0) <= 0)
 		return 0;
 
-	stripspace(&tmpl, cleanup_mode == CLEANUP_ALL);
+	strbuf_stripspace(&tmpl, cleanup_mode == CLEANUP_ALL);
 	if (!skip_prefix(sb->buf, tmpl.buf, &start))
 		start = sb->buf;
 	strbuf_release(&tmpl);
 	return rest_is_empty(sb, start - sb->buf);
 }
 
@@ -1723,13 +1723,13 @@
 
 	if (verbose || /* Truncate the message just before the diff, if any. */
 	    cleanup_mode == CLEANUP_SCISSORS)
 		wt_status_truncate_message_at_cut_line(&sb);
 
 	if (cleanup_mode != CLEANUP_NONE)
-		stripspace(&sb, cleanup_mode == CLEANUP_ALL);
+		strbuf_stripspace(&sb, cleanup_mode == CLEANUP_ALL);
 	if (template_untouched(&sb) && !allow_empty_message) {
 		rollback_index_files();
 		fprintf(stderr, _("Aborting commit; you did not edit the message.\n"));
 		exit(1);
 	}
 	if (message_is_empty(&sb) && !allow_empty_message) {
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/commit.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/commit.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/commit.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/commit.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/commit-tree.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/commit-tree.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/commit-tree.c	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/commit-tree.c	2015-11-06 05:31:55.000000000 +0800
@@ -7,13 +7,13 @@
 #include "commit.h"
 #include "tree.h"
 #include "builtin.h"
 #include "utf8.h"
 #include "gpg-interface.h"
 
-static const char commit_tree_usage[] = "git commit-tree [(-p <sha1>)...] [-S[<keyid>]] [-m <message>] [-F <file>] <sha1> <changelog";
+static const char commit_tree_usage[] = "git commit-tree [(-p <sha1>)...] [-S[<keyid>]] [-m <message>] [-F <file>] <sha1>";
 
 static const char *sign_commit;
 
 static void new_parent(struct commit *parent, struct commit_list **parents_p)
 {
 	unsigned char *sha1 = parent->object.sha1;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/commit-tree.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/commit-tree.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/commit-tree.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/commit-tree.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/config.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/config.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/config.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/config.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/count-objects.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/count-objects.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/count-objects.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/count-objects.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/credential.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/credential.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/credential.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/credential.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/describe.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/describe.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/describe.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/describe.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/diff.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/diff.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/diff-files.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/diff-files.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/diff-files.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/diff-files.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/diff-index.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/diff-index.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/diff-index.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/diff-index.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/diff.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/diff.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/diff-tree.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/diff-tree.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/diff-tree.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/diff-tree.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/fast-export.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/fast-export.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/fast-export.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/fast-export.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/fetch.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/fetch.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/fetch.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/fetch.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/fetch-pack.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/fetch-pack.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/fetch-pack.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/fetch-pack.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/fmt-merge-msg.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/fmt-merge-msg.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/fmt-merge-msg.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/fmt-merge-msg.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/for-each-ref.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/for-each-ref.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/for-each-ref.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/for-each-ref.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/fsck.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/fsck.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/fsck.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/fsck.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/gc.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/gc.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/gc.c	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/gc.c	2015-11-06 05:31:55.000000000 +0800
@@ -41,24 +41,47 @@
 static struct argv_array repack = ARGV_ARRAY_INIT;
 static struct argv_array prune = ARGV_ARRAY_INIT;
 static struct argv_array prune_worktrees = ARGV_ARRAY_INIT;
 static struct argv_array rerere = ARGV_ARRAY_INIT;
 
 static struct tempfile pidfile;
+static struct lock_file log_lock;
 
 static void git_config_date_string(const char *key, const char **output)
 {
 	if (git_config_get_string_const(key, output))
 		return;
 	if (strcmp(*output, "now")) {
 		unsigned long now = approxidate("now");
 		if (approxidate(*output) >= now)
 			git_die_config(key, _("Invalid %s: '%s'"), key, *output);
 	}
 }
 
+static void process_log_file(void)
+{
+	struct stat st;
+	if (!fstat(get_lock_file_fd(&log_lock), &st) && st.st_size)
+		commit_lock_file(&log_lock);
+	else
+		rollback_lock_file(&log_lock);
+}
+
+static void process_log_file_at_exit(void)
+{
+	fflush(stderr);
+	process_log_file();
+}
+
+static void process_log_file_on_signal(int signo)
+{
+	process_log_file();
+	sigchain_pop(signo);
+	raise(signo);
+}
+
 static void gc_config(void)
 {
 	const char *value;
 
 	if (!git_config_get_value("gc.packrefs", &value)) {
 		if (value && !strcmp(value, "notbare"))
@@ -214,13 +237,13 @@
 			 * running gc --auto one day late is not a big
 			 * problem. --force can be used in manual gc
 			 * after the user verifies that no gc is
 			 * running.
 			 */
 			time(NULL) - st.st_mtime <= 12 * 3600 &&
-			fscanf(fp, "%"PRIuMAX" %127c", &pid, locking_host) == 2 &&
+			fscanf(fp, "%"SCNuMAX" %127c", &pid, locking_host) == 2 &&
 			/* be gentle to concurrent "gc" on remote hosts */
 			(strcmp(locking_host, my_host) || !kill(pid, 0) || errno == EPERM);
 		if (fp != NULL)
 			fclose(fp);
 		if (should_exit) {
 			if (fd >= 0)
@@ -238,12 +261,30 @@
 	commit_lock_file(&lock);
 	register_tempfile(&pidfile, pidfile_path);
 	free(pidfile_path);
 	return NULL;
 }
 
+static int report_last_gc_error(void)
+{
+	struct strbuf sb = STRBUF_INIT;
+	int ret;
+
+	ret = strbuf_read_file(&sb, git_path("gc.log"), 0);
+	if (ret > 0)
+		return error(_("The last gc run reported the following. "
+			       "Please correct the root cause\n"
+			       "and remove %s.\n"
+			       "Automatic cleanup will not be performed "
+			       "until the file is removed.\n\n"
+			       "%s"),
+			     git_path("gc.log"), sb.buf);
+	strbuf_release(&sb);
+	return 0;
+}
+
 static int gc_before_repack(void)
 {
 	if (pack_refs && run_command_v_opt(pack_refs_cmd.argv, RUN_GIT_CMD))
 		return error(FAILED_RUN, pack_refs_cmd.argv[0]);
 
 	if (prune_reflogs && run_command_v_opt(reflog.argv, RUN_GIT_CMD))
@@ -259,12 +300,13 @@
 	int aggressive = 0;
 	int auto_gc = 0;
 	int quiet = 0;
 	int force = 0;
 	const char *name;
 	pid_t pid;
+	int daemonized = 0;
 
 	struct option builtin_gc_options[] = {
 		OPT__QUIET(&quiet, N_("suppress progress reporting")),
 		{ OPTION_STRING, 0, "prune", &prune_expire, N_("date"),
 			N_("prune unreferenced objects"),
 			PARSE_OPT_OPTARG, NULL, (intptr_t)prune_expire },
@@ -315,43 +357,57 @@
 				fprintf(stderr, _("Auto packing the repository in background for optimum performance.\n"));
 			else
 				fprintf(stderr, _("Auto packing the repository for optimum performance.\n"));
 			fprintf(stderr, _("See \"git help gc\" for manual housekeeping.\n"));
 		}
 		if (detach_auto) {
+			if (report_last_gc_error())
+				return -1;
+
 			if (gc_before_repack())
 				return -1;
 			/*
 			 * failure to daemonize is ok, we'll continue
 			 * in foreground
 			 */
-			daemonize();
+			daemonized = !daemonize();
 		}
 	} else
 		add_repack_all_option();
 
 	name = lock_repo_for_gc(force, &pid);
 	if (name) {
 		if (auto_gc)
 			return 0; /* be quiet on --auto */
 		die(_("gc is already running on machine '%s' pid %"PRIuMAX" (use --force if not)"),
 		    name, (uintmax_t)pid);
 	}
 
+	if (daemonized) {
+		hold_lock_file_for_update(&log_lock,
+					  git_path("gc.log"),
+					  LOCK_DIE_ON_ERROR);
+		dup2(get_lock_file_fd(&log_lock), 2);
+		sigchain_push_common(process_log_file_on_signal);
+		atexit(process_log_file_at_exit);
+	}
+
 	if (gc_before_repack())
 		return -1;
 
-	if (run_command_v_opt(repack.argv, RUN_GIT_CMD))
-		return error(FAILED_RUN, repack.argv[0]);
-
-	if (prune_expire) {
-		argv_array_push(&prune, prune_expire);
-		if (quiet)
-			argv_array_push(&prune, "--no-progress");
-		if (run_command_v_opt(prune.argv, RUN_GIT_CMD))
-			return error(FAILED_RUN, prune.argv[0]);
+	if (!repository_format_precious_objects) {
+		if (run_command_v_opt(repack.argv, RUN_GIT_CMD))
+			return error(FAILED_RUN, repack.argv[0]);
+
+		if (prune_expire) {
+			argv_array_push(&prune, prune_expire);
+			if (quiet)
+				argv_array_push(&prune, "--no-progress");
+			if (run_command_v_opt(prune.argv, RUN_GIT_CMD))
+				return error(FAILED_RUN, prune.argv[0]);
+		}
 	}
 
 	if (prune_worktrees_expire) {
 		argv_array_push(&prune_worktrees, prune_worktrees_expire);
 		if (run_command_v_opt(prune_worktrees.argv, RUN_GIT_CMD))
 			return error(FAILED_RUN, prune_worktrees.argv[0]);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/gc.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/gc.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/gc.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/gc.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/get-tar-commit-id.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/get-tar-commit-id.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/get-tar-commit-id.c	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/get-tar-commit-id.c	2015-11-06 05:31:55.000000000 +0800
@@ -5,13 +5,13 @@
 #include "commit.h"
 #include "tar.h"
 #include "builtin.h"
 #include "quote.h"
 
 static const char builtin_get_tar_commit_id_usage[] =
-"git get-tar-commit-id < <tarfile>";
+"git get-tar-commit-id";
 
 /* ustar header + extended global header content */
 #define RECORDSIZE	(512)
 #define HEADERSIZE (2 * RECORDSIZE)
 
 int cmd_get_tar_commit_id(int argc, const char **argv, const char *prefix)
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/get-tar-commit-id.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/get-tar-commit-id.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/get-tar-commit-id.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/get-tar-commit-id.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/grep.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/grep.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/grep.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/grep.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/hash-object.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/hash-object.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/hash-object.c	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/hash-object.c	2015-11-06 05:31:55.000000000 +0800
@@ -75,13 +75,13 @@
 }
 
 int cmd_hash_object(int argc, const char **argv, const char *prefix)
 {
 	static const char * const hash_object_usage[] = {
 		N_("git hash-object [-t <type>] [-w] [--path=<file> | --no-filters] [--stdin] [--] <file>..."),
-		N_("git hash-object  --stdin-paths < <list-of-paths>"),
+		N_("git hash-object  --stdin-paths"),
 		NULL
 	};
 	const char *type = blob_type;
 	int hashstdin = 0;
 	int stdin_paths = 0;
 	int no_filters = 0;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/hash-object.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/hash-object.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/hash-object.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/hash-object.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/help.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/help.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/help.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/help.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/index-pack.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/index-pack.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/index-pack.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/index-pack.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/init-db.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/init-db.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/init-db.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/init-db.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/interpret-trailers.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/interpret-trailers.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/interpret-trailers.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/interpret-trailers.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/log.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/log.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/log.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/log.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/ls-files.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/ls-files.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/ls-files.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/ls-files.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/ls-remote.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/ls-remote.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/ls-remote.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/ls-remote.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/ls-tree.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/ls-tree.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/ls-tree.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/ls-tree.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/mailinfo.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/mailinfo.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/mailinfo.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/mailinfo.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/mailsplit.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/mailsplit.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/mailsplit.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/mailsplit.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/merge-base.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/merge-base.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/merge-base.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/merge-base.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/merge.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/merge.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/merge.c	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/merge.c	2015-11-06 05:31:55.000000000 +0800
@@ -803,13 +803,13 @@
 		abort_commit(remoteheads, NULL);
 	if (0 < option_edit) {
 		if (launch_editor(git_path_merge_msg(), NULL, NULL))
 			abort_commit(remoteheads, NULL);
 	}
 	read_merge_msg(&msg);
-	stripspace(&msg, 0 < option_edit);
+	strbuf_stripspace(&msg, 0 < option_edit);
 	if (!msg.len)
 		abort_commit(remoteheads, _("Empty commit message."));
 	strbuf_release(&merge_msg);
 	strbuf_addbuf(&merge_msg, &msg);
 	strbuf_release(&msg);
 }
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/merge.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/merge.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/merge-file.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/merge-file.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/merge-file.c	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/merge-file.c	2015-11-06 05:31:55.000000000 +0800
@@ -101,8 +101,11 @@
 			ret = error("Could not write to %s", filename);
 		else if (fclose(f))
 			ret = error("Could not close %s", filename);
 		free(result.ptr);
 	}
 
+	if (ret > 127)
+		ret = 127;
+
 	return ret;
 }
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/merge-file.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/merge-file.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/merge-file.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/merge-file.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/merge-index.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/merge-index.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/merge-index.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/merge-index.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/merge.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/merge.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/merge-ours.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/merge-ours.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/merge-ours.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/merge-ours.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/merge-recursive.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/merge-recursive.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/merge-recursive.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/merge-recursive.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/merge-tree.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/merge-tree.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/merge-tree.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/merge-tree.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/mktag.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/mktag.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/mktag.c	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/mktag.c	2015-11-06 05:31:55.000000000 +0800
@@ -151,13 +151,13 @@
 int cmd_mktag(int argc, const char **argv, const char *prefix)
 {
 	struct strbuf buf = STRBUF_INIT;
 	unsigned char result_sha1[20];
 
 	if (argc != 1)
-		usage("git mktag < signaturefile");
+		usage("git mktag");
 
 	if (strbuf_read(&buf, 0, 4096) < 0) {
 		die_errno("could not read from stdin");
 	}
 
 	/* Verify it for some basic sanity: it needs to start with
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/mktag.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/mktag.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/mktag.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/mktag.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/mktree.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/mktree.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/mktree.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/mktree.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/mv.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/mv.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/mv.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/mv.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/name-rev.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/name-rev.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/name-rev.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/name-rev.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/notes.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/notes.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/notes.c	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/notes.c	2015-11-06 05:31:55.000000000 +0800
@@ -189,13 +189,13 @@
 		strbuf_release(&buf);
 		strbuf_reset(&d->buf);
 
 		if (launch_editor(d->edit_path, &d->buf, NULL)) {
 			die(_("Please supply the note contents using either -m or -F option"));
 		}
-		stripspace(&d->buf, 1);
+		strbuf_stripspace(&d->buf, 1);
 	}
 }
 
 static void write_note_data(struct note_data *d, unsigned char *sha1)
 {
 	if (write_sha1_file(d->buf.buf, d->buf.len, blob_type, sha1)) {
@@ -212,13 +212,13 @@
 	struct note_data *d = opt->value;
 
 	strbuf_grow(&d->buf, strlen(arg) + 2);
 	if (d->buf.len)
 		strbuf_addch(&d->buf, '\n');
 	strbuf_addstr(&d->buf, arg);
-	stripspace(&d->buf, 0);
+	strbuf_stripspace(&d->buf, 0);
 
 	d->given = 1;
 	return 0;
 }
 
 static int parse_file_arg(const struct option *opt, const char *arg, int unset)
@@ -229,13 +229,13 @@
 		strbuf_addch(&d->buf, '\n');
 	if (!strcmp(arg, "-")) {
 		if (strbuf_read(&d->buf, 0, 1024) < 0)
 			die_errno(_("cannot read '%s'"), arg);
 	} else if (strbuf_read_file(&d->buf, arg, 1024) < 0)
 		die_errno(_("could not open or read '%s'"), arg);
-	stripspace(&d->buf, 0);
+	strbuf_stripspace(&d->buf, 0);
 
 	d->given = 1;
 	return 0;
 }
 
 static int parse_reuse_arg(const struct option *opt, const char *arg, int unset)
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/notes.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/notes.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/notes.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/notes.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/pack-objects.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/pack-objects.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/pack-objects.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/pack-objects.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/pack-redundant.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/pack-redundant.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/pack-redundant.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/pack-redundant.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/pack-refs.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/pack-refs.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/pack-refs.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/pack-refs.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/patch-id.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/patch-id.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/patch-id.c	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/patch-id.c	2015-11-06 05:31:55.000000000 +0800
@@ -162,13 +162,13 @@
 		flush_current_id(patchlen, &oid, &result);
 		oidcpy(&oid, &n);
 	}
 	strbuf_release(&line_buf);
 }
 
-static const char patch_id_usage[] = "git patch-id [--stable | --unstable] < patch";
+static const char patch_id_usage[] = "git patch-id [--stable | --unstable]";
 
 static int git_patch_id_config(const char *var, const char *value, void *cb)
 {
 	int *stable = cb;
 
 	if (!strcmp(var, "patchid.stable")) {
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/patch-id.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/patch-id.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/patch-id.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/patch-id.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/prune.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/prune.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/prune.c	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/prune.c	2015-11-06 05:31:55.000000000 +0800
@@ -116,12 +116,15 @@
 	check_replace_refs = 0;
 	ref_paranoia = 1;
 	init_revisions(&revs, prefix);
 
 	argc = parse_options(argc, argv, prefix, options, prune_usage, 0);
 
+	if (repository_format_precious_objects)
+		die(_("cannot prune in a precious-objects repo"));
+
 	while (argc--) {
 		unsigned char sha1[20];
 		const char *name = *argv++;
 
 		if (!get_sha1(name, sha1)) {
 			struct object *object = parse_object_or_die(sha1, name);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/prune.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/prune.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/prune.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/prune.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/prune-packed.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/prune-packed.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/prune-packed.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/prune-packed.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/pull.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/pull.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/pull.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/pull.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/push.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/push.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/push.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/push.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/read-tree.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/read-tree.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/read-tree.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/read-tree.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/receive-pack.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/receive-pack.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/receive-pack.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/receive-pack.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/reflog.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/reflog.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/reflog.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/reflog.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/remote.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/remote.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/remote-ext.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/remote-ext.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/remote-ext.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/remote-ext.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/remote-fd.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/remote-fd.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/remote-fd.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/remote-fd.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/remote.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/remote.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/repack.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/repack.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/repack.c	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/repack.c	2015-11-06 05:31:55.000000000 +0800
@@ -190,12 +190,15 @@
 
 	git_config(repack_config, NULL);
 
 	argc = parse_options(argc, argv, prefix, builtin_repack_options,
 				git_repack_usage, 0);
 
+	if (delete_redundant && repository_format_precious_objects)
+		die(_("cannot delete packs in a precious-objects repo"));
+
 	if (pack_kept_objects < 0)
 		pack_kept_objects = write_bitmaps;
 
 	packdir = mkpathdup("%s/pack", get_object_directory());
 	packtmp = mkpathdup("%s/.tmp-%d-pack", packdir, (int)getpid());
 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/repack.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/repack.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/repack.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/repack.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/replace.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/replace.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/replace.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/replace.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/rerere.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/rerere.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/rerere.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/rerere.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/reset.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/reset.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/reset.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/reset.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/revert.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/revert.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/revert.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/revert.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/rev-list.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/rev-list.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/rev-list.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/rev-list.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/rev-parse.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/rev-parse.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/rev-parse.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/rev-parse.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/rm.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/rm.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/rm.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/rm.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/send-pack.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/send-pack.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/send-pack.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/send-pack.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/shortlog.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/shortlog.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/shortlog.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/shortlog.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/show-branch.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/show-branch.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/show-branch.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/show-branch.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/show-ref.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/show-ref.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/show-ref.c	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/show-ref.c	2015-11-06 05:31:55.000000000 +0800
@@ -5,13 +5,13 @@
 #include "tag.h"
 #include "string-list.h"
 #include "parse-options.h"
 
 static const char * const show_ref_usage[] = {
 	N_("git show-ref [-q | --quiet] [--verify] [--head] [-d | --dereference] [-s | --hash[=<n>]] [--abbrev[=<n>]] [--tags] [--heads] [--] [<pattern>...]"),
-	N_("git show-ref --exclude-existing[=<pattern>] < <ref-list>"),
+	N_("git show-ref --exclude-existing[=<pattern>]"),
 	NULL
 };
 
 static int deref_tags, show_head, tags_only, heads_only, found_match, verify,
 	   quiet, hash_only, abbrev, exclude_arg;
 static const char **pattern;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/show-ref.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/show-ref.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/show-ref.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/show-ref.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/stripspace.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/stripspace.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/stripspace.c	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/stripspace.c	2015-11-06 05:31:55.000000000 +0800
@@ -1,120 +1,60 @@
 #include "builtin.h"
 #include "cache.h"
-
-/*
- * Returns the length of a line, without trailing spaces.
- *
- * If the line ends with newline, it will be removed too.
- */
-static size_t cleanup(char *line, size_t len)
-{
-	while (len) {
-		unsigned char c = line[len - 1];
-		if (!isspace(c))
-			break;
-		len--;
-	}
-
-	return len;
-}
-
-/*
- * Remove empty lines from the beginning and end
- * and also trailing spaces from every line.
- *
- * Turn multiple consecutive empty lines between paragraphs
- * into just one empty line.
- *
- * If the input has only empty lines and spaces,
- * no output will be produced.
- *
- * If last line does not have a newline at the end, one is added.
- *
- * Enable skip_comments to skip every line starting with comment
- * character.
- */
-void stripspace(struct strbuf *sb, int skip_comments)
-{
-	int empties = 0;
-	size_t i, j, len, newlen;
-	char *eol;
-
-	/* We may have to add a newline. */
-	strbuf_grow(sb, 1);
-
-	for (i = j = 0; i < sb->len; i += len, j += newlen) {
-		eol = memchr(sb->buf + i, '\n', sb->len - i);
-		len = eol ? eol - (sb->buf + i) + 1 : sb->len - i;
-
-		if (skip_comments && len && sb->buf[i] == comment_line_char) {
-			newlen = 0;
-			continue;
-		}
-		newlen = cleanup(sb->buf + i, len);
-
-		/* Not just an empty line? */
-		if (newlen) {
-			if (empties > 0 && j > 0)
-				sb->buf[j++] = '\n';
-			empties = 0;
-			memmove(sb->buf + j, sb->buf + i, newlen);
-			sb->buf[newlen + j++] = '\n';
-		} else {
-			empties++;
-		}
-	}
-
-	strbuf_setlen(sb, j);
-}
+#include "parse-options.h"
+#include "strbuf.h"
 
 static void comment_lines(struct strbuf *buf)
 {
 	char *msg;
 	size_t len;
 
 	msg = strbuf_detach(buf, &len);
 	strbuf_add_commented_lines(buf, msg, len);
 	free(msg);
 }
 
-static const char *usage_msg = "\n"
-"  git stripspace [-s | --strip-comments] < input\n"
-"  git stripspace [-c | --comment-lines] < input";
+static const char * const stripspace_usage[] = {
+	N_("git stripspace [-s | --strip-comments]"),
+	N_("git stripspace [-c | --comment-lines]"),
+	NULL
+};
+
+enum stripspace_mode {
+	STRIP_DEFAULT = 0,
+	STRIP_COMMENTS,
+	COMMENT_LINES
+};
 
 int cmd_stripspace(int argc, const char **argv, const char *prefix)
 {
 	struct strbuf buf = STRBUF_INIT;
-	int strip_comments = 0;
-	enum { INVAL = 0, STRIP_SPACE = 1, COMMENT_LINES = 2 } mode = STRIP_SPACE;
-
-	if (argc == 2) {
-		if (!strcmp(argv[1], "-s") ||
-		    !strcmp(argv[1], "--strip-comments")) {
-			strip_comments = 1;
-		} else if (!strcmp(argv[1], "-c") ||
-			   !strcmp(argv[1], "--comment-lines")) {
-			mode = COMMENT_LINES;
-		} else {
-			mode = INVAL;
-		}
-	} else if (argc > 1) {
-		mode = INVAL;
-	}
+	enum stripspace_mode mode = STRIP_DEFAULT;
 
-	if (mode == INVAL)
-		usage(usage_msg);
+	const struct option options[] = {
+		OPT_CMDMODE('s', "strip-comments", &mode,
+			    N_("skip and remove all lines starting with comment character"),
+			    STRIP_COMMENTS),
+		OPT_CMDMODE('c', "comment-lines", &mode,
+			    N_("prepend comment character and blank to each line"),
+			    COMMENT_LINES),
+		OPT_END()
+	};
+
+	argc = parse_options(argc, argv, prefix, options, stripspace_usage, 0);
+	if (argc)
+		usage_with_options(stripspace_usage, options);
 
-	if (strip_comments || mode == COMMENT_LINES)
+	if (mode == STRIP_COMMENTS || mode == COMMENT_LINES)
 		git_config(git_default_config, NULL);
 
 	if (strbuf_read(&buf, 0, 1024) < 0)
 		die_errno("could not read the input");
 
-	if (mode == STRIP_SPACE)
-		stripspace(&buf, strip_comments);
+	if (mode == STRIP_DEFAULT || mode == STRIP_COMMENTS)
+		strbuf_stripspace(&buf, mode == STRIP_COMMENTS);
 	else
 		comment_lines(&buf);
 
 	write_or_die(1, buf.buf, buf.len);
 	strbuf_release(&buf);
 	return 0;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/stripspace.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/stripspace.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/stripspace.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/stripspace.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/symbolic-ref.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/symbolic-ref.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/symbolic-ref.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/symbolic-ref.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/tag.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/tag.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/tag.c	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/tag.c	2015-11-06 05:31:55.000000000 +0800
@@ -495,13 +495,13 @@
 			_("Please supply the message using either -m or -F option.\n"));
 			exit(1);
 		}
 	}
 
 	if (opt->cleanup_mode != CLEANUP_NONE)
-		stripspace(buf, opt->cleanup_mode == CLEANUP_ALL);
+		strbuf_stripspace(buf, opt->cleanup_mode == CLEANUP_ALL);
 
 	if (!opt->message_given && !buf->len)
 		die(_("no tag message?"));
 
 	strbuf_insert(buf, 0, header_buf, header_len);
 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/tag.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/tag.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/tag.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/tag.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/unpack-file.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/unpack-file.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/unpack-file.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/unpack-file.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/unpack-objects.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/unpack-objects.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/unpack-objects.c	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/unpack-objects.c	2015-11-06 05:31:55.000000000 +0800
@@ -10,13 +10,13 @@
 #include "tree-walk.h"
 #include "progress.h"
 #include "decorate.h"
 #include "fsck.h"
 
 static int dry_run, quiet, recover, has_errors, strict;
-static const char unpack_usage[] = "git unpack-objects [-n] [-q] [-r] [--strict] < pack-file";
+static const char unpack_usage[] = "git unpack-objects [-n] [-q] [-r] [--strict]";
 
 /* We always read in 4kB chunks. */
 static unsigned char buffer[4096];
 static unsigned int offset, len;
 static off_t consumed_bytes;
 static git_SHA_CTX ctx;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/unpack-objects.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/unpack-objects.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/unpack-objects.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/unpack-objects.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/update-index.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/update-index.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/update-index.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/update-index.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/update-ref.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/update-ref.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/update-ref.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/update-ref.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/update-server-info.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/update-server-info.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/update-server-info.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/update-server-info.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/upload-archive.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/upload-archive.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/upload-archive.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/upload-archive.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/var.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/var.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/var.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/var.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/verify-commit.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/verify-commit.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/verify-commit.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/verify-commit.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/verify-pack.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/verify-pack.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/verify-pack.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/verify-pack.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/verify-tag.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/verify-tag.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/verify-tag.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/verify-tag.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/worktree.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/worktree.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/worktree.c	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/worktree.c	2015-11-06 05:31:55.000000000 +0800
@@ -7,13 +7,13 @@
 #include "refs.h"
 #include "run-command.h"
 #include "sigchain.h"
 #include "refs.h"
 
 static const char * const worktree_usage[] = {
-	N_("git worktree add [<options>] <path> <branch>"),
+	N_("git worktree add [<options>] <path> [<branch>]"),
 	N_("git worktree prune [<options>]"),
 	NULL
 };
 
 struct add_opts {
 	int force;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/worktree.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/worktree.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/worktree.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/worktree.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/write-tree.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/write-tree.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/write-tree.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/write-tree.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bulk-checkin.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bulk-checkin.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bulk-checkin.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bulk-checkin.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bundle.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bundle.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bundle.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bundle.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/cache.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/cache.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/cache.h	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/cache.h	2015-11-06 05:31:55.000000000 +0800
@@ -440,12 +440,13 @@
 extern const char *get_git_common_dir(void);
 extern int is_git_directory(const char *path);
 extern char *get_object_directory(void);
 extern char *get_index_file(void);
 extern char *get_graft_file(void);
 extern int set_git_dir(const char *path);
+extern int get_common_dir_noenv(struct strbuf *sb, const char *gitdir);
 extern int get_common_dir(struct strbuf *sb, const char *gitdir);
 extern const char *get_git_namespace(void);
 extern const char *strip_namespace(const char *namespaced_ref);
 extern const char *get_git_work_tree(void);
 
 #define READ_GITFILE_ERR_STAT_FAILED 1
@@ -517,13 +518,14 @@
 #define COMMIT_LOCK		(1 << 0)
 #define CLOSE_LOCK		(1 << 1)
 extern int write_locked_index(struct index_state *, struct lock_file *lock, unsigned flags);
 extern int discard_index(struct index_state *);
 extern int unmerged_index(const struct index_state *);
 extern int verify_path(const char *path);
-extern struct cache_entry *index_dir_exists(struct index_state *istate, const char *name, int namelen);
+extern int index_dir_exists(struct index_state *istate, const char *name, int namelen);
+extern void adjust_dirname_case(struct index_state *istate, char *name);
 extern struct cache_entry *index_file_exists(struct index_state *istate, const char *name, int namelen, int igncase);
 extern int index_name_pos(const struct index_state *, const char *name, int namelen);
 #define ADD_CACHE_OK_TO_ADD 1		/* Ok to add */
 #define ADD_CACHE_OK_TO_REPLACE 2	/* Ok to replace file/directory */
 #define ADD_CACHE_SKIP_DFCHECK 4	/* Ok to skip DF conflict checks */
 #define ADD_CACHE_JUST_APPEND 8		/* Append only; tree.c::read_tree() */
@@ -693,14 +695,21 @@
 extern enum object_creation_mode object_creation_mode;
 
 extern char *notes_ref_name;
 
 extern int grafts_replace_parents;
 
+/*
+ * GIT_REPO_VERSION is the version we write by default. The
+ * _READ variant is the highest number we know how to
+ * handle.
+ */
 #define GIT_REPO_VERSION 0
+#define GIT_REPO_VERSION_READ 1
 extern int repository_format_version;
+extern int repository_format_precious_objects;
 extern int check_repository_format(void);
 
 #define MTIME_CHANGED	0x0001
 #define CTIME_CHANGED	0x0002
 #define OWNER_CHANGED	0x0004
 #define MODE_CHANGED    0x0008
@@ -1272,12 +1281,13 @@
  * currently mmapped).
  */
 extern void close_pack_index(struct packed_git *);
 
 extern unsigned char *use_pack(struct packed_git *, struct pack_window **, off_t, unsigned long *);
 extern void close_pack_windows(struct packed_git *);
+extern void close_all_packs(void);
 extern void unuse_pack(struct pack_window **);
 extern void free_pack_by_name(const char *);
 extern void clear_delta_base_cache(void);
 extern struct packed_git *add_packed_git(const char *, int, int);
 
 /*
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/cache-tree.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/cache-tree.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/cache-tree.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/cache-tree.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/color.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/color.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/color.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/color.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/column.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/column.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/column.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/column.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/combine-diff.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/combine-diff.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/combine-diff.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/combine-diff.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/commit.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/commit.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/commit.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/commit.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/compat/obstack.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/compat/obstack.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/compat/obstack.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/compat/obstack.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/compat/regex/regcomp.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/compat/regex/regcomp.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/compat/regex/regcomp.c	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/compat/regex/regcomp.c	2015-11-06 05:31:55.000000000 +0800
@@ -15,12 +15,14 @@
 
    You should have received a copy of the GNU Lesser General Public
    License along with the GNU C Library; if not, write to the Free
    Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
    02110-1301 USA.  */
 
+#include <stdint.h>
+
 static reg_errcode_t re_compile_internal (regex_t *preg, const char * pattern,
 					  size_t length, reg_syntax_t syntax);
 static void re_compile_fastmap_iter (regex_t *bufp,
 				     const re_dfastate_t *init_state,
 				     char *fastmap);
 static reg_errcode_t init_dfa (re_dfa_t *dfa, size_t pat_len);
@@ -2574,13 +2576,13 @@
       old_tree = tree;
     }
   else
     old_tree = NULL;
 
   if (elem->token.type == SUBEXP)
-    postorder (elem, mark_opt_subexp, (void *) (long) elem->token.opr.idx);
+    postorder (elem, mark_opt_subexp, (void *) (intptr_t) elem->token.opr.idx);
 
   tree = create_tree (dfa, elem, NULL, (end == -1 ? OP_DUP_ASTERISK : OP_ALT));
   if (BE (tree == NULL, 0))
     goto parse_dup_op_espace;
 
   /* This loop is actually executed only when end != -1,
@@ -3803,13 +3805,13 @@
 /* Mark the tree SRC as an optional subexpression.
    To be called from preorder or postorder.  */
 
 static reg_errcode_t
 mark_opt_subexp (void *extra, bin_tree_t *node)
 {
-  int idx = (int) (long) extra;
+  int idx = (int) (intptr_t) extra;
   if (node->token.type == SUBEXP && node->token.opr.idx == idx)
     node->token.opt_subexp = 1;
 
   return REG_NOERROR;
 }
 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/compat/strlcpy.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/compat/strlcpy.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/compat/strlcpy.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/compat/strlcpy.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/compat/terminal.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/compat/terminal.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/compat/terminal.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/compat/terminal.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/compile_commands.json /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/compile_commands.json
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/compile_commands.json	2017-10-10 14:25:06.438382776 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/compile_commands.json	2017-10-10 14:28:54.922374402 +0800
@@ -1,1915 +1,1915 @@
 [
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o credential-store.o -c -MF ./.depend/credential-store.o.d -MQ credential-store.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" credential-store.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/credential-store.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/credential-store.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o abspath.o -c -MF ./.depend/abspath.o.d -MQ abspath.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" abspath.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/abspath.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/abspath.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o advice.o -c -MF ./.depend/advice.o.d -MQ advice.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" advice.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/advice.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/advice.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o alias.o -c -MF ./.depend/alias.o.d -MQ alias.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" alias.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/alias.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/alias.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o alloc.o -c -MF ./.depend/alloc.o.d -MQ alloc.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" alloc.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/alloc.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/alloc.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o archive.o -c -MF ./.depend/archive.o.d -MQ archive.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" archive.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/archive.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/archive.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o archive-tar.o -c -MF ./.depend/archive-tar.o.d -MQ archive-tar.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" archive-tar.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/archive-tar.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/archive-tar.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o archive-zip.o -c -MF ./.depend/archive-zip.o.d -MQ archive-zip.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" archive-zip.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/archive-zip.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/archive-zip.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o argv-array.o -c -MF ./.depend/argv-array.o.d -MQ argv-array.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" argv-array.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/argv-array.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/argv-array.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o attr.o -c -MF ./.depend/attr.o.d -MQ attr.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DETC_GITATTRIBUTES=\"/usr/local/etc/gitattributes\" attr.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/attr.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/attr.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o base85.o -c -MF ./.depend/base85.o.d -MQ base85.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" base85.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/base85.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/base85.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o bisect.o -c -MF ./.depend/bisect.o.d -MQ bisect.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" bisect.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bisect.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bisect.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o blob.o -c -MF ./.depend/blob.o.d -MQ blob.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" blob.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/blob.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/blob.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o branch.o -c -MF ./.depend/branch.o.d -MQ branch.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" branch.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/branch.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/branch.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o bulk-checkin.o -c -MF ./.depend/bulk-checkin.o.d -MQ bulk-checkin.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" bulk-checkin.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bulk-checkin.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bulk-checkin.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o bundle.o -c -MF ./.depend/bundle.o.d -MQ bundle.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" bundle.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bundle.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bundle.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o cache-tree.o -c -MF ./.depend/cache-tree.o.d -MQ cache-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" cache-tree.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/cache-tree.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/cache-tree.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o color.o -c -MF ./.depend/color.o.d -MQ color.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" color.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/color.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/color.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o column.o -c -MF ./.depend/column.o.d -MQ column.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" column.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/column.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/column.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o combine-diff.o -c -MF ./.depend/combine-diff.o.d -MQ combine-diff.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" combine-diff.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/combine-diff.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/combine-diff.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o commit.o -c -MF ./.depend/commit.o.d -MQ commit.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" commit.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/commit.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/commit.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o compat/obstack.o -c -MF compat/.depend/obstack.o.d -MQ compat/obstack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" compat/obstack.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/compat/obstack.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/compat/obstack.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o compat/terminal.o -c -MF compat/.depend/terminal.o.d -MQ compat/terminal.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" compat/terminal.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/compat/terminal.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/compat/terminal.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o config.o -c -MF ./.depend/config.o.d -MQ config.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DETC_GITCONFIG=\"/usr/local/etc/gitconfig\" config.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/config.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/config.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o connect.o -c -MF ./.depend/connect.o.d -MQ connect.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" connect.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/connect.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/connect.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o connected.o -c -MF ./.depend/connected.o.d -MQ connected.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" connected.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/connected.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/connected.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o convert.o -c -MF ./.depend/convert.o.d -MQ convert.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" convert.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/convert.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/convert.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o copy.o -c -MF ./.depend/copy.o.d -MQ copy.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" copy.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/copy.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/copy.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o credential.o -c -MF ./.depend/credential.o.d -MQ credential.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" credential.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/credential.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/credential.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o csum-file.o -c -MF ./.depend/csum-file.o.d -MQ csum-file.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" csum-file.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/csum-file.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/csum-file.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o ctype.o -c -MF ./.depend/ctype.o.d -MQ ctype.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" ctype.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ctype.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ctype.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o date.o -c -MF ./.depend/date.o.d -MQ date.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" date.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/date.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/date.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o decorate.o -c -MF ./.depend/decorate.o.d -MQ decorate.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" decorate.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/decorate.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/decorate.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o diffcore-break.o -c -MF ./.depend/diffcore-break.o.d -MQ diffcore-break.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" diffcore-break.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diffcore-break.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diffcore-break.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o diffcore-delta.o -c -MF ./.depend/diffcore-delta.o.d -MQ diffcore-delta.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" diffcore-delta.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diffcore-delta.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diffcore-delta.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o diffcore-order.o -c -MF ./.depend/diffcore-order.o.d -MQ diffcore-order.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" diffcore-order.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diffcore-order.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diffcore-order.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o diffcore-pickaxe.o -c -MF ./.depend/diffcore-pickaxe.o.d -MQ diffcore-pickaxe.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" diffcore-pickaxe.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diffcore-pickaxe.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diffcore-pickaxe.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o diffcore-rename.o -c -MF ./.depend/diffcore-rename.o.d -MQ diffcore-rename.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" diffcore-rename.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diffcore-rename.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diffcore-rename.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o diff-delta.o -c -MF ./.depend/diff-delta.o.d -MQ diff-delta.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" diff-delta.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diff-delta.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diff-delta.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o diff-lib.o -c -MF ./.depend/diff-lib.o.d -MQ diff-lib.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" diff-lib.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diff-lib.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diff-lib.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o diff-no-index.o -c -MF ./.depend/diff-no-index.o.d -MQ diff-no-index.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" diff-no-index.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diff-no-index.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diff-no-index.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o diff.o -c -MF ./.depend/diff.o.d -MQ diff.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" diff.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diff.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diff.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o dir.o -c -MF ./.depend/dir.o.d -MQ dir.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" dir.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/dir.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/dir.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o editor.o -c -MF ./.depend/editor.o.d -MQ editor.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" editor.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/editor.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/editor.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o entry.o -c -MF ./.depend/entry.o.d -MQ entry.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" entry.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/entry.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/entry.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o environment.o -c -MF ./.depend/environment.o.d -MQ environment.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" environment.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/environment.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/environment.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o ewah/bitmap.o -c -MF ewah/.depend/bitmap.o.d -MQ ewah/bitmap.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" ewah/bitmap.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ewah/bitmap.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ewah/bitmap.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o ewah/ewah_bitmap.o -c -MF ewah/.depend/ewah_bitmap.o.d -MQ ewah/ewah_bitmap.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" ewah/ewah_bitmap.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ewah/ewah_bitmap.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ewah/ewah_bitmap.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o ewah/ewah_io.o -c -MF ewah/.depend/ewah_io.o.d -MQ ewah/ewah_io.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" ewah/ewah_io.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ewah/ewah_io.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ewah/ewah_io.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o ewah/ewah_rlw.o -c -MF ewah/.depend/ewah_rlw.o.d -MQ ewah/ewah_rlw.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" ewah/ewah_rlw.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ewah/ewah_rlw.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ewah/ewah_rlw.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o exec_cmd.o -c -MF ./.depend/exec_cmd.o.d -MQ exec_cmd.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_EXEC_PATH=\"/usr/local/libexec/git-core\" -DBINDIR=\"bin\" -DPREFIX=\"/usr/local\" exec_cmd.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/exec_cmd.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/exec_cmd.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o fetch-pack.o -c -MF ./.depend/fetch-pack.o.d -MQ fetch-pack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" fetch-pack.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/fetch-pack.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/fetch-pack.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o fsck.o -c -MF ./.depend/fsck.o.d -MQ fsck.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" fsck.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/fsck.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/fsck.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o gettext.o -c -MF ./.depend/gettext.o.d -MQ gettext.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_LOCALE_PATH=\"/usr/local/share/locale\" gettext.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/gettext.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/gettext.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o gpg-interface.o -c -MF ./.depend/gpg-interface.o.d -MQ gpg-interface.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" gpg-interface.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/gpg-interface.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/gpg-interface.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o graph.o -c -MF ./.depend/graph.o.d -MQ graph.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" graph.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/graph.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/graph.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o grep.o -c -MF ./.depend/grep.o.d -MQ grep.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" grep.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/grep.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/grep.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o hashmap.o -c -MF ./.depend/hashmap.o.d -MQ hashmap.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" hashmap.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/hashmap.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/hashmap.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o help.o -c -MF ./.depend/help.o.d -MQ help.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" help.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/help.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/help.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o hex.o -c -MF ./.depend/hex.o.d -MQ hex.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" hex.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/hex.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/hex.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o ident.o -c -MF ./.depend/ident.o.d -MQ ident.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" ident.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ident.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ident.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o kwset.o -c -MF ./.depend/kwset.o.d -MQ kwset.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" kwset.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/kwset.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/kwset.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o levenshtein.o -c -MF ./.depend/levenshtein.o.d -MQ levenshtein.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" levenshtein.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/levenshtein.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/levenshtein.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o line-log.o -c -MF ./.depend/line-log.o.d -MQ line-log.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" line-log.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/line-log.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/line-log.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o line-range.o -c -MF ./.depend/line-range.o.d -MQ line-range.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" line-range.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/line-range.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/line-range.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o list-objects.o -c -MF ./.depend/list-objects.o.d -MQ list-objects.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" list-objects.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/list-objects.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/list-objects.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o ll-merge.o -c -MF ./.depend/ll-merge.o.d -MQ ll-merge.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" ll-merge.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ll-merge.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ll-merge.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o lockfile.o -c -MF ./.depend/lockfile.o.d -MQ lockfile.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" lockfile.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/lockfile.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/lockfile.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o log-tree.o -c -MF ./.depend/log-tree.o.d -MQ log-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" log-tree.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/log-tree.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/log-tree.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o mailmap.o -c -MF ./.depend/mailmap.o.d -MQ mailmap.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" mailmap.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/mailmap.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/mailmap.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o match-trees.o -c -MF ./.depend/match-trees.o.d -MQ match-trees.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" match-trees.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/match-trees.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/match-trees.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o merge.o -c -MF ./.depend/merge.o.d -MQ merge.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" merge.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/merge.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/merge.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o merge-blobs.o -c -MF ./.depend/merge-blobs.o.d -MQ merge-blobs.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" merge-blobs.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/merge-blobs.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/merge-blobs.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o merge-recursive.o -c -MF ./.depend/merge-recursive.o.d -MQ merge-recursive.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" merge-recursive.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/merge-recursive.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/merge-recursive.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o mergesort.o -c -MF ./.depend/mergesort.o.d -MQ mergesort.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" mergesort.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/mergesort.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/mergesort.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o name-hash.o -c -MF ./.depend/name-hash.o.d -MQ name-hash.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" name-hash.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/name-hash.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/name-hash.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o notes.o -c -MF ./.depend/notes.o.d -MQ notes.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" notes.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/notes.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/notes.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o notes-cache.o -c -MF ./.depend/notes-cache.o.d -MQ notes-cache.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" notes-cache.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/notes-cache.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/notes-cache.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o notes-merge.o -c -MF ./.depend/notes-merge.o.d -MQ notes-merge.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" notes-merge.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/notes-merge.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/notes-merge.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o notes-utils.o -c -MF ./.depend/notes-utils.o.d -MQ notes-utils.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" notes-utils.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/notes-utils.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/notes-utils.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o object.o -c -MF ./.depend/object.o.d -MQ object.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" object.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/object.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/object.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o pack-bitmap.o -c -MF ./.depend/pack-bitmap.o.d -MQ pack-bitmap.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pack-bitmap.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pack-bitmap.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pack-bitmap.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o pack-bitmap-write.o -c -MF ./.depend/pack-bitmap-write.o.d -MQ pack-bitmap-write.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pack-bitmap-write.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pack-bitmap-write.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pack-bitmap-write.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o pack-check.o -c -MF ./.depend/pack-check.o.d -MQ pack-check.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pack-check.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pack-check.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pack-check.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o pack-objects.o -c -MF ./.depend/pack-objects.o.d -MQ pack-objects.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pack-objects.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pack-objects.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pack-objects.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o pack-revindex.o -c -MF ./.depend/pack-revindex.o.d -MQ pack-revindex.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pack-revindex.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pack-revindex.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pack-revindex.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o pack-write.o -c -MF ./.depend/pack-write.o.d -MQ pack-write.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pack-write.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pack-write.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pack-write.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o pager.o -c -MF ./.depend/pager.o.d -MQ pager.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pager.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pager.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pager.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o parse-options.o -c -MF ./.depend/parse-options.o.d -MQ parse-options.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" parse-options.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/parse-options.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/parse-options.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o parse-options-cb.o -c -MF ./.depend/parse-options-cb.o.d -MQ parse-options-cb.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" parse-options-cb.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/parse-options-cb.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/parse-options-cb.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o patch-delta.o -c -MF ./.depend/patch-delta.o.d -MQ patch-delta.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" patch-delta.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/patch-delta.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/patch-delta.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o patch-ids.o -c -MF ./.depend/patch-ids.o.d -MQ patch-ids.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" patch-ids.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/patch-ids.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/patch-ids.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o path.o -c -MF ./.depend/path.o.d -MQ path.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" path.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/path.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/path.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o pathspec.o -c -MF ./.depend/pathspec.o.d -MQ pathspec.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pathspec.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pathspec.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pathspec.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o pkt-line.o -c -MF ./.depend/pkt-line.o.d -MQ pkt-line.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pkt-line.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pkt-line.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pkt-line.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o preload-index.o -c -MF ./.depend/preload-index.o.d -MQ preload-index.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" preload-index.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/preload-index.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/preload-index.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o pretty.o -c -MF ./.depend/pretty.o.d -MQ pretty.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pretty.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pretty.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pretty.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o prio-queue.o -c -MF ./.depend/prio-queue.o.d -MQ prio-queue.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" prio-queue.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/prio-queue.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/prio-queue.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o progress.o -c -MF ./.depend/progress.o.d -MQ progress.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" progress.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/progress.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/progress.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o prompt.o -c -MF ./.depend/prompt.o.d -MQ prompt.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" prompt.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/prompt.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/prompt.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o quote.o -c -MF ./.depend/quote.o.d -MQ quote.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" quote.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/quote.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/quote.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o reachable.o -c -MF ./.depend/reachable.o.d -MQ reachable.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" reachable.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/reachable.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/reachable.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o read-cache.o -c -MF ./.depend/read-cache.o.d -MQ read-cache.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" read-cache.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/read-cache.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/read-cache.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o reflog-walk.o -c -MF ./.depend/reflog-walk.o.d -MQ reflog-walk.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" reflog-walk.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/reflog-walk.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/reflog-walk.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o refs.o -c -MF ./.depend/refs.o.d -MQ refs.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" refs.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/refs.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/refs.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o ref-filter.o -c -MF ./.depend/ref-filter.o.d -MQ ref-filter.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" ref-filter.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ref-filter.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ref-filter.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o remote.o -c -MF ./.depend/remote.o.d -MQ remote.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" remote.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/remote.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/remote.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o replace_object.o -c -MF ./.depend/replace_object.o.d -MQ replace_object.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" replace_object.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/replace_object.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/replace_object.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o rerere.o -c -MF ./.depend/rerere.o.d -MQ rerere.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" rerere.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/rerere.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/rerere.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o resolve-undo.o -c -MF ./.depend/resolve-undo.o.d -MQ resolve-undo.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" resolve-undo.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/resolve-undo.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/resolve-undo.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o revision.o -c -MF ./.depend/revision.o.d -MQ revision.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" revision.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/revision.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/revision.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o run-command.o -c -MF ./.depend/run-command.o.d -MQ run-command.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" run-command.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/run-command.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/run-command.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o send-pack.o -c -MF ./.depend/send-pack.o.d -MQ send-pack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" send-pack.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/send-pack.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/send-pack.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o sequencer.o -c -MF ./.depend/sequencer.o.d -MQ sequencer.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" sequencer.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/sequencer.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/sequencer.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o server-info.o -c -MF ./.depend/server-info.o.d -MQ server-info.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" server-info.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/server-info.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/server-info.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o setup.o -c -MF ./.depend/setup.o.d -MQ setup.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" setup.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/setup.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/setup.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o sha1-array.o -c -MF ./.depend/sha1-array.o.d -MQ sha1-array.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" sha1-array.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/sha1-array.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/sha1-array.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o sha1-lookup.o -c -MF ./.depend/sha1-lookup.o.d -MQ sha1-lookup.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" sha1-lookup.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/sha1-lookup.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/sha1-lookup.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o sha1_file.o -c -MF ./.depend/sha1_file.o.d -MQ sha1_file.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" sha1_file.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/sha1_file.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/sha1_file.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o sha1_name.o -c -MF ./.depend/sha1_name.o.d -MQ sha1_name.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" sha1_name.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/sha1_name.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/sha1_name.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o shallow.o -c -MF ./.depend/shallow.o.d -MQ shallow.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" shallow.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/shallow.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/shallow.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o sideband.o -c -MF ./.depend/sideband.o.d -MQ sideband.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" sideband.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/sideband.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/sideband.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o sigchain.o -c -MF ./.depend/sigchain.o.d -MQ sigchain.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" sigchain.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/sigchain.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/sigchain.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o split-index.o -c -MF ./.depend/split-index.o.d -MQ split-index.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" split-index.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/split-index.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/split-index.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o strbuf.o -c -MF ./.depend/strbuf.o.d -MQ strbuf.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" strbuf.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/strbuf.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/strbuf.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o streaming.o -c -MF ./.depend/streaming.o.d -MQ streaming.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" streaming.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/streaming.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/streaming.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o string-list.o -c -MF ./.depend/string-list.o.d -MQ string-list.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" string-list.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/string-list.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/string-list.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o submodule.o -c -MF ./.depend/submodule.o.d -MQ submodule.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" submodule.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/submodule.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/submodule.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o submodule-config.o -c -MF ./.depend/submodule-config.o.d -MQ submodule-config.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" submodule-config.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/submodule-config.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/submodule-config.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o symlinks.o -c -MF ./.depend/symlinks.o.d -MQ symlinks.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" symlinks.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/symlinks.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/symlinks.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o tag.o -c -MF ./.depend/tag.o.d -MQ tag.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" tag.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/tag.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/tag.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o tempfile.o -c -MF ./.depend/tempfile.o.d -MQ tempfile.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" tempfile.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/tempfile.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/tempfile.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o trace.o -c -MF ./.depend/trace.o.d -MQ trace.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" trace.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/trace.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/trace.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o trailer.o -c -MF ./.depend/trailer.o.d -MQ trailer.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" trailer.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/trailer.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/trailer.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o transport.o -c -MF ./.depend/transport.o.d -MQ transport.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" transport.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/transport.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/transport.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o transport-helper.o -c -MF ./.depend/transport-helper.o.d -MQ transport-helper.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" transport-helper.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/transport-helper.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/transport-helper.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o tree-diff.o -c -MF ./.depend/tree-diff.o.d -MQ tree-diff.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" tree-diff.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/tree-diff.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/tree-diff.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o tree.o -c -MF ./.depend/tree.o.d -MQ tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" tree.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/tree.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/tree.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o tree-walk.o -c -MF ./.depend/tree-walk.o.d -MQ tree-walk.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" tree-walk.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/tree-walk.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/tree-walk.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o unpack-trees.o -c -MF ./.depend/unpack-trees.o.d -MQ unpack-trees.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" unpack-trees.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/unpack-trees.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/unpack-trees.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o url.o -c -MF ./.depend/url.o.d -MQ url.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" url.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/url.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/url.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o urlmatch.o -c -MF ./.depend/urlmatch.o.d -MQ urlmatch.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" urlmatch.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/urlmatch.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/urlmatch.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o usage.o -c -MF ./.depend/usage.o.d -MQ usage.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" usage.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/usage.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/usage.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o userdiff.o -c -MF ./.depend/userdiff.o.d -MQ userdiff.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" userdiff.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/userdiff.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/userdiff.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o utf8.o -c -MF ./.depend/utf8.o.d -MQ utf8.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" utf8.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/utf8.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/utf8.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o varint.o -c -MF ./.depend/varint.o.d -MQ varint.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" varint.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/varint.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/varint.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
-  "command": "gcc -o version.o -c -MF ./.depend/version.o.d -MQ version.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_VERSION=\"2.6.2\" -DGIT_USER_AGENT=\"git/2.6.2\" version.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/version.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
+  "command": "gcc -o version.o -c -MF ./.depend/version.o.d -MQ version.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_VERSION=\"2.6.3\" -DGIT_USER_AGENT=\"git/2.6.3\" version.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/version.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o versioncmp.o -c -MF ./.depend/versioncmp.o.d -MQ versioncmp.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" versioncmp.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/versioncmp.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/versioncmp.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o walker.o -c -MF ./.depend/walker.o.d -MQ walker.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" walker.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/walker.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/walker.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o wildmatch.o -c -MF ./.depend/wildmatch.o.d -MQ wildmatch.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" wildmatch.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/wildmatch.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/wildmatch.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o wrapper.o -c -MF ./.depend/wrapper.o.d -MQ wrapper.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" wrapper.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/wrapper.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/wrapper.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o write_or_die.o -c -MF ./.depend/write_or_die.o.d -MQ write_or_die.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" write_or_die.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/write_or_die.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/write_or_die.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o ws.o -c -MF ./.depend/ws.o.d -MQ ws.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" ws.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ws.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ws.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o wt-status.o -c -MF ./.depend/wt-status.o.d -MQ wt-status.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" wt-status.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/wt-status.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/wt-status.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o xdiff-interface.o -c -MF ./.depend/xdiff-interface.o.d -MQ xdiff-interface.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" xdiff-interface.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/xdiff-interface.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/xdiff-interface.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o zlib.o -c -MF ./.depend/zlib.o.d -MQ zlib.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" zlib.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/zlib.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/zlib.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o unix-socket.o -c -MF ./.depend/unix-socket.o.d -MQ unix-socket.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" unix-socket.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/unix-socket.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/unix-socket.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o block-sha1/sha1.o -c -MF block-sha1/.depend/sha1.o.d -MQ block-sha1/sha1.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" block-sha1/sha1.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/block-sha1/sha1.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/block-sha1/sha1.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o thread-utils.o -c -MF ./.depend/thread-utils.o.d -MQ thread-utils.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" thread-utils.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/thread-utils.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/thread-utils.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o compat/strlcpy.o -c -MF compat/.depend/strlcpy.o.d -MQ compat/strlcpy.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" compat/strlcpy.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/compat/strlcpy.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/compat/strlcpy.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o xdiff/xdiffi.o -c -MF xdiff/.depend/xdiffi.o.d -MQ xdiff/xdiffi.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" xdiff/xdiffi.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/xdiff/xdiffi.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/xdiff/xdiffi.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o xdiff/xprepare.o -c -MF xdiff/.depend/xprepare.o.d -MQ xdiff/xprepare.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" xdiff/xprepare.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/xdiff/xprepare.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/xdiff/xprepare.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o xdiff/xutils.o -c -MF xdiff/.depend/xutils.o.d -MQ xdiff/xutils.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" xdiff/xutils.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/xdiff/xutils.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/xdiff/xutils.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o xdiff/xemit.o -c -MF xdiff/.depend/xemit.o.d -MQ xdiff/xemit.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" xdiff/xemit.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/xdiff/xemit.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/xdiff/xemit.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o xdiff/xmerge.o -c -MF xdiff/.depend/xmerge.o.d -MQ xdiff/xmerge.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" xdiff/xmerge.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/xdiff/xmerge.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/xdiff/xmerge.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o xdiff/xpatience.o -c -MF xdiff/.depend/xpatience.o.d -MQ xdiff/xpatience.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" xdiff/xpatience.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/xdiff/xpatience.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/xdiff/xpatience.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o xdiff/xhistogram.o -c -MF xdiff/.depend/xhistogram.o.d -MQ xdiff/xhistogram.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" xdiff/xhistogram.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/xdiff/xhistogram.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/xdiff/xhistogram.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o daemon.o -c -MF ./.depend/daemon.o.d -MQ daemon.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" daemon.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/daemon.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/daemon.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o fast-import.o -c -MF ./.depend/fast-import.o.d -MQ fast-import.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" fast-import.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/fast-import.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/fast-import.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o http-backend.o -c -MF ./.depend/http-backend.o.d -MQ http-backend.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" http-backend.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/http-backend.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/http-backend.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o imap-send.o -c -MF ./.depend/imap-send.o.d -MQ imap-send.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" imap-send.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/imap-send.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/imap-send.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o sh-i18n--envsubst.o -c -MF ./.depend/sh-i18n--envsubst.o.d -MQ sh-i18n--envsubst.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" sh-i18n--envsubst.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/sh-i18n--envsubst.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/sh-i18n--envsubst.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o shell.o -c -MF ./.depend/shell.o.d -MQ shell.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" shell.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/shell.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/shell.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o show-index.o -c -MF ./.depend/show-index.o.d -MQ show-index.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" show-index.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/show-index.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/show-index.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o upload-pack.o -c -MF ./.depend/upload-pack.o.d -MQ upload-pack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" upload-pack.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/upload-pack.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/upload-pack.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o remote-testsvn.o -c -MF ./.depend/remote-testsvn.o.d -MQ remote-testsvn.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" remote-testsvn.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/remote-testsvn.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/remote-testsvn.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o vcs-svn/line_buffer.o -c -MF vcs-svn/.depend/line_buffer.o.d -MQ vcs-svn/line_buffer.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" vcs-svn/line_buffer.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/vcs-svn/line_buffer.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/vcs-svn/line_buffer.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o vcs-svn/sliding_window.o -c -MF vcs-svn/.depend/sliding_window.o.d -MQ vcs-svn/sliding_window.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" vcs-svn/sliding_window.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/vcs-svn/sliding_window.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/vcs-svn/sliding_window.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o vcs-svn/repo_tree.o -c -MF vcs-svn/.depend/repo_tree.o.d -MQ vcs-svn/repo_tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" vcs-svn/repo_tree.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/vcs-svn/repo_tree.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/vcs-svn/repo_tree.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o vcs-svn/fast_export.o -c -MF vcs-svn/.depend/fast_export.o.d -MQ vcs-svn/fast_export.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" vcs-svn/fast_export.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/vcs-svn/fast_export.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/vcs-svn/fast_export.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o vcs-svn/svndiff.o -c -MF vcs-svn/.depend/svndiff.o.d -MQ vcs-svn/svndiff.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" vcs-svn/svndiff.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/vcs-svn/svndiff.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/vcs-svn/svndiff.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o vcs-svn/svndump.o -c -MF vcs-svn/.depend/svndump.o.d -MQ vcs-svn/svndump.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" vcs-svn/svndump.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/vcs-svn/svndump.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/vcs-svn/svndump.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o credential-cache.o -c -MF ./.depend/credential-cache.o.d -MQ credential-cache.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" credential-cache.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/credential-cache.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/credential-cache.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o credential-cache--daemon.o -c -MF ./.depend/credential-cache--daemon.o.d -MQ credential-cache--daemon.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" credential-cache--daemon.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/credential-cache--daemon.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/credential-cache--daemon.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o git.o -c -MF ./.depend/git.o.d -MQ git.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_HTML_PATH=\"share/doc/git\" -DGIT_MAN_PATH=\"share/man\" -DGIT_INFO_PATH=\"share/info\" git.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/add.o -c -MF builtin/.depend/add.o.d -MQ builtin/add.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/add.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/add.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/add.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/am.o -c -MF builtin/.depend/am.o.d -MQ builtin/am.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/am.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/am.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/am.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/annotate.o -c -MF builtin/.depend/annotate.o.d -MQ builtin/annotate.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/annotate.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/annotate.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/annotate.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/apply.o -c -MF builtin/.depend/apply.o.d -MQ builtin/apply.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/apply.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/apply.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/apply.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/archive.o -c -MF builtin/.depend/archive.o.d -MQ builtin/archive.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/archive.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/archive.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/archive.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/bisect--helper.o -c -MF builtin/.depend/bisect--helper.o.d -MQ builtin/bisect--helper.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/bisect--helper.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/bisect--helper.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/bisect--helper.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/blame.o -c -MF builtin/.depend/blame.o.d -MQ builtin/blame.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/blame.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/blame.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/blame.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/branch.o -c -MF builtin/.depend/branch.o.d -MQ builtin/branch.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/branch.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/branch.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/branch.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/bundle.o -c -MF builtin/.depend/bundle.o.d -MQ builtin/bundle.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/bundle.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/bundle.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/bundle.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/cat-file.o -c -MF builtin/.depend/cat-file.o.d -MQ builtin/cat-file.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/cat-file.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/cat-file.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/cat-file.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/check-attr.o -c -MF builtin/.depend/check-attr.o.d -MQ builtin/check-attr.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/check-attr.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/check-attr.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/check-attr.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/check-ignore.o -c -MF builtin/.depend/check-ignore.o.d -MQ builtin/check-ignore.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/check-ignore.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/check-ignore.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/check-ignore.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/check-mailmap.o -c -MF builtin/.depend/check-mailmap.o.d -MQ builtin/check-mailmap.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/check-mailmap.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/check-mailmap.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/check-mailmap.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/check-ref-format.o -c -MF builtin/.depend/check-ref-format.o.d -MQ builtin/check-ref-format.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/check-ref-format.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/check-ref-format.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/check-ref-format.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/checkout-index.o -c -MF builtin/.depend/checkout-index.o.d -MQ builtin/checkout-index.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/checkout-index.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/checkout-index.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/checkout-index.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/checkout.o -c -MF builtin/.depend/checkout.o.d -MQ builtin/checkout.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/checkout.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/checkout.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/checkout.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/clean.o -c -MF builtin/.depend/clean.o.d -MQ builtin/clean.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/clean.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/clean.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/clean.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/clone.o -c -MF builtin/.depend/clone.o.d -MQ builtin/clone.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/clone.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/clone.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/clone.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/column.o -c -MF builtin/.depend/column.o.d -MQ builtin/column.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/column.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/column.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/column.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/commit-tree.o -c -MF builtin/.depend/commit-tree.o.d -MQ builtin/commit-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/commit-tree.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/commit-tree.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/commit-tree.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/commit.o -c -MF builtin/.depend/commit.o.d -MQ builtin/commit.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/commit.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/commit.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/commit.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/config.o -c -MF builtin/.depend/config.o.d -MQ builtin/config.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/config.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/config.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/config.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/count-objects.o -c -MF builtin/.depend/count-objects.o.d -MQ builtin/count-objects.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/count-objects.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/count-objects.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/count-objects.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/credential.o -c -MF builtin/.depend/credential.o.d -MQ builtin/credential.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/credential.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/credential.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/credential.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/describe.o -c -MF builtin/.depend/describe.o.d -MQ builtin/describe.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/describe.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/describe.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/describe.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/diff-files.o -c -MF builtin/.depend/diff-files.o.d -MQ builtin/diff-files.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/diff-files.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/diff-files.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/diff-files.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/diff-index.o -c -MF builtin/.depend/diff-index.o.d -MQ builtin/diff-index.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/diff-index.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/diff-index.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/diff-index.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/diff-tree.o -c -MF builtin/.depend/diff-tree.o.d -MQ builtin/diff-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/diff-tree.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/diff-tree.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/diff-tree.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/diff.o -c -MF builtin/.depend/diff.o.d -MQ builtin/diff.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/diff.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/diff.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/diff.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/fast-export.o -c -MF builtin/.depend/fast-export.o.d -MQ builtin/fast-export.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/fast-export.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/fast-export.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/fast-export.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/fetch-pack.o -c -MF builtin/.depend/fetch-pack.o.d -MQ builtin/fetch-pack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/fetch-pack.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/fetch-pack.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/fetch-pack.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/fetch.o -c -MF builtin/.depend/fetch.o.d -MQ builtin/fetch.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/fetch.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/fetch.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/fetch.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/fmt-merge-msg.o -c -MF builtin/.depend/fmt-merge-msg.o.d -MQ builtin/fmt-merge-msg.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/fmt-merge-msg.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/fmt-merge-msg.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/fmt-merge-msg.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/for-each-ref.o -c -MF builtin/.depend/for-each-ref.o.d -MQ builtin/for-each-ref.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/for-each-ref.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/for-each-ref.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/for-each-ref.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/fsck.o -c -MF builtin/.depend/fsck.o.d -MQ builtin/fsck.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/fsck.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/fsck.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/fsck.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/gc.o -c -MF builtin/.depend/gc.o.d -MQ builtin/gc.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/gc.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/gc.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/gc.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/get-tar-commit-id.o -c -MF builtin/.depend/get-tar-commit-id.o.d -MQ builtin/get-tar-commit-id.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/get-tar-commit-id.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/get-tar-commit-id.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/get-tar-commit-id.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/grep.o -c -MF builtin/.depend/grep.o.d -MQ builtin/grep.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/grep.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/grep.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/grep.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/hash-object.o -c -MF builtin/.depend/hash-object.o.d -MQ builtin/hash-object.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/hash-object.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/hash-object.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/hash-object.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/help.o -c -MF builtin/.depend/help.o.d -MQ builtin/help.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_HTML_PATH=\"share/doc/git\" -DGIT_MAN_PATH=\"share/man\" -DGIT_INFO_PATH=\"share/info\" builtin/help.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/help.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/help.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/index-pack.o -c -MF builtin/.depend/index-pack.o.d -MQ builtin/index-pack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/index-pack.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/index-pack.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/index-pack.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/init-db.o -c -MF builtin/.depend/init-db.o.d -MQ builtin/init-db.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DDEFAULT_GIT_TEMPLATE_DIR=\"/usr/local/share/git-core/templates\" builtin/init-db.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/init-db.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/init-db.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/interpret-trailers.o -c -MF builtin/.depend/interpret-trailers.o.d -MQ builtin/interpret-trailers.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/interpret-trailers.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/interpret-trailers.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/interpret-trailers.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/log.o -c -MF builtin/.depend/log.o.d -MQ builtin/log.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/log.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/log.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/log.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/ls-files.o -c -MF builtin/.depend/ls-files.o.d -MQ builtin/ls-files.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/ls-files.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/ls-files.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/ls-files.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/ls-remote.o -c -MF builtin/.depend/ls-remote.o.d -MQ builtin/ls-remote.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/ls-remote.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/ls-remote.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/ls-remote.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/ls-tree.o -c -MF builtin/.depend/ls-tree.o.d -MQ builtin/ls-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/ls-tree.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/ls-tree.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/ls-tree.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/mailinfo.o -c -MF builtin/.depend/mailinfo.o.d -MQ builtin/mailinfo.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/mailinfo.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/mailinfo.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/mailinfo.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/mailsplit.o -c -MF builtin/.depend/mailsplit.o.d -MQ builtin/mailsplit.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/mailsplit.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/mailsplit.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/mailsplit.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/merge.o -c -MF builtin/.depend/merge.o.d -MQ builtin/merge.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/merge.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/merge.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/merge.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/merge-base.o -c -MF builtin/.depend/merge-base.o.d -MQ builtin/merge-base.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/merge-base.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/merge-base.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/merge-base.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/merge-file.o -c -MF builtin/.depend/merge-file.o.d -MQ builtin/merge-file.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/merge-file.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/merge-file.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/merge-file.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/merge-index.o -c -MF builtin/.depend/merge-index.o.d -MQ builtin/merge-index.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/merge-index.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/merge-index.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/merge-index.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/merge-ours.o -c -MF builtin/.depend/merge-ours.o.d -MQ builtin/merge-ours.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/merge-ours.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/merge-ours.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/merge-ours.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/merge-recursive.o -c -MF builtin/.depend/merge-recursive.o.d -MQ builtin/merge-recursive.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/merge-recursive.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/merge-recursive.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/merge-recursive.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/merge-tree.o -c -MF builtin/.depend/merge-tree.o.d -MQ builtin/merge-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/merge-tree.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/merge-tree.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/merge-tree.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/mktag.o -c -MF builtin/.depend/mktag.o.d -MQ builtin/mktag.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/mktag.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/mktag.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/mktag.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/mktree.o -c -MF builtin/.depend/mktree.o.d -MQ builtin/mktree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/mktree.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/mktree.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/mktree.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/mv.o -c -MF builtin/.depend/mv.o.d -MQ builtin/mv.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/mv.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/mv.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/mv.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/name-rev.o -c -MF builtin/.depend/name-rev.o.d -MQ builtin/name-rev.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/name-rev.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/name-rev.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/name-rev.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/notes.o -c -MF builtin/.depend/notes.o.d -MQ builtin/notes.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/notes.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/notes.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/notes.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/pack-objects.o -c -MF builtin/.depend/pack-objects.o.d -MQ builtin/pack-objects.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/pack-objects.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/pack-objects.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/pack-objects.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/pack-redundant.o -c -MF builtin/.depend/pack-redundant.o.d -MQ builtin/pack-redundant.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/pack-redundant.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/pack-redundant.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/pack-redundant.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/pack-refs.o -c -MF builtin/.depend/pack-refs.o.d -MQ builtin/pack-refs.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/pack-refs.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/pack-refs.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/pack-refs.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/patch-id.o -c -MF builtin/.depend/patch-id.o.d -MQ builtin/patch-id.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/patch-id.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/patch-id.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/patch-id.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/prune-packed.o -c -MF builtin/.depend/prune-packed.o.d -MQ builtin/prune-packed.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/prune-packed.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/prune-packed.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/prune-packed.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/prune.o -c -MF builtin/.depend/prune.o.d -MQ builtin/prune.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/prune.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/prune.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/prune.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/pull.o -c -MF builtin/.depend/pull.o.d -MQ builtin/pull.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/pull.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/pull.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/pull.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/push.o -c -MF builtin/.depend/push.o.d -MQ builtin/push.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/push.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/push.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/push.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/read-tree.o -c -MF builtin/.depend/read-tree.o.d -MQ builtin/read-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/read-tree.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/read-tree.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/read-tree.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/receive-pack.o -c -MF builtin/.depend/receive-pack.o.d -MQ builtin/receive-pack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/receive-pack.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/receive-pack.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/receive-pack.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/reflog.o -c -MF builtin/.depend/reflog.o.d -MQ builtin/reflog.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/reflog.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/reflog.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/reflog.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/remote.o -c -MF builtin/.depend/remote.o.d -MQ builtin/remote.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/remote.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/remote.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/remote.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/remote-ext.o -c -MF builtin/.depend/remote-ext.o.d -MQ builtin/remote-ext.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/remote-ext.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/remote-ext.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/remote-ext.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/remote-fd.o -c -MF builtin/.depend/remote-fd.o.d -MQ builtin/remote-fd.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/remote-fd.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/remote-fd.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/remote-fd.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/repack.o -c -MF builtin/.depend/repack.o.d -MQ builtin/repack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/repack.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/repack.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/repack.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/replace.o -c -MF builtin/.depend/replace.o.d -MQ builtin/replace.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/replace.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/replace.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/replace.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/rerere.o -c -MF builtin/.depend/rerere.o.d -MQ builtin/rerere.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/rerere.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/rerere.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/rerere.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/reset.o -c -MF builtin/.depend/reset.o.d -MQ builtin/reset.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/reset.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/reset.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/reset.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/rev-list.o -c -MF builtin/.depend/rev-list.o.d -MQ builtin/rev-list.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/rev-list.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/rev-list.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/rev-list.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/rev-parse.o -c -MF builtin/.depend/rev-parse.o.d -MQ builtin/rev-parse.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/rev-parse.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/rev-parse.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/rev-parse.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/revert.o -c -MF builtin/.depend/revert.o.d -MQ builtin/revert.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/revert.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/revert.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/revert.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/rm.o -c -MF builtin/.depend/rm.o.d -MQ builtin/rm.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/rm.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/rm.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/rm.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/send-pack.o -c -MF builtin/.depend/send-pack.o.d -MQ builtin/send-pack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/send-pack.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/send-pack.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/send-pack.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/shortlog.o -c -MF builtin/.depend/shortlog.o.d -MQ builtin/shortlog.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/shortlog.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/shortlog.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/shortlog.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/show-branch.o -c -MF builtin/.depend/show-branch.o.d -MQ builtin/show-branch.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/show-branch.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/show-branch.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/show-branch.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/show-ref.o -c -MF builtin/.depend/show-ref.o.d -MQ builtin/show-ref.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/show-ref.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/show-ref.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/show-ref.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/stripspace.o -c -MF builtin/.depend/stripspace.o.d -MQ builtin/stripspace.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/stripspace.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/stripspace.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/stripspace.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/symbolic-ref.o -c -MF builtin/.depend/symbolic-ref.o.d -MQ builtin/symbolic-ref.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/symbolic-ref.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/symbolic-ref.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/symbolic-ref.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/tag.o -c -MF builtin/.depend/tag.o.d -MQ builtin/tag.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/tag.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/tag.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/tag.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/unpack-file.o -c -MF builtin/.depend/unpack-file.o.d -MQ builtin/unpack-file.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/unpack-file.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/unpack-file.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/unpack-file.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/unpack-objects.o -c -MF builtin/.depend/unpack-objects.o.d -MQ builtin/unpack-objects.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/unpack-objects.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/unpack-objects.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/unpack-objects.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/update-index.o -c -MF builtin/.depend/update-index.o.d -MQ builtin/update-index.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/update-index.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/update-index.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/update-index.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/update-ref.o -c -MF builtin/.depend/update-ref.o.d -MQ builtin/update-ref.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/update-ref.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/update-ref.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/update-ref.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/update-server-info.o -c -MF builtin/.depend/update-server-info.o.d -MQ builtin/update-server-info.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/update-server-info.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/update-server-info.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/update-server-info.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/upload-archive.o -c -MF builtin/.depend/upload-archive.o.d -MQ builtin/upload-archive.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/upload-archive.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/upload-archive.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/upload-archive.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/var.o -c -MF builtin/.depend/var.o.d -MQ builtin/var.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/var.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/var.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/var.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/verify-commit.o -c -MF builtin/.depend/verify-commit.o.d -MQ builtin/verify-commit.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/verify-commit.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/verify-commit.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/verify-commit.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/verify-pack.o -c -MF builtin/.depend/verify-pack.o.d -MQ builtin/verify-pack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/verify-pack.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/verify-pack.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/verify-pack.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/verify-tag.o -c -MF builtin/.depend/verify-tag.o.d -MQ builtin/verify-tag.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/verify-tag.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/verify-tag.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/verify-tag.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/worktree.o -c -MF builtin/.depend/worktree.o.d -MQ builtin/worktree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/worktree.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/worktree.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/worktree.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o builtin/write-tree.o -c -MF builtin/.depend/write-tree.o.d -MQ builtin/write-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/write-tree.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/write-tree.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/write-tree.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o test-chmtime.o -c -MF ./.depend/test-chmtime.o.d -MQ test-chmtime.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-chmtime.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-chmtime.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-chmtime.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o test-ctype.o -c -MF ./.depend/test-ctype.o.d -MQ test-ctype.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-ctype.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-ctype.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-ctype.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o test-config.o -c -MF ./.depend/test-config.o.d -MQ test-config.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-config.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-config.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-config.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o test-date.o -c -MF ./.depend/test-date.o.d -MQ test-date.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-date.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-date.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-date.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o test-delta.o -c -MF ./.depend/test-delta.o.d -MQ test-delta.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-delta.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-delta.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-delta.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o test-dump-cache-tree.o -c -MF ./.depend/test-dump-cache-tree.o.d -MQ test-dump-cache-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-dump-cache-tree.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-dump-cache-tree.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-dump-cache-tree.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o test-dump-split-index.o -c -MF ./.depend/test-dump-split-index.o.d -MQ test-dump-split-index.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-dump-split-index.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-dump-split-index.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-dump-split-index.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o test-dump-untracked-cache.o -c -MF ./.depend/test-dump-untracked-cache.o.d -MQ test-dump-untracked-cache.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-dump-untracked-cache.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-dump-untracked-cache.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-dump-untracked-cache.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o test-genrandom.o -c -MF ./.depend/test-genrandom.o.d -MQ test-genrandom.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-genrandom.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-genrandom.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-genrandom.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o test-hashmap.o -c -MF ./.depend/test-hashmap.o.d -MQ test-hashmap.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-hashmap.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-hashmap.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-hashmap.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o test-index-version.o -c -MF ./.depend/test-index-version.o.d -MQ test-index-version.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-index-version.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-index-version.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-index-version.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o test-line-buffer.o -c -MF ./.depend/test-line-buffer.o.d -MQ test-line-buffer.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-line-buffer.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-line-buffer.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-line-buffer.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o test-match-trees.o -c -MF ./.depend/test-match-trees.o.d -MQ test-match-trees.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-match-trees.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-match-trees.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-match-trees.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o test-mergesort.o -c -MF ./.depend/test-mergesort.o.d -MQ test-mergesort.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-mergesort.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-mergesort.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-mergesort.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o test-mktemp.o -c -MF ./.depend/test-mktemp.o.d -MQ test-mktemp.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-mktemp.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-mktemp.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-mktemp.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o test-parse-options.o -c -MF ./.depend/test-parse-options.o.d -MQ test-parse-options.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-parse-options.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-parse-options.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-parse-options.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o test-path-utils.o -c -MF ./.depend/test-path-utils.o.d -MQ test-path-utils.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-path-utils.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-path-utils.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-path-utils.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o test-prio-queue.o -c -MF ./.depend/test-prio-queue.o.d -MQ test-prio-queue.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-prio-queue.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-prio-queue.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-prio-queue.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o test-read-cache.o -c -MF ./.depend/test-read-cache.o.d -MQ test-read-cache.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-read-cache.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-read-cache.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-read-cache.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o test-regex.o -c -MF ./.depend/test-regex.o.d -MQ test-regex.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-regex.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-regex.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-regex.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o test-revision-walking.o -c -MF ./.depend/test-revision-walking.o.d -MQ test-revision-walking.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-revision-walking.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-revision-walking.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-revision-walking.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o test-run-command.o -c -MF ./.depend/test-run-command.o.d -MQ test-run-command.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-run-command.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-run-command.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-run-command.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o test-scrap-cache-tree.o -c -MF ./.depend/test-scrap-cache-tree.o.d -MQ test-scrap-cache-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-scrap-cache-tree.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-scrap-cache-tree.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-scrap-cache-tree.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o test-sha1.o -c -MF ./.depend/test-sha1.o.d -MQ test-sha1.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-sha1.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-sha1.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-sha1.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o test-sha1-array.o -c -MF ./.depend/test-sha1-array.o.d -MQ test-sha1-array.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-sha1-array.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-sha1-array.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-sha1-array.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o test-sigchain.o -c -MF ./.depend/test-sigchain.o.d -MQ test-sigchain.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-sigchain.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-sigchain.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-sigchain.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o test-string-list.o -c -MF ./.depend/test-string-list.o.d -MQ test-string-list.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-string-list.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-string-list.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-string-list.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o test-submodule-config.o -c -MF ./.depend/test-submodule-config.o.d -MQ test-submodule-config.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-submodule-config.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-submodule-config.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-submodule-config.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o test-subprocess.o -c -MF ./.depend/test-subprocess.o.d -MQ test-subprocess.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-subprocess.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-subprocess.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-subprocess.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o test-svn-fe.o -c -MF ./.depend/test-svn-fe.o.d -MQ test-svn-fe.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-svn-fe.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-svn-fe.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-svn-fe.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o test-urlmatch-normalization.o -c -MF ./.depend/test-urlmatch-normalization.o.d -MQ test-urlmatch-normalization.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-urlmatch-normalization.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-urlmatch-normalization.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-urlmatch-normalization.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3",
   "command": "gcc -o test-wildmatch.o -c -MF ./.depend/test-wildmatch.o.d -MQ test-wildmatch.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DHAVE_GETDELIM -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-wildmatch.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-wildmatch.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-wildmatch.c"
 }
 ]
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/compiled_files.def /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/compiled_files.def
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/compiled_files.def	2017-10-10 14:25:06.446382776 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/compiled_files.def	2017-10-10 14:28:54.934374402 +0800
@@ -1,319 +1,319 @@
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/credential-store.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/abspath.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/advice.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/alias.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/alloc.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/archive.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/archive-tar.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/archive-zip.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/argv-array.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/attr.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/base85.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bisect.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/blob.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/branch.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bulk-checkin.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/bundle.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/cache-tree.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/color.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/column.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/combine-diff.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/commit.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/compat/obstack.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/compat/terminal.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/config.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/connect.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/connected.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/convert.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/copy.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/credential.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/csum-file.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ctype.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/date.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/decorate.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diffcore-break.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diffcore-delta.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diffcore-order.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diffcore-pickaxe.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diffcore-rename.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diff-delta.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diff-lib.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diff-no-index.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diff.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/dir.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/editor.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/entry.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/environment.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ewah/bitmap.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ewah/ewah_bitmap.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ewah/ewah_io.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ewah/ewah_rlw.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/exec_cmd.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/fetch-pack.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/fsck.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/gettext.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/gpg-interface.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/graph.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/grep.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/hashmap.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/help.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/hex.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ident.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/kwset.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/levenshtein.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/line-log.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/line-range.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/list-objects.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ll-merge.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/lockfile.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/log-tree.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/mailmap.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/match-trees.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/merge.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/merge-blobs.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/merge-recursive.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/mergesort.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/name-hash.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/notes.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/notes-cache.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/notes-merge.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/notes-utils.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/object.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pack-bitmap.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pack-bitmap-write.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pack-check.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pack-objects.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pack-revindex.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pack-write.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pager.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/parse-options.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/parse-options-cb.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/patch-delta.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/patch-ids.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/path.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pathspec.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pkt-line.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/preload-index.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pretty.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/prio-queue.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/progress.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/prompt.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/quote.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/reachable.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/read-cache.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/reflog-walk.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/refs.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ref-filter.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/remote.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/replace_object.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/rerere.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/resolve-undo.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/revision.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/run-command.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/send-pack.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/sequencer.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/server-info.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/setup.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/sha1-array.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/sha1-lookup.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/sha1_file.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/sha1_name.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/shallow.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/sideband.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/sigchain.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/split-index.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/strbuf.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/streaming.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/string-list.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/submodule.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/submodule-config.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/symlinks.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/tag.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/tempfile.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/trace.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/trailer.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/transport.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/transport-helper.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/tree-diff.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/tree.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/tree-walk.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/unpack-trees.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/url.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/urlmatch.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/usage.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/userdiff.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/utf8.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/varint.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/version.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/versioncmp.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/walker.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/wildmatch.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/wrapper.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/write_or_die.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ws.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/wt-status.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/xdiff-interface.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/zlib.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/unix-socket.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/block-sha1/sha1.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/thread-utils.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/compat/strlcpy.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/xdiff/xdiffi.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/xdiff/xprepare.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/xdiff/xutils.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/xdiff/xemit.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/xdiff/xmerge.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/xdiff/xpatience.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/xdiff/xhistogram.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/daemon.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/fast-import.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/http-backend.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/imap-send.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/sh-i18n--envsubst.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/shell.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/show-index.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/upload-pack.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/remote-testsvn.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/vcs-svn/line_buffer.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/vcs-svn/sliding_window.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/vcs-svn/repo_tree.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/vcs-svn/fast_export.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/vcs-svn/svndiff.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/vcs-svn/svndump.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/credential-cache.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/credential-cache--daemon.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/add.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/am.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/annotate.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/apply.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/archive.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/bisect--helper.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/blame.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/branch.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/bundle.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/cat-file.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/check-attr.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/check-ignore.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/check-mailmap.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/check-ref-format.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/checkout-index.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/checkout.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/clean.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/clone.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/column.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/commit-tree.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/commit.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/config.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/count-objects.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/credential.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/describe.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/diff-files.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/diff-index.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/diff-tree.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/diff.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/fast-export.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/fetch-pack.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/fetch.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/fmt-merge-msg.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/for-each-ref.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/fsck.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/gc.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/get-tar-commit-id.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/grep.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/hash-object.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/help.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/index-pack.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/init-db.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/interpret-trailers.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/log.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/ls-files.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/ls-remote.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/ls-tree.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/mailinfo.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/mailsplit.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/merge.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/merge-base.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/merge-file.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/merge-index.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/merge-ours.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/merge-recursive.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/merge-tree.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/mktag.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/mktree.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/mv.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/name-rev.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/notes.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/pack-objects.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/pack-redundant.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/pack-refs.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/patch-id.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/prune-packed.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/prune.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/pull.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/push.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/read-tree.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/receive-pack.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/reflog.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/remote.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/remote-ext.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/remote-fd.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/repack.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/replace.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/rerere.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/reset.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/rev-list.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/rev-parse.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/revert.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/rm.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/send-pack.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/shortlog.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/show-branch.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/show-ref.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/stripspace.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/symbolic-ref.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/tag.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/unpack-file.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/unpack-objects.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/update-index.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/update-ref.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/update-server-info.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/upload-archive.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/var.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/verify-commit.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/verify-pack.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/verify-tag.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/worktree.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/builtin/write-tree.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-chmtime.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-ctype.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-config.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-date.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-delta.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-dump-cache-tree.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-dump-split-index.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-dump-untracked-cache.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-genrandom.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-hashmap.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-index-version.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-line-buffer.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-match-trees.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-mergesort.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-mktemp.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-parse-options.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-path-utils.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-prio-queue.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-read-cache.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-regex.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-revision-walking.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-run-command.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-scrap-cache-tree.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-sha1.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-sha1-array.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-sigchain.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-string-list.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-submodule-config.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-subprocess.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-svn-fe.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-urlmatch-normalization.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-wildmatch.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/credential-store.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/abspath.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/advice.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/alias.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/alloc.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/archive.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/archive-tar.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/archive-zip.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/argv-array.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/attr.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/base85.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bisect.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/blob.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/branch.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bulk-checkin.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/bundle.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/cache-tree.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/color.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/column.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/combine-diff.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/commit.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/compat/obstack.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/compat/terminal.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/config.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/connect.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/connected.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/convert.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/copy.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/credential.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/csum-file.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ctype.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/date.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/decorate.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diffcore-break.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diffcore-delta.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diffcore-order.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diffcore-pickaxe.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diffcore-rename.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diff-delta.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diff-lib.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diff-no-index.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diff.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/dir.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/editor.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/entry.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/environment.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ewah/bitmap.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ewah/ewah_bitmap.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ewah/ewah_io.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ewah/ewah_rlw.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/exec_cmd.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/fetch-pack.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/fsck.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/gettext.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/gpg-interface.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/graph.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/grep.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/hashmap.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/help.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/hex.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ident.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/kwset.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/levenshtein.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/line-log.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/line-range.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/list-objects.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ll-merge.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/lockfile.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/log-tree.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/mailmap.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/match-trees.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/merge.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/merge-blobs.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/merge-recursive.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/mergesort.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/name-hash.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/notes.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/notes-cache.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/notes-merge.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/notes-utils.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/object.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pack-bitmap.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pack-bitmap-write.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pack-check.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pack-objects.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pack-revindex.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pack-write.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pager.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/parse-options.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/parse-options-cb.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/patch-delta.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/patch-ids.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/path.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pathspec.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pkt-line.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/preload-index.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pretty.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/prio-queue.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/progress.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/prompt.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/quote.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/reachable.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/read-cache.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/reflog-walk.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/refs.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ref-filter.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/remote.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/replace_object.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/rerere.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/resolve-undo.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/revision.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/run-command.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/send-pack.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/sequencer.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/server-info.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/setup.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/sha1-array.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/sha1-lookup.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/sha1_file.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/sha1_name.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/shallow.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/sideband.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/sigchain.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/split-index.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/strbuf.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/streaming.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/string-list.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/submodule.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/submodule-config.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/symlinks.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/tag.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/tempfile.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/trace.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/trailer.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/transport.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/transport-helper.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/tree-diff.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/tree.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/tree-walk.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/unpack-trees.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/url.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/urlmatch.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/usage.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/userdiff.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/utf8.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/varint.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/version.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/versioncmp.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/walker.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/wildmatch.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/wrapper.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/write_or_die.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ws.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/wt-status.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/xdiff-interface.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/zlib.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/unix-socket.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/block-sha1/sha1.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/thread-utils.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/compat/strlcpy.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/xdiff/xdiffi.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/xdiff/xprepare.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/xdiff/xutils.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/xdiff/xemit.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/xdiff/xmerge.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/xdiff/xpatience.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/xdiff/xhistogram.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/daemon.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/fast-import.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/http-backend.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/imap-send.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/sh-i18n--envsubst.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/shell.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/show-index.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/upload-pack.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/remote-testsvn.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/vcs-svn/line_buffer.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/vcs-svn/sliding_window.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/vcs-svn/repo_tree.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/vcs-svn/fast_export.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/vcs-svn/svndiff.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/vcs-svn/svndump.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/credential-cache.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/credential-cache--daemon.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/add.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/am.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/annotate.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/apply.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/archive.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/bisect--helper.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/blame.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/branch.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/bundle.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/cat-file.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/check-attr.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/check-ignore.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/check-mailmap.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/check-ref-format.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/checkout-index.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/checkout.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/clean.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/clone.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/column.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/commit-tree.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/commit.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/config.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/count-objects.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/credential.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/describe.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/diff-files.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/diff-index.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/diff-tree.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/diff.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/fast-export.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/fetch-pack.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/fetch.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/fmt-merge-msg.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/for-each-ref.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/fsck.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/gc.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/get-tar-commit-id.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/grep.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/hash-object.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/help.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/index-pack.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/init-db.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/interpret-trailers.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/log.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/ls-files.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/ls-remote.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/ls-tree.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/mailinfo.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/mailsplit.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/merge.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/merge-base.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/merge-file.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/merge-index.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/merge-ours.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/merge-recursive.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/merge-tree.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/mktag.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/mktree.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/mv.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/name-rev.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/notes.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/pack-objects.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/pack-redundant.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/pack-refs.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/patch-id.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/prune-packed.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/prune.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/pull.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/push.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/read-tree.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/receive-pack.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/reflog.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/remote.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/remote-ext.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/remote-fd.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/repack.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/replace.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/rerere.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/reset.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/rev-list.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/rev-parse.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/revert.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/rm.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/send-pack.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/shortlog.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/show-branch.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/show-ref.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/stripspace.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/symbolic-ref.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/tag.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/unpack-file.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/unpack-objects.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/update-index.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/update-ref.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/update-server-info.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/upload-archive.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/var.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/verify-commit.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/verify-pack.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/verify-tag.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/worktree.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/builtin/write-tree.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-chmtime.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-ctype.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-config.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-date.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-delta.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-dump-cache-tree.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-dump-split-index.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-dump-untracked-cache.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-genrandom.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-hashmap.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-index-version.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-line-buffer.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-match-trees.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-mergesort.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-mktemp.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-parse-options.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-path-utils.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-prio-queue.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-read-cache.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-regex.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-revision-walking.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-run-command.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-scrap-cache-tree.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-sha1.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-sha1-array.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-sigchain.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-string-list.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-submodule-config.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-subprocess.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-svn-fe.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-urlmatch-normalization.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-wildmatch.c
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/config.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/config.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/config.log /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/config.log
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/config.log	2017-10-10 14:24:13.054384733 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/config.log	2017-10-10 14:28:00.978376379 +0800
@@ -1,10 +1,10 @@
 This file contains any messages produced by compilers while
 running configure, to aid debugging if configure makes a mistake.
 
-It was created by git configure 2.6.2, which was
+It was created by git configure 2.6.3, which was
 generated by GNU Autoconf 2.69.  Invocation command line was
 
   $ ./configure 
 
 ## --------- ##
 ## Platform. ##
@@ -40,178 +40,178 @@
 
 
 ## ----------- ##
 ## Core tests. ##
 ## ----------- ##
 
-configure:2337: Setting lib to 'lib' (the default)
-configure:2360: Will try -pthread then -lpthread to enable POSIX Threads.
-configure:2394: CHECKS for site configuration
-configure:2501: checking for gcc
-configure:2517: found /usr/bin/gcc
-configure:2528: result: gcc
-configure:2757: checking for C compiler version
-configure:2766: gcc --version >&5
+configure:2338: Setting lib to 'lib' (the default)
+configure:2361: Will try -pthread then -lpthread to enable POSIX Threads.
+configure:2395: CHECKS for site configuration
+configure:2502: checking for gcc
+configure:2518: found /usr/bin/gcc
+configure:2529: result: gcc
+configure:2758: checking for C compiler version
+configure:2767: gcc --version >&5
 gcc (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
 Copyright (C) 2013 Free Software Foundation, Inc.
 This is free software; see the source for copying conditions.  There is NO
 warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 
-configure:2777: $? = 0
-configure:2766: gcc -v >&5
+configure:2778: $? = 0
+configure:2767: gcc -v >&5
 Using built-in specs.
 COLLECT_GCC=gcc
 COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/4.8/lto-wrapper
 Target: x86_64-linux-gnu
 Configured with: ../src/configure -v --with-pkgversion='Ubuntu 4.8.4-2ubuntu1~14.04.3' --with-bugurl=file:///usr/share/doc/gcc-4.8/README.Bugs --enable-languages=c,c++,java,go,d,fortran,objc,obj-c++ --prefix=/usr --program-suffix=-4.8 --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --with-gxx-include-dir=/usr/include/c++/4.8 --libdir=/usr/lib --enable-nls --with-sysroot=/ --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --enable-gnu-unique-object --disable-libmudflap --enable-plugin --with-system-zlib --disable-browser-plugin --enable-java-awt=gtk --enable-gtk-cairo --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-4.8-amd64/jre --enable-java-home --with-jvm-root-dir=/usr/lib/jvm/java-1.5.0-gcj-4.8-amd64 --with-jvm-jar-dir=/usr/lib/jvm-exports/java-1.5.0-gcj-4.8-amd64 --with-arch-directory=amd64 --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --enable-objc-gc --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --with-tune=generic --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu
 Thread model: posix
 gcc version 4.8.4 (Ubuntu 4.8.4-2ubuntu1~14.04.3) 
-configure:2777: $? = 0
-configure:2766: gcc -V >&5
+configure:2778: $? = 0
+configure:2767: gcc -V >&5
 gcc: error: unrecognized command line option '-V'
 gcc: fatal error: no input files
 compilation terminated.
-configure:2777: $? = 4
-configure:2766: gcc -qversion >&5
+configure:2778: $? = 4
+configure:2767: gcc -qversion >&5
 gcc: error: unrecognized command line option '-qversion'
 gcc: fatal error: no input files
 compilation terminated.
-configure:2777: $? = 4
-configure:2797: checking whether the C compiler works
-configure:2819: gcc    conftest.c  >&5
-configure:2823: $? = 0
-configure:2871: result: yes
-configure:2874: checking for C compiler default output file name
-configure:2876: result: a.out
-configure:2882: checking for suffix of executables
-configure:2889: gcc -o conftest    conftest.c  >&5
-configure:2893: $? = 0
-configure:2915: result: 
-configure:2937: checking whether we are cross compiling
-configure:2945: gcc -o conftest    conftest.c  >&5
-configure:2949: $? = 0
-configure:2956: ./conftest
-configure:2960: $? = 0
-configure:2975: result: no
-configure:2980: checking for suffix of object files
-configure:3002: gcc -c   conftest.c >&5
-configure:3006: $? = 0
-configure:3027: result: o
-configure:3031: checking whether we are using the GNU C compiler
-configure:3050: gcc -c   conftest.c >&5
-configure:3050: $? = 0
-configure:3059: result: yes
-configure:3068: checking whether gcc accepts -g
-configure:3088: gcc -c -g  conftest.c >&5
-configure:3088: $? = 0
-configure:3129: result: yes
-configure:3146: checking for gcc option to accept ISO C89
-configure:3209: gcc  -c -g -O2  conftest.c >&5
-configure:3209: $? = 0
-configure:3222: result: none needed
-configure:3248: checking how to run the C preprocessor
-configure:3279: gcc -E  conftest.c
-configure:3279: $? = 0
-configure:3293: gcc -E  conftest.c
+configure:2778: $? = 4
+configure:2798: checking whether the C compiler works
+configure:2820: gcc    conftest.c  >&5
+configure:2824: $? = 0
+configure:2872: result: yes
+configure:2875: checking for C compiler default output file name
+configure:2877: result: a.out
+configure:2883: checking for suffix of executables
+configure:2890: gcc -o conftest    conftest.c  >&5
+configure:2894: $? = 0
+configure:2916: result: 
+configure:2938: checking whether we are cross compiling
+configure:2946: gcc -o conftest    conftest.c  >&5
+configure:2950: $? = 0
+configure:2957: ./conftest
+configure:2961: $? = 0
+configure:2976: result: no
+configure:2981: checking for suffix of object files
+configure:3003: gcc -c   conftest.c >&5
+configure:3007: $? = 0
+configure:3028: result: o
+configure:3032: checking whether we are using the GNU C compiler
+configure:3051: gcc -c   conftest.c >&5
+configure:3051: $? = 0
+configure:3060: result: yes
+configure:3069: checking whether gcc accepts -g
+configure:3089: gcc -c -g  conftest.c >&5
+configure:3089: $? = 0
+configure:3130: result: yes
+configure:3147: checking for gcc option to accept ISO C89
+configure:3210: gcc  -c -g -O2  conftest.c >&5
+configure:3210: $? = 0
+configure:3223: result: none needed
+configure:3249: checking how to run the C preprocessor
+configure:3280: gcc -E  conftest.c
+configure:3280: $? = 0
+configure:3294: gcc -E  conftest.c
 conftest.c:9:28: fatal error: ac_nonexistent.h: No such file or directory
  #include <ac_nonexistent.h>
                             ^
 compilation terminated.
-configure:3293: $? = 1
+configure:3294: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.6.2"
-| #define PACKAGE_STRING "git 2.6.2"
+| #define PACKAGE_VERSION "2.6.3"
+| #define PACKAGE_STRING "git 2.6.3"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | /* end confdefs.h.  */
 | #include <ac_nonexistent.h>
-configure:3318: result: gcc -E
-configure:3338: gcc -E  conftest.c
-configure:3338: $? = 0
-configure:3352: gcc -E  conftest.c
+configure:3319: result: gcc -E
+configure:3339: gcc -E  conftest.c
+configure:3339: $? = 0
+configure:3353: gcc -E  conftest.c
 conftest.c:9:28: fatal error: ac_nonexistent.h: No such file or directory
  #include <ac_nonexistent.h>
                             ^
 compilation terminated.
-configure:3352: $? = 1
+configure:3353: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.6.2"
-| #define PACKAGE_STRING "git 2.6.2"
+| #define PACKAGE_VERSION "2.6.3"
+| #define PACKAGE_STRING "git 2.6.3"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | /* end confdefs.h.  */
 | #include <ac_nonexistent.h>
-configure:3381: checking for grep that handles long lines and -e
-configure:3439: result: /bin/grep
-configure:3444: checking for egrep
-configure:3506: result: /bin/grep -E
-configure:3511: checking for ANSI C header files
-configure:3531: gcc -c -g -O2  conftest.c >&5
-configure:3531: $? = 0
-configure:3604: gcc -o conftest -g -O2   conftest.c  >&5
-configure:3604: $? = 0
-configure:3604: ./conftest
-configure:3604: $? = 0
-configure:3615: result: yes
-configure:3628: checking for sys/types.h
-configure:3628: gcc -c -g -O2  conftest.c >&5
-configure:3628: $? = 0
-configure:3628: result: yes
-configure:3628: checking for sys/stat.h
-configure:3628: gcc -c -g -O2  conftest.c >&5
-configure:3628: $? = 0
-configure:3628: result: yes
-configure:3628: checking for stdlib.h
-configure:3628: gcc -c -g -O2  conftest.c >&5
-configure:3628: $? = 0
-configure:3628: result: yes
-configure:3628: checking for string.h
-configure:3628: gcc -c -g -O2  conftest.c >&5
-configure:3628: $? = 0
-configure:3628: result: yes
-configure:3628: checking for memory.h
-configure:3628: gcc -c -g -O2  conftest.c >&5
-configure:3628: $? = 0
-configure:3628: result: yes
-configure:3628: checking for strings.h
-configure:3628: gcc -c -g -O2  conftest.c >&5
-configure:3628: $? = 0
-configure:3628: result: yes
-configure:3628: checking for inttypes.h
-configure:3628: gcc -c -g -O2  conftest.c >&5
-configure:3628: $? = 0
-configure:3628: result: yes
-configure:3628: checking for stdint.h
-configure:3628: gcc -c -g -O2  conftest.c >&5
-configure:3628: $? = 0
-configure:3628: result: yes
-configure:3628: checking for unistd.h
-configure:3628: gcc -c -g -O2  conftest.c >&5
-configure:3628: $? = 0
-configure:3628: result: yes
-configure:3640: checking for size_t
-configure:3640: gcc -c -g -O2  conftest.c >&5
-configure:3640: $? = 0
-configure:3640: gcc -c -g -O2  conftest.c >&5
+configure:3382: checking for grep that handles long lines and -e
+configure:3440: result: /bin/grep
+configure:3445: checking for egrep
+configure:3507: result: /bin/grep -E
+configure:3512: checking for ANSI C header files
+configure:3532: gcc -c -g -O2  conftest.c >&5
+configure:3532: $? = 0
+configure:3605: gcc -o conftest -g -O2   conftest.c  >&5
+configure:3605: $? = 0
+configure:3605: ./conftest
+configure:3605: $? = 0
+configure:3616: result: yes
+configure:3629: checking for sys/types.h
+configure:3629: gcc -c -g -O2  conftest.c >&5
+configure:3629: $? = 0
+configure:3629: result: yes
+configure:3629: checking for sys/stat.h
+configure:3629: gcc -c -g -O2  conftest.c >&5
+configure:3629: $? = 0
+configure:3629: result: yes
+configure:3629: checking for stdlib.h
+configure:3629: gcc -c -g -O2  conftest.c >&5
+configure:3629: $? = 0
+configure:3629: result: yes
+configure:3629: checking for string.h
+configure:3629: gcc -c -g -O2  conftest.c >&5
+configure:3629: $? = 0
+configure:3629: result: yes
+configure:3629: checking for memory.h
+configure:3629: gcc -c -g -O2  conftest.c >&5
+configure:3629: $? = 0
+configure:3629: result: yes
+configure:3629: checking for strings.h
+configure:3629: gcc -c -g -O2  conftest.c >&5
+configure:3629: $? = 0
+configure:3629: result: yes
+configure:3629: checking for inttypes.h
+configure:3629: gcc -c -g -O2  conftest.c >&5
+configure:3629: $? = 0
+configure:3629: result: yes
+configure:3629: checking for stdint.h
+configure:3629: gcc -c -g -O2  conftest.c >&5
+configure:3629: $? = 0
+configure:3629: result: yes
+configure:3629: checking for unistd.h
+configure:3629: gcc -c -g -O2  conftest.c >&5
+configure:3629: $? = 0
+configure:3629: result: yes
+configure:3641: checking for size_t
+configure:3641: gcc -c -g -O2  conftest.c >&5
+configure:3641: $? = 0
+configure:3641: gcc -c -g -O2  conftest.c >&5
 conftest.c: In function 'main':
 conftest.c:55:21: error: expected expression before ')' token
  if (sizeof ((size_t)))
                      ^
-configure:3640: $? = 1
+configure:3641: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.6.2"
-| #define PACKAGE_STRING "git 2.6.2"
+| #define PACKAGE_VERSION "2.6.3"
+| #define PACKAGE_STRING "git 2.6.3"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -260,69 +260,69 @@
 | {
 | if (sizeof ((size_t)))
 | 	    return 0;
 |   ;
 |   return 0;
 | }
-configure:3640: result: yes
-configure:3653: checking for working alloca.h
-configure:3670: gcc -o conftest -g -O2   conftest.c  >&5
-configure:3670: $? = 0
-configure:3678: result: yes
-configure:3686: checking for alloca
-configure:3723: gcc -o conftest -g -O2   conftest.c  >&5
-configure:3723: $? = 0
-configure:3731: result: yes
-configure:4169: CHECKS for programs
-configure:4284: checking for C compiler version
-configure:4293: gcc --version >&5
+configure:3641: result: yes
+configure:3654: checking for working alloca.h
+configure:3671: gcc -o conftest -g -O2   conftest.c  >&5
+configure:3671: $? = 0
+configure:3679: result: yes
+configure:3687: checking for alloca
+configure:3724: gcc -o conftest -g -O2   conftest.c  >&5
+configure:3724: $? = 0
+configure:3732: result: yes
+configure:4170: CHECKS for programs
+configure:4285: checking for C compiler version
+configure:4294: gcc --version >&5
 gcc (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
 Copyright (C) 2013 Free Software Foundation, Inc.
 This is free software; see the source for copying conditions.  There is NO
 warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 
-configure:4304: $? = 0
-configure:4293: gcc -v >&5
+configure:4305: $? = 0
+configure:4294: gcc -v >&5
 Using built-in specs.
 COLLECT_GCC=gcc
 COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/4.8/lto-wrapper
 Target: x86_64-linux-gnu
 Configured with: ../src/configure -v --with-pkgversion='Ubuntu 4.8.4-2ubuntu1~14.04.3' --with-bugurl=file:///usr/share/doc/gcc-4.8/README.Bugs --enable-languages=c,c++,java,go,d,fortran,objc,obj-c++ --prefix=/usr --program-suffix=-4.8 --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --with-gxx-include-dir=/usr/include/c++/4.8 --libdir=/usr/lib --enable-nls --with-sysroot=/ --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --enable-gnu-unique-object --disable-libmudflap --enable-plugin --with-system-zlib --disable-browser-plugin --enable-java-awt=gtk --enable-gtk-cairo --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-4.8-amd64/jre --enable-java-home --with-jvm-root-dir=/usr/lib/jvm/java-1.5.0-gcj-4.8-amd64 --with-jvm-jar-dir=/usr/lib/jvm-exports/java-1.5.0-gcj-4.8-amd64 --with-arch-directory=amd64 --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --enable-objc-gc --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --with-tune=generic --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu
 Thread model: posix
 gcc version 4.8.4 (Ubuntu 4.8.4-2ubuntu1~14.04.3) 
-configure:4304: $? = 0
-configure:4293: gcc -V >&5
+configure:4305: $? = 0
+configure:4294: gcc -V >&5
 gcc: error: unrecognized command line option '-V'
 gcc: fatal error: no input files
 compilation terminated.
-configure:4304: $? = 4
-configure:4293: gcc -qversion >&5
+configure:4305: $? = 4
+configure:4294: gcc -qversion >&5
 gcc: error: unrecognized command line option '-qversion'
 gcc: fatal error: no input files
 compilation terminated.
-configure:4304: $? = 4
-configure:4308: checking whether we are using the GNU C compiler
-configure:4336: result: yes
-configure:4345: checking whether gcc accepts -g
-configure:4406: result: yes
-configure:4423: checking for gcc option to accept ISO C89
-configure:4499: result: none needed
-configure:4519: checking for inline
-configure:4535: gcc -c -g -O2  conftest.c >&5
-configure:4535: $? = 0
-configure:4543: result: inline
-configure:4569: checking if linker supports -R
-configure:4588: gcc -o conftest -g -O2   -R / conftest.c  >&5
+configure:4305: $? = 4
+configure:4309: checking whether we are using the GNU C compiler
+configure:4337: result: yes
+configure:4346: checking whether gcc accepts -g
+configure:4407: result: yes
+configure:4424: checking for gcc option to accept ISO C89
+configure:4500: result: none needed
+configure:4520: checking for inline
+configure:4536: gcc -c -g -O2  conftest.c >&5
+configure:4536: $? = 0
+configure:4544: result: inline
+configure:4570: checking if linker supports -R
+configure:4589: gcc -o conftest -g -O2   -R / conftest.c  >&5
 gcc: error: unrecognized command line option '-R'
-configure:4588: $? = 1
+configure:4589: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.6.2"
-| #define PACKAGE_STRING "git 2.6.2"
+| #define PACKAGE_VERSION "2.6.3"
+| #define PACKAGE_STRING "git 2.6.3"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -340,48 +340,48 @@
 | main ()
 | {
 | 
 |   ;
 |   return 0;
 | }
-configure:4598: result: no
-configure:4603: checking if linker supports -Wl,-rpath,
-configure:4622: gcc -o conftest -g -O2   -Wl,-rpath,/ conftest.c  >&5
-configure:4622: $? = 0
-configure:4632: result: yes
-configure:4729: checking for gar
-configure:4759: result: no
-configure:4729: checking for ar
-configure:4745: found /usr/bin/ar
-configure:4756: result: ar
-configure:4784: checking for gtar
-configure:4814: result: no
-configure:4784: checking for tar
-configure:4800: found /bin/tar
-configure:4811: result: tar
-configure:4826: checking for gnudiff
-configure:4856: result: no
-configure:4826: checking for gdiff
-configure:4856: result: no
-configure:4826: checking for diff
-configure:4842: found /usr/bin/diff
-configure:4853: result: diff
-configure:4928: checking for asciidoc
-configure:4958: result: no
-configure:4984: CHECKS for libraries
-configure:4999: checking for SHA1_Init in -lcrypto
-configure:5024: gcc -o conftest -g -O2   conftest.c -lcrypto   >&5
+configure:4599: result: no
+configure:4604: checking if linker supports -Wl,-rpath,
+configure:4623: gcc -o conftest -g -O2   -Wl,-rpath,/ conftest.c  >&5
+configure:4623: $? = 0
+configure:4633: result: yes
+configure:4730: checking for gar
+configure:4760: result: no
+configure:4730: checking for ar
+configure:4746: found /usr/bin/ar
+configure:4757: result: ar
+configure:4785: checking for gtar
+configure:4815: result: no
+configure:4785: checking for tar
+configure:4801: found /bin/tar
+configure:4812: result: tar
+configure:4827: checking for gnudiff
+configure:4857: result: no
+configure:4827: checking for gdiff
+configure:4857: result: no
+configure:4827: checking for diff
+configure:4843: found /usr/bin/diff
+configure:4854: result: diff
+configure:4929: checking for asciidoc
+configure:4959: result: no
+configure:4985: CHECKS for libraries
+configure:5000: checking for SHA1_Init in -lcrypto
+configure:5025: gcc -o conftest -g -O2   conftest.c -lcrypto   >&5
 /usr/bin/ld: cannot find -lcrypto
 collect2: error: ld returned 1 exit status
-configure:5024: $? = 1
+configure:5025: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.6.2"
-| #define PACKAGE_STRING "git 2.6.2"
+| #define PACKAGE_VERSION "2.6.3"
+| #define PACKAGE_STRING "git 2.6.3"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -406,24 +406,24 @@
 | main ()
 | {
 | return SHA1_Init ();
 |   ;
 |   return 0;
 | }
-configure:5033: result: no
-configure:5038: checking for SHA1_Init in -lssl
-configure:5063: gcc -o conftest -g -O2   conftest.c -lssl   >&5
+configure:5034: result: no
+configure:5039: checking for SHA1_Init in -lssl
+configure:5064: gcc -o conftest -g -O2   conftest.c -lssl   >&5
 /usr/bin/ld: cannot find -lssl
 collect2: error: ld returned 1 exit status
-configure:5063: $? = 1
+configure:5064: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.6.2"
-| #define PACKAGE_STRING "git 2.6.2"
+| #define PACKAGE_VERSION "2.6.3"
+| #define PACKAGE_STRING "git 2.6.3"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -448,24 +448,24 @@
 | main ()
 | {
 | return SHA1_Init ();
 |   ;
 |   return 0;
 | }
-configure:5072: result: no
-configure:5180: checking for curl_global_init in -lcurl
-configure:5205: gcc -o conftest -g -O2   conftest.c -lcurl   >&5
+configure:5073: result: no
+configure:5181: checking for curl_global_init in -lcurl
+configure:5206: gcc -o conftest -g -O2   conftest.c -lcurl   >&5
 /usr/bin/ld: cannot find -lcurl
 collect2: error: ld returned 1 exit status
-configure:5205: $? = 1
+configure:5206: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.6.2"
-| #define PACKAGE_STRING "git 2.6.2"
+| #define PACKAGE_VERSION "2.6.3"
+| #define PACKAGE_STRING "git 2.6.3"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -490,105 +490,105 @@
 | main ()
 | {
 | return curl_global_init ();
 |   ;
 |   return 0;
 | }
-configure:5214: result: no
-configure:5246: checking for XML_ParserCreate in -lexpat
-configure:5271: gcc -o conftest -g -O2   conftest.c -lexpat   >&5
-configure:5271: $? = 0
-configure:5280: result: yes
-configure:5334: checking for iconv in -lc
-configure:5347: gcc -o conftest -g -O2   conftest.c  -lc >&5
-configure:5347: $? = 0
-configure:5348: result: yes
-configure:5395: checking for deflateBound in -lz
-configure:5411: gcc -o conftest -g -O2   conftest.c  -lz >&5
-configure:5411: $? = 0
-configure:5412: result: yes
-configure:5436: checking for socket in -lc
-configure:5461: gcc -o conftest -g -O2   conftest.c -lc   >&5
-configure:5461: $? = 0
-configure:5470: result: yes
-configure:5491: checking for inet_ntop
-configure:5491: gcc -o conftest -g -O2   conftest.c  >&5
-configure:5491: $? = 0
-configure:5491: result: yes
-configure:5546: checking for inet_pton
-configure:5546: gcc -o conftest -g -O2   conftest.c  >&5
-configure:5546: $? = 0
-configure:5546: result: yes
-configure:5601: checking for hstrerror
-configure:5601: gcc -o conftest -g -O2   conftest.c  >&5
-configure:5601: $? = 0
-configure:5601: result: yes
-configure:5660: checking for basename in -lc
-configure:5685: gcc -o conftest -g -O2   conftest.c -lc   >&5
-configure:5685: $? = 0
-configure:5694: result: yes
-configure:5706: checking for gettext in -lc
-configure:5731: gcc -o conftest -g -O2   conftest.c -lc   >&5
+configure:5215: result: no
+configure:5346: checking for XML_ParserCreate in -lexpat
+configure:5371: gcc -o conftest -g -O2   conftest.c -lexpat   >&5
+configure:5371: $? = 0
+configure:5380: result: yes
+configure:5434: checking for iconv in -lc
+configure:5447: gcc -o conftest -g -O2   conftest.c  -lc >&5
+configure:5447: $? = 0
+configure:5448: result: yes
+configure:5495: checking for deflateBound in -lz
+configure:5511: gcc -o conftest -g -O2   conftest.c  -lz >&5
+configure:5511: $? = 0
+configure:5512: result: yes
+configure:5536: checking for socket in -lc
+configure:5561: gcc -o conftest -g -O2   conftest.c -lc   >&5
+configure:5561: $? = 0
+configure:5570: result: yes
+configure:5591: checking for inet_ntop
+configure:5591: gcc -o conftest -g -O2   conftest.c  >&5
+configure:5591: $? = 0
+configure:5591: result: yes
+configure:5646: checking for inet_pton
+configure:5646: gcc -o conftest -g -O2   conftest.c  >&5
+configure:5646: $? = 0
+configure:5646: result: yes
+configure:5701: checking for hstrerror
+configure:5701: gcc -o conftest -g -O2   conftest.c  >&5
+configure:5701: $? = 0
+configure:5701: result: yes
+configure:5760: checking for basename in -lc
+configure:5785: gcc -o conftest -g -O2   conftest.c -lc   >&5
+configure:5785: $? = 0
+configure:5794: result: yes
+configure:5806: checking for gettext in -lc
+configure:5831: gcc -o conftest -g -O2   conftest.c -lc   >&5
 conftest.c:28:6: warning: conflicting types for built-in function 'gettext' [enabled by default]
  char gettext ();
       ^
-configure:5731: $? = 0
-configure:5740: result: yes
-configure:5754: checking libintl.h usability
-configure:5754: gcc -c -g -O2  conftest.c >&5
-configure:5754: $? = 0
-configure:5754: result: yes
-configure:5754: checking libintl.h presence
-configure:5754: gcc -E  conftest.c
-configure:5754: $? = 0
-configure:5754: result: yes
-configure:5754: checking for libintl.h
-configure:5754: result: yes
-configure:5770: CHECKS for header files
-configure:5774: checking sys/select.h usability
-configure:5774: gcc -c -g -O2  conftest.c >&5
-configure:5774: $? = 0
-configure:5774: result: yes
-configure:5774: checking sys/select.h presence
-configure:5774: gcc -E  conftest.c
-configure:5774: $? = 0
-configure:5774: result: yes
-configure:5774: checking for sys/select.h
-configure:5774: result: yes
-configure:5786: checking sys/poll.h usability
-configure:5786: gcc -c -g -O2  conftest.c >&5
-configure:5786: $? = 0
-configure:5786: result: yes
-configure:5786: checking sys/poll.h presence
-configure:5786: gcc -E  conftest.c
-configure:5786: $? = 0
-configure:5786: result: yes
-configure:5786: checking for sys/poll.h
-configure:5786: result: yes
-configure:5798: checking for inttypes.h
-configure:5798: result: yes
-configure:5822: checking for old iconv()
-configure:5842: gcc -c -g -O2  conftest.c >&5
-configure:5842: $? = 0
-configure:5843: result: no
-configure:5863: CHECKS for typedefs, structures, and compiler characteristics
-configure:5867: checking for socklen_t
-configure:5867: gcc -c -g -O2  conftest.c >&5
-configure:5867: $? = 0
-configure:5867: gcc -c -g -O2  conftest.c >&5
+configure:5831: $? = 0
+configure:5840: result: yes
+configure:5854: checking libintl.h usability
+configure:5854: gcc -c -g -O2  conftest.c >&5
+configure:5854: $? = 0
+configure:5854: result: yes
+configure:5854: checking libintl.h presence
+configure:5854: gcc -E  conftest.c
+configure:5854: $? = 0
+configure:5854: result: yes
+configure:5854: checking for libintl.h
+configure:5854: result: yes
+configure:5870: CHECKS for header files
+configure:5874: checking sys/select.h usability
+configure:5874: gcc -c -g -O2  conftest.c >&5
+configure:5874: $? = 0
+configure:5874: result: yes
+configure:5874: checking sys/select.h presence
+configure:5874: gcc -E  conftest.c
+configure:5874: $? = 0
+configure:5874: result: yes
+configure:5874: checking for sys/select.h
+configure:5874: result: yes
+configure:5886: checking sys/poll.h usability
+configure:5886: gcc -c -g -O2  conftest.c >&5
+configure:5886: $? = 0
+configure:5886: result: yes
+configure:5886: checking sys/poll.h presence
+configure:5886: gcc -E  conftest.c
+configure:5886: $? = 0
+configure:5886: result: yes
+configure:5886: checking for sys/poll.h
+configure:5886: result: yes
+configure:5898: checking for inttypes.h
+configure:5898: result: yes
+configure:5922: checking for old iconv()
+configure:5942: gcc -c -g -O2  conftest.c >&5
+configure:5942: $? = 0
+configure:5943: result: no
+configure:5963: CHECKS for typedefs, structures, and compiler characteristics
+configure:5967: checking for socklen_t
+configure:5967: gcc -c -g -O2  conftest.c >&5
+configure:5967: $? = 0
+configure:5967: gcc -c -g -O2  conftest.c >&5
 conftest.c: In function 'main':
 conftest.c:27:24: error: expected expression before ')' token
  if (sizeof ((socklen_t)))
                         ^
-configure:5867: $? = 1
+configure:5967: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.6.2"
-| #define PACKAGE_STRING "git 2.6.2"
+| #define PACKAGE_VERSION "2.6.3"
+| #define PACKAGE_STRING "git 2.6.3"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -609,28 +609,28 @@
 | {
 | if (sizeof ((socklen_t)))
 | 	    return 0;
 |   ;
 |   return 0;
 | }
-configure:5867: result: yes
-configure:5939: checking for struct itimerval
-configure:5939: gcc -c -g -O2  conftest.c >&5
-configure:5939: $? = 0
-configure:5939: gcc -c -g -O2  conftest.c >&5
+configure:5967: result: yes
+configure:6039: checking for struct itimerval
+configure:6039: gcc -c -g -O2  conftest.c >&5
+configure:6039: $? = 0
+configure:6039: gcc -c -g -O2  conftest.c >&5
 conftest.c: In function 'main':
 conftest.c:26:31: error: expected expression before ')' token
  if (sizeof ((struct itimerval)))
                                ^
-configure:5939: $? = 1
+configure:6039: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.6.2"
-| #define PACKAGE_STRING "git 2.6.2"
+| #define PACKAGE_VERSION "2.6.3"
+| #define PACKAGE_STRING "git 2.6.3"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -650,26 +650,26 @@
 | {
 | if (sizeof ((struct itimerval)))
 | 	    return 0;
 |   ;
 |   return 0;
 | }
-configure:5939: result: yes
-configure:5958: checking for struct stat.st_mtimespec.tv_nsec
-configure:5958: gcc -c -g -O2  conftest.c >&5
+configure:6039: result: yes
+configure:6058: checking for struct stat.st_mtimespec.tv_nsec
+configure:6058: gcc -c -g -O2  conftest.c >&5
 conftest.c: In function 'main':
 conftest.c:59:12: error: 'struct stat' has no member named 'st_mtimespec'
  if (ac_aggr.st_mtimespec.tv_nsec)
             ^
-configure:5958: $? = 1
+configure:6058: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.6.2"
-| #define PACKAGE_STRING "git 2.6.2"
+| #define PACKAGE_VERSION "2.6.3"
+| #define PACKAGE_STRING "git 2.6.3"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -722,24 +722,24 @@
 | static struct stat ac_aggr;
 | if (ac_aggr.st_mtimespec.tv_nsec)
 | return 0;
 |   ;
 |   return 0;
 | }
-configure:5958: gcc -c -g -O2  conftest.c >&5
+configure:6058: gcc -c -g -O2  conftest.c >&5
 conftest.c: In function 'main':
 conftest.c:59:19: error: 'struct stat' has no member named 'st_mtimespec'
  if (sizeof ac_aggr.st_mtimespec.tv_nsec)
                    ^
-configure:5958: $? = 1
+configure:6058: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.6.2"
-| #define PACKAGE_STRING "git 2.6.2"
+| #define PACKAGE_VERSION "2.6.3"
+| #define PACKAGE_STRING "git 2.6.3"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -792,44 +792,44 @@
 | static struct stat ac_aggr;
 | if (sizeof ac_aggr.st_mtimespec.tv_nsec)
 | return 0;
 |   ;
 |   return 0;
 | }
-configure:5958: result: no
-configure:5963: checking for struct stat.st_mtim.tv_nsec
-configure:5963: gcc -c -g -O2  conftest.c >&5
-configure:5963: $? = 0
-configure:5963: result: yes
-configure:5979: checking for struct dirent.d_ino
-configure:5979: gcc -c -g -O2  conftest.c >&5
-configure:5979: $? = 0
-configure:5979: result: yes
-configure:5992: checking for struct dirent.d_type
-configure:5992: gcc -c -g -O2  conftest.c >&5
-configure:5992: $? = 0
-configure:5992: result: yes
-configure:6005: checking for struct passwd.pw_gecos
-configure:6005: gcc -c -g -O2  conftest.c >&5
-configure:6005: $? = 0
-configure:6005: result: yes
-configure:6018: checking for struct sockaddr_storage
-configure:6018: gcc -c -g -O2  conftest.c >&5
-configure:6018: $? = 0
-configure:6018: gcc -c -g -O2  conftest.c >&5
+configure:6058: result: no
+configure:6063: checking for struct stat.st_mtim.tv_nsec
+configure:6063: gcc -c -g -O2  conftest.c >&5
+configure:6063: $? = 0
+configure:6063: result: yes
+configure:6079: checking for struct dirent.d_ino
+configure:6079: gcc -c -g -O2  conftest.c >&5
+configure:6079: $? = 0
+configure:6079: result: yes
+configure:6092: checking for struct dirent.d_type
+configure:6092: gcc -c -g -O2  conftest.c >&5
+configure:6092: $? = 0
+configure:6092: result: yes
+configure:6105: checking for struct passwd.pw_gecos
+configure:6105: gcc -c -g -O2  conftest.c >&5
+configure:6105: $? = 0
+configure:6105: result: yes
+configure:6118: checking for struct sockaddr_storage
+configure:6118: gcc -c -g -O2  conftest.c >&5
+configure:6118: $? = 0
+configure:6118: gcc -c -g -O2  conftest.c >&5
 conftest.c: In function 'main':
 conftest.c:30:38: error: expected expression before ')' token
  if (sizeof ((struct sockaddr_storage)))
                                       ^
-configure:6018: $? = 1
+configure:6118: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.6.2"
-| #define PACKAGE_STRING "git 2.6.2"
+| #define PACKAGE_VERSION "2.6.3"
+| #define PACKAGE_STRING "git 2.6.3"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -853,28 +853,28 @@
 | {
 | if (sizeof ((struct sockaddr_storage)))
 | 	    return 0;
 |   ;
 |   return 0;
 | }
-configure:6018: result: yes
-configure:6033: checking for struct addrinfo
-configure:6033: gcc -c -g -O2  conftest.c >&5
-configure:6033: $? = 0
-configure:6033: gcc -c -g -O2  conftest.c >&5
+configure:6118: result: yes
+configure:6133: checking for struct addrinfo
+configure:6133: gcc -c -g -O2  conftest.c >&5
+configure:6133: $? = 0
+configure:6133: gcc -c -g -O2  conftest.c >&5
 conftest.c: In function 'main':
 conftest.c:31:30: error: expected expression before ')' token
  if (sizeof ((struct addrinfo)))
                               ^
-configure:6033: $? = 1
+configure:6133: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.6.2"
-| #define PACKAGE_STRING "git 2.6.2"
+| #define PACKAGE_VERSION "2.6.3"
+| #define PACKAGE_STRING "git 2.6.3"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -899,71 +899,71 @@
 | {
 | if (sizeof ((struct addrinfo)))
 | 	    return 0;
 |   ;
 |   return 0;
 | }
-configure:6033: result: yes
-configure:6041: checking for getaddrinfo
-configure:6041: gcc -o conftest -g -O2   conftest.c  >&5
-configure:6041: $? = 0
-configure:6041: result: yes
-configure:6044: checking for library containing getaddrinfo
-configure:6075: gcc -o conftest -g -O2   conftest.c  >&5
-configure:6075: $? = 0
-configure:6092: result: none required
-configure:6116: checking whether the platform regex can handle null bytes
-configure:6148: result: yes
-configure:6160: checking whether system succeeds to read fopen'ed directory
-configure:6185: gcc -o conftest -g -O2   conftest.c  >&5
-configure:6185: $? = 0
-configure:6185: ./conftest
-configure:6185: $? = 0
-configure:6196: result: no
-configure:6209: checking whether snprintf() and/or vsnprintf() return bogus value
-configure:6247: gcc -o conftest -g -O2   conftest.c  >&5
-configure:6247: $? = 0
-configure:6247: ./conftest
-configure:6247: $? = 0
-configure:6258: result: no
-configure:6270: checking whether the platform uses typical file type bits
-configure:6303: result: yes
-configure:6316: CHECKS for library functions
-configure:6320: checking libgen.h usability
-configure:6320: gcc -c -g -O2  conftest.c >&5
-configure:6320: $? = 0
-configure:6320: result: yes
-configure:6320: checking libgen.h presence
-configure:6320: gcc -E  conftest.c
-configure:6320: $? = 0
-configure:6320: result: yes
-configure:6320: checking for libgen.h
-configure:6320: result: yes
-configure:6332: checking paths.h usability
-configure:6332: gcc -c -g -O2  conftest.c >&5
-configure:6332: $? = 0
-configure:6332: result: yes
-configure:6332: checking paths.h presence
-configure:6332: gcc -E  conftest.c
-configure:6332: $? = 0
-configure:6332: result: yes
-configure:6332: checking for paths.h
-configure:6332: result: yes
-configure:6344: checking libcharset.h usability
-configure:6344: gcc -c -g -O2  conftest.c >&5
+configure:6133: result: yes
+configure:6141: checking for getaddrinfo
+configure:6141: gcc -o conftest -g -O2   conftest.c  >&5
+configure:6141: $? = 0
+configure:6141: result: yes
+configure:6144: checking for library containing getaddrinfo
+configure:6175: gcc -o conftest -g -O2   conftest.c  >&5
+configure:6175: $? = 0
+configure:6192: result: none required
+configure:6216: checking whether the platform regex can handle null bytes
+configure:6248: result: yes
+configure:6260: checking whether system succeeds to read fopen'ed directory
+configure:6285: gcc -o conftest -g -O2   conftest.c  >&5
+configure:6285: $? = 0
+configure:6285: ./conftest
+configure:6285: $? = 0
+configure:6296: result: no
+configure:6309: checking whether snprintf() and/or vsnprintf() return bogus value
+configure:6347: gcc -o conftest -g -O2   conftest.c  >&5
+configure:6347: $? = 0
+configure:6347: ./conftest
+configure:6347: $? = 0
+configure:6358: result: no
+configure:6370: checking whether the platform uses typical file type bits
+configure:6403: result: yes
+configure:6416: CHECKS for library functions
+configure:6420: checking libgen.h usability
+configure:6420: gcc -c -g -O2  conftest.c >&5
+configure:6420: $? = 0
+configure:6420: result: yes
+configure:6420: checking libgen.h presence
+configure:6420: gcc -E  conftest.c
+configure:6420: $? = 0
+configure:6420: result: yes
+configure:6420: checking for libgen.h
+configure:6420: result: yes
+configure:6432: checking paths.h usability
+configure:6432: gcc -c -g -O2  conftest.c >&5
+configure:6432: $? = 0
+configure:6432: result: yes
+configure:6432: checking paths.h presence
+configure:6432: gcc -E  conftest.c
+configure:6432: $? = 0
+configure:6432: result: yes
+configure:6432: checking for paths.h
+configure:6432: result: yes
+configure:6444: checking libcharset.h usability
+configure:6444: gcc -c -g -O2  conftest.c >&5
 conftest.c:55:24: fatal error: libcharset.h: No such file or directory
  #include <libcharset.h>
                         ^
 compilation terminated.
-configure:6344: $? = 1
+configure:6444: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.6.2"
-| #define PACKAGE_STRING "git 2.6.2"
+| #define PACKAGE_VERSION "2.6.3"
+| #define PACKAGE_STRING "git 2.6.3"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -1008,26 +1008,26 @@
 | # include <stdint.h>
 | #endif
 | #ifdef HAVE_UNISTD_H
 | # include <unistd.h>
 | #endif
 | #include <libcharset.h>
-configure:6344: result: no
-configure:6344: checking libcharset.h presence
-configure:6344: gcc -E  conftest.c
+configure:6444: result: no
+configure:6444: checking libcharset.h presence
+configure:6444: gcc -E  conftest.c
 conftest.c:22:24: fatal error: libcharset.h: No such file or directory
  #include <libcharset.h>
                         ^
 compilation terminated.
-configure:6344: $? = 1
+configure:6444: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.6.2"
-| #define PACKAGE_STRING "git 2.6.2"
+| #define PACKAGE_VERSION "2.6.3"
+| #define PACKAGE_STRING "git 2.6.3"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -1039,28 +1039,28 @@
 | #define HAVE_UNISTD_H 1
 | #define HAVE_ALLOCA_H 1
 | #define HAVE_ALLOCA 1
 | #define HAVE_STRUCT_ITIMERVAL 1
 | /* end confdefs.h.  */
 | #include <libcharset.h>
-configure:6344: result: no
-configure:6344: checking for libcharset.h
-configure:6344: result: no
-configure:6356: checking for strings.h
-configure:6356: result: yes
-configure:6369: checking for locale_charset in -liconv
-configure:6394: gcc -o conftest -g -O2   conftest.c -liconv   >&5
+configure:6444: result: no
+configure:6444: checking for libcharset.h
+configure:6444: result: no
+configure:6456: checking for strings.h
+configure:6456: result: yes
+configure:6469: checking for locale_charset in -liconv
+configure:6494: gcc -o conftest -g -O2   conftest.c -liconv   >&5
 /usr/bin/ld: cannot find -liconv
 collect2: error: ld returned 1 exit status
-configure:6394: $? = 1
+configure:6494: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.6.2"
-| #define PACKAGE_STRING "git 2.6.2"
+| #define PACKAGE_VERSION "2.6.3"
+| #define PACKAGE_STRING "git 2.6.3"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -1086,24 +1086,24 @@
 | main ()
 | {
 | return locale_charset ();
 |   ;
 |   return 0;
 | }
-configure:6403: result: no
-configure:6408: checking for locale_charset in -lcharset
-configure:6433: gcc -o conftest -g -O2   conftest.c -lcharset   >&5
+configure:6503: result: no
+configure:6508: checking for locale_charset in -lcharset
+configure:6533: gcc -o conftest -g -O2   conftest.c -lcharset   >&5
 /usr/bin/ld: cannot find -lcharset
 collect2: error: ld returned 1 exit status
-configure:6433: $? = 1
+configure:6533: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.6.2"
-| #define PACKAGE_STRING "git 2.6.2"
+| #define PACKAGE_VERSION "2.6.3"
+| #define PACKAGE_STRING "git 2.6.3"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -1129,24 +1129,24 @@
 | main ()
 | {
 | return locale_charset ();
 |   ;
 |   return 0;
 | }
-configure:6442: result: no
-configure:6454: checking for HMAC_CTX_cleanup in -lcrypto
-configure:6479: gcc -o conftest -g -O2   conftest.c -lcrypto   >&5
+configure:6542: result: no
+configure:6554: checking for HMAC_CTX_cleanup in -lcrypto
+configure:6579: gcc -o conftest -g -O2   conftest.c -lcrypto   >&5
 /usr/bin/ld: cannot find -lcrypto
 collect2: error: ld returned 1 exit status
-configure:6479: $? = 1
+configure:6579: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.6.2"
-| #define PACKAGE_STRING "git 2.6.2"
+| #define PACKAGE_VERSION "2.6.3"
+| #define PACKAGE_STRING "git 2.6.3"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -1172,61 +1172,61 @@
 | main ()
 | {
 | return HMAC_CTX_cleanup ();
 |   ;
 |   return 0;
 | }
-configure:6488: result: no
-configure:6504: checking for clock_gettime
-configure:6504: gcc -o conftest -g -O2   conftest.c  >&5
-configure:6504: $? = 0
-configure:6504: result: yes
-configure:6507: checking for library containing clock_gettime
-configure:6538: gcc -o conftest -g -O2   conftest.c  >&5
-configure:6538: $? = 0
-configure:6555: result: none required
-configure:6577: checking for CLOCK_MONOTONIC
-configure:6594: gcc -c -g -O2  conftest.c >&5
-configure:6594: $? = 0
-configure:6595: result: yes
-configure:6608: checking for setitimer
-configure:6608: gcc -o conftest -g -O2   conftest.c  >&5
-configure:6608: $? = 0
-configure:6608: result: yes
-configure:6611: checking for library containing setitimer
-configure:6642: gcc -o conftest -g -O2   conftest.c  >&5
-configure:6642: $? = 0
-configure:6659: result: none required
-configure:6678: checking for strcasestr
-configure:6678: gcc -o conftest -g -O2   conftest.c  >&5
-configure:6678: $? = 0
-configure:6678: result: yes
-configure:6681: checking for library containing strcasestr
-configure:6712: gcc -o conftest -g -O2   conftest.c  >&5
-configure:6712: $? = 0
-configure:6729: result: none required
-configure:6748: checking for memmem
-configure:6748: gcc -o conftest -g -O2   conftest.c  >&5
-configure:6748: $? = 0
-configure:6748: result: yes
-configure:6751: checking for library containing memmem
-configure:6782: gcc -o conftest -g -O2   conftest.c  >&5
-configure:6782: $? = 0
-configure:6799: result: none required
-configure:6818: checking for strlcpy
-configure:6818: gcc -o conftest -g -O2   conftest.c  >&5
-/tmp/ccuk4dla.o: In function `main':
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/conftest.c:56: undefined reference to `strlcpy'
+configure:6588: result: no
+configure:6604: checking for clock_gettime
+configure:6604: gcc -o conftest -g -O2   conftest.c  >&5
+configure:6604: $? = 0
+configure:6604: result: yes
+configure:6607: checking for library containing clock_gettime
+configure:6638: gcc -o conftest -g -O2   conftest.c  >&5
+configure:6638: $? = 0
+configure:6655: result: none required
+configure:6677: checking for CLOCK_MONOTONIC
+configure:6694: gcc -c -g -O2  conftest.c >&5
+configure:6694: $? = 0
+configure:6695: result: yes
+configure:6708: checking for setitimer
+configure:6708: gcc -o conftest -g -O2   conftest.c  >&5
+configure:6708: $? = 0
+configure:6708: result: yes
+configure:6711: checking for library containing setitimer
+configure:6742: gcc -o conftest -g -O2   conftest.c  >&5
+configure:6742: $? = 0
+configure:6759: result: none required
+configure:6778: checking for strcasestr
+configure:6778: gcc -o conftest -g -O2   conftest.c  >&5
+configure:6778: $? = 0
+configure:6778: result: yes
+configure:6781: checking for library containing strcasestr
+configure:6812: gcc -o conftest -g -O2   conftest.c  >&5
+configure:6812: $? = 0
+configure:6829: result: none required
+configure:6848: checking for memmem
+configure:6848: gcc -o conftest -g -O2   conftest.c  >&5
+configure:6848: $? = 0
+configure:6848: result: yes
+configure:6851: checking for library containing memmem
+configure:6882: gcc -o conftest -g -O2   conftest.c  >&5
+configure:6882: $? = 0
+configure:6899: result: none required
+configure:6918: checking for strlcpy
+configure:6918: gcc -o conftest -g -O2   conftest.c  >&5
+/tmp/cc4Q90gv.o: In function `main':
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/conftest.c:56: undefined reference to `strlcpy'
 collect2: error: ld returned 1 exit status
-configure:6818: $? = 1
+configure:6918: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.6.2"
-| #define PACKAGE_STRING "git 2.6.2"
+| #define PACKAGE_VERSION "2.6.3"
+| #define PACKAGE_STRING "git 2.6.3"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -1275,28 +1275,28 @@
 | main ()
 | {
 | return strlcpy ();
 |   ;
 |   return 0;
 | }
-configure:6818: result: no
-configure:6888: checking for uintmax_t
-configure:6888: gcc -c -g -O2  conftest.c >&5
-configure:6888: $? = 0
-configure:6888: gcc -c -g -O2  conftest.c >&5
+configure:6918: result: no
+configure:6988: checking for uintmax_t
+configure:6988: gcc -c -g -O2  conftest.c >&5
+configure:6988: $? = 0
+configure:6988: gcc -c -g -O2  conftest.c >&5
 conftest.c: In function 'main':
 conftest.c:29:24: error: expected expression before ')' token
  if (sizeof ((uintmax_t)))
                         ^
-configure:6888: $? = 1
+configure:6988: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.6.2"
-| #define PACKAGE_STRING "git 2.6.2"
+| #define PACKAGE_VERSION "2.6.3"
+| #define PACKAGE_STRING "git 2.6.3"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -1319,83 +1319,83 @@
 | {
 | if (sizeof ((uintmax_t)))
 | 	    return 0;
 |   ;
 |   return 0;
 | }
-configure:6888: result: yes
-configure:6902: checking for strtoumax
-configure:6902: gcc -o conftest -g -O2   conftest.c  >&5
-configure:6902: $? = 0
-configure:6902: result: yes
-configure:6905: checking for library containing strtoumax
-configure:6936: gcc -o conftest -g -O2   conftest.c  >&5
-configure:6936: $? = 0
-configure:6953: result: none required
-configure:6972: checking for setenv
-configure:6972: gcc -o conftest -g -O2   conftest.c  >&5
-configure:6972: $? = 0
-configure:6972: result: yes
-configure:6975: checking for library containing setenv
-configure:7006: gcc -o conftest -g -O2   conftest.c  >&5
-configure:7006: $? = 0
-configure:7023: result: none required
-configure:7042: checking for unsetenv
-configure:7042: gcc -o conftest -g -O2   conftest.c  >&5
-configure:7042: $? = 0
-configure:7042: result: yes
-configure:7045: checking for library containing unsetenv
-configure:7076: gcc -o conftest -g -O2   conftest.c  >&5
-configure:7076: $? = 0
-configure:7093: result: none required
-configure:7112: checking for mkdtemp
-configure:7112: gcc -o conftest -g -O2   conftest.c  >&5
-configure:7112: $? = 0
-configure:7112: result: yes
-configure:7115: checking for library containing mkdtemp
-configure:7146: gcc -o conftest -g -O2   conftest.c  >&5
-configure:7146: $? = 0
-configure:7163: result: none required
-configure:7182: checking for mkstemps
-configure:7182: gcc -o conftest -g -O2   conftest.c  >&5
-configure:7182: $? = 0
-configure:7182: result: yes
-configure:7185: checking for library containing mkstemps
-configure:7216: gcc -o conftest -g -O2   conftest.c  >&5
-configure:7216: $? = 0
-configure:7233: result: none required
-configure:7252: checking for initgroups
-configure:7252: gcc -o conftest -g -O2   conftest.c  >&5
-configure:7252: $? = 0
-configure:7252: result: yes
-configure:7255: checking for library containing initgroups
-configure:7286: gcc -o conftest -g -O2   conftest.c  >&5
-configure:7286: $? = 0
-configure:7303: result: none required
-configure:7322: checking for getdelim
-configure:7322: gcc -o conftest -g -O2   conftest.c  >&5
-configure:7322: $? = 0
-configure:7322: result: yes
-configure:7325: checking for library containing getdelim
-configure:7356: gcc -o conftest -g -O2   conftest.c  >&5
-configure:7356: $? = 0
-configure:7373: result: none required
-configure:7400: checking for BSD sysctl
-configure:7425: gcc -c -g -O2  conftest.c >&5
+configure:6988: result: yes
+configure:7002: checking for strtoumax
+configure:7002: gcc -o conftest -g -O2   conftest.c  >&5
+configure:7002: $? = 0
+configure:7002: result: yes
+configure:7005: checking for library containing strtoumax
+configure:7036: gcc -o conftest -g -O2   conftest.c  >&5
+configure:7036: $? = 0
+configure:7053: result: none required
+configure:7072: checking for setenv
+configure:7072: gcc -o conftest -g -O2   conftest.c  >&5
+configure:7072: $? = 0
+configure:7072: result: yes
+configure:7075: checking for library containing setenv
+configure:7106: gcc -o conftest -g -O2   conftest.c  >&5
+configure:7106: $? = 0
+configure:7123: result: none required
+configure:7142: checking for unsetenv
+configure:7142: gcc -o conftest -g -O2   conftest.c  >&5
+configure:7142: $? = 0
+configure:7142: result: yes
+configure:7145: checking for library containing unsetenv
+configure:7176: gcc -o conftest -g -O2   conftest.c  >&5
+configure:7176: $? = 0
+configure:7193: result: none required
+configure:7212: checking for mkdtemp
+configure:7212: gcc -o conftest -g -O2   conftest.c  >&5
+configure:7212: $? = 0
+configure:7212: result: yes
+configure:7215: checking for library containing mkdtemp
+configure:7246: gcc -o conftest -g -O2   conftest.c  >&5
+configure:7246: $? = 0
+configure:7263: result: none required
+configure:7282: checking for mkstemps
+configure:7282: gcc -o conftest -g -O2   conftest.c  >&5
+configure:7282: $? = 0
+configure:7282: result: yes
+configure:7285: checking for library containing mkstemps
+configure:7316: gcc -o conftest -g -O2   conftest.c  >&5
+configure:7316: $? = 0
+configure:7333: result: none required
+configure:7352: checking for initgroups
+configure:7352: gcc -o conftest -g -O2   conftest.c  >&5
+configure:7352: $? = 0
+configure:7352: result: yes
+configure:7355: checking for library containing initgroups
+configure:7386: gcc -o conftest -g -O2   conftest.c  >&5
+configure:7386: $? = 0
+configure:7403: result: none required
+configure:7422: checking for getdelim
+configure:7422: gcc -o conftest -g -O2   conftest.c  >&5
+configure:7422: $? = 0
+configure:7422: result: yes
+configure:7425: checking for library containing getdelim
+configure:7456: gcc -o conftest -g -O2   conftest.c  >&5
+configure:7456: $? = 0
+configure:7473: result: none required
+configure:7500: checking for BSD sysctl
+configure:7525: gcc -c -g -O2  conftest.c >&5
 conftest.c: In function 'main':
 conftest.c:34:10: error: 'CTL_HW' undeclared (first use in this function)
  mib[0] = CTL_HW;
           ^
 conftest.c:34:10: note: each undeclared identifier is reported only once for each function it appears in
-configure:7425: $? = 1
+configure:7525: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.6.2"
-| #define PACKAGE_STRING "git 2.6.2"
+| #define PACKAGE_VERSION "2.6.3"
+| #define PACKAGE_STRING "git 2.6.3"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -1426,25 +1426,25 @@
 | len = sizeof(val);
 | return sysctl(mib, 2, &val, &len, NULL, 0) ? 1 : 0;
 | 
 |   ;
 |   return 0;
 | }
-configure:7430: result: no
-configure:7474: checking for POSIX Threads with ''
-configure:7499: gcc -o conftest  -g -O2   conftest.c  >&5
-/tmp/cc6Ky7TD.o: In function `main':
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/conftest.c:33: undefined reference to `pthread_key_create'
+configure:7530: result: no
+configure:7574: checking for POSIX Threads with ''
+configure:7599: gcc -o conftest  -g -O2   conftest.c  >&5
+/tmp/ccSWWk5Z.o: In function `main':
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/conftest.c:33: undefined reference to `pthread_key_create'
 collect2: error: ld returned 1 exit status
-configure:7499: $? = 1
+configure:7599: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.6.2"
-| #define PACKAGE_STRING "git 2.6.2"
+| #define PACKAGE_VERSION "2.6.3"
+| #define PACKAGE_STRING "git 2.6.3"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -1475,23 +1475,23 @@
 | 	retcode |= pthread_mutex_unlock(&test_mutex);
 | 	return retcode;
 | 
 |   ;
 |   return 0;
 | }
-configure:7509: result: no
-configure:7474: checking for POSIX Threads with '-mt'
-configure:7499: gcc -o conftest -mt -g -O2   conftest.c  >&5
+configure:7609: result: no
+configure:7574: checking for POSIX Threads with '-mt'
+configure:7599: gcc -o conftest -mt -g -O2   conftest.c  >&5
 gcc: error: unrecognized command line option '-mt'
-configure:7499: $? = 1
+configure:7599: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.6.2"
-| #define PACKAGE_STRING "git 2.6.2"
+| #define PACKAGE_VERSION "2.6.3"
+| #define PACKAGE_STRING "git 2.6.3"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -1522,36 +1522,36 @@
 | 	retcode |= pthread_mutex_unlock(&test_mutex);
 | 	return retcode;
 | 
 |   ;
 |   return 0;
 | }
-configure:7509: result: no
-configure:7474: checking for POSIX Threads with '-pthread'
-configure:7499: gcc -o conftest -pthread -g -O2   conftest.c  >&5
-configure:7499: $? = 0
-configure:7500: result: yes
-configure:7766: creating ./config.status
+configure:7609: result: no
+configure:7574: checking for POSIX Threads with '-pthread'
+configure:7599: gcc -o conftest -pthread -g -O2   conftest.c  >&5
+configure:7599: $? = 0
+configure:7600: result: yes
+configure:7866: creating ./config.status
 
 ## ---------------------- ##
 ## Running config.status. ##
 ## ---------------------- ##
 
-This file was extended by git config.status 2.6.2, which was
+This file was extended by git config.status 2.6.3, which was
 generated by GNU Autoconf 2.69.  Invocation command line was
 
   CONFIG_FILES    = 
   CONFIG_HEADERS  = 
   CONFIG_LINKS    = 
   CONFIG_COMMANDS = 
   $ ./config.status 
 
 on sarah-Erazer-X310
 
-config.status:801: creating config.mak.autogen
-config.status:962: executing config.mak.autogen commands
+config.status:802: creating config.mak.autogen
+config.status:963: executing config.mak.autogen commands
 
 ## ---------------- ##
 ## Cache variables. ##
 ## ---------------- ##
 
 ac_cv_c_compiler_gnu=yes
@@ -1666,13 +1666,14 @@
 AR='ar'
 ASCIIDOC=''
 CC='gcc'
 CFLAGS='-g -O2'
 CPP='gcc -E'
 CPPFLAGS=''
-DEFS='-DPACKAGE_NAME=\"git\" -DPACKAGE_TARNAME=\"git\" -DPACKAGE_VERSION=\"2.6.2\" -DPACKAGE_STRING=\"git\ 2.6.2\" -DPACKAGE_BUGREPORT=\"git@vger.kernel.org\" -DPACKAGE_URL=\"\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ALLOCA_H=1 -DHAVE_ALLOCA=1 -DHAVE_STRUCT_ITIMERVAL=1'
+CURL_CONFIG=''
+DEFS='-DPACKAGE_NAME=\"git\" -DPACKAGE_TARNAME=\"git\" -DPACKAGE_VERSION=\"2.6.3\" -DPACKAGE_STRING=\"git\ 2.6.3\" -DPACKAGE_BUGREPORT=\"git@vger.kernel.org\" -DPACKAGE_URL=\"\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ALLOCA_H=1 -DHAVE_ALLOCA=1 -DHAVE_STRUCT_ITIMERVAL=1'
 DIFF='diff'
 ECHO_C=''
 ECHO_N='-n'
 ECHO_T=''
 EGREP='/bin/grep -E'
 EXEEXT=''
@@ -1681,16 +1682,16 @@
 LIBOBJS=''
 LIBS=''
 LTLIBOBJS=''
 OBJEXT='o'
 PACKAGE_BUGREPORT='git@vger.kernel.org'
 PACKAGE_NAME='git'
-PACKAGE_STRING='git 2.6.2'
+PACKAGE_STRING='git 2.6.3'
 PACKAGE_TARNAME='git'
 PACKAGE_URL=''
-PACKAGE_VERSION='2.6.2'
+PACKAGE_VERSION='2.6.3'
 PATH_SEPARATOR=':'
 SHELL='/bin/bash'
 TAR='tar'
 TCLTK_PATH='wish'
 ac_ct_AR='ar'
 ac_ct_CC='gcc'
@@ -1724,14 +1725,14 @@
 ## confdefs.h. ##
 ## ----------- ##
 
 /* confdefs.h */
 #define PACKAGE_NAME "git"
 #define PACKAGE_TARNAME "git"
-#define PACKAGE_VERSION "2.6.2"
-#define PACKAGE_STRING "git 2.6.2"
+#define PACKAGE_VERSION "2.6.3"
+#define PACKAGE_STRING "git 2.6.3"
 #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 #define PACKAGE_URL ""
 #define STDC_HEADERS 1
 #define HAVE_SYS_TYPES_H 1
 #define HAVE_SYS_STAT_H 1
 #define HAVE_STDLIB_H 1
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/config.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/config.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/config.status /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/config.status
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/config.status	2017-10-10 14:24:12.994384735 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/config.status	2017-10-10 14:28:00.938376381 +0800
@@ -377,13 +377,13 @@
 ## Main body of $CONFIG_STATUS script. ##
 ## ----------------------------------- ##
 # Save the log message, to keep $0 and so on meaningful, and to
 # report actual input values of CONFIG_FILES etc. instead of their
 # values after options handling.
 ac_log="
-This file was extended by git $as_me 2.6.2, which was
+This file was extended by git $as_me 2.6.3, which was
 generated by GNU Autoconf 2.69.  Invocation command line was
 
   CONFIG_FILES    = $CONFIG_FILES
   CONFIG_HEADERS  = $CONFIG_HEADERS
   CONFIG_LINKS    = $CONFIG_LINKS
   CONFIG_COMMANDS = $CONFIG_COMMANDS
@@ -420,21 +420,21 @@
 $config_commands
 
 Report bugs to <git@vger.kernel.org>."
 
 ac_cs_config=""
 ac_cs_version="\
-git config.status 2.6.2
+git config.status 2.6.3
 configured by ./configure, generated by GNU Autoconf 2.69,
   with options \"$ac_cs_config\"
 
 Copyright (C) 2012 Free Software Foundation, Inc.
 This config.status script is free software; the Free Software Foundation
 gives unlimited permission to copy, distribute and modify it."
 
-ac_pwd='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2'
+ac_pwd='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3'
 srcdir='.'
 test -n "$AWK" || AWK=awk
 # The default lists apply if the user does not specify any file.
 ac_need_defaults=:
 while test $# != 0
 do
@@ -651,12 +651,13 @@
 fi
 
 echo 'BEGIN {' >"$ac_tmp/subs1.awk" &&
 cat >>"$ac_tmp/subs1.awk" <<\_ACAWK &&
 S["LTLIBOBJS"]=""
 S["LIBOBJS"]=""
+S["CURL_CONFIG"]=""
 S["ASCIIDOC"]=""
 S["TCLTK_PATH"]="wish"
 S["DIFF"]="diff"
 S["TAR"]="tar"
 S["ac_ct_AR"]="ar"
 S["AR"]="ar"
@@ -675,13 +676,13 @@
 S["host_alias"]=""
 S["build_alias"]=""
 S["LIBS"]=""
 S["ECHO_T"]=""
 S["ECHO_N"]="-n"
 S["ECHO_C"]=""
-S["DEFS"]="-DPACKAGE_NAME=\\\"git\\\" -DPACKAGE_TARNAME=\\\"git\\\" -DPACKAGE_VERSION=\\\"2.6.2\\\" -DPACKAGE_STRING=\\\"git\\ 2.6.2\\\" -DPACKAGE_BUGREPORT=\\\"git@vger.kernel.o"\
+S["DEFS"]="-DPACKAGE_NAME=\\\"git\\\" -DPACKAGE_TARNAME=\\\"git\\\" -DPACKAGE_VERSION=\\\"2.6.3\\\" -DPACKAGE_STRING=\\\"git\\ 2.6.3\\\" -DPACKAGE_BUGREPORT=\\\"git@vger.kernel.o"\
 "rg\\\" -DPACKAGE_URL=\\\"\\\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRIN"\
 "GS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ALLOCA_H=1 -DHAVE_ALLOCA=1 -DHAVE_STRUCT_ITIMERVAL=1"
 S["mandir"]="${datarootdir}/man"
 S["localedir"]="${datarootdir}/locale"
 S["libdir"]="${exec_prefix}/lib"
 S["psdir"]="${docdir}"
@@ -702,14 +703,14 @@
 S["bindir"]="${exec_prefix}/bin"
 S["program_transform_name"]="s,x,x,"
 S["prefix"]="/usr/local"
 S["exec_prefix"]="${prefix}"
 S["PACKAGE_URL"]=""
 S["PACKAGE_BUGREPORT"]="git@vger.kernel.org"
-S["PACKAGE_STRING"]="git 2.6.2"
-S["PACKAGE_VERSION"]="2.6.2"
+S["PACKAGE_STRING"]="git 2.6.3"
+S["PACKAGE_VERSION"]="2.6.3"
 S["PACKAGE_TARNAME"]="git"
 S["PACKAGE_NAME"]="git"
 S["PATH_SEPARATOR"]=":"
 S["SHELL"]="/bin/bash"
 _ACAWK
 cat >>"$ac_tmp/subs1.awk" <<_ACAWK &&
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/configure /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/configure
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/configure	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/configure	2015-11-06 05:31:55.000000000 +0800
@@ -1,9 +1,9 @@
 #! /bin/sh
 # Guess values for system-dependent variables and create Makefiles.
-# Generated by GNU Autoconf 2.69 for git 2.6.2.
+# Generated by GNU Autoconf 2.69 for git 2.6.3.
 #
 # Report bugs to <git@vger.kernel.org>.
 #
 #
 # Copyright (C) 1992-1996, 1998-2012 Free Software Foundation, Inc.
 #
@@ -577,14 +577,14 @@
 MFLAGS=
 MAKEFLAGS=
 
 # Identity of this package.
 PACKAGE_NAME='git'
 PACKAGE_TARNAME='git'
-PACKAGE_VERSION='2.6.2'
-PACKAGE_STRING='git 2.6.2'
+PACKAGE_VERSION='2.6.3'
+PACKAGE_STRING='git 2.6.3'
 PACKAGE_BUGREPORT='git@vger.kernel.org'
 PACKAGE_URL=''
 
 ac_unique_file="git.c"
 # Factoring default headers for most tests.
 ac_includes_default="\
@@ -621,12 +621,13 @@
 #ifdef HAVE_UNISTD_H
 # include <unistd.h>
 #endif"
 
 ac_subst_vars='LTLIBOBJS
 LIBOBJS
+CURL_CONFIG
 ASCIIDOC
 TCLTK_PATH
 DIFF
 TAR
 ac_ct_AR
 AR
@@ -1248,13 +1249,13 @@
 # Report the --help message.
 #
 if test "$ac_init_help" = "long"; then
   # Omit some internal or obsolete options to make the list less imposing.
   # This message is too long to be a string in the A/UX 3.1 sh.
   cat <<_ACEOF
-\`configure' configures git 2.6.2 to adapt to many kinds of systems.
+\`configure' configures git 2.6.3 to adapt to many kinds of systems.
 
 Usage: $0 [OPTION]... [VAR=VALUE]...
 
 To assign environment variables (e.g., CC, CFLAGS...), specify them as
 VAR=VALUE.  See below for descriptions of some of the useful variables.
 
@@ -1309,13 +1310,13 @@
   cat <<\_ACEOF
 _ACEOF
 fi
 
 if test -n "$ac_init_help"; then
   case $ac_init_help in
-     short | recursive ) echo "Configuration of git 2.6.2:";;
+     short | recursive ) echo "Configuration of git 2.6.3:";;
    esac
   cat <<\_ACEOF
 
 Optional Features:
   --disable-option-checking  ignore unrecognized --enable/--with options
   --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
@@ -1448,13 +1449,13 @@
   done
 fi
 
 test -n "$ac_init_help" && exit $ac_status
 if $ac_init_version; then
   cat <<\_ACEOF
-git configure 2.6.2
+git configure 2.6.3
 generated by GNU Autoconf 2.69
 
 Copyright (C) 2012 Free Software Foundation, Inc.
 This configure script is free software; the Free Software Foundation
 gives unlimited permission to copy, distribute and modify it.
 _ACEOF
@@ -1928,13 +1929,13 @@
 
 } # ac_fn_c_check_member
 cat >config.log <<_ACEOF
 This file contains any messages produced by compilers while
 running configure, to aid debugging if configure makes a mistake.
 
-It was created by git $as_me 2.6.2, which was
+It was created by git $as_me 2.6.3, which was
 generated by GNU Autoconf 2.69.  Invocation command line was
 
   $ $0 $@
 
 _ACEOF
 exec 5>>config.log
@@ -5217,22 +5218,121 @@
   NO_CURL=
 else
   NO_CURL=YesPlease
 fi
 
 
+if test -z "${NO_CURL}" && test -z "${NO_OPENSSL}"; then
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for Curl_ssl_init in -lcurl" >&5
+$as_echo_n "checking for Curl_ssl_init in -lcurl... " >&6; }
+if ${ac_cv_lib_curl_Curl_ssl_init+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_check_lib_save_LIBS=$LIBS
+LIBS="-lcurl  $LIBS"
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char Curl_ssl_init ();
+int
+main ()
+{
+return Curl_ssl_init ();
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ac_cv_lib_curl_Curl_ssl_init=yes
+else
+  ac_cv_lib_curl_Curl_ssl_init=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+LIBS=$ac_check_lib_save_LIBS
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_curl_Curl_ssl_init" >&5
+$as_echo "$ac_cv_lib_curl_Curl_ssl_init" >&6; }
+if test "x$ac_cv_lib_curl_Curl_ssl_init" = xyes; then :
+  NEEDS_SSL_WITH_CURL=YesPlease
+else
+  NEEDS_SSL_WITH_CURL=
+fi
+
+
+
+config_appended_defs="$config_appended_defs${newline}NEEDS_SSL_WITH_CURL=${NEEDS_SSL_WITH_CURL}"
+
+fi
+
 
 if test -n "$CURLDIR"; then
    CPPFLAGS="$old_CPPFLAGS"
    LDFLAGS="$old_LDFLAGS"
 fi
 
 
 
 config_appended_defs="$config_appended_defs${newline}NO_CURL=${NO_CURL}"
 
+if test -z "$NO_CURL"; then
+
+# Extract the first word of "curl-config", so it can be a program name with args.
+set dummy curl-config; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if ${ac_cv_prog_CURL_CONFIG+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$CURL_CONFIG"; then
+  ac_cv_prog_CURL_CONFIG="$CURL_CONFIG" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+    ac_cv_prog_CURL_CONFIG="curl-config"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+  test -z "$ac_cv_prog_CURL_CONFIG" && ac_cv_prog_CURL_CONFIG="no"
+fi
+fi
+CURL_CONFIG=$ac_cv_prog_CURL_CONFIG
+if test -n "$CURL_CONFIG"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CURL_CONFIG" >&5
+$as_echo "$CURL_CONFIG" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+
+if test $CURL_CONFIG != no; then
+
+config_appended_defs="$config_appended_defs${newline}CURL_CONFIG=${CURL_CONFIG}"
+fi
+
+fi
+
+
 #
 # Define NO_EXPAT if you do not have expat installed.  git-http-push is
 # not built, and you cannot push using http:// and https:// transports.
 
 
 if test -n "$EXPATDIR"; then
@@ -8152,13 +8252,13 @@
 
 cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
 # Save the log message, to keep $0 and so on meaningful, and to
 # report actual input values of CONFIG_FILES etc. instead of their
 # values after options handling.
 ac_log="
-This file was extended by git $as_me 2.6.2, which was
+This file was extended by git $as_me 2.6.3, which was
 generated by GNU Autoconf 2.69.  Invocation command line was
 
   CONFIG_FILES    = $CONFIG_FILES
   CONFIG_HEADERS  = $CONFIG_HEADERS
   CONFIG_LINKS    = $CONFIG_LINKS
   CONFIG_COMMANDS = $CONFIG_COMMANDS
@@ -8209,13 +8309,13 @@
 Report bugs to <git@vger.kernel.org>."
 
 _ACEOF
 cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
 ac_cs_config="`$as_echo "$ac_configure_args" | sed 's/^ //; s/[\\""\`\$]/\\\\&/g'`"
 ac_cs_version="\\
-git config.status 2.6.2
+git config.status 2.6.3
 configured by $0, generated by GNU Autoconf 2.69,
   with options \\"\$ac_cs_config\\"
 
 Copyright (C) 2012 Free Software Foundation, Inc.
 This config.status script is free software; the Free Software Foundation
 gives unlimited permission to copy, distribute and modify it."
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/configure.ac /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/configure.ac
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/configure.ac	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/configure.ac	2015-11-06 05:31:55.000000000 +0800
@@ -518,16 +518,39 @@
 GIT_STASH_FLAGS($CURLDIR)
 
 AC_CHECK_LIB([curl], [curl_global_init],
 [NO_CURL=],
 [NO_CURL=YesPlease])
 
+if test -z "${NO_CURL}" && test -z "${NO_OPENSSL}"; then
+
+AC_CHECK_LIB([curl], [Curl_ssl_init],
+[NEEDS_SSL_WITH_CURL=YesPlease],
+[NEEDS_SSL_WITH_CURL=])
+
+GIT_CONF_SUBST([NEEDS_SSL_WITH_CURL])
+
+fi
+
 GIT_UNSTASH_FLAGS($CURLDIR)
 
 GIT_CONF_SUBST([NO_CURL])
 
+if test -z "$NO_CURL"; then
+
+AC_CHECK_PROG([CURL_CONFIG], [curl-config],
+[curl-config],
+[no])
+
+if test $CURL_CONFIG != no; then
+    GIT_CONF_SUBST([CURL_CONFIG])
+fi
+
+fi
+
+
 #
 # Define NO_EXPAT if you do not have expat installed.  git-http-push is
 # not built, and you cannot push using http:// and https:// transports.
 
 GIT_STASH_FLAGS($EXPATDIR)
 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/connect.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/connect.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/connected.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/connected.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/connected.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/connected.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/connect.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/connect.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/convert.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/convert.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/convert.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/convert.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/copy.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/copy.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/copy.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/copy.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/credential-cache.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/credential-cache.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/credential-cache.c	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/credential-cache.c	2015-11-06 05:31:55.000000000 +0800
@@ -85,13 +85,13 @@
 int main(int argc, const char **argv)
 {
 	char *socket_path = NULL;
 	int timeout = 900;
 	const char *op;
 	const char * const usage[] = {
-		"git credential-cache [options] <action>",
+		"git credential-cache [<options>] <action>",
 		NULL
 	};
 	struct option options[] = {
 		OPT_INTEGER(0, "timeout", &timeout,
 			    "number of seconds to cache credentials"),
 		OPT_STRING(0, "socket", &socket_path, "path",
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/credential-cache.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/credential-cache.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/credential-cache--daemon.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/credential-cache--daemon.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/credential-cache--daemon.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/credential-cache--daemon.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/credential-cache.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/credential-cache.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/credential.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/credential.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/credential.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/credential.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/credential-store.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/credential-store.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/credential-store.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/credential-store.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/csum-file.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/csum-file.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/csum-file.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/csum-file.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ctype.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ctype.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ctype.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ctype.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/daemon.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/daemon.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/daemon.c	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/daemon.c	2015-11-06 05:31:55.000000000 +0800
@@ -799,12 +799,13 @@
 				dead = " (with error)";
 			loginfo("[%"PRIuMAX"] Disconnected%s", (uintmax_t)pid, dead);
 
 			/* remove the child */
 			*cradle = blanket->next;
 			live_children--;
+			child_process_clear(&blanket->cld);
 			free(blanket);
 		} else
 			cradle = &blanket->next;
 }
 
 static char **cld_argv;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/daemon.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/daemon.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/daemon.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/daemon.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/date.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/date.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/date.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/date.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/decorate.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/decorate.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/decorate.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/decorate.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diff.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diff.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diffcore-break.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diffcore-break.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diffcore-break.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diffcore-break.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diffcore-delta.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diffcore-delta.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diffcore-delta.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diffcore-delta.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diffcore-order.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diffcore-order.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diffcore-order.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diffcore-order.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diffcore-pickaxe.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diffcore-pickaxe.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diffcore-pickaxe.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diffcore-pickaxe.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diffcore-rename.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diffcore-rename.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diffcore-rename.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diffcore-rename.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diff-delta.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diff-delta.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diff-delta.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diff-delta.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diff-lib.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diff-lib.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diff-lib.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diff-lib.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diff-no-index.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diff-no-index.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diff-no-index.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diff-no-index.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/diff.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/diff.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/dir.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/dir.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/dir.c	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/dir.c	2015-11-06 05:31:55.000000000 +0800
@@ -1199,35 +1199,21 @@
  * Do not use the alphabetically sorted index to look up
  * the directory name; instead, use the case insensitive
  * directory hash.
  */
 static enum exist_status directory_exists_in_index_icase(const char *dirname, int len)
 {
-	const struct cache_entry *ce = cache_dir_exists(dirname, len);
-	unsigned char endchar;
+	struct cache_entry *ce;
 
-	if (!ce)
-		return index_nonexistent;
-	endchar = ce->name[len];
-
-	/*
-	 * The cache_entry structure returned will contain this dirname
-	 * and possibly additional path components.
-	 */
-	if (endchar == '/')
+	if (cache_dir_exists(dirname, len))
 		return index_directory;
 
-	/*
-	 * If there are no additional path components, then this cache_entry
-	 * represents a submodule.  Submodules, despite being directories,
-	 * are stored in the cache without a closing slash.
-	 */
-	if (!endchar && S_ISGITLINK(ce->ce_mode))
+	ce = cache_file_exists(dirname, len, ignore_case);
+	if (ce && S_ISGITLINK(ce->ce_mode))
 		return index_gitdir;
 
-	/* This should never be hit, but it exists just in case. */
 	return index_nonexistent;
 }
 
 /*
  * The index sorts alphabetically by entry name, which
  * means that a gitlink sorts as '\0' at the end, while
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/dir.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/dir.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/dir.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/dir.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/git-bisect.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/git-bisect.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/git-bisect.txt	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/git-bisect.txt	2015-11-06 05:31:55.000000000 +0800
@@ -171,13 +171,13 @@
 ------------
 
 Then compile and test the chosen revision, and afterwards mark
 the revision as good or bad in the usual manner.
 
 Bisect skip
-~~~~~~~~~~~~
+~~~~~~~~~~~
 
 Instead of choosing a nearby commit by yourself, you can ask Git to do
 it for you by issuing the command:
 
 ------------
 $ git bisect skip                 # Current version cannot be tested
@@ -250,13 +250,13 @@
 
 The special exit code 125 should be used when the current source code
 cannot be tested. If the script exits with this code, the current
 revision will be skipped (see `git bisect skip` above). 125 was chosen
 as the highest sensible value to use for this purpose, because 126 and 127
 are used by POSIX shells to signal specific error status (127 is for
-command not found, 126 is for command found but not executable---these
+command not found, 126 is for command found but not executable--these
 details do not matter, as they are normal errors in the script, as far as
 `bisect run` is concerned).
 
 You may often find that during a bisect session you want to have
 temporary modifications (e.g. s/#define DEBUG 0/#define DEBUG 1/ in a
 header file, or "revision that does not have this commit needs this
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/git-cat-file.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/git-cat-file.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/git-cat-file.txt	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/git-cat-file.txt	2015-11-06 05:31:55.000000000 +0800
@@ -7,13 +7,13 @@
 
 
 SYNOPSIS
 --------
 [verse]
 'git cat-file' (-t [--allow-unknown-type]| -s [--allow-unknown-type]| -e | -p | <type> | --textconv ) <object>
-'git cat-file' (--batch | --batch-check) [--follow-symlinks] < <list-of-objects>
+'git cat-file' (--batch | --batch-check) [--follow-symlinks]
 
 DESCRIPTION
 -----------
 In its first form, the command provides the content or the type of an object in
 the repository. The type is required unless '-t' or '-p' is used to find the
 object type, or '-s' is used to find the object size, or '--textconv' is used
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/git-check-attr.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/git-check-attr.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/git-check-attr.txt	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/git-check-attr.txt	2015-11-06 05:31:55.000000000 +0800
@@ -7,13 +7,13 @@
 
 
 SYNOPSIS
 --------
 [verse]
 'git check-attr' [-a | --all | attr...] [--] pathname...
-'git check-attr' --stdin [-z] [-a | --all | attr...] < <list-of-paths>
+'git check-attr' --stdin [-z] [-a | --all | attr...]
 
 DESCRIPTION
 -----------
 For every pathname, this command will list if each attribute is 'unspecified',
 'set', or 'unset' as a gitattribute on that pathname.
 
@@ -25,13 +25,14 @@
 	will not be included in the output.
 
 --cached::
 	Consider `.gitattributes` in the index only, ignoring the working tree.
 
 --stdin::
-	Read file names from stdin instead of from the command-line.
+	Read pathnames from the standard input, one per line,
+	instead of from the command-line.
 
 -z::
 	The output format is modified to be machine-parseable.
 	If `--stdin` is also given, input paths are separated
 	with a NUL character instead of a linefeed character.
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/git-check-ignore.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/git-check-ignore.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/git-check-ignore.txt	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/git-check-ignore.txt	2015-11-06 05:31:55.000000000 +0800
@@ -7,13 +7,13 @@
 
 
 SYNOPSIS
 --------
 [verse]
 'git check-ignore' [options] pathname...
-'git check-ignore' [options] --stdin < <list-of-paths>
+'git check-ignore' [options] --stdin
 
 DESCRIPTION
 -----------
 
 For each pathname given via the command-line or from a file via
 `--stdin`, show the pattern from .gitignore (or other input files to
@@ -32,13 +32,14 @@
 
 -v, --verbose::
 	Also output details about the matching pattern (if any)
 	for each given pathname.
 
 --stdin::
-	Read file names from stdin instead of from the command-line.
+	Read pathnames from the standard input, one per line,
+	instead of from the command-line.
 
 -z::
 	The output format is modified to be machine-parseable (see
 	below).  If `--stdin` is also given, input paths are separated
 	with a NUL character instead of a linefeed character.
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/git-commit-tree.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/git-commit-tree.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/git-commit-tree.txt	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/git-commit-tree.txt	2015-11-06 05:31:55.000000000 +0800
@@ -6,13 +6,13 @@
 git-commit-tree - Create a new commit object
 
 
 SYNOPSIS
 --------
 [verse]
-'git commit-tree' <tree> [(-p <parent>)...] < changelog
+'git commit-tree' <tree> [(-p <parent>)...]
 'git commit-tree' [(-p <parent>)...] [-S[<keyid>]] [(-m <message>)...]
 		  [(-F <file>)...] <tree>
 
 
 DESCRIPTION
 -----------
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/giteveryday.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/giteveryday.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/giteveryday.txt	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/giteveryday.txt	2015-11-06 05:31:55.000000000 +0800
@@ -1,8 +1,8 @@
 giteveryday(7)
-===============
+==============
 
 NAME
 ----
 giteveryday - A useful minimum set of commands for Everyday Git
 
 SYNOPSIS
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/git-fetch.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/git-fetch.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/git-fetch.txt	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/git-fetch.txt	2015-11-06 05:31:55.000000000 +0800
@@ -68,13 +68,13 @@
 
 This configuration is used in two ways:
 
 * When `git fetch` is run without specifying what branches
   and/or tags to fetch on the command line, e.g. `git fetch origin`
   or `git fetch`, `remote.<repository>.fetch` values are used as
-  the refspecs---they specify which refs to fetch and which local refs
+  the refspecs--they specify which refs to fetch and which local refs
   to update.  The example above will fetch
   all branches that exist in the `origin` (i.e. any ref that matches
   the left-hand side of the value, `refs/heads/*`) and update the
   corresponding remote-tracking branches in the `refs/remotes/origin/*`
   hierarchy.
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/git-fmt-merge-msg.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/git-fmt-merge-msg.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/git-fmt-merge-msg.txt	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/git-fmt-merge-msg.txt	2015-11-06 05:31:55.000000000 +0800
@@ -6,13 +6,13 @@
 git-fmt-merge-msg - Produce a merge commit message
 
 
 SYNOPSIS
 --------
 [verse]
-'git fmt-merge-msg' [-m <message>] [--log[=<n>] | --no-log] <$GIT_DIR/FETCH_HEAD
+'git fmt-merge-msg' [-m <message>] [--log[=<n>] | --no-log]
 'git fmt-merge-msg' [-m <message>] [--log[=<n>] | --no-log] -F <file>
 
 DESCRIPTION
 -----------
 Takes the list of merged objects on stdin and produces a suitable
 commit message to be used for the merge commit, usually to be
@@ -54,12 +54,24 @@
 include::fmt-merge-msg-config.txt[]
 
 merge.summary::
 	Synonym to `merge.log`; this is deprecated and will be removed in
 	the future.
 
+EXAMPLE
+-------
+
+--
+$ git fetch origin master
+$ git fmt-merge-msg --log <$GIT_DIR/FETCH_HEAD
+--
+
+Print a log message describing a merge of the "master" branch from
+the "origin" remote.
+
+
 SEE ALSO
 --------
 linkgit:git-merge[1]
 
 GIT
 ---
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/git-gc.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/git-gc.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/git-gc.txt	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/git-gc.txt	2015-11-06 05:31:55.000000000 +0800
@@ -60,14 +60,17 @@
 'git repack'. Setting `gc.autoPackLimit` to 0 disables
 automatic consolidation of packs.
 
 --prune=<date>::
 	Prune loose objects older than date (default is 2 weeks ago,
 	overridable by the config variable `gc.pruneExpire`).
-	--prune=all prunes loose objects regardless of their age.
-	--prune is on by default.
+	--prune=all prunes loose objects regardless of their age (do
+	not use --prune=all unless you know exactly what you are doing.
+	Unless the repository is quiescent, you will lose newly created
+	objects that haven't been anchored with the refs and end up
+	corrupting your repository).  --prune is on by default.
 
 --no-prune::
 	Do not prune any loose objects.
 
 --quiet::
 	Suppress all progress reports.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/git-get-tar-commit-id.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/git-get-tar-commit-id.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/git-get-tar-commit-id.txt	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/git-get-tar-commit-id.txt	2015-11-06 05:31:55.000000000 +0800
@@ -6,23 +6,25 @@
 git-get-tar-commit-id - Extract commit ID from an archive created using git-archive
 
 
 SYNOPSIS
 --------
 [verse]
-'git get-tar-commit-id' < <tarfile>
+'git get-tar-commit-id'
 
 
 DESCRIPTION
 -----------
-Acts as a filter, extracting the commit ID stored in archives created by
-'git archive'.  It reads only the first 1024 bytes of input, thus its
-runtime is not influenced by the size of <tarfile> very much.
+
+Read a tar archive created by 'git archive' from the standard input
+and extract the commit ID stored in it.  It reads only the first
+1024 bytes of input, thus its runtime is not influenced by the size
+of the tar archive very much.
 
 If no commit ID is found, 'git get-tar-commit-id' quietly exists with a
-return code of 1.  This can happen if <tarfile> had not been created
+return code of 1.  This can happen if the archive had not been created
 using 'git archive' or if the first parameter of 'git archive' had been
 a tree ID instead of a commit ID or tag.
 
 GIT
 ---
 Part of the linkgit:git[1] suite
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/git-hash-object.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/git-hash-object.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/git-hash-object.txt	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/git-hash-object.txt	2015-11-06 05:31:55.000000000 +0800
@@ -7,13 +7,13 @@
 
 
 SYNOPSIS
 --------
 [verse]
 'git hash-object' [-t <type>] [-w] [--path=<file>|--no-filters] [--stdin [--literally]] [--] <file>...
-'git hash-object' [-t <type>] [-w] --stdin-paths [--no-filters] < <list-of-paths>
+'git hash-object' [-t <type>] [-w] --stdin-paths [--no-filters]
 
 DESCRIPTION
 -----------
 Computes the object ID value for an object with specified type
 with the contents of the named file (which can be outside of the
 work tree), and optionally writes the resulting object into the
@@ -32,13 +32,14 @@
 	Actually write the object into the object database.
 
 --stdin::
 	Read the object from standard input instead of from a file.
 
 --stdin-paths::
-	Read file names from stdin instead of from the command-line.
+	Read file names from the standard input, one per line, instead
+	of from the command-line.
 
 --path::
 	Hash object as it were located at the given path. The location of
 	file does not directly influence on the hash value, but path is
 	used to determine what Git filters should be applied to the object
 	before it can be placed to the object database, and, as result of
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/git-merge-file.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/git-merge-file.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/git-merge-file.txt	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/git-merge-file.txt	2015-11-06 05:31:55.000000000 +0800
@@ -38,13 +38,14 @@
 the alternatives.  When `--ours`, `--theirs`, or `--union` option is in effect,
 however, these conflicts are resolved favouring lines from `<current-file>`,
 lines from `<other-file>`, or lines from both respectively.  The length of the
 conflict markers can be given with the `--marker-size` option.
 
 The exit value of this program is negative on error, and the number of
-conflicts otherwise. If the merge was clean, the exit value is 0.
+conflicts otherwise (truncated to 127 if there are more than that many
+conflicts). If the merge was clean, the exit value is 0.
 
 'git merge-file' is designed to be a minimal clone of RCS 'merge'; that is, it
 implements all of RCS 'merge''s functionality which is needed by
 linkgit:git[1].
 
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/git-mktag.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/git-mktag.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/git-mktag.txt	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/git-mktag.txt	2015-11-06 05:31:55.000000000 +0800
@@ -6,24 +6,25 @@
 git-mktag - Creates a tag object
 
 
 SYNOPSIS
 --------
 [verse]
-'git mktag' < signature_file
+'git mktag'
 
 DESCRIPTION
 -----------
 Reads a tag contents on standard input and creates a tag object
 that can also be used to sign other objects.
 
 The output is the new tag's <object> identifier.
 
 Tag Format
 ----------
-A tag signature file has a very simple fixed format: four lines of
+A tag signature file, to be fed to this command's standard input,
+has a very simple fixed format: four lines of
 
   object <sha1>
   type <typename>
   tag <tagname>
   tagger <tagger>
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/git-patch-id.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/git-patch-id.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/git-patch-id.txt	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/git-patch-id.txt	2015-11-06 05:31:55.000000000 +0800
@@ -5,16 +5,18 @@
 ----
 git-patch-id - Compute unique ID for a patch
 
 SYNOPSIS
 --------
 [verse]
-'git patch-id' [--stable | --unstable] < <patch>
+'git patch-id' [--stable | --unstable]
 
 DESCRIPTION
 -----------
+Read a patch from the standard input and compute the patch ID for it.
+
 A "patch ID" is nothing but a sum of SHA-1 of the file diffs associated with a
 patch, with whitespace and line numbers ignored.  As such, it's "reasonably
 stable", but at the same time also reasonably unique, i.e., two patches that
 have the same "patch ID" are almost guaranteed to be the same thing.
 
 IOW, you can use this thing to look for likely duplicate commits.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/git-push.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/git-push.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/git-push.txt	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/git-push.txt	2015-11-06 05:31:55.000000000 +0800
@@ -59,13 +59,13 @@
 The <dst> tells which ref on the remote side is updated with this
 push. Arbitrary expressions cannot be used here, an actual ref must
 be named.
 If `git push [<repository>]` without any `<refspec>` argument is set to
 update some ref at the destination with `<src>` with
 `remote.<repository>.push` configuration variable, `:<dst>` part can
-be omitted---such a push will update a ref that `<src>` normally updates
+be omitted--such a push will update a ref that `<src>` normally updates
 without any `<refspec>` on the command line.  Otherwise, missing
 `:<dst>` means to update the same ref as the `<src>`.
 +
 The object referenced by <src> is used to update the <dst> reference
 on the remote side.  By default this is only allowed if <dst> is not
 a tag (annotated or lightweight), and then only if it can fast-forward
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/git-remote.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/git-remote.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/git-remote.txt	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/git-remote.txt	2015-11-06 05:31:55.000000000 +0800
@@ -1,8 +1,8 @@
 git-remote(1)
-============
+=============
 
 NAME
 ----
 git-remote - Manage set of tracked repositories
 
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/gitrevisions.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/gitrevisions.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/gitrevisions.txt	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/gitrevisions.txt	2015-11-06 05:31:55.000000000 +0800
@@ -1,8 +1,8 @@
 gitrevisions(7)
-================
+===============
 
 NAME
 ----
 gitrevisions - specifying revisions and ranges for Git
 
 SYNOPSIS
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/git-show-index.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/git-show-index.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/git-show-index.txt	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/git-show-index.txt	2015-11-06 05:31:55.000000000 +0800
@@ -6,19 +6,20 @@
 git-show-index - Show packed archive index
 
 
 SYNOPSIS
 --------
 [verse]
-'git show-index' < idx-file
+'git show-index'
 
 
 DESCRIPTION
 -----------
-Reads given idx file for packed Git archive created with
-'git pack-objects' command, and dumps its contents.
+Read the idx file for a Git packfile created with
+'git pack-objects' command from the standard input, and
+dump its contents.
 
 The information it outputs is subset of what you can get from
 'git verify-pack -v'; this command only shows the packfile
 offset and SHA-1 of each object.
 
 GIT
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/git-show-ref.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/git-show-ref.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/git-show-ref.txt	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/git-show-ref.txt	2015-11-06 05:31:55.000000000 +0800
@@ -8,26 +8,27 @@
 SYNOPSIS
 --------
 [verse]
 'git show-ref' [-q|--quiet] [--verify] [--head] [-d|--dereference]
 	     [-s|--hash[=<n>]] [--abbrev[=<n>]] [--tags]
 	     [--heads] [--] [<pattern>...]
-'git show-ref' --exclude-existing[=<pattern>] < ref-list
+'git show-ref' --exclude-existing[=<pattern>]
 
 DESCRIPTION
 -----------
 
 Displays references available in a local repository along with the associated
 commit IDs. Results can be filtered using a pattern and tags can be
 dereferenced into object IDs. Additionally, it can be used to test whether a
 particular ref exists.
 
 By default, shows the tags, heads, and remote refs.
 
-The --exclude-existing form is a filter that does the inverse, it shows the
-refs from stdin that don't exist in the local repository.
+The --exclude-existing form is a filter that does the inverse. It reads
+refs from stdin, one ref per line, and shows those that don't exist in
+the local repository.
 
 Use of this utility is encouraged in favor of directly accessing files under
 the `.git` directory.
 
 OPTIONS
 -------
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/git-stripspace.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/git-stripspace.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/git-stripspace.txt	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/git-stripspace.txt	2015-11-06 05:31:55.000000000 +0800
@@ -6,20 +6,21 @@
 git-stripspace - Remove unnecessary whitespace
 
 
 SYNOPSIS
 --------
 [verse]
-'git stripspace' [-s | --strip-comments] < input
-'git stripspace' [-c | --comment-lines] < input
+'git stripspace' [-s | --strip-comments]
+'git stripspace' [-c | --comment-lines]
 
 DESCRIPTION
 -----------
 
-Clean the input in the manner used by Git for text such as commit
-messages, notes, tags and branch descriptions.
+Read text, such as commit messages, notes, tags and branch
+descriptions, from the standard input and clean it in the manner
+used by Git.
 
 With no arguments, this will:
 
 - remove trailing whitespace from all lines
 - collapse multiple consecutive empty lines into one empty line
 - remove empty lines from the beginning and end of the input
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/git.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/git.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/git.txt	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/git.txt	2015-11-06 05:31:55.000000000 +0800
@@ -40,15 +40,16 @@
 
 You are reading the documentation for the latest (possibly
 unreleased) version of Git, that is available from the 'master'
 branch of the `git.git` repository.
 Documentation for older releases are available here:
 
-* link:v2.6.2/git.html[documentation for release 2.6.2]
+* link:v2.6.3/git.html[documentation for release 2.6.3]
 
 * release notes for
+  link:RelNotes/2.6.3.txt[2.6.3],
   link:RelNotes/2.6.2.txt[2.6.2],
   link:RelNotes/2.6.1.txt[2.6.1],
   link:RelNotes/2.6.0.txt[2.6].
 
 * link:v2.5.4/git.html[documentation for release 2.5.4]
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/git-unpack-objects.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/git-unpack-objects.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/git-unpack-objects.txt	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/git-unpack-objects.txt	2015-11-06 05:31:55.000000000 +0800
@@ -6,13 +6,13 @@
 git-unpack-objects - Unpack objects from a packed archive
 
 
 SYNOPSIS
 --------
 [verse]
-'git unpack-objects' [-n] [-q] [-r] [--strict] < <packfile>
+'git unpack-objects' [-n] [-q] [-r] [--strict]
 
 
 DESCRIPTION
 -----------
 Read a packed archive (.pack) from the standard input, expanding
 the objects contained within and writing them into the repository in
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/git-upload-archive.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/git-upload-archive.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/git-upload-archive.txt	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/git-upload-archive.txt	2015-11-06 05:31:55.000000000 +0800
@@ -1,8 +1,8 @@
 git-upload-archive(1)
-====================
+=====================
 
 NAME
 ----
 git-upload-archive - Send archive back to git-archive
 
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/RelNotes/1.7.7.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/RelNotes/1.7.7.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/RelNotes/1.7.7.txt	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/RelNotes/1.7.7.txt	2015-11-06 05:31:55.000000000 +0800
@@ -81,13 +81,13 @@
    the output format of "ack".
 
  * "git grep" learned a "-W" option that shows wider context using the same
    logic used by "git diff" to determine the hunk header.
 
  * Invoking the low-level "git http-fetch" without "-a" option (which
-   git itself never did---normal users should not have to worry about
+   git itself never did--normal users should not have to worry about
    this) is now deprecated.
 
  * The "--decorate" option to "git log" and its family learned to
    highlight grafted and replaced commits.
 
  * "git rebase master topci" no longer spews usage hints after giving
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/RelNotes/1.8.3.1.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/RelNotes/1.8.3.1.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/RelNotes/1.8.3.1.txt	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/RelNotes/1.8.3.1.txt	2015-11-06 05:31:55.000000000 +0800
@@ -1,8 +1,8 @@
 Git v1.8.3.1 Release Notes
-========================
+==========================
 
 Fixes since v1.8.3
 ------------------
 
  * When $HOME is misconfigured to point at an unreadable directory, we
    used to complain and die. The check has been loosened.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/RelNotes/1.8.4.1.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/RelNotes/1.8.4.1.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/RelNotes/1.8.4.1.txt	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/RelNotes/1.8.4.1.txt	2015-11-06 05:31:55.000000000 +0800
@@ -1,8 +1,8 @@
 Git v1.8.4.1 Release Notes
-========================
+==========================
 
 Fixes since v1.8.4
 ------------------
 
  * Some old versions of bash do not grok some constructs like
    'printf -v varname' which the prompt and completion code started
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/RelNotes/1.8.4.2.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/RelNotes/1.8.4.2.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/RelNotes/1.8.4.2.txt	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/RelNotes/1.8.4.2.txt	2015-11-06 05:31:55.000000000 +0800
@@ -1,8 +1,8 @@
 Git v1.8.4.2 Release Notes
-========================
+==========================
 
 Fixes since v1.8.4.1
 --------------------
 
  * "git clone" gave some progress messages to the standard output, not
    to the standard error, and did not allow suppressing them with the
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/RelNotes/1.8.4.3.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/RelNotes/1.8.4.3.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/RelNotes/1.8.4.3.txt	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/RelNotes/1.8.4.3.txt	2015-11-06 05:31:55.000000000 +0800
@@ -1,8 +1,8 @@
 Git v1.8.4.3 Release Notes
-========================
+==========================
 
 Fixes since v1.8.4.2
 --------------------
 
  * The interaction between use of Perl in our test suite and NO_PERL
    has been clarified a bit.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/RelNotes/1.8.4.4.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/RelNotes/1.8.4.4.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/RelNotes/1.8.4.4.txt	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/RelNotes/1.8.4.4.txt	2015-11-06 05:31:55.000000000 +0800
@@ -1,8 +1,8 @@
 Git v1.8.4.4 Release Notes
-========================
+==========================
 
 Fixes since v1.8.4.3
 --------------------
 
  * The fix in v1.8.4.3 to the pack transfer protocol to propagate
    the target of symbolic refs broke "git clone/git fetch" from a
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/RelNotes/1.9.0.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/RelNotes/1.9.0.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/RelNotes/1.9.0.txt	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/RelNotes/1.9.0.txt	2015-11-06 05:31:55.000000000 +0800
@@ -174,13 +174,13 @@
    which case the cycles spent to look at the ref namespace were an
    expensive no-op, as the result was discarded without being used.
 
  * The naming convention of the packfiles has been updated; it used to
    be based on the enumeration of names of the objects that are
    contained in the pack, but now it also depends on how the packed
-   result is represented---packing the same set of objects using
+   result is represented--packing the same set of objects using
    different settings (or delta order) would produce a pack with
    different name.
 
  * "git diff --no-index" mode used to unnecessarily attempt to read
    the index when there is one.
 
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/RelNotes: 2.6.3.txt
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/technical/api-run-command.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/technical/api-run-command.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/technical/api-run-command.txt	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/technical/api-run-command.txt	2015-11-06 05:31:55.000000000 +0800
@@ -43,12 +43,19 @@
 	`RUN_COMMAND_STDOUT_TO_STDERR`, or `RUN_SILENT_EXEC_FAILURE`
 	that correspond to the members .no_stdin, .git_cmd,
 	.stdout_to_stderr, .silent_exec_failure of `struct child_process`.
 	The argument dir corresponds the member .dir. The argument env
 	corresponds to the member .env.
 
+`child_process_clear`::
+
+	Release the memory associated with the struct child_process.
+	Most users of the run-command API don't need to call this
+	function explicitly because `start_command` invokes it on
+	failure and `finish_command` calls it automatically already.
+
 The functions above do the following:
 
 . If a system call failed, errno is set and -1 is returned. A diagnostic
   is printed.
 
 . If the program was not found, then -1 is returned and errno is set to
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/technical/index-format.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/technical/index-format.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/technical/index-format.txt	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/technical/index-format.txt	2015-11-06 05:31:55.000000000 +0800
@@ -167,13 +167,13 @@
   a negative number in the entry_count field. In this case, there is no
   object name and the next entry starts immediately after the newline.
   When writing an invalid entry, -1 should always be used as entry_count.
 
   The entries are written out in the top-down, depth-first order.  The
   first entry represents the root level of the repository, followed by the
-  first subtree---let's call this A---of the root level (with its name
+  first subtree--let's call this A--of the root level (with its name
   relative to the root level), followed by the first subtree of A (with
   its name relative to A), ...
 
 === Resolve undo
 
   A conflict is represented in the index as a set of higher stage entries.
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/technical: repository-version.txt
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/urls-remotes.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/urls-remotes.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/urls-remotes.txt	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/urls-remotes.txt	2015-11-06 05:31:55.000000000 +0800
@@ -33,13 +33,13 @@
 ------------
 
 The `<pushurl>` is used for pushes only. It is optional and defaults
 to `<url>`.
 
 Named file in `$GIT_DIR/remotes`
-~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 
 You can choose to provide the name of a
 file in `$GIT_DIR/remotes`.  The URL
 in this file will be used to access the repository.  The refspec
 in this file will be used as default when you do not
 provide a refspec on the command line.  This file should have the
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/user-manual.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/user-manual.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Documentation/user-manual.txt	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Documentation/user-manual.txt	2015-11-06 05:31:55.000000000 +0800
@@ -1428,17 +1428,17 @@
 
 There is one special case not mentioned above, which is treated
 differently.  Normally, a merge results in a merge commit, with two
 parents, one pointing at each of the two lines of development that
 were merged.
 
-However, if the current branch is a descendant of the other--so every
-commit present in the one is already contained in the other--then Git
-just performs a "fast-forward"; the head of the current branch is moved
-forward to point at the head of the merged-in branch, without any new
-commits being created.
+However, if the current branch is an ancestor of the other--so every commit
+present in the current branch is already contained in the other branch--then Git
+just performs a "fast-forward"; the head of the current branch is moved forward
+to point at the head of the merged-in branch, without any new commits being
+created.
 
 [[fixing-mistakes]]
 Fixing mistakes
 ---------------
 
 If you've messed up the working tree, but haven't yet committed your
@@ -1488,13 +1488,13 @@
 with the changes to be reverted, then you will be asked to fix
 conflicts manually, just as in the case of <<resolving-a-merge,
 resolving a merge>>.
 
 [[fixing-a-mistake-by-rewriting-history]]
 Fixing a mistake by rewriting history
-~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 
 If the problematic commit is the most recent commit, and you have not
 yet made that commit public, then you may just
 <<undoing-a-merge,destroy it using `git reset`>>.
 
 Alternatively, you
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/editor.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/editor.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/editor.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/editor.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/entry.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/entry.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/entry.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/entry.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/environment.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/environment.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/environment.c	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/environment.c	2015-11-06 05:31:55.000000000 +0800
@@ -23,12 +23,13 @@
 int is_bare_repository_cfg = -1; /* unspecified */
 int log_all_ref_updates = -1; /* unspecified */
 int warn_ambiguous_refs = 1;
 int warn_on_object_refname_ambiguity = 1;
 int ref_paranoia = -1;
 int repository_format_version;
+int repository_format_precious_objects;
 const char *git_commit_encoding;
 const char *git_log_output_encoding;
 int shared_repository = PERM_UMASK;
 const char *apply_default_whitespace;
 const char *apply_default_ignorewhitespace;
 const char *git_attributes_file;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/environment.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/environment.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/environment.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/environment.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ewah/bitmap.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ewah/bitmap.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ewah/bitmap.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ewah/bitmap.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ewah/ewah_bitmap.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ewah/ewah_bitmap.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ewah/ewah_bitmap.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ewah/ewah_bitmap.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ewah/ewah_io.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ewah/ewah_io.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ewah/ewah_io.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ewah/ewah_io.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ewah/ewah_rlw.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ewah/ewah_rlw.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ewah/ewah_rlw.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ewah/ewah_rlw.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/exec_cmd.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/exec_cmd.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/exec_cmd.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/exec_cmd.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/fast-import.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/fast-import.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/fast-import.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/fast-import.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/fetch-pack.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/fetch-pack.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/fetch-pack.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/fetch-pack.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/fsck.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/fsck.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/fsck.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/fsck.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/gettext.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/gettext.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/gettext.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/gettext.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-add and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-add differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-am and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-am differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-annotate and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-annotate differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-apply and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-apply differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-archive and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-archive differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-bisect--helper and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-bisect--helper differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-blame and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-blame differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-branch and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-branch differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-bundle and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-bundle differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-cat-file and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-cat-file differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-check-attr and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-check-attr differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-check-ignore and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-check-ignore differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-check-mailmap and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-check-mailmap differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-checkout and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-checkout differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-checkout-index and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-checkout-index differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-check-ref-format and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-check-ref-format differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-cherry and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-cherry differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-cherry-pick and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-cherry-pick differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-clean and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-clean differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-clone and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-clone differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-column and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-column differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-commit and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-commit differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-commit-tree and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-commit-tree differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-compat-util.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-compat-util.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-compat-util.h	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-compat-util.h	2015-11-06 05:31:55.000000000 +0800
@@ -293,12 +293,16 @@
 #endif
 
 #ifndef PRIuMAX
 #define PRIuMAX "llu"
 #endif
 
+#ifndef SCNuMAX
+#define SCNuMAX PRIuMAX
+#endif
+
 #ifndef PRIu32
 #define PRIu32 "u"
 #endif
 
 #ifndef PRIx32
 #define PRIx32 "x"
@@ -565,13 +569,13 @@
 #endif
 #define lstat(path, buf) git_lstat(path, buf)
 extern int git_lstat(const char *, struct stat *);
 #endif
 
 #define DEFAULT_PACKED_GIT_LIMIT \
-	((1024L * 1024L) * (sizeof(void*) >= 8 ? 8192 : 256))
+	((1024L * 1024L) * (size_t)(sizeof(void*) >= 8 ? 8192 : 256))
 
 #ifdef NO_PREAD
 #define pread git_pread
 extern ssize_t git_pread(int fd, void *buf, size_t count, off_t offset);
 #endif
 /*
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-config and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-config differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-count-objects and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-count-objects differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-credential and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-credential differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-credential-cache and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-credential-cache differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-credential-cache--daemon and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-credential-cache--daemon differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-credential-store and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-credential-store differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-cvsserver /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-cvsserver
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-cvsserver	2017-10-10 14:24:44.510383580 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-cvsserver	2017-10-10 14:28:32.734375216 +0800
@@ -24,13 +24,13 @@
 use Fcntl;
 use File::Temp qw/tempdir tempfile/;
 use File::Path qw/rmtree/;
 use File::Basename;
 use Getopt::Long qw(:config require_order no_ignore_case);
 
-my $VERSION = '2.6.2';
+my $VERSION = '2.6.3';
 
 my $log = GITCVS::log->new();
 my $cfg;
 
 my $DATE_LIST = {
     Jan => "01",
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-daemon and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-daemon differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-describe and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-describe differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-diff and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-diff differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-diff-files and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-diff-files differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-diff-index and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-diff-index differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-diff-tree and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-diff-tree differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-fast-export and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-fast-export differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-fast-import and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-fast-import differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-fetch and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-fetch differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-fetch-pack and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-fetch-pack differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-filter-branch /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-filter-branch
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-filter-branch	2017-10-10 14:24:44.294383588 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-filter-branch	2017-10-10 14:28:32.522375223 +0800
@@ -344,13 +344,13 @@
 	if [ "$filter_parent" ]; then
 		parentstr="$(echo "$parentstr" | eval "$filter_parent")" ||
 				die "parent filter failed: $filter_parent"
 	fi
 
 	{
-		while read -r header_line && test -n "$header_line"
+		while IFS='' read -r header_line && test -n "$header_line"
 		do
 			# skip header lines...
 			:;
 		done
 		# and output the actual commit message
 		cat
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-filter-branch.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-filter-branch.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-filter-branch.sh	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-filter-branch.sh	2015-11-06 05:31:55.000000000 +0800
@@ -344,13 +344,13 @@
 	if [ "$filter_parent" ]; then
 		parentstr="$(echo "$parentstr" | eval "$filter_parent")" ||
 				die "parent filter failed: $filter_parent"
 	fi
 
 	{
-		while read -r header_line && test -n "$header_line"
+		while IFS='' read -r header_line && test -n "$header_line"
 		do
 			# skip header lines...
 			:;
 		done
 		# and output the actual commit message
 		cat
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-fmt-merge-msg and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-fmt-merge-msg differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-for-each-ref and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-for-each-ref differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-format-patch and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-format-patch differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-fsck and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-fsck differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-fsck-objects and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-fsck-objects differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-gc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-gc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-get-tar-commit-id and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-get-tar-commit-id differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-grep and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-grep differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-hash-object and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-hash-object differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-help and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-help differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-http-backend and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-http-backend differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-imap-send and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-imap-send differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-index-pack and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-index-pack differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-init and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-init differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-init-db and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-init-db differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-interpret-trailers and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-interpret-trailers differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-log and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-log differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-ls-files and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-ls-files differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-ls-remote and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-ls-remote differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-ls-tree and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-ls-tree differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-mailinfo and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-mailinfo differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-mailsplit and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-mailsplit differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-merge and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-merge differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-merge-base and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-merge-base differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-merge-file and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-merge-file differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-merge-index and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-merge-index differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-merge-one-file /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-merge-one-file
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-merge-one-file	2017-10-10 14:24:44.318383587 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-merge-one-file	2017-10-10 14:28:32.542375223 +0800
@@ -35,12 +35,20 @@
 
 case "${1:-.}${2:-.}${3:-.}" in
 #
 # Deleted in both or deleted in one and unchanged in the other
 #
 "$1.." | "$1.$1" | "$1$1.")
+	if { test -z "$6" && test "$5" != "$7"; } ||
+	   { test -z "$7" && test "$5" != "$6"; }
+	then
+		echo "ERROR: File $4 deleted on one branch but had its" >&2
+		echo "ERROR: permissions changed on the other." >&2
+		exit 1
+	fi
+
 	if test -n "$2"
 	then
 		echo "Removing $4"
 	else
 		# read-tree checked that index matches HEAD already,
 		# so we know we do not have this path tracked.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-merge-one-file.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-merge-one-file.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-merge-one-file.sh	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-merge-one-file.sh	2015-11-06 05:31:55.000000000 +0800
@@ -35,12 +35,20 @@
 
 case "${1:-.}${2:-.}${3:-.}" in
 #
 # Deleted in both or deleted in one and unchanged in the other
 #
 "$1.." | "$1.$1" | "$1$1.")
+	if { test -z "$6" && test "$5" != "$7"; } ||
+	   { test -z "$7" && test "$5" != "$6"; }
+	then
+		echo "ERROR: File $4 deleted on one branch but had its" >&2
+		echo "ERROR: permissions changed on the other." >&2
+		exit 1
+	fi
+
 	if test -n "$2"
 	then
 		echo "Removing $4"
 	else
 		# read-tree checked that index matches HEAD already,
 		# so we know we do not have this path tracked.
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-merge-ours and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-merge-ours differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-merge-recursive and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-merge-recursive differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-merge-subtree and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-merge-subtree differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-merge-tree and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-merge-tree differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-mktag and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-mktag differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-mktree and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-mktree differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-mv and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-mv differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-name-rev and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-name-rev differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-notes and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-notes differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-p4 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-p4
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-p4	2017-10-10 14:24:44.538383579 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-p4	2017-10-10 14:28:32.758375215 +0800
@@ -131,19 +131,17 @@
 
 def read_pipe(c, ignore_error=False):
     if verbose:
         sys.stderr.write('Reading pipe: %s\n' % str(c))
 
     expand = isinstance(c,basestring)
-    p = subprocess.Popen(c, stdout=subprocess.PIPE, shell=expand)
-    pipe = p.stdout
-    val = pipe.read()
-    if p.wait() and not ignore_error:
-        die('Command failed: %s' % str(c))
-
-    return val
+    p = subprocess.Popen(c, stdout=subprocess.PIPE, stderr=subprocess.PIPE, shell=expand)
+    (out, err) = p.communicate()
+    if p.returncode != 0 and not ignore_error:
+        die('Command failed: %s\nError: %s' % (str(c), err))
+    return out
 
 def p4_read_pipe(c, ignore_error=False):
     real_cmd = p4_build_cmd(c)
     return read_pipe(real_cmd, ignore_error)
 
 def read_pipe_lines(c):
@@ -2190,16 +2188,23 @@
             # Invoke print -o to get the real contents.
             #
             # On windows, the newlines will always be mangled by print, so put
             # them back too.  This is not needed to the cygwin windows version,
             # just the native "NT" type.
             #
-            text = p4_read_pipe(['print', '-q', '-o', '-', "%s@%s" % (file['depotFile'], file['change']) ])
-            if p4_version_string().find("/NT") >= 0:
-                text = text.replace("\r\n", "\n")
-            contents = [ text ]
+            try:
+                text = p4_read_pipe(['print', '-q', '-o', '-', '%s@%s' % (file['depotFile'], file['change'])])
+            except Exception as e:
+                if 'Translation of file content failed' in str(e):
+                    type_base = 'binary'
+                else:
+                    raise e
+            else:
+                if p4_version_string().find('/NT') >= 0:
+                    text = text.replace('\r\n', '\n')
+                contents = [ text ]
 
         if type_base == "apple":
             # Apple filetype files will be streamed as a concatenation of
             # its appledouble header and the contents.  This is useless
             # on both macs and non-macs.  If using "print -q -o xx", it
             # will create "xx" with the data, and "%xx" with the header.
@@ -2326,14 +2331,17 @@
     def make_email(self, userid):
         if userid in self.users:
             return self.users[userid]
         else:
             return "%s <a@b>" % userid
 
-    # Stream a p4 tag
     def streamTag(self, gitStream, labelName, labelDetails, commit, epoch):
+        """ Stream a p4 tag.
+        commit is either a git commit, or a fast-import mark, ":<p4commit>"
+        """
+
         if verbose:
             print "writing tag %s for commit %s" % (labelName, commit)
         gitStream.write("tag %s\n" % labelName)
         gitStream.write("from %s\n" % commit)
 
         if labelDetails.has_key('Owner'):
@@ -2378,13 +2386,13 @@
                 sys.stderr.write("Ignoring file outside of prefix: %s\n" % f['path'])
 
         if self.clientSpecDirs:
             self.clientSpecDirs.update_client_spec_path_cache(files)
 
         self.gitStream.write("commit %s\n" % branch)
-#        gitStream.write("mark :%s\n" % details["change"])
+        self.gitStream.write("mark :%s\n" % details["change"])
         self.committedChanges.add(int(details["change"]))
         committer = ""
         if author not in self.users:
             self.getUserMapFromPerforceServer()
         committer = "%s %s %s" % (self.make_email(author), epoch, self.tz)
 
@@ -2497,19 +2505,25 @@
             change = p4Cmd(["changes", "-m", "1"] + ["%s...@%s" % (p, name)
                                 for p in self.depotPaths])
 
             if change.has_key('change'):
                 # find the corresponding git commit; take the oldest commit
                 changelist = int(change['change'])
-                gitCommit = read_pipe(["git", "rev-list", "--max-count=1",
-                     "--reverse", ":/\[git-p4:.*change = %d\]" % changelist])
-                if len(gitCommit) == 0:
-                    print "could not find git commit for changelist %d" % changelist
-                else:
-                    gitCommit = gitCommit.strip()
+                if changelist in self.committedChanges:
+                    gitCommit = ":%d" % changelist       # use a fast-import mark
                     commitFound = True
+                else:
+                    gitCommit = read_pipe(["git", "rev-list", "--max-count=1",
+                        "--reverse", ":/\[git-p4:.*change = %d\]" % changelist], ignore_error=True)
+                    if len(gitCommit) == 0:
+                        print "importing label %s: could not find git commit for changelist %d" % (name, changelist)
+                    else:
+                        commitFound = True
+                        gitCommit = gitCommit.strip()
+
+                if commitFound:
                     # Convert from p4 time format
                     try:
                         tmwhen = time.strptime(labelDetails['Update'], "%Y/%m/%d %H:%M:%S")
                     except ValueError:
                         print "Could not convert label time %s" % labelDetails['Update']
                         tmwhen = 1
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-p4.py /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-p4.py
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-p4.py	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-p4.py	2015-11-06 05:31:55.000000000 +0800
@@ -131,19 +131,17 @@
 
 def read_pipe(c, ignore_error=False):
     if verbose:
         sys.stderr.write('Reading pipe: %s\n' % str(c))
 
     expand = isinstance(c,basestring)
-    p = subprocess.Popen(c, stdout=subprocess.PIPE, shell=expand)
-    pipe = p.stdout
-    val = pipe.read()
-    if p.wait() and not ignore_error:
-        die('Command failed: %s' % str(c))
-
-    return val
+    p = subprocess.Popen(c, stdout=subprocess.PIPE, stderr=subprocess.PIPE, shell=expand)
+    (out, err) = p.communicate()
+    if p.returncode != 0 and not ignore_error:
+        die('Command failed: %s\nError: %s' % (str(c), err))
+    return out
 
 def p4_read_pipe(c, ignore_error=False):
     real_cmd = p4_build_cmd(c)
     return read_pipe(real_cmd, ignore_error)
 
 def read_pipe_lines(c):
@@ -2190,16 +2188,23 @@
             # Invoke print -o to get the real contents.
             #
             # On windows, the newlines will always be mangled by print, so put
             # them back too.  This is not needed to the cygwin windows version,
             # just the native "NT" type.
             #
-            text = p4_read_pipe(['print', '-q', '-o', '-', "%s@%s" % (file['depotFile'], file['change']) ])
-            if p4_version_string().find("/NT") >= 0:
-                text = text.replace("\r\n", "\n")
-            contents = [ text ]
+            try:
+                text = p4_read_pipe(['print', '-q', '-o', '-', '%s@%s' % (file['depotFile'], file['change'])])
+            except Exception as e:
+                if 'Translation of file content failed' in str(e):
+                    type_base = 'binary'
+                else:
+                    raise e
+            else:
+                if p4_version_string().find('/NT') >= 0:
+                    text = text.replace('\r\n', '\n')
+                contents = [ text ]
 
         if type_base == "apple":
             # Apple filetype files will be streamed as a concatenation of
             # its appledouble header and the contents.  This is useless
             # on both macs and non-macs.  If using "print -q -o xx", it
             # will create "xx" with the data, and "%xx" with the header.
@@ -2326,14 +2331,17 @@
     def make_email(self, userid):
         if userid in self.users:
             return self.users[userid]
         else:
             return "%s <a@b>" % userid
 
-    # Stream a p4 tag
     def streamTag(self, gitStream, labelName, labelDetails, commit, epoch):
+        """ Stream a p4 tag.
+        commit is either a git commit, or a fast-import mark, ":<p4commit>"
+        """
+
         if verbose:
             print "writing tag %s for commit %s" % (labelName, commit)
         gitStream.write("tag %s\n" % labelName)
         gitStream.write("from %s\n" % commit)
 
         if labelDetails.has_key('Owner'):
@@ -2378,13 +2386,13 @@
                 sys.stderr.write("Ignoring file outside of prefix: %s\n" % f['path'])
 
         if self.clientSpecDirs:
             self.clientSpecDirs.update_client_spec_path_cache(files)
 
         self.gitStream.write("commit %s\n" % branch)
-#        gitStream.write("mark :%s\n" % details["change"])
+        self.gitStream.write("mark :%s\n" % details["change"])
         self.committedChanges.add(int(details["change"]))
         committer = ""
         if author not in self.users:
             self.getUserMapFromPerforceServer()
         committer = "%s %s %s" % (self.make_email(author), epoch, self.tz)
 
@@ -2497,19 +2505,25 @@
             change = p4Cmd(["changes", "-m", "1"] + ["%s...@%s" % (p, name)
                                 for p in self.depotPaths])
 
             if change.has_key('change'):
                 # find the corresponding git commit; take the oldest commit
                 changelist = int(change['change'])
-                gitCommit = read_pipe(["git", "rev-list", "--max-count=1",
-                     "--reverse", ":/\[git-p4:.*change = %d\]" % changelist])
-                if len(gitCommit) == 0:
-                    print "could not find git commit for changelist %d" % changelist
-                else:
-                    gitCommit = gitCommit.strip()
+                if changelist in self.committedChanges:
+                    gitCommit = ":%d" % changelist       # use a fast-import mark
                     commitFound = True
+                else:
+                    gitCommit = read_pipe(["git", "rev-list", "--max-count=1",
+                        "--reverse", ":/\[git-p4:.*change = %d\]" % changelist], ignore_error=True)
+                    if len(gitCommit) == 0:
+                        print "importing label %s: could not find git commit for changelist %d" % (name, changelist)
+                    else:
+                        commitFound = True
+                        gitCommit = gitCommit.strip()
+
+                if commitFound:
                     # Convert from p4 time format
                     try:
                         tmwhen = time.strptime(labelDetails['Update'], "%Y/%m/%d %H:%M:%S")
                     except ValueError:
                         print "Could not convert label time %s" % labelDetails['Update']
                         tmwhen = 1
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-pack-objects and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-pack-objects differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-pack-redundant and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-pack-redundant differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-pack-refs and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-pack-refs differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-patch-id and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-patch-id differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-prune and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-prune differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-prune-packed and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-prune-packed differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-pull and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-pull differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-push and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-push differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-read-tree and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-read-tree differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-rebase--interactive /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-rebase--interactive
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-rebase--interactive	2017-10-10 14:24:44.554383578 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-rebase--interactive	2017-10-10 14:28:32.774375214 +0800
@@ -74,12 +74,16 @@
 # their new sha1s.  The rewritten-pending list keeps the sha1s of
 # commits that have been processed, but not committed yet,
 # e.g. because they are waiting for a 'squash' command.
 rewritten_list="$state_dir"/rewritten-list
 rewritten_pending="$state_dir"/rewritten-pending
 
+# Work around Git for Windows' Bash whose "read" does not strip CRLF
+# and leaves CR at the end instead.
+cr=$(printf "\015")
+
 strategy_args=
 if test -n "$do_merge"
 then
 	strategy_args=${strategy:+--strategy=$strategy}
 	eval '
 		for strategy_opt in '"$strategy_opts"'
@@ -515,12 +519,16 @@
 	rm -f "$msg" "$author_script" "$amend" "$state_dir"/stopped-sha || exit
 	read -r command sha1 rest < "$todo"
 	case "$command" in
 	"$comment_char"*|''|noop|drop|d)
 		mark_action_done
 		;;
+	"$cr")
+		# Work around CR left by "read" (e.g. with Git for Windows' Bash).
+		mark_action_done
+		;;
 	pick|p)
 		comment_for_reflog pick
 
 		mark_action_done
 		do_pick $sha1 "$rest"
 		record_in_rewritten $sha1
@@ -893,12 +901,16 @@
 	do
 		lineno=$(( $lineno + 1 ))
 		case $command in
 		"$comment_char"*|''|noop|x|exec)
 			# Doesn't expect a SHA-1
 			;;
+		"$cr")
+			# Work around CR left by "read" (e.g. with Git for
+			# Windows' Bash).
+			;;
 		pick|p|drop|d|reword|r|edit|e|squash|s|fixup|f)
 			if ! check_commit_sha "${rest%%[ 	]*}" "$lineno" "$1"
 			then
 				retval=1
 			fi
 			;;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-rebase--interactive.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-rebase--interactive.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-rebase--interactive.sh	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-rebase--interactive.sh	2015-11-06 05:31:55.000000000 +0800
@@ -74,12 +74,16 @@
 # their new sha1s.  The rewritten-pending list keeps the sha1s of
 # commits that have been processed, but not committed yet,
 # e.g. because they are waiting for a 'squash' command.
 rewritten_list="$state_dir"/rewritten-list
 rewritten_pending="$state_dir"/rewritten-pending
 
+# Work around Git for Windows' Bash whose "read" does not strip CRLF
+# and leaves CR at the end instead.
+cr=$(printf "\015")
+
 strategy_args=
 if test -n "$do_merge"
 then
 	strategy_args=${strategy:+--strategy=$strategy}
 	eval '
 		for strategy_opt in '"$strategy_opts"'
@@ -515,12 +519,16 @@
 	rm -f "$msg" "$author_script" "$amend" "$state_dir"/stopped-sha || exit
 	read -r command sha1 rest < "$todo"
 	case "$command" in
 	"$comment_char"*|''|noop|drop|d)
 		mark_action_done
 		;;
+	"$cr")
+		# Work around CR left by "read" (e.g. with Git for Windows' Bash).
+		mark_action_done
+		;;
 	pick|p)
 		comment_for_reflog pick
 
 		mark_action_done
 		do_pick $sha1 "$rest"
 		record_in_rewritten $sha1
@@ -893,12 +901,16 @@
 	do
 		lineno=$(( $lineno + 1 ))
 		case $command in
 		"$comment_char"*|''|noop|x|exec)
 			# Doesn't expect a SHA-1
 			;;
+		"$cr")
+			# Work around CR left by "read" (e.g. with Git for
+			# Windows' Bash).
+			;;
 		pick|p|drop|d|reword|r|edit|e|squash|s|fixup|f)
 			if ! check_commit_sha "${rest%%[ 	]*}" "$lineno" "$1"
 			then
 				retval=1
 			fi
 			;;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-receive-pack and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-receive-pack differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-reflog and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-reflog differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-remote and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-remote differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-remote-ext and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-remote-ext differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-remote-fd and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-remote-fd differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-remote-testsvn and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-remote-testsvn differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-repack and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-repack differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-replace and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-replace differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-rerere and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-rerere differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-reset and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-reset differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-revert and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-revert differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-rev-list and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-rev-list differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-rev-parse and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-rev-parse differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-rm and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-rm differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/GIT-SCRIPT-DEFINES /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/GIT-SCRIPT-DEFINES
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/GIT-SCRIPT-DEFINES	2017-10-10 14:24:44.282383588 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/GIT-SCRIPT-DEFINES	2017-10-10 14:28:32.514375224 +0800
@@ -1 +1 @@
-/bin/sh:diff:2.6.2: /usr/local/share/locale:YesPlease::: /usr/local/share/gitweb:/usr/bin/perl
+/bin/sh:diff:2.6.3: /usr/local/share/locale:YesPlease::: /usr/local/share/gitweb:/usr/bin/perl
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-send-email /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-send-email
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-send-email	2017-10-10 14:24:44.526383579 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-send-email	2017-10-10 14:28:32.746375215 +0800
@@ -1225,13 +1225,13 @@
 		    }
 	       @cc);
 	my $to = join (",\n\t", @recipients);
 	@recipients = unique_email_list(@recipients,@cc,@bcclist);
 	@recipients = (map { extract_valid_address_or_die($_) } @recipients);
 	my $date = format_2822_time($time++);
-	my $gitversion = '2.6.2';
+	my $gitversion = '2.6.3';
 	if ($gitversion =~ m/..GIT_VERSION../) {
 	    $gitversion = Git::version();
 	}
 
 	my $cc = join(",\n\t", unique_email_list(@cc));
 	my $ccline = "";
@@ -1363,13 +1363,17 @@
 
 		smtp_auth_maybe or die $smtp->message;
 
 		$smtp->mail( $raw_from ) or die $smtp->message;
 		$smtp->to( @recipients ) or die $smtp->message;
 		$smtp->data or die $smtp->message;
-		$smtp->datasend("$header\n$message") or die $smtp->message;
+		$smtp->datasend("$header\n") or die $smtp->message;
+		my @lines = split /^/, $message;
+		foreach my $line (@lines) {
+			$smtp->datasend("$line") or die $smtp->message;
+		}
 		$smtp->dataend() or die $smtp->message;
 		$smtp->code =~ /250|200/ or die "Failed to send $subject\n".$smtp->message;
 	}
 	if ($quiet) {
 		printf (($dry_run ? "Dry-" : "")."Sent %s\n", $subject);
 	} else {
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-send-email.perl /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-send-email.perl
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-send-email.perl	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-send-email.perl	2015-11-06 05:31:55.000000000 +0800
@@ -1362,13 +1362,17 @@
 
 		smtp_auth_maybe or die $smtp->message;
 
 		$smtp->mail( $raw_from ) or die $smtp->message;
 		$smtp->to( @recipients ) or die $smtp->message;
 		$smtp->data or die $smtp->message;
-		$smtp->datasend("$header\n$message") or die $smtp->message;
+		$smtp->datasend("$header\n") or die $smtp->message;
+		my @lines = split /^/, $message;
+		foreach my $line (@lines) {
+			$smtp->datasend("$line") or die $smtp->message;
+		}
 		$smtp->dataend() or die $smtp->message;
 		$smtp->code =~ /250|200/ or die "Failed to send $subject\n".$smtp->message;
 	}
 	if ($quiet) {
 		printf (($dry_run ? "Dry-" : "")."Sent %s\n", $subject);
 	} else {
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-send-pack and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-send-pack differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-shell and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-shell differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-sh-i18n--envsubst and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-sh-i18n--envsubst differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-shortlog and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-shortlog differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-show and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-show differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-show-branch and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-show-branch differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-show-index and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-show-index differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-show-ref and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-show-ref differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-stage and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-stage differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-status and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-status differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-stripspace and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-stripspace differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-svn /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-svn
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-svn	2017-10-10 14:24:44.530383579 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-svn	2017-10-10 14:28:32.754375215 +0800
@@ -6,13 +6,13 @@
 use warnings;
 use strict;
 use vars qw/	$AUTHOR $VERSION
 		$sha1 $sha1_short $_revision $_repository
 		$_q $_authors $_authors_prog %users/;
 $AUTHOR = 'Eric Wong <normalperson@yhbt.net>';
-$VERSION = '2.6.2';
+$VERSION = '2.6.3';
 
 use Carp qw/croak/;
 use File::Basename qw/dirname basename/;
 use File::Path qw/mkpath/;
 use File::Spec;
 use Getopt::Long qw/:config gnu_getopt no_ignore_case auto_abbrev/;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-symbolic-ref and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-symbolic-ref differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-tag and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-tag differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-unpack-file and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-unpack-file differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-unpack-objects and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-unpack-objects differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-update-index and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-update-index differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-update-ref and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-update-ref differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-update-server-info and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-update-server-info differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-upload-archive and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-upload-archive differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-upload-pack and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-upload-pack differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/GIT-USER-AGENT /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/GIT-USER-AGENT
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/GIT-USER-AGENT	2017-10-10 14:24:38.146383813 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/GIT-USER-AGENT	2017-10-10 14:28:26.186375456 +0800
@@ -1 +1 @@
-git/2.6.2
+git/2.6.3
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-var and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-var differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-verify-commit and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-verify-commit differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-verify-pack and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-verify-pack differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-verify-tag and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-verify-tag differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/GIT-VERSION-FILE /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/GIT-VERSION-FILE
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/GIT-VERSION-FILE	2017-10-10 14:24:13.082384732 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/GIT-VERSION-FILE	2017-10-10 14:28:01.002376378 +0800
@@ -1 +1 @@
-GIT_VERSION = 2.6.2
+GIT_VERSION = 2.6.3
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/GIT-VERSION-GEN /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/GIT-VERSION-GEN
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/GIT-VERSION-GEN	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/GIT-VERSION-GEN	2015-11-06 05:31:55.000000000 +0800
@@ -1,10 +1,10 @@
 #!/bin/sh
 
 GVF=GIT-VERSION-FILE
-DEF_VER=v2.6.2
+DEF_VER=v2.6.3
 
 LF='
 '
 
 # First see if there is a version file (included in release tarballs),
 # then try git-describe, then default.
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-whatchanged and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-whatchanged differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-worktree and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-worktree differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/git-write-tree and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/git-write-tree differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/gpg-interface.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/gpg-interface.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/gpg-interface.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/gpg-interface.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/graph.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/graph.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/graph.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/graph.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/grep.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/grep.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/grep.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/grep.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/hashmap.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/hashmap.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/hashmap.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/hashmap.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/help.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/help.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/help.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/help.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/hex.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/hex.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/hex.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/hex.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/http-backend.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/http-backend.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/http-backend.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/http-backend.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ident.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ident.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ident.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ident.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/imap-send.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/imap-send.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/imap-send.c	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/imap-send.c	2015-11-06 05:31:55.000000000 +0800
@@ -1419,17 +1419,21 @@
 
 	curl_easy_setopt(curl, CURLOPT_URL, path.buf);
 	strbuf_release(&path);
 	curl_easy_setopt(curl, CURLOPT_PORT, server.port);
 
 	if (server.auth_method) {
+#if LIBCURL_VERSION_NUM < 0x072200
+		warning("No LOGIN_OPTIONS support in this cURL version");
+#else
 		struct strbuf auth = STRBUF_INIT;
 		strbuf_addstr(&auth, "AUTH=");
 		strbuf_addstr(&auth, server.auth_method);
 		curl_easy_setopt(curl, CURLOPT_LOGIN_OPTIONS, auth.buf);
 		strbuf_release(&auth);
+#endif
 	}
 
 	if (!server.use_ssl)
 		curl_easy_setopt(curl, CURLOPT_USE_SSL, (long)CURLUSESSL_TRY);
 
 	curl_easy_setopt(curl, CURLOPT_SSL_VERIFYPEER, server.ssl_verify);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/imap-send.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/imap-send.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/imap-send.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/imap-send.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/kwset.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/kwset.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/kwset.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/kwset.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/levenshtein.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/levenshtein.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/levenshtein.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/levenshtein.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/libgit.a and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/libgit.a differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/line-log.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/line-log.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/line-log.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/line-log.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/line-range.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/line-range.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/line-range.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/line-range.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/list-objects.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/list-objects.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/list-objects.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/list-objects.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ll-merge.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ll-merge.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ll-merge.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ll-merge.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/lockfile.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/lockfile.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/lockfile.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/lockfile.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/log-tree.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/log-tree.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/log-tree.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/log-tree.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/mailmap.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/mailmap.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/mailmap.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/mailmap.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Makefile /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Makefile
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/Makefile	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/Makefile	2015-11-06 05:31:55.000000000 +0800
@@ -36,12 +36,15 @@
 # git-http-push are not built, and you cannot use http:// and https://
 # transports (neither smart nor dumb).
 #
 # Define CURLDIR=/foo/bar if your curl header and library files are in
 # /foo/bar/include and /foo/bar/lib directories.
 #
+# Define CURL_CONFIG to curl's configuration program that prints information
+# about the library (e.g., its version number).  The default is 'curl-config'.
+#
 # Define NO_EXPAT if you do not have expat installed.  git-http-push is
 # not built, and you cannot push using http:// and https:// transports (dumb).
 #
 # Define EXPATDIR=/foo/bar if your expat header and library files are in
 # /foo/bar/include and /foo/bar/lib directories.
 #
@@ -425,12 +428,13 @@
 INSTALL = install
 RPMBUILD = rpmbuild
 TCL_PATH = tclsh
 TCLTK_PATH = wish
 XGETTEXT = xgettext
 MSGFMT = msgfmt
+CURL_CONFIG = curl-config
 PTHREAD_LIBS = -lpthread
 PTHREAD_CFLAGS =
 GCOV = gcov
 
 export TCL_PATH TCLTK_PATH
 
@@ -1033,13 +1037,13 @@
 
 ifdef HAVE_ALLOCA_H
 	BASIC_CFLAGS += -DHAVE_ALLOCA_H
 endif
 
 IMAP_SEND_BUILDDEPS =
-IMAP_SEND_LDFLAGS = $(OPENSSL_LINK) $(OPENSSL_LIBSSL) $(LIB_4_CRYPTO)
+IMAP_SEND_LDFLAGS =
 
 ifdef NO_CURL
 	BASIC_CFLAGS += -DNO_CURL
 	REMOTE_CURL_PRIMARY =
 	REMOTE_CURL_ALIASES =
 	REMOTE_CURL_NAMES =
@@ -1063,19 +1067,19 @@
 
 	REMOTE_CURL_PRIMARY = git-remote-http$X
 	REMOTE_CURL_ALIASES = git-remote-https$X git-remote-ftp$X git-remote-ftps$X
 	REMOTE_CURL_NAMES = $(REMOTE_CURL_PRIMARY) $(REMOTE_CURL_ALIASES)
 	PROGRAM_OBJS += http-fetch.o
 	PROGRAMS += $(REMOTE_CURL_NAMES)
-	curl_check := $(shell (echo 070908; curl-config --vernum | sed -e '/^70[BC]/s/^/0/') 2>/dev/null | sort -r | sed -ne 2p)
+	curl_check := $(shell (echo 070908; $(CURL_CONFIG) --vernum | sed -e '/^70[BC]/s/^/0/') 2>/dev/null | sort -r | sed -ne 2p)
 	ifeq "$(curl_check)" "070908"
 		ifndef NO_EXPAT
 			PROGRAM_OBJS += http-push.o
 		endif
 	endif
-	curl_check := $(shell (echo 072200; curl-config --vernum | sed -e '/^70[BC]/s/^/0/') 2>/dev/null | sort -r | sed -ne 2p)
+	curl_check := $(shell (echo 072200; $(CURL_CONFIG) --vernum | sed -e '/^70[BC]/s/^/0/') 2>/dev/null | sort -r | sed -ne 2p)
 	ifeq "$(curl_check)" "072200"
 		USE_CURL_FOR_IMAP_SEND = YesPlease
 	endif
 	ifdef USE_CURL_FOR_IMAP_SEND
 		BASIC_CFLAGS += -DUSE_CURL_FOR_IMAP_SEND
 		IMAP_SEND_BUILDDEPS = http.o
@@ -1090,12 +1094,13 @@
 		endif
 		ifdef EXPAT_NEEDS_XMLPARSE_H
 			BASIC_CFLAGS += -DEXPAT_NEEDS_XMLPARSE_H
 		endif
 	endif
 endif
+IMAP_SEND_LDFLAGS += $(OPENSSL_LINK) $(OPENSSL_LIBSSL) $(LIB_4_CRYPTO)
 
 ifdef ZLIB_PATH
 	BASIC_CFLAGS += -I$(ZLIB_PATH)/include
 	EXTLIBS += -L$(ZLIB_PATH)/$(lib) $(CC_LD_DYNPATH)$(ZLIB_PATH)/$(lib)
 endif
 EXTLIBS += -lz
@@ -1975,16 +1980,16 @@
 git-imap-send$X: imap-send.o $(IMAP_SEND_BUILDDEPS) GIT-LDFLAGS $(GITLIBS)
 	$(QUIET_LINK)$(CC) $(ALL_CFLAGS) -o $@ $(ALL_LDFLAGS) $(filter %.o,$^) \
 		$(LIBS) $(IMAP_SEND_LDFLAGS)
 
 git-http-fetch$X: http.o http-walker.o http-fetch.o GIT-LDFLAGS $(GITLIBS)
 	$(QUIET_LINK)$(CC) $(ALL_CFLAGS) -o $@ $(ALL_LDFLAGS) $(filter %.o,$^) \
-		$(LIBS) $(CURL_LIBCURL)
+		$(CURL_LIBCURL) $(LIBS)
 git-http-push$X: http.o http-push.o GIT-LDFLAGS $(GITLIBS)
 	$(QUIET_LINK)$(CC) $(ALL_CFLAGS) -o $@ $(ALL_LDFLAGS) $(filter %.o,$^) \
-		$(LIBS) $(CURL_LIBCURL) $(EXPAT_LIBEXPAT)
+		$(CURL_LIBCURL) $(EXPAT_LIBEXPAT) $(LIBS)
 
 git-remote-testsvn$X: remote-testsvn.o GIT-LDFLAGS $(GITLIBS) $(VCSSVN_LIB)
 	$(QUIET_LINK)$(CC) $(ALL_CFLAGS) -o $@ $(ALL_LDFLAGS) $(filter %.o,$^) $(LIBS) \
 	$(VCSSVN_LIB)
 
 $(REMOTE_CURL_ALIASES): $(REMOTE_CURL_PRIMARY)
@@ -1992,13 +1997,13 @@
 	ln $< $@ 2>/dev/null || \
 	ln -s $< $@ 2>/dev/null || \
 	cp $< $@
 
 $(REMOTE_CURL_PRIMARY): remote-curl.o http.o http-walker.o GIT-LDFLAGS $(GITLIBS)
 	$(QUIET_LINK)$(CC) $(ALL_CFLAGS) -o $@ $(ALL_LDFLAGS) $(filter %.o,$^) \
-		$(LIBS) $(CURL_LIBCURL) $(EXPAT_LIBEXPAT)
+		$(CURL_LIBCURL) $(EXPAT_LIBEXPAT) $(LIBS)
 
 $(LIB_FILE): $(LIB_OBJS)
 	$(QUIET_AR)$(RM) $@ && $(AR) $(ARFLAGS) $@ $^
 
 $(XDIFF_LIB): $(XDIFF_OBJS)
 	$(QUIET_AR)$(RM) $@ && $(AR) $(ARFLAGS) $@ $^
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/match-trees.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/match-trees.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/match-trees.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/match-trees.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/merge-blobs.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/merge-blobs.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/merge-blobs.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/merge-blobs.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/merge.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/merge.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/merge.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/merge.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/merge-recursive.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/merge-recursive.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/merge-recursive.c	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/merge-recursive.c	2015-11-06 05:31:55.000000000 +0800
@@ -1528,19 +1528,23 @@
 	}
 	strbuf_attach(dst, buf, size, size + 1);
 	return 0;
 }
 
 static int blob_unchanged(const unsigned char *o_sha,
+			  unsigned o_mode,
 			  const unsigned char *a_sha,
+			  unsigned a_mode,
 			  int renormalize, const char *path)
 {
 	struct strbuf o = STRBUF_INIT;
 	struct strbuf a = STRBUF_INIT;
 	int ret = 0; /* assume changed for safety */
 
+	if (a_mode != o_mode)
+		return 0;
 	if (sha_eq(o_sha, a_sha))
 		return 1;
 	if (!renormalize)
 		return 0;
 
 	assert(o_sha && a_sha);
@@ -1720,14 +1724,14 @@
 			entry->processed = 0;
 			break;
 		}
 	} else if (o_sha && (!a_sha || !b_sha)) {
 		/* Case A: Deleted in one */
 		if ((!a_sha && !b_sha) ||
-		    (!b_sha && blob_unchanged(o_sha, a_sha, normalize, path)) ||
-		    (!a_sha && blob_unchanged(o_sha, b_sha, normalize, path))) {
+		    (!b_sha && blob_unchanged(o_sha, o_mode, a_sha, a_mode, normalize, path)) ||
+		    (!a_sha && blob_unchanged(o_sha, o_mode, b_sha, b_mode, normalize, path))) {
 			/* Deleted in both or deleted in one and
 			 * unchanged in the other */
 			if (a_sha)
 				output(o, 2, _("Removing %s"), path);
 			/* do not touch working file if it did not exist */
 			remove_file(o, 1, path, !a_sha);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/merge-recursive.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/merge-recursive.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/merge-recursive.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/merge-recursive.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/mergesort.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/mergesort.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/mergesort.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/mergesort.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/name-hash.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/name-hash.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/name-hash.c	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/name-hash.c	2015-11-06 05:31:55.000000000 +0800
@@ -8,22 +8,22 @@
 #define NO_THE_INDEX_COMPATIBILITY_MACROS
 #include "cache.h"
 
 struct dir_entry {
 	struct hashmap_entry ent;
 	struct dir_entry *parent;
-	struct cache_entry *ce;
 	int nr;
 	unsigned int namelen;
+	char name[FLEX_ARRAY];
 };
 
 static int dir_entry_cmp(const struct dir_entry *e1,
 		const struct dir_entry *e2, const char *name)
 {
-	return e1->namelen != e2->namelen || strncasecmp(e1->ce->name,
-			name ? name : e2->ce->name, e1->namelen);
+	return e1->namelen != e2->namelen || strncasecmp(e1->name,
+			name ? name : e2->name, e1->namelen);
 }
 
 static struct dir_entry *find_dir_entry(struct index_state *istate,
 		const char *name, unsigned int namelen)
 {
 	struct dir_entry key;
@@ -38,20 +38,12 @@
 	/*
 	 * Throw each directory component in the hash for quick lookup
 	 * during a git status. Directory components are stored without their
 	 * closing slash.  Despite submodules being a directory, they never
 	 * reach this point, because they are stored
 	 * in index_state.name_hash (as ordinary cache_entries).
-	 *
-	 * Note that the cache_entry stored with the dir_entry merely
-	 * supplies the name of the directory (up to dir_entry.namelen). We
-	 * track the number of 'active' files in a directory in dir_entry.nr,
-	 * so we can tell if the directory is still relevant, e.g. for git
-	 * status. However, if cache_entries are removed, we cannot pinpoint
-	 * an exact cache_entry that's still active. It is very possible that
-	 * multiple dir_entries point to the same cache_entry.
 	 */
 	struct dir_entry *dir;
 
 	/* get length of parent directory */
 	while (namelen > 0 && !is_dir_sep(ce->name[namelen - 1]))
 		namelen--;
@@ -60,16 +52,16 @@
 	namelen--;
 
 	/* lookup existing entry for that directory */
 	dir = find_dir_entry(istate, ce->name, namelen);
 	if (!dir) {
 		/* not found, create it and add to hash table */
-		dir = xcalloc(1, sizeof(struct dir_entry));
+		dir = xcalloc(1, sizeof(struct dir_entry) + namelen + 1);
 		hashmap_entry_init(dir, memihash(ce->name, namelen));
 		dir->namelen = namelen;
-		dir->ce = ce;
+		strncpy(dir->name, ce->name, namelen);
 		hashmap_add(&istate->dir_hash, dir);
 
 		/* recursively add missing parent directories */
 		dir->parent = hash_dir_entry(istate, ce, namelen);
 	}
 	return dir;
@@ -185,32 +177,42 @@
 	if (!icase)
 		return 0;
 
 	return slow_same_name(name, namelen, ce->name, len);
 }
 
-struct cache_entry *index_dir_exists(struct index_state *istate, const char *name, int namelen)
+int index_dir_exists(struct index_state *istate, const char *name, int namelen)
 {
-	struct cache_entry *ce;
 	struct dir_entry *dir;
 
 	lazy_init_name_hash(istate);
 	dir = find_dir_entry(istate, name, namelen);
-	if (dir && dir->nr)
-		return dir->ce;
+	return dir && dir->nr;
+}
 
-	/*
-	 * It might be a submodule. Unlike plain directories, which are stored
-	 * in the dir-hash, submodules are stored in the name-hash, so check
-	 * there, as well.
-	 */
-	ce = index_file_exists(istate, name, namelen, 1);
-	if (ce && S_ISGITLINK(ce->ce_mode))
-		return ce;
+void adjust_dirname_case(struct index_state *istate, char *name)
+{
+	const char *startPtr = name;
+	const char *ptr = startPtr;
 
-	return NULL;
+	lazy_init_name_hash(istate);
+	while (*ptr) {
+		while (*ptr && *ptr != '/')
+			ptr++;
+
+		if (*ptr == '/') {
+			struct dir_entry *dir;
+
+			ptr++;
+			dir = find_dir_entry(istate, name, ptr - name + 1);
+			if (dir) {
+				memcpy((void *)startPtr, dir->name + (startPtr - name), ptr - startPtr);
+				startPtr = ptr;
+			}
+		}
+	}
 }
 
 struct cache_entry *index_file_exists(struct index_state *istate, const char *name, int namelen, int icase)
 {
 	struct cache_entry *ce;
 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/name-hash.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/name-hash.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/name-hash.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/name-hash.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/notes-cache.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/notes-cache.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/notes-cache.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/notes-cache.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/notes.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/notes.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/notes-merge.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/notes-merge.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/notes-merge.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/notes-merge.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/notes.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/notes.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/notes-utils.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/notes-utils.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/notes-utils.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/notes-utils.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/object.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/object.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/object.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/object.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pack-bitmap.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pack-bitmap.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pack-bitmap.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pack-bitmap.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pack-bitmap-write.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pack-bitmap-write.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pack-bitmap-write.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pack-bitmap-write.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pack-check.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pack-check.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pack-check.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pack-check.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pack-objects.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pack-objects.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pack-objects.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pack-objects.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pack-revindex.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pack-revindex.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pack-revindex.c	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pack-revindex.c	2015-11-06 05:31:55.000000000 +0800
@@ -18,13 +18,13 @@
 
 static struct pack_revindex *pack_revindex;
 static int pack_revindex_hashsz;
 
 static int pack_revindex_ix(struct packed_git *p)
 {
-	unsigned long ui = (unsigned long)p;
+	unsigned long ui = (unsigned long)(intptr_t)p;
 	int i;
 
 	ui = ui ^ (ui >> 16); /* defeat structure alignment */
 	i = (int)(ui % pack_revindex_hashsz);
 	while (pack_revindex[i].p) {
 		if (pack_revindex[i].p == p)
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pack-revindex.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pack-revindex.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pack-revindex.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pack-revindex.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pack-write.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pack-write.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pack-write.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pack-write.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pager.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pager.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pager.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pager.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/parse-options.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/parse-options.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/parse-options-cb.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/parse-options-cb.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/parse-options-cb.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/parse-options-cb.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/parse-options.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/parse-options.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/patch-delta.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/patch-delta.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/patch-delta.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/patch-delta.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/patch-ids.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/patch-ids.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/patch-ids.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/patch-ids.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/path.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/path.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/path.c	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/path.c	2015-11-06 05:31:55.000000000 +0800
@@ -95,13 +95,13 @@
 	"/branches", "/hooks", "/info", "!/logs", "/lost-found",
 	"/objects", "/refs", "/remotes", "/worktrees", "/rr-cache", "/svn",
 	"config", "!gc.pid", "packed-refs", "shallow",
 	NULL
 };
 
-static void update_common_dir(struct strbuf *buf, int git_dir_len)
+static void update_common_dir(struct strbuf *buf, int git_dir_len, const char *common_dir)
 {
 	char *base = buf->buf + git_dir_len;
 	const char **p;
 
 	if (is_dir_file(base, "logs", "HEAD") ||
 	    is_dir_file(base, "info", "sparse-checkout"))
@@ -112,18 +112,22 @@
 		if (*path == '!')
 			path++;
 		if (*path == '/') {
 			path++;
 			is_dir = 1;
 		}
+
+		if (!common_dir)
+			common_dir = get_git_common_dir();
+
 		if (is_dir && dir_prefix(base, path)) {
-			replace_dir(buf, git_dir_len, get_git_common_dir());
+			replace_dir(buf, git_dir_len, common_dir);
 			return;
 		}
 		if (!is_dir && !strcmp(base, path)) {
-			replace_dir(buf, git_dir_len, get_git_common_dir());
+			replace_dir(buf, git_dir_len, common_dir);
 			return;
 		}
 	}
 }
 
 void report_linked_checkout_garbage(void)
@@ -157,13 +161,13 @@
 	else if (git_index_env && !strcmp(base, "index"))
 		strbuf_splice(buf, 0, buf->len,
 			      get_index_file(), strlen(get_index_file()));
 	else if (git_db_env && dir_prefix(base, "objects"))
 		replace_dir(buf, git_dir_len + 7, get_object_directory());
 	else if (git_common_dir_env)
-		update_common_dir(buf, git_dir_len);
+		update_common_dir(buf, git_dir_len, NULL);
 }
 
 static void do_git_path(struct strbuf *buf, const char *fmt, va_list args)
 {
 	int gitdir_len;
 	strbuf_addstr(buf, get_git_dir());
@@ -225,27 +229,37 @@
 }
 
 static void do_submodule_path(struct strbuf *buf, const char *path,
 			      const char *fmt, va_list args)
 {
 	const char *git_dir;
+	struct strbuf git_submodule_common_dir = STRBUF_INIT;
+	struct strbuf git_submodule_dir = STRBUF_INIT;
 
 	strbuf_addstr(buf, path);
 	if (buf->len && buf->buf[buf->len - 1] != '/')
 		strbuf_addch(buf, '/');
 	strbuf_addstr(buf, ".git");
 
 	git_dir = read_gitfile(buf->buf);
 	if (git_dir) {
 		strbuf_reset(buf);
 		strbuf_addstr(buf, git_dir);
 	}
 	strbuf_addch(buf, '/');
+	strbuf_addstr(&git_submodule_dir, buf->buf);
 
 	strbuf_vaddf(buf, fmt, args);
+
+	if (get_common_dir_noenv(&git_submodule_common_dir, git_submodule_dir.buf))
+		update_common_dir(buf, git_submodule_dir.len, git_submodule_common_dir.buf);
+
 	strbuf_cleanup_path(buf);
+
+	strbuf_release(&git_submodule_dir);
+	strbuf_release(&git_submodule_common_dir);
 }
 
 char *git_pathdup_submodule(const char *path, const char *fmt, ...)
 {
 	va_list args;
 	struct strbuf buf = STRBUF_INIT;
@@ -428,24 +442,28 @@
 				strcat(validated_path, suffix[i]);
 				break;
 			}
 		}
 		if (!suffix[i])
 			return NULL;
-		gitfile = read_gitfile(used_path) ;
+		gitfile = read_gitfile(used_path);
 		if (gitfile)
 			strcpy(used_path, gitfile);
 		if (chdir(used_path))
 			return NULL;
 		path = validated_path;
 	}
-	else if (chdir(path))
-		return NULL;
+	else {
+		const char *gitfile = read_gitfile(path);
+		if (gitfile)
+			path = gitfile;
+		if (chdir(path))
+			return NULL;
+	}
 
-	if (access("objects", X_OK) == 0 && access("refs", X_OK) == 0 &&
-	    validate_headref("HEAD") == 0) {
+	if (is_git_directory(".")) {
 		set_git_dir(".");
 		check_repository_format();
 		return path;
 	}
 
 	return NULL;
@@ -673,12 +691,17 @@
  *
  * prefix_len != NULL is for a specific case of prefix_pathspec():
  * assume that src == dst and src[0..prefix_len-1] is already
  * normalized, any time "../" eats up to the prefix_len part,
  * prefix_len is reduced. In the end prefix_len is the remaining
  * prefix that has not been overridden by user pathspec.
+ *
+ * NEEDSWORK: This function doesn't perform normalization w.r.t. trailing '/'.
+ * For everything but the root folder itself, the normalized path should not
+ * end with a '/', then the callers need to be fixed up accordingly.
+ *
  */
 int normalize_path_copy_len(char *dst, const char *src, int *prefix_len)
 {
 	char *dst0;
 
 	if (has_dos_drive_prefix(src)) {
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/path.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/path.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/path.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/path.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pathspec.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pathspec.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pathspec.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pathspec.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/perl/blib/man3/Git.3pm /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/perl/blib/man3/Git.3pm
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/perl/blib/man3/Git.3pm	2017-10-10 14:25:02.206382931 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/perl/blib/man3/Git.3pm	2017-10-10 14:28:50.726374556 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "Git 3pm"
-.TH Git 3pm "2015-10-17" "perl v5.18.2" "User Contributed Perl Documentation"
+.TH Git 3pm "2015-11-06" "perl v5.18.2" "User Contributed Perl Documentation"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 Git \- Perl interface to the Git version control system
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/perl/blib/man3/Git::I18N.3pm /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/perl/blib/man3/Git::I18N.3pm
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/perl/blib/man3/Git::I18N.3pm	2017-10-10 14:25:02.178382932 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/perl/blib/man3/Git::I18N.3pm	2017-10-10 14:28:50.730374556 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "Git::I18N 3pm"
-.TH Git::I18N 3pm "2015-10-17" "perl v5.18.2" "User Contributed Perl Documentation"
+.TH Git::I18N 3pm "2015-11-06" "perl v5.18.2" "User Contributed Perl Documentation"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 Git::I18N \- Perl interface to Git's Gettext localizations
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/perl/blib/man3/Git::SVN::Editor.3pm /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/perl/blib/man3/Git::SVN::Editor.3pm
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/perl/blib/man3/Git::SVN::Editor.3pm	2017-10-10 14:25:02.222382931 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/perl/blib/man3/Git::SVN::Editor.3pm	2017-10-10 14:28:50.738374556 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "Git::SVN::Editor 3pm"
-.TH Git::SVN::Editor 3pm "2015-10-17" "perl v5.18.2" "User Contributed Perl Documentation"
+.TH Git::SVN::Editor 3pm "2015-11-06" "perl v5.18.2" "User Contributed Perl Documentation"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 Git::SVN::Editor \- commit driver for "git svn set\-tree" and dcommit
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/perl/blib/man3/Git::SVN::Fetcher.3pm /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/perl/blib/man3/Git::SVN::Fetcher.3pm
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/perl/blib/man3/Git::SVN::Fetcher.3pm	2017-10-10 14:25:02.218382931 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/perl/blib/man3/Git::SVN::Fetcher.3pm	2017-10-10 14:28:50.698374557 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "Git::SVN::Fetcher 3pm"
-.TH Git::SVN::Fetcher 3pm "2015-10-17" "perl v5.18.2" "User Contributed Perl Documentation"
+.TH Git::SVN::Fetcher 3pm "2015-11-06" "perl v5.18.2" "User Contributed Perl Documentation"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 Git::SVN::Fetcher \- tree delta consumer for "git svn fetch"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/perl/blib/man3/Git::SVN::Memoize::YAML.3pm /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/perl/blib/man3/Git::SVN::Memoize::YAML.3pm
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/perl/blib/man3/Git::SVN::Memoize::YAML.3pm	2017-10-10 14:25:02.178382932 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/perl/blib/man3/Git::SVN::Memoize::YAML.3pm	2017-10-10 14:28:50.730374556 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "Git::SVN::Memoize::YAML 3pm"
-.TH Git::SVN::Memoize::YAML 3pm "2015-10-17" "perl v5.18.2" "User Contributed Perl Documentation"
+.TH Git::SVN::Memoize::YAML 3pm "2015-11-06" "perl v5.18.2" "User Contributed Perl Documentation"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 Git::SVN::Memoize::YAML \- store Memoized data in YAML format
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/perl/blib/man3/Git::SVN::Prompt.3pm /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/perl/blib/man3/Git::SVN::Prompt.3pm
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/perl/blib/man3/Git::SVN::Prompt.3pm	2017-10-10 14:25:02.214382931 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/perl/blib/man3/Git::SVN::Prompt.3pm	2017-10-10 14:28:50.734374556 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "Git::SVN::Prompt 3pm"
-.TH Git::SVN::Prompt 3pm "2015-10-17" "perl v5.18.2" "User Contributed Perl Documentation"
+.TH Git::SVN::Prompt 3pm "2015-11-06" "perl v5.18.2" "User Contributed Perl Documentation"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 Git::SVN::Prompt \- authentication callbacks for git\-svn
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/perl/blib/man3/Git::SVN::Ra.3pm /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/perl/blib/man3/Git::SVN::Ra.3pm
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/perl/blib/man3/Git::SVN::Ra.3pm	2017-10-10 14:25:02.210382931 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/perl/blib/man3/Git::SVN::Ra.3pm	2017-10-10 14:28:50.690374557 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "Git::SVN::Ra 3pm"
-.TH Git::SVN::Ra 3pm "2015-10-17" "perl v5.18.2" "User Contributed Perl Documentation"
+.TH Git::SVN::Ra 3pm "2015-11-06" "perl v5.18.2" "User Contributed Perl Documentation"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 Git::SVN::Ra \- Subversion remote access functions for git\-svn
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/perl/blib/man3/Git::SVN::Utils.3pm /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/perl/blib/man3/Git::SVN::Utils.3pm
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/perl/blib/man3/Git::SVN::Utils.3pm	2017-10-10 14:25:02.214382931 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/perl/blib/man3/Git::SVN::Utils.3pm	2017-10-10 14:28:50.698374557 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "Git::SVN::Utils 3pm"
-.TH Git::SVN::Utils 3pm "2015-10-17" "perl v5.18.2" "User Contributed Perl Documentation"
+.TH Git::SVN::Utils 3pm "2015-11-06" "perl v5.18.2" "User Contributed Perl Documentation"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 Git::SVN::Utils \- utility functions used across Git::SVN
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/perl/perl.mak /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/perl/perl.mak
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/perl/perl.mak	2017-10-10 14:24:44.454383582 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/perl/perl.mak	2017-10-10 14:28:32.678375218 +0800
@@ -13,13 +13,13 @@
 
 #     BUILD_REQUIRES => {  }
 #     CONFIGURE_REQUIRES => {  }
 #     INSTALLSITEMAN3DIR => q[$(SITEPREFIX)/share/man/man3]
 #     MAKEFILE => q[perl.mak]
 #     NAME => q[Git]
-#     PM => { Git/SVN.pm=>q[$(INST_LIBDIR)/Git/SVN.pm], Git/SVN/Fetcher.pm=>q[$(INST_LIBDIR)/Git/SVN/Fetcher.pm], Git/SVN/Utils.pm=>q[$(INST_LIBDIR)/Git/SVN/Utils.pm], Git/SVN/Editor.pm=>q[$(INST_LIBDIR)/Git/SVN/Editor.pm], Git/I18N.pm=>q[$(INST_LIBDIR)/Git/I18N.pm], Git/SVN/Memoize/YAML.pm=>q[$(INST_LIBDIR)/Git/SVN/Memoize/YAML.pm], Git/SVN/Log.pm=>q[$(INST_LIBDIR)/Git/SVN/Log.pm], Git/SVN/Prompt.pm=>q[$(INST_LIBDIR)/Git/SVN/Prompt.pm], Git/IndexInfo.pm=>q[$(INST_LIBDIR)/Git/IndexInfo.pm], Git/SVN/GlobSpec.pm=>q[$(INST_LIBDIR)/Git/SVN/GlobSpec.pm], Git.pm=>q[$(INST_LIBDIR)/Git.pm], Git/SVN/Migration.pm=>q[$(INST_LIBDIR)/Git/SVN/Migration.pm], Git/SVN/Ra.pm=>q[$(INST_LIBDIR)/Git/SVN/Ra.pm] }
+#     PM => { Git/SVN/Prompt.pm=>q[$(INST_LIBDIR)/Git/SVN/Prompt.pm], Git/SVN/Migration.pm=>q[$(INST_LIBDIR)/Git/SVN/Migration.pm], Git/SVN/Memoize/YAML.pm=>q[$(INST_LIBDIR)/Git/SVN/Memoize/YAML.pm], Git/SVN/GlobSpec.pm=>q[$(INST_LIBDIR)/Git/SVN/GlobSpec.pm], Git/SVN/Editor.pm=>q[$(INST_LIBDIR)/Git/SVN/Editor.pm], Git/SVN/Log.pm=>q[$(INST_LIBDIR)/Git/SVN/Log.pm], Git/I18N.pm=>q[$(INST_LIBDIR)/Git/I18N.pm], Git/SVN/Utils.pm=>q[$(INST_LIBDIR)/Git/SVN/Utils.pm], Git.pm=>q[$(INST_LIBDIR)/Git.pm], Git/SVN/Ra.pm=>q[$(INST_LIBDIR)/Git/SVN/Ra.pm], Git/SVN/Fetcher.pm=>q[$(INST_LIBDIR)/Git/SVN/Fetcher.pm], Git/SVN.pm=>q[$(INST_LIBDIR)/Git/SVN.pm], Git/IndexInfo.pm=>q[$(INST_LIBDIR)/Git/IndexInfo.pm] }
 #     PM_FILTER => q[$(PERL) -pe "s<\Q++LOCALEDIR++\E></usr/local/share/locale>"]
 #     PREREQ_PM => {  }
 #     TEST_REQUIRES => {  }
 #     VERSION_FROM => q[Git.pm]
 
 # --- MakeMaker post_initialize section:
@@ -204,38 +204,38 @@
 	Git/SVN/Memoize/YAML.pm \
 	Git/SVN/Migration.pm \
 	Git/SVN/Prompt.pm \
 	Git/SVN/Ra.pm \
 	Git/SVN/Utils.pm
 
-PM_TO_BLIB = Git/SVN.pm \
-	$(INST_LIBDIR)/Git/SVN.pm \
-	Git/SVN/Fetcher.pm \
-	$(INST_LIBDIR)/Git/SVN/Fetcher.pm \
-	Git/SVN/Utils.pm \
-	$(INST_LIBDIR)/Git/SVN/Utils.pm \
-	Git/SVN/Editor.pm \
-	$(INST_LIBDIR)/Git/SVN/Editor.pm \
-	Git/I18N.pm \
-	$(INST_LIBDIR)/Git/I18N.pm \
+PM_TO_BLIB = Git/SVN/Prompt.pm \
+	$(INST_LIBDIR)/Git/SVN/Prompt.pm \
+	Git/SVN/Migration.pm \
+	$(INST_LIBDIR)/Git/SVN/Migration.pm \
 	Git/SVN/Memoize/YAML.pm \
 	$(INST_LIBDIR)/Git/SVN/Memoize/YAML.pm \
-	Git/SVN/Log.pm \
-	$(INST_LIBDIR)/Git/SVN/Log.pm \
-	Git/SVN/Prompt.pm \
-	$(INST_LIBDIR)/Git/SVN/Prompt.pm \
-	Git/IndexInfo.pm \
-	$(INST_LIBDIR)/Git/IndexInfo.pm \
 	Git/SVN/GlobSpec.pm \
 	$(INST_LIBDIR)/Git/SVN/GlobSpec.pm \
+	Git/SVN/Editor.pm \
+	$(INST_LIBDIR)/Git/SVN/Editor.pm \
+	Git/SVN/Log.pm \
+	$(INST_LIBDIR)/Git/SVN/Log.pm \
+	Git/I18N.pm \
+	$(INST_LIBDIR)/Git/I18N.pm \
+	Git/SVN/Utils.pm \
+	$(INST_LIBDIR)/Git/SVN/Utils.pm \
 	Git.pm \
 	$(INST_LIBDIR)/Git.pm \
-	Git/SVN/Migration.pm \
-	$(INST_LIBDIR)/Git/SVN/Migration.pm \
 	Git/SVN/Ra.pm \
-	$(INST_LIBDIR)/Git/SVN/Ra.pm
+	$(INST_LIBDIR)/Git/SVN/Ra.pm \
+	Git/SVN/Fetcher.pm \
+	$(INST_LIBDIR)/Git/SVN/Fetcher.pm \
+	Git/SVN.pm \
+	$(INST_LIBDIR)/Git/SVN.pm \
+	Git/IndexInfo.pm \
+	$(INST_LIBDIR)/Git/IndexInfo.pm
 
 
 # --- MakeMaker platform_constants section:
 MM_Unix_VERSION = 6.66
 PERL_MALLOC_DEF = -DPERL_EXTMALLOC_DEF -Dmalloc=Perl_malloc -Dfree=Perl_mfree -Drealloc=Perl_realloc -Dcalloc=Perl_calloc
 
@@ -454,28 +454,28 @@
 
 POD2MAN_EXE = $(PERLRUN) "-MExtUtils::Command::MM" -e pod2man "--"
 POD2MAN = $(POD2MAN_EXE)
 
 
 manifypods : pure_all  \
+	Git/SVN/Ra.pm \
+	Git/SVN/Fetcher.pm \
+	Git/SVN/Utils.pm \
+	Git.pm \
 	Git/I18N.pm \
 	Git/SVN/Memoize/YAML.pm \
-	Git.pm \
-	Git/SVN/Ra.pm \
 	Git/SVN/Prompt.pm \
-	Git/SVN/Utils.pm \
-	Git/SVN/Fetcher.pm \
 	Git/SVN/Editor.pm
 	$(NOECHO) $(POD2MAN) --section=$(MAN3EXT) --perm_rw=$(PERM_RW) \
+	  Git/SVN/Ra.pm $(INST_MAN3DIR)/Git::SVN::Ra.$(MAN3EXT) \
+	  Git/SVN/Fetcher.pm $(INST_MAN3DIR)/Git::SVN::Fetcher.$(MAN3EXT) \
+	  Git/SVN/Utils.pm $(INST_MAN3DIR)/Git::SVN::Utils.$(MAN3EXT) \
+	  Git.pm $(INST_MAN3DIR)/Git.$(MAN3EXT) \
 	  Git/I18N.pm $(INST_MAN3DIR)/Git::I18N.$(MAN3EXT) \
 	  Git/SVN/Memoize/YAML.pm $(INST_MAN3DIR)/Git::SVN::Memoize::YAML.$(MAN3EXT) \
-	  Git.pm $(INST_MAN3DIR)/Git.$(MAN3EXT) \
-	  Git/SVN/Ra.pm $(INST_MAN3DIR)/Git::SVN::Ra.$(MAN3EXT) \
 	  Git/SVN/Prompt.pm $(INST_MAN3DIR)/Git::SVN::Prompt.$(MAN3EXT) \
-	  Git/SVN/Utils.pm $(INST_MAN3DIR)/Git::SVN::Utils.$(MAN3EXT) \
-	  Git/SVN/Fetcher.pm $(INST_MAN3DIR)/Git::SVN::Fetcher.$(MAN3EXT) \
 	  Git/SVN/Editor.pm $(INST_MAN3DIR)/Git::SVN::Editor.$(MAN3EXT) 
 
 
 
 
 # --- MakeMaker processPL section:
@@ -497,28 +497,28 @@
 
 # Delete temporary files but do not touch installed files. We don't delete
 # the Makefile here so a later make realclean still has a makefile to use.
 
 clean :: clean_subdirs
 	- $(RM_F) \
-	  core.[0-9][0-9] MYMETA.yml \
-	  so_locations core.[0-9][0-9][0-9] \
-	  lib$(BASEEXT).def $(BASEEXT).bso \
-	  *$(OBJ_EXT) blibdirs.ts \
-	  *$(LIB_EXT) $(BASEEXT).exp \
-	  $(BOOTSTRAP) mon.out \
-	  core.*perl.*.? core.[0-9] \
-	  perlmain.c $(INST_ARCHAUTODIR)/extralibs.ld \
-	  perl MYMETA.json \
-	  perl.exe core.[0-9][0-9][0-9][0-9] \
-	  *perl.core perl$(EXE_EXT) \
-	  core.[0-9][0-9][0-9][0-9][0-9] $(MAKE_APERL_FILE) \
-	  tmon.out $(BASEEXT).x \
-	  core $(INST_ARCHAUTODIR)/extralibs.all \
-	  pm_to_blib pm_to_blib.ts \
-	  $(BASEEXT).def 
+	  $(MAKE_APERL_FILE) core \
+	  $(BASEEXT).exp *$(OBJ_EXT) \
+	  blibdirs.ts core.[0-9][0-9] \
+	  mon.out lib$(BASEEXT).def \
+	  $(INST_ARCHAUTODIR)/extralibs.all tmon.out \
+	  pm_to_blib so_locations \
+	  core.[0-9] pm_to_blib.ts \
+	  $(BASEEXT).x $(BOOTSTRAP) \
+	  core.[0-9][0-9][0-9][0-9] core.[0-9][0-9][0-9] \
+	  $(INST_ARCHAUTODIR)/extralibs.ld *$(LIB_EXT) \
+	  core.[0-9][0-9][0-9][0-9][0-9] perl$(EXE_EXT) \
+	  MYMETA.json core.*perl.*.? \
+	  $(BASEEXT).def perlmain.c \
+	  $(BASEEXT).bso perl \
+	  perl.exe MYMETA.yml \
+	  *perl.core 
 	- $(RM_RF) \
 	  blib 
 	- $(MV) $(FIRST_MAKEFILE) $(MAKEFILE_OLD) $(DEV_NULL)
 
 
 # --- MakeMaker realclean_subdirs section:
@@ -884,25 +884,25 @@
 
 
 # --- MakeMaker pm_to_blib section:
 
 pm_to_blib : $(FIRST_MAKEFILE) $(TO_INST_PM)
 	$(NOECHO) $(ABSPERLRUN) -MExtUtils::Install -e 'pm_to_blib({@ARGV}, '\''$(INST_LIB)/auto'\'', q[$(PM_FILTER)], '\''$(PERM_DIR)'\'')' -- \
-	  Git/SVN.pm $(INST_LIBDIR)/Git/SVN.pm \
-	  Git/SVN/Fetcher.pm $(INST_LIBDIR)/Git/SVN/Fetcher.pm \
-	  Git/SVN/Utils.pm $(INST_LIBDIR)/Git/SVN/Utils.pm \
-	  Git/SVN/Editor.pm $(INST_LIBDIR)/Git/SVN/Editor.pm \
-	  Git/I18N.pm $(INST_LIBDIR)/Git/I18N.pm \
-	  Git/SVN/Memoize/YAML.pm $(INST_LIBDIR)/Git/SVN/Memoize/YAML.pm \
-	  Git/SVN/Log.pm $(INST_LIBDIR)/Git/SVN/Log.pm \
 	  Git/SVN/Prompt.pm $(INST_LIBDIR)/Git/SVN/Prompt.pm \
-	  Git/IndexInfo.pm $(INST_LIBDIR)/Git/IndexInfo.pm \
+	  Git/SVN/Migration.pm $(INST_LIBDIR)/Git/SVN/Migration.pm \
+	  Git/SVN/Memoize/YAML.pm $(INST_LIBDIR)/Git/SVN/Memoize/YAML.pm \
 	  Git/SVN/GlobSpec.pm $(INST_LIBDIR)/Git/SVN/GlobSpec.pm \
+	  Git/SVN/Editor.pm $(INST_LIBDIR)/Git/SVN/Editor.pm \
+	  Git/SVN/Log.pm $(INST_LIBDIR)/Git/SVN/Log.pm \
+	  Git/I18N.pm $(INST_LIBDIR)/Git/I18N.pm \
+	  Git/SVN/Utils.pm $(INST_LIBDIR)/Git/SVN/Utils.pm \
 	  Git.pm $(INST_LIBDIR)/Git.pm \
-	  Git/SVN/Migration.pm $(INST_LIBDIR)/Git/SVN/Migration.pm \
-	  Git/SVN/Ra.pm $(INST_LIBDIR)/Git/SVN/Ra.pm 
+	  Git/SVN/Ra.pm $(INST_LIBDIR)/Git/SVN/Ra.pm \
+	  Git/SVN/Fetcher.pm $(INST_LIBDIR)/Git/SVN/Fetcher.pm \
+	  Git/SVN.pm $(INST_LIBDIR)/Git/SVN.pm \
+	  Git/IndexInfo.pm $(INST_LIBDIR)/Git/IndexInfo.pm 
 	$(NOECHO) $(TOUCH) pm_to_blib
 
 
 # --- MakeMaker selfdocument section:
 
 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pkt-line.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pkt-line.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pkt-line.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pkt-line.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/po/build/locale/ru/LC_MESSAGES/git.mo and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/po/build/locale/ru/LC_MESSAGES/git.mo differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/po/ru.po /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/po/ru.po
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/po/ru.po	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/po/ru.po	2015-11-06 05:31:55.000000000 +0800
@@ -7,16 +7,16 @@
 # insolor <insolor@gmail.com>, 2014
 # insolor <insolor@gmail.com>, 2014
 msgid ""
 msgstr ""
 "Project-Id-Version: Перевод Git на русский язык\n"
 "Report-Msgid-Bugs-To: Git Mailing List <git@vger.kernel.org>\n"
-"POT-Creation-Date: 2015-07-14 07:19+0800\n"
-"PO-Revision-Date: 2015-07-14 13:06+0000\n"
+"POT-Creation-Date: 2015-09-15 06:45+0800\n"
+"PO-Revision-Date: 2015-09-30 14:53+0000\n"
 "Last-Translator: Dimitriy Ryazantcev <DJm00n@mail.ru>\n"
-"Language-Team: Russian (http://www.transifex.com/p/git-po-ru/language/ru/)\n"
+"Language-Team: Russian (http://www.transifex.com/djm00n/git-po-ru/language/ru/)\n"
 "MIME-Version: 1.0\n"
 "Content-Type: text/plain; charset=UTF-8\n"
 "Content-Transfer-Encoding: 8bit\n"
 "Language: ru\n"
 "Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || (n%100>=11 && n%100<=14)? 2 : 3);\n"
 
@@ -28,100 +28,112 @@
 #: advice.c:88
 msgid ""
 "Fix them up in the work tree, and then use 'git add/rm <file>'\n"
 "as appropriate to mark resolution and make a commit."
 msgstr "Исправьте их в рабочем каталоге, затем запустите «git add/rm <файл>»,\nчтобы пометить исправление и сделайте коммит."
 
-#: archive.c:11
+#: advice.c:101 builtin/merge.c:1227
+msgid "You have not concluded your merge (MERGE_HEAD exists)."
+msgstr "Вы не завершили слияние (присутствует файл MERGE_HEAD)."
+
+#: advice.c:103
+msgid "Please, commit your changes before you can merge."
+msgstr "Выполните коммит ваших изменений, перед слиянием."
+
+#: advice.c:104
+msgid "Exiting because of unfinished merge."
+msgstr "Выход из-за незавершенного слияния."
+
+#: archive.c:12
 msgid "git archive [<options>] <tree-ish> [<path>...]"
 msgstr "git archive [<опции>] <указатель-дерева> [<путь>…]"
 
-#: archive.c:12
+#: archive.c:13
 msgid "git archive --list"
 msgstr "git archive --list"
 
-#: archive.c:13
+#: archive.c:14
 msgid ""
 "git archive --remote <repo> [--exec <cmd>] [<options>] <tree-ish> "
 "[<path>...]"
 msgstr "git archive --remote <репозиторий> [--exec <команда>] [<опции>] <указатель-дерева> [<путь>…]"
 
-#: archive.c:14
+#: archive.c:15
 msgid "git archive --remote <repo> [--exec <cmd>] --list"
 msgstr "git archive --remote <репозиторий> [--exec <команда>] --list"
 
-#: archive.c:342 builtin/add.c:137 builtin/add.c:428 builtin/rm.c:327
+#: archive.c:343 builtin/add.c:137 builtin/add.c:426 builtin/rm.c:327
 #, c-format
 msgid "pathspec '%s' did not match any files"
 msgstr "спецификация пути «%s» не соответствует ни одному файлу"
 
-#: archive.c:427
+#: archive.c:428
 msgid "fmt"
 msgstr "формат"
 
-#: archive.c:427
+#: archive.c:428
 msgid "archive format"
 msgstr "формат архива"
 
-#: archive.c:428 builtin/log.c:1204
+#: archive.c:429 builtin/log.c:1229
 msgid "prefix"
 msgstr "префикс"
 
-#: archive.c:429
+#: archive.c:430
 msgid "prepend prefix to each pathname in the archive"
 msgstr "добавлять префикс перед каждым путем файла в архиве"
 
-#: archive.c:430 builtin/archive.c:88 builtin/blame.c:2516
-#: builtin/blame.c:2517 builtin/config.c:57 builtin/fast-export.c:986
-#: builtin/fast-export.c:988 builtin/grep.c:712 builtin/hash-object.c:99
-#: builtin/ls-files.c:446 builtin/ls-files.c:449 builtin/notes.c:394
-#: builtin/notes.c:557 builtin/read-tree.c:109 parse-options.h:150
+#: archive.c:431 builtin/archive.c:88 builtin/blame.c:2516
+#: builtin/blame.c:2517 builtin/config.c:58 builtin/fast-export.c:987
+#: builtin/fast-export.c:989 builtin/grep.c:712 builtin/hash-object.c:99
+#: builtin/ls-files.c:446 builtin/ls-files.c:449 builtin/notes.c:395
+#: builtin/notes.c:558 builtin/read-tree.c:109 parse-options.h:153
 msgid "file"
 msgstr "файл"
 
-#: archive.c:431 builtin/archive.c:89
+#: archive.c:432 builtin/archive.c:89
 msgid "write the archive to this file"
 msgstr "запись архива в этот файл"
 
-#: archive.c:433
+#: archive.c:434
 msgid "read .gitattributes in working directory"
 msgstr "читать .gitattributes в рабочем каталоге"
 
-#: archive.c:434
+#: archive.c:435
 msgid "report archived files on stderr"
 msgstr "отчет об архивированных файлах в stderr"
 
-#: archive.c:435
+#: archive.c:436
 msgid "store only"
 msgstr "только хранение"
 
-#: archive.c:436
+#: archive.c:437
 msgid "compress faster"
 msgstr "сжимать быстрее"
 
-#: archive.c:444
+#: archive.c:445
 msgid "compress better"
 msgstr "сжимать лучше"
 
-#: archive.c:447
+#: archive.c:448
 msgid "list supported archive formats"
 msgstr "перечислить поддерживаемые форматы архивов"
 
-#: archive.c:449 builtin/archive.c:90 builtin/clone.c:77
+#: archive.c:450 builtin/archive.c:90 builtin/clone.c:77
 msgid "repo"
 msgstr "репозиторий"
 
-#: archive.c:450 builtin/archive.c:91
+#: archive.c:451 builtin/archive.c:91
 msgid "retrieve the archive from remote repository <repo>"
 msgstr "получить архив из внешнего <репозитория>"
 
-#: archive.c:451 builtin/archive.c:92 builtin/notes.c:478
+#: archive.c:452 builtin/archive.c:92 builtin/notes.c:479
 msgid "command"
 msgstr "комманда"
 
-#: archive.c:452 builtin/archive.c:93
+#: archive.c:453 builtin/archive.c:93
 msgid "path to the remote git-upload-archive command"
 msgstr "путь к команде git-upload-archive на машине с внешним репозиторием"
 
 #: attr.c:265
 msgid ""
 "Negative patterns are ignored in git attributes\n"
@@ -227,34 +239,39 @@
 
 #: branch.c:268
 #, c-format
 msgid "Not a valid branch point: '%s'."
 msgstr "Недопустимая точка ветки: «%s»."
 
+#: branch.c:399
+#, c-format
+msgid "'%s' is already checked out at '%s'"
+msgstr "«%s» уже находится на «%s»"
+
 #: bundle.c:34
 #, c-format
 msgid "'%s' does not look like a v2 bundle file"
 msgstr "«%s» не похож на файл пакета версии 2"
 
 #: bundle.c:61
 #, c-format
 msgid "unrecognized header: %s%s (%d)"
 msgstr "неопознанный заголовок: %s%s (%d)"
 
-#: bundle.c:87 builtin/commit.c:766
+#: bundle.c:87 builtin/commit.c:765
 #, c-format
 msgid "could not open '%s'"
 msgstr "не удалось открыть «%s»"
 
 #: bundle.c:139
 msgid "Repository lacks these prerequisite commits:"
 msgstr "В репозитории отсутствуют необходимые коммиты:"
 
-#: bundle.c:163 sequencer.c:650 sequencer.c:1105 builtin/blame.c:2705
-#: builtin/branch.c:651 builtin/commit.c:1045 builtin/log.c:330
-#: builtin/log.c:825 builtin/log.c:1432 builtin/log.c:1666 builtin/merge.c:358
+#: bundle.c:163 sequencer.c:636 sequencer.c:1083 builtin/blame.c:2708
+#: builtin/branch.c:652 builtin/commit.c:1044 builtin/log.c:334
+#: builtin/log.c:850 builtin/log.c:1457 builtin/log.c:1690 builtin/merge.c:358
 #: builtin/shortlog.c:158
 msgid "revision walk setup failed"
 msgstr "сбой инициализации прохода по редакциям"
 
 #: bundle.c:185
 #, c-format
@@ -275,53 +292,54 @@
 msgid_plural "The bundle requires these %d refs:"
 msgstr[0] "Пакет требует эту %d ссылку:"
 msgstr[1] "Пакет требует эти %d ссылки:"
 msgstr[2] "Пакет требует эти %d ссылок:"
 msgstr[3] "Пакет требует эти %d ссылок:"
 
-#: bundle.c:251
+#: bundle.c:253
 msgid "Could not spawn pack-objects"
 msgstr "Не удалось создать объекты пакета"
 
-#: bundle.c:269
+#: bundle.c:264
 msgid "pack-objects died"
 msgstr "критическая ошибка pack-objects"
 
-#: bundle.c:309
+#: bundle.c:304
 msgid "rev-list died"
 msgstr "критическая ошибка rev-list"
 
-#: bundle.c:358
+#: bundle.c:353
 #, c-format
 msgid "ref '%s' is excluded by the rev-list options"
 msgstr "ссылка «%s» исключена в соответствии с опциями rev-list"
 
-#: bundle.c:437 builtin/log.c:153 builtin/log.c:1342 builtin/shortlog.c:261
+#: bundle.c:443 builtin/log.c:157 builtin/log.c:1367 builtin/shortlog.c:261
 #, c-format
 msgid "unrecognized argument: %s"
 msgstr "неопознанный аргумент: %s"
 
-#: bundle.c:443
+#: bundle.c:449
 msgid "Refusing to create empty bundle."
 msgstr "Отклонение создания пустого пакета."
 
-#: bundle.c:453
+#: bundle.c:459
 #, c-format
 msgid "cannot create '%s'"
 msgstr "не удалось создать «%s»"
 
-#: bundle.c:474
+#: bundle.c:480
 msgid "index-pack died"
 msgstr "критическая ошибка index-pack"
 
 #: color.c:260
 #, c-format
 msgid "invalid color value: %.*s"
 msgstr "недопустимое значение цвета: %.*s"
 
-#: commit.c:40
+#: commit.c:40 builtin/am.c:451 builtin/am.c:487 builtin/am.c:1516
+#: builtin/am.c:2128
 #, c-format
 msgid "could not parse %s"
 msgstr "не удалось разобрать %s"
 
 #: commit.c:42
 #, c-format
@@ -491,81 +509,81 @@
 msgstr "сбой чтения orderfile «%s»"
 
 #: diffcore-rename.c:536
 msgid "Performing inexact rename detection"
 msgstr "Выполняется неточное определение переименования"
 
-#: diff.c:114
+#: diff.c:116
 #, c-format
 msgid "  Failed to parse dirstat cut-off percentage '%s'\n"
 msgstr "  Сбой разбора величины среза (cut-off) у dirstat «%s»\n"
 
-#: diff.c:119
+#: diff.c:121
 #, c-format
 msgid "  Unknown dirstat parameter '%s'\n"
 msgstr "Неизвестный параметр dirstat: «%s»\n"
 
-#: diff.c:214
+#: diff.c:216
 #, c-format
 msgid "Unknown value for 'diff.submodule' config variable: '%s'"
 msgstr "Неизвестное значения для переменной «diff.submodule»: «%s»"
 
-#: diff.c:266
+#: diff.c:268
 #, c-format
 msgid ""
 "Found errors in 'diff.dirstat' config variable:\n"
 "%s"
 msgstr "Найдены ошибки в переменной «diff.dirstat»:\n%s"
 
-#: diff.c:2997
+#: diff.c:2998
 #, c-format
 msgid "external diff died, stopping at %s"
 msgstr "критическая ошибка при внешнем сравнении, останов на %s"
 
-#: diff.c:3393
+#: diff.c:3394
 msgid "--follow requires exactly one pathspec"
 msgstr "--follow требует ровно одной спецификации пути"
 
-#: diff.c:3556
+#: diff.c:3557
 #, c-format
 msgid ""
 "Failed to parse --dirstat/-X option parameter:\n"
 "%s"
 msgstr "Сбой разбора параметра опции --dirstat/-X :\n%s"
 
-#: diff.c:3570
+#: diff.c:3571
 #, c-format
 msgid "Failed to parse --submodule option parameter: '%s'"
 msgstr "Сбой разбора параметра опции --submodule: «%s»"
 
-#: dir.c:1852
+#: dir.c:1853
 msgid "failed to get kernel name and information"
 msgstr "не удалось получить имя ядра и информацию"
 
-#: dir.c:1945
+#: dir.c:1936
 msgid "Untracked cache is disabled on this system."
 msgstr "Кэш неотслеживаемых файлов отключен на этой системе."
 
-#: gpg-interface.c:129 gpg-interface.c:200
+#: gpg-interface.c:166 gpg-interface.c:237
 msgid "could not run gpg."
 msgstr "не удалось запустить gpg."
 
-#: gpg-interface.c:141
+#: gpg-interface.c:178
 msgid "gpg did not accept the data"
 msgstr "gpg не принял данные"
 
-#: gpg-interface.c:152
+#: gpg-interface.c:189
 msgid "gpg failed to sign the data"
 msgstr "gpg не удалось подписать данные"
 
-#: gpg-interface.c:185
+#: gpg-interface.c:222
 #, c-format
 msgid "could not create temporary file '%s': %s"
 msgstr "не удалось создать временный файл «%s»: %s"
 
-#: gpg-interface.c:188
+#: gpg-interface.c:225
 #, c-format
 msgid "failed writing detached signature to '%s': %s"
 msgstr "сбой записи отсоединенной подписи в «%s»: %s"
 
 #: grep.c:1718
 #, c-format
@@ -637,26 +655,18 @@
 
 #: help.c:462
 #, c-format
 msgid "%s: %s - %s"
 msgstr "%s: %s — %s"
 
-#: lockfile.c:345
-msgid "BUG: reopen a lockfile that is still open"
-msgstr "БАГ: повторное открытие файла блокировки, который уже открыт"
-
-#: lockfile.c:347
-msgid "BUG: reopen a lockfile that has been committed"
-msgstr "БАГ: повторное открытие файла блокировки, который уже был закоммичен"
-
 #: merge.c:41
 msgid "failed to read the cache"
 msgstr "сбой чтения кэша"
 
-#: merge.c:94 builtin/checkout.c:376 builtin/checkout.c:587
-#: builtin/clone.c:647
+#: merge.c:94 builtin/am.c:2001 builtin/am.c:2036 builtin/checkout.c:375
+#: builtin/checkout.c:586 builtin/clone.c:715
 msgid "unable to write new index file"
 msgstr "не удалось записать новый файл индекса"
 
 #: merge-recursive.c:189
 #, c-format
 msgid "(bad commit)\n"
@@ -697,13 +707,13 @@
 
 #: merge-recursive.c:765
 #, c-format
 msgid "blob expected for %s '%s'"
 msgstr "ожидается двоичный объект для %s «%s»"
 
-#: merge-recursive.c:788 builtin/clone.c:306
+#: merge-recursive.c:788 builtin/clone.c:364
 #, c-format
 msgid "failed to open '%s'"
 msgstr "не удалось открыть «%s»"
 
 #: merge-recursive.c:796
 #, c-format
@@ -905,56 +915,56 @@
 msgstr "Не удается записать индекс."
 
 #: notes-utils.c:41
 msgid "Cannot commit uninitialized/unreferenced notes tree"
 msgstr "Нельзя закоммитить неинициализированное или не имеющее ссылок дерево заметок"
 
-#: notes-utils.c:82
+#: notes-utils.c:100
 #, c-format
 msgid "Bad notes.rewriteMode value: '%s'"
 msgstr "Неправильное значение notes.rewriteMode: «%s»"
 
-#: notes-utils.c:92
+#: notes-utils.c:110
 #, c-format
 msgid "Refusing to rewrite notes in %s (outside of refs/notes/)"
 msgstr "Отказ в перезаписи заметок в %s (за пределами refs/notes/)"
 
 #. TRANSLATORS: The first %s is the name of the
 #. environment variable, the second %s is its value
-#: notes-utils.c:119
+#: notes-utils.c:137
 #, c-format
 msgid "Bad %s value: '%s'"
 msgstr "Неправильное значение переменной %s: «%s»"
 
 #: object.c:242
 #, c-format
 msgid "unable to parse object: %s"
 msgstr "не удалось разобрать объект: %s"
 
-#: parse-options.c:546
+#: parse-options.c:563
 msgid "..."
 msgstr "…"
 
-#: parse-options.c:564
+#: parse-options.c:581
 #, c-format
 msgid "usage: %s"
 msgstr "использование: %s"
 
 #. TRANSLATORS: the colon here should align with the
 #. one in "usage: %s" translation
-#: parse-options.c:568
+#: parse-options.c:585
 #, c-format
 msgid "   or: %s"
 msgstr "          или: %s"
 
-#: parse-options.c:571
+#: parse-options.c:588
 #, c-format
 msgid "    %s"
 msgstr "            %s"
 
-#: parse-options.c:605
+#: parse-options.c:622
 msgid "-NUM"
 msgstr "-КОЛИЧЕСТВО"
 
 #: pathspec.c:133
 msgid "global 'glob' and 'noglob' pathspec settings are incompatible"
 msgstr "глобальные опции спецификации пути «glob» и «noglob» нельзя использовать одновременно"
@@ -1012,34 +1022,59 @@
 #: pathspec.c:441
 msgid ""
 "There is nothing to exclude from by :(exclude) patterns.\n"
 "Perhaps you forgot to add either ':/' or '.' ?"
 msgstr "Не указан шаблон для исключения с помощью :(exclude).\nВозможно, вы забыли «:/» или «.» ?"
 
-#: pretty.c:968
+#: pretty.c:969
 msgid "unable to parse --pretty format"
 msgstr "не удалось разобрать формат для --pretty"
 
 #: progress.c:236
 msgid "done"
 msgstr "готово"
 
-#: read-cache.c:1295
+#: read-cache.c:1296
 #, c-format
 msgid ""
 "index.version set, but the value is invalid.\n"
 "Using version %i"
 msgstr "index.version указан, но значение недействительное.\nИспользую версию %i"
 
-#: read-cache.c:1305
+#: read-cache.c:1306
 #, c-format
 msgid ""
 "GIT_INDEX_VERSION set, but the value is invalid.\n"
 "Using version %i"
 msgstr "GIT_INDEX_VERSION указан, но значение недействительное.\nИспользую версию %i"
 
+#: refs.c:2941 builtin/merge.c:760 builtin/merge.c:871 builtin/merge.c:973
+#: builtin/merge.c:983
+#, c-format
+msgid "Could not open '%s' for writing"
+msgstr "Не удалось открыть «%s» для записи"
+
+#: refs.c:3001
+#, c-format
+msgid "could not delete reference %s: %s"
+msgstr "не удалось удалить ссылку %s: %s"
+
+#: refs.c:3004
+#, c-format
+msgid "could not delete references: %s"
+msgstr "не удалось удалить ссылки: %s"
+
+#: refs.c:3013
+#, c-format
+msgid "could not remove reference %s"
+msgstr "не удалось удалить ссылки %s"
+
+#: ref-filter.c:660
+msgid "unable to parse format"
+msgstr "не удалось разобрать формат"
+
 #: remote.c:792
 #, c-format
 msgid "Cannot fetch both %s and %s to %s"
 msgstr "Нельзя извлечь одновременно %s и %s в %s"
 
 #: remote.c:796
@@ -1153,276 +1188,279 @@
 msgstr[3] "Ваша ветка и «%s» разошлись\nи теперь имеют %d и %d разных коммитов в каждой соответственно.\n"
 
 #: remote.c:2165
 msgid "  (use \"git pull\" to merge the remote branch into yours)\n"
 msgstr "  (используйте «git pull», чтобы слить внешнюю ветку в вашу)\n"
 
-#: revision.c:2366
+#: revision.c:2198
+msgid "your current branch appears to be broken"
+msgstr "похоже, ваша текущая ветка повреждена"
+
+#: revision.c:2201
+#, c-format
+msgid "your current branch '%s' does not have any commits yet"
+msgstr "ваша текущая ветка «%s» еще не содержит ни одного коммита"
+
+#: revision.c:2395
 msgid "--first-parent is incompatible with --bisect"
 msgstr "опцию --first-parent нельзя использовать одновременно с --bisect"
 
 #: run-command.c:83
 msgid "open /dev/null failed"
 msgstr "сбой открытия /dev/null"
 
 #: run-command.c:85
 #, c-format
 msgid "dup2(%d,%d) failed"
 msgstr "dup2(%d,%d) сбой"
 
-#: send-pack.c:272
+#: send-pack.c:295
 msgid "failed to sign the push certificate"
 msgstr "сбой подписания сертификата отправки"
 
-#: send-pack.c:378
+#: send-pack.c:404
 msgid "the receiving end does not support --signed push"
 msgstr "принимающая сторона не поддерживает отправку с опцией --signed"
 
-#: send-pack.c:389
+#: send-pack.c:406
+msgid ""
+"not sending a push certificate since the receiving end does not support "
+"--signed push"
+msgstr "не отправляем сертификат для отправки, так как принимающая сторона не поддерживает отправку с опцией --signed"
+
+#: send-pack.c:418
 msgid "the receiving end does not support --atomic push"
 msgstr "принимающая сторона не поддерживает отправку с опцией --atomic"
 
-#: sequencer.c:172 builtin/merge.c:760 builtin/merge.c:871 builtin/merge.c:973
-#: builtin/merge.c:983
-#, c-format
-msgid "Could not open '%s' for writing"
-msgstr "Не удалось открыть «%s» для записи"
-
-#: sequencer.c:174 builtin/merge.c:344 builtin/merge.c:763 builtin/merge.c:975
-#: builtin/merge.c:988
-#, c-format
-msgid "Could not write to '%s'"
-msgstr "Не удалось записать в «%s»"
-
-#: sequencer.c:195
+#: sequencer.c:183
 msgid ""
 "after resolving the conflicts, mark the corrected paths\n"
 "with 'git add <paths>' or 'git rm <paths>'"
 msgstr "после разрешения конфликтов, пометьте исправленные пути\nс помощью «git add <пути>» или «git rm <пути>»"
 
-#: sequencer.c:198
+#: sequencer.c:186
 msgid ""
 "after resolving the conflicts, mark the corrected paths\n"
 "with 'git add <paths>' or 'git rm <paths>'\n"
 "and commit the result with 'git commit'"
 msgstr "после разрешения конфликтов, пометьте исправленные пути\nс помощью «git add <пути>» или «git rm <пути>»\nи сделайте коммит с помощью «git commit»"
 
-#: sequencer.c:211 sequencer.c:861 sequencer.c:944
+#: sequencer.c:199 sequencer.c:842 sequencer.c:922
 #, c-format
 msgid "Could not write to %s"
 msgstr "Не удалось записать в %s"
 
-#: sequencer.c:214
+#: sequencer.c:202
 #, c-format
 msgid "Error wrapping up %s"
 msgstr "Ошибка оборачивания %s"
 
-#: sequencer.c:229
+#: sequencer.c:217
 msgid "Your local changes would be overwritten by cherry-pick."
 msgstr "Ваши локальные изменение будут перезаписаны отбором лучшего."
 
-#: sequencer.c:231
+#: sequencer.c:219
 msgid "Your local changes would be overwritten by revert."
 msgstr "Ваши локальные изменение будут перезаписаны возвратом коммита."
 
-#: sequencer.c:234
+#: sequencer.c:222
 msgid "Commit your changes or stash them to proceed."
 msgstr "Сделайте коммит или спрячьте ваши изменения для продолжения."
 
 #. TRANSLATORS: %s will be "revert" or "cherry-pick"
-#: sequencer.c:321
+#: sequencer.c:309
 #, c-format
 msgid "%s: Unable to write new index file"
 msgstr "%s: Не удалось записать файл индекса"
 
-#: sequencer.c:339
+#: sequencer.c:327
 msgid "Could not resolve HEAD commit\n"
 msgstr "Не удалось определить HEAD коммит\n"
 
-#: sequencer.c:359
+#: sequencer.c:347
 msgid "Unable to update cache tree\n"
 msgstr "Не удалось обновить дерево кэша\n"
 
-#: sequencer.c:411
+#: sequencer.c:399
 #, c-format
 msgid "Could not parse commit %s\n"
 msgstr "Не удалось разобрать коммит %s\n"
 
-#: sequencer.c:416
+#: sequencer.c:404
 #, c-format
 msgid "Could not parse parent commit %s\n"
 msgstr "Не удалось разобрать родительскую коммит %s\n"
 
-#: sequencer.c:482
+#: sequencer.c:469
 msgid "Your index file is unmerged."
 msgstr "Ваш файл индекса не слит."
 
-#: sequencer.c:501
+#: sequencer.c:488
 #, c-format
 msgid "Commit %s is a merge but no -m option was given."
 msgstr "Коммит %s — это коммит-слияние, но опция -m не указана."
 
-#: sequencer.c:509
+#: sequencer.c:496
 #, c-format
 msgid "Commit %s does not have parent %d"
 msgstr "У коммита %s нет предка %d"
 
-#: sequencer.c:513
+#: sequencer.c:500
 #, c-format
 msgid "Mainline was specified but commit %s is not a merge."
 msgstr "Основная ветка указана, но коммит %s не является слиянием."
 
 #. TRANSLATORS: The first %s will be "revert" or
 #. "cherry-pick", the second %s a SHA1
-#: sequencer.c:526
+#: sequencer.c:513
 #, c-format
 msgid "%s: cannot parse parent commit %s"
 msgstr "%s: не удалось разобрать родительский коммит для %s"
 
-#: sequencer.c:530
+#: sequencer.c:517
 #, c-format
 msgid "Cannot get commit message for %s"
 msgstr "Не удалось получить сообщение коммита для %s"
 
-#: sequencer.c:616
+#: sequencer.c:603
 #, c-format
 msgid "could not revert %s... %s"
 msgstr "не удалось возвратить коммит %s… %s"
 
-#: sequencer.c:617
+#: sequencer.c:604
 #, c-format
 msgid "could not apply %s... %s"
 msgstr "не удалось применить коммит %s… %s"
 
-#: sequencer.c:653
+#: sequencer.c:639
 msgid "empty commit set passed"
 msgstr "передан пустой набор коммитов"
 
-#: sequencer.c:661
+#: sequencer.c:647
 #, c-format
 msgid "git %s: failed to read the index"
 msgstr "git %s: сбой чтения индекса"
 
-#: sequencer.c:665
+#: sequencer.c:651
 #, c-format
 msgid "git %s: failed to refresh the index"
 msgstr "git %s: сбой обновления индекса"
 
-#: sequencer.c:725
+#: sequencer.c:711
 #, c-format
 msgid "Cannot %s during a %s"
 msgstr "Не удалось %s во время %s"
 
-#: sequencer.c:747
+#: sequencer.c:733
 #, c-format
 msgid "Could not parse line %d."
 msgstr "Не удалось разобрать строку %d."
 
-#: sequencer.c:752
+#: sequencer.c:738
 msgid "No commits parsed."
 msgstr "Коммиты не разобраны."
 
-#: sequencer.c:765
+#: sequencer.c:750
 #, c-format
 msgid "Could not open %s"
 msgstr "Не удалось открыть %s"
 
-#: sequencer.c:769
+#: sequencer.c:754
 #, c-format
 msgid "Could not read %s."
 msgstr "Не удалось прочитать %s."
 
-#: sequencer.c:776
+#: sequencer.c:761
 #, c-format
 msgid "Unusable instruction sheet: %s"
 msgstr "Непригодная для использования карта с инструкциями: %s"
 
-#: sequencer.c:806
+#: sequencer.c:791
 #, c-format
 msgid "Invalid key: %s"
 msgstr "Недействительный ключ: %s"
 
-#: sequencer.c:809
+#: sequencer.c:794 builtin/pull.c:47 builtin/pull.c:49
 #, c-format
 msgid "Invalid value for %s: %s"
 msgstr "Неправильное значение %s: %s"
 
-#: sequencer.c:821
+#: sequencer.c:804
 #, c-format
 msgid "Malformed options sheet: %s"
 msgstr "Испорченная карта с опциями: %s"
 
-#: sequencer.c:842
+#: sequencer.c:823
 msgid "a cherry-pick or revert is already in progress"
 msgstr "отбор лучшего или возврат коммита уже выполняется"
 
-#: sequencer.c:843
+#: sequencer.c:824
 msgid "try \"git cherry-pick (--continue | --quit | --abort)\""
 msgstr "попробуйте «git cherry-pick (--continue | --quit | --abort)»"
 
-#: sequencer.c:847
+#: sequencer.c:828
 #, c-format
 msgid "Could not create sequencer directory %s"
 msgstr "Не удалось создать каталог для указателя следования коммитов %s"
 
-#: sequencer.c:863 sequencer.c:948
+#: sequencer.c:844 sequencer.c:926
 #, c-format
 msgid "Error wrapping up %s."
 msgstr "Ошибка оборачивания %s."
 
-#: sequencer.c:882 sequencer.c:1018
+#: sequencer.c:863 sequencer.c:996
 msgid "no cherry-pick or revert in progress"
 msgstr "отбор лучшего или возврат коммита не выполняется"
 
-#: sequencer.c:884
+#: sequencer.c:865
 msgid "cannot resolve HEAD"
 msgstr "не удалось определить HEAD"
 
-#: sequencer.c:886
+#: sequencer.c:867
 msgid "cannot abort from a branch yet to be born"
 msgstr "нельзя отменить изменения с ветки, которая еще не создана"
 
-#: sequencer.c:908 builtin/apply.c:4291
+#: sequencer.c:887 builtin/apply.c:4291
 #, c-format
 msgid "cannot open %s: %s"
 msgstr "не удалось открыть %s: %s"
 
-#: sequencer.c:911
+#: sequencer.c:890
 #, c-format
 msgid "cannot read %s: %s"
 msgstr "не удалось прочитать %s: %s"
 
-#: sequencer.c:912
+#: sequencer.c:891
 msgid "unexpected end of file"
 msgstr "неожиданный конец файла"
 
-#: sequencer.c:918
+#: sequencer.c:897
 #, c-format
 msgid "stored pre-cherry-pick HEAD file '%s' is corrupt"
 msgstr "сохраненный файл с HEAD перед отбором лучшего «%s» поврежден"
 
-#: sequencer.c:941
+#: sequencer.c:919
 #, c-format
 msgid "Could not format %s."
 msgstr "Не удалось отформатировать %s."
 
-#: sequencer.c:1086
+#: sequencer.c:1064
 #, c-format
 msgid "%s: can't cherry-pick a %s"
 msgstr "%s: не удалось отобрать %s"
 
-#: sequencer.c:1089
+#: sequencer.c:1067
 #, c-format
 msgid "%s: bad revision"
 msgstr "%s: плохая редакция"
 
-#: sequencer.c:1123
+#: sequencer.c:1101
 msgid "Can't revert as initial commit"
 msgstr "Нельзя возвратить изначальный коммит"
 
-#: sequencer.c:1124
+#: sequencer.c:1102
 msgid "Can't cherry-pick into empty head"
 msgstr "Нельзя отобрать лучшее в пустой HEAD"
 
 #: setup.c:243
 #, c-format
 msgid "failed to read %s"
@@ -1438,36 +1476,36 @@
 "\n"
 "where \"$br\" is somehow empty and a 40-hex ref is created. Please\n"
 "examine these refs and maybe delete them. Turn this message off by\n"
 "running \"git config advice.objectNameWarning false\""
 msgstr "Обычно Git не создает ссылки, оканчивающиеся на 40 шестнадцатеричных\nсимволов, потому, что они будут игнорироваться, когда вы просто\nукажете это 40-символьное шестнадцатеричное число. Такие ссылки\nмогли быть созданы по ошибке. Например, с помощью:\n\n  git checkout -b $br $(git rev-parse …)\n\n, если «$br» оказался пустым, то ссылка с 40-символьным\nшестнадцатеричным числом будет создана. Пожалуйста, просмотрите эти\nссылки и, возможно, удалите их. Вы можете отключить это сообщение\nзапустив «git config advice.objectNameWarning false»"
 
-#: submodule.c:64 submodule.c:98
+#: submodule.c:61 submodule.c:95
 msgid "Cannot change unmerged .gitmodules, resolve merge conflicts first"
 msgstr "Не удалось изменить не слитый .gitmodules, сначала разрешите конфликты"
 
-#: submodule.c:68 submodule.c:102
+#: submodule.c:65 submodule.c:99
 #, c-format
 msgid "Could not find section in .gitmodules where path=%s"
 msgstr "Не удалось найти раздел в .gitmodules, где путь равен %s"
 
-#: submodule.c:76
+#: submodule.c:73
 #, c-format
 msgid "Could not update .gitmodules entry %s"
 msgstr " Не удалось обновить .gitmodules запись %s"
 
-#: submodule.c:109
+#: submodule.c:106
 #, c-format
 msgid "Could not remove .gitmodules entry for %s"
 msgstr "Не удалось удалить запись в .gitmodules для %s"
 
-#: submodule.c:120
+#: submodule.c:117
 msgid "staging updated .gitmodules failed"
 msgstr "сбой индексирования обновленного .gitmodules"
 
-#: submodule.c:1115
+#: submodule.c:1045
 #, c-format
 msgid "Could not set core.worktree in %s"
 msgstr "Не удалось установить core.worktree в %s"
 
 #: trailer.c:491 trailer.c:495 trailer.c:499 trailer.c:553 trailer.c:557
 #: trailer.c:561
@@ -1491,12 +1529,17 @@
 msgstr "не удалось прочитать входной файл «%s»"
 
 #: trailer.c:704
 msgid "could not read from stdin"
 msgstr "не удалось прочитать из стандартного ввода"
 
+#: transport-helper.c:1025
+#, c-format
+msgid "Could not read ref %s"
+msgstr "Не удалось прочитать ссылку %s"
+
 #: unpack-trees.c:203
 msgid "Checking out files"
 msgstr "Распаковка файлов"
 
 #: urlmatch.c:120
 msgid "invalid URL scheme name or missing '://' suffix"
@@ -1524,453 +1567,508 @@
 msgstr "неправильный номер порта"
 
 #: urlmatch.c:322
 msgid "invalid '..' path segment"
 msgstr "неправильная часть пути «..»"
 
-#: wrapper.c:523
+#: wrapper.c:219 wrapper.c:362
+#, c-format
+msgid "could not open '%s' for reading and writing"
+msgstr "не удалось открыть «%s» для чтения и записи"
+
+#: wrapper.c:221 wrapper.c:364
+#, c-format
+msgid "could not open '%s' for writing"
+msgstr "не удалось открыть «%s» для записи"
+
+#: wrapper.c:223 wrapper.c:366 builtin/am.c:337 builtin/commit.c:1688
+#: builtin/merge.c:1076 builtin/pull.c:380
+#, c-format
+msgid "could not open '%s' for reading"
+msgstr "не удалось открыть «%s» для чтения"
+
+#: wrapper.c:579
 #, c-format
 msgid "unable to access '%s': %s"
 msgstr "«%s» недоступно: %s"
 
-#: wrapper.c:544
+#: wrapper.c:600
 #, c-format
 msgid "unable to access '%s'"
 msgstr "«%s» недоступно"
 
-#: wrapper.c:555
+#: wrapper.c:611
 #, c-format
 msgid "unable to look up current user in the passwd file: %s"
 msgstr "не удалось запросить текущего пользователя в файле passwd: %s"
 
-#: wrapper.c:556
+#: wrapper.c:612
 msgid "no such user"
 msgstr "нет такого пользователя"
 
-#: wrapper.c:564
+#: wrapper.c:620
 msgid "unable to get current working directory"
 msgstr "не удалось получить текущий рабочий каталог"
 
-#: wrapper.c:575
+#: wrapper.c:631
 #, c-format
 msgid "could not open %s for writing"
 msgstr "не удалось открыть «%s» для записи"
 
-#: wrapper.c:587
+#: wrapper.c:642 builtin/am.c:424
 #, c-format
 msgid "could not write to %s"
 msgstr "не удалось записать в %s"
 
-#: wrapper.c:593
+#: wrapper.c:648
 #, c-format
 msgid "could not close %s"
 msgstr "не удалось закрыть %s"
 
-#: wt-status.c:150
+#: wt-status.c:149
 msgid "Unmerged paths:"
 msgstr "Не слитые пути:"
 
-#: wt-status.c:177 wt-status.c:204
+#: wt-status.c:176 wt-status.c:203
 #, c-format
 msgid "  (use \"git reset %s <file>...\" to unstage)"
 msgstr "  (используйте «git reset %s <файл>…», чтобы убрать из индекса)"
 
-#: wt-status.c:179 wt-status.c:206
+#: wt-status.c:178 wt-status.c:205
 msgid "  (use \"git rm --cached <file>...\" to unstage)"
 msgstr "  (используйте «git rm --cached <файл>…», чтобы убрать из индекса)"
 
-#: wt-status.c:183
+#: wt-status.c:182
 msgid "  (use \"git add <file>...\" to mark resolution)"
 msgstr "  (используйте «git add <файл>…», чтобы пометить разрешение конфликта)"
 
-#: wt-status.c:185 wt-status.c:189
+#: wt-status.c:184 wt-status.c:188
 msgid "  (use \"git add/rm <file>...\" as appropriate to mark resolution)"
 msgstr "  (используйте «git add/rm <файл>…», чтобы пометить выбранное разрешение конфликта)"
 
-#: wt-status.c:187
+#: wt-status.c:186
 msgid "  (use \"git rm <file>...\" to mark resolution)"
 msgstr "  (используйте «git rm <файл>…», чтобы пометить разрешение конфликта)"
 
-#: wt-status.c:198 wt-status.c:881
+#: wt-status.c:197 wt-status.c:880
 msgid "Changes to be committed:"
 msgstr "Изменения, которые будут включены в коммит:"
 
-#: wt-status.c:216 wt-status.c:890
+#: wt-status.c:215 wt-status.c:889
 msgid "Changes not staged for commit:"
 msgstr "Изменения, которые не в индексе для коммита:"
 
-#: wt-status.c:220
+#: wt-status.c:219
 msgid "  (use \"git add <file>...\" to update what will be committed)"
 msgstr "  (используйте «git add <файл>…», чтобы добавить файл в индекс)"
 
-#: wt-status.c:222
+#: wt-status.c:221
 msgid "  (use \"git add/rm <file>...\" to update what will be committed)"
 msgstr "  (используйте «git add/rm <файл>…», чтобы добавить или удалить файл из индекса)"
 
-#: wt-status.c:223
+#: wt-status.c:222
 msgid ""
 "  (use \"git checkout -- <file>...\" to discard changes in working "
 "directory)"
 msgstr "  (используйте «git checkout -- <файл>…», чтобы отменить изменения\n   в рабочем каталоге)"
 
-#: wt-status.c:225
+#: wt-status.c:224
 msgid "  (commit or discard the untracked or modified content in submodules)"
 msgstr "  (сделайте коммит или отмените изменения в неотслеживаемом или измененном содержимом в подмодулях)"
 
-#: wt-status.c:237
+#: wt-status.c:236
 #, c-format
 msgid "  (use \"git %s <file>...\" to include in what will be committed)"
 msgstr "  (используйте «git %s <файл>…», чтобы добавить в то, что будет включено в коммит)"
 
-#: wt-status.c:252
+#: wt-status.c:251
 msgid "both deleted:"
 msgstr "оба удалены:"
 
-#: wt-status.c:254
+#: wt-status.c:253
 msgid "added by us:"
 msgstr "добавлено нами:"
 
-#: wt-status.c:256
+#: wt-status.c:255
 msgid "deleted by them:"
 msgstr "удалено ими:"
 
-#: wt-status.c:258
+#: wt-status.c:257
 msgid "added by them:"
 msgstr "добавлено ими:"
 
-#: wt-status.c:260
+#: wt-status.c:259
 msgid "deleted by us:"
 msgstr "удалено нами:"
 
-#: wt-status.c:262
+#: wt-status.c:261
 msgid "both added:"
 msgstr "оба добавлены:"
 
-#: wt-status.c:264
+#: wt-status.c:263
 msgid "both modified:"
 msgstr "оба измены:"
 
-#: wt-status.c:266
+#: wt-status.c:265
 #, c-format
 msgid "bug: unhandled unmerged status %x"
 msgstr "ошибка: необработанный статус не слитых изменений %x"
 
-#: wt-status.c:274
+#: wt-status.c:273
 msgid "new file:"
 msgstr "новый файл:"
 
-#: wt-status.c:276
+#: wt-status.c:275
 msgid "copied:"
 msgstr "скопировано:"
 
-#: wt-status.c:278
+#: wt-status.c:277
 msgid "deleted:"
 msgstr "удалено:"
 
-#: wt-status.c:280
+#: wt-status.c:279
 msgid "modified:"
 msgstr "изменено:"
 
-#: wt-status.c:282
+#: wt-status.c:281
 msgid "renamed:"
 msgstr "переименовано:"
 
-#: wt-status.c:284
+#: wt-status.c:283
 msgid "typechange:"
 msgstr "изменен тип:"
 
-#: wt-status.c:286
+#: wt-status.c:285
 msgid "unknown:"
 msgstr "неизвестно:"
 
-#: wt-status.c:288
+#: wt-status.c:287
 msgid "unmerged:"
 msgstr "не слитые:"
 
-#: wt-status.c:370
+#: wt-status.c:369
 msgid "new commits, "
 msgstr "новые коммиты, "
 
-#: wt-status.c:372
+#: wt-status.c:371
 msgid "modified content, "
 msgstr "изменено содержимое, "
 
-#: wt-status.c:374
+#: wt-status.c:373
 msgid "untracked content, "
 msgstr "неотслеживаемое содержимое, "
 
-#: wt-status.c:391
+#: wt-status.c:390
 #, c-format
 msgid "bug: unhandled diff status %c"
 msgstr "ошибка: необработанный статус изменений %c"
 
-#: wt-status.c:755
+#: wt-status.c:754
 msgid "Submodules changed but not updated:"
 msgstr "Измененные, но не обновленные подмодули:"
 
-#: wt-status.c:757
+#: wt-status.c:756
 msgid "Submodule changes to be committed:"
 msgstr "Изменения в подмодулях, которые будут закоммичены:"
 
-#: wt-status.c:838
+#: wt-status.c:837
 msgid ""
 "Do not touch the line above.\n"
 "Everything below will be removed."
 msgstr "Не трогайте строку выше этой.\nВсё, что ниже — будет удалено."
 
-#: wt-status.c:949
+#: wt-status.c:948
 msgid "You have unmerged paths."
 msgstr "У вас есть не слитые пути."
 
-#: wt-status.c:952
+#: wt-status.c:951
 msgid "  (fix conflicts and run \"git commit\")"
 msgstr "  (разрешите конфликты, затем запустите «git commit»)"
 
-#: wt-status.c:955
+#: wt-status.c:954
 msgid "All conflicts fixed but you are still merging."
 msgstr "Все конфликты исправлены, но вы все еще в процессе слияния."
 
-#: wt-status.c:958
+#: wt-status.c:957
 msgid "  (use \"git commit\" to conclude merge)"
 msgstr "  (используйте «git commit», чтобы завершить слияние)"
 
-#: wt-status.c:968
+#: wt-status.c:967
 msgid "You are in the middle of an am session."
 msgstr "Вы в процессе сессии am."
 
-#: wt-status.c:971
+#: wt-status.c:970
 msgid "The current patch is empty."
 msgstr "Текущий патч пустой."
 
-#: wt-status.c:975
+#: wt-status.c:974
 msgid "  (fix conflicts and then run \"git am --continue\")"
 msgstr "  (разрешите конфликты, затем запустите «git am --continue»)"
 
-#: wt-status.c:977
+#: wt-status.c:976
 msgid "  (use \"git am --skip\" to skip this patch)"
 msgstr "  (используйте «git am --skip», чтобы пропустить этот патч)"
 
-#: wt-status.c:979
+#: wt-status.c:978
 msgid "  (use \"git am --abort\" to restore the original branch)"
 msgstr "  (используйте «git am --abort», чтобы восстановить оригинальную ветку)"
 
-#: wt-status.c:1039 wt-status.c:1056
+#: wt-status.c:1105
+msgid "No commands done."
+msgstr "Команды не выполнены."
+
+#: wt-status.c:1108
+#, c-format
+msgid "Last command done (%d command done):"
+msgid_plural "Last commands done (%d commands done):"
+msgstr[0] "Последняя команда выполнена (%d команд выполнено):"
+msgstr[1] "Последняя команда выполнена (%d команд выполнено):"
+msgstr[2] "Последняя команда выполнена (%d команд выполнено):"
+msgstr[3] "Последняя команда выполнена (%d команд выполнено):"
+
+#: wt-status.c:1119
+#, c-format
+msgid "  (see more in file %s)"
+msgstr "  (смотрите дополнительно в файле %s)"
+
+#: wt-status.c:1124
+msgid "No commands remaining."
+msgstr "Команд больше не осталось."
+
+#: wt-status.c:1127
+#, c-format
+msgid "Next command to do (%d remaining command):"
+msgid_plural "Next commands to do (%d remaining commands):"
+msgstr[0] "Следующая команда для выполнения (%d команда осталась):"
+msgstr[1] "Следующая команда для выполнения (%d команды осталось):"
+msgstr[2] "Следующая команда для выполнения (%d команд осталось):"
+msgstr[3] "Следующая команда для выполнения (%d команд осталось):"
+
+#: wt-status.c:1135
+msgid "  (use \"git rebase --edit-todo\" to view and edit)"
+msgstr "  (используйте «git rebase --edit-todo», чтобы просмотреть и изменить)"
+
+#: wt-status.c:1148
 #, c-format
 msgid "You are currently rebasing branch '%s' on '%s'."
 msgstr "Вы сейчас перемещаете ветку «%s» над «%s»."
 
-#: wt-status.c:1044 wt-status.c:1061
+#: wt-status.c:1153
 msgid "You are currently rebasing."
 msgstr "Вы сейчас перемещаете ветку."
 
-#: wt-status.c:1047
+#: wt-status.c:1167
 msgid "  (fix conflicts and then run \"git rebase --continue\")"
 msgstr "  (разрешите конфликты, затем запустите «git rebase --continue»)"
 
-#: wt-status.c:1049
+#: wt-status.c:1169
 msgid "  (use \"git rebase --skip\" to skip this patch)"
 msgstr "  (используйте «git rebase --skip», чтобы пропустить этот патч)"
 
-#: wt-status.c:1051
+#: wt-status.c:1171
 msgid "  (use \"git rebase --abort\" to check out the original branch)"
 msgstr "  (используйте «git rebase --abort», чтобы перейти на оригинальную ветку)"
 
-#: wt-status.c:1064
+#: wt-status.c:1177
 msgid "  (all conflicts fixed: run \"git rebase --continue\")"
 msgstr "  (все конфликты разрешены: запустите «git rebase --continue»)"
 
-#: wt-status.c:1068
+#: wt-status.c:1181
 #, c-format
 msgid ""
 "You are currently splitting a commit while rebasing branch '%s' on '%s'."
 msgstr "Вы сейчас разделяете коммит при перемещении ветки  «%s» над «%s»."
 
-#: wt-status.c:1073
+#: wt-status.c:1186
 msgid "You are currently splitting a commit during a rebase."
 msgstr "Вы сейчас разделяете коммит при перемещении ветки."
 
-#: wt-status.c:1076
+#: wt-status.c:1189
 msgid "  (Once your working directory is clean, run \"git rebase --continue\")"
 msgstr "(Как только ваш рабочий каталог будет чистый, запустите «git rebase --continue»)"
 
-#: wt-status.c:1080
+#: wt-status.c:1193
 #, c-format
 msgid "You are currently editing a commit while rebasing branch '%s' on '%s'."
 msgstr "Вы сейчас редактируете коммит при перемещении ветки  «%s» над «%s»."
 
-#: wt-status.c:1085
+#: wt-status.c:1198
 msgid "You are currently editing a commit during a rebase."
 msgstr "Вы сейчас редактируете коммит при перемещении ветки."
 
-#: wt-status.c:1088
+#: wt-status.c:1201
 msgid "  (use \"git commit --amend\" to amend the current commit)"
 msgstr "  (используйте «git commit --amend», чтобы исправить текущий коммит)"
 
-#: wt-status.c:1090
+#: wt-status.c:1203
 msgid "  (use \"git rebase --continue\" once you are satisfied with your changes)"
 msgstr "  (используйте «git rebase --continue», когда будете довольны изменениями)"
 
-#: wt-status.c:1100
+#: wt-status.c:1213
 #, c-format
 msgid "You are currently cherry-picking commit %s."
 msgstr "Вы сейчас отбираете лучший коммит %s."
 
-#: wt-status.c:1105
+#: wt-status.c:1218
 msgid "  (fix conflicts and run \"git cherry-pick --continue\")"
 msgstr "  (разрешите конфликты, затем запустите «git cherry-pick --continue»)"
 
-#: wt-status.c:1108
+#: wt-status.c:1221
 msgid "  (all conflicts fixed: run \"git cherry-pick --continue\")"
 msgstr "  (все конфликты разрешены: запустите «git cherry-pick --continue»)"
 
-#: wt-status.c:1110
+#: wt-status.c:1223
 msgid "  (use \"git cherry-pick --abort\" to cancel the cherry-pick operation)"
 msgstr "  (используйте «git cherry-pick --abort», чтобы отменить операцию отбора лучшего)"
 
-#: wt-status.c:1119
+#: wt-status.c:1232
 #, c-format
 msgid "You are currently reverting commit %s."
 msgstr "Вы сейчас возвращаете коммит %s."
 
-#: wt-status.c:1124
+#: wt-status.c:1237
 msgid "  (fix conflicts and run \"git revert --continue\")"
 msgstr "  (разрешите конфликты, затем запустите «git revert --continue»)"
 
-#: wt-status.c:1127
+#: wt-status.c:1240
 msgid "  (all conflicts fixed: run \"git revert --continue\")"
 msgstr "  (все конфликты разрешены: запустите «git revert --continue»)"
 
-#: wt-status.c:1129
+#: wt-status.c:1242
 msgid "  (use \"git revert --abort\" to cancel the revert operation)"
 msgstr "  (используйте «git revert --abort», чтобы отменить операцию возврата)"
 
-#: wt-status.c:1140
+#: wt-status.c:1253
 #, c-format
 msgid "You are currently bisecting, started from branch '%s'."
 msgstr "Вы сейчас в процессе двоичного поиска, начатого с ветки «%s»."
 
-#: wt-status.c:1144
+#: wt-status.c:1257
 msgid "You are currently bisecting."
 msgstr "Вы сейчас в процессе двоичного поиска."
 
-#: wt-status.c:1147
+#: wt-status.c:1260
 msgid "  (use \"git bisect reset\" to get back to the original branch)"
 msgstr "  (используйте «git bisect reset», чтобы вернуться на исходную ветку)"
 
-#: wt-status.c:1324
+#: wt-status.c:1437
 msgid "On branch "
 msgstr "На ветке "
 
-#: wt-status.c:1331
+#: wt-status.c:1445
+msgid "interactive rebase in progress; onto "
+msgstr "интерактивное перемещение в процессе; над "
+
+#: wt-status.c:1447
 msgid "rebase in progress; onto "
 msgstr "перемещение в процессе; над "
 
-#: wt-status.c:1336
+#: wt-status.c:1452
 msgid "HEAD detached at "
 msgstr "HEAD отделен на "
 
-#: wt-status.c:1338
+#: wt-status.c:1454
 msgid "HEAD detached from "
 msgstr "HEAD отделен начиная с "
 
-#: wt-status.c:1341
+#: wt-status.c:1457
 msgid "Not currently on any branch."
 msgstr "Сейчас ни на одной из веток"
 
-#: wt-status.c:1358
+#: wt-status.c:1474
 msgid "Initial commit"
 msgstr "Начальный коммит"
 
-#: wt-status.c:1372
+#: wt-status.c:1488
 msgid "Untracked files"
 msgstr "Неотслеживаемые файлы"
 
-#: wt-status.c:1374
+#: wt-status.c:1490
 msgid "Ignored files"
 msgstr "Игнорируемые файлы"
 
-#: wt-status.c:1378
+#: wt-status.c:1494
 #, c-format
 msgid ""
 "It took %.2f seconds to enumerate untracked files. 'status -uno'\n"
 "may speed it up, but you have to be careful not to forget to add\n"
 "new files yourself (see 'git help status')."
 msgstr "%.2f секунды занял вывод списка неотслеживаемых файлов. «status -uno» возможно может ускорить это, но будьте внимательны, и не забудьте добавить новые файлы вручную (смотрите «git help status» для подробностей)."
 
-#: wt-status.c:1384
+#: wt-status.c:1500
 #, c-format
 msgid "Untracked files not listed%s"
 msgstr "Неотслеживаемые файлы не показаны%s"
 
-#: wt-status.c:1386
+#: wt-status.c:1502
 msgid " (use -u option to show untracked files)"
 msgstr "(используйте опцию «-u», чтобы показать неотслеживаемые файлы)"
 
-#: wt-status.c:1392
+#: wt-status.c:1508
 msgid "No changes"
 msgstr "Нет изменений"
 
-#: wt-status.c:1397
+#: wt-status.c:1513
 #, c-format
 msgid "no changes added to commit (use \"git add\" and/or \"git commit -a\")\n"
 msgstr "нет изменений добавленных для коммита\n(используйте «git add» и/или «git commit -a»)\n"
 
-#: wt-status.c:1400
+#: wt-status.c:1516
 #, c-format
 msgid "no changes added to commit\n"
 msgstr "нет изменений добавленных для коммита\n"
 
-#: wt-status.c:1403
+#: wt-status.c:1519
 #, c-format
 msgid ""
 "nothing added to commit but untracked files present (use \"git add\" to "
 "track)\n"
 msgstr "ничего не добавлено в коммит, но есть неотслеживаемые файлы (используйте \"git add\", чтобы отслеживать их)\n"
 
-#: wt-status.c:1406
+#: wt-status.c:1522
 #, c-format
 msgid "nothing added to commit but untracked files present\n"
 msgstr "ничего не добавлено в коммит, но есть неотслеживаемые файлы\n"
 
-#: wt-status.c:1409
+#: wt-status.c:1525
 #, c-format
 msgid "nothing to commit (create/copy files and use \"git add\" to track)\n"
 msgstr "нечего коммитить (создайте/скопируйте файлы, затем запустите «git add», чтобы отслеживать их)\n"
 
-#: wt-status.c:1412 wt-status.c:1417
+#: wt-status.c:1528 wt-status.c:1533
 #, c-format
 msgid "nothing to commit\n"
 msgstr "нечего коммитить\n"
 
-#: wt-status.c:1415
+#: wt-status.c:1531
 #, c-format
 msgid "nothing to commit (use -u to show untracked files)\n"
 msgstr "нечего коммитить (используйте опцию «-u», чтобы показать неотслеживаемые файлы)\n"
 
-#: wt-status.c:1419
+#: wt-status.c:1535
 #, c-format
 msgid "nothing to commit, working directory clean\n"
 msgstr "нечего коммитить, нет изменений в рабочем каталоге\n"
 
-#: wt-status.c:1528
+#: wt-status.c:1644
 msgid "HEAD (no branch)"
 msgstr "HEAD (нет ветки)"
 
-#: wt-status.c:1534
+#: wt-status.c:1650
 msgid "Initial commit on "
 msgstr "Начальный коммит на "
 
-#: wt-status.c:1561
+#: wt-status.c:1677
 msgid "gone"
 msgstr "исчез"
 
-#: wt-status.c:1563 wt-status.c:1571
+#: wt-status.c:1679 wt-status.c:1687
 msgid "behind "
 msgstr "позади"
 
-#: compat/precompose_utf8.c:55 builtin/clone.c:345
+#: compat/precompose_utf8.c:55 builtin/clone.c:403
 #, c-format
 msgid "failed to unlink '%s'"
 msgstr "сбой отсоединения «%s»"
 
 #: builtin/add.c:22
 msgid "git add [<options>] [--] <pathspec>..."
@@ -1991,13 +2089,13 @@
 msgstr "удалить «%s»\n"
 
 #: builtin/add.c:134
 msgid "Unstaged changes after refreshing the index:"
 msgstr "Непроиндексированные изменения после обновления индекса:"
 
-#: builtin/add.c:194 builtin/rev-parse.c:796
+#: builtin/add.c:194 builtin/rev-parse.c:799
 msgid "Could not read the index"
 msgstr "Не удалось прочитать индекс"
 
 #: builtin/add.c:205
 #, c-format
 msgid "Could not open '%s' for writing."
@@ -2026,29 +2124,29 @@
 msgstr "Не удалось применить «%s»"
 
 #: builtin/add.c:232
 msgid "The following paths are ignored by one of your .gitignore files:\n"
 msgstr "Следующие пути игнорируются одним из ваших файлов .gitignore:\n"
 
-#: builtin/add.c:249 builtin/clean.c:874 builtin/fetch.c:107 builtin/mv.c:110
-#: builtin/prune-packed.c:55 builtin/push.c:508 builtin/remote.c:1369
-#: builtin/rm.c:268
+#: builtin/add.c:249 builtin/clean.c:896 builtin/fetch.c:108 builtin/mv.c:110
+#: builtin/prune-packed.c:55 builtin/pull.c:182 builtin/push.c:545
+#: builtin/remote.c:1339 builtin/rm.c:268 builtin/send-pack.c:162
 msgid "dry run"
 msgstr "пробный запуск"
 
 #: builtin/add.c:250 builtin/apply.c:4580 builtin/check-ignore.c:19
-#: builtin/commit.c:1322 builtin/count-objects.c:63 builtin/fsck.c:616
-#: builtin/log.c:1617 builtin/mv.c:109 builtin/read-tree.c:114
+#: builtin/commit.c:1321 builtin/count-objects.c:63 builtin/fsck.c:636
+#: builtin/log.c:1641 builtin/mv.c:109 builtin/read-tree.c:114
 msgid "be verbose"
 msgstr "быть многословнее"
 
 #: builtin/add.c:252
 msgid "interactive picking"
 msgstr "интерактивный выбор"
 
-#: builtin/add.c:253 builtin/checkout.c:1221 builtin/reset.c:286
+#: builtin/add.c:253 builtin/checkout.c:1152 builtin/reset.c:286
 msgid "select hunks interactively"
 msgstr "интерактивный выбор блоков"
 
 #: builtin/add.c:254
 msgid "edit current diff and apply"
 msgstr "отредактировать текущий файл различий и применить его"
@@ -2109,21 +2207,409 @@
 
 #: builtin/add.c:359
 #, c-format
 msgid "Maybe you wanted to say 'git add .'?\n"
 msgstr "Возможно, вы имели в виду «git add .»?\n"
 
-#: builtin/add.c:364 builtin/check-ignore.c:172 builtin/clean.c:918
-#: builtin/commit.c:335 builtin/mv.c:130 builtin/reset.c:235 builtin/rm.c:298
+#: builtin/add.c:364 builtin/check-ignore.c:172 builtin/clean.c:940
+#: builtin/commit.c:336 builtin/mv.c:130 builtin/reset.c:235 builtin/rm.c:298
 msgid "index file corrupt"
 msgstr "файл индекса поврежден"
 
-#: builtin/add.c:447 builtin/apply.c:4678 builtin/mv.c:279 builtin/rm.c:430
+#: builtin/add.c:445 builtin/apply.c:4678 builtin/mv.c:279 builtin/rm.c:430
 msgid "Unable to write new index file"
 msgstr "Не удалось записать новый файл индекса"
 
+#: builtin/am.c:41
+#, c-format
+msgid "could not stat %s"
+msgstr "не удалось выполнить stat для %s"
+
+#: builtin/am.c:270 builtin/am.c:1345 builtin/commit.c:737
+#: builtin/merge.c:1079
+#, c-format
+msgid "could not read '%s'"
+msgstr "не удалось прочитать «%s»"
+
+#: builtin/am.c:444
+msgid "could not parse author script"
+msgstr "не удалось разобрать сценарий авторства"
+
+#: builtin/am.c:521
+#, c-format
+msgid "'%s' was deleted by the applypatch-msg hook"
+msgstr "«%s» был удален перехватчиком applypatch-msg"
+
+#: builtin/am.c:562 builtin/notes.c:300
+#, c-format
+msgid "Malformed input line: '%s'."
+msgstr "Плохая строка ввода: «%s»."
+
+#: builtin/am.c:599 builtin/notes.c:315
+#, c-format
+msgid "Failed to copy notes from '%s' to '%s'"
+msgstr "Не удалось скопировать заметку из «%s» в «%s»"
+
+#: builtin/am.c:625
+msgid "fseek failed"
+msgstr "сбой при выполнении fseek"
+
+#: builtin/am.c:786 builtin/am.c:874
+#, c-format
+msgid "could not open '%s' for reading: %s"
+msgstr "не удалось открыть «%s» для чтения: %s"
+
+#: builtin/am.c:793
+#, c-format
+msgid "could not open '%s' for writing: %s"
+msgstr "не удалось открыть «%s» для записи: %s"
+
+#: builtin/am.c:802
+#, c-format
+msgid "could not parse patch '%s'"
+msgstr "не удалось разобрать патч «%s»"
+
+#: builtin/am.c:867
+msgid "Only one StGIT patch series can be applied at once"
+msgstr "Только серия патчей StGIT может быть применена за раз"
+
+#: builtin/am.c:915
+msgid "invalid timestamp"
+msgstr "недопустимая метка даты/времени"
+
+#: builtin/am.c:918 builtin/am.c:926
+msgid "invalid Date line"
+msgstr "недопустимая строка даты"
+
+#: builtin/am.c:923
+msgid "invalid timezone offset"
+msgstr "недопустимое смещение часового пояса"
+
+#: builtin/am.c:1010
+msgid "Patch format detection failed."
+msgstr "Сбой определения формата патча."
+
+#: builtin/am.c:1015 builtin/clone.c:368
+#, c-format
+msgid "failed to create directory '%s'"
+msgstr "не удалось создать каталог «%s»"
+
+#: builtin/am.c:1019
+msgid "Failed to split patches."
+msgstr "Не удалось разделить патчи на части."
+
+#: builtin/am.c:1151 builtin/commit.c:362
+msgid "unable to write index file"
+msgstr "не удалось записать индекс"
+
+#: builtin/am.c:1202
+#, c-format
+msgid "When you have resolved this problem, run \"%s --continue\"."
+msgstr "Когда вы устраните эту проблему, запустите «%s --continue»."
+
+#: builtin/am.c:1203
+#, c-format
+msgid "If you prefer to skip this patch, run \"%s --skip\" instead."
+msgstr "Если вы хотите пропустить этот патч, то запустите «%s --skip»."
+
+#: builtin/am.c:1204
+#, c-format
+msgid "To restore the original branch and stop patching, run \"%s --abort\"."
+msgstr "Чтобы вернуться на предыдущую ветку и остановить применение изменений, запустите «%s --abort»."
+
+#: builtin/am.c:1339
+msgid "Patch is empty. Was it split wrong?"
+msgstr "Патч пуст. Возможно, он был неправильно разделён?"
+
+#: builtin/am.c:1413 builtin/log.c:1345
+#, c-format
+msgid "invalid ident line: %s"
+msgstr "неправильная строка идентификации: %s"
+
+#: builtin/am.c:1440
+#, c-format
+msgid "unable to parse commit %s"
+msgstr "не удалось разобрать коммит %s"
+
+#: builtin/am.c:1614
+msgid "Repository lacks necessary blobs to fall back on 3-way merge."
+msgstr "В репозитории отсутствуют двоичные объекты, необходимые для отката к трехходовому слиянию."
+
+#: builtin/am.c:1616
+msgid "Using index info to reconstruct a base tree..."
+msgstr "Использую индекс для реконструкции базового дерева…"
+
+#: builtin/am.c:1635
+msgid ""
+"Did you hand edit your patch?\n"
+"It does not apply to blobs recorded in its index."
+msgstr "Вы вручную изменяли патч?\nОн не накладывается без ошибок на двоичные объекты, записанные в его заголовке."
+
+#: builtin/am.c:1641
+msgid "Falling back to patching base and 3-way merge..."
+msgstr "Откат к применению изменений к базовому коммиту с помощью трехходового слияния…"
+
+#: builtin/am.c:1666
+msgid "Failed to merge in the changes."
+msgstr "Не удалось слить изменения."
+
+#: builtin/am.c:1691 builtin/merge.c:632
+msgid "git write-tree failed to write a tree"
+msgstr "git write-tree не удалось записать дерево"
+
+#: builtin/am.c:1698
+msgid "applying to an empty history"
+msgstr "применение к пустой истории"
+
+#: builtin/am.c:1711 builtin/commit.c:1752 builtin/merge.c:829
+#: builtin/merge.c:854
+msgid "failed to write commit object"
+msgstr "сбой записи объекта коммита"
+
+#: builtin/am.c:1743 builtin/am.c:1747
+#, c-format
+msgid "cannot resume: %s does not exist."
+msgstr "нельзя продолжнить: %s не существует "
+
+#: builtin/am.c:1763
+msgid "cannot be interactive without stdin connected to a terminal."
+msgstr "не удалось использовать интерактивное поведение, без stdin подключенного к терминалу."
+
+#: builtin/am.c:1768
+msgid "Commit Body is:"
+msgstr "Тело коммита:"
+
+#. TRANSLATORS: Make sure to include [y], [n], [e], [v] and [a]
+#. in your translation. The program will only accept English
+#. input at this point.
+#: builtin/am.c:1778
+msgid "Apply? [y]es/[n]o/[e]dit/[v]iew patch/[a]ccept all: "
+msgstr "Применить? [y] - да/[n] - нет/[e] - редактировать/[v] - просмотреть патч/[a] - применить всё: "
+
+#: builtin/am.c:1828
+#, c-format
+msgid "Dirty index: cannot apply patches (dirty: %s)"
+msgstr "Индекс не пустой: нельзя применять патчи (в индексе: %s)"
+
+#: builtin/am.c:1863 builtin/am.c:1934
+#, c-format
+msgid "Applying: %.*s"
+msgstr "Применение: %.*s"
+
+#: builtin/am.c:1879
+msgid "No changes -- Patch already applied."
+msgstr "Нет изменений — Патч уже применен."
+
+#: builtin/am.c:1887
+#, c-format
+msgid "Patch failed at %s %.*s"
+msgstr "Ошибка применения изменений на %s %.*s"
+
+#: builtin/am.c:1893
+#, c-format
+msgid "The copy of the patch that failed is found in: %s"
+msgstr "Копию изменений, которые не удалось применить, вы можете найти в: %s"
+
+#: builtin/am.c:1937
+msgid ""
+"No changes - did you forget to use 'git add'?\n"
+"If there is nothing left to stage, chances are that something else\n"
+"already introduced the same changes; you might want to skip this patch."
+msgstr "Нет изменений — возможно, вы забыли вызвать «git add»?\nЕсли ничего не осталось для индексации, то, скорее всего, что-то другое уже сделало те же изменения; возможно, вам следует пропустить этот патч."
+
+#: builtin/am.c:1944
+msgid ""
+"You still have unmerged paths in your index.\n"
+"Did you forget to use 'git add'?"
+msgstr "У вас все еще имеются не слитые пути в индексе.\nВозможно, вы забыли вызвать «git add»?"
+
+#: builtin/am.c:2052 builtin/am.c:2056 builtin/am.c:2068 builtin/reset.c:308
+#: builtin/reset.c:316
+#, c-format
+msgid "Could not parse object '%s'."
+msgstr "Не удалось разобрать объект «%s»."
+
+#: builtin/am.c:2104
+msgid "failed to clean index"
+msgstr "не удалось очистить индекс"
+
+#: builtin/am.c:2138
+msgid ""
+"You seem to have moved HEAD since the last 'am' failure.\n"
+"Not rewinding to ORIG_HEAD"
+msgstr "Похоже, что вы переместили HEAD с момента последней ошибки выполнения «am».\nПеремотка на ORIG_HEAD не выполняется"
+
+#: builtin/am.c:2199
+#, c-format
+msgid "Invalid value for --patch-format: %s"
+msgstr "Неправильное значение для --patch-format: %s"
+
+#: builtin/am.c:2221
+msgid "git am [options] [(<mbox>|<Maildir>)...]"
+msgstr "git am [опции] [(<mbox>|<Maildir>)…]"
+
+#: builtin/am.c:2222
+msgid "git am [options] (--continue | --skip | --abort)"
+msgstr "git am [опции] (--continue | --skip | --abort)"
+
+#: builtin/am.c:2228
+msgid "run interactively"
+msgstr "запустить в интерактивном режиме"
+
+#: builtin/am.c:2230
+msgid "historical option -- no-op"
+msgstr "историческая опция — ничего не делает"
+
+#: builtin/am.c:2232
+msgid "allow fall back on 3way merging if needed"
+msgstr "разрешить откатиться к трехходовому слиянию, если нужно"
+
+#: builtin/am.c:2233 builtin/init-db.c:509 builtin/prune-packed.c:57
+#: builtin/repack.c:171
+msgid "be quiet"
+msgstr "тихий режим"
+
+#: builtin/am.c:2235
+msgid "add a Signed-off-by line to the commit message"
+msgstr "добавить строку Signed-off-by к сообщению коммита"
+
+#: builtin/am.c:2238
+msgid "recode into utf8 (default)"
+msgstr "перекодировать в utf8 (по умолчанию)"
+
+#: builtin/am.c:2240
+msgid "pass -k flag to git-mailinfo"
+msgstr "передать флаг -k в git-mailinfo"
+
+#: builtin/am.c:2242
+msgid "pass -b flag to git-mailinfo"
+msgstr "передать флаг -b в git-mailinfo"
+
+#: builtin/am.c:2244
+msgid "pass -m flag to git-mailinfo"
+msgstr "передать флаг -m в git-mailinfo"
+
+#: builtin/am.c:2246
+msgid "pass --keep-cr flag to git-mailsplit for mbox format"
+msgstr "передать флаг --keep-cr в git-mailsplit для формата mbox"
+
+#: builtin/am.c:2249
+msgid "do not pass --keep-cr flag to git-mailsplit independent of am.keepcr"
+msgstr "не передавать --keep-cr флаг в git-mailsplit вне зависимости от am.keepcr"
+
+#: builtin/am.c:2252
+msgid "strip everything before a scissors line"
+msgstr "обрезать все до строки обрезки"
+
+#: builtin/am.c:2253 builtin/apply.c:4563
+msgid "action"
+msgstr "действие"
+
+#: builtin/am.c:2254 builtin/am.c:2257 builtin/am.c:2260 builtin/am.c:2263
+#: builtin/am.c:2266 builtin/am.c:2269 builtin/am.c:2272 builtin/am.c:2275
+#: builtin/am.c:2281
+msgid "pass it through git-apply"
+msgstr "передать его в git-apply"
+
+#: builtin/am.c:2262 builtin/apply.c:4587
+msgid "root"
+msgstr "корень"
+
+#: builtin/am.c:2265 builtin/am.c:2268 builtin/apply.c:4525
+#: builtin/apply.c:4528 builtin/clone.c:85 builtin/fetch.c:93
+#: builtin/pull.c:167
+msgid "path"
+msgstr "путь"
+
+#: builtin/am.c:2271 builtin/fmt-merge-msg.c:669 builtin/fmt-merge-msg.c:672
+#: builtin/grep.c:698 builtin/merge.c:198 builtin/pull.c:127
+#: builtin/repack.c:178 builtin/repack.c:182 builtin/show-branch.c:664
+#: builtin/show-ref.c:180 builtin/tag.c:591 parse-options.h:132
+#: parse-options.h:134 parse-options.h:243
+msgid "n"
+msgstr "n"
+
+#: builtin/am.c:2274 builtin/apply.c:4531
+msgid "num"
+msgstr "количество"
+
+#: builtin/am.c:2277 builtin/for-each-ref.c:34 builtin/replace.c:438
+msgid "format"
+msgstr "формат"
+
+#: builtin/am.c:2278
+msgid "format the patch(es) are in"
+msgstr "формат, в котором находятся патчи"
+
+#: builtin/am.c:2284
+msgid "override error message when patch failure occurs"
+msgstr "переопределить сообщение об ошибке, если не удалось наложить изменения"
+
+#: builtin/am.c:2286
+msgid "continue applying patches after resolving a conflict"
+msgstr "продолжить применение изменений после разрешения конфиликта"
+
+#: builtin/am.c:2289
+msgid "synonyms for --continue"
+msgstr "синонимы для --continue"
+
+#: builtin/am.c:2292
+msgid "skip the current patch"
+msgstr "пропустить текущий патч"
+
+#: builtin/am.c:2295
+msgid "restore the original branch and abort the patching operation."
+msgstr "восстановить оригинальную ветку и отменить операцию применения изменений."
+
+#: builtin/am.c:2299
+msgid "lie about committer date"
+msgstr "соврать о дате коммитера"
+
+#: builtin/am.c:2301
+msgid "use current timestamp for author date"
+msgstr "использовать текущее время как время авторства"
+
+#: builtin/am.c:2303 builtin/commit.c:1590 builtin/merge.c:225
+#: builtin/pull.c:155 builtin/revert.c:92 builtin/tag.c:606
+msgid "key-id"
+msgstr "key-id"
+
+#: builtin/am.c:2304
+msgid "GPG-sign commits"
+msgstr "подписать коммиты с помощью GPG"
+
+#: builtin/am.c:2307
+msgid "(internal use for git-rebase)"
+msgstr "(внутреннее использование для git-rebase)"
+
+#: builtin/am.c:2322
+msgid ""
+"The -b/--binary option has been a no-op for long time, and\n"
+"it will be removed. Please do not use it anymore."
+msgstr "Опция -b/--binary уже долгое время ничего не делает и будет удалена с следующих версиях Git. Пожалуйста, не используйте ее."
+
+#: builtin/am.c:2329
+msgid "failed to read the index"
+msgstr "сбой чтения индекса"
+
+#: builtin/am.c:2344
+#, c-format
+msgid "previous rebase directory %s still exists but mbox given."
+msgstr "предыдущий каталог перемещения %s еще существует, но передан mbox."
+
+#: builtin/am.c:2368
+#, c-format
+msgid ""
+"Stray %s directory found.\n"
+"Use \"git am --abort\" to remove it."
+msgstr "Найден забытый каталог %s.\nИспользуйте «git am --abort», чтобы удалить его."
+
+#: builtin/am.c:2374
+msgid "Resolve operation not in progress, we are not resuming."
+msgstr "Операция разрешения конфликтов не в процессе выполнения, не продолжаем."
+
 #: builtin/apply.c:59
 msgid "git apply [<options>] [<patch>...]"
 msgstr "git apply [<опции>] [<патч>…]"
 
 #: builtin/apply.c:112
 #, c-format
@@ -2378,13 +2864,13 @@
 
 #: builtin/apply.c:3816
 #, c-format
 msgid "Checking patch %s..."
 msgstr "Проверка патча %s…"
 
-#: builtin/apply.c:3909 builtin/checkout.c:233 builtin/reset.c:135
+#: builtin/apply.c:3909 builtin/checkout.c:232 builtin/reset.c:135
 #, c-format
 msgid "make_cache_entry failed for path '%s'"
 msgstr "сбой make_cache_entry для пути «%s»"
 
 #: builtin/apply.c:4052
 #, c-format
@@ -2459,29 +2945,20 @@
 msgstr "не распознанный ввод"
 
 #: builtin/apply.c:4408
 msgid "unable to read index file"
 msgstr "не удалось прочитать файл индекса"
 
-#: builtin/apply.c:4525 builtin/apply.c:4528 builtin/clone.c:85
-#: builtin/fetch.c:92
-msgid "path"
-msgstr "путь"
-
 #: builtin/apply.c:4526
 msgid "don't apply changes matching the given path"
 msgstr "не применять изменения по указанному пути"
 
 #: builtin/apply.c:4529
 msgid "apply changes matching the given path"
 msgstr "применять изменения по указанному пути"
 
-#: builtin/apply.c:4531
-msgid "num"
-msgstr "количество"
-
 #: builtin/apply.c:4532
 msgid "remove <num> leading slashes from traditional diff paths"
 msgstr "удалить <количество> ведущих косых черт из традиционных путей списка изменений"
 
 #: builtin/apply.c:4535
 msgid "ignore additions made by the patch"
@@ -2532,16 +3009,12 @@
 msgstr "пути, отделенные НУЛЕВЫМ символом"
 
 #: builtin/apply.c:4562
 msgid "ensure at least <n> lines of context match"
 msgstr "удостовериться, что по крайней мере <n> строк контекста совпадают"
 
-#: builtin/apply.c:4563
-msgid "action"
-msgstr "действие"
-
 #: builtin/apply.c:4564
 msgid "detect new or modified lines that have whitespace errors"
 msgstr "определять новые или модифицированные строки, у которых есть ошибки в пробельных символах"
 
 #: builtin/apply.c:4567 builtin/apply.c:4570
 msgid "ignore changes in whitespace when finding context"
@@ -2568,16 +3041,12 @@
 msgstr "разрешить некорректно определенные пропущенные пустые строки в конце файла"
 
 #: builtin/apply.c:4585
 msgid "do not trust the line counts in the hunk headers"
 msgstr "не доверять количеству строк из заголовка блока изменений"
 
-#: builtin/apply.c:4587
-msgid "root"
-msgstr "корень"
-
 #: builtin/apply.c:4588
 msgid "prepend <root> to all filenames"
 msgstr "добавить <корень> спереди ко всем именам файлов"
 
 #: builtin/apply.c:4610
 msgid "--3way outside a repository"
@@ -2658,17 +3127,17 @@
 msgstr "выполнить «git bisect next»"
 
 #: builtin/bisect--helper.c:19
 msgid "update BISECT_HEAD instead of checking out the current commit"
 msgstr "обновить BISECT_HEAD вместо перехода на текущий коммит"
 
-#: builtin/blame.c:31
+#: builtin/blame.c:32
 msgid "git blame [<options>] [<rev-opts>] [<rev>] [--] <file>"
 msgstr "git blame [<опции>] [<опции-редакции>] [<редакция>] [--] <файл>"
 
-#: builtin/blame.c:36
+#: builtin/blame.c:37
 msgid "<rev-opts> are documented in git-rev-list(1)"
 msgstr "<опции-rev-list> документированы в git-rev-list(1)"
 
 #: builtin/blame.c:2500
 msgid "Show blame entries as we find them, incrementally"
 msgstr "Показать записи авторства постепенно, в процессе нахождения"
@@ -2837,342 +3306,342 @@
 
 #: builtin/branch.c:244
 #, c-format
 msgid "branch '%s' not found."
 msgstr "ветка «%s» не найдена."
 
-#: builtin/branch.c:258
+#: builtin/branch.c:259
 #, c-format
 msgid "Error deleting remote-tracking branch '%s'"
 msgstr "Ошибка удаления внешней отслеживаемой ветки «%s»"
 
-#: builtin/branch.c:259
+#: builtin/branch.c:260
 #, c-format
 msgid "Error deleting branch '%s'"
 msgstr "Ошибка удаления ветки «%s»"
 
-#: builtin/branch.c:266
+#: builtin/branch.c:267
 #, c-format
 msgid "Deleted remote-tracking branch %s (was %s).\n"
 msgstr "Внешняя отслеживаемая ветка %s удалена (была %s).\n"
 
-#: builtin/branch.c:267
+#: builtin/branch.c:268
 #, c-format
 msgid "Deleted branch %s (was %s).\n"
 msgstr "Ветка %s удалена (была %s).\n"
 
-#: builtin/branch.c:368
+#: builtin/branch.c:369
 #, c-format
 msgid "branch '%s' does not point at a commit"
 msgstr "ветка «%s» не указывает на коммит"
 
-#: builtin/branch.c:451
+#: builtin/branch.c:452
 #, c-format
 msgid "[%s: gone]"
 msgstr "[%s: пропал]"
 
-#: builtin/branch.c:456
+#: builtin/branch.c:457
 #, c-format
 msgid "[%s]"
 msgstr "[%s]"
 
-#: builtin/branch.c:461
+#: builtin/branch.c:462
 #, c-format
 msgid "[%s: behind %d]"
 msgstr "[%s: позади %d]"
 
-#: builtin/branch.c:463
+#: builtin/branch.c:464
 #, c-format
 msgid "[behind %d]"
 msgstr "[позади %d]"
 
-#: builtin/branch.c:467
+#: builtin/branch.c:468
 #, c-format
 msgid "[%s: ahead %d]"
 msgstr "[%s: впереди %d]"
 
-#: builtin/branch.c:469
+#: builtin/branch.c:470
 #, c-format
 msgid "[ahead %d]"
 msgstr "[впереди %d]"
 
-#: builtin/branch.c:472
+#: builtin/branch.c:473
 #, c-format
 msgid "[%s: ahead %d, behind %d]"
 msgstr "[%s: впереди %d, позади %d]"
 
-#: builtin/branch.c:475
+#: builtin/branch.c:476
 #, c-format
 msgid "[ahead %d, behind %d]"
 msgstr "[впереди %d, позади %d]"
 
-#: builtin/branch.c:488
+#: builtin/branch.c:489
 msgid " **** invalid ref ****"
 msgstr " **** недействительная ссылка ****"
 
-#: builtin/branch.c:579
+#: builtin/branch.c:580
 #, c-format
 msgid "(no branch, rebasing %s)"
 msgstr "(нет ветки, перемещение %s)"
 
-#: builtin/branch.c:582
+#: builtin/branch.c:583
 #, c-format
 msgid "(no branch, bisect started on %s)"
 msgstr "(нет ветки, двоичный поиск начат на %s)"
 
-#: builtin/branch.c:588
+#: builtin/branch.c:589
 #, c-format
 msgid "(HEAD detached at %s)"
 msgstr "(HEAD отделён на %s)"
 
-#: builtin/branch.c:591
+#: builtin/branch.c:592
 #, c-format
 msgid "(HEAD detached from %s)"
 msgstr "(HEAD отделён начиная с %s)"
 
-#: builtin/branch.c:595
+#: builtin/branch.c:596
 msgid "(no branch)"
 msgstr "(нет ветки)"
 
-#: builtin/branch.c:642
+#: builtin/branch.c:643
 #, c-format
 msgid "object '%s' does not point to a commit"
 msgstr "объект «%s» не указывает на коммит"
 
-#: builtin/branch.c:690
+#: builtin/branch.c:691
 msgid "some refs could not be read"
 msgstr "не удается прочитать некоторые ссылки"
 
-#: builtin/branch.c:703
+#: builtin/branch.c:704
 msgid "cannot rename the current branch while not on any."
 msgstr "невозможно переименовать текущую ветку, если вы не находитесь ни на одной из них."
 
-#: builtin/branch.c:713
+#: builtin/branch.c:714
 #, c-format
 msgid "Invalid branch name: '%s'"
 msgstr "Недействительное имя ветки: «%s»"
 
-#: builtin/branch.c:728
+#: builtin/branch.c:729
 msgid "Branch rename failed"
 msgstr "Сбой переименования ветки"
 
-#: builtin/branch.c:732
+#: builtin/branch.c:733
 #, c-format
 msgid "Renamed a misnamed branch '%s' away"
 msgstr "Переименована неправильно названная ветка «%s»"
 
-#: builtin/branch.c:736
+#: builtin/branch.c:737
 #, c-format
 msgid "Branch renamed to %s, but HEAD is not updated!"
 msgstr "Ветка переименована в %s, но HEAD не обновлен!"
 
-#: builtin/branch.c:743
+#: builtin/branch.c:744
 msgid "Branch is renamed, but update of config-file failed"
 msgstr "Ветка переименована, но произошел сбой обновления файла конфигурации"
 
-#: builtin/branch.c:758
+#: builtin/branch.c:759
 #, c-format
 msgid "malformed object name %s"
 msgstr "плохое имя объекта %s"
 
-#: builtin/branch.c:780
+#: builtin/branch.c:781
 #, c-format
 msgid "could not write branch description template: %s"
 msgstr "не удалось записать шаблон описания ветки: %s"
 
-#: builtin/branch.c:810
+#: builtin/branch.c:811
 msgid "Generic options"
 msgstr "Общие параметры"
 
-#: builtin/branch.c:812
+#: builtin/branch.c:813
 msgid "show hash and subject, give twice for upstream branch"
 msgstr "показывать хеш-сумму и тему, укажите дважды для вышестоящей ветки"
 
-#: builtin/branch.c:813
+#: builtin/branch.c:814
 msgid "suppress informational messages"
 msgstr "не выводить информационные сообщения"
 
-#: builtin/branch.c:814
+#: builtin/branch.c:815
 msgid "set up tracking mode (see git-pull(1))"
 msgstr "установить режим отслеживания вышестоящей ветки (см. git-pull(1))"
 
-#: builtin/branch.c:816
+#: builtin/branch.c:817
 msgid "change upstream info"
 msgstr "изменить информацию о вышестоящей ветке"
 
-#: builtin/branch.c:820
+#: builtin/branch.c:821
 msgid "use colored output"
 msgstr "использовать цветной вывод"
 
-#: builtin/branch.c:821
+#: builtin/branch.c:822
 msgid "act on remote-tracking branches"
 msgstr "выполнить действия на отслеживаемых внешних ветках"
 
-#: builtin/branch.c:824 builtin/branch.c:830 builtin/branch.c:851
-#: builtin/branch.c:857 builtin/commit.c:1581 builtin/commit.c:1582
-#: builtin/commit.c:1583 builtin/commit.c:1584 builtin/tag.c:616
-#: builtin/tag.c:622
+#: builtin/branch.c:825 builtin/branch.c:831 builtin/branch.c:852
+#: builtin/branch.c:858 builtin/commit.c:1580 builtin/commit.c:1581
+#: builtin/commit.c:1582 builtin/commit.c:1583 builtin/tag.c:618
+#: builtin/tag.c:624
 msgid "commit"
 msgstr "коммит"
 
-#: builtin/branch.c:825 builtin/branch.c:831
+#: builtin/branch.c:826 builtin/branch.c:832
 msgid "print only branches that contain the commit"
 msgstr "вывод только веток, которые содержат коммит"
 
-#: builtin/branch.c:837
+#: builtin/branch.c:838
 msgid "Specific git-branch actions:"
 msgstr "Специфичные для git-branch действия:"
 
-#: builtin/branch.c:838
+#: builtin/branch.c:839
 msgid "list both remote-tracking and local branches"
 msgstr "показать список и отслеживаемых и локальных веток"
 
-#: builtin/branch.c:840
+#: builtin/branch.c:841
 msgid "delete fully merged branch"
 msgstr "удалить полностью слитую ветку"
 
-#: builtin/branch.c:841
+#: builtin/branch.c:842
 msgid "delete branch (even if not merged)"
 msgstr "удалить ветку (даже никуда не слитую)"
 
-#: builtin/branch.c:842
+#: builtin/branch.c:843
 msgid "move/rename a branch and its reflog"
 msgstr "переместить/переименовать ветки и ее журнал ссылок"
 
-#: builtin/branch.c:843
+#: builtin/branch.c:844
 msgid "move/rename a branch, even if target exists"
 msgstr "переместить/переименовать ветку, даже если целевое имя уже существует"
 
-#: builtin/branch.c:844
+#: builtin/branch.c:845
 msgid "list branch names"
 msgstr "показать список имен веток"
 
-#: builtin/branch.c:845
+#: builtin/branch.c:846
 msgid "create the branch's reflog"
 msgstr "создать журнал ссылок ветки"
 
-#: builtin/branch.c:847
+#: builtin/branch.c:848
 msgid "edit the description for the branch"
 msgstr "изменить описание ветки"
 
-#: builtin/branch.c:848
+#: builtin/branch.c:849
 msgid "force creation, move/rename, deletion"
 msgstr "принудительное создание, перемещение или удаление ветки"
 
-#: builtin/branch.c:851
+#: builtin/branch.c:852
 msgid "print only not merged branches"
 msgstr "вывод только не слитых веток"
 
-#: builtin/branch.c:857
+#: builtin/branch.c:858
 msgid "print only merged branches"
 msgstr "вывод только слитых веток"
 
-#: builtin/branch.c:861
+#: builtin/branch.c:862
 msgid "list branches in columns"
 msgstr "показать список веток по столбцам"
 
-#: builtin/branch.c:874
+#: builtin/branch.c:875
 msgid "Failed to resolve HEAD as a valid ref."
 msgstr "Не удалось определить HEAD как действительную ссылку."
 
-#: builtin/branch.c:878 builtin/clone.c:622
+#: builtin/branch.c:879 builtin/clone.c:690
 msgid "HEAD not found below refs/heads!"
 msgstr "HEAD не найден в refs/heads!"
 
-#: builtin/branch.c:900
+#: builtin/branch.c:901
 msgid "--column and --verbose are incompatible"
 msgstr "--column и --verbose нельзя использовать одновременно"
 
-#: builtin/branch.c:911 builtin/branch.c:950
+#: builtin/branch.c:912 builtin/branch.c:951
 msgid "branch name required"
 msgstr "требуется имя ветки"
 
-#: builtin/branch.c:926
+#: builtin/branch.c:927
 msgid "Cannot give description to detached HEAD"
 msgstr "Нельзя дать описание отделенному HEAD"
 
-#: builtin/branch.c:931
+#: builtin/branch.c:932
 msgid "cannot edit description of more than one branch"
 msgstr "нельзя изменить описание более одной ветки за раз"
 
-#: builtin/branch.c:938
+#: builtin/branch.c:939
 #, c-format
 msgid "No commit on branch '%s' yet."
 msgstr "Еще нет коммита на ветке «%s»."
 
-#: builtin/branch.c:941
+#: builtin/branch.c:942
 #, c-format
 msgid "No branch named '%s'."
 msgstr "Нет ветки с именем «%s»."
 
-#: builtin/branch.c:956
+#: builtin/branch.c:957
 msgid "too many branches for a rename operation"
 msgstr "слишком много веток для операции переименования"
 
-#: builtin/branch.c:961
+#: builtin/branch.c:962
 msgid "too many branches to set new upstream"
 msgstr "слишком много веток для указания новых вышестоящих"
 
-#: builtin/branch.c:965
+#: builtin/branch.c:966
 #, c-format
 msgid ""
 "could not set upstream of HEAD to %s when it does not point to any branch."
 msgstr "невозможно установить вышестоящий репозиторий для HEAD на %s, когда он не указывает ни на одну ветку."
 
-#: builtin/branch.c:968 builtin/branch.c:990 builtin/branch.c:1011
+#: builtin/branch.c:969 builtin/branch.c:991 builtin/branch.c:1012
 #, c-format
 msgid "no such branch '%s'"
 msgstr "нет такой ветки «%s»"
 
-#: builtin/branch.c:972
+#: builtin/branch.c:973
 #, c-format
 msgid "branch '%s' does not exist"
 msgstr "ветка «%s» не существует"
 
-#: builtin/branch.c:984
+#: builtin/branch.c:985
 msgid "too many branches to unset upstream"
 msgstr "слишком много веток для убирания вышестоящих"
 
-#: builtin/branch.c:988
+#: builtin/branch.c:989
 msgid "could not unset upstream of HEAD when it does not point to any branch."
 msgstr "невозможно убрать вышестоящий репозиторий для HEAD, когда он не указывает ни на одну ветку."
 
-#: builtin/branch.c:994
+#: builtin/branch.c:995
 #, c-format
 msgid "Branch '%s' has no upstream information"
 msgstr "Ветка «%s» не имеет информации о вышестоящей ветке"
 
-#: builtin/branch.c:1008
+#: builtin/branch.c:1009
 msgid "it does not make sense to create 'HEAD' manually"
 msgstr "не имеет смысла создавать «HEAD» вручную"
 
-#: builtin/branch.c:1014
+#: builtin/branch.c:1015
 msgid "-a and -r options to 'git branch' do not make sense with a branch name"
 msgstr "параметры -a и -r для «git branch» не имеют смысла с указанием имени ветки"
 
-#: builtin/branch.c:1017
+#: builtin/branch.c:1018
 #, c-format
 msgid ""
 "The --set-upstream flag is deprecated and will be removed. Consider using "
 "--track or --set-upstream-to\n"
 msgstr "Флаг --set-upstream устарел и будет удален в будущем. Вместо него используйте --track или --set-upstream-to\n"
 
-#: builtin/branch.c:1034
+#: builtin/branch.c:1035
 #, c-format
 msgid ""
 "\n"
 "If you wanted to make '%s' track '%s', do this:\n"
 "\n"
 msgstr "\nЕсли вы хотите, чтобы «%s» отслеживала «%s», сделайте следующее:\n\n"
 
-#: builtin/branch.c:1035
+#: builtin/branch.c:1036
 #, c-format
 msgid "    git branch -d %s\n"
 msgstr "git branch -d %s\n"
 
-#: builtin/branch.c:1036
+#: builtin/branch.c:1037
 #, c-format
 msgid "    git branch --set-upstream-to %s\n"
 msgstr "    git branch --set-upstream-to %s\n"
 
 #: builtin/bundle.c:51
 #, c-format
@@ -3184,64 +3653,72 @@
 msgstr "Требуется репозиторий для создания пакета."
 
 #: builtin/bundle.c:68
 msgid "Need a repository to unbundle."
 msgstr "Требуется репозиторий для распаковки."
 
-#: builtin/cat-file.c:369
+#: builtin/cat-file.c:428
 msgid ""
 "git cat-file (-t [--allow-unknown-type]|-s [--allow-unknown-"
 "type]|-e|-p|<type>|--textconv) <object>"
 msgstr "git cat-file (-t [--allow-unknown-type]|-s [--allow-unknown-type]|-e|-p|<тип>|--textconv) <объект>"
 
-#: builtin/cat-file.c:370
+#: builtin/cat-file.c:429
 msgid ""
 "git cat-file (--batch | --batch-check) [--follow-symlinks] < <list-of-"
 "objects>"
 msgstr "git cat-file (--batch | --batch-check) [--follow-symlinks] < <список-объектов>"
 
-#: builtin/cat-file.c:407
+#: builtin/cat-file.c:466
 msgid "<type> can be one of: blob, tree, commit, tag"
 msgstr "<тип> может быть одним из: blob, tree, commit, tag"
 
-#: builtin/cat-file.c:408
+#: builtin/cat-file.c:467
 msgid "show object type"
 msgstr "показать тип объекта"
 
-#: builtin/cat-file.c:409
+#: builtin/cat-file.c:468
 msgid "show object size"
 msgstr "показать размер объекта"
 
-#: builtin/cat-file.c:411
+#: builtin/cat-file.c:470
 msgid "exit with zero when there's no error"
 msgstr "выйти с нулевым кодом возврата, если нет ошибки"
 
-#: builtin/cat-file.c:412
+#: builtin/cat-file.c:471
 msgid "pretty-print object's content"
 msgstr "структурированный вывод содержимого объекта"
 
-#: builtin/cat-file.c:414
+#: builtin/cat-file.c:473
 msgid "for blob objects, run textconv on object's content"
 msgstr "запустить texconv на содержимом двоичных объектов "
 
-#: builtin/cat-file.c:416
+#: builtin/cat-file.c:475
 msgid "allow -s and -t to work with broken/corrupt objects"
 msgstr "разрешить -s и -t работать с повреждёнными объектами"
 
-#: builtin/cat-file.c:418
+#: builtin/cat-file.c:476
+msgid "buffer --batch output"
+msgstr "буфферировать вывод --batch"
+
+#: builtin/cat-file.c:478
 msgid "show info and content of objects fed from the standard input"
 msgstr "показать информацию и содержимое объектов, переданных из стандартного ввода"
 
-#: builtin/cat-file.c:421
+#: builtin/cat-file.c:481
 msgid "show info about objects fed from the standard input"
 msgstr "показать информацию об объектах, переданных из стандартного ввода"
 
-#: builtin/cat-file.c:424
+#: builtin/cat-file.c:484
 msgid "follow in-tree symlinks (used with --batch or --batch-check)"
 msgstr "переходить по символьным ссылкам внутри дерева (используется с опциями --batch и --batch-check)"
 
+#: builtin/cat-file.c:486
+msgid "show all objects with --batch or --batch-check"
+msgstr "показать все объекты с опциями --batch или --batch-check"
+
 #: builtin/check-attr.c:11
 msgid "git check-attr [-a | --all | <attr>...] [--] <pathname>..."
 msgstr "git check-attr [-a | --all | <атрибут>…] [--] <путь>…"
 
 #: builtin/check-attr.c:12
 msgid "git check-attr --stdin [-z] [-a | --all | <attr>...] < <list-of-paths>"
@@ -3260,13 +3737,13 @@
 msgstr "прочитать имена файлов из стандартного ввода"
 
 #: builtin/check-attr.c:23 builtin/check-ignore.c:24
 msgid "terminate input and output records by a NUL character"
 msgstr "окончание ввода и вывода записей по НУЛЕВОМУ символу"
 
-#: builtin/check-ignore.c:18 builtin/checkout.c:1202 builtin/gc.c:279
+#: builtin/check-ignore.c:18 builtin/checkout.c:1133 builtin/gc.c:267
 msgid "suppress progress reporting"
 msgstr "не выводить прогресс выполнения"
 
 #: builtin/check-ignore.c:26
 msgid "show non-matching input paths"
 msgstr "показать не совпадающие введенные пути"
@@ -3357,119 +3834,119 @@
 msgstr "добавить спереди <строку> при создании файлов"
 
 #: builtin/checkout-index.c:208
 msgid "copy out the files from named stage"
 msgstr "копировать файлы из указанного индекса"
 
-#: builtin/checkout.c:24
+#: builtin/checkout.c:25
 msgid "git checkout [<options>] <branch>"
 msgstr "git checkout [<опции>] <ветка>"
 
-#: builtin/checkout.c:25
+#: builtin/checkout.c:26
 msgid "git checkout [<options>] [<branch>] -- <file>..."
 msgstr "git checkout [<опции>] [<ветка>] -- <файл>…"
 
-#: builtin/checkout.c:134 builtin/checkout.c:167
+#: builtin/checkout.c:133 builtin/checkout.c:166
 #, c-format
 msgid "path '%s' does not have our version"
 msgstr "путь «%s» не имеет нашей версии"
 
-#: builtin/checkout.c:136 builtin/checkout.c:169
+#: builtin/checkout.c:135 builtin/checkout.c:168
 #, c-format
 msgid "path '%s' does not have their version"
 msgstr "путь «%s» не имеет их версии"
 
-#: builtin/checkout.c:152
+#: builtin/checkout.c:151
 #, c-format
 msgid "path '%s' does not have all necessary versions"
 msgstr "путь «%s» не имеет всех необходимых версий"
 
-#: builtin/checkout.c:196
+#: builtin/checkout.c:195
 #, c-format
 msgid "path '%s' does not have necessary versions"
 msgstr "путь «%s» не имеет необходимых версий"
 
-#: builtin/checkout.c:213
+#: builtin/checkout.c:212
 #, c-format
 msgid "path '%s': cannot merge"
 msgstr "путь «%s»: не удалось слить"
 
-#: builtin/checkout.c:230
+#: builtin/checkout.c:229
 #, c-format
 msgid "Unable to add merge result for '%s'"
 msgstr "Не удалось добавить результат слияния «%s»"
 
-#: builtin/checkout.c:251 builtin/checkout.c:254 builtin/checkout.c:257
-#: builtin/checkout.c:260
+#: builtin/checkout.c:250 builtin/checkout.c:253 builtin/checkout.c:256
+#: builtin/checkout.c:259
 #, c-format
 msgid "'%s' cannot be used with updating paths"
 msgstr "«%s» нельзя использовать при обновлении путей"
 
-#: builtin/checkout.c:263 builtin/checkout.c:266
+#: builtin/checkout.c:262 builtin/checkout.c:265
 #, c-format
 msgid "'%s' cannot be used with %s"
 msgstr "«%s» нельзя использовать одновременно с %s"
 
-#: builtin/checkout.c:269
+#: builtin/checkout.c:268
 #, c-format
 msgid "Cannot update paths and switch to branch '%s' at the same time."
 msgstr "Нельзя обновлять пути и переключаться на ветку «%s» одновременно."
 
-#: builtin/checkout.c:280 builtin/checkout.c:474
+#: builtin/checkout.c:279 builtin/checkout.c:473
 msgid "corrupt index file"
 msgstr "файл индекса поврежден"
 
-#: builtin/checkout.c:340 builtin/checkout.c:347
+#: builtin/checkout.c:339 builtin/checkout.c:346
 #, c-format
 msgid "path '%s' is unmerged"
 msgstr "путь «%s» не слит"
 
-#: builtin/checkout.c:496
+#: builtin/checkout.c:495
 msgid "you need to resolve your current index first"
 msgstr "сначала нужно разрешить конфликты в вашем текущем индексе"
 
-#: builtin/checkout.c:627
+#: builtin/checkout.c:622
 #, c-format
-msgid "Can not do reflog for '%s'\n"
-msgstr "Не удалось создать журнал ссылок для «%s»\n"
+msgid "Can not do reflog for '%s': %s\n"
+msgstr "Не удалось создать журнал ссылок для «%s»': %s\n"
 
-#: builtin/checkout.c:663
+#: builtin/checkout.c:660
 msgid "HEAD is now at"
 msgstr "HEAD сейчас на"
 
-#: builtin/checkout.c:670
+#: builtin/checkout.c:667
 #, c-format
 msgid "Reset branch '%s'\n"
 msgstr "Сброс ветки «%s»\n"
 
-#: builtin/checkout.c:673
+#: builtin/checkout.c:670
 #, c-format
 msgid "Already on '%s'\n"
 msgstr "Уже на «%s»\n"
 
-#: builtin/checkout.c:677
+#: builtin/checkout.c:674
 #, c-format
 msgid "Switched to and reset branch '%s'\n"
 msgstr "Переключение и сброс ветки «%s»\n"
 
-#: builtin/checkout.c:679 builtin/checkout.c:1134
+#: builtin/checkout.c:676 builtin/checkout.c:1065
 #, c-format
 msgid "Switched to a new branch '%s'\n"
 msgstr "Переключено на новую ветку «%s»\n"
 
-#: builtin/checkout.c:681
+#: builtin/checkout.c:678
 #, c-format
 msgid "Switched to branch '%s'\n"
 msgstr "Переключено на ветку «%s»\n"
 
-#: builtin/checkout.c:733
+#: builtin/checkout.c:730
 #, c-format
 msgid " ... and %d more.\n"
 msgstr " … и еще %d.\n"
 
-#: builtin/checkout.c:739
+#: builtin/checkout.c:736
 #, c-format
 msgid ""
 "Warning: you are leaving %d commit behind, not connected to\n"
 "any of your branches:\n"
 "\n"
 "%s\n"
@@ -3480,13 +3957,13 @@
 "%s\n"
 msgstr[0] "Предупреждение: вы оставляете позади %d коммит не соединенную ни с одной из ваших веток:\n\n%s\n"
 msgstr[1] "Предупреждение: вы оставляете позади %d коммита не соединенные ни с одной из ваших веток:\n\n%s\n"
 msgstr[2] "Предупреждение: вы оставляете позади %d коммитов не соединенные ни с одной из ваших веток:\n\n%s\n"
 msgstr[3] "Предупреждение: вы оставляете позади %d коммитов не соединенные ни с одной из ваших веток:\n\n%s\n"
 
-#: builtin/checkout.c:758
+#: builtin/checkout.c:755
 #, c-format
 msgid ""
 "If you want to keep it by creating a new branch, this may be a good time\n"
 "to do so with:\n"
 "\n"
 " git branch <new-branch-name> %s\n"
@@ -3499,345 +3976,340 @@
 "\n"
 msgstr[0] "Если вы хотите сохранить их с помощью создания новой ветки, то сейчас самое время\nсделать это с помощью:\n\n git branch <имя-новой-ветки> %s\n\n"
 msgstr[1] "Если вы хотите сохранить их с помощью создания новой ветки, то сейчас самое время\nсделать это с помощью:\n\n git branch <имя-новой-ветки> %s\n\n"
 msgstr[2] "Если вы хотите сохранить их с помощью создания новой ветки, то сейчас самое время\nсделать это с помощью:\n\n git branch <имя-новой-ветки> %s\n\n"
 msgstr[3] "Если вы хотите сохранить их с помощью создания новой ветки, то сейчас самое время\nсделать это с помощью:\n\n git branch <имя-новой-ветки> %s\n\n"
 
-#: builtin/checkout.c:794
+#: builtin/checkout.c:791
 msgid "internal error in revision walk"
 msgstr "внутренняя ошибка при хождении по редакциям"
 
-#: builtin/checkout.c:798
+#: builtin/checkout.c:795
 msgid "Previous HEAD position was"
 msgstr "Предыдущая позиция HEAD была"
 
-#: builtin/checkout.c:825 builtin/checkout.c:1129
+#: builtin/checkout.c:822 builtin/checkout.c:1060
 msgid "You are on a branch yet to be born"
 msgstr "Вы находитесь на еще не созданной ветке"
 
-#: builtin/checkout.c:931
-#, c-format
-msgid "'%s' is already checked out at '%s'"
-msgstr "«%s» уже находится на «%s»"
-
-#: builtin/checkout.c:1036
+#: builtin/checkout.c:967
 #, c-format
 msgid "only one reference expected, %d given."
 msgstr "ожидается только одна ссылка, а передано %d."
 
-#: builtin/checkout.c:1075
+#: builtin/checkout.c:1006 builtin/worktree.c:210
 #, c-format
 msgid "invalid reference: %s"
 msgstr "неправильная ссылка: %s"
 
-#: builtin/checkout.c:1104
+#: builtin/checkout.c:1035
 #, c-format
 msgid "reference is not a tree: %s"
 msgstr "в дереве нет такой ссылки: %s"
 
-#: builtin/checkout.c:1143
+#: builtin/checkout.c:1074
 msgid "paths cannot be used with switching branches"
 msgstr "нельзя использовать пути при переключении веток"
 
-#: builtin/checkout.c:1146 builtin/checkout.c:1150
+#: builtin/checkout.c:1077 builtin/checkout.c:1081
 #, c-format
 msgid "'%s' cannot be used with switching branches"
 msgstr "нельзя использовать «%s» при переключении веток"
 
-#: builtin/checkout.c:1154 builtin/checkout.c:1157 builtin/checkout.c:1162
-#: builtin/checkout.c:1165
+#: builtin/checkout.c:1085 builtin/checkout.c:1088 builtin/checkout.c:1093
+#: builtin/checkout.c:1096
 #, c-format
 msgid "'%s' cannot be used with '%s'"
 msgstr "«%s» нельзя использовать одновременно с «%s»"
 
-#: builtin/checkout.c:1170
+#: builtin/checkout.c:1101
 #, c-format
 msgid "Cannot switch branch to a non-commit '%s'"
 msgstr "Нельзя переключить ветку на не коммит «%s»"
 
-#: builtin/checkout.c:1203 builtin/checkout.c:1205 builtin/clone.c:83
-#: builtin/remote.c:159 builtin/remote.c:161 builtin/worktree.c:282
-#: builtin/worktree.c:284
+#: builtin/checkout.c:1134 builtin/checkout.c:1136 builtin/clone.c:83
+#: builtin/remote.c:159 builtin/remote.c:161 builtin/worktree.c:317
+#: builtin/worktree.c:319
 msgid "branch"
 msgstr "ветка"
 
-#: builtin/checkout.c:1204
+#: builtin/checkout.c:1135
 msgid "create and checkout a new branch"
 msgstr "создать и перейти на новую ветку"
 
-#: builtin/checkout.c:1206
+#: builtin/checkout.c:1137
 msgid "create/reset and checkout a branch"
 msgstr "создать/сбросить и перейти на новую ветку"
 
-#: builtin/checkout.c:1207
+#: builtin/checkout.c:1138
 msgid "create reflog for new branch"
 msgstr "создать журнал ссылок для новой ветки"
 
-#: builtin/checkout.c:1208
+#: builtin/checkout.c:1139
 msgid "detach the HEAD at named commit"
 msgstr "отсоединить HEAD на указанном коммите"
 
-#: builtin/checkout.c:1209
+#: builtin/checkout.c:1140
 msgid "set upstream info for new branch"
 msgstr "установить информацию о вышестоящей ветке для новой ветки"
 
-#: builtin/checkout.c:1211
+#: builtin/checkout.c:1142
 msgid "new-branch"
 msgstr "новая-ветка"
 
-#: builtin/checkout.c:1211
+#: builtin/checkout.c:1142
 msgid "new unparented branch"
 msgstr "новая ветка без родителей"
 
-#: builtin/checkout.c:1212
+#: builtin/checkout.c:1143
 msgid "checkout our version for unmerged files"
 msgstr "перейти на нашу версию для не слитых файлов"
 
-#: builtin/checkout.c:1214
+#: builtin/checkout.c:1145
 msgid "checkout their version for unmerged files"
 msgstr "перейти на их версию для не слитых файлов"
 
-#: builtin/checkout.c:1216
+#: builtin/checkout.c:1147
 msgid "force checkout (throw away local modifications)"
 msgstr "принудительный переход (отбрасывает все локальные изменения)"
 
-#: builtin/checkout.c:1217
+#: builtin/checkout.c:1148
 msgid "perform a 3-way merge with the new branch"
 msgstr "выполнить трехходовое слияние с новой веткой"
 
-#: builtin/checkout.c:1218 builtin/merge.c:227
+#: builtin/checkout.c:1149 builtin/merge.c:227
 msgid "update ignored files (default)"
 msgstr "обновить игнорируемые файлы (по умолчанию)"
 
-#: builtin/checkout.c:1219 builtin/log.c:1239 parse-options.h:244
+#: builtin/checkout.c:1150 builtin/log.c:1264 parse-options.h:249
 msgid "style"
 msgstr "стиль"
 
-#: builtin/checkout.c:1220
+#: builtin/checkout.c:1151
 msgid "conflict style (merge or diff3)"
 msgstr "стиль конфликтов слияния (merge или diff3)"
 
-#: builtin/checkout.c:1223
+#: builtin/checkout.c:1154
 msgid "do not limit pathspecs to sparse entries only"
 msgstr "не ограничивать спецификаторы пути только частичными записями"
 
-#: builtin/checkout.c:1225
+#: builtin/checkout.c:1156
 msgid "second guess 'git checkout <no-such-branch>'"
 msgstr "пересмотр «git checkout <no-such-branch>»"
 
-#: builtin/checkout.c:1227
+#: builtin/checkout.c:1158
 msgid "do not check if another worktree is holding the given ref"
 msgstr "не проверять, что другое дерево уже содержит указанную ссылку"
 
-#: builtin/checkout.c:1252
+#: builtin/checkout.c:1181
 msgid "-b, -B and --orphan are mutually exclusive"
 msgstr "-b, -B и --orphan нельзя использовать одновременно"
 
-#: builtin/checkout.c:1269
+#: builtin/checkout.c:1198
 msgid "--track needs a branch name"
 msgstr "--track требует имя ветки"
 
-#: builtin/checkout.c:1274
+#: builtin/checkout.c:1203
 msgid "Missing branch name; try -b"
 msgstr "Пропущено имя ветки; попробуйте -b"
 
-#: builtin/checkout.c:1310
+#: builtin/checkout.c:1239
 msgid "invalid path specification"
 msgstr "неправильная спецификация пути"
 
-#: builtin/checkout.c:1317
+#: builtin/checkout.c:1246
 #, c-format
 msgid ""
 "Cannot update paths and switch to branch '%s' at the same time.\n"
 "Did you intend to checkout '%s' which can not be resolved as commit?"
 msgstr "Нельзя обновить пути и одновременно переключить на ветку «%s».\nВы хотели переключиться на «%s», что не может быть определено как коммит?"
 
-#: builtin/checkout.c:1322
+#: builtin/checkout.c:1251
 #, c-format
 msgid "git checkout: --detach does not take a path argument '%s'"
 msgstr "git checkout: --detach не принимает путь «%s» как аргумент"
 
-#: builtin/checkout.c:1326
+#: builtin/checkout.c:1255
 msgid ""
 "git checkout: --ours/--theirs, --force and --merge are incompatible when\n"
 "checking out of the index."
 msgstr "git checkout: --ours/--theirs, --force and --merge нельзя использовать одновременно при применении состояния индекса."
 
-#: builtin/clean.c:26
+#: builtin/clean.c:25
 msgid ""
 "git clean [-d] [-f] [-i] [-n] [-q] [-e <pattern>] [-x | -X] [--] <paths>..."
 msgstr "git clean [-d] [-f] [-i] [-n] [-q] [-e <шаблон>] [-x | -X] [--] <пути>…"
 
-#: builtin/clean.c:30
+#: builtin/clean.c:29
 #, c-format
 msgid "Removing %s\n"
 msgstr "Удаление %s\n"
 
-#: builtin/clean.c:31
+#: builtin/clean.c:30
 #, c-format
 msgid "Would remove %s\n"
 msgstr "Будет удалено %s\n"
 
-#: builtin/clean.c:32
+#: builtin/clean.c:31
 #, c-format
 msgid "Skipping repository %s\n"
 msgstr "Пропуск репозитория %s\n"
 
-#: builtin/clean.c:33
+#: builtin/clean.c:32
 #, c-format
 msgid "Would skip repository %s\n"
 msgstr "Будет пропущен репозиторий %s\n"
 
-#: builtin/clean.c:34
+#: builtin/clean.c:33
 #, c-format
 msgid "failed to remove %s"
 msgstr "сбой удаления %s"
 
-#: builtin/clean.c:295
+#: builtin/clean.c:317
 msgid ""
 "Prompt help:\n"
 "1          - select a numbered item\n"
 "foo        - select item based on unique prefix\n"
 "           - (empty) select nothing"
 msgstr "Справка по выделению:\n1          - выбрать указанный элемент\nfoo        - выбрать элемент с указанным префиксом\n           - (пусто) не выбирать ничего"
 
-#: builtin/clean.c:299
+#: builtin/clean.c:321
 msgid ""
 "Prompt help:\n"
 "1          - select a single item\n"
 "3-5        - select a range of items\n"
 "2-3,6-9    - select multiple ranges\n"
 "foo        - select item based on unique prefix\n"
 "-...       - unselect specified items\n"
 "*          - choose all items\n"
 "           - (empty) finish selecting"
 msgstr "Справка по выделению:\n1          - выбрать один элемент\n3-5        - выбрать диапазон элементов\n2-3,6-9    - выбрать несколько диапазонов\nfoo        - выбрать элемент с указанным префиксом\n-…       - убрать выделение с указанных элементов\n*          - выбрать все элементы\n           - (пусто) завершить выделение"
 
-#: builtin/clean.c:515
+#: builtin/clean.c:537
 #, c-format
 msgid "Huh (%s)?"
 msgstr "Хм (%s)?"
 
-#: builtin/clean.c:657
+#: builtin/clean.c:679
 #, c-format
 msgid "Input ignore patterns>> "
 msgstr "Шаблоны игнорирования ввода>> "
 
-#: builtin/clean.c:694
+#: builtin/clean.c:716
 #, c-format
 msgid "WARNING: Cannot find items matched by: %s"
 msgstr "ПРЕДУПРЕЖДЕНИЕ: Не удалось найти элементы соответствующие: %s"
 
-#: builtin/clean.c:715
+#: builtin/clean.c:737
 msgid "Select items to delete"
 msgstr "Укажите элементы для удаления"
 
 #. TRANSLATORS: Make sure to keep [y/N] as is
-#: builtin/clean.c:756
+#: builtin/clean.c:778
 #, c-format
 msgid "Remove %s [y/N]? "
 msgstr "Удалить %s [y - да/N - нет]? "
 
-#: builtin/clean.c:781
+#: builtin/clean.c:803
 msgid "Bye."
 msgstr "До свидания."
 
-#: builtin/clean.c:789
+#: builtin/clean.c:811
 msgid ""
 "clean               - start cleaning\n"
 "filter by pattern   - exclude items from deletion\n"
 "select by numbers   - select items to be deleted by numbers\n"
 "ask each            - confirm each deletion (like \"rm -i\")\n"
 "quit                - stop cleaning\n"
 "help                - this screen\n"
 "?                   - help for prompt selection"
 msgstr "clean               - начать очистку\nfilter by pattern   - исключить удаление элементов\nselect by numbers   - исключить удаление элементов по номерам\nask each            - запрашивать подтверждение на удаление каждого элемента (как «rm -i»)\nquit                - прекратить очистку\nhelp                - этот экран\n?                   - справка по выделению"
 
-#: builtin/clean.c:816
+#: builtin/clean.c:838
 msgid "*** Commands ***"
 msgstr "*** Команды ***"
 
-#: builtin/clean.c:817
+#: builtin/clean.c:839
 msgid "What now"
 msgstr "Что теперь"
 
-#: builtin/clean.c:825
+#: builtin/clean.c:847
 msgid "Would remove the following item:"
 msgid_plural "Would remove the following items:"
 msgstr[0] "Удалить следующие элементы:"
 msgstr[1] "Удалить следующие элементы:"
 msgstr[2] "Удалить следующие элементы:"
 msgstr[3] "Удалить следующие элементы:"
 
-#: builtin/clean.c:842
+#: builtin/clean.c:864
 msgid "No more files to clean, exiting."
 msgstr "Больше нет файлов для очистки, выходим."
 
-#: builtin/clean.c:873
+#: builtin/clean.c:895
 msgid "do not print names of files removed"
 msgstr "не выводить имена удаляемых файлов"
 
-#: builtin/clean.c:875
+#: builtin/clean.c:897
 msgid "force"
 msgstr "принудительно"
 
-#: builtin/clean.c:876
+#: builtin/clean.c:898
 msgid "interactive cleaning"
 msgstr "интерактивная очистка"
 
-#: builtin/clean.c:878
+#: builtin/clean.c:900
 msgid "remove whole directories"
 msgstr "удалить каталоги полностью"
 
-#: builtin/clean.c:879 builtin/describe.c:407 builtin/grep.c:714
+#: builtin/clean.c:901 builtin/describe.c:407 builtin/grep.c:714
 #: builtin/ls-files.c:443 builtin/name-rev.c:311 builtin/show-ref.c:187
 msgid "pattern"
 msgstr "шаблон"
 
-#: builtin/clean.c:880
+#: builtin/clean.c:902
 msgid "add <pattern> to ignore rules"
 msgstr "добавить <шаблон> в правила игнорирования"
 
-#: builtin/clean.c:881
+#: builtin/clean.c:903
 msgid "remove ignored files, too"
 msgstr "также удалить игнорируемые файлы"
 
-#: builtin/clean.c:883
+#: builtin/clean.c:905
 msgid "remove only ignored files"
 msgstr "удалить только игнорируемые файлы"
 
-#: builtin/clean.c:901
+#: builtin/clean.c:923
 msgid "-x and -X cannot be used together"
 msgstr "нельзя использовать одновременно -x и -X"
 
-#: builtin/clean.c:905
+#: builtin/clean.c:927
 msgid ""
 "clean.requireForce set to true and neither -i, -n, nor -f given; refusing to"
 " clean"
 msgstr "clean.requireForce установлен как true и ни одна из опций -i, -n или -f не указана; отказ очистки"
 
-#: builtin/clean.c:908
+#: builtin/clean.c:930
 msgid ""
 "clean.requireForce defaults to true and neither -i, -n, nor -f given; "
 "refusing to clean"
 msgstr "clean.requireForce установлен по умолчанию как true и ни одна из опций -i, -n или -f не указана; отказ очистки"
 
 #: builtin/clone.c:37
 msgid "git clone [<options>] [--] <repo> [<dir>]"
 msgstr "git clone [<опции>] [--] <репозиторий> [<каталог>]"
 
-#: builtin/clone.c:57 builtin/fetch.c:111 builtin/merge.c:224
-#: builtin/push.c:523
+#: builtin/clone.c:57 builtin/fetch.c:112 builtin/merge.c:224
+#: builtin/pull.c:109 builtin/push.c:560 builtin/send-pack.c:168
 msgid "force progress reporting"
 msgstr "принудительно выводить прогресс"
 
 #: builtin/clone.c:59
 msgid "don't create a checkout"
 msgstr "не переключать рабочую копию на HEAD"
 
-#: builtin/clone.c:60 builtin/clone.c:62 builtin/init-db.c:503
+#: builtin/clone.c:60 builtin/clone.c:62 builtin/init-db.c:504
 msgid "create a bare repository"
 msgstr "создать голый репозиторий"
 
 #: builtin/clone.c:64
 msgid "create a mirror repository (implies bare)"
 msgstr "создать зеркало репозитория (включает в себя и параметр bare)"
@@ -3855,17 +4327,17 @@
 msgstr "настроить как общедоступный репозиторий"
 
 #: builtin/clone.c:72 builtin/clone.c:74
 msgid "initialize submodules in the clone"
 msgstr "инициализировать подмодули в клоне"
 
-#: builtin/clone.c:75 builtin/init-db.c:500
+#: builtin/clone.c:75 builtin/init-db.c:501
 msgid "template-directory"
 msgstr "каталог-шаблонов"
 
-#: builtin/clone.c:76 builtin/init-db.c:501
+#: builtin/clone.c:76 builtin/init-db.c:502
 msgid "directory from which templates will be used"
 msgstr "каталог, шаблоны из которого будут использованы"
 
 #: builtin/clone.c:78
 msgid "reference repository"
 msgstr "ссылаемый репозиторий"
@@ -3887,212 +4359,208 @@
 msgstr "перейти на <ветку>, вместо HEAD внешнего репозитория"
 
 #: builtin/clone.c:86
 msgid "path to git-upload-pack on the remote"
 msgstr "путь к git-upload-pack на внешнем репозитории"
 
-#: builtin/clone.c:87 builtin/fetch.c:112 builtin/grep.c:659
+#: builtin/clone.c:87 builtin/fetch.c:113 builtin/grep.c:659
+#: builtin/pull.c:186
 msgid "depth"
 msgstr "глубина"
 
 #: builtin/clone.c:88
 msgid "create a shallow clone of that depth"
 msgstr "сделать частичный клон указанной глубины"
 
 #: builtin/clone.c:90
 msgid "clone only one branch, HEAD or --branch"
 msgstr "клонировать только одну ветку, HEAD или --branch"
 
-#: builtin/clone.c:91 builtin/init-db.c:509
+#: builtin/clone.c:91 builtin/init-db.c:510
 msgid "gitdir"
 msgstr "каталог-git"
 
-#: builtin/clone.c:92 builtin/init-db.c:510
+#: builtin/clone.c:92 builtin/init-db.c:511
 msgid "separate git dir from working tree"
 msgstr "разместить каталог git отдельно от рабочей копии"
 
 #: builtin/clone.c:93
 msgid "key=value"
 msgstr "ключ=значение"
 
 #: builtin/clone.c:94
 msgid "set config inside the new repository"
 msgstr "установить параметры внутри нового репозитория"
 
-#: builtin/clone.c:240
+#: builtin/clone.c:298
 #, c-format
 msgid "reference repository '%s' is not a local repository."
 msgstr "ссылаемый репозиторий «%s» не является локальным."
 
-#: builtin/clone.c:244
+#: builtin/clone.c:302
 #, c-format
 msgid "reference repository '%s' is shallow"
 msgstr "ссылаемый репозиторий «%s» является частичным"
 
-#: builtin/clone.c:247
-#, c-format
-msgid "reference repository '%s' is grafted"
-msgstr "ссылаемый репозиторий «%s» является сращенным"
-
-#: builtin/clone.c:310
-#, c-format
-msgid "failed to create directory '%s'"
-msgstr "не удалось создать каталог «%s»"
+#: builtin/clone.c:305
+#, c-format
+msgid "reference repository '%s' is grafted"
+msgstr "ссылаемый репозиторий «%s» является сращенным"
 
-#: builtin/clone.c:312 builtin/diff.c:84
+#: builtin/clone.c:370 builtin/diff.c:84
 #, c-format
 msgid "failed to stat '%s'"
 msgstr "не удалось выполнить stat «%s»"
 
-#: builtin/clone.c:314
+#: builtin/clone.c:372
 #, c-format
 msgid "%s exists and is not a directory"
 msgstr "%s уже существует и не является каталогом"
 
-#: builtin/clone.c:328
+#: builtin/clone.c:386
 #, c-format
 msgid "failed to stat %s\n"
 msgstr "не удалось выполнить stat %s\n"
 
-#: builtin/clone.c:350
+#: builtin/clone.c:408
 #, c-format
 msgid "failed to create link '%s'"
 msgstr "не удалось создать ссылку «%s»"
 
-#: builtin/clone.c:354
+#: builtin/clone.c:412
 #, c-format
 msgid "failed to copy file to '%s'"
 msgstr "не удалось копировать файл в «%s»"
 
-#: builtin/clone.c:377 builtin/clone.c:551
+#: builtin/clone.c:435 builtin/clone.c:619
 #, c-format
 msgid "done.\n"
 msgstr "готово.\n"
 
-#: builtin/clone.c:389
+#: builtin/clone.c:447
 msgid ""
 "Clone succeeded, but checkout failed.\n"
 "You can inspect what was checked out with 'git status'\n"
 "and retry the checkout with 'git checkout -f HEAD'\n"
 msgstr "Клонирование прошло успешно, но во время перехода на версию произошла ошибка.\nС помощь команды «git status» вы можете просмотреть, какие файлы были обновлены, а повторить попытку перехода на версию с помощью «git checkout -f HEAD»\n"
 
-#: builtin/clone.c:466
+#: builtin/clone.c:524
 #, c-format
 msgid "Could not find remote branch %s to clone."
 msgstr "Не удалось найти внешнюю ветку %s для клонирования."
 
-#: builtin/clone.c:546
+#: builtin/clone.c:614
 #, c-format
 msgid "Checking connectivity... "
 msgstr "Проверка соединения… "
 
-#: builtin/clone.c:549
+#: builtin/clone.c:617
 msgid "remote did not send all necessary objects"
 msgstr "внешний репозиторий прислал не все необходимые объекты"
 
-#: builtin/clone.c:613
+#: builtin/clone.c:681
 msgid "remote HEAD refers to nonexistent ref, unable to checkout.\n"
 msgstr "внешний HEAD ссылается на несуществующую ссылку, нельзя перейти на такую версию.\n"
 
-#: builtin/clone.c:644
+#: builtin/clone.c:712
 msgid "unable to checkout working tree"
 msgstr "не удалось перейти на версию в рабочем каталоге"
 
-#: builtin/clone.c:731
+#: builtin/clone.c:799
 msgid "cannot repack to clean up"
 msgstr "не удалось выполнить перепаковку для очистки"
 
-#: builtin/clone.c:733
+#: builtin/clone.c:801
 msgid "cannot unlink temporary alternates file"
 msgstr "не удалось отсоединить временные альтернативные файлы"
 
-#: builtin/clone.c:763
+#: builtin/clone.c:831
 msgid "Too many arguments."
 msgstr "Слишком много аргументов."
 
-#: builtin/clone.c:767
+#: builtin/clone.c:835
 msgid "You must specify a repository to clone."
 msgstr "Вы должны указать репозиторий для клонирования."
 
-#: builtin/clone.c:778
+#: builtin/clone.c:846
 #, c-format
 msgid "--bare and --origin %s options are incompatible."
 msgstr "--bare и --origin %s нельзя использовать одновременно."
 
-#: builtin/clone.c:781
+#: builtin/clone.c:849
 msgid "--bare and --separate-git-dir are incompatible."
 msgstr "--bare и --separate-git-dir нельзя использовать одновременно."
 
-#: builtin/clone.c:794
+#: builtin/clone.c:862
 #, c-format
 msgid "repository '%s' does not exist"
 msgstr "репозиторий «%s» не существует"
 
-#: builtin/clone.c:800 builtin/fetch.c:1160
+#: builtin/clone.c:868 builtin/fetch.c:1168
 #, c-format
 msgid "depth %s is not a positive number"
 msgstr "глубина %s не является положительным числом"
 
-#: builtin/clone.c:810
+#: builtin/clone.c:878
 #, c-format
 msgid "destination path '%s' already exists and is not an empty directory."
 msgstr "целевой путь «%s» уже существует и не является пустым каталогом."
 
-#: builtin/clone.c:820
+#: builtin/clone.c:888
 #, c-format
 msgid "working tree '%s' already exists."
 msgstr "рабочий каталог «%s» уже существует."
 
-#: builtin/clone.c:835 builtin/clone.c:846 builtin/worktree.c:193
-#: builtin/worktree.c:220
+#: builtin/clone.c:903 builtin/clone.c:914 builtin/worktree.c:218
+#: builtin/worktree.c:245
 #, c-format
 msgid "could not create leading directories of '%s'"
 msgstr "не удалось создать родительские каталоги для «%s»"
 
-#: builtin/clone.c:838
+#: builtin/clone.c:906
 #, c-format
 msgid "could not create work tree dir '%s'"
 msgstr "не удалось создать рабочий каталог «%s»"
 
-#: builtin/clone.c:856
+#: builtin/clone.c:924
 #, c-format
 msgid "Cloning into bare repository '%s'...\n"
 msgstr "Клонирование в голый репозиторий «%s»…\n"
 
-#: builtin/clone.c:858
+#: builtin/clone.c:926
 #, c-format
 msgid "Cloning into '%s'...\n"
 msgstr "Клонирование в «%s»…\n"
 
-#: builtin/clone.c:883
+#: builtin/clone.c:951
 msgid "--dissociate given, but there is no --reference"
 msgstr "передана опция --dissociate, но не передана --reference"
 
-#: builtin/clone.c:900
+#: builtin/clone.c:968
 msgid "--depth is ignored in local clones; use file:// instead."
 msgstr "--depth игнорируется на локальных клонах; вместо этого используйте file://."
 
-#: builtin/clone.c:903
+#: builtin/clone.c:971
 msgid "source repository is shallow, ignoring --local"
 msgstr "исходный репозиторий является частичным, --local игнорируется"
 
-#: builtin/clone.c:908
+#: builtin/clone.c:976
 msgid "--local is ignored"
 msgstr "--local игнорируется"
 
-#: builtin/clone.c:912
+#: builtin/clone.c:980
 #, c-format
 msgid "Don't know how to clone %s"
 msgstr "Не знаю как клонировать %s"
 
-#: builtin/clone.c:961 builtin/clone.c:969
+#: builtin/clone.c:1029 builtin/clone.c:1037
 #, c-format
 msgid "Remote branch %s not found in upstream %s"
 msgstr "Внешняя ветка %s не найдена в вышестоящем репозитории %s"
 
-#: builtin/clone.c:972
+#: builtin/clone.c:1040
 msgid "You appear to have cloned an empty repository."
 msgstr "Похоже, что вы клонировали пустой репозиторий."
 
 #: builtin/column.c:9
 msgid "git column [<options>]"
 msgstr "git column [<опции>]"
@@ -4193,635 +4661,617 @@
 msgstr "Если вы хотите пропустит этот коммит, используйте команду:\n\n    git reset\n\nПосле этого «git cherry-pick --continue» продолжит отбор лучшего\nв оставшихся коммитах.\n"
 
 #: builtin/commit.c:304
 msgid "failed to unpack HEAD tree object"
 msgstr "сбой распаковки объекта дерева HEAD"
 
-#: builtin/commit.c:344
+#: builtin/commit.c:345
 msgid "unable to create temporary index"
 msgstr "не удалось создать временный индекс"
 
-#: builtin/commit.c:350
+#: builtin/commit.c:351
 msgid "interactive add failed"
 msgstr "сбой интерактивного добавления"
 
-#: builtin/commit.c:361
-msgid "unable to write index file"
-msgstr "не удалось записать индекс"
-
-#: builtin/commit.c:363
+#: builtin/commit.c:364
 msgid "unable to update temporary index"
 msgstr "не удалось обновить временный индекс"
 
-#: builtin/commit.c:365
+#: builtin/commit.c:366
 msgid "Failed to update main cache tree"
 msgstr "Сбой при обновлении основного кэша дерева"
 
-#: builtin/commit.c:389 builtin/commit.c:414 builtin/commit.c:463
+#: builtin/commit.c:390 builtin/commit.c:413 builtin/commit.c:462
 msgid "unable to write new_index file"
 msgstr "не удалось записать файл new_index"
 
-#: builtin/commit.c:445
+#: builtin/commit.c:444
 msgid "cannot do a partial commit during a merge."
 msgstr "нельзя создать частичный коммит во время слияния."
 
-#: builtin/commit.c:447
+#: builtin/commit.c:446
 msgid "cannot do a partial commit during a cherry-pick."
 msgstr "нельзя создать частичный коммит во время отбора лучшего коммита."
 
-#: builtin/commit.c:456
+#: builtin/commit.c:455
 msgid "cannot read the index"
 msgstr "не удалось прочитать индекс"
 
-#: builtin/commit.c:475
+#: builtin/commit.c:474
 msgid "unable to write temporary index file"
 msgstr "не удалось записать временный файл индекса"
 
-#: builtin/commit.c:580
+#: builtin/commit.c:579
 #, c-format
 msgid "commit '%s' lacks author header"
 msgstr "у коммита «%s» отсутствует автор в заголовке"
 
-#: builtin/commit.c:582
+#: builtin/commit.c:581
 #, c-format
 msgid "commit '%s' has malformed author line"
 msgstr "у коммита «%s» автор в неверном формате"
 
-#: builtin/commit.c:601
+#: builtin/commit.c:600
 msgid "malformed --author parameter"
 msgstr "параметр --author в неверном формате"
 
-#: builtin/commit.c:609
+#: builtin/commit.c:608
 #, c-format
 msgid "invalid date format: %s"
 msgstr "неправильный формат даты: %s"
 
-#: builtin/commit.c:653
+#: builtin/commit.c:652
 msgid ""
 "unable to select a comment character that is not used\n"
 "in the current commit message"
 msgstr "нельзя выбрать символ комментария, который\nне используется в текущем сообщении коммита"
 
-#: builtin/commit.c:690 builtin/commit.c:723 builtin/commit.c:1080
+#: builtin/commit.c:689 builtin/commit.c:722 builtin/commit.c:1079
 #, c-format
 msgid "could not lookup commit %s"
 msgstr "не удалось запросить коммит %s"
 
-#: builtin/commit.c:702 builtin/shortlog.c:273
+#: builtin/commit.c:701 builtin/shortlog.c:273
 #, c-format
 msgid "(reading log message from standard input)\n"
 msgstr "(чтение файла журнала из стандартного ввода)\n"
 
-#: builtin/commit.c:704
+#: builtin/commit.c:703
 msgid "could not read log from standard input"
 msgstr "не удалось прочитать файл журнала из стандартного ввода"
 
-#: builtin/commit.c:708
+#: builtin/commit.c:707
 #, c-format
 msgid "could not read log file '%s'"
 msgstr "не удалось прочитать файл журнала «%s»"
 
-#: builtin/commit.c:730
+#: builtin/commit.c:729
 msgid "could not read MERGE_MSG"
 msgstr "не удалось прочитать MERGE_MSG"
 
-#: builtin/commit.c:734
+#: builtin/commit.c:733
 msgid "could not read SQUASH_MSG"
 msgstr "не удалось прочитать SQUASH_MSG"
 
-#: builtin/commit.c:738 builtin/merge.c:1079
-#, c-format
-msgid "could not read '%s'"
-msgstr "не удалось прочитать «%s»"
-
-#: builtin/commit.c:785
+#: builtin/commit.c:784
 msgid "could not write commit template"
 msgstr "не удалось записать шаблон описания коммита"
 
-#: builtin/commit.c:803
+#: builtin/commit.c:802
 #, c-format
 msgid ""
 "\n"
 "It looks like you may be committing a merge.\n"
 "If this is not correct, please remove the file\n"
 "\t%s\n"
 "and try again.\n"
 msgstr "\nПохоже, что вы пытаетесь закоммитить слияние.\nЕсли это ошибка, пожалуйста удалите файл\n\t%s\nи попробуйте снова.\n"
 
-#: builtin/commit.c:808
+#: builtin/commit.c:807
 #, c-format
 msgid ""
 "\n"
 "It looks like you may be committing a cherry-pick.\n"
 "If this is not correct, please remove the file\n"
 "\t%s\n"
 "and try again.\n"
 msgstr "\nПохоже, что вы пытаетесь закоммитить отбор лучшего.\nЕсли это ошибка, пожалуйста удалите файл\n\t%s\nи попробуйте снова.\n"
 
-#: builtin/commit.c:821
+#: builtin/commit.c:820
 #, c-format
 msgid ""
 "Please enter the commit message for your changes. Lines starting\n"
 "with '%c' will be ignored, and an empty message aborts the commit.\n"
 msgstr "Пожалуйста, введите сообщение коммита для ваших изменений. Строки,\nначинающиеся с «%c» будут проигнорированы, а пустое сообщение\nотменяет процесс коммита.\n"
 
-#: builtin/commit.c:828
+#: builtin/commit.c:827
 #, c-format
 msgid ""
 "Please enter the commit message for your changes. Lines starting\n"
 "with '%c' will be kept; you may remove them yourself if you want to.\n"
 "An empty message aborts the commit.\n"
 msgstr "Пожалуйста, введите сообщение коммита для ваших изменений. Строки,\nначинающиеся с «%c» будут оставлены; вы можете удалить их вручную,\nесли хотите. Пустое сообщение отменяет процесс коммита.\n"
 
-#: builtin/commit.c:848
+#: builtin/commit.c:847
 #, c-format
 msgid "%sAuthor:    %.*s <%.*s>"
 msgstr "%sАвтор:     %.*s <%.*s>"
 
-#: builtin/commit.c:856
+#: builtin/commit.c:855
 #, c-format
 msgid "%sDate:      %s"
 msgstr "%sДата:      %s"
 
-#: builtin/commit.c:863
+#: builtin/commit.c:862
 #, c-format
 msgid "%sCommitter: %.*s <%.*s>"
 msgstr "%sКоммитер:  %.*s <%.*s>"
 
-#: builtin/commit.c:881
+#: builtin/commit.c:880
 msgid "Cannot read index"
 msgstr "Не удалось прочитать индекс"
 
-#: builtin/commit.c:938
+#: builtin/commit.c:937
 msgid "Error building trees"
 msgstr "Ошибка при построении деревьев"
 
-#: builtin/commit.c:953 builtin/tag.c:495
+#: builtin/commit.c:952 builtin/tag.c:495
 #, c-format
 msgid "Please supply the message using either -m or -F option.\n"
 msgstr "Пожалуйста, укажите сообщение, при указании опций -m или -F.\n"
 
-#: builtin/commit.c:1055
+#: builtin/commit.c:1054
 #, c-format
 msgid "--author '%s' is not 'Name <email>' and matches no existing author"
 msgstr "--author «%s» не в формате «Имя <почта>» и не совпадает с существующим автором"
 
-#: builtin/commit.c:1070 builtin/commit.c:1310
+#: builtin/commit.c:1069 builtin/commit.c:1309
 #, c-format
 msgid "Invalid untracked files mode '%s'"
 msgstr "Неправильный режим неотслеживаемых файлов «%s»"
 
-#: builtin/commit.c:1107
+#: builtin/commit.c:1106
 msgid "--long and -z are incompatible"
 msgstr "--long и -z нельзя использовать одновременно"
 
-#: builtin/commit.c:1137
+#: builtin/commit.c:1136
 msgid "Using both --reset-author and --author does not make sense"
 msgstr "Указание одновременно опций --reset-author и --author не имеет смысла"
 
-#: builtin/commit.c:1146
+#: builtin/commit.c:1145
 msgid "You have nothing to amend."
 msgstr "Нечего исправлять."
 
-#: builtin/commit.c:1149
+#: builtin/commit.c:1148
 msgid "You are in the middle of a merge -- cannot amend."
 msgstr "Вы в процессе слияния —  сейчас нельзя исправлять."
 
-#: builtin/commit.c:1151
+#: builtin/commit.c:1150
 msgid "You are in the middle of a cherry-pick -- cannot amend."
 msgstr "Вы в процессе отбора лучшего —  сейчас нельзя исправлять."
 
-#: builtin/commit.c:1154
+#: builtin/commit.c:1153
 msgid "Options --squash and --fixup cannot be used together"
 msgstr "Опции --squash и --fixup не могут использоваться одновременно"
 
-#: builtin/commit.c:1164
+#: builtin/commit.c:1163
 msgid "Only one of -c/-C/-F/--fixup can be used."
 msgstr "Может использоваться только одна из опций -c/-C/-F/--fixup."
 
-#: builtin/commit.c:1166
+#: builtin/commit.c:1165
 msgid "Option -m cannot be combined with -c/-C/-F/--fixup."
 msgstr "Опция -m не может использоваться с -c/-C/-F/--fixup."
 
-#: builtin/commit.c:1174
+#: builtin/commit.c:1173
 msgid "--reset-author can be used only with -C, -c or --amend."
 msgstr "--reset-author может использоваться только одновременно с опциями -C, -c или --amend."
 
-#: builtin/commit.c:1191
+#: builtin/commit.c:1190
 msgid "Only one of --include/--only/--all/--interactive/--patch can be used."
 msgstr "Может использоваться только одна из опций --include/--only/--all/--interactive/--patch."
 
-#: builtin/commit.c:1193
+#: builtin/commit.c:1192
 msgid "No paths with --include/--only does not make sense."
 msgstr "Указание путей каталогов с опциями --include/--only не имеет смысла."
 
-#: builtin/commit.c:1195
+#: builtin/commit.c:1194
 msgid "Clever... amending the last one with dirty index."
 msgstr "Умно… отмена последнего с измененным индексом."
 
-#: builtin/commit.c:1197
+#: builtin/commit.c:1196
 msgid "Explicit paths specified without -i or -o; assuming --only paths..."
 msgstr "Пути явно указаны пути без опций -i или -o; предполагаю опцию --only…"
 
-#: builtin/commit.c:1209 builtin/tag.c:728
+#: builtin/commit.c:1208 builtin/tag.c:730
 #, c-format
 msgid "Invalid cleanup mode %s"
 msgstr "Неправильное значение режима очистки %s"
 
-#: builtin/commit.c:1214
+#: builtin/commit.c:1213
 msgid "Paths with -a does not make sense."
 msgstr "С опцией -a указание пути не имеет смысла."
 
-#: builtin/commit.c:1324 builtin/commit.c:1603
+#: builtin/commit.c:1323 builtin/commit.c:1602
 msgid "show status concisely"
 msgstr "кратко показать статус"
 
-#: builtin/commit.c:1326 builtin/commit.c:1605
+#: builtin/commit.c:1325 builtin/commit.c:1604
 msgid "show branch information"
 msgstr "показать информацию о версии"
 
-#: builtin/commit.c:1328 builtin/commit.c:1607 builtin/push.c:509
+#: builtin/commit.c:1327 builtin/commit.c:1606 builtin/push.c:546
 msgid "machine-readable output"
 msgstr "машиночитаемый вывод"
 
-#: builtin/commit.c:1331 builtin/commit.c:1609
+#: builtin/commit.c:1330 builtin/commit.c:1608
 msgid "show status in long format (default)"
 msgstr "показать статус в длинном формате (по умолчанию)"
 
-#: builtin/commit.c:1334 builtin/commit.c:1612
+#: builtin/commit.c:1333 builtin/commit.c:1611
 msgid "terminate entries with NUL"
 msgstr "завершать записи НУЛЕВЫМ байтом"
 
-#: builtin/commit.c:1336 builtin/commit.c:1615 builtin/fast-export.c:980
-#: builtin/fast-export.c:983 builtin/tag.c:603
+#: builtin/commit.c:1335 builtin/commit.c:1614 builtin/fast-export.c:981
+#: builtin/fast-export.c:984 builtin/tag.c:604
 msgid "mode"
 msgstr "режим"
 
-#: builtin/commit.c:1337 builtin/commit.c:1615
+#: builtin/commit.c:1336 builtin/commit.c:1614
 msgid "show untracked files, optional modes: all, normal, no. (Default: all)"
 msgstr "показать неотслеживаемые файлы, опциональные режимы: all (все), normal (как обычно), no (нет). (По умолчанию: all)"
 
-#: builtin/commit.c:1340
+#: builtin/commit.c:1339
 msgid "show ignored files"
 msgstr "показать игнорируемые файлы"
 
-#: builtin/commit.c:1341 parse-options.h:152
+#: builtin/commit.c:1340 parse-options.h:155
 msgid "when"
 msgstr "когда"
 
-#: builtin/commit.c:1342
+#: builtin/commit.c:1341
 msgid ""
 "ignore changes to submodules, optional when: all, dirty, untracked. "
 "(Default: all)"
 msgstr "игнорировать изменения в подмодулях, опционально когда: all (всегда), dirty (измененные), untracked (неотслеживаемые). (По умолчанию: all)"
 
-#: builtin/commit.c:1344
+#: builtin/commit.c:1343
 msgid "list untracked files in columns"
 msgstr "показать неотслеживаемые файлы по столбцам"
 
-#: builtin/commit.c:1430
+#: builtin/commit.c:1429
 msgid "couldn't look up newly created commit"
 msgstr "нельзя запросить новосозданный коммит"
 
-#: builtin/commit.c:1432
+#: builtin/commit.c:1431
 msgid "could not parse newly created commit"
 msgstr "нельзя разобрать новосозданный коммит"
 
-#: builtin/commit.c:1477
+#: builtin/commit.c:1476
 msgid "detached HEAD"
 msgstr "отделенный HEAD"
 
-#: builtin/commit.c:1480
+#: builtin/commit.c:1479
 msgid " (root-commit)"
 msgstr " (корневой коммит)"
 
-#: builtin/commit.c:1573
+#: builtin/commit.c:1572
 msgid "suppress summary after successful commit"
 msgstr "не выводить сводку после успешного коммита"
 
-#: builtin/commit.c:1574
+#: builtin/commit.c:1573
 msgid "show diff in commit message template"
 msgstr "добавить список изменений в шаблон сообщения коммита"
 
-#: builtin/commit.c:1576
+#: builtin/commit.c:1575
 msgid "Commit message options"
 msgstr "Опции сообщения коммита"
 
-#: builtin/commit.c:1577 builtin/tag.c:601
+#: builtin/commit.c:1576 builtin/tag.c:602
 msgid "read message from file"
 msgstr "прочитать сообщение из файла"
 
-#: builtin/commit.c:1578
+#: builtin/commit.c:1577
 msgid "author"
 msgstr "автор"
 
-#: builtin/commit.c:1578
+#: builtin/commit.c:1577
 msgid "override author for commit"
 msgstr "подменить автора коммита"
 
-#: builtin/commit.c:1579 builtin/gc.c:280
+#: builtin/commit.c:1578 builtin/gc.c:268
 msgid "date"
 msgstr "дата"
 
-#: builtin/commit.c:1579
+#: builtin/commit.c:1578
 msgid "override date for commit"
 msgstr "подменить дату коммита"
 
-#: builtin/commit.c:1580 builtin/merge.c:218 builtin/notes.c:391
-#: builtin/notes.c:554 builtin/tag.c:599
+#: builtin/commit.c:1579 builtin/merge.c:218 builtin/notes.c:392
+#: builtin/notes.c:555 builtin/tag.c:600
 msgid "message"
 msgstr "сообщение"
 
-#: builtin/commit.c:1580
+#: builtin/commit.c:1579
 msgid "commit message"
 msgstr "сообщение коммита"
 
-#: builtin/commit.c:1581
+#: builtin/commit.c:1580
 msgid "reuse and edit message from specified commit"
 msgstr "использовать и отредактировать сообщение от указанного коммита"
 
-#: builtin/commit.c:1582
+#: builtin/commit.c:1581
 msgid "reuse message from specified commit"
 msgstr "использовать сообщение указанного коммита"
 
-#: builtin/commit.c:1583
+#: builtin/commit.c:1582
 msgid "use autosquash formatted message to fixup specified commit"
 msgstr "использовать форматированное сообщение автоуплотнения для исправления указанного коммита"
 
-#: builtin/commit.c:1584
+#: builtin/commit.c:1583
 msgid "use autosquash formatted message to squash specified commit"
 msgstr "использовать форматированное сообщение автоуплотнения для уплотнения указанного коммита"
 
-#: builtin/commit.c:1585
+#: builtin/commit.c:1584
 msgid "the commit is authored by me now (used with -C/-c/--amend)"
 msgstr "коммит теперь за моим авторством (с использованием -C/-c/--amend)"
 
-#: builtin/commit.c:1586 builtin/log.c:1191 builtin/revert.c:86
+#: builtin/commit.c:1585 builtin/log.c:1216 builtin/revert.c:86
 msgid "add Signed-off-by:"
 msgstr "добавить Signed-off-by:"
 
-#: builtin/commit.c:1587
+#: builtin/commit.c:1586
 msgid "use specified template file"
 msgstr "использовать указанный файл шаблона"
 
-#: builtin/commit.c:1588
+#: builtin/commit.c:1587
 msgid "force edit of commit"
 msgstr "принудительно редактировать коммит"
 
-#: builtin/commit.c:1589
+#: builtin/commit.c:1588
 msgid "default"
 msgstr "по-умолчанию"
 
-#: builtin/commit.c:1589 builtin/tag.c:604
+#: builtin/commit.c:1588 builtin/tag.c:605
 msgid "how to strip spaces and #comments from message"
 msgstr "как удалять пробелы и #комментарии из сообщения коммита"
 
-#: builtin/commit.c:1590
+#: builtin/commit.c:1589
 msgid "include status in commit message template"
 msgstr "включить статус файлов в шаблон сообщения коммита"
 
-#: builtin/commit.c:1591 builtin/merge.c:225 builtin/revert.c:92
-#: builtin/tag.c:605
-msgid "key-id"
-msgstr "key-id"
-
-#: builtin/commit.c:1592 builtin/merge.c:226 builtin/revert.c:93
+#: builtin/commit.c:1591 builtin/merge.c:226 builtin/pull.c:156
+#: builtin/revert.c:93
 msgid "GPG sign commit"
 msgstr "подписать коммит с помощью GPG"
 
-#: builtin/commit.c:1595
+#: builtin/commit.c:1594
 msgid "Commit contents options"
 msgstr "Опции содержимого коммита"
 
-#: builtin/commit.c:1596
+#: builtin/commit.c:1595
 msgid "commit all changed files"
 msgstr "закоммитить все измененные файлы"
 
-#: builtin/commit.c:1597
+#: builtin/commit.c:1596
 msgid "add specified files to index for commit"
 msgstr "добавить указанные файлы в индекс для коммита"
 
-#: builtin/commit.c:1598
+#: builtin/commit.c:1597
 msgid "interactively add files"
 msgstr "интерактивное добавление файлов"
 
-#: builtin/commit.c:1599
+#: builtin/commit.c:1598
 msgid "interactively add changes"
 msgstr "интерактивное добавление изменений"
 
-#: builtin/commit.c:1600
+#: builtin/commit.c:1599
 msgid "commit only specified files"
 msgstr "закоммитить только указанные файлы"
 
-#: builtin/commit.c:1601
+#: builtin/commit.c:1600
 msgid "bypass pre-commit hook"
 msgstr "пропустить перехватчик перед-коммитом"
 
-#: builtin/commit.c:1602
+#: builtin/commit.c:1601
 msgid "show what would be committed"
 msgstr "показать, что будет закоммичено"
 
-#: builtin/commit.c:1613
+#: builtin/commit.c:1612
 msgid "amend previous commit"
 msgstr "исправить предыдущий коммит"
 
-#: builtin/commit.c:1614
+#: builtin/commit.c:1613
 msgid "bypass post-rewrite hook"
 msgstr "пропустить перехватчик после-перезаписи"
 
-#: builtin/commit.c:1619
+#: builtin/commit.c:1618
 msgid "ok to record an empty change"
 msgstr "разрешить запись пустого коммита"
 
-#: builtin/commit.c:1621
+#: builtin/commit.c:1620
 msgid "ok to record a change with an empty message"
 msgstr "разрешить запись изменений с пустым сообщением"
 
-#: builtin/commit.c:1650
+#: builtin/commit.c:1649
 msgid "could not parse HEAD commit"
 msgstr "не удалось разобрать HEAD коммит"
 
-#: builtin/commit.c:1689 builtin/merge.c:1076
-#, c-format
-msgid "could not open '%s' for reading"
-msgstr "не удалось открыть «%s» для чтения"
-
-#: builtin/commit.c:1696
+#: builtin/commit.c:1695
 #, c-format
 msgid "Corrupt MERGE_HEAD file (%s)"
 msgstr "Файл MERGE_HEAD поврежден (%s)"
 
-#: builtin/commit.c:1703
+#: builtin/commit.c:1702
 msgid "could not read MERGE_MODE"
 msgstr "не удалось прочитать MERGE_MODE"
 
-#: builtin/commit.c:1722
+#: builtin/commit.c:1721
 #, c-format
 msgid "could not read commit message: %s"
 msgstr "не удалось открыть сообщение коммита: %s"
 
-#: builtin/commit.c:1733
+#: builtin/commit.c:1732
 #, c-format
 msgid "Aborting commit; you did not edit the message.\n"
 msgstr "Отмена коммита; вы не изменили сообщение.\n"
 
-#: builtin/commit.c:1738
+#: builtin/commit.c:1737
 #, c-format
 msgid "Aborting commit due to empty commit message.\n"
 msgstr "Отмена коммита из-за пустого сообщения коммита.\n"
 
-#: builtin/commit.c:1753 builtin/merge.c:829 builtin/merge.c:854
-msgid "failed to write commit object"
-msgstr "сбой записи объекта коммита"
-
-#: builtin/commit.c:1786
+#: builtin/commit.c:1785
 msgid ""
 "Repository has been updated, but unable to write\n"
 "new_index file. Check that disk is not full and quota is\n"
 "not exceeded, and then \"git reset HEAD\" to recover."
 msgstr "Репозиторий был обновлен, но не удалось записать файл new_index. Удостоверьтесь, что на диске есть свободное место и квота не исчерпана, а после этого запустите «git reset HEAD» для восстановления."
 
 #: builtin/config.c:8
 msgid "git config [<options>]"
 msgstr "git config [<опции>]"
 
-#: builtin/config.c:53
+#: builtin/config.c:54
 msgid "Config file location"
 msgstr "Размещение файла конфигурации"
 
-#: builtin/config.c:54
+#: builtin/config.c:55
 msgid "use global config file"
 msgstr "использовать глобальный файл конфигурации"
 
-#: builtin/config.c:55
+#: builtin/config.c:56
 msgid "use system config file"
 msgstr "использовать системный файл конфигурации"
 
-#: builtin/config.c:56
+#: builtin/config.c:57
 msgid "use repository config file"
 msgstr "использовать файл конфигурации репозитория"
 
-#: builtin/config.c:57
+#: builtin/config.c:58
 msgid "use given config file"
 msgstr "использовать указанный файл конфигурации"
 
-#: builtin/config.c:58
+#: builtin/config.c:59
 msgid "blob-id"
 msgstr "идент-двоичн-объекта"
 
-#: builtin/config.c:58
+#: builtin/config.c:59
 msgid "read config from given blob object"
 msgstr "прочитать настройки из указанного двоичного объекта"
 
-#: builtin/config.c:59
+#: builtin/config.c:60
 msgid "Action"
 msgstr "Действие"
 
-#: builtin/config.c:60
+#: builtin/config.c:61
 msgid "get value: name [value-regex]"
 msgstr "получить значение: имя [шаблон-значений]"
 
-#: builtin/config.c:61
+#: builtin/config.c:62
 msgid "get all values: key [value-regex]"
 msgstr "получить все значения: ключ [шаблон-значений]"
 
-#: builtin/config.c:62
+#: builtin/config.c:63
 msgid "get values for regexp: name-regex [value-regex]"
 msgstr "получить значения по шаблону: шаблон-имен [шаблон-значений]"
 
-#: builtin/config.c:63
+#: builtin/config.c:64
 msgid "get value specific for the URL: section[.var] URL"
 msgstr "получить значение, специфичное для URL: раздел[.переменная] URL"
 
-#: builtin/config.c:64
+#: builtin/config.c:65
 msgid "replace all matching variables: name value [value_regex]"
 msgstr "заменить все соответствующие переменные: имя значение [шаблон-значений]"
 
-#: builtin/config.c:65
+#: builtin/config.c:66
 msgid "add a new variable: name value"
 msgstr "добавить новую переменную: имя значение"
 
-#: builtin/config.c:66
+#: builtin/config.c:67
 msgid "remove a variable: name [value-regex]"
 msgstr "удалить переменную: имя [шаблон-значений]"
 
-#: builtin/config.c:67
+#: builtin/config.c:68
 msgid "remove all matches: name [value-regex]"
 msgstr "удалить все совпадающие: имя [шаблон-значений]"
 
-#: builtin/config.c:68
+#: builtin/config.c:69
 msgid "rename section: old-name new-name"
 msgstr "переименовать раздел: старое-имя новое-имя"
 
-#: builtin/config.c:69
+#: builtin/config.c:70
 msgid "remove a section: name"
 msgstr "удалить раздел: имя"
 
-#: builtin/config.c:70
+#: builtin/config.c:71
 msgid "list all"
 msgstr "показать весь список"
 
-#: builtin/config.c:71
+#: builtin/config.c:72
 msgid "open an editor"
 msgstr "открыть в редакторе"
 
-#: builtin/config.c:72
+#: builtin/config.c:73
 msgid "find the color configured: slot [default]"
 msgstr "найти настроенный цвет: раздел [по-умолчанию]"
 
-#: builtin/config.c:73
+#: builtin/config.c:74
 msgid "find the color setting: slot [stdout-is-tty]"
 msgstr "проверить, существует ли настроенный цвет: раздел [stdout-есть-tty]"
 
-#: builtin/config.c:74
+#: builtin/config.c:75
 msgid "Type"
 msgstr "Тип"
 
-#: builtin/config.c:75
+#: builtin/config.c:76
 msgid "value is \"true\" or \"false\""
 msgstr "значение — это «true» (правда) или «false» (ложь)"
 
-#: builtin/config.c:76
+#: builtin/config.c:77
 msgid "value is decimal number"
 msgstr "значение — это десятичное число"
 
-#: builtin/config.c:77
+#: builtin/config.c:78
 msgid "value is --bool or --int"
 msgstr "значение — это --bool или --int"
 
-#: builtin/config.c:78
+#: builtin/config.c:79
 msgid "value is a path (file or directory name)"
 msgstr "значение — это путь (к файлу или каталогу)"
 
-#: builtin/config.c:79
+#: builtin/config.c:80
 msgid "Other"
 msgstr "Другое"
 
-#: builtin/config.c:80
+#: builtin/config.c:81
 msgid "terminate values with NUL byte"
 msgstr "завершать значения НУЛЕВЫМ байтом"
 
-#: builtin/config.c:81
+#: builtin/config.c:82
+msgid "show variable names only"
+msgstr "показывать только имена переменных"
+
+#: builtin/config.c:83
 msgid "respect include directives on lookup"
 msgstr "учитывать директивы include (включения файлов) при запросе"
 
-#: builtin/config.c:316
+#: builtin/config.c:311
 msgid "unable to parse default color value"
 msgstr "не удалось разобрать значение цвета по умолчанию"
 
-#: builtin/config.c:457
+#: builtin/config.c:449
 #, c-format
 msgid ""
 "# This is Git's per-user configuration file.\n"
 "[user]\n"
 "# Please adapt and uncomment the following lines:\n"
 "#\tname = %s\n"
 "#\temail = %s\n"
 msgstr "# Это файл конфигурации пользователя Git.\n[user]\n# Пожалуйста, адаптируйте и раскомментируйте следующие строки:\n#\tuser = %s\n#\temail = %s\n"
 
-#: builtin/config.c:587
+#: builtin/config.c:583
 #, c-format
 msgid "cannot create configuration file %s"
 msgstr "не удалось создать файл конфигурации %s"
 
 #: builtin/count-objects.c:55
 msgid "git count-objects [-v] [-H | --human-readable]"
@@ -4851,13 +5301,13 @@
 
 #: builtin/describe.c:223
 #, c-format
 msgid "tag '%s' is really '%s' here"
 msgstr "метка «%s» уже здесь «%s»"
 
-#: builtin/describe.c:250 builtin/log.c:452
+#: builtin/describe.c:250 builtin/log.c:459
 #, c-format
 msgid "Not a valid object name %s"
 msgstr "Недействительное имя объекта %s"
 
 #: builtin/describe.c:253
 #, c-format
@@ -4991,508 +5441,497 @@
 
 #: builtin/diff.c:417
 #, c-format
 msgid "unhandled object '%s' given."
 msgstr "передан необработанный объект «%s»."
 
-#: builtin/fast-export.c:24
+#: builtin/fast-export.c:25
 msgid "git fast-export [rev-list-opts]"
 msgstr "git fast-export [опции-rev-list]"
 
-#: builtin/fast-export.c:979
+#: builtin/fast-export.c:980
 msgid "show progress after <n> objects"
 msgstr "показать прогресс после <n> объектов"
 
-#: builtin/fast-export.c:981
+#: builtin/fast-export.c:982
 msgid "select handling of signed tags"
 msgstr "выбор обработки подписанных меток"
 
-#: builtin/fast-export.c:984
+#: builtin/fast-export.c:985
 msgid "select handling of tags that tag filtered objects"
 msgstr "выбор обработки меток, которыми помечены отфильтрованные объекты"
 
-#: builtin/fast-export.c:987
+#: builtin/fast-export.c:988
 msgid "Dump marks to this file"
 msgstr "Записать пометки в этот файл"
 
-#: builtin/fast-export.c:989
+#: builtin/fast-export.c:990
 msgid "Import marks from this file"
 msgstr "Импортировать пометки из этого файла"
 
-#: builtin/fast-export.c:991
+#: builtin/fast-export.c:992
 msgid "Fake a tagger when tags lack one"
 msgstr "Подделать автора метки, если у метки он отсутствует"
 
-#: builtin/fast-export.c:993
+#: builtin/fast-export.c:994
 msgid "Output full tree for each commit"
 msgstr "Вывести полное дерево для каждого коммита"
 
-#: builtin/fast-export.c:995
+#: builtin/fast-export.c:996
 msgid "Use the done feature to terminate the stream"
 msgstr "Использовать пометку завершения в конце потока"
 
-#: builtin/fast-export.c:996
+#: builtin/fast-export.c:997
 msgid "Skip output of blob data"
 msgstr "Пропустить вывод данных двоичных объектов"
 
-#: builtin/fast-export.c:997
+#: builtin/fast-export.c:998
 msgid "refspec"
 msgstr "спецификация ссылки"
 
-#: builtin/fast-export.c:998
+#: builtin/fast-export.c:999
 msgid "Apply refspec to exported refs"
 msgstr "Применить спецификацию ссылки к экспортируемым ссылкам"
 
-#: builtin/fast-export.c:999
+#: builtin/fast-export.c:1000
 msgid "anonymize output"
 msgstr "сделать вывод анонимным"
 
-#: builtin/fetch.c:19
+#: builtin/fetch.c:20
 msgid "git fetch [<options>] [<repository> [<refspec>...]]"
 msgstr "git fetch [<опции>] [<репозиторий> [<спецификация-ссылки>…]]"
 
-#: builtin/fetch.c:20
+#: builtin/fetch.c:21
 msgid "git fetch [<options>] <group>"
 msgstr "git fetch [<опции>] <группа>"
 
-#: builtin/fetch.c:21
+#: builtin/fetch.c:22
 msgid "git fetch --multiple [<options>] [(<repository> | <group>)...]"
 msgstr "git fetch --multiple [<опции>] [(<репозиторий> | <группа>)…]"
 
-#: builtin/fetch.c:22
+#: builtin/fetch.c:23
 msgid "git fetch --all [<options>]"
 msgstr "git fetch --all [<опции>]"
 
-#: builtin/fetch.c:89
+#: builtin/fetch.c:90 builtin/pull.c:162
 msgid "fetch from all remotes"
 msgstr "извлечь со всех внешних репозиториев"
 
-#: builtin/fetch.c:91
+#: builtin/fetch.c:92 builtin/pull.c:165
 msgid "append to .git/FETCH_HEAD instead of overwriting"
 msgstr "дописать к .git/FETCH_HEAD вместо перезаписи"
 
-#: builtin/fetch.c:93
+#: builtin/fetch.c:94 builtin/pull.c:168
 msgid "path to upload pack on remote end"
 msgstr "путь к программе упаковки пакета на машине с внешним репозиторием"
 
-#: builtin/fetch.c:94
+#: builtin/fetch.c:95 builtin/pull.c:170
 msgid "force overwrite of local branch"
 msgstr "принудительная перезапись локальной ветки"
 
-#: builtin/fetch.c:96
+#: builtin/fetch.c:97
 msgid "fetch from multiple remotes"
 msgstr "извлечь с нескольких внешних репозиториев"
 
-#: builtin/fetch.c:98
+#: builtin/fetch.c:99 builtin/pull.c:172
 msgid "fetch all tags and associated objects"
 msgstr "извлечь все метки и связанные объекты"
 
-#: builtin/fetch.c:100
+#: builtin/fetch.c:101
 msgid "do not fetch all tags (--no-tags)"
 msgstr "не извлекать все метки (--no-tags)"
 
-#: builtin/fetch.c:102
+#: builtin/fetch.c:103 builtin/pull.c:175
 msgid "prune remote-tracking branches no longer on remote"
 msgstr "почистить отслеживаемые внешние ветки, которых уже нет на внешнем репозитории"
 
-#: builtin/fetch.c:103
+#: builtin/fetch.c:104 builtin/pull.c:178
 msgid "on-demand"
 msgstr "по требованию"
 
-#: builtin/fetch.c:104
+#: builtin/fetch.c:105 builtin/pull.c:179
 msgid "control recursive fetching of submodules"
 msgstr "управление рекурсивным извлечением подмодулей"
 
-#: builtin/fetch.c:108
+#: builtin/fetch.c:109 builtin/pull.c:184
 msgid "keep downloaded pack"
 msgstr "оставить загруженный пакет данных"
 
-#: builtin/fetch.c:110
+#: builtin/fetch.c:111
 msgid "allow updating of HEAD ref"
 msgstr "разрешить обновление ссылки HEAD"
 
-#: builtin/fetch.c:113
+#: builtin/fetch.c:114 builtin/pull.c:187
 msgid "deepen history of shallow clone"
 msgstr "глубокая история частичного клона"
 
-#: builtin/fetch.c:115
+#: builtin/fetch.c:116 builtin/pull.c:190
 msgid "convert to a complete repository"
 msgstr "преобразовать в полный репозиторий"
 
-#: builtin/fetch.c:117 builtin/log.c:1208
+#: builtin/fetch.c:118 builtin/log.c:1233
 msgid "dir"
 msgstr "каталог"
 
-#: builtin/fetch.c:118
+#: builtin/fetch.c:119
 msgid "prepend this to submodule path output"
 msgstr "присоединять это спереди к выводу путей подмодуля"
 
-#: builtin/fetch.c:121
+#: builtin/fetch.c:122
 msgid "default mode for recursion"
 msgstr "режим по умолчанию для рекурсии"
 
-#: builtin/fetch.c:123
+#: builtin/fetch.c:124 builtin/pull.c:193
 msgid "accept refs that update .git/shallow"
 msgstr "принимать ссылки, которые обновляют .git/shallow"
 
-#: builtin/fetch.c:124
+#: builtin/fetch.c:125 builtin/pull.c:195
 msgid "refmap"
 msgstr "соответствие-ссылок"
 
-#: builtin/fetch.c:125
+#: builtin/fetch.c:126 builtin/pull.c:196
 msgid "specify fetch refmap"
 msgstr "указать соответствие ссылок при извлечении"
 
-#: builtin/fetch.c:377
+#: builtin/fetch.c:378
 msgid "Couldn't find remote ref HEAD"
 msgstr "Не удалось найти ссылку HEAD на внешнем репозитории"
 
-#: builtin/fetch.c:457
+#: builtin/fetch.c:458
 #, c-format
 msgid "object %s not found"
 msgstr "объект %s не найден"
 
-#: builtin/fetch.c:462
+#: builtin/fetch.c:463
 msgid "[up to date]"
 msgstr "[актуально]"
 
-#: builtin/fetch.c:476
+#: builtin/fetch.c:477
 #, c-format
 msgid "! %-*s %-*s -> %s  (can't fetch in current branch)"
 msgstr "! %-*s %-*s → %s  (не удалось извлечь в текущую ветку)"
 
-#: builtin/fetch.c:477 builtin/fetch.c:563
+#: builtin/fetch.c:478 builtin/fetch.c:564
 msgid "[rejected]"
 msgstr "[отклонено]"
 
-#: builtin/fetch.c:488
+#: builtin/fetch.c:489
 msgid "[tag update]"
 msgstr "[обновление метки]"
 
-#: builtin/fetch.c:490 builtin/fetch.c:525 builtin/fetch.c:543
+#: builtin/fetch.c:491 builtin/fetch.c:526 builtin/fetch.c:544
 msgid "  (unable to update local ref)"
 msgstr "  (не удалось обновить локальную ссылку)"
 
-#: builtin/fetch.c:508
+#: builtin/fetch.c:509
 msgid "[new tag]"
 msgstr "[новая метка]"
 
-#: builtin/fetch.c:511
+#: builtin/fetch.c:512
 msgid "[new branch]"
 msgstr "[новая ветка]"
 
-#: builtin/fetch.c:514
+#: builtin/fetch.c:515
 msgid "[new ref]"
 msgstr "[новая ссылка]"
 
-#: builtin/fetch.c:559
+#: builtin/fetch.c:560
 msgid "unable to update local ref"
 msgstr "не удалось обновить локальную ссылку"
 
-#: builtin/fetch.c:559
+#: builtin/fetch.c:560
 msgid "forced update"
 msgstr "принудительное обновление"
 
-#: builtin/fetch.c:565
+#: builtin/fetch.c:566
 msgid "(non-fast-forward)"
 msgstr "(без перемотки вперед)"
 
-#: builtin/fetch.c:599 builtin/fetch.c:832
+#: builtin/fetch.c:600 builtin/fetch.c:842
 #, c-format
 msgid "cannot open %s: %s\n"
 msgstr "не удалось открыть %s: %s\n"
 
-#: builtin/fetch.c:608
+#: builtin/fetch.c:609
 #, c-format
 msgid "%s did not send all necessary objects\n"
 msgstr "%s не отправил все необходимые объекты\n"
 
-#: builtin/fetch.c:626
+#: builtin/fetch.c:627
 #, c-format
 msgid "reject %s because shallow roots are not allowed to be updated"
 msgstr "%s отклонено из-за того, что частичные корни не разрешено обновлять"
 
-#: builtin/fetch.c:714 builtin/fetch.c:797
+#: builtin/fetch.c:715 builtin/fetch.c:807
 #, c-format
 msgid "From %.*s\n"
 msgstr "Из %.*s\n"
 
-#: builtin/fetch.c:725
+#: builtin/fetch.c:726
 #, c-format
 msgid ""
 "some local refs could not be updated; try running\n"
 " 'git remote prune %s' to remove any old, conflicting branches"
 msgstr "не удалось обновить некоторые локальные ссылки; попробуйте запустить «git remote prune %s», чтобы почистить старые, конфликтующие ветки"
 
-#: builtin/fetch.c:777
+#: builtin/fetch.c:778
 #, c-format
 msgid "   (%s will become dangling)"
 msgstr "   (%s будет висящей веткой)"
 
-#: builtin/fetch.c:778
+#: builtin/fetch.c:779
 #, c-format
 msgid "   (%s has become dangling)"
 msgstr "   (%s стала висящей веткой)"
 
-#: builtin/fetch.c:802
+#: builtin/fetch.c:811
 msgid "[deleted]"
 msgstr "[удалено]"
 
-#: builtin/fetch.c:803 builtin/remote.c:1057
+#: builtin/fetch.c:812 builtin/remote.c:1034
 msgid "(none)"
 msgstr "(нет)"
 
-#: builtin/fetch.c:822
+#: builtin/fetch.c:832
 #, c-format
 msgid "Refusing to fetch into current branch %s of non-bare repository"
 msgstr "Отказ получения в текущую ветку %s не голого репозитория"
 
-#: builtin/fetch.c:841
+#: builtin/fetch.c:851
 #, c-format
 msgid "Option \"%s\" value \"%s\" is not valid for %s"
 msgstr "Неправильное значение «%2$s» для параметра «%1$s» для %3$s"
 
-#: builtin/fetch.c:844
+#: builtin/fetch.c:854
 #, c-format
 msgid "Option \"%s\" is ignored for %s\n"
 msgstr "Параметр «%s» игнорируется для %s\n"
 
-#: builtin/fetch.c:900
+#: builtin/fetch.c:910
 #, c-format
 msgid "Don't know how to fetch from %s"
 msgstr "Не знаю как извлечь с %s"
 
-#: builtin/fetch.c:1063
+#: builtin/fetch.c:1071
 #, c-format
 msgid "Fetching %s\n"
 msgstr "Извлечение из %s\n"
 
-#: builtin/fetch.c:1065 builtin/remote.c:90
+#: builtin/fetch.c:1073 builtin/remote.c:90
 #, c-format
 msgid "Could not fetch %s"
 msgstr "Не удалось извлечь %s"
 
-#: builtin/fetch.c:1083
+#: builtin/fetch.c:1091
 msgid ""
 "No remote repository specified.  Please, specify either a URL or a\n"
 "remote name from which new revisions should be fetched."
 msgstr "Не указан внешний репозиторий. Укажите URL или имя внешнего репозитория из которого должны извлекаться новые редакции."
 
-#: builtin/fetch.c:1106
+#: builtin/fetch.c:1114
 msgid "You need to specify a tag name."
 msgstr "Вам нужно указать имя метки."
 
-#: builtin/fetch.c:1148
+#: builtin/fetch.c:1156
 msgid "--depth and --unshallow cannot be used together"
 msgstr "нельзя использовать одновременно --depth и --unshallow"
 
-#: builtin/fetch.c:1150
+#: builtin/fetch.c:1158
 msgid "--unshallow on a complete repository does not make sense"
 msgstr "--unshallow не имеет смысла на полном репозитории"
 
-#: builtin/fetch.c:1173
+#: builtin/fetch.c:1181
 msgid "fetch --all does not take a repository argument"
 msgstr "fetch --all не принимает имя репозитория как аргумент"
 
-#: builtin/fetch.c:1175
+#: builtin/fetch.c:1183
 msgid "fetch --all does not make sense with refspecs"
 msgstr "fetch --all не имеет смысла при указании спецификаций ссылок"
 
-#: builtin/fetch.c:1186
+#: builtin/fetch.c:1194
 #, c-format
 msgid "No such remote or remote group: %s"
 msgstr "Нет такого внешнего репозитория или группы: %s"
 
-#: builtin/fetch.c:1194
+#: builtin/fetch.c:1202
 msgid "Fetching a group and specifying refspecs does not make sense"
 msgstr "Получение группы и указание спецификаций ссылок не имеет смысла"
 
-#: builtin/fmt-merge-msg.c:13
+#: builtin/fmt-merge-msg.c:14
 msgid ""
 "git fmt-merge-msg [-m <message>] [--log[=<n>] | --no-log] [--file <file>]"
 msgstr "git fmt-merge-msg [-m <сообщение>] [--log[=<n>] | --no-log] [--file <файл>]"
 
-#: builtin/fmt-merge-msg.c:668 builtin/fmt-merge-msg.c:671 builtin/grep.c:698
-#: builtin/merge.c:198 builtin/repack.c:178 builtin/repack.c:182
-#: builtin/show-branch.c:664 builtin/show-ref.c:180 builtin/tag.c:590
-#: parse-options.h:131 parse-options.h:238
-msgid "n"
-msgstr "n"
-
-#: builtin/fmt-merge-msg.c:669
+#: builtin/fmt-merge-msg.c:670
 msgid "populate log with at most <n> entries from shortlog"
 msgstr "отправить в журнал <n> записей из короткого журнала"
 
-#: builtin/fmt-merge-msg.c:672
+#: builtin/fmt-merge-msg.c:673
 msgid "alias for --log (deprecated)"
 msgstr "сокращение для --log (устаревшее)"
 
-#: builtin/fmt-merge-msg.c:675
+#: builtin/fmt-merge-msg.c:676
 msgid "text"
 msgstr "текст"
 
-#: builtin/fmt-merge-msg.c:676
+#: builtin/fmt-merge-msg.c:677
 msgid "use <text> as start of message"
 msgstr "использовать <текст> как начальное сообщение"
 
-#: builtin/fmt-merge-msg.c:677
+#: builtin/fmt-merge-msg.c:678
 msgid "file to read from"
 msgstr "файл для чтения"
 
-#: builtin/for-each-ref.c:687
-msgid "unable to parse format"
-msgstr "не удалось разобрать формат"
-
-#: builtin/for-each-ref.c:1083
+#: builtin/for-each-ref.c:9
 msgid "git for-each-ref [<options>] [<pattern>]"
 msgstr "git for-each-ref [<опции>] [<шаблон>]"
 
-#: builtin/for-each-ref.c:1098
+#: builtin/for-each-ref.c:24
 msgid "quote placeholders suitably for shells"
 msgstr "выводить указатели места заполнения в подходящем формате для командного процессора"
 
-#: builtin/for-each-ref.c:1100
+#: builtin/for-each-ref.c:26
 msgid "quote placeholders suitably for perl"
 msgstr "выводить указатели места заполнения в подходящем формате для perl"
 
-#: builtin/for-each-ref.c:1102
+#: builtin/for-each-ref.c:28
 msgid "quote placeholders suitably for python"
 msgstr "выводить указатели места заполнения в подходящем формате для python"
 
-#: builtin/for-each-ref.c:1104
+#: builtin/for-each-ref.c:30
 msgid "quote placeholders suitably for Tcl"
 msgstr "выводить указатели места заполнения в подходящем формате для Tcl"
 
-#: builtin/for-each-ref.c:1107
+#: builtin/for-each-ref.c:33
 msgid "show only <n> matched refs"
 msgstr "показать только <n> совпадающих ссылок"
 
-#: builtin/for-each-ref.c:1108 builtin/replace.c:438
-msgid "format"
-msgstr "формат"
-
-#: builtin/for-each-ref.c:1108
+#: builtin/for-each-ref.c:34
 msgid "format to use for the output"
 msgstr "использовать формат для вывода"
 
-#: builtin/for-each-ref.c:1109
+#: builtin/for-each-ref.c:35
 msgid "key"
 msgstr "ключ"
 
-#: builtin/for-each-ref.c:1110
+#: builtin/for-each-ref.c:36
 msgid "field name to sort on"
 msgstr "имя поля, по которому выполнить сортировку"
 
-#: builtin/fsck.c:147 builtin/prune.c:137
+#: builtin/fsck.c:163 builtin/prune.c:137
 msgid "Checking connectivity"
 msgstr "Проверка соединения"
 
-#: builtin/fsck.c:548
+#: builtin/fsck.c:568
 msgid "Checking object directories"
 msgstr "Проверка каталогов объектов"
 
-#: builtin/fsck.c:611
+#: builtin/fsck.c:631
 msgid "git fsck [<options>] [<object>...]"
 msgstr "git fsck [<опции>] [<объект>…]"
 
-#: builtin/fsck.c:617
+#: builtin/fsck.c:637
 msgid "show unreachable objects"
 msgstr "показать недоступные объекты"
 
-#: builtin/fsck.c:618
+#: builtin/fsck.c:638
 msgid "show dangling objects"
 msgstr "показать объекты, на которые нет ссылок"
 
-#: builtin/fsck.c:619
+#: builtin/fsck.c:639
 msgid "report tags"
 msgstr "вывести отчет по меткам"
 
-#: builtin/fsck.c:620
+#: builtin/fsck.c:640
 msgid "report root nodes"
 msgstr "вывести отчет по корневым узлам"
 
-#: builtin/fsck.c:621
+#: builtin/fsck.c:641
 msgid "make index objects head nodes"
 msgstr "воспринимать объекты в индексе как корневые узлы"
 
-#: builtin/fsck.c:622
+#: builtin/fsck.c:642
 msgid "make reflogs head nodes (default)"
 msgstr "создать корневые узлы журналов ссылок (по умолчанию)"
 
-#: builtin/fsck.c:623
+#: builtin/fsck.c:643
 msgid "also consider packs and alternate objects"
 msgstr "также проверять пакеты и альтернативные объекты"
 
-#: builtin/fsck.c:624
+#: builtin/fsck.c:644
+msgid "check only connectivity"
+msgstr "только проверить соединение"
+
+#: builtin/fsck.c:645
 msgid "enable more strict checking"
 msgstr "использовать более строгую проверку"
 
-#: builtin/fsck.c:626
+#: builtin/fsck.c:647
 msgid "write dangling objects in .git/lost-found"
 msgstr "записать объекты на которые нет ссылок в .git/lost-found"
 
-#: builtin/fsck.c:627 builtin/prune.c:107
+#: builtin/fsck.c:648 builtin/prune.c:107
 msgid "show progress"
 msgstr "показать прогресс выполнения"
 
-#: builtin/fsck.c:677
+#: builtin/fsck.c:707
 msgid "Checking objects"
 msgstr "Проверка объектов"
 
-#: builtin/gc.c:24
+#: builtin/gc.c:25
 msgid "git gc [<options>]"
 msgstr "git gc [<опции>]"
 
-#: builtin/gc.c:67
+#: builtin/gc.c:55
 #, c-format
 msgid "Invalid %s: '%s'"
 msgstr "Недействительный %s: «%s»"
 
-#: builtin/gc.c:112
+#: builtin/gc.c:100
 #, c-format
 msgid "insanely long object directory %.*s"
 msgstr "слишком длинный путь к каталогу объекта %.*s"
 
-#: builtin/gc.c:281
+#: builtin/gc.c:269
 msgid "prune unreferenced objects"
 msgstr "почистить объекты, на которые нет ссылок"
 
-#: builtin/gc.c:283
+#: builtin/gc.c:271
 msgid "be more thorough (increased runtime)"
 msgstr "проверять более внимательно (занимает больше времени)"
 
-#: builtin/gc.c:284
+#: builtin/gc.c:272
 msgid "enable auto-gc mode"
 msgstr "включить режим auto-gc"
 
-#: builtin/gc.c:285
+#: builtin/gc.c:273
 msgid "force running gc even if there may be another gc running"
 msgstr "принудительно запустить gc, даже есть другая копия gc уже запущена"
 
-#: builtin/gc.c:327
+#: builtin/gc.c:315
 #, c-format
 msgid "Auto packing the repository in background for optimum performance.\n"
 msgstr "Автоматическая упаковка репозитория в фоне, для оптимальной производительности.\n"
 
-#: builtin/gc.c:329
+#: builtin/gc.c:317
 #, c-format
 msgid "Auto packing the repository for optimum performance.\n"
 msgstr "Автоматическая упаковка репозитория, для оптимальной производительности.\n"
 
-#: builtin/gc.c:330
+#: builtin/gc.c:318
 #, c-format
 msgid "See \"git help gc\" for manual housekeeping.\n"
 msgstr "Смотрите «git help gc» руководства по ручной очистке.\n"
 
-#: builtin/gc.c:348
+#: builtin/gc.c:336
 #, c-format
 msgid ""
 "gc is already running on machine '%s' pid %<PRIuMAX> (use --force if not)"
 msgstr "gc уже запущен на этом компьютере «%s» pid %<PRIuMAX> (если нет, используйте --force)"
 
-#: builtin/gc.c:376
+#: builtin/gc.c:364
 msgid ""
 "There are too many unreachable loose objects; run 'git prune' to remove "
 "them."
 msgstr "Имеется слишком много объектов, на которые нет ссылок; запустите «git prune» для их удаления."
 
 #: builtin/grep.c:23
@@ -5727,13 +6166,13 @@
 msgstr "git hash-object [-t <тип>] [-w] [--path=<файл> | --no-filters] [--stdin] [--] <файл>…"
 
 #: builtin/hash-object.c:81
 msgid "git hash-object  --stdin-paths < <list-of-paths>"
 msgstr "git hash-object  --stdin-paths < <список-путей>"
 
-#: builtin/hash-object.c:92 builtin/tag.c:612
+#: builtin/hash-object.c:92 builtin/tag.c:614
 msgid "type"
 msgstr "тип"
 
 #: builtin/hash-object.c:92
 msgid "object type"
 msgstr "тип объекта"
@@ -5876,139 +6315,139 @@
 
 #: builtin/help.c:501
 #, c-format
 msgid "`git %s' is aliased to `%s'"
 msgstr "«git %s» — это сокращение для «%s»"
 
-#: builtin/index-pack.c:151
+#: builtin/index-pack.c:152
 #, c-format
 msgid "unable to open %s"
 msgstr "не удалось открыть %s"
 
-#: builtin/index-pack.c:201
+#: builtin/index-pack.c:202
 #, c-format
 msgid "object type mismatch at %s"
 msgstr "несоответствие типа объекта на %s"
 
-#: builtin/index-pack.c:221
+#: builtin/index-pack.c:222
 #, c-format
 msgid "did not receive expected object %s"
 msgstr "ожидаемый объект не получен на %s"
 
-#: builtin/index-pack.c:224
+#: builtin/index-pack.c:225
 #, c-format
 msgid "object %s: expected type %s, found %s"
 msgstr "объект %s: ожидаемый тип %s, получен %s"
 
-#: builtin/index-pack.c:266
+#: builtin/index-pack.c:267
 #, c-format
 msgid "cannot fill %d byte"
 msgid_plural "cannot fill %d bytes"
 msgstr[0] "не удалось заполнить %d байт"
 msgstr[1] "не удалось заполнить %d байта"
 msgstr[2] "не удалось заполнить %d байтов"
 msgstr[3] "не удалось заполнить %d байтов"
 
-#: builtin/index-pack.c:276
+#: builtin/index-pack.c:277
 msgid "early EOF"
 msgstr "неожиданный конец файла"
 
-#: builtin/index-pack.c:277
+#: builtin/index-pack.c:278
 msgid "read error on input"
 msgstr "ошибка чтения ввода"
 
-#: builtin/index-pack.c:289
+#: builtin/index-pack.c:290
 msgid "used more bytes than were available"
 msgstr "использовано больше байт, чем было доступно"
 
-#: builtin/index-pack.c:296
+#: builtin/index-pack.c:297
 msgid "pack too large for current definition of off_t"
 msgstr "пакет слишком большой для текущего определения off_t"
 
-#: builtin/index-pack.c:312
+#: builtin/index-pack.c:313
 #, c-format
 msgid "unable to create '%s'"
 msgstr "не удалось создать «%s»"
 
-#: builtin/index-pack.c:317
+#: builtin/index-pack.c:318
 #, c-format
 msgid "cannot open packfile '%s'"
 msgstr "не удалось открыть файл пакета «%s»"
 
-#: builtin/index-pack.c:331
+#: builtin/index-pack.c:332
 msgid "pack signature mismatch"
 msgstr "несоответствие подписи пакета"
 
-#: builtin/index-pack.c:333
+#: builtin/index-pack.c:334
 #, c-format
 msgid "pack version %<PRIu32> unsupported"
 msgstr "версия пакета %<PRIu32> не поддерживается"
 
-#: builtin/index-pack.c:351
+#: builtin/index-pack.c:352
 #, c-format
 msgid "pack has bad object at offset %lu: %s"
 msgstr "в пакете содержится поврежденный объект по смещению %lu: %s"
 
-#: builtin/index-pack.c:472
+#: builtin/index-pack.c:473
 #, c-format
 msgid "inflate returned %d"
 msgstr "программа сжатия вернула %d"
 
-#: builtin/index-pack.c:521
+#: builtin/index-pack.c:522
 msgid "offset value overflow for delta base object"
 msgstr "переполнение значения смещения у базового объекта дельты"
 
-#: builtin/index-pack.c:529
+#: builtin/index-pack.c:530
 msgid "delta base offset is out of bound"
 msgstr "смещение базовой дельты вышло за допустимые пределы"
 
-#: builtin/index-pack.c:537
+#: builtin/index-pack.c:538
 #, c-format
 msgid "unknown object type %d"
 msgstr "неизвестный тип объекта %d"
 
-#: builtin/index-pack.c:568
+#: builtin/index-pack.c:569
 msgid "cannot pread pack file"
 msgstr "не удалось выполнить pread для файла пакета"
 
-#: builtin/index-pack.c:570
+#: builtin/index-pack.c:571
 #, c-format
 msgid "premature end of pack file, %lu byte missing"
 msgid_plural "premature end of pack file, %lu bytes missing"
 msgstr[0] "преждевременное окончание файла пакета, %lu байт отсутствует"
 msgstr[1] "преждевременное окончание файла пакета, %lu байта отсутствует"
 msgstr[2] "преждевременное окончание файла пакета, %lu байтов отсутствует"
 msgstr[3] "преждевременное окончание файла пакета, %lu байтов отсутствует"
 
-#: builtin/index-pack.c:596
+#: builtin/index-pack.c:597
 msgid "serious inflate inconsistency"
 msgstr "серьезное несоответствие при распаковке"
 
-#: builtin/index-pack.c:742 builtin/index-pack.c:748 builtin/index-pack.c:771
-#: builtin/index-pack.c:805 builtin/index-pack.c:814
+#: builtin/index-pack.c:743 builtin/index-pack.c:749 builtin/index-pack.c:772
+#: builtin/index-pack.c:806 builtin/index-pack.c:815
 #, c-format
 msgid "SHA1 COLLISION FOUND WITH %s !"
 msgstr "НАЙДЕНА КОЛЛИЗИЯ SHA1 С %s !"
 
-#: builtin/index-pack.c:745 builtin/pack-objects.c:162
+#: builtin/index-pack.c:746 builtin/pack-objects.c:162
 #: builtin/pack-objects.c:254
 #, c-format
 msgid "unable to read %s"
 msgstr "не удалось прочитать %s"
 
-#: builtin/index-pack.c:811
+#: builtin/index-pack.c:812
 #, c-format
 msgid "cannot read existing object %s"
 msgstr "не удалось прочитать существующий объект %s"
 
-#: builtin/index-pack.c:825
+#: builtin/index-pack.c:826
 #, c-format
 msgid "invalid blob object %s"
 msgstr "неправильный файл двоичного объекта %s"
 
-#: builtin/index-pack.c:839
+#: builtin/index-pack.c:840
 #, c-format
 msgid "invalid %s"
 msgstr "неправильный %s"
 
 #: builtin/index-pack.c:843
 msgid "Error in object"
@@ -6118,13 +6557,13 @@
 
 #: builtin/index-pack.c:1475
 #, c-format
 msgid "invalid number of threads specified (%d)"
 msgstr "указано неправильное количество потоков (%d)"
 
-#: builtin/index-pack.c:1479 builtin/index-pack.c:1658
+#: builtin/index-pack.c:1479 builtin/index-pack.c:1663
 #, c-format
 msgid "no threads support, ignoring %s"
 msgstr "нет поддержки потоков, игнорирование %s"
 
 #: builtin/index-pack.c:1537
 #, c-format
@@ -6151,176 +6590,172 @@
 msgid_plural "chain length = %d: %lu objects"
 msgstr[0] "длина цепочки = %d: %lu объект"
 msgstr[1] "длина цепочки = %d: %lu объекта"
 msgstr[2] "длина цепочки = %d: %lu объектов"
 msgstr[3] "длина цепочки = %d: %lu объектов"
 
-#: builtin/index-pack.c:1622
+#: builtin/index-pack.c:1623
 msgid "Cannot come back to cwd"
 msgstr "Не удалось вернуться в текущий рабочий каталог"
 
-#: builtin/index-pack.c:1670 builtin/index-pack.c:1673
-#: builtin/index-pack.c:1685 builtin/index-pack.c:1689
+#: builtin/index-pack.c:1675 builtin/index-pack.c:1678
+#: builtin/index-pack.c:1690 builtin/index-pack.c:1694
 #, c-format
 msgid "bad %s"
 msgstr "плохой %s"
 
-#: builtin/index-pack.c:1703
+#: builtin/index-pack.c:1708
 msgid "--fix-thin cannot be used without --stdin"
 msgstr "--fix-thin нельзя использовать без --stdin"
 
-#: builtin/index-pack.c:1707 builtin/index-pack.c:1716
+#: builtin/index-pack.c:1712 builtin/index-pack.c:1721
 #, c-format
 msgid "packfile name '%s' does not end with '.pack'"
 msgstr "имя пакета «%s» не оканчивается на «.pack»"
 
-#: builtin/index-pack.c:1724
+#: builtin/index-pack.c:1729
 msgid "--verify with no packfile name given"
 msgstr "--verify без указания имени файла пакета"
 
-#: builtin/init-db.c:35
+#: builtin/init-db.c:36
 #, c-format
 msgid "Could not make %s writable by group"
 msgstr "Не удалось предоставить доступ к %s на запись"
 
-#: builtin/init-db.c:62
+#: builtin/init-db.c:63
 #, c-format
 msgid "insanely long template name %s"
 msgstr "слишком длинное имя шаблона %s"
 
-#: builtin/init-db.c:67
+#: builtin/init-db.c:68
 #, c-format
 msgid "cannot stat '%s'"
 msgstr "не удалось выполнить stat для «%s»"
 
-#: builtin/init-db.c:73
+#: builtin/init-db.c:74
 #, c-format
 msgid "cannot stat template '%s'"
 msgstr "не удалось выполнить stat для шаблона «%s»"
 
-#: builtin/init-db.c:80
+#: builtin/init-db.c:81
 #, c-format
 msgid "cannot opendir '%s'"
 msgstr "не удалось выполнить opendir для «%s»"
 
-#: builtin/init-db.c:97
+#: builtin/init-db.c:98
 #, c-format
 msgid "cannot readlink '%s'"
 msgstr "не удалось выполнить readlink для «%s»"
 
-#: builtin/init-db.c:99
+#: builtin/init-db.c:100
 #, c-format
 msgid "insanely long symlink %s"
 msgstr "слишком длинная символьная ссылка %s"
 
-#: builtin/init-db.c:102
+#: builtin/init-db.c:103
 #, c-format
 msgid "cannot symlink '%s' '%s'"
 msgstr "не удалось создать символьную ссылку «%s» на «%s»"
 
-#: builtin/init-db.c:106
+#: builtin/init-db.c:107
 #, c-format
 msgid "cannot copy '%s' to '%s'"
 msgstr "не удалось скопировать файл «%s» в «%s»"
 
-#: builtin/init-db.c:110
+#: builtin/init-db.c:111
 #, c-format
 msgid "ignoring template %s"
 msgstr "игнорирование шаблона %s"
 
-#: builtin/init-db.c:136
+#: builtin/init-db.c:137
 #, c-format
 msgid "insanely long template path %s"
 msgstr "слишком длинный путь шаблона %s"
 
-#: builtin/init-db.c:144
+#: builtin/init-db.c:145
 #, c-format
 msgid "templates not found %s"
 msgstr "шаблоны не найдены %s"
 
-#: builtin/init-db.c:157
+#: builtin/init-db.c:158
 #, c-format
 msgid "not copying templates of a wrong format version %d from '%s'"
 msgstr "не копирую шаблоны в неправильной версии формата %d из «%s»"
 
-#: builtin/init-db.c:211
+#: builtin/init-db.c:212
 #, c-format
 msgid "insane git directory %s"
 msgstr "слишком длинный путь к каталогу git %s"
 
-#: builtin/init-db.c:343 builtin/init-db.c:346
+#: builtin/init-db.c:344 builtin/init-db.c:347
 #, c-format
 msgid "%s already exists"
 msgstr "%s уже существует"
 
-#: builtin/init-db.c:374
+#: builtin/init-db.c:375
 #, c-format
 msgid "unable to handle file type %d"
 msgstr "не удается обработать файл типа %d"
 
-#: builtin/init-db.c:377
+#: builtin/init-db.c:378
 #, c-format
 msgid "unable to move %s to %s"
 msgstr "не удается переместить файл %s в %s"
 
 #. TRANSLATORS: The first '%s' is either "Reinitialized
 #. existing" or "Initialized empty", the second " shared" or
 #. "", and the last '%s%s' is the verbatim directory name.
-#: builtin/init-db.c:433
+#: builtin/init-db.c:434
 #, c-format
 msgid "%s%s Git repository in %s%s\n"
 msgstr "%s%s репозиторий Git в %s%s\n"
 
-#: builtin/init-db.c:434
+#: builtin/init-db.c:435
 msgid "Reinitialized existing"
 msgstr "Реинициализация существующего"
 
-#: builtin/init-db.c:434
+#: builtin/init-db.c:435
 msgid "Initialized empty"
 msgstr "Инициализирован пустой"
 
-#: builtin/init-db.c:435
+#: builtin/init-db.c:436
 msgid " shared"
 msgstr " общий"
 
-#: builtin/init-db.c:482
+#: builtin/init-db.c:483
 msgid ""
 "git init [-q | --quiet] [--bare] [--template=<template-directory>] "
 "[--shared[=<permissions>]] [<directory>]"
 msgstr "git init [-q | --quiet] [--bare] [--template=<каталог-шаблонов>] [--shared[=<права-доступа>]] [<каталог>]"
 
-#: builtin/init-db.c:505
+#: builtin/init-db.c:506
 msgid "permissions"
 msgstr "права-доступа"
 
-#: builtin/init-db.c:506
+#: builtin/init-db.c:507
 msgid "specify that the git repository is to be shared amongst several users"
 msgstr "укажите, если репозиторий git будет использоваться несколькими пользователями"
 
-#: builtin/init-db.c:508 builtin/prune-packed.c:57 builtin/repack.c:171
-msgid "be quiet"
-msgstr "тихий режим"
-
-#: builtin/init-db.c:540 builtin/init-db.c:545
+#: builtin/init-db.c:541 builtin/init-db.c:546
 #, c-format
 msgid "cannot mkdir %s"
 msgstr "не удалось выполнить mkdir %s"
 
-#: builtin/init-db.c:549
+#: builtin/init-db.c:550
 #, c-format
 msgid "cannot chdir to %s"
 msgstr "не удалось выполнить chdir в %s"
 
-#: builtin/init-db.c:570
+#: builtin/init-db.c:571
 #, c-format
 msgid ""
 "%s (or --work-tree=<directory>) not allowed without specifying %s (or --git-"
 "dir=<directory>)"
 msgstr "%s (или --work-tree=<каталог>) нельзя использовать без указания %s (или --git-dir=<каталог>)"
 
-#: builtin/init-db.c:598
+#: builtin/init-db.c:599
 #, c-format
 msgid "Cannot access work tree '%s'"
 msgstr "Не удалось получить доступ к рабочему каталогу «%s»"
 
 #: builtin/interpret-trailers.c:15
 msgid ""
@@ -6337,290 +6772,285 @@
 msgstr "завершитель"
 
 #: builtin/interpret-trailers.c:27
 msgid "trailer(s) to add"
 msgstr "завершители для добавления"
 
-#: builtin/log.c:41
+#: builtin/log.c:43
 msgid "git log [<options>] [<revision-range>] [[--] <path>...]"
 msgstr "git log [<опции>] [<диапазон-редакций>] [[--] <путь>…]"
 
-#: builtin/log.c:42
+#: builtin/log.c:44
 msgid "git show [<options>] <object>..."
 msgstr "git show [<опции>] <объект>…"
 
-#: builtin/log.c:81
+#: builtin/log.c:83
 #, c-format
 msgid "invalid --decorate option: %s"
 msgstr "неправильный параметр для --decorate: %s"
 
-#: builtin/log.c:127
+#: builtin/log.c:131
 msgid "suppress diff output"
 msgstr "не выводить различия"
 
-#: builtin/log.c:128
+#: builtin/log.c:132
 msgid "show source"
 msgstr "показать источник"
 
-#: builtin/log.c:129
+#: builtin/log.c:133
 msgid "Use mail map file"
 msgstr "Использовать файл соответствия почтовых адресов"
 
-#: builtin/log.c:130
+#: builtin/log.c:134
 msgid "decorate options"
 msgstr "опции формата вывода ссылок"
 
-#: builtin/log.c:133
+#: builtin/log.c:137
 msgid "Process line range n,m in file, counting from 1"
 msgstr "Обработать диапазон строк n,m из файла, начиная с 1"
 
-#: builtin/log.c:229
+#: builtin/log.c:233
 #, c-format
 msgid "Final output: %d %s\n"
 msgstr "Финальный вывод: %d %s\n"
 
-#: builtin/log.c:458
+#: builtin/log.c:465
 #, c-format
 msgid "git show %s: bad file"
 msgstr "git show %s: плохой файл"
 
-#: builtin/log.c:472 builtin/log.c:564
+#: builtin/log.c:479 builtin/log.c:572
 #, c-format
 msgid "Could not read object %s"
 msgstr "Не удалось прочитать объект %s"
 
-#: builtin/log.c:588
+#: builtin/log.c:596
 #, c-format
 msgid "Unknown type: %d"
 msgstr "Неизвестный тип объекта: %d"
 
-#: builtin/log.c:689
+#: builtin/log.c:714
 msgid "format.headers without value"
 msgstr "в format.headers не указано значение"
 
-#: builtin/log.c:773
+#: builtin/log.c:798
 msgid "name of output directory is too long"
 msgstr "слишком длинное имя выходного каталога"
 
-#: builtin/log.c:789
+#: builtin/log.c:814
 #, c-format
 msgid "Cannot open patch file %s"
 msgstr "Ну удалось открыть файл изменений %s"
 
-#: builtin/log.c:803
+#: builtin/log.c:828
 msgid "Need exactly one range."
 msgstr "Нужен только один диапазон."
 
-#: builtin/log.c:813
+#: builtin/log.c:838
 msgid "Not a range."
 msgstr "Не является диапазоном."
 
-#: builtin/log.c:919
+#: builtin/log.c:944
 msgid "Cover letter needs email format"
 msgstr "Сопроводительное письмо должно быть в формате электронной почты"
 
-#: builtin/log.c:998
+#: builtin/log.c:1023
 #, c-format
 msgid "insane in-reply-to: %s"
 msgstr "ошибка в поле in-reply-to: %s"
 
-#: builtin/log.c:1026
+#: builtin/log.c:1051
 msgid "git format-patch [<options>] [<since> | <revision-range>]"
 msgstr "git format-patch [<опции>] [<начиная-с> | <диапазон-редакций>]"
 
-#: builtin/log.c:1071
+#: builtin/log.c:1096
 msgid "Two output directories?"
 msgstr "Два выходных каталога?"
 
-#: builtin/log.c:1186
+#: builtin/log.c:1211
 msgid "use [PATCH n/m] even with a single patch"
 msgstr "выводить [PATCH n/m] даже когда один патч"
 
-#: builtin/log.c:1189
+#: builtin/log.c:1214
 msgid "use [PATCH] even with multiple patches"
 msgstr "выводить [PATCH] даже когда несколько патчей"
 
-#: builtin/log.c:1193
+#: builtin/log.c:1218
 msgid "print patches to standard out"
 msgstr "выводить патчи на стандартный вывод"
 
-#: builtin/log.c:1195
+#: builtin/log.c:1220
 msgid "generate a cover letter"
 msgstr "генерировать сопроводительное письмо"
 
-#: builtin/log.c:1197
+#: builtin/log.c:1222
 msgid "use simple number sequence for output file names"
 msgstr "использовать простую последовательность чисел для имен выходных файлов"
 
-#: builtin/log.c:1198
+#: builtin/log.c:1223
 msgid "sfx"
 msgstr "суффикс"
 
-#: builtin/log.c:1199
+#: builtin/log.c:1224
 msgid "use <sfx> instead of '.patch'"
 msgstr "использовать суффикс <суффикс> вместо «.patch»"
 
-#: builtin/log.c:1201
+#: builtin/log.c:1226
 msgid "start numbering patches at <n> instead of 1"
 msgstr "начать нумерацию патчей с <n>, а не с 1"
 
-#: builtin/log.c:1203
+#: builtin/log.c:1228
 msgid "mark the series as Nth re-roll"
 msgstr "пометить серию как энную попытку"
 
-#: builtin/log.c:1205
+#: builtin/log.c:1230
 msgid "Use [<prefix>] instead of [PATCH]"
 msgstr "Использовать [<префикс>] вместо [PATCH]"
 
-#: builtin/log.c:1208
+#: builtin/log.c:1233
 msgid "store resulting files in <dir>"
 msgstr "сохранить результирующие файлы в <каталог>"
 
-#: builtin/log.c:1211
+#: builtin/log.c:1236
 msgid "don't strip/add [PATCH]"
 msgstr "не обрезать/добавлять [PATCH]"
 
-#: builtin/log.c:1214
+#: builtin/log.c:1239
 msgid "don't output binary diffs"
 msgstr "не выводить двоичные различия"
 
-#: builtin/log.c:1216
+#: builtin/log.c:1241
 msgid "don't include a patch matching a commit upstream"
 msgstr "не включать патч, если коммит уже есть в вышестоящей ветке"
 
-#: builtin/log.c:1218
+#: builtin/log.c:1243
 msgid "show patch format instead of default (patch + stat)"
 msgstr "выводить в формате патча, а не в стандартном (патч + статистика)"
 
-#: builtin/log.c:1220
+#: builtin/log.c:1245
 msgid "Messaging"
 msgstr "Передача сообщений"
 
-#: builtin/log.c:1221
+#: builtin/log.c:1246
 msgid "header"
 msgstr "заголовок"
 
-#: builtin/log.c:1222
+#: builtin/log.c:1247
 msgid "add email header"
 msgstr "добавить заголовок сообщения"
 
-#: builtin/log.c:1223 builtin/log.c:1225
+#: builtin/log.c:1248 builtin/log.c:1250
 msgid "email"
 msgstr "почта"
 
-#: builtin/log.c:1223
+#: builtin/log.c:1248
 msgid "add To: header"
 msgstr "добавить заголовок To:"
 
-#: builtin/log.c:1225
+#: builtin/log.c:1250
 msgid "add Cc: header"
 msgstr "добавить заголовок Cc:"
 
-#: builtin/log.c:1227
+#: builtin/log.c:1252
 msgid "ident"
 msgstr "идентификатор"
 
-#: builtin/log.c:1228
+#: builtin/log.c:1253
 msgid "set From address to <ident> (or committer ident if absent)"
 msgstr "установить адрес отправителя на <идентификатор> (или на идентификатор коммитера, если отсутствует)"
 
-#: builtin/log.c:1230
+#: builtin/log.c:1255
 msgid "message-id"
 msgstr "идентификатор-сообщения"
 
-#: builtin/log.c:1231
+#: builtin/log.c:1256
 msgid "make first mail a reply to <message-id>"
 msgstr "сделать первое письмо ответом на <идентификатор-сообщения>"
 
-#: builtin/log.c:1232 builtin/log.c:1235
+#: builtin/log.c:1257 builtin/log.c:1260
 msgid "boundary"
 msgstr "вложение"
 
-#: builtin/log.c:1233
+#: builtin/log.c:1258
 msgid "attach the patch"
 msgstr "приложить патч"
 
-#: builtin/log.c:1236
+#: builtin/log.c:1261
 msgid "inline the patch"
 msgstr "включить патч в текст письма"
 
-#: builtin/log.c:1240
+#: builtin/log.c:1265
 msgid "enable message threading, styles: shallow, deep"
 msgstr "включить в письмах иерархичность, стили: shallow (частичную), deep (глубокую)"
 
-#: builtin/log.c:1242
+#: builtin/log.c:1267
 msgid "signature"
 msgstr "подпись"
 
-#: builtin/log.c:1243
+#: builtin/log.c:1268
 msgid "add a signature"
 msgstr "добавить подпись"
 
-#: builtin/log.c:1245
+#: builtin/log.c:1270
 msgid "add a signature from a file"
 msgstr "добавить подпись из файла"
 
-#: builtin/log.c:1246
+#: builtin/log.c:1271
 msgid "don't print the patch filenames"
 msgstr "не выводить имена файлов патчей"
 
-#: builtin/log.c:1320
-#, c-format
-msgid "invalid ident line: %s"
-msgstr "неправильная строка идентификации: %s"
-
-#: builtin/log.c:1335
+#: builtin/log.c:1360
 msgid "-n and -k are mutually exclusive."
 msgstr "-n и -k нельзя использовать одновременно"
 
-#: builtin/log.c:1337
+#: builtin/log.c:1362
 msgid "--subject-prefix and -k are mutually exclusive."
 msgstr "--subject-prefix и -k нельзя использовать одновременно."
 
-#: builtin/log.c:1345
+#: builtin/log.c:1370
 msgid "--name-only does not make sense"
 msgstr "--name-only не имеет смысла"
 
-#: builtin/log.c:1347
+#: builtin/log.c:1372
 msgid "--name-status does not make sense"
 msgstr "--name-status не имеет смысла"
 
-#: builtin/log.c:1349
+#: builtin/log.c:1374
 msgid "--check does not make sense"
 msgstr "--check не имеет смысла"
 
-#: builtin/log.c:1372
+#: builtin/log.c:1397
 msgid "standard output, or directory, which one?"
 msgstr "стандартный вывод или каталог?"
 
-#: builtin/log.c:1374
+#: builtin/log.c:1399
 #, c-format
 msgid "Could not create directory '%s'"
 msgstr "Не удалось создать каталог «%s»"
 
-#: builtin/log.c:1472
+#: builtin/log.c:1496
 #, c-format
 msgid "unable to read signature file '%s'"
 msgstr "не удалось прочитать файл подписи «%s»"
 
-#: builtin/log.c:1535
+#: builtin/log.c:1559
 msgid "Failed to create output files"
 msgstr "Сбой при создании выходных файлов"
 
-#: builtin/log.c:1583
+#: builtin/log.c:1607
 msgid "git cherry [-v] [<upstream> [<head> [<limit>]]]"
 msgstr "git cherry [-v] [<вышестоящая-ветка> [<голова> [<ограничение>]]]"
 
-#: builtin/log.c:1637
+#: builtin/log.c:1661
 #, c-format
 msgid ""
 "Could not find a tracked remote branch, please specify <upstream> "
 "manually.\n"
 msgstr "Не удалось найти отслеживаемую внешнюю ветку, укажите <вышестоящую-ветку> вручную.\n"
 
-#: builtin/log.c:1648 builtin/log.c:1650 builtin/log.c:1662
+#: builtin/log.c:1672 builtin/log.c:1674 builtin/log.c:1686
 #, c-format
 msgid "Unknown commit %s"
 msgstr "Неизвестный коммит %s"
 
 #: builtin/ls-files.c:358
 msgid "git ls-files [<options>] [<file>...]"
@@ -6778,65 +7208,66 @@
 
 #: builtin/merge.c:143
 #, c-format
 msgid "Available custom strategies are:"
 msgstr "Доступные пользовательские стратегии:"
 
-#: builtin/merge.c:193
+#: builtin/merge.c:193 builtin/pull.c:119
 msgid "do not show a diffstat at the end of the merge"
 msgstr "не выводить статистику изменений после окончания слияния"
 
-#: builtin/merge.c:196
+#: builtin/merge.c:196 builtin/pull.c:122
 msgid "show a diffstat at the end of the merge"
 msgstr "вывести статистику изменений после окончания слияния"
 
-#: builtin/merge.c:197
+#: builtin/merge.c:197 builtin/pull.c:125
 msgid "(synonym to --stat)"
 msgstr "(синоним для --stat)"
 
-#: builtin/merge.c:199
+#: builtin/merge.c:199 builtin/pull.c:128
 msgid "add (at most <n>) entries from shortlog to merge commit message"
 msgstr "добавить (максимум <n>) записей из короткого журнала в сообщение коммита у слияния"
 
-#: builtin/merge.c:202
+#: builtin/merge.c:202 builtin/pull.c:131
 msgid "create a single commit instead of doing a merge"
 msgstr "создать один коммит, вместо выполнения слияния"
 
-#: builtin/merge.c:204
+#: builtin/merge.c:204 builtin/pull.c:134
 msgid "perform a commit if the merge succeeds (default)"
 msgstr "сделать коммит, если слияние прошло успешно (по умолчанию)"
 
-#: builtin/merge.c:206
+#: builtin/merge.c:206 builtin/pull.c:137
 msgid "edit message before committing"
 msgstr "отредактировать сообщение перед выполнением коммита"
 
 #: builtin/merge.c:207
 msgid "allow fast-forward (default)"
 msgstr "разрешить перемотку вперед (по умолчанию)"
 
-#: builtin/merge.c:209
+#: builtin/merge.c:209 builtin/pull.c:143
 msgid "abort if fast-forward is not possible"
 msgstr "отменить выполнение слияния, если перемотка вперед не возможна"
 
 #: builtin/merge.c:213
 msgid "Verify that the named commit has a valid GPG signature"
 msgstr "Проверить, что указанный коммит имеет верную электронную подпись GPG"
 
-#: builtin/merge.c:214 builtin/notes.c:753 builtin/revert.c:89
+#: builtin/merge.c:214 builtin/notes.c:767 builtin/pull.c:148
+#: builtin/revert.c:89
 msgid "strategy"
 msgstr "стратегия"
 
-#: builtin/merge.c:215
+#: builtin/merge.c:215 builtin/pull.c:149
 msgid "merge strategy to use"
 msgstr "используемая стратегия слияния"
 
-#: builtin/merge.c:216
+#: builtin/merge.c:216 builtin/pull.c:152
 msgid "option=value"
 msgstr "опция=значение"
 
-#: builtin/merge.c:217
+#: builtin/merge.c:217 builtin/pull.c:153
 msgid "option for selected merge strategy"
 msgstr "опции для выбранной стратегии слияния"
 
 #: builtin/merge.c:219
 msgid "merge commit message (for a non-fast-forward merge)"
 msgstr "сообщение коммита для слияния (для слияния без перемотки вперед)"
@@ -6868,12 +7299,18 @@
 
 #: builtin/merge.c:340
 #, c-format
 msgid "Squash commit -- not updating HEAD\n"
 msgstr "Уплотнение коммита — не обновляя HEAD\n"
 
+#: builtin/merge.c:344 builtin/merge.c:763 builtin/merge.c:975
+#: builtin/merge.c:988
+#, c-format
+msgid "Could not write to '%s'"
+msgstr "Не удалось записать в «%s»"
+
 #: builtin/merge.c:372
 msgid "Writing SQUASH_MSG"
 msgstr "Запись SQUASH_MSG"
 
 #: builtin/merge.c:374
 msgid "Finishing SQUASH_MSG"
@@ -6891,16 +7328,12 @@
 
 #: builtin/merge.c:537
 #, c-format
 msgid "Bad branch.%s.mergeoptions string: %s"
 msgstr "Неправильная строка branch.%s.mergeoptions: %s"
 
-#: builtin/merge.c:632
-msgid "git write-tree failed to write a tree"
-msgstr "git write-tree не удалось записать дерево"
-
 #: builtin/merge.c:656
 msgid "Not handling anything other than two heads merge."
 msgstr "Не обрабатываю ничего, кроме слияния двух указателей на коммиты."
 
 #: builtin/merge.c:670
 #, c-format
@@ -6980,16 +7413,12 @@
 #: builtin/merge.c:1224
 msgid ""
 "You have not concluded your merge (MERGE_HEAD exists).\n"
 "Please, commit your changes before you merge."
 msgstr "Вы не завершили слияние (присутствует файл MERGE_HEAD).\nВыполните коммит ваших изменений, перед слиянием."
 
-#: builtin/merge.c:1227 git-pull.sh:74
-msgid "You have not concluded your merge (MERGE_HEAD exists)."
-msgstr "Вы не завершили слияние (присутствует файл MERGE_HEAD)."
-
 #: builtin/merge.c:1231
 msgid ""
 "You have not concluded your cherry-pick (CHERRY_PICK_HEAD exists).\n"
 "Please, commit your changes before you merge."
 msgstr "Вы не завершили отбор лучшего (присутствует файл CHERRY_PICK_HEAD).\nПожалуйста, выполните коммит ваших изменений, перед слиянием."
 
@@ -7269,13 +7698,13 @@
 
 #: builtin/mv.c:253
 #, c-format
 msgid "Renaming %s to %s\n"
 msgstr "Переименование %s в %s\n"
 
-#: builtin/mv.c:256 builtin/remote.c:725 builtin/repack.c:361
+#: builtin/mv.c:256 builtin/remote.c:722 builtin/repack.c:362
 #, c-format
 msgid "renaming '%s' failed"
 msgstr "сбой при переименовании «%s»"
 
 #: builtin/name-rev.c:255
 msgid "git name-rev [<options>] <commit>..."
@@ -7314,338 +7743,335 @@
 msgstr "разрешить вывод «undefined», если не найдено (по умолчанию)"
 
 #: builtin/name-rev.c:322
 msgid "dereference tags in the input (internal use)"
 msgstr "разыменовывать введенные метки (для внутреннего использования)"
 
-#: builtin/notes.c:24
+#: builtin/notes.c:25
 msgid "git notes [--ref <notes-ref>] [list [<object>]]"
 msgstr "git notes [--ref <ссылка-на-заметку>] [list [<объект>]]"
 
-#: builtin/notes.c:25
+#: builtin/notes.c:26
 msgid ""
 "git notes [--ref <notes-ref>] add [-f] [--allow-empty] [-m <msg> | -F <file>"
 " | (-c | -C) <object>] [<object>]"
 msgstr "git notes [--ref <ссылка-на-заметку>] add [-f] [--allow-empty] [-m <сообщение> | -F <файл> | (-c | -C) <объект>] [<объект>]"
 
-#: builtin/notes.c:26
+#: builtin/notes.c:27
 msgid "git notes [--ref <notes-ref>] copy [-f] <from-object> <to-object>"
 msgstr "git notes [--ref <ссылка-на-заметку>] copy [-f] <из-объекта> <в-объект>"
 
-#: builtin/notes.c:27
+#: builtin/notes.c:28
 msgid ""
 "git notes [--ref <notes-ref>] append [--allow-empty] [-m <msg> | -F <file> |"
 " (-c | -C) <object>] [<object>]"
 msgstr "git notes [--ref <ссылка-на-заметку>] append [--allow-empty] [-m <сообщение> | -F <файл> | (-c | -C) <объект>] [<объект>]"
 
-#: builtin/notes.c:28
+#: builtin/notes.c:29
 msgid "git notes [--ref <notes-ref>] edit [--allow-empty] [<object>]"
 msgstr "git notes [--ref <ссылка-на-заметку>] edit [--allow-empty] [<объект>]"
 
-#: builtin/notes.c:29
+#: builtin/notes.c:30
 msgid "git notes [--ref <notes-ref>] show [<object>]"
 msgstr "git notes [--ref <ссылка-на-заметку>] show [<объект>]"
 
-#: builtin/notes.c:30
+#: builtin/notes.c:31
 msgid ""
 "git notes [--ref <notes-ref>] merge [-v | -q] [-s <strategy>] <notes-ref>"
 msgstr "git notes [--ref <ссылка-на-заметку>] merge [-v | -q] [-s <стратегия>] <ссылка-на-заметку>"
 
-#: builtin/notes.c:31
+#: builtin/notes.c:32
 msgid "git notes merge --commit [-v | -q]"
 msgstr "git notes merge --commit [-v | -q]"
 
-#: builtin/notes.c:32
+#: builtin/notes.c:33
 msgid "git notes merge --abort [-v | -q]"
 msgstr "git notes merge --abort [-v | -q]"
 
-#: builtin/notes.c:33
+#: builtin/notes.c:34
 msgid "git notes [--ref <notes-ref>] remove [<object>...]"
 msgstr "git notes [--ref <ссылка-на-заметку>] remove [<объект>…]"
 
-#: builtin/notes.c:34
+#: builtin/notes.c:35
 msgid "git notes [--ref <notes-ref>] prune [-n | -v]"
 msgstr "git notes [--ref <ссылка-на-заметку>] prune [-n | -v]"
 
-#: builtin/notes.c:35
+#: builtin/notes.c:36
 msgid "git notes [--ref <notes-ref>] get-ref"
 msgstr "git notes [--ref <ссылка-на-заметку>] get-ref"
 
-#: builtin/notes.c:40
+#: builtin/notes.c:41
 msgid "git notes [list [<object>]]"
 msgstr "git notes [list [<объект>]]"
 
-#: builtin/notes.c:45
+#: builtin/notes.c:46
 msgid "git notes add [<options>] [<object>]"
 msgstr "git notes add [<опции>] [<объект>]"
 
-#: builtin/notes.c:50
+#: builtin/notes.c:51
 msgid "git notes copy [<options>] <from-object> <to-object>"
 msgstr "git notes copy [<опции>] <из-объекта> <в-объект>"
 
-#: builtin/notes.c:51
+#: builtin/notes.c:52
 msgid "git notes copy --stdin [<from-object> <to-object>]..."
 msgstr "git notes copy --stdin [<из-объекта> <в-объект>]…"
 
-#: builtin/notes.c:56
+#: builtin/notes.c:57
 msgid "git notes append [<options>] [<object>]"
 msgstr "git notes append [<опции>] [<объект>]"
 
-#: builtin/notes.c:61
+#: builtin/notes.c:62
 msgid "git notes edit [<object>]"
 msgstr "git notes edit [<объект>]"
 
-#: builtin/notes.c:66
+#: builtin/notes.c:67
 msgid "git notes show [<object>]"
 msgstr "git notes show [<объект>]"
 
-#: builtin/notes.c:71
+#: builtin/notes.c:72
 msgid "git notes merge [<options>] <notes-ref>"
 msgstr "git notes merge [<опции>] <ссылка-на-заметку>"
 
-#: builtin/notes.c:72
+#: builtin/notes.c:73
 msgid "git notes merge --commit [<options>]"
 msgstr "git notes merge --commit [<опции>]"
 
-#: builtin/notes.c:73
+#: builtin/notes.c:74
 msgid "git notes merge --abort [<options>]"
 msgstr "git notes merge --abort [<опции>]"
 
-#: builtin/notes.c:78
+#: builtin/notes.c:79
 msgid "git notes remove [<object>]"
 msgstr "git notes remove [<опции>]"
 
-#: builtin/notes.c:83
+#: builtin/notes.c:84
 msgid "git notes prune [<options>]"
 msgstr "git notes prune [<опции>]"
 
-#: builtin/notes.c:88
+#: builtin/notes.c:89
 msgid "git notes get-ref"
 msgstr "git notes get-ref"
 
-#: builtin/notes.c:146
+#: builtin/notes.c:147
 #, c-format
 msgid "unable to start 'show' for object '%s'"
 msgstr "не удалось запустить «show» для объекта «%s»"
 
-#: builtin/notes.c:150
+#: builtin/notes.c:151
 msgid "could not read 'show' output"
 msgstr "не удалось прочитать вывод «show»"
 
-#: builtin/notes.c:158
+#: builtin/notes.c:159
 #, c-format
 msgid "failed to finish 'show' for object '%s'"
 msgstr "не удалось завершить «show» для объекта «%s»"
 
-#: builtin/notes.c:173 builtin/tag.c:477
+#: builtin/notes.c:174 builtin/tag.c:477
 #, c-format
 msgid "could not create file '%s'"
 msgstr "не удалось создать файл «%s»"
 
-#: builtin/notes.c:192
+#: builtin/notes.c:193
 msgid "Please supply the note contents using either -m or -F option"
 msgstr "Пожалуйста, укажите содержимое заметки, используя опцию -m или -F"
 
-#: builtin/notes.c:201
+#: builtin/notes.c:202
 msgid "unable to write note object"
 msgstr "не удалось записать объект заметки"
 
-#: builtin/notes.c:203
+#: builtin/notes.c:204
 #, c-format
 msgid "The note contents have been left in %s"
 msgstr "Содержимое заметки осталось в %s"
 
-#: builtin/notes.c:231 builtin/tag.c:693
+#: builtin/notes.c:232 builtin/tag.c:695
 #, c-format
 msgid "cannot read '%s'"
 msgstr "не удалось прочитать «%s»"
 
-#: builtin/notes.c:233 builtin/tag.c:696
+#: builtin/notes.c:234 builtin/tag.c:698
 #, c-format
 msgid "could not open or read '%s'"
 msgstr "не удалось открыть или прочитать «%s»"
 
-#: builtin/notes.c:252 builtin/notes.c:303 builtin/notes.c:305
-#: builtin/notes.c:365 builtin/notes.c:420 builtin/notes.c:506
-#: builtin/notes.c:511 builtin/notes.c:589 builtin/notes.c:652
-#: builtin/notes.c:854 builtin/tag.c:709
+#: builtin/notes.c:253 builtin/notes.c:304 builtin/notes.c:306
+#: builtin/notes.c:366 builtin/notes.c:421 builtin/notes.c:507
+#: builtin/notes.c:512 builtin/notes.c:590 builtin/notes.c:653
+#: builtin/notes.c:877 builtin/tag.c:711
 #, c-format
 msgid "Failed to resolve '%s' as a valid ref."
 msgstr "Не удалось разрешить «%s» как ссылку."
 
-#: builtin/notes.c:255
+#: builtin/notes.c:256
 #, c-format
 msgid "Failed to read object '%s'."
 msgstr "Не удалось прочитать объект «%s»."
 
-#: builtin/notes.c:259
+#: builtin/notes.c:260
 #, c-format
 msgid "Cannot read note data from non-blob object '%s'."
 msgstr "Не удалось прочитать данные заметки из недвоичного объекта «%s»."
 
-#: builtin/notes.c:299
-#, c-format
-msgid "Malformed input line: '%s'."
-msgstr "Плохая строка ввода: «%s»."
-
-#: builtin/notes.c:314
-#, c-format
-msgid "Failed to copy notes from '%s' to '%s'"
-msgstr "Не удалось скопировать заметку из «%s» в «%s»"
-
-#: builtin/notes.c:358 builtin/notes.c:413 builtin/notes.c:489
-#: builtin/notes.c:501 builtin/notes.c:577 builtin/notes.c:645
-#: builtin/notes.c:919
+#: builtin/notes.c:359 builtin/notes.c:414 builtin/notes.c:490
+#: builtin/notes.c:502 builtin/notes.c:578 builtin/notes.c:646
+#: builtin/notes.c:942
 msgid "too many parameters"
 msgstr "передано слишком много параметров"
 
-#: builtin/notes.c:371 builtin/notes.c:658
+#: builtin/notes.c:372 builtin/notes.c:659
 #, c-format
 msgid "No note found for object %s."
 msgstr "Не найдена заметка для объекта %s."
 
-#: builtin/notes.c:392 builtin/notes.c:555
+#: builtin/notes.c:393 builtin/notes.c:556
 msgid "note contents as a string"
 msgstr "текстовое содержимое заметки"
 
-#: builtin/notes.c:395 builtin/notes.c:558
+#: builtin/notes.c:396 builtin/notes.c:559
 msgid "note contents in a file"
 msgstr "содержимое заметки в файле"
 
-#: builtin/notes.c:397 builtin/notes.c:400 builtin/notes.c:560
-#: builtin/notes.c:563 builtin/tag.c:628
+#: builtin/notes.c:398 builtin/notes.c:401 builtin/notes.c:561
+#: builtin/notes.c:564 builtin/tag.c:630
 msgid "object"
 msgstr "объект"
 
-#: builtin/notes.c:398 builtin/notes.c:561
+#: builtin/notes.c:399 builtin/notes.c:562
 msgid "reuse and edit specified note object"
 msgstr "использовать и отредактировать указанный объект заметки"
 
-#: builtin/notes.c:401 builtin/notes.c:564
+#: builtin/notes.c:402 builtin/notes.c:565
 msgid "reuse specified note object"
 msgstr "использовать указанный объект заметки"
 
-#: builtin/notes.c:404 builtin/notes.c:567
+#: builtin/notes.c:405 builtin/notes.c:568
 msgid "allow storing empty note"
 msgstr "разрешить сохранение пустой заметки"
 
-#: builtin/notes.c:405 builtin/notes.c:476
+#: builtin/notes.c:406 builtin/notes.c:477
 msgid "replace existing notes"
 msgstr "заменить существующие заметки"
 
-#: builtin/notes.c:430
+#: builtin/notes.c:431
 #, c-format
 msgid ""
 "Cannot add notes. Found existing notes for object %s. Use '-f' to overwrite "
 "existing notes"
 msgstr "Не удалось добавить заметку. Найдена существующая заметка у объекта %s. Используйте параметр «-f» для перезаписи существующих заметок."
 
-#: builtin/notes.c:445 builtin/notes.c:524
+#: builtin/notes.c:446 builtin/notes.c:525
 #, c-format
 msgid "Overwriting existing notes for object %s\n"
 msgstr "Перезапись существующих заметок у объекта %s\n"
 
-#: builtin/notes.c:456 builtin/notes.c:617 builtin/notes.c:859
+#: builtin/notes.c:457 builtin/notes.c:618 builtin/notes.c:882
 #, c-format
 msgid "Removing note for object %s\n"
 msgstr "Удаление заметки у объекта %s\n"
 
-#: builtin/notes.c:477
+#: builtin/notes.c:478
 msgid "read objects from stdin"
 msgstr "прочитать объекты из стандартного ввода"
 
-#: builtin/notes.c:479
+#: builtin/notes.c:480
 msgid "load rewriting config for <command> (implies --stdin)"
 msgstr "загрузить настройки перезаписи для команды <команда> (включает в себя --stdin)"
 
-#: builtin/notes.c:497
+#: builtin/notes.c:498
 msgid "too few parameters"
 msgstr "передано слишком мало параметров"
 
-#: builtin/notes.c:518
+#: builtin/notes.c:519
 #, c-format
 msgid ""
 "Cannot copy notes. Found existing notes for object %s. Use '-f' to overwrite"
 " existing notes"
 msgstr "Не удалось скопировать заметку. Найдена существующая заметка у объекта %s. Используйте параметр «-f» для перезаписи существующих заметок."
 
-#: builtin/notes.c:530
+#: builtin/notes.c:531
 #, c-format
 msgid "Missing notes on source object %s. Cannot copy."
 msgstr "Нет заметок у исходного объекта %s. Нельзя скопировать."
 
-#: builtin/notes.c:582
+#: builtin/notes.c:583
 #, c-format
 msgid ""
 "The -m/-F/-c/-C options have been deprecated for the 'edit' subcommand.\n"
 "Please use 'git notes add -f -m/-F/-c/-C' instead.\n"
 msgstr "Опции -m/-F/-c/-C для подкоманды «edit» устарели.\nИспользуйте вместо них «git notes add -f -m/-F/-c/-C».\n"
 
-#: builtin/notes.c:750
+#: builtin/notes.c:764
 msgid "General options"
 msgstr "Общие опции"
 
-#: builtin/notes.c:752
+#: builtin/notes.c:766
 msgid "Merge options"
 msgstr "Опции слияния"
 
-#: builtin/notes.c:754
+#: builtin/notes.c:768
 msgid ""
 "resolve notes conflicts using the given strategy "
 "(manual/ours/theirs/union/cat_sort_uniq)"
 msgstr "разрешить конфликты заметок с помощью указанной стратегии (manual/ours/theirs/union/cat_sort_uniq)"
 
-#: builtin/notes.c:756
+#: builtin/notes.c:770
 msgid "Committing unmerged notes"
 msgstr "Коммит не слитых заметок"
 
-#: builtin/notes.c:758
+#: builtin/notes.c:772
 msgid "finalize notes merge by committing unmerged notes"
 msgstr "завершить слияние заметок коммитом не слитых заметок"
 
-#: builtin/notes.c:760
+#: builtin/notes.c:774
 msgid "Aborting notes merge resolution"
 msgstr "Отмена разрешения слияния заметок"
 
-#: builtin/notes.c:762
+#: builtin/notes.c:776
 msgid "abort notes merge"
 msgstr "отменить слияние заметок"
 
-#: builtin/notes.c:857
+#: builtin/notes.c:853
+#, c-format
+msgid "A notes merge into %s is already in-progress at %s"
+msgstr "Слияние заметок в %s уже выполняется на %s"
+
+#: builtin/notes.c:880
 #, c-format
 msgid "Object %s has no note\n"
 msgstr "У объекта %s нет заметки\n"
 
-#: builtin/notes.c:869
+#: builtin/notes.c:892
 msgid "attempt to remove non-existent note is not an error"
 msgstr "попытка удаления несуществующей заметки не является ошибкой"
 
-#: builtin/notes.c:872
+#: builtin/notes.c:895
 msgid "read object names from the standard input"
 msgstr "прочитать имена объектов из стандартного ввода"
 
-#: builtin/notes.c:953
+#: builtin/notes.c:976
 msgid "notes-ref"
 msgstr "ссылка-на-заметку"
 
-#: builtin/notes.c:954
+#: builtin/notes.c:977
 msgid "use notes from <notes-ref>"
 msgstr "использовать заметку из <ссылка-на-заметку>"
 
-#: builtin/notes.c:989 builtin/remote.c:1618
+#: builtin/notes.c:1012 builtin/remote.c:1588
 #, c-format
 msgid "Unknown subcommand: %s"
 msgstr "Неизвестная подкоманда: %s"
 
 #: builtin/pack-objects.c:28
-msgid "git pack-objects --stdout [options...] [< ref-list | < object-list]"
-msgstr "git pack-objects --stdout [опции…] [< список-ссылок | < список-объектов]"
+msgid ""
+"git pack-objects --stdout [<options>...] [< <ref-list> | < <object-list>]"
+msgstr "git pack-objects --stdout [<опции>…] [< <список-ссылок> | < <список-объектов>]"
 
 #: builtin/pack-objects.c:29
-msgid "git pack-objects [options...] base-name [< ref-list | < object-list]"
-msgstr "git pack-objects [опции…] имя-базы [< список-ссылок | < список-объектов]"
+msgid ""
+"git pack-objects [<options>...] <base-name> [< <ref-list> | < <object-list>]"
+msgstr "git pack-objects [<опции>…] <имя-базы> [< <список-ссылок> | < <список-объектов>]"
 
 #: builtin/pack-objects.c:175 builtin/pack-objects.c:178
 #, c-format
 msgid "deflate error (%d)"
 msgstr "ошибка сжатия (%d)"
 
@@ -7668,159 +8094,149 @@
 
 #: builtin/pack-objects.c:2572
 #, c-format
 msgid "bad index version '%s'"
 msgstr "плохая версия индекса «%s»"
 
-#: builtin/pack-objects.c:2595
-#, c-format
-msgid "option %s does not accept negative form"
-msgstr "опция %s не принимает отрицательные значения"
-
-#: builtin/pack-objects.c:2599
-#, c-format
-msgid "unable to parse value '%s' for option %s"
-msgstr "не удалось разобрать значение «%s» для опции %s"
-
-#: builtin/pack-objects.c:2619
+#: builtin/pack-objects.c:2602
 msgid "do not show progress meter"
 msgstr "не выводить прогресс выполнения"
 
-#: builtin/pack-objects.c:2621
+#: builtin/pack-objects.c:2604
 msgid "show progress meter"
 msgstr "показать прогресс выполнения"
 
-#: builtin/pack-objects.c:2623
+#: builtin/pack-objects.c:2606
 msgid "show progress meter during object writing phase"
 msgstr "показать прогресс выполнения во время записи объектов"
 
-#: builtin/pack-objects.c:2626
+#: builtin/pack-objects.c:2609
 msgid "similar to --all-progress when progress meter is shown"
 msgstr "похоже на --all-progress при включенном прогрессе выполнения"
 
-#: builtin/pack-objects.c:2627
+#: builtin/pack-objects.c:2610
 msgid "version[,offset]"
 msgstr "версия[,смещение]"
 
-#: builtin/pack-objects.c:2628
+#: builtin/pack-objects.c:2611
 msgid "write the pack index file in the specified idx format version"
 msgstr "записать файл индекса пакета в указанной версии формата"
 
-#: builtin/pack-objects.c:2631
+#: builtin/pack-objects.c:2614
 msgid "maximum size of each output pack file"
 msgstr "максимальный размер каждого выходного файла пакета"
 
-#: builtin/pack-objects.c:2633
+#: builtin/pack-objects.c:2616
 msgid "ignore borrowed objects from alternate object store"
 msgstr "игнорировать чужие объекты, взятые из альтернативного хранилища объектов"
 
-#: builtin/pack-objects.c:2635
+#: builtin/pack-objects.c:2618
 msgid "ignore packed objects"
 msgstr "игнорировать упакованные объекты"
 
-#: builtin/pack-objects.c:2637
+#: builtin/pack-objects.c:2620
 msgid "limit pack window by objects"
 msgstr "ограничить окно пакета по количеству объектов"
 
-#: builtin/pack-objects.c:2639
+#: builtin/pack-objects.c:2622
 msgid "limit pack window by memory in addition to object limit"
 msgstr "дополнительно к количеству объектов ограничить окно пакета по памяти"
 
-#: builtin/pack-objects.c:2641
+#: builtin/pack-objects.c:2624
 msgid "maximum length of delta chain allowed in the resulting pack"
 msgstr "максимальная разрешенная длина цепочки дельт в результирующем пакете"
 
-#: builtin/pack-objects.c:2643
+#: builtin/pack-objects.c:2626
 msgid "reuse existing deltas"
 msgstr "использовать повторно существующие дельты"
 
-#: builtin/pack-objects.c:2645
+#: builtin/pack-objects.c:2628
 msgid "reuse existing objects"
 msgstr "использовать повторно существующие объекты"
 
-#: builtin/pack-objects.c:2647
+#: builtin/pack-objects.c:2630
 msgid "use OFS_DELTA objects"
 msgstr "использовать объекты OFS_DELTA"
 
-#: builtin/pack-objects.c:2649
+#: builtin/pack-objects.c:2632
 msgid "use threads when searching for best delta matches"
 msgstr "использовать многопоточность при поиске лучших совпадений дельт"
 
-#: builtin/pack-objects.c:2651
+#: builtin/pack-objects.c:2634
 msgid "do not create an empty pack output"
 msgstr "не создавать пустые выходные пакеты"
 
-#: builtin/pack-objects.c:2653
+#: builtin/pack-objects.c:2636
 msgid "read revision arguments from standard input"
 msgstr "прочитать аргументы редакций из стандартного ввода"
 
-#: builtin/pack-objects.c:2655
+#: builtin/pack-objects.c:2638
 msgid "limit the objects to those that are not yet packed"
 msgstr "ограничиться объектами, которые еще не упакованы"
 
-#: builtin/pack-objects.c:2658
+#: builtin/pack-objects.c:2641
 msgid "include objects reachable from any reference"
 msgstr "включить объекты, которые достижимы по любой из ссылок"
 
-#: builtin/pack-objects.c:2661
+#: builtin/pack-objects.c:2644
 msgid "include objects referred by reflog entries"
 msgstr "включить объекты, на которые ссылаются записи журнала ссылок"
 
-#: builtin/pack-objects.c:2664
+#: builtin/pack-objects.c:2647
 msgid "include objects referred to by the index"
 msgstr "включить объекты, на которые ссылается индекс"
 
-#: builtin/pack-objects.c:2667
+#: builtin/pack-objects.c:2650
 msgid "output pack to stdout"
 msgstr "вывести пакет на  стандартный вывод"
 
-#: builtin/pack-objects.c:2669
+#: builtin/pack-objects.c:2652
 msgid "include tag objects that refer to objects to be packed"
 msgstr "включить объекты меток, которые ссылаются на упаковываемые объекты"
 
-#: builtin/pack-objects.c:2671
+#: builtin/pack-objects.c:2654
 msgid "keep unreachable objects"
 msgstr "сохранять ссылки на недоступные объекты"
 
-#: builtin/pack-objects.c:2672 parse-options.h:139
+#: builtin/pack-objects.c:2655 parse-options.h:142
 msgid "time"
 msgstr "время"
 
-#: builtin/pack-objects.c:2673
+#: builtin/pack-objects.c:2656
 msgid "unpack unreachable objects newer than <time>"
 msgstr "распаковать недоступные объекты, которые новее, чем <время>"
 
-#: builtin/pack-objects.c:2676
+#: builtin/pack-objects.c:2659
 msgid "create thin packs"
 msgstr "создавать тонкие пакеты"
 
-#: builtin/pack-objects.c:2678
+#: builtin/pack-objects.c:2661
 msgid "create packs suitable for shallow fetches"
 msgstr "создавать пакеты, подходящие для частичных извлечений"
 
-#: builtin/pack-objects.c:2680
+#: builtin/pack-objects.c:2663
 msgid "ignore packs that have companion .keep file"
 msgstr "игнорировать пакеты, рядом с которыми лежит .keep файл"
 
-#: builtin/pack-objects.c:2682
+#: builtin/pack-objects.c:2665
 msgid "pack compression level"
 msgstr "уровень сжатия пакета"
 
-#: builtin/pack-objects.c:2684
+#: builtin/pack-objects.c:2667
 msgid "do not hide commits by grafts"
 msgstr "не скрывать коммиты сращениями"
 
-#: builtin/pack-objects.c:2686
+#: builtin/pack-objects.c:2669
 msgid "use a bitmap index if available to speed up counting objects"
 msgstr "по возможности использовать индекс в битовых картах, для ускорения подсчета объектов"
 
-#: builtin/pack-objects.c:2688
+#: builtin/pack-objects.c:2671
 msgid "write a bitmap index together with the pack index"
 msgstr "запись индекса в битовых картах вместе с индексом пакета"
 
-#: builtin/pack-objects.c:2779
+#: builtin/pack-objects.c:2762
 msgid "Counting objects"
 msgstr "Подсчет объектов"
 
 #: builtin/pack-refs.c:6
 msgid "git pack-refs [<options>]"
 msgstr "git pack-refs [<опции>]"
@@ -7842,43 +8258,175 @@
 msgstr "Удаление дублирующихся объектов"
 
 #: builtin/prune.c:11
 msgid "git prune [-n] [-v] [--expire <time>] [--] [<head>...]"
 msgstr "git prune [-n] [-v] [--expire <время>] [--] [<имя-ветки>…]"
 
-#: builtin/prune.c:105 builtin/worktree.c:112
+#: builtin/prune.c:105 builtin/worktree.c:121
 msgid "do not remove, show only"
 msgstr "не удалять, только показать список"
 
-#: builtin/prune.c:106 builtin/worktree.c:113
+#: builtin/prune.c:106 builtin/worktree.c:122
 msgid "report pruned objects"
 msgstr "вывести список удаленных объектов"
 
-#: builtin/prune.c:109 builtin/worktree.c:115
+#: builtin/prune.c:109 builtin/worktree.c:124
 msgid "expire objects older than <time>"
 msgstr "удалить объекты старее чем <дата-окончания>"
 
-#: builtin/push.c:14
+#: builtin/pull.c:69
+msgid "git pull [options] [<repository> [<refspec>...]]"
+msgstr "git pull [опции] [<репозиторий> [<спецификация-ссылки>…]]"
+
+#: builtin/pull.c:113
+msgid "Options related to merging"
+msgstr "Опции, связанные со слиянием"
+
+#: builtin/pull.c:116
+msgid "incorporate changes by rebasing rather than merging"
+msgstr "забрать изменения с помощью перебазирования, а не слияния"
+
+#: builtin/pull.c:140 builtin/revert.c:105
+msgid "allow fast-forward"
+msgstr "разрешить перемотку вперед"
+
+#: builtin/pull.c:146
+msgid "verify that the named commit has a valid GPG signature"
+msgstr "проверить, что указанный коммит имеет верную электронную подпись GPG"
+
+#: builtin/pull.c:160
+msgid "Options related to fetching"
+msgstr "Опции, связанные с извлечением"
+
+#: builtin/pull.c:268
+#, c-format
+msgid "Invalid value for pull.ff: %s"
+msgstr "Неправильное значение для pull.ff: %s"
+
+#: builtin/pull.c:352
+msgid "Cannot pull with rebase: You have unstaged changes."
+msgstr "Не удалось получить с перемещением: У вас есть непроиндексированные изменения."
+
+#: builtin/pull.c:358
+msgid "Additionally, your index contains uncommitted changes."
+msgstr "К тому же, в вашем индексе есть незакоммиченные изменения."
+
+#: builtin/pull.c:360
+msgid "Cannot pull with rebase: Your index contains uncommitted changes."
+msgstr "Не удалось получить с перемещением: В вашем индексе есть незакоммиченные изменения."
+
+#: builtin/pull.c:436
+msgid ""
+"There is no candidate for rebasing against among the refs that you just "
+"fetched."
+msgstr "Нет претендентов для перемещения среди ссылок, которые вы только что получили."
+
+#: builtin/pull.c:438
+msgid ""
+"There are no candidates for merging among the refs that you just fetched."
+msgstr "Нет претендентов для слияния среди ссылок, которые вы только что получили."
+
+#: builtin/pull.c:439
+msgid ""
+"Generally this means that you provided a wildcard refspec which had no\n"
+"matches on the remote end."
+msgstr "Обычно это означает, что вы передали спецификацию ссылки с помощью шаблона и этот шаблон не совпал ни с одной из ссылок на внешнем репозитории."
+
+#: builtin/pull.c:442
+#, c-format
+msgid ""
+"You asked to pull from the remote '%s', but did not specify\n"
+"a branch. Because this is not the default configured remote\n"
+"for your current branch, you must specify a branch on the command line."
+msgstr "Вы попросили получить изменения со внешнего репозитория «%s», но не указали ветку. Так как это не репозиторий по умолчанию для  вашей текущей ветки, вы должны указать ветку в командной строке."
+
+#: builtin/pull.c:447
+msgid "You are not currently on a branch."
+msgstr "Вы сейчас ни на одной из веток."
+
+#: builtin/pull.c:449 builtin/pull.c:464
+msgid "Please specify which branch you want to rebase against."
+msgstr "Пожалуйста, укажите на какую ветку вы хотите переместить изменения."
+
+#: builtin/pull.c:451 builtin/pull.c:466
+msgid "Please specify which branch you want to merge with."
+msgstr "Пожалуйста, укажите с какой веткой вы хотите слить изменения."
+
+#: builtin/pull.c:452 builtin/pull.c:467
+msgid "See git-pull(1) for details."
+msgstr "Для дополнительной информации смотрите git-pull(1)."
+
+#: builtin/pull.c:462
+msgid "There is no tracking information for the current branch."
+msgstr "У текущей ветки нет информации об отслеживании."
+
+#: builtin/pull.c:471
+#, c-format
+msgid ""
+"If you wish to set tracking information for this branch you can do so with:\n"
+"\n"
+"    git branch --set-upstream-to=%s/<branch> %s\n"
+msgstr "Если вы хотите указать информацию о отслеживаемой ветке, выполните:\n\n    git branch --set-upstream-to=%s/<branch> %s\n"
+
+#: builtin/pull.c:476
+#, c-format
+msgid ""
+"Your configuration specifies to merge with the ref '%s'\n"
+"from the remote, but no such ref was fetched."
+msgstr "Ваша конфигурация указывает, что нужно слить изменения со ссылкой\n«%s» из внешнего репозитория, но такая ссылка не была получена."
+
+#: builtin/pull.c:830
+msgid "Updating an unborn branch with changes added to the index."
+msgstr "Обновление еще не начавшейся ветки с изменениями, добавленными в индекс."
+
+#: builtin/pull.c:859
+#, c-format
+msgid ""
+"fetch updated the current branch head.\n"
+"fast-forwarding your working tree from\n"
+"commit %s."
+msgstr "извлечение обновило голову вашей текущей ветки.\nперемотка вашего рабочего каталога\nс коммита %s."
+
+#: builtin/pull.c:864
+#, c-format
+msgid ""
+"Cannot fast-forward your working tree.\n"
+"After making sure that you saved anything precious from\n"
+"$ git diff %s\n"
+"output, run\n"
+"$ git reset --hard\n"
+"to recover."
+msgstr "Не удалось перемотать вперёд изменения в вашем рабочем каталоге.\nПосле того, как вы убедитесь, что вы сохранили всё необходимое из вывода\n$ git diff %s\n, запустите\n$ git reset --hard\nдля восстановления исходного состояния."
+
+#: builtin/pull.c:879
+msgid "Cannot merge multiple branches into empty head."
+msgstr "Нельзя слить несколько веток в пустой указатель на коммит."
+
+#: builtin/pull.c:883
+msgid "Cannot rebase onto multiple branches."
+msgstr "Невозможно переместить над несколькими ветками."
+
+#: builtin/push.c:15
 msgid "git push [<options>] [<repository> [<refspec>...]]"
 msgstr "git push [<опции>] [<репозиторий> [<спецификация-ссылки>…]]"
 
-#: builtin/push.c:85
+#: builtin/push.c:86
 msgid "tag shorthand without <tag>"
 msgstr "указано сокращение tag, но не указана сама <метка>"
 
-#: builtin/push.c:95
+#: builtin/push.c:96
 msgid "--delete only accepts plain target ref names"
 msgstr "опция --delete принимает только простые целевые имена ссылок"
 
-#: builtin/push.c:139
+#: builtin/push.c:140
 msgid ""
 "\n"
 "To choose either option permanently, see push.default in 'git help config'."
 msgstr "\nЧтобы выбрать любую из опций на постоянной основе, смотрите push.default в «git help config»."
 
-#: builtin/push.c:142
+#: builtin/push.c:143
 #, c-format
 msgid ""
 "The upstream branch of your current branch does not match\n"
 "the name of your current branch.  To push to the upstream branch\n"
 "on the remote, use\n"
 "\n"
@@ -7887,46 +8435,46 @@
 "To push to the branch of the same name on the remote, use\n"
 "\n"
 "    git push %s %s\n"
 "%s"
 msgstr "Имя вышестоящей ветки и вашей текущей ветки различаются. Чтобы отправить изменения в вышестоящую ветку на внешнем репозитории, используйте:\n\n    git push %s HEAD:%s\n\nЧтобы отправить изменения в ветку с таким же именем на внешнем репозитории, используйте:\n\n    git push %s %s\n%s"
 
-#: builtin/push.c:157
+#: builtin/push.c:158
 #, c-format
 msgid ""
 "You are not currently on a branch.\n"
 "To push the history leading to the current (detached HEAD)\n"
 "state now, use\n"
 "\n"
 "    git push %s HEAD:<name-of-remote-branch>\n"
 msgstr "Вы сейчас не находитесь ни на одной из веток.\nЧтобы отправить историю, ведущую к текущему (отделенный HEAD) состоянию, используйте\n\n    git push %s HEAD:<имя-внешней-ветки>\n"
 
-#: builtin/push.c:171
+#: builtin/push.c:172
 #, c-format
 msgid ""
 "The current branch %s has no upstream branch.\n"
 "To push the current branch and set the remote as upstream, use\n"
 "\n"
 "    git push --set-upstream %s %s\n"
 msgstr "Текущая ветка %s не имеет вышестоящей ветки.\nЧтобы отправить текущую ветку и установить внешнюю ветку как вышестоящую для этой ветки, используйте\n\n    git push --set-upstream %s %s\n"
 
-#: builtin/push.c:179
+#: builtin/push.c:180
 #, c-format
 msgid ""
 "The current branch %s has multiple upstream branches, refusing to push."
 msgstr "Ваша текущая ветка %s имеет несколько вышестоящих веток, отказ в отправке изменений."
 
-#: builtin/push.c:182
+#: builtin/push.c:183
 #, c-format
 msgid ""
 "You are pushing to remote '%s', which is not the upstream of\n"
 "your current branch '%s', without telling me what to push\n"
 "to update which remote branch."
 msgstr "Вы сейчас отправляете изменения на внешний репозиторий «%s», который не является вышестоящим для вашей текущей ветки «%s», без указания того, что отправлять и в какую внешнюю ветку."
 
-#: builtin/push.c:205
+#: builtin/push.c:206
 msgid ""
 "push.default is unset; its implicit value has changed in\n"
 "Git 2.0 from 'matching' to 'simple'. To squelch this message\n"
 "and maintain the traditional behavior, use:\n"
 "\n"
 "  git config --global push.default matching\n"
@@ -7944,181 +8492,182 @@
 "\n"
 "See 'git help config' and search for 'push.default' for further information.\n"
 "(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode\n"
 "'current' instead of 'simple' if you sometimes use older versions of Git)"
 msgstr "push.default не установлен; его неявное значение было изменено в Git версии 2.0 с «matching» на «simple». Чтобы прекратить вывод этого сообщения и сохранить старое поведение, используйте:\n\n  git config --global push.default matching\n\nЧтобы прекратить вывод этого сообщения и использовать новое поведение, используйте:\n\n  git config --global push.default simple\n\nКогда push.default установлено в «matching», git будет отправлять изменения локальных веток в существующие внешние ветки с таким же именем.\n\nНачиная с Git версии 2.0, по умолчанию используется более консервативное поведение «simple», которое отправляет изменения текущей ветки в соответствующую внешнюю ветку, из которой «git pull» забирает изменения.\n\nСмотрите «git help config» и ищите «push.default» для дополнительной информации.\n(режим «simple» появился в Git версии 1.7.11. Используйте похожий режим «current» вместо «simple», если вы иногда используете старые версии Git)"
 
-#: builtin/push.c:272
+#: builtin/push.c:273
 msgid "You didn't specify any refspecs to push, and push.default is \"nothing\"."
 msgstr "Вы не указали спецификацию ссылки для отправки, а push.default указан как \"nothing\"."
 
-#: builtin/push.c:279
+#: builtin/push.c:280
 msgid ""
 "Updates were rejected because the tip of your current branch is behind\n"
 "its remote counterpart. Integrate the remote changes (e.g.\n"
 "'git pull ...') before pushing again.\n"
 "See the 'Note about fast-forwards' in 'git push --help' for details."
 msgstr "Обновления были отклонены, так как верхушка вашей текущей ветки\nпозади ее внешней части. Заберите и слейте внешние изменения \n(например, с помощью «git pull …») перед повторной попыткой отправки\nизменений.\nДля дополнительной информации смотрите «Note about fast-forwards»\nв «git push --help»."
 
-#: builtin/push.c:285
+#: builtin/push.c:286
 msgid ""
 "Updates were rejected because a pushed branch tip is behind its remote\n"
 "counterpart. Check out this branch and integrate the remote changes\n"
 "(e.g. 'git pull ...') before pushing again.\n"
 "See the 'Note about fast-forwards' in 'git push --help' for details."
 msgstr "Обновления были отклонены, так как верхушка отправляемой ветки\nпозади ее внешней части. Переключитесь на ветку и заберите внешние\nизменения (например, с помощью «git pull …») перед повторной\nпопыткой отправки изменений.\nДля дополнительной информации смотрите «Note about fast-forwards»\nв «git push --help»."
 
-#: builtin/push.c:291
+#: builtin/push.c:292
 msgid ""
 "Updates were rejected because the remote contains work that you do\n"
 "not have locally. This is usually caused by another repository pushing\n"
 "to the same ref. You may want to first integrate the remote changes\n"
 "(e.g., 'git pull ...') before pushing again.\n"
 "See the 'Note about fast-forwards' in 'git push --help' for details."
 msgstr "Обновления были отклонены, так как внешний репозиторий содержит\nизменения, которых у вас нет в вашем локальном репозитории.\nОбычно, это связанно с тем, что кто-то уже отправил изменения в \nто же место. Перед повторной отправкой ваших изменений, вам нужно\nзабрать и слить изменения из внешнего репозитория себе\n(например, с помощью «git pull …»).\nДля дополнительной информации смотрите «Note about fast-forwards»\nв «git push --help»."
 
-#: builtin/push.c:298
+#: builtin/push.c:299
 msgid "Updates were rejected because the tag already exists in the remote."
 msgstr "Обновления были отклонены, так как метка уже существует во внешнем репозитории."
 
-#: builtin/push.c:301
+#: builtin/push.c:302
 msgid ""
 "You cannot update a remote ref that points at a non-commit object,\n"
 "or update a remote ref to make it point at a non-commit object,\n"
 "without using the '--force' option.\n"
 msgstr "Вы не можете обновить внешнюю ссылку, которая указывает на объект, не являющийся коммитом или обновить внешнюю ссылку так, чтобы она указывала на объект, не являющийся коммитом, без указания опции «--force».\n"
 
-#: builtin/push.c:360
+#: builtin/push.c:361
 #, c-format
 msgid "Pushing to %s\n"
 msgstr "Отправка в %s\n"
 
-#: builtin/push.c:364
+#: builtin/push.c:365
 #, c-format
 msgid "failed to push some refs to '%s'"
 msgstr "не удалось отправить некоторые ссылки в «%s»"
 
-#: builtin/push.c:394
+#: builtin/push.c:395
 #, c-format
 msgid "bad repository '%s'"
 msgstr "плохой репозитория «%s»"
 
-#: builtin/push.c:395
+#: builtin/push.c:396
 msgid ""
 "No configured push destination.\n"
 "Either specify the URL from the command-line or configure a remote repository using\n"
 "\n"
 "    git remote add <name> <url>\n"
 "\n"
 "and then push using the remote name\n"
 "\n"
 "    git push <name>\n"
 msgstr "Не настроена точка назначения для отправки.\nЛибо укажите URL с помощью коммандной строки, либо настройте внешний репозиторий с помощью\n\n    git remote add <имя> <адрес>\n\nа затем отправьте изменения с помощью имени внешнего репозитория\n\n    git push <имя>\n"
 
-#: builtin/push.c:410
+#: builtin/push.c:411
 msgid "--all and --tags are incompatible"
 msgstr "--all и --tags нельзя использовать одновременно"
 
-#: builtin/push.c:411
+#: builtin/push.c:412
 msgid "--all can't be combined with refspecs"
 msgstr "--all нельзя использовать вместе со спецификациями ссылок"
 
-#: builtin/push.c:416
+#: builtin/push.c:417
 msgid "--mirror and --tags are incompatible"
 msgstr "--mirror и --tags нельзя использовать одновременно"
 
-#: builtin/push.c:417
+#: builtin/push.c:418
 msgid "--mirror can't be combined with refspecs"
 msgstr "--mirror нельзя использовать вместе со спецификациями ссылок"
 
-#: builtin/push.c:422
+#: builtin/push.c:423
 msgid "--all and --mirror are incompatible"
 msgstr "--all и --mirror нельзя использовать одновременно"
 
-#: builtin/push.c:502
+#: builtin/push.c:539
 msgid "repository"
 msgstr "репозиторий"
 
-#: builtin/push.c:503
+#: builtin/push.c:540 builtin/send-pack.c:161
 msgid "push all refs"
 msgstr "отправить все ссылки"
 
-#: builtin/push.c:504
+#: builtin/push.c:541 builtin/send-pack.c:163
 msgid "mirror all refs"
 msgstr "сделать зеркало всех ссылок"
 
-#: builtin/push.c:506
+#: builtin/push.c:543
 msgid "delete refs"
 msgstr "удалить ссылки"
 
-#: builtin/push.c:507
+#: builtin/push.c:544
 msgid "push tags (can't be used with --all or --mirror)"
 msgstr "отправить метки (нельзя использовать вместе с --all или --mirror)"
 
-#: builtin/push.c:510
+#: builtin/push.c:547 builtin/send-pack.c:164
 msgid "force updates"
 msgstr "принудительное обновление"
 
-#: builtin/push.c:512
+#: builtin/push.c:549 builtin/send-pack.c:175
 msgid "refname>:<expect"
 msgstr "имя-ссылки>:<ожидается"
 
-#: builtin/push.c:513
+#: builtin/push.c:550 builtin/send-pack.c:176
 msgid "require old value of ref to be at this value"
 msgstr "требовать, чтобы старое значение ссылки было ожидаемым"
 
-#: builtin/push.c:516
+#: builtin/push.c:553
 msgid "control recursive pushing of submodules"
 msgstr "управление рекурсивной отправкой подмодулей"
 
-#: builtin/push.c:518
+#: builtin/push.c:555 builtin/send-pack.c:169
 msgid "use thin pack"
 msgstr "использовать тонкие пакеты"
 
-#: builtin/push.c:519 builtin/push.c:520
+#: builtin/push.c:556 builtin/push.c:557 builtin/send-pack.c:158
+#: builtin/send-pack.c:159
 msgid "receive pack program"
 msgstr "путь к программе упаковки на сервере"
 
-#: builtin/push.c:521
+#: builtin/push.c:558
 msgid "set upstream for git pull/status"
 msgstr "установить вышестоящую ветку для git pull/status"
 
-#: builtin/push.c:524
+#: builtin/push.c:561
 msgid "prune locally removed refs"
 msgstr "почистить локально удаленные ссылки"
 
-#: builtin/push.c:526
+#: builtin/push.c:563
 msgid "bypass pre-push hook"
 msgstr "пропустить перехватчик перед-отправкой"
 
-#: builtin/push.c:527
+#: builtin/push.c:564
 msgid "push missing but relevant tags"
 msgstr "отправить пропущенные, но нужные метки"
 
-#: builtin/push.c:529
+#: builtin/push.c:567 builtin/send-pack.c:166
 msgid "GPG sign the push"
 msgstr "подписать отправку с помощью GPG"
 
-#: builtin/push.c:530
+#: builtin/push.c:569 builtin/send-pack.c:170
 msgid "request atomic transaction on remote side"
 msgstr "запросить выполнение атомарной транзакции на внешней стороне"
 
-#: builtin/push.c:539
+#: builtin/push.c:579
 msgid "--delete is incompatible with --all, --mirror and --tags"
 msgstr "--delete несовместимо с  --all, --mirror и --tags"
 
-#: builtin/push.c:541
+#: builtin/push.c:581
 msgid "--delete doesn't make sense without any refs"
 msgstr "--delete не имеет смысла без указания ссылок"
 
 #: builtin/read-tree.c:37
 msgid ""
-"git read-tree [[-m [--trivial] [--aggressive] | --reset | --prefix=<prefix>]"
+"git read-tree [(-m [--trivial] [--aggressive] | --reset | --prefix=<prefix>)"
 " [-u [--exclude-per-directory=<gitignore>] | -i]] [--no-sparse-checkout] "
 "[--index-output=<file>] (--empty | <tree-ish1> [<tree-ish2> [<tree-ish3>]])"
-msgstr "git read-tree [[-m [--trivial] [--aggressive] | --reset | --prefix=<префикс>] [-u [--exclude-per-directory=<gitignore>] | -i]] [--no-sparse-checkout] [--index-output=<файл>] (--empty | <указатель-дерева-1> [<указатель-дерева-2> [<указатель-дерева-3>]])"
+msgstr "git read-tree [(-m [--trivial] [--aggressive] | --reset | --prefix=<префикс>) [-u [--exclude-per-directory=<gitignore>] | -i]] [--no-sparse-checkout] [--index-output=<файл>] (--empty | <указатель-дерева-1> [<указатель-дерева-2> [<указатель-дерева-3>]])"
 
 #: builtin/read-tree.c:110
 msgid "write resulting index to <file>"
 msgstr "записать результирующий индекс в <файл>"
 
 #: builtin/read-tree.c:113
@@ -8178,18 +8727,18 @@
 msgstr "пропустить применение фильтра частичного перехода"
 
 #: builtin/read-tree.c:139
 msgid "debug unpack-trees"
 msgstr "отладка unpack-trees"
 
-#: builtin/reflog.c:430
+#: builtin/reflog.c:432
 #, c-format
-msgid "%s' for '%s' is not a valid timestamp"
+msgid "'%s' for '%s' is not a valid timestamp"
 msgstr "«%s» для «%s» не является допустимой меткой даты/времени"
 
-#: builtin/reflog.c:547 builtin/reflog.c:552
+#: builtin/reflog.c:549 builtin/reflog.c:554
 #, c-format
 msgid "'%s' is not a valid timestamp"
 msgstr "«%s» не является допустимой меткой даты/времени"
 
 #: builtin/remote.c:12
 msgid "git remote [-v | --verbose]"
@@ -8315,18 +8864,18 @@
 msgstr "указание мастер ветки не имеет смысла с параметром --mirror"
 
 #: builtin/remote.c:177
 msgid "specifying branches to track makes sense only with fetch mirrors"
 msgstr "указание отслеживаемых веток имеет смысл только при зеркальном извлечении"
 
-#: builtin/remote.c:187 builtin/remote.c:640
+#: builtin/remote.c:187 builtin/remote.c:637
 #, c-format
 msgid "remote %s already exists."
 msgstr "внешний репозиторий %s уже существует"
 
-#: builtin/remote.c:191 builtin/remote.c:644
+#: builtin/remote.c:191 builtin/remote.c:641
 #, c-format
 msgid "'%s' is not a valid remote name"
 msgstr "«%s» не является допустимым именем внешнего репозитория."
 
 #: builtin/remote.c:235
 #, c-format
@@ -8343,338 +8892,333 @@
 msgstr "(соответствующая)"
 
 #: builtin/remote.c:448
 msgid "(delete)"
 msgstr "(удаленная)"
 
-#: builtin/remote.c:589 builtin/remote.c:595 builtin/remote.c:601
+#: builtin/remote.c:588 builtin/remote.c:594 builtin/remote.c:600
 #, c-format
 msgid "Could not append '%s' to '%s'"
 msgstr "Не удалось добавить «%s» к «%s»"
 
-#: builtin/remote.c:633 builtin/remote.c:792 builtin/remote.c:892
+#: builtin/remote.c:630 builtin/remote.c:769 builtin/remote.c:869
 #, c-format
 msgid "No such remote: %s"
 msgstr "Нет такого внешнего репозитория: %s"
 
-#: builtin/remote.c:650
+#: builtin/remote.c:647
 #, c-format
 msgid "Could not rename config section '%s' to '%s'"
 msgstr "Не удалось переименовать секцию конфигурации с «%s» на «%s»"
 
-#: builtin/remote.c:656 builtin/remote.c:844
+#: builtin/remote.c:653 builtin/remote.c:821
 #, c-format
 msgid "Could not remove config section '%s'"
 msgstr "Не удалось удалить секцию файла конфигурации «%s»"
 
-#: builtin/remote.c:671
+#: builtin/remote.c:668
 #, c-format
 msgid ""
 "Not updating non-default fetch refspec\n"
 "\t%s\n"
 "\tPlease update the configuration manually if necessary."
 msgstr "Не обновляю нестандартную спецификацию ссылки для извлечения\n\t%s\n\tПожалуйста, если требуется, обновите конфигурацию вручную."
 
-#: builtin/remote.c:677
+#: builtin/remote.c:674
 #, c-format
 msgid "Could not append '%s'"
 msgstr "Не удалось добавить «%s»"
 
-#: builtin/remote.c:688
+#: builtin/remote.c:685
 #, c-format
 msgid "Could not set '%s'"
 msgstr "Не удалось установить «%s»"
 
-#: builtin/remote.c:710
+#: builtin/remote.c:707
 #, c-format
 msgid "deleting '%s' failed"
 msgstr "не удалось удалить «%s»"
 
-#: builtin/remote.c:744
+#: builtin/remote.c:741
 #, c-format
 msgid "creating '%s' failed"
 msgstr "не удалось создать «%s»"
 
-#: builtin/remote.c:763
-#, c-format
-msgid "Could not remove branch %s"
-msgstr "Не удалось удалить ветку «%s»"
-
-#: builtin/remote.c:830
+#: builtin/remote.c:807
 msgid ""
 "Note: A branch outside the refs/remotes/ hierarchy was not removed;\n"
 "to delete it, use:"
 msgid_plural ""
 "Note: Some branches outside the refs/remotes/ hierarchy were not removed;\n"
 "to delete them, use:"
 msgstr[0] "Примечание: Некоторые ветки вне иерархии refs/remotes/ не будут удалены;\nчтобы удалить их, используйте:"
 msgstr[1] "Примечание: Некоторые ветки вне иерархии refs/remotes/ не будут удалены;\nчтобы удалить их, используйте:"
 msgstr[2] "Примечание: Некоторые ветки вне иерархии refs/remotes/ не будут удалены;\nчтобы удалить их, используйте:"
 msgstr[3] "Примечание: Некоторые ветки вне иерархии refs/remotes/ не будут удалены;\nчтобы удалить их, используйте:"
 
-#: builtin/remote.c:945
+#: builtin/remote.c:922
 #, c-format
 msgid " new (next fetch will store in remotes/%s)"
 msgstr " новая (следующее извлечение сохранит ее в remotes/%s)"
 
-#: builtin/remote.c:948
+#: builtin/remote.c:925
 msgid " tracked"
 msgstr " отслеживается"
 
-#: builtin/remote.c:950
+#: builtin/remote.c:927
 msgid " stale (use 'git remote prune' to remove)"
 msgstr " недействительна (используйте «git remote prune», чтобы удалить)"
 
-#: builtin/remote.c:952
+#: builtin/remote.c:929
 msgid " ???"
 msgstr " ???"
 
-#: builtin/remote.c:993
+#: builtin/remote.c:970
 #, c-format
 msgid "invalid branch.%s.merge; cannot rebase onto > 1 branch"
 msgstr "неправильный параметр конфигурации branch.%s.merge; невозможно переместить более чем над 1 веткой"
 
-#: builtin/remote.c:1000
+#: builtin/remote.c:977
 #, c-format
 msgid "rebases onto remote %s"
 msgstr "будет перемещена над внешней веткой %s"
 
-#: builtin/remote.c:1003
+#: builtin/remote.c:980
 #, c-format
 msgid " merges with remote %s"
 msgstr " будет слита с внешней веткой %s"
 
-#: builtin/remote.c:1004
+#: builtin/remote.c:981
 msgid "    and with remote"
 msgstr "    и с внешней веткой"
 
-#: builtin/remote.c:1006
+#: builtin/remote.c:983
 #, c-format
 msgid "merges with remote %s"
 msgstr "будет слита с внешней веткой %s"
 
-#: builtin/remote.c:1007
+#: builtin/remote.c:984
 msgid "   and with remote"
 msgstr "   и с внешней веткой"
 
-#: builtin/remote.c:1053
+#: builtin/remote.c:1030
 msgid "create"
 msgstr "создана"
 
-#: builtin/remote.c:1056
+#: builtin/remote.c:1033
 msgid "delete"
 msgstr "удалена"
 
-#: builtin/remote.c:1060
+#: builtin/remote.c:1037
 msgid "up to date"
 msgstr "уже актуальна"
 
-#: builtin/remote.c:1063
+#: builtin/remote.c:1040
 msgid "fast-forwardable"
 msgstr "возможна перемотка вперед"
 
-#: builtin/remote.c:1066
+#: builtin/remote.c:1043
 msgid "local out of date"
 msgstr "локальная ветка устарела"
 
-#: builtin/remote.c:1073
+#: builtin/remote.c:1050
 #, c-format
 msgid "    %-*s forces to %-*s (%s)"
 msgstr "    %-*s будет принудительно отправлена в %-*s (%s)"
 
-#: builtin/remote.c:1076
+#: builtin/remote.c:1053
 #, c-format
 msgid "    %-*s pushes to %-*s (%s)"
 msgstr "    %-*s будет отправлена в %-*s (%s)"
 
-#: builtin/remote.c:1080
+#: builtin/remote.c:1057
 #, c-format
 msgid "    %-*s forces to %s"
 msgstr "    %-*s будет принудительно отправлена в %s"
 
-#: builtin/remote.c:1083
+#: builtin/remote.c:1060
 #, c-format
 msgid "    %-*s pushes to %s"
 msgstr "    %-*s будет отправлена в %s"
 
-#: builtin/remote.c:1151
+#: builtin/remote.c:1128
 msgid "do not query remotes"
 msgstr "не опрашивать внешние репозитории"
 
-#: builtin/remote.c:1178
+#: builtin/remote.c:1155
 #, c-format
 msgid "* remote %s"
 msgstr "* внешний репозиторий %s"
 
-#: builtin/remote.c:1179
+#: builtin/remote.c:1156
 #, c-format
 msgid "  Fetch URL: %s"
 msgstr "  URL для извлечения: %s"
 
-#: builtin/remote.c:1180 builtin/remote.c:1331
+#: builtin/remote.c:1157 builtin/remote.c:1308
 msgid "(no URL)"
 msgstr "(нет URL)"
 
-#: builtin/remote.c:1189 builtin/remote.c:1191
+#: builtin/remote.c:1166 builtin/remote.c:1168
 #, c-format
 msgid "  Push  URL: %s"
 msgstr "  URL для отправки: %s"
 
-#: builtin/remote.c:1193 builtin/remote.c:1195 builtin/remote.c:1197
+#: builtin/remote.c:1170 builtin/remote.c:1172 builtin/remote.c:1174
 #, c-format
 msgid "  HEAD branch: %s"
 msgstr "  HEAD ветка: %s"
 
-#: builtin/remote.c:1199
+#: builtin/remote.c:1176
 #, c-format
 msgid "  HEAD branch (remote HEAD is ambiguous, may be one of the following):\n"
 msgstr "  HEAD ветка (HEAD внешнего репозитория неоднозначный, может быть одним из):\n"
 
-#: builtin/remote.c:1211
+#: builtin/remote.c:1188
 #, c-format
 msgid "  Remote branch:%s"
 msgid_plural "  Remote branches:%s"
 msgstr[0] "    Внешняя ветка:%s"
 msgstr[1] "    Внешние ветки:%s"
 msgstr[2] "    Внешние ветки:%s"
 msgstr[3] "    Внешние ветки:%s"
 
-#: builtin/remote.c:1214 builtin/remote.c:1241
+#: builtin/remote.c:1191 builtin/remote.c:1218
 msgid " (status not queried)"
 msgstr " (статус не запрошен)"
 
-#: builtin/remote.c:1223
+#: builtin/remote.c:1200
 msgid "  Local branch configured for 'git pull':"
 msgid_plural "  Local branches configured for 'git pull':"
 msgstr[0] "  Локальная ветка, настроенная для «git pull»:"
 msgstr[1] "  Локальные ветки, настроенные для «git pull»:"
 msgstr[2] "  Локальные ветки, настроенные для «git pull»:"
 msgstr[3] "  Локальные ветки, настроенные для «git pull»:"
 
-#: builtin/remote.c:1231
+#: builtin/remote.c:1208
 msgid "  Local refs will be mirrored by 'git push'"
 msgstr " Локальные ссылки, зеркалируемые с помощью «git push»"
 
-#: builtin/remote.c:1238
+#: builtin/remote.c:1215
 #, c-format
 msgid "  Local ref configured for 'git push'%s:"
 msgid_plural "  Local refs configured for 'git push'%s:"
 msgstr[0] "  Локальная ссылка, настроенная для «git push»%s:"
 msgstr[1] "  Локальные ссылки, настроенные для «git push»%s:"
 msgstr[2] "  Локальные ссылки, настроенные для «git push»%s:"
 msgstr[3] "  Локальные ссылки, настроенные для «git push»%s:"
 
-#: builtin/remote.c:1259
+#: builtin/remote.c:1236
 msgid "set refs/remotes/<name>/HEAD according to remote"
 msgstr "установить refs/remotes/<имя>/HEAD в зависимости от внешнего репозитория"
 
-#: builtin/remote.c:1261
+#: builtin/remote.c:1238
 msgid "delete refs/remotes/<name>/HEAD"
 msgstr "удалить refs/remotes/<имя>/HEAD"
 
-#: builtin/remote.c:1276
+#: builtin/remote.c:1253
 msgid "Cannot determine remote HEAD"
 msgstr "Не удалось определить внешний HEAD"
 
-#: builtin/remote.c:1278
+#: builtin/remote.c:1255
 msgid "Multiple remote HEAD branches. Please choose one explicitly with:"
 msgstr "Несколько внешних HEAD веток. Укажите явно одну из них:"
 
-#: builtin/remote.c:1288
+#: builtin/remote.c:1265
 #, c-format
 msgid "Could not delete %s"
 msgstr "Не удалось удалить %s"
 
-#: builtin/remote.c:1296
+#: builtin/remote.c:1273
 #, c-format
 msgid "Not a valid ref: %s"
 msgstr "Неправильная ссылка: %s"
 
-#: builtin/remote.c:1298
+#: builtin/remote.c:1275
 #, c-format
 msgid "Could not setup %s"
 msgstr "Не удалось настроить %s"
 
-#: builtin/remote.c:1316
+#: builtin/remote.c:1293
 #, c-format
 msgid " %s will become dangling!"
 msgstr " %s будет висящей веткой!"
 
-#: builtin/remote.c:1317
+#: builtin/remote.c:1294
 #, c-format
 msgid " %s has become dangling!"
 msgstr " %s стала висящей веткой!"
 
-#: builtin/remote.c:1327
+#: builtin/remote.c:1304
 #, c-format
 msgid "Pruning %s"
 msgstr "Удаление %s"
 
-#: builtin/remote.c:1328
+#: builtin/remote.c:1305
 #, c-format
 msgid "URL: %s"
 msgstr "URL: %s"
 
-#: builtin/remote.c:1351
+#: builtin/remote.c:1321
 #, c-format
 msgid " * [would prune] %s"
 msgstr " * [будет удалена] %s"
 
-#: builtin/remote.c:1354
+#: builtin/remote.c:1324
 #, c-format
 msgid " * [pruned] %s"
 msgstr " * [удалена] %s"
 
-#: builtin/remote.c:1399
+#: builtin/remote.c:1369
 msgid "prune remotes after fetching"
 msgstr "почистить внешние репозитории после извлечения"
 
-#: builtin/remote.c:1465 builtin/remote.c:1539
+#: builtin/remote.c:1435 builtin/remote.c:1509
 #, c-format
 msgid "No such remote '%s'"
 msgstr "Нет такого внешнего репозитория «%s»"
 
-#: builtin/remote.c:1485
+#: builtin/remote.c:1455
 msgid "add branch"
 msgstr "добавить ветку"
 
-#: builtin/remote.c:1492
+#: builtin/remote.c:1462
 msgid "no remote specified"
 msgstr "не указан внешний репозиторий"
 
-#: builtin/remote.c:1514
+#: builtin/remote.c:1484
 msgid "manipulate push URLs"
 msgstr "управление URL отправки"
 
-#: builtin/remote.c:1516
+#: builtin/remote.c:1486
 msgid "add URL"
 msgstr "добавить URL"
 
-#: builtin/remote.c:1518
+#: builtin/remote.c:1488
 msgid "delete URLs"
 msgstr "удалить URL"
 
-#: builtin/remote.c:1525
+#: builtin/remote.c:1495
 msgid "--add --delete doesn't make sense"
 msgstr "--add нельзя использовать одновременно с --delete"
 
-#: builtin/remote.c:1565
+#: builtin/remote.c:1535
 #, c-format
 msgid "Invalid old URL pattern: %s"
 msgstr "Неправильный шаблон старого URL: %s"
 
-#: builtin/remote.c:1573
+#: builtin/remote.c:1543
 #, c-format
 msgid "No such URL found: %s"
 msgstr "Не найдены совпадения URL: %s"
 
-#: builtin/remote.c:1575
+#: builtin/remote.c:1545
 msgid "Will not delete all non-push URLs"
 msgstr "Нельзя удалить все URL не-отправки"
 
-#: builtin/remote.c:1589
+#: builtin/remote.c:1559
 msgid "be verbose; must be placed before a subcommand"
 msgstr "быть многословнее; должно стоять перед подкомандой"
 
 #: builtin/repack.c:17
 msgid "git repack [<options>]"
 msgstr "git repack [<опции>]"
@@ -8740,13 +9284,13 @@
 msgstr "максимальный размер каждого из файлов пакета"
 
 #: builtin/repack.c:187
 msgid "repack objects in packs marked with .keep"
 msgstr "переупаковать объекты в пакеты, помеченные файлом .keep"
 
-#: builtin/repack.c:377
+#: builtin/repack.c:378
 #, c-format
 msgid "removing '%s' failed"
 msgstr "не удалось удалить «%s»"
 
 #: builtin/replace.c:19
 msgid "git replace [-f] <object> <replacement>"
@@ -8922,17 +9466,12 @@
 
 #: builtin/reset.c:305
 #, c-format
 msgid "Failed to resolve '%s' as a valid revision."
 msgstr "Не удалось распознать «%s» как действительную редакцию."
 
-#: builtin/reset.c:308 builtin/reset.c:316
-#, c-format
-msgid "Could not parse object '%s'."
-msgstr "Не удалось разобрать объект «%s»."
-
 #: builtin/reset.c:313
 #, c-format
 msgid "Failed to resolve '%s' as a valid tree."
 msgstr "Не удалось распознать «%s» как действительное дерево."
 
 #: builtin/reset.c:322
@@ -8967,12 +9506,16 @@
 msgstr "Не удалось сбросить файл индекса на редакцию «%s»."
 
 #: builtin/reset.c:374
 msgid "Could not write new index file."
 msgstr "Не удалось записать новый файл индекса."
 
+#: builtin/rev-list.c:354
+msgid "rev-list does not support display of notes"
+msgstr "rev-list не поддерживает отображение заметок"
+
 #: builtin/rev-parse.c:361
 msgid "git rev-parse --parseopt [<options>] -- [<args>...]"
 msgstr "git rev-parse --parseopt [<опции>] -- [<аргументы>…]"
 
 #: builtin/rev-parse.c:366
 msgid "keep the `--` passed as an arg"
@@ -8983,13 +9526,13 @@
 msgstr "остановить разбор после первого аргумента не являющегося опцией"
 
 #: builtin/rev-parse.c:371
 msgid "output in stuck long form"
 msgstr "выводить аргументы в длинном формате"
 
-#: builtin/rev-parse.c:499
+#: builtin/rev-parse.c:502
 msgid ""
 "git rev-parse --parseopt [<options>] -- [<args>...]\n"
 "   or: git rev-parse --sq-quote [<arg>...]\n"
 "   or: git rev-parse [<options>] [<arg>...]\n"
 "\n"
 "Run \"git rev-parse --parseopt -h\" for more information on the first usage."
@@ -9053,16 +9596,12 @@
 msgstr "опция для стратегии слияния"
 
 #: builtin/revert.c:104
 msgid "append commit name"
 msgstr "добавить имя коммита"
 
-#: builtin/revert.c:105
-msgid "allow fast-forward"
-msgstr "разрешить перемотку вперед"
-
 #: builtin/revert.c:106
 msgid "preserve initially empty commits"
 msgstr "сохранить изначально пустые коммиты"
 
 #: builtin/revert.c:107
 msgid "allow commits with empty messages"
@@ -9177,12 +9716,34 @@
 
 #: builtin/rm.c:374
 #, c-format
 msgid "git rm: unable to remove %s"
 msgstr "git rm: не удалось удалить %s"
 
+#: builtin/send-pack.c:18
+msgid ""
+"git send-pack [--all | --mirror] [--dry-run] [--force] [--receive-pack=<git-receive-pack>] [--verbose] [--thin] [--atomic] [<host>:]<directory> [<ref>...]\n"
+"  --all and explicit <ref> specification are mutually exclusive."
+msgstr "git send-pack [--all | --mirror] [--dry-run] [--force] [--receive-pack=<git-receive-pack>] [--verbose] [--thin] [--atomic] [<сервер>:]<каталог> [<ссылка>…]\n  --all и явная спецификация <ссылки> взаимно исключающие."
+
+#: builtin/send-pack.c:160
+msgid "remote name"
+msgstr "имя внешнего репозитория"
+
+#: builtin/send-pack.c:171
+msgid "use stateless RPC protocol"
+msgstr "протокол без сохранения состояния для RPC"
+
+#: builtin/send-pack.c:172
+msgid "read refs from stdin"
+msgstr "прочитать ссылки из стандартного ввода"
+
+#: builtin/send-pack.c:173
+msgid "print status from remote helper"
+msgstr "вывести статус от скрипта внешнего сервера"
+
 #: builtin/shortlog.c:13
 msgid "git shortlog [<options>] [<revision-range>] [[--] [<path>...]]"
 msgstr "git shortlog [<опции>] [<диапазон-редакций>] [[--] [<путь>…]]"
 
 #: builtin/shortlog.c:131
 #, c-format
@@ -9289,14 +9850,14 @@
 msgid ""
 "git show-ref [-q | --quiet] [--verify] [--head] [-d | --dereference] [-s | "
 "--hash[=<n>]] [--abbrev[=<n>]] [--tags] [--heads] [--] [<pattern>...]"
 msgstr "git show-ref [-q | --quiet] [--verify] [--head] [-d | --dereference] [-s | --hash[=<n>]] [--abbrev[=<n>]] [--tags] [--heads] [--] [<шаблон>…]"
 
 #: builtin/show-ref.c:11
-msgid "git show-ref --exclude-existing[=pattern] < ref-list"
-msgstr "git show-ref --exclude-existing[=шаблон] < ref-list"
+msgid "git show-ref --exclude-existing[=<pattern>] < <ref-list>"
+msgstr "git show-ref --exclude-existing[=<шаблон>] < <список-ссылок>"
 
 #: builtin/show-ref.c:170
 msgid "only show tags (can be combined with heads)"
 msgstr "вывести только метки (можно использовать одновременно с --heads)"
 
 #: builtin/show-ref.c:171
@@ -9344,17 +9905,17 @@
 msgstr "удалить символьные ссылки"
 
 #: builtin/symbolic-ref.c:42
 msgid "shorten ref output"
 msgstr "укороченный вывод ссылок"
 
-#: builtin/symbolic-ref.c:43 builtin/update-ref.c:358
+#: builtin/symbolic-ref.c:43 builtin/update-ref.c:362
 msgid "reason"
 msgstr "причина"
 
-#: builtin/symbolic-ref.c:43 builtin/update-ref.c:358
+#: builtin/symbolic-ref.c:43 builtin/update-ref.c:362
 msgid "reason of the update"
 msgstr "причина обновления"
 
 #: builtin/tag.c:22
 msgid ""
 "git tag [-a | -s | -u <key-id>] [-f] [-m <msg> | -F <file>] <tagname> "
@@ -9459,116 +10020,120 @@
 
 #: builtin/tag.c:561
 #, c-format
 msgid "malformed object name '%s'"
 msgstr "Поврежденное имя объекта «%s»"
 
-#: builtin/tag.c:589
+#: builtin/tag.c:590
 msgid "list tag names"
 msgstr "список названий меток"
 
-#: builtin/tag.c:591
+#: builtin/tag.c:592
 msgid "print <n> lines of each tag message"
 msgstr "печатать <n> строк описания от каждой метки"
 
-#: builtin/tag.c:593
+#: builtin/tag.c:594
 msgid "delete tags"
 msgstr "удалить метки"
 
-#: builtin/tag.c:594
+#: builtin/tag.c:595
 msgid "verify tags"
 msgstr "проверить метки"
 
-#: builtin/tag.c:596
+#: builtin/tag.c:597
 msgid "Tag creation options"
 msgstr "Настройки создания метки"
 
-#: builtin/tag.c:598
+#: builtin/tag.c:599
 msgid "annotated tag, needs a message"
 msgstr "для аннотированной метки нужно сообщение"
 
-#: builtin/tag.c:600
+#: builtin/tag.c:601
 msgid "tag message"
 msgstr "описание метки"
 
-#: builtin/tag.c:602
+#: builtin/tag.c:603
 msgid "annotated and GPG-signed tag"
 msgstr "аннотированная и подписанная с помощью GPG метка"
 
-#: builtin/tag.c:606
+#: builtin/tag.c:607
 msgid "use another key to sign the tag"
 msgstr "использовать другой ключ для подписания метки"
 
-#: builtin/tag.c:607
+#: builtin/tag.c:608
 msgid "replace the tag if exists"
 msgstr "замена метки, если она существует"
 
-#: builtin/tag.c:609
+#: builtin/tag.c:609 builtin/update-ref.c:368
+msgid "create a reflog"
+msgstr "создать журнал ссылок"
+
+#: builtin/tag.c:611
 msgid "Tag listing options"
 msgstr "Настройки вывода списка меток"
 
-#: builtin/tag.c:610
+#: builtin/tag.c:612
 msgid "show tag list in columns"
 msgstr "показать список меток по столбцам"
 
-#: builtin/tag.c:612
+#: builtin/tag.c:614
 msgid "sort tags"
 msgstr "отсортировать метки"
 
-#: builtin/tag.c:617 builtin/tag.c:623
+#: builtin/tag.c:619 builtin/tag.c:625
 msgid "print only tags that contain the commit"
 msgstr "вывод только меток, которые содержат коммит"
 
-#: builtin/tag.c:629
+#: builtin/tag.c:631
 msgid "print only tags of the object"
 msgstr "вывод только меток, определенного объекта"
 
-#: builtin/tag.c:655
+#: builtin/tag.c:657
 msgid "--column and -n are incompatible"
 msgstr "--column и -n нельзя использовать одновременно"
 
-#: builtin/tag.c:667
+#: builtin/tag.c:669
 msgid "--sort and -n are incompatible"
 msgstr "--sort и -n нельзя использовать одновременно"
 
-#: builtin/tag.c:674
+#: builtin/tag.c:676
 msgid "-n option is only allowed with -l."
 msgstr "опцию -n можно использовать только вместе с -l."
 
-#: builtin/tag.c:676
+#: builtin/tag.c:678
 msgid "--contains option is only allowed with -l."
 msgstr "опцию --contains можно использовать только вместе с -l."
 
-#: builtin/tag.c:678
+#: builtin/tag.c:680
 msgid "--points-at option is only allowed with -l."
 msgstr "опцию --points-at можно использовать только вместе с -l."
 
-#: builtin/tag.c:686
+#: builtin/tag.c:688
 msgid "only one -F or -m option is allowed."
 msgstr "-F и -m нельзя использовать одновременно."
 
-#: builtin/tag.c:706
+#: builtin/tag.c:708
 msgid "too many params"
 msgstr "передано слишком много параметров"
 
-#: builtin/tag.c:712
+#: builtin/tag.c:714
 #, c-format
 msgid "'%s' is not a valid tag name."
 msgstr "«%s» не является допустимым именем метки."
 
-#: builtin/tag.c:717
+#: builtin/tag.c:719
 #, c-format
 msgid "tag '%s' already exists"
 msgstr "метка «%s» уже существует"
 
-#: builtin/tag.c:741
+#: builtin/tag.c:744
 #, c-format
 msgid "Updated tag '%s' (was %s)\n"
 msgstr "Метка «%s» обновлена (была %s)\n"
 
-#: builtin/unpack-objects.c:489
+#: builtin/unpack-objects.c:490
 msgid "Unpacking objects"
 msgstr "Распаковка объектов"
 
 #: builtin/update-index.c:70
 #, c-format
 msgid "failed to create directory %s"
@@ -9760,25 +10325,25 @@
 msgstr "git update-ref [<опции>]    <имя-ссылки> <новое-значение> [<старое-значение>]"
 
 #: builtin/update-ref.c:11
 msgid "git update-ref [<options>] --stdin [-z]"
 msgstr "git update-ref [<опции>] --stdin [-z]"
 
-#: builtin/update-ref.c:359
+#: builtin/update-ref.c:363
 msgid "delete the reference"
 msgstr "удалить ссылку"
 
-#: builtin/update-ref.c:361
+#: builtin/update-ref.c:365
 msgid "update <refname> not the one it points to"
 msgstr "обновить <имя-ссылки> а не то, на что она указывает"
 
-#: builtin/update-ref.c:362
+#: builtin/update-ref.c:366
 msgid "stdin has NUL-terminated arguments"
 msgstr "ввод отделенный НУЛЕВЫМИ символами"
 
-#: builtin/update-ref.c:363
+#: builtin/update-ref.c:367
 msgid "read updates from stdin"
 msgstr "прочитать обновления из стандартного ввода"
 
 #: builtin/update-server-info.c:6
 msgid "git update-server-info [--force]"
 msgstr "git update-server-info [--force]"
@@ -9788,16 +10353,20 @@
 msgstr "обновить информацию о серверах с нуля"
 
 #: builtin/verify-commit.c:17
 msgid "git verify-commit [-v | --verbose] <commit>..."
 msgstr "git verify-commit [-v | --verbose] <коммит>…"
 
-#: builtin/verify-commit.c:75
+#: builtin/verify-commit.c:72
 msgid "print commit contents"
 msgstr "вывести содержимое коммита"
 
+#: builtin/verify-commit.c:73 builtin/verify-tag.c:84
+msgid "print raw gpg status output"
+msgstr "выводить сырой вывод статуса от gpg"
+
 #: builtin/verify-pack.c:54
 msgid "git verify-pack [-v | --verbose] [-s | --stat-only] <pack>..."
 msgstr "git verify-pack [-v | --verbose] [-s | --stat-only] <пакет>…"
 
 #: builtin/verify-pack.c:64
 msgid "verbose"
@@ -9808,92 +10377,88 @@
 msgstr "вывести только статистику"
 
 #: builtin/verify-tag.c:17
 msgid "git verify-tag [-v | --verbose] <tag>..."
 msgstr "git verify-tag [-v | --verbose] <метка>…"
 
-#: builtin/verify-tag.c:73
+#: builtin/verify-tag.c:83
 msgid "print tag contents"
 msgstr "вывести содержимое метки"
 
-#: builtin/worktree.c:11
+#: builtin/worktree.c:13
 msgid "git worktree add [<options>] <path> <branch>"
 msgstr "git worktree add [<опции>] <путь> <ветка>"
 
-#: builtin/worktree.c:12
+#: builtin/worktree.c:14
 msgid "git worktree prune [<options>]"
 msgstr "git worktree prune [<опции>]"
 
-#: builtin/worktree.c:27
+#: builtin/worktree.c:36
 #, c-format
 msgid "Removing worktrees/%s: not a valid directory"
 msgstr "Удаление рабочих каталогов/%s: не является каталогом"
 
-#: builtin/worktree.c:33
+#: builtin/worktree.c:42
 #, c-format
 msgid "Removing worktrees/%s: gitdir file does not exist"
 msgstr "Удаление рабочих каталогов/%s: файл gitdir не существует"
 
-#: builtin/worktree.c:38
+#: builtin/worktree.c:47
 #, c-format
 msgid "Removing worktrees/%s: unable to read gitdir file (%s)"
 msgstr "Удаление рабочих каталогов/%s: не удалось прочитать файл gitdir (%s)"
 
-#: builtin/worktree.c:49
+#: builtin/worktree.c:58
 #, c-format
 msgid "Removing worktrees/%s: invalid gitdir file"
 msgstr "Удаление рабочих каталогов/%s: недействительный файл gitdir"
 
-#: builtin/worktree.c:65
+#: builtin/worktree.c:74
 #, c-format
 msgid "Removing worktrees/%s: gitdir file points to non-existent location"
 msgstr "Удаление рабочих каталогов/%s: gitdir указывает на несуществующее расположение"
 
-#: builtin/worktree.c:100
+#: builtin/worktree.c:109
 #, c-format
 msgid "failed to remove: %s"
 msgstr "не удалось удалить: %s"
 
-#: builtin/worktree.c:186
+#: builtin/worktree.c:198
 #, c-format
 msgid "'%s' already exists"
 msgstr "«%s» уже существует"
 
-#: builtin/worktree.c:207
+#: builtin/worktree.c:232
 #, c-format
 msgid "could not create directory of '%s'"
 msgstr "не удалось создать каталог «%s»"
 
-#: builtin/worktree.c:241
-msgid "unable to resolve HEAD"
-msgstr "не удалось определить HEAD"
-
-#: builtin/worktree.c:249
+#: builtin/worktree.c:268
 #, c-format
-msgid "Enter %s (identifier %s)"
-msgstr "Вход в %s (идентификатор %s)"
+msgid "Preparing %s (identifier %s)"
+msgstr "Подготовка %s (идентификатор %s)"
 
-#: builtin/worktree.c:281
+#: builtin/worktree.c:316
 msgid "checkout <branch> even if already checked out in other worktree"
 msgstr "перейти на <ветка> даже если она уже активна в другом рабочесм каталоге"
 
-#: builtin/worktree.c:283
+#: builtin/worktree.c:318
 msgid "create a new branch"
 msgstr "создать новую ветку"
 
-#: builtin/worktree.c:285
+#: builtin/worktree.c:320
 msgid "create or reset a branch"
 msgstr "создать или перейти на ветку"
 
-#: builtin/worktree.c:286
+#: builtin/worktree.c:321
 msgid "detach HEAD at named commit"
 msgstr "отсоединить HEAD на указанном коммите"
 
-#: builtin/worktree.c:292
-msgid "-b and -B are mutually exclusive"
-msgstr "-b и -B нельзя использовать одновременно"
+#: builtin/worktree.c:328
+msgid "-b, -B, and --detach are mutually exclusive"
+msgstr "-b, -B и --detach нельзя использовать одновременно"
 
 #: builtin/write-tree.c:13
 msgid "git write-tree [--missing-ok] [--prefix=<prefix>/]"
 msgstr "git write-tree [--missing-ok] [--prefix=<префикс>/]"
 
 #: builtin/write-tree.c:26
@@ -9905,482 +10470,301 @@
 msgstr "вывести объект дерева для подкаталога с <префикс>"
 
 #: builtin/write-tree.c:30
 msgid "only useful for debugging"
 msgstr "используется только при отладке"
 
-#: credential-cache--daemon.c:267
+#: credential-cache--daemon.c:255
 msgid "print debugging messages to stderr"
 msgstr "вывод отладочных сообщений на stderr"
 
 #: git.c:14
 msgid ""
 "'git help -a' and 'git help -g' list available subcommands and some\n"
 "concept guides. See 'git help <command>' or 'git help <concept>'\n"
 "to read about a specific subcommand or concept."
 msgstr "«git help -а» и «git help -g» выводит список доступных подкоманд и\nнекоторые руководства по темам. Запустите «git help <команда>» или\n«git help <термин>», чтобы прочесть о конкретных подкоманде или теме."
 
-#: common-cmds.h:10
+#: common-cmds.h:9
 msgid "start a working area (see also: git help tutorial)"
 msgstr "создать рабочую область (смотрите также: git help tutorial)"
 
-#: common-cmds.h:11
+#: common-cmds.h:10
 msgid "work on the current change (see also: git help everyday)"
 msgstr "работа с текущими изменениями (смотрите также: git help everyday)"
 
-#: common-cmds.h:12
+#: common-cmds.h:11
 msgid "examine the history and state (see also: git help revisions)"
 msgstr "просмотр истории и текущего состояния (смотрите также: git help revisions)"
 
-#: common-cmds.h:13
+#: common-cmds.h:12
 msgid "grow, mark and tweak your common history"
 msgstr "выращивание, отметка и настройка вашей общей истории"
 
-#: common-cmds.h:14
+#: common-cmds.h:13
 msgid "collaborate (see also: git help workflows)"
 msgstr "совместная работа (смотрите также: git help workflows)"
 
-#: common-cmds.h:18
+#: common-cmds.h:17
 msgid "Add file contents to the index"
 msgstr "Добавление содержимого файла в индекс"
 
-#: common-cmds.h:19
-msgid "Find by binary search the change that introduced a bug"
-msgstr "Двоичный поиск изменения, которое вносит ошибку"
+#: common-cmds.h:18
+msgid "Use binary search to find the commit that introduced a bug"
+msgstr "Использовать двоичный поиск изменения, которое вносит ошибку"
 
-#: common-cmds.h:20
+#: common-cmds.h:19
 msgid "List, create, or delete branches"
 msgstr "Вывод списка, создание или удаление веток"
 
-#: common-cmds.h:21
+#: common-cmds.h:20
 msgid "Switch branches or restore working tree files"
 msgstr "Переключение веток или восстановление файлов в рабочем каталоге"
 
-#: common-cmds.h:22
+#: common-cmds.h:21
 msgid "Clone a repository into a new directory"
 msgstr "Клонирование репозитория в новый каталог"
 
-#: common-cmds.h:23
+#: common-cmds.h:22
 msgid "Record changes to the repository"
 msgstr "Запись изменений в репозиторий"
 
-#: common-cmds.h:24
+#: common-cmds.h:23
 msgid "Show changes between commits, commit and working tree, etc"
 msgstr "Вывод разницы между коммитами, коммитом и рабочим каталогом и т.д."
 
-#: common-cmds.h:25
+#: common-cmds.h:24
 msgid "Download objects and refs from another repository"
 msgstr "Загрузка объектов и ссылок из другого репозитория"
 
-#: common-cmds.h:26
+#: common-cmds.h:25
 msgid "Print lines matching a pattern"
 msgstr "Вывод строк, соответствующих шаблону"
 
-#: common-cmds.h:27
+#: common-cmds.h:26
 msgid "Create an empty Git repository or reinitialize an existing one"
 msgstr "Создание пустого репозитория Git или реинициализация существующего"
 
-#: common-cmds.h:28
+#: common-cmds.h:27
 msgid "Show commit logs"
 msgstr "Вывод истории коммитов"
 
-#: common-cmds.h:29
+#: common-cmds.h:28
 msgid "Join two or more development histories together"
 msgstr "Объединение одной или нескольких историй разработки вместе"
 
-#: common-cmds.h:30
+#: common-cmds.h:29
 msgid "Move or rename a file, a directory, or a symlink"
 msgstr "Перемещение или переименование файла, каталога или символьной ссылки"
 
-#: common-cmds.h:31
+#: common-cmds.h:30
 msgid "Fetch from and integrate with another repository or a local branch"
 msgstr "Извлечение изменений и объединение с другим репозиторием или локальной веткой"
 
-#: common-cmds.h:32
+#: common-cmds.h:31
 msgid "Update remote refs along with associated objects"
 msgstr "Обновление внешних ссылок и связанных объектов"
 
-#: common-cmds.h:33
+#: common-cmds.h:32
 msgid "Forward-port local commits to the updated upstream head"
 msgstr "Перемещение локальных коммитов над обновленной вышестоящей веткой"
 
-#: common-cmds.h:34
+#: common-cmds.h:33
 msgid "Reset current HEAD to the specified state"
 msgstr "Сброс текущего состояния HEAD на указанное состояние"
 
-#: common-cmds.h:35
+#: common-cmds.h:34
 msgid "Remove files from the working tree and from the index"
 msgstr "Удаление файлов из рабочего каталога и индекса"
 
-#: common-cmds.h:36
+#: common-cmds.h:35
 msgid "Show various types of objects"
 msgstr "Вывод различных типов объектов"
 
-#: common-cmds.h:37
+#: common-cmds.h:36
 msgid "Show the working tree status"
 msgstr "Вывод состояния рабочего каталога"
 
-#: common-cmds.h:38
+#: common-cmds.h:37
 msgid "Create, list, delete or verify a tag object signed with GPG"
 msgstr "Создание, вывод списка, удаление или проверка метки, подписанной с помощью GPG"
 
-#: parse-options.h:142
+#: parse-options.h:145
 msgid "expiry-date"
 msgstr "дата-окончания"
 
-#: parse-options.h:157
+#: parse-options.h:160
 msgid "no-op (backward compatibility)"
 msgstr "ничего не делает (оставлено для обратной совместимости)"
 
-#: parse-options.h:231
+#: parse-options.h:236
 msgid "be more verbose"
 msgstr "быть многословнее"
 
-#: parse-options.h:233
+#: parse-options.h:238
 msgid "be more quiet"
 msgstr "тихий режим"
 
-#: parse-options.h:239
+#: parse-options.h:244
 msgid "use <n> digits to display SHA-1s"
 msgstr "использовать <n> цифр для вывода SHA-1"
 
-#: rerere.h:27
+#: rerere.h:28
 msgid "update the index with reused conflict resolution if possible"
 msgstr "обновить индекс с помощью переиспользования разрешения конфликта, если возможно"
 
-#: git-am.sh:53
-msgid "You need to set your committer info first"
-msgstr "Сначала нужно указать вашу информацию о коммитере"
-
-#: git-am.sh:100
-msgid ""
-"You seem to have moved HEAD since the last 'am' failure.\n"
-"Not rewinding to ORIG_HEAD"
-msgstr "Похоже, что вы переместили HEAD с момента последней ошибки выполнения «am».\nПеремотка на ORIG_HEAD не выполняется"
-
-#: git-am.sh:110
-#, sh-format
-msgid ""
-"When you have resolved this problem, run \"$cmdline --continue\".\n"
-"If you prefer to skip this patch, run \"$cmdline --skip\" instead.\n"
-"To restore the original branch and stop patching, run \"$cmdline --abort\"."
-msgstr "Когда вы разрешите этот конфликт, запустите «$cmdline --continue».\nЕсли вы хотите пропустить этот патч, то запустите «$cmdline --skip».\nЧтобы перейти на оригинальную ветку и остановить применение изменений, запустите «$cmdline --abort»."
-
-#: git-am.sh:126
-msgid "Cannot fall back to three-way merge."
-msgstr "Не удалось откатиться к трехходовому слиянию."
-
-#: git-am.sh:142
-msgid "Repository lacks necessary blobs to fall back on 3-way merge."
-msgstr "В репозитории отсутствуют двоичные объекты, необходимые для отката к трехходовому слиянию."
-
-#: git-am.sh:144
-msgid "Using index info to reconstruct a base tree..."
-msgstr "Использую индекс для реконструкции базового дерева…"
-
-#: git-am.sh:159
-msgid ""
-"Did you hand edit your patch?\n"
-"It does not apply to blobs recorded in its index."
-msgstr "Вы вручную изменяли патч?\nОн не накладывается без ошибок на двоичные объекты, записанные в его заголовке."
-
-#: git-am.sh:168
-msgid "Falling back to patching base and 3-way merge..."
-msgstr "Откат к применению изменений к базовому коммиту с помощью трехходового слияния…"
-
-#: git-am.sh:185
-msgid "Failed to merge in the changes."
-msgstr "Не удалось слить изменения."
-
-#: git-am.sh:280
-msgid "Only one StGIT patch series can be applied at once"
-msgstr "Только серия патчей StGIT может быть применена за раз"
-
-#: git-am.sh:367
-#, sh-format
-msgid "Patch format $patch_format is not supported."
-msgstr "Неподдерживаемый формат патча $patch_format."
-
-#: git-am.sh:369
-msgid "Patch format detection failed."
-msgstr "Сбой определения формата патча."
-
-#: git-am.sh:407
-msgid ""
-"The -b/--binary option has been a no-op for long time, and\n"
-"it will be removed. Please do not use it anymore."
-msgstr "Опция -b/--binary уже долгое время ничего не делает и будет удалена с следующих версиях Git. Пожалуйста, не используйте ее."
-
-#: git-am.sh:507
-#, sh-format
-msgid "previous rebase directory $dotest still exists but mbox given."
-msgstr "предыдущий каталог перемещения $dotest еще существует, но передан mbox."
-
-#: git-am.sh:512
-msgid "Please make up your mind. --skip or --abort?"
-msgstr "Пожалуйста, определитесь: --skip или --abort?"
-
-#: git-am.sh:560
-#, sh-format
-msgid ""
-"Stray $dotest directory found.\n"
-"Use \"git am --abort\" to remove it."
-msgstr "Найден забытый каталог $dotest.\nИспользуйте «git am --abort», чтобы удалить его."
-
-#: git-am.sh:568
-msgid "Resolve operation not in progress, we are not resuming."
-msgstr "Операция разрешения конфликтов не в процессе выполнения, не продолжаем."
-
-#: git-am.sh:635
-#, sh-format
-msgid "Dirty index: cannot apply patches (dirty: $files)"
-msgstr "Индекс не пустой: нельзя применять патчи (в индексе: $files)"
-
-#: git-am.sh:747
-#, sh-format
-msgid ""
-"Patch is empty.  Was it split wrong?\n"
-"If you would prefer to skip this patch, instead run \"$cmdline --skip\".\n"
-"To restore the original branch and stop patching run \"$cmdline --abort\"."
-msgstr "Патч пуст. Возможно, он был неправильно разделен?\nЕсли вы хотите пропустить этот патч, то вместо этого запустите «$cmdline --skip».\nЧтобы перейти на оригинальную ветку и остановить применение изменений, запустите «$cmdline --abort»."
-
-#: git-am.sh:774
-msgid "Patch does not have a valid e-mail address."
-msgstr "Патч не содержит действительный адрес электронной почты."
-
-#: git-am.sh:821
-msgid "cannot be interactive without stdin connected to a terminal."
-msgstr "не удалось использовать интерактивное поведение, без stdin подключенного к терминалу."
-
-#: git-am.sh:825
-msgid "Commit Body is:"
-msgstr "Тело коммита:"
-
-#. TRANSLATORS: Make sure to include [y], [n], [e], [v] and [a]
-#. in your translation. The program will only accept English
-#. input at this point.
-#: git-am.sh:832
-msgid "Apply? [y]es/[n]o/[e]dit/[v]iew patch/[a]ccept all "
-msgstr "Применить? [y] - да/[n] - нет/[e] - редактировать/[v] - просмотреть патч/[a] - применить все "
-
-#: git-am.sh:868
-#, sh-format
-msgid "Applying: $FIRSTLINE"
-msgstr "Применение: $FIRSTLINE"
-
-#: git-am.sh:889
-msgid ""
-"No changes - did you forget to use 'git add'?\n"
-"If there is nothing left to stage, chances are that something else\n"
-"already introduced the same changes; you might want to skip this patch."
-msgstr "Нет изменений — возможно, вы забыли вызвать «git add»?\nЕсли ничего не осталось для индексации, то, скорее всего, что-то другое уже сделало те же изменения; возможно, вам следует пропустить этот патч."
-
-#: git-am.sh:897
-msgid ""
-"You still have unmerged paths in your index\n"
-"did you forget to use 'git add'?"
-msgstr "У вас все еще имеются не слитые пути в индексе.\nВозможно, вы забыли вызвать «git add»?"
-
-#: git-am.sh:913
-msgid "No changes -- Patch already applied."
-msgstr "Нет изменений — Патч уже применен."
-
-#: git-am.sh:923
-#, sh-format
-msgid "Patch failed at $msgnum $FIRSTLINE"
-msgstr "Ошибка применения изменений на строке $msgnum $FIRSTLINE"
-
-#: git-am.sh:926
-#, sh-format
-msgid ""
-"The copy of the patch that failed is found in:\n"
-"   $dotest/patch"
-msgstr "Копию изменений, которые не удалось применить, вы можете найти в:\n   $dotest/patch"
-
-#: git-am.sh:945
-msgid "applying to an empty history"
-msgstr "применение к пустой истории"
-
-#: git-bisect.sh:48
+#: git-bisect.sh:50
 msgid "You need to start by \"git bisect start\""
 msgstr "Вам нужно начать с помощью «git bisect start»"
 
 #. TRANSLATORS: Make sure to include [Y] and [n] in your
 #. translation. The program will only accept English input
 #. at this point.
-#: git-bisect.sh:54
+#: git-bisect.sh:56
 msgid "Do you want me to do it for you [Y/n]? "
 msgstr "Вы уверены, что хотите, чтобы я сделал это [Y - да/n - нет]? "
 
-#: git-bisect.sh:95
+#: git-bisect.sh:99
 #, sh-format
 msgid "unrecognised option: '$arg'"
 msgstr "неопознанная опция: «$arg»"
 
-#: git-bisect.sh:99
+#: git-bisect.sh:103
 #, sh-format
 msgid "'$arg' does not appear to be a valid revision"
 msgstr "«$arg» не похоже на действительную редакцию"
 
-#: git-bisect.sh:117
+#: git-bisect.sh:132
 msgid "Bad HEAD - I need a HEAD"
 msgstr "Плохой указатель HEAD — Необходим указатель HEAD"
 
-#: git-bisect.sh:130
+#: git-bisect.sh:145
 #, sh-format
 msgid ""
 "Checking out '$start_head' failed. Try 'git bisect reset <valid-branch>'."
 msgstr "Сбой перехода на «$start_head». Попробуйте выполнить «git bisect reset <существующая-ветка>»."
 
-#: git-bisect.sh:140
+#: git-bisect.sh:155
 msgid "won't bisect on cg-seek'ed tree"
 msgstr "нельзя выполнить двоичный поиск на дереве после cg-seek"
 
-#: git-bisect.sh:144
+#: git-bisect.sh:159
 msgid "Bad HEAD - strange symbolic ref"
 msgstr "Плохой указатель HEAD — странная символьная ссылка"
 
-#: git-bisect.sh:189
+#: git-bisect.sh:211
 #, sh-format
 msgid "Bad bisect_write argument: $state"
 msgstr "Плохой аргумент bisect_write: $state"
 
-#: git-bisect.sh:218
+#: git-bisect.sh:240
 #, sh-format
 msgid "Bad rev input: $arg"
 msgstr "Плохой ввод номера редакции: $arg"
 
-#: git-bisect.sh:232
+#: git-bisect.sh:255
 msgid "Please call 'bisect_state' with at least one argument."
 msgstr "Пожалуйста, вызывайте «bisect_state» как минимум с одним аргументом."
 
-#: git-bisect.sh:244
+#: git-bisect.sh:267
 #, sh-format
 msgid "Bad rev input: $rev"
 msgstr "Плохой ввод номера редакции: $rev"
 
-#: git-bisect.sh:253
-msgid "'git bisect bad' can take only one argument."
-msgstr "«git bisect bad» может принимать только один аргумент."
-
 #: git-bisect.sh:276
-msgid "Warning: bisecting only with a bad commit."
-msgstr "Предупреждение: попытка двоичного поиска с указанием только плохого коммита."
+#, sh-format
+msgid "'git bisect $TERM_BAD' can take only one argument."
+msgstr "«git bisect $TERM_BAD» может принимать только один аргумент."
+
+#: git-bisect.sh:299
+#, sh-format
+msgid "Warning: bisecting only with a $TERM_BAD commit."
+msgstr "Предупреждение: попытка двоичного поиска с указанием только $TERM_BAD коммита."
 
 #. TRANSLATORS: Make sure to include [Y] and [n] in your
 #. translation. The program will only accept English input
 #. at this point.
-#: git-bisect.sh:282
+#: git-bisect.sh:305
 msgid "Are you sure [Y/n]? "
 msgstr "Вы уверены [Y - да/n - нет]? "
 
-#: git-bisect.sh:292
+#: git-bisect.sh:317
+#, sh-format
 msgid ""
-"You need to give me at least one good and one bad revision.\n"
-"(You can use \"git bisect bad\" and \"git bisect good\" for that.)"
-msgstr "Вам нужно передать мне как минимум одну хорошую и одну плохую редакцию.\n(Для этого вы можете использовать команды «git bisect bad» и «git bisect good».)"
+"You need to give me at least one $bad_syn and one $good_syn revision.\n"
+"(You can use \"git bisect $bad_syn\" and \"git bisect $good_syn\" for that.)"
+msgstr "Вам нужно передать мне как минимум одну $bad_syn и одну $good_syn редакцию.\n(Для этого вы можете использовать команды «git bisect $bad_syn» и «git bisect $good_syn».)"
 
-#: git-bisect.sh:295
+#: git-bisect.sh:320
+#, sh-format
 msgid ""
 "You need to start by \"git bisect start\".\n"
-"You then need to give me at least one good and one bad revision.\n"
-"(You can use \"git bisect bad\" and \"git bisect good\" for that.)"
-msgstr "Для начала нужно запустить «git bisect start».\nПосле этого, вам нужно передать мне как минимум одну хорошую и одну плохую редакцию.\n(Для этого вы можете использовать команды «git bisect bad» и «git bisect good».)"
+"You then need to give me at least one $good_syn and one $bad_syn revision.\n"
+"(You can use \"git bisect $bad_syn\" and \"git bisect $good_syn\" for that.)"
+msgstr "Для начала нужно запустить «git bisect start».\nПосле этого, вам нужно передать мне как минимум одну $good_syn и одну $bad_syn редакцию.\n(Для этого вы можете использовать команды «git bisect $good_syn» и «git bisect $good_syn».)"
 
-#: git-bisect.sh:366 git-bisect.sh:493
+#: git-bisect.sh:391 git-bisect.sh:521
 msgid "We are not bisecting."
 msgstr "Вы сейчас не в процессе бинарного поиска."
 
-#: git-bisect.sh:373
+#: git-bisect.sh:398
 #, sh-format
 msgid "'$invalid' is not a valid commit"
 msgstr "«$invalid» не является действительным коммитом"
 
-#: git-bisect.sh:382
+#: git-bisect.sh:407
 #, sh-format
 msgid ""
 "Could not check out original HEAD '$branch'.\n"
 "Try 'git bisect reset <commit>'."
 msgstr "Не удалось перейти на оригинальную ветку HEAD «$branch».\nПопробуйте запустить «git bisect reset <коммит>»."
 
-#: git-bisect.sh:409
+#: git-bisect.sh:435
 msgid "No logfile given"
 msgstr "Не передан файл журнала"
 
-#: git-bisect.sh:410
+#: git-bisect.sh:436
 #, sh-format
 msgid "cannot read $file for replaying"
 msgstr "не удалось прочитать $file для повтора изменений"
 
-#: git-bisect.sh:427
+#: git-bisect.sh:455
 msgid "?? what are you talking about?"
 msgstr "?? вы о чем?"
 
-#: git-bisect.sh:439
+#: git-bisect.sh:467
 #, sh-format
 msgid "running $command"
 msgstr "запускаю $command"
 
-#: git-bisect.sh:446
+#: git-bisect.sh:474
 #, sh-format
 msgid ""
 "bisect run failed:\n"
 "exit code $res from '$command' is < 0 or >= 128"
 msgstr "не удалось выполнить двоичный поиск:\nкод завершения $res от «$command» оказался < 0 или >= 128"
 
-#: git-bisect.sh:472
+#: git-bisect.sh:500
 msgid "bisect run cannot continue any more"
 msgstr "bisect run больше не может продолжать"
 
-#: git-bisect.sh:478
+#: git-bisect.sh:506
 #, sh-format
 msgid ""
 "bisect run failed:\n"
 "'bisect_state $state' exited with error code $res"
 msgstr "не удалось выполнить двоичный поиск:\n«bisect_state $state» завершился с кодом ошибки $res"
 
-#: git-bisect.sh:485
+#: git-bisect.sh:513
 msgid "bisect run success"
 msgstr "bisect run выполнен успешно"
 
-#: git-pull.sh:61
-msgid ""
-"Pull is not possible because you have unmerged files.\n"
-"Please, fix them up in the work tree, and then use 'git add/rm <file>'\n"
-"as appropriate to mark resolution and make a commit."
-msgstr "Невозможно выполнить получение, так как у вас имеются не слитые файлы.\nИсправьте их в рабочем каталоге, затем запустите «git add/rm <файл>»,\nчтобы пометить исправление и сделайте коммит."
-
-#: git-pull.sh:65
-msgid "Pull is not possible because you have unmerged files."
-msgstr "Невозможно выполнить получение, так как у вас имеются не слитые файлы."
-
-#: git-pull.sh:71
-msgid ""
-"You have not concluded your merge (MERGE_HEAD exists).\n"
-"Please, commit your changes before you can merge."
-msgstr "Вы не завершили слияние (присутствует файл MERGE_HEAD).\nВыполните коммит ваших изменений, перед слиянием."
-
-#: git-pull.sh:285
-msgid "updating an unborn branch with changes added to the index"
-msgstr "обновление еще не начавшейся ветки с изменениями, добавленными в индекс"
-
-#: git-pull.sh:311
+#: git-bisect.sh:548
 #, sh-format
-msgid ""
-"Warning: fetch updated the current branch head.\n"
-"Warning: fast-forwarding your working tree from\n"
-"Warning: commit $orig_head."
-msgstr "Предупреждение: извлечение обновило голову вашей текущей ветки.\nПредупреждение: перемотка вашего рабочего каталога\nПредупреждение: с коммита $orig_head."
-
-#: git-pull.sh:336
-msgid "Cannot merge multiple branches into empty head"
-msgstr "Нельзя слить несколько веток в пустую указатель на коммит"
-
-#: git-pull.sh:340
-msgid "Cannot rebase onto multiple branches"
-msgstr "Невозможно переместить над несколькими ветками"
+msgid "Invalid command: you're currently in a $TERM_BAD/$TERM_GOOD bisect."
+msgstr "Недопустимая команда: вы сейчас находитесь на $TERM_BAD/$TERM_GOOD двоичном поиске."
 
 #: git-rebase.sh:57
 msgid ""
 "When you have resolved this problem, run \"git rebase --continue\".\n"
 "If you prefer to skip this patch, run \"git rebase --skip\" instead.\n"
 "To check out the original branch and stop rebasing, run \"git rebase --abort\"."
@@ -10537,13 +10921,13 @@
 msgstr "Не удалось удалить временный индекс (не должно случаться)"
 
 #: git-stash.sh:157
 msgid "Cannot record working tree state"
 msgstr "Не удалось записать состояние рабочего каталога"
 
-#: git-stash.sh:191
+#: git-stash.sh:189
 #, sh-format
 msgid "Cannot update $ref_stash with $w_commit"
 msgstr "Не удалось обновить $ref_stash с помощью $w_commit"
 
 #. TRANSLATORS: $option is an invalid option, like
 #. `--blah-blah'. The 7 spaces at the beginning of the
@@ -10551,103 +10935,103 @@
 #. up the second line with however many characters the
 #. translation of "error: " takes in your language. E.g. in
 #. English this is:
 #. $ git stash save --blah-blah 2>&1 | head -n 2
 #. error: unknown option for 'stash save': --blah-blah
 #. To provide a message, use git stash save -- '--blah-blah'
-#: git-stash.sh:241
+#: git-stash.sh:239
 #, sh-format
 msgid ""
 "error: unknown option for 'stash save': $option\n"
 "       To provide a message, use git stash save -- '$option'"
 msgstr "ошибка: неизвестная опция для «stash save»: $option\n        Для предоставления сообщения, используйте git stash save -- «$option»"
 
-#: git-stash.sh:262
+#: git-stash.sh:260
 msgid "No local changes to save"
 msgstr "Нет локальных изменений для сохранения"
 
-#: git-stash.sh:266
+#: git-stash.sh:264
 msgid "Cannot initialize stash"
 msgstr "Не удалось инициализировать спрятанные изменения"
 
-#: git-stash.sh:270
+#: git-stash.sh:268
 msgid "Cannot save the current status"
 msgstr "Не удалось сохранить текущий статус"
 
-#: git-stash.sh:288
+#: git-stash.sh:286
 msgid "Cannot remove worktree changes"
 msgstr "Не удалось удалить изменения рабочего каталога"
 
-#: git-stash.sh:389
+#: git-stash.sh:387
 #, sh-format
 msgid "unknown option: $opt"
 msgstr "неизвестная опция: $opt"
 
-#: git-stash.sh:399
+#: git-stash.sh:397
 msgid "No stash found."
 msgstr "Не найдены спрятанные изменения."
 
-#: git-stash.sh:406
+#: git-stash.sh:404
 #, sh-format
 msgid "Too many revisions specified: $REV"
 msgstr "Передано слишком много редакций: $REV"
 
-#: git-stash.sh:412
+#: git-stash.sh:410
 #, sh-format
 msgid "$reference is not a valid reference"
 msgstr "$reference не является действительной ссылкой"
 
-#: git-stash.sh:440
+#: git-stash.sh:438
 #, sh-format
 msgid "'$args' is not a stash-like commit"
 msgstr "«$args» не похоже на коммит со спрятанными изменениями"
 
-#: git-stash.sh:451
+#: git-stash.sh:449
 #, sh-format
 msgid "'$args' is not a stash reference"
 msgstr "«$args» не является ссылкой на спрятанные изменения"
 
-#: git-stash.sh:459
+#: git-stash.sh:457
 msgid "unable to refresh index"
 msgstr "не удалось обновить индекс"
 
-#: git-stash.sh:463
+#: git-stash.sh:461
 msgid "Cannot apply a stash in the middle of a merge"
 msgstr "Нельзя применить спрятанные изменения во время выполнения слияния"
 
-#: git-stash.sh:471
+#: git-stash.sh:469
 msgid "Conflicts in index. Try without --index."
 msgstr "Конфликты в индексе. Попробуйте без --index."
 
-#: git-stash.sh:473
+#: git-stash.sh:471
 msgid "Could not save index tree"
 msgstr "Не удалось сохранить дерево индекса"
 
-#: git-stash.sh:507
+#: git-stash.sh:505
 msgid "Cannot unstage modified files"
 msgstr "Невозможно убрать из индекса измененные файлы"
 
-#: git-stash.sh:522
+#: git-stash.sh:520
 msgid "Index was not unstashed."
 msgstr "Индекс не был достат из спрятанных изменений."
 
-#: git-stash.sh:545
+#: git-stash.sh:543
 #, sh-format
 msgid "Dropped ${REV} ($s)"
 msgstr "Отброшено ${REV} ($s)"
 
-#: git-stash.sh:546
+#: git-stash.sh:544
 #, sh-format
 msgid "${REV}: Could not drop stash entry"
 msgstr "${REV}: Не удалось отбросить запись из спрятанных изменений"
 
-#: git-stash.sh:554
+#: git-stash.sh:552
 msgid "No branch name specified"
 msgstr "Не указано имя ветки"
 
-#: git-stash.sh:626
+#: git-stash.sh:624
 msgid "(To restore them type \"git stash apply\")"
 msgstr "(Чтобы восстановить их, наберите «git stash apply»)"
 
 #: git-submodule.sh:95
 #, sh-format
 msgid "cannot strip one component off url '$remoteurl'"
@@ -10869,13 +11253,13 @@
 msgid "Submodule path '$displaypath': merged in '$sha1'"
 msgstr "Подмодуль по пути «$displaypath»: слито с «$sha1»"
 
 #: git-submodule.sh:907
 #, sh-format
 msgid ""
-"Execution of '$command $sha1' failed in submodule  path '$prefix$sm_path'"
+"Execution of '$command $sha1' failed in submodule path '$prefix$sm_path'"
 msgstr "Сбой выполнения «$command $sha1» для подмодуля по пути «$prefix$sm_path»"
 
 #: git-submodule.sh:908
 #, sh-format
 msgid "Submodule path '$prefix$sm_path': '$command $sha1'"
 msgstr "Подмодуль по пути «$prefix$sm_path»: «$command $sha1»"
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/preload-index.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/preload-index.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/preload-index.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/preload-index.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pretty.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pretty.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/pretty.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/pretty.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/prio-queue.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/prio-queue.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/prio-queue.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/prio-queue.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/progress.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/progress.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/progress.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/progress.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/prompt.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/prompt.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/prompt.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/prompt.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/quote.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/quote.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/quote.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/quote.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/reachable.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/reachable.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/reachable.c	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/reachable.c	2015-11-06 05:31:55.000000000 +0800
@@ -22,15 +22,21 @@
 		display_progress(cp->progress, cp->count);
 }
 
 static int add_one_ref(const char *path, const struct object_id *oid,
 		       int flag, void *cb_data)
 {
-	struct object *object = parse_object_or_die(oid->hash, path);
 	struct rev_info *revs = (struct rev_info *)cb_data;
+	struct object *object;
 
+	if ((flag & REF_ISSYMREF) && (flag & REF_ISBROKEN)) {
+		warning("symbolic ref is dangling: %s", path);
+		return 0;
+	}
+
+	object = parse_object_or_die(oid->hash, path);
 	add_pending_object(revs, object, "");
 
 	return 0;
 }
 
 /*
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/reachable.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/reachable.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/reachable.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/reachable.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/read-cache.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/read-cache.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/read-cache.c	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/read-cache.c	2015-11-06 05:31:55.000000000 +0800
@@ -676,27 +676,13 @@
 	/* When core.ignorecase=true, determine if a directory of the same name but differing
 	 * case already exists within the Git repository.  If it does, ensure the directory
 	 * case of the file being added to the repository matches (is folded into) the existing
 	 * entry's directory case.
 	 */
 	if (ignore_case) {
-		const char *startPtr = ce->name;
-		const char *ptr = startPtr;
-		while (*ptr) {
-			while (*ptr && *ptr != '/')
-				++ptr;
-			if (*ptr == '/') {
-				struct cache_entry *foundce;
-				++ptr;
-				foundce = index_dir_exists(istate, ce->name, ptr - ce->name - 1);
-				if (foundce) {
-					memcpy((void *)startPtr, foundce->name + (startPtr - ce->name), ptr - startPtr);
-					startPtr = ptr;
-				}
-			}
-		}
+		adjust_dirname_case(istate, ce->name);
 	}
 
 	alias = index_file_exists(istate, ce->name, ce_namelen(ce), ignore_case);
 	if (alias && !ce_stage(alias) && !ie_match_stat(istate, alias, st, ce_option)) {
 		/* Nothing changed, really */
 		if (!S_ISGITLINK(alias->ce_mode))
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/read-cache.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/read-cache.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/read-cache.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/read-cache.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ref-filter.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ref-filter.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ref-filter.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ref-filter.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/reflog-walk.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/reflog-walk.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/reflog-walk.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/reflog-walk.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/refs.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/refs.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/refs.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/refs.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/RelNotes /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/RelNotes
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/RelNotes	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/RelNotes	2015-11-06 05:31:55.000000000 +0800
@@ -1,65 +1,111 @@
-Git v2.6.2 Release Notes
+Git v2.6.3 Release Notes
 ========================
 
-Fixes since v2.6.1
+Fixes since v2.6.2
 ------------------
 
- * There were some classes of errors that "git fsck" diagnosed to its
-   standard error that did not cause it to exit with non-zero status.
+ * The error message from "git blame --contents --reverse" incorrectly
+   talked about "--contents --children".
 
- * A test script for the HTTP service had a timing dependent bug,
-   which was fixed.
+ * "git merge-file" tried to signal how many conflicts it found, which
+   obviously would not work well when there are too many of them.
 
- * Performance-measurement tests did not work without an installed Git.
+ * The name-hash subsystem that is used to cope with case insensitive
+   filesystems keeps track of directories and their on-filesystem
+   cases for all the paths in the index by holding a pointer to a
+   randomly chosen cache entry that is inside the directory (for its
+   ce->ce_name component).  This pointer was not updated even when the
+   cache entry was removed from the index, leading to use after free.
+   This was fixed by recording the path for each directory instead of
+   borrowing cache entries and restructuring the API somewhat.
 
- * On a case insensitive filesystems, setting GIT_WORK_TREE variable
-   using a random cases that does not agree with what the filesystem
-   thinks confused Git that it wasn't inside the working tree.
-
- * When "git am" was rewritten as a built-in, it stopped paying
-   attention to user.signingkey, which was fixed.
-
- * After "git checkout --detach", "git status" reported a fairly
-   useless "HEAD detached at HEAD", instead of saying at which exact
-   commit.
-
- * "git rebase -i" had a minor regression recently, which stopped
-   considering a line that begins with an indented '#' in its insn
-   sheet not a comment, which is now fixed.
-
- * Description of the "log.follow" configuration variable in "git log"
-   documentation is now also copied to "git config" documentation.
-
- * Allocation related functions and stdio are unsafe things to call
-   inside a signal handler, and indeed killing the pager can cause
-   glibc to deadlock waiting on allocation mutex as our signal handler
-   tries to free() some data structures in wait_for_pager().  Reduce
-   these unsafe calls.
-
- * The way how --ref/--notes to specify the notes tree reference are
-   DWIMmed was not clearly documented.
-
- * Customization to change the behaviour with "make -w" and "make -s"
-   in our Makefile was broken when they were used together.
-
- * The Makefile always runs the library archiver with hardcoded "crs"
-   options, which was inconvenient for exotic platforms on which
-   people want to use programs with totally different set of command
-   line options.
-
- * The ssh transport, just like any other transport over the network,
-   did not clear GIT_* environment variables, but it is possible to
-   use SendEnv and AcceptEnv to leak them to the remote invocation of
-   Git, which is not a good idea at all.  Explicitly clear them just
-   like we do for the local transport.
-
- * "git blame --first-parent v1.0..v2.0" was not rejected but did not
-   limit the blame to commits on the first parent chain.
-
- * Very small number of options take a parameter that is optional
-   (which is not a great UI element as they can only appear at the end
-   of the command line).  Add notice to documentation of each and
-   every one of them.
+ * When the "git am" command was reimplemented in C, "git am -3" had a
+   small regression where it is aborted in its error handling codepath
+   when underlying merge-recursive failed in some ways.
+
+ * The synopsis text and the usage string of subcommands that read
+   list of things from the standard input are often shown as if they
+   only take input from a file on a filesystem, which was misleading.
+
+ * A couple of commands still showed "[options]" in their usage string
+   to note where options should come on their command line, but we
+   spell that "[<options>]" in most places these days.
+
+ * The submodule code has been taught to work better with separate
+   work trees created via "git worktree add".
+
+ * When "git gc --auto" is backgrounded, its diagnosis message is
+   lost.  It now is saved to a file in $GIT_DIR and is shown next time
+   the "gc --auto" is run.
+
+ * Work around "git p4" failing when the P4 depot records the contents
+   in UTF-16 without UTF-16 BOM.
+
+ * Recent update to "rebase -i" that tries to sanity check the edited
+   insn sheet before it uses it has become too picky on Windows where
+   CRLF left by the editor is turned into a trailing CR on the line
+   read via the "read" built-in command.
+
+ * "git clone --dissociate" runs a big "git repack" process at the
+   end, and it helps to close file descriptors that are open on the
+   packs and their idx files before doing so on filesystems that
+   cannot remove a file that is still open.
+
+ * Correct "git p4 --detect-labels" so that it does not fail to create
+   a tag that points at a commit that is also being imported.
+
+ * The internal stripspace() function has been moved to where it
+   logically belongs to, i.e. strbuf API, and the command line parser
+   of "git stripspace" has been updated to use the parse_options API.
+
+ * Prepare for Git on-disk repository representation to undergo
+   backward incompatible changes by introducing a new repository
+   format version "1", with an extension mechanism.
+
+ * "git gc" used to barf when a symbolic ref has gone dangling
+   (e.g. the branch that used to be your upstream's default when you
+   cloned from it is now gone, and you did "fetch --prune").
+
+ * The normalize_ceiling_entry() function does not muck with the end
+   of the path it accepts, and the real world callers do rely on that,
+   but a test insisted that the function drops a trailing slash.
+
+ * "git gc" is safe to run anytime only because it has the built-in
+   grace period to protect young objects.  In order to run with no
+   grace period, the user must make sure that the repository is
+   quiescent.
+
+ * A recent "filter-branch --msg-filter" broke skipping of the commit
+   object header, which is fixed.
+
+ * "git --literal-pathspecs add -u/-A" without any command line
+   argument misbehaved ever since Git 2.0.
+
+ * Merging a branch that removes a path and another that changes the
+   mode bits on the same path should have conflicted at the path, but
+   it didn't and silently favoured the removal.
+
+ * "git imap-send" did not compile well with older version of cURL library.
+
+ * The linkage order of libraries was wrong in places around libcurl.
+
+ * It was not possible to use a repository-lookalike created by "git
+   worktree add" as a local source of "git clone".
+
+ * When "git send-email" wanted to talk over Net::SMTP::SSL,
+   Net::Cmd::datasend() did not like to be fed too many bytes at the
+   same time and failed to send messages.  Send the payload one line
+   at a time to work around the problem.
+
+ * We peek objects from submodule's object store by linking it to the
+   list of alternate object databases, but the code to do so forgot to
+   correctly initialize the list.
+
+ * "git status --branch --short" accessed beyond the constant string
+   "HEAD", which has been corrected.
+
+ * "git daemon" uses "run_command()" without "finish_command()", so it
+   needs to release resources itself, which it forgot to do.
 
 Also contains typofixes, documentation updates and trivial code
 clean-ups.
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/remote.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/remote.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/remote.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/remote.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/remote-testsvn.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/remote-testsvn.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/remote-testsvn.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/remote-testsvn.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/replace_object.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/replace_object.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/replace_object.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/replace_object.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/rerere.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/rerere.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/rerere.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/rerere.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/resolve-undo.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/resolve-undo.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/resolve-undo.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/resolve-undo.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/revision.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/revision.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/revision.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/revision.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/run-command.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/run-command.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/run-command.c	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/run-command.c	2015-11-06 05:31:55.000000000 +0800
@@ -8,12 +8,18 @@
 {
 	memset(child, 0, sizeof(*child));
 	argv_array_init(&child->args);
 	argv_array_init(&child->env_array);
 }
 
+void child_process_clear(struct child_process *child)
+{
+	argv_array_clear(&child->args);
+	argv_array_clear(&child->env_array);
+}
+
 struct child_to_clean {
 	pid_t pid;
 	struct child_to_clean *next;
 };
 static struct child_to_clean *children_to_clean;
 static int installed_child_cleanup_handler;
@@ -324,14 +330,13 @@
 			else if (cmd->out)
 				close(cmd->out);
 			str = "standard error";
 fail_pipe:
 			error("cannot create %s pipe for %s: %s",
 				str, cmd->argv[0], strerror(failed_errno));
-			argv_array_clear(&cmd->args);
-			argv_array_clear(&cmd->env_array);
+			child_process_clear(cmd);
 			errno = failed_errno;
 			return -1;
 		}
 		cmd->err = fderr[0];
 	}
 
@@ -510,14 +515,13 @@
 		else if (cmd->out)
 			close(cmd->out);
 		if (need_err)
 			close_pair(fderr);
 		else if (cmd->err)
 			close(cmd->err);
-		argv_array_clear(&cmd->args);
-		argv_array_clear(&cmd->env_array);
+		child_process_clear(cmd);
 		errno = failed_errno;
 		return -1;
 	}
 
 	if (need_in)
 		close(fdin[0]);
@@ -537,14 +541,13 @@
 	return 0;
 }
 
 int finish_command(struct child_process *cmd)
 {
 	int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
-	argv_array_clear(&cmd->args);
-	argv_array_clear(&cmd->env_array);
+	child_process_clear(cmd);
 	return ret;
 }
 
 int finish_command_in_signal(struct child_process *cmd)
 {
 	return wait_or_whine(cmd->pid, cmd->argv[0], 1);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/run-command.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/run-command.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/run-command.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/run-command.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/run-command.h	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/run-command.h	2015-11-06 05:31:55.000000000 +0800
@@ -44,12 +44,13 @@
 	unsigned use_shell:1;
 	unsigned clean_on_exit:1;
 };
 
 #define CHILD_PROCESS_INIT { NULL, ARGV_ARRAY_INIT, ARGV_ARRAY_INIT }
 void child_process_init(struct child_process *);
+void child_process_clear(struct child_process *);
 
 int start_command(struct child_process *);
 int finish_command(struct child_process *);
 int finish_command_in_signal(struct child_process *);
 int run_command(struct child_process *);
 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/run-command.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/run-command.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/send-pack.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/send-pack.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/send-pack.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/send-pack.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/sequencer.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/sequencer.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/sequencer.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/sequencer.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/server-info.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/server-info.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/server-info.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/server-info.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/setup.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/setup.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/setup.c	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/setup.c	2015-11-06 05:31:55.000000000 +0800
@@ -2,12 +2,13 @@
 #include "dir.h"
 #include "string-list.h"
 
 static int inside_git_dir = -1;
 static int inside_work_tree = -1;
 static int work_tree_config_is_bogus;
+static struct string_list unknown_extensions = STRING_LIST_INIT_DUP;
 
 /*
  * The input parameter must contain an absolute path, and it must already be
  * normalized.
  *
  * Find the part of an absolute path that lies inside the work tree by
@@ -226,20 +227,27 @@
 	    "Use '--' to separate paths from revisions, like this:\n"
 	    "'git <command> [<revision>...] -- [<file>...]'", arg);
 }
 
 int get_common_dir(struct strbuf *sb, const char *gitdir)
 {
+	const char *git_env_common_dir = getenv(GIT_COMMON_DIR_ENVIRONMENT);
+	if (git_env_common_dir) {
+		strbuf_addstr(sb, git_env_common_dir);
+		return 1;
+	} else {
+		return get_common_dir_noenv(sb, gitdir);
+	}
+}
+
+int get_common_dir_noenv(struct strbuf *sb, const char *gitdir)
+{
 	struct strbuf data = STRBUF_INIT;
 	struct strbuf path = STRBUF_INIT;
-	const char *git_common_dir = getenv(GIT_COMMON_DIR_ENVIRONMENT);
 	int ret = 0;
-	if (git_common_dir) {
-		strbuf_addstr(sb, git_common_dir);
-		return 1;
-	}
+
 	strbuf_addf(&path, "%s/commondir", gitdir);
 	if (file_exists(path.buf)) {
 		if (strbuf_read_file(&data, path.buf, 0) <= 0)
 			die_errno(_("failed to read %s"), path.buf);
 		while (data.len && (data.buf[data.len - 1] == '\n' ||
 				    data.buf[data.len - 1] == '\r'))
@@ -349,26 +357,43 @@
 	set_git_dir(remove_leading_path(git_dir, work_tree));
 	initialized = 1;
 }
 
 static int check_repo_format(const char *var, const char *value, void *cb)
 {
+	const char *ext;
+
 	if (strcmp(var, "core.repositoryformatversion") == 0)
 		repository_format_version = git_config_int(var, value);
 	else if (strcmp(var, "core.sharedrepository") == 0)
 		shared_repository = git_config_perm(var, value);
+	else if (skip_prefix(var, "extensions.", &ext)) {
+		/*
+		 * record any known extensions here; otherwise,
+		 * we fall through to recording it as unknown, and
+		 * check_repository_format will complain
+		 */
+		if (!strcmp(ext, "noop"))
+			;
+		else if (!strcmp(ext, "preciousobjects"))
+			repository_format_precious_objects = git_config_bool(var, value);
+		else
+			string_list_append(&unknown_extensions, ext);
+	}
 	return 0;
 }
 
 static int check_repository_format_gently(const char *gitdir, int *nongit_ok)
 {
 	struct strbuf sb = STRBUF_INIT;
 	const char *repo_config;
 	config_fn_t fn;
 	int ret = 0;
 
+	string_list_clear(&unknown_extensions, 0);
+
 	if (get_common_dir(&sb, gitdir))
 		fn = check_repo_format;
 	else
 		fn = check_repository_format_version;
 	strbuf_addstr(&sb, "/config");
 	repo_config = sb.buf;
@@ -380,22 +405,37 @@
 	 *
 	 * We are in gitdir setup, no git dir has been found useable yet.
 	 * Use a gentler version of git_config() to check if this repo
 	 * is a good one.
 	 */
 	git_config_early(fn, NULL, repo_config);
-	if (GIT_REPO_VERSION < repository_format_version) {
+	if (GIT_REPO_VERSION_READ < repository_format_version) {
 		if (!nongit_ok)
 			die ("Expected git repo version <= %d, found %d",
-			     GIT_REPO_VERSION, repository_format_version);
+			     GIT_REPO_VERSION_READ, repository_format_version);
 		warning("Expected git repo version <= %d, found %d",
-			GIT_REPO_VERSION, repository_format_version);
+			GIT_REPO_VERSION_READ, repository_format_version);
 		warning("Please upgrade Git");
 		*nongit_ok = -1;
 		ret = -1;
 	}
+
+	if (repository_format_version >= 1 && unknown_extensions.nr) {
+		int i;
+
+		if (!nongit_ok)
+			die("unknown repository extension: %s",
+			    unknown_extensions.items[0].string);
+
+		for (i = 0; i < unknown_extensions.nr; i++)
+			warning("unknown repository extension: %s",
+				unknown_extensions.items[i].string);
+		*nongit_ok = -1;
+		ret = -1;
+	}
+
 	strbuf_release(&sb);
 	return ret;
 }
 
 static void update_linked_gitdir(const char *gitfile, const char *gitdir)
 {
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/setup.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/setup.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/setup.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/setup.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/sha1-array.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/sha1-array.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/sha1-array.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/sha1-array.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/sha1_file.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/sha1_file.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/sha1_file.c	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/sha1_file.c	2015-11-06 05:31:55.000000000 +0800
@@ -783,12 +783,43 @@
 		pack_open_windows--;
 		p->windows = w->next;
 		free(w);
 	}
 }
 
+static int close_pack_fd(struct packed_git *p)
+{
+	if (p->pack_fd < 0)
+		return 0;
+
+	close(p->pack_fd);
+	pack_open_fds--;
+	p->pack_fd = -1;
+
+	return 1;
+}
+
+static void close_pack(struct packed_git *p)
+{
+	close_pack_windows(p);
+	close_pack_fd(p);
+	close_pack_index(p);
+}
+
+void close_all_packs(void)
+{
+	struct packed_git *p;
+
+	for (p = packed_git; p; p = p->next)
+		if (p->do_not_close)
+			die("BUG! Want to close pack marked 'do-not-close'");
+		else
+			close_pack(p);
+}
+
+
 /*
  * The LRU pack is the one with the oldest MRU window, preferring packs
  * with no used windows, or the oldest mtime if it has no windows allocated.
  */
 static void find_lru_pack(struct packed_git *p, struct packed_git **lru_p, struct pack_window **mru_w, int *accept_windows_inuse)
 {
@@ -850,18 +881,14 @@
 	for (p = packed_git; p; p = p->next) {
 		if (p->pack_fd == -1)
 			continue;
 		find_lru_pack(p, &lru_p, &mru_w, &accept_windows_inuse);
 	}
 
-	if (lru_p) {
-		close(lru_p->pack_fd);
-		pack_open_fds--;
-		lru_p->pack_fd = -1;
-		return 1;
-	}
+	if (lru_p)
+		return close_pack_fd(lru_p);
 
 	return 0;
 }
 
 void unuse_pack(struct pack_window **w_cursor)
 {
@@ -895,18 +922,13 @@
 	struct packed_git *p, **pp = &packed_git;
 
 	while (*pp) {
 		p = *pp;
 		if (strcmp(pack_name, p->pack_name) == 0) {
 			clear_delta_base_cache();
-			close_pack_windows(p);
-			if (p->pack_fd != -1) {
-				close(p->pack_fd);
-				pack_open_fds--;
-			}
-			close_pack_index(p);
+			close_pack(p);
 			free(p->bad_object_sha1);
 			*pp = p->next;
 			if (last_found_pack == p)
 				last_found_pack = NULL;
 			free(p);
 			return;
@@ -1034,17 +1056,13 @@
 }
 
 static int open_packed_git(struct packed_git *p)
 {
 	if (!open_packed_git_1(p))
 		return 0;
-	if (p->pack_fd != -1) {
-		close(p->pack_fd);
-		pack_open_fds--;
-		p->pack_fd = -1;
-	}
+	close_pack_fd(p);
 	return -1;
 }
 
 static int in_window(struct pack_window *win, off_t offset)
 {
 	/* We must promise at least 20 bytes (one hash) after the
@@ -1104,17 +1122,14 @@
 				p->pack_fd, win->offset);
 			if (win->base == MAP_FAILED)
 				die("packfile %s cannot be mapped: %s",
 					p->pack_name,
 					strerror(errno));
 			if (!win->offset && win->len == p->pack_size
-				&& !p->do_not_close) {
-				close(p->pack_fd);
-				pack_open_fds--;
-				p->pack_fd = -1;
-			}
+				&& !p->do_not_close)
+				close_pack_fd(p);
 			pack_mmap_calls++;
 			pack_open_windows++;
 			if (pack_mapped > peak_pack_mapped)
 				peak_pack_mapped = pack_mapped;
 			if (pack_open_windows > peak_pack_open_windows)
 				peak_pack_open_windows = pack_open_windows;
@@ -2119,13 +2134,13 @@
 } delta_base_cache[MAX_DELTA_CACHE];
 
 static unsigned long pack_entry_hash(struct packed_git *p, off_t base_offset)
 {
 	unsigned long hash;
 
-	hash = (unsigned long)p + (unsigned long)base_offset;
+	hash = (unsigned long)(intptr_t)p + (unsigned long)base_offset;
 	hash += (hash >> 8) + (hash >> 16);
 	return hash % MAX_DELTA_CACHE;
 }
 
 static struct delta_base_cache_entry *
 get_delta_base_cache_entry(struct packed_git *p, off_t base_offset)
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/sha1_file.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/sha1_file.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/sha1_file.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/sha1_file.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/sha1-lookup.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/sha1-lookup.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/sha1-lookup.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/sha1-lookup.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/sha1_name.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/sha1_name.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/sha1_name.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/sha1_name.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/shallow.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/shallow.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/shallow.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/shallow.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/shell.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/shell.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/shell.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/shell.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/sh-i18n--envsubst.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/sh-i18n--envsubst.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/sh-i18n--envsubst.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/sh-i18n--envsubst.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/show-index.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/show-index.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/show-index.c	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/show-index.c	2015-11-06 05:31:55.000000000 +0800
@@ -1,11 +1,11 @@
 #include "cache.h"
 #include "pack.h"
 
 static const char show_index_usage[] =
-"git show-index < <packed archive index>";
+"git show-index";
 
 int main(int argc, char **argv)
 {
 	int i;
 	unsigned nr;
 	unsigned int version;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/show-index.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/show-index.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/show-index.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/show-index.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/sideband.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/sideband.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/sideband.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/sideband.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/sigchain.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/sigchain.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/sigchain.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/sigchain.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/split-index.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/split-index.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/split-index.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/split-index.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/strbuf.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/strbuf.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/strbuf.c	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/strbuf.c	2015-11-06 05:31:55.000000000 +0800
@@ -740,6 +740,72 @@
 		}
 		strbuf_release(&munged_fmt);
 		len--; /* drop munged space */
 	}
 	strbuf_setlen(sb, sb->len + len);
 }
+
+/*
+ * Returns the length of a line, without trailing spaces.
+ *
+ * If the line ends with newline, it will be removed too.
+ */
+static size_t cleanup(char *line, size_t len)
+{
+	while (len) {
+		unsigned char c = line[len - 1];
+		if (!isspace(c))
+			break;
+		len--;
+	}
+
+	return len;
+}
+
+/*
+ * Remove empty lines from the beginning and end
+ * and also trailing spaces from every line.
+ *
+ * Turn multiple consecutive empty lines between paragraphs
+ * into just one empty line.
+ *
+ * If the input has only empty lines and spaces,
+ * no output will be produced.
+ *
+ * If last line does not have a newline at the end, one is added.
+ *
+ * Enable skip_comments to skip every line starting with comment
+ * character.
+ */
+void strbuf_stripspace(struct strbuf *sb, int skip_comments)
+{
+	int empties = 0;
+	size_t i, j, len, newlen;
+	char *eol;
+
+	/* We may have to add a newline. */
+	strbuf_grow(sb, 1);
+
+	for (i = j = 0; i < sb->len; i += len, j += newlen) {
+		eol = memchr(sb->buf + i, '\n', sb->len - i);
+		len = eol ? eol - (sb->buf + i) + 1 : sb->len - i;
+
+		if (skip_comments && len && sb->buf[i] == comment_line_char) {
+			newlen = 0;
+			continue;
+		}
+		newlen = cleanup(sb->buf + i, len);
+
+		/* Not just an empty line? */
+		if (newlen) {
+			if (empties > 0 && j > 0)
+				sb->buf[j++] = '\n';
+			empties = 0;
+			memmove(sb->buf + j, sb->buf + i, newlen);
+			sb->buf[newlen + j++] = '\n';
+		} else {
+			empties++;
+		}
+	}
+
+	strbuf_setlen(sb, j);
+}
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/strbuf.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/strbuf.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/strbuf.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/strbuf.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/strbuf.h	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/strbuf.h	2015-11-06 05:31:55.000000000 +0800
@@ -415,13 +415,22 @@
 extern void strbuf_add_absolute_path(struct strbuf *sb, const char *path);
 
 /**
  * Strip whitespace from a buffer. The second parameter controls if
  * comments are considered contents to be removed or not.
  */
-extern void stripspace(struct strbuf *buf, int skip_comments);
+extern void strbuf_stripspace(struct strbuf *buf, int skip_comments);
+
+/**
+ * Temporary alias until all topic branches have switched to use
+ * strbuf_stripspace directly.
+ */
+static inline void stripspace(struct strbuf *buf, int skip_comments)
+{
+	strbuf_stripspace(buf, skip_comments);
+}
 
 static inline int strbuf_strip_suffix(struct strbuf *sb, const char *suffix)
 {
 	if (strip_suffix_mem(sb->buf, &sb->len, suffix)) {
 		strbuf_setlen(sb, sb->len);
 		return 1;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/strbuf.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/strbuf.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/streaming.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/streaming.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/streaming.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/streaming.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/string-list.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/string-list.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/string-list.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/string-list.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/submodule.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/submodule.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/submodule.c	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/submodule.c	2015-11-06 05:31:55.000000000 +0800
@@ -119,26 +119,20 @@
 
 static int add_submodule_odb(const char *path)
 {
 	struct strbuf objects_directory = STRBUF_INIT;
 	struct alternate_object_database *alt_odb;
 	int ret = 0;
-	const char *git_dir;
 
-	strbuf_addf(&objects_directory, "%s/.git", path);
-	git_dir = read_gitfile(objects_directory.buf);
-	if (git_dir) {
-		strbuf_reset(&objects_directory);
-		strbuf_addstr(&objects_directory, git_dir);
-	}
-	strbuf_addstr(&objects_directory, "/objects/");
+	strbuf_git_path_submodule(&objects_directory, path, "objects/");
 	if (!is_directory(objects_directory.buf)) {
 		ret = -1;
 		goto done;
 	}
 	/* avoid adding it twice */
+	prepare_alt_odb();
 	for (alt_odb = alt_odb_list; alt_odb; alt_odb = alt_odb->next)
 		if (alt_odb->name - alt_odb->base == objects_directory.len &&
 				!strncmp(alt_odb->base, objects_directory.buf,
 					objects_directory.len))
 			goto done;
 
@@ -150,13 +144,12 @@
 	alt_odb->name[40] = '\0';
 	alt_odb->name[41] = '\0';
 	alt_odb_list = alt_odb;
 
 	/* add possible alternates from the submodule */
 	read_info_alternates(objects_directory.buf, 0);
-	prepare_alt_odb();
 done:
 	strbuf_release(&objects_directory);
 	return ret;
 }
 
 void set_diffopt_flags_from_submodule_config(struct diff_options *diffopt,
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/submodule.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/submodule.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/submodule-config.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/submodule-config.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/submodule-config.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/submodule-config.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/submodule.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/submodule.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/symlinks.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/symlinks.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/symlinks.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/symlinks.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/t/t0002-gitfile.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/t/t0002-gitfile.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/t/t0002-gitfile.sh	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/t/t0002-gitfile.sh	2015-11-06 05:31:55.000000000 +0800
@@ -113,7 +113,49 @@
 		git lsfi >actual &&
 		echo foo >expected &&
 		test_cmp expected actual
 	)
 '
 
+test_expect_success 'enter_repo non-strict mode' '
+	test_create_repo enter_repo &&
+	(
+		cd enter_repo &&
+		test_tick &&
+		test_commit foo &&
+		mv .git .realgit &&
+		echo "gitdir: .realgit" >.git
+	) &&
+	git ls-remote enter_repo >actual &&
+	cat >expected <<-\EOF &&
+	946e985ab20de757ca5b872b16d64e92ff3803a9	HEAD
+	946e985ab20de757ca5b872b16d64e92ff3803a9	refs/heads/master
+	946e985ab20de757ca5b872b16d64e92ff3803a9	refs/tags/foo
+	EOF
+	test_cmp expected actual
+'
+
+test_expect_success 'enter_repo linked checkout' '
+	(
+		cd enter_repo &&
+		git worktree add  ../foo refs/tags/foo
+	) &&
+	git ls-remote foo >actual &&
+	cat >expected <<-\EOF &&
+	946e985ab20de757ca5b872b16d64e92ff3803a9	HEAD
+	946e985ab20de757ca5b872b16d64e92ff3803a9	refs/heads/master
+	946e985ab20de757ca5b872b16d64e92ff3803a9	refs/tags/foo
+	EOF
+	test_cmp expected actual
+'
+
+test_expect_success 'enter_repo strict mode' '
+	git ls-remote --upload-pack="git upload-pack --strict" foo/.git >actual &&
+	cat >expected <<-\EOF &&
+	946e985ab20de757ca5b872b16d64e92ff3803a9	HEAD
+	946e985ab20de757ca5b872b16d64e92ff3803a9	refs/heads/master
+	946e985ab20de757ca5b872b16d64e92ff3803a9	refs/tags/foo
+	EOF
+	test_cmp expected actual
+'
+
 test_done
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/t/t1302-repo-version.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/t/t1302-repo-version.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/t/t1302-repo-version.sh	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/t/t1302-repo-version.sh	2015-11-06 05:31:55.000000000 +0800
@@ -64,7 +64,67 @@
 	(
 		cd test2 &&
 		test_must_fail git apply --check --index ../test.patch
 	)
 '
 
+check_allow () {
+	git rev-parse --git-dir >actual &&
+	echo .git >expect &&
+	test_cmp expect actual
+}
+
+check_abort () {
+	test_must_fail git rev-parse --git-dir
+}
+
+# avoid git-config, since it cannot be trusted to run
+# in a repository with a broken version
+mkconfig () {
+	echo '[core]' &&
+	echo "repositoryformatversion = $1" &&
+	shift &&
+
+	if test $# -gt 0; then
+		echo '[extensions]' &&
+		for i in "$@"; do
+			echo "$i"
+		done
+	fi
+}
+
+while read outcome version extensions; do
+	test_expect_success "$outcome version=$version $extensions" "
+		mkconfig $version $extensions >.git/config &&
+		check_${outcome}
+	"
+done <<\EOF
+allow 0
+allow 1
+allow 1 noop
+abort 1 no-such-extension
+allow 0 no-such-extension
+EOF
+
+test_expect_success 'precious-objects allowed' '
+	mkconfig 1 preciousObjects >.git/config &&
+	check_allow
+'
+
+test_expect_success 'precious-objects blocks destructive repack' '
+	test_must_fail git repack -ad
+'
+
+test_expect_success 'other repacks are OK' '
+	test_commit foo &&
+	git repack
+'
+
+test_expect_success 'precious-objects blocks prune' '
+	test_must_fail git prune
+'
+
+test_expect_success 'gc runs without complaint' '
+	git gc
+'
+
 test_done
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/t/t2025-worktree-add.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/t/t2025-worktree-add.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/t/t2025-worktree-add.sh	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/t/t2025-worktree-add.sh	2015-11-06 05:31:55.000000000 +0800
@@ -190,7 +190,12 @@
 '
 
 test_expect_success '"add" -B/--detach mutually exclusive' '
 	test_must_fail git worktree add -B poodle --detach bamboo master
 '
 
+test_expect_success 'local clone from linked checkout' '
+	git clone --local here here-clone &&
+	( cd here-clone && git fsck )
+'
+
 test_done
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/t/t2200-add-update.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/t/t2200-add-update.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/t/t2200-add-update.sh	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/t/t2200-add-update.sh	2015-11-06 05:31:55.000000000 +0800
@@ -81,12 +81,14 @@
 '
 
 test_expect_success 'non-qualified update in subdir updates from the root' '
 	(
 		cd dir1 &&
 		echo even more >>sub2 &&
+		git --literal-pathspecs add -u &&
+		echo even more >>sub2 &&
 		git add -u
 	) &&
 	: >expect &&
 	git diff-files --name-only >actual &&
 	test_cmp expect actual
 '
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/t/t2202-add-addremove.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/t/t2202-add-addremove.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/t/t2202-add-addremove.sh	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/t/t2202-add-addremove.sh	2015-11-06 05:31:55.000000000 +0800
@@ -11,12 +11,13 @@
 	) >expect &&
 	(
 		echo actual
 		echo expect
 		echo ignored
 	) >.gitignore &&
+	git --literal-pathspecs add --all &&
 	>will-remove &&
 	git add --all &&
 	test_tick &&
 	git commit -m initial &&
 	git ls-files >actual &&
 	test_cmp expect actual
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/t/t3030-merge-recursive.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/t/t3030-merge-recursive.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/t/t3030-merge-recursive.sh	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/t/t3030-merge-recursive.sh	2015-11-06 05:31:55.000000000 +0800
@@ -626,8 +626,38 @@
 		echo "100644 $o0 0	d/e"
 		echo "100644 $o0 0	e"
 	) >expected &&
 	test_cmp expected actual
 '
 
+test_expect_success 'merging with triple rename across D/F conflict' '
+	git reset --hard HEAD &&
+	git checkout -b main &&
+	git rm -rf . &&
+
+	echo "just a file" >sub1 &&
+	mkdir -p sub2 &&
+	echo content1 >sub2/file1 &&
+	echo content2 >sub2/file2 &&
+	echo content3 >sub2/file3 &&
+	mkdir simple &&
+	echo base >simple/bar &&
+	git add -A &&
+	test_tick &&
+	git commit -m base &&
+
+	git checkout -b other &&
+	echo more >>simple/bar &&
+	test_tick &&
+	git commit -a -m changesimplefile &&
+
+	git checkout main &&
+	git rm sub1 &&
+	git mv sub2 sub1 &&
+	test_tick &&
+	git commit -m changefiletodir &&
+
+	test_tick &&
+	git merge other
+'
 
 test_done
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/t/t3404-rebase-interactive.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/t/t3404-rebase-interactive.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/t/t3404-rebase-interactive.sh	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/t/t3404-rebase-interactive.sh	2015-11-06 05:31:55.000000000 +0800
@@ -1258,7 +1258,19 @@
 	test_cmp expect actual &&
 	FAKE_LINES="1 2 4 5 6" git rebase --edit-todo &&
 	git rebase --continue &&
 	test E = $(git cat-file commit HEAD | sed -ne \$p)
 '
 
+test_expect_success 'editor saves as CR/LF' '
+	git checkout -b with-crlf &&
+	write_script add-crs.sh <<-\EOF &&
+	sed -e "s/\$/Q/" <"$1" | tr Q "\\015" >"$1".new &&
+	mv -f "$1".new "$1"
+	EOF
+	(
+		test_set_editor "$(pwd)/add-crs.sh" &&
+		git rebase -i HEAD^
+	)
+'
+
 test_done
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/t/t5700-clone-reference.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/t/t5700-clone-reference.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/t/t5700-clone-reference.sh	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/t/t5700-clone-reference.sh	2015-11-06 05:31:55.000000000 +0800
@@ -185,8 +185,29 @@
 	git clone --no-local --reference=P --dissociate Q S &&
 	# removing the reference P would corrupt R but not S
 	rm -fr P &&
 	test_must_fail git -C R fsck &&
 	git -C S fsck
 '
+test_expect_success 'clone, dissociate from partial reference and repack' '
+	rm -fr P Q R &&
+	git init P &&
+	(
+		cd P &&
+		test_commit one &&
+		git repack &&
+		test_commit two &&
+		git repack
+	) &&
+	git clone --bare P Q &&
+	(
+		cd P &&
+		git checkout -b second &&
+		test_commit three &&
+		git repack
+	) &&
+	git clone --bare --dissociate --reference=P Q R &&
+	ls R/objects/pack/*.pack >packs.txt &&
+	test_line_count = 1 packs.txt
+'
 
 test_done
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/t: t6031-merge-filemode.sh
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/t: t6031-merge-recursive.sh
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/t/t6500-gc.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/t/t6500-gc.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/t/t6500-gc.sh	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/t/t6500-gc.sh	2015-11-06 05:31:55.000000000 +0800
@@ -27,7 +27,20 @@
 		echo "[gc] pruneexpire = CORRUPT" >>.git/config &&
 		test_expect_code 129 git gc -h >usage 2>&1
 	) &&
 	test_i18ngrep "[Uu]sage" broken/usage
 '
 
+test_expect_success 'gc is not aborted due to a stale symref' '
+	git init remote &&
+	(
+		cd remote &&
+		test_commit initial &&
+		git clone . ../client &&
+		git branch -m develop &&
+		cd ../client &&
+		git fetch --prune &&
+		git gc
+	)
+'
+
 test_done
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/t/t7003-filter-branch.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/t/t7003-filter-branch.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/t/t7003-filter-branch.sh	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/t/t7003-filter-branch.sh	2015-11-06 05:31:55.000000000 +0800
@@ -1,10 +1,11 @@
 #!/bin/sh
 
 test_description='git filter-branch'
 . ./test-lib.sh
+. "$TEST_DIRECTORY/lib-gpg.sh"
 
 test_expect_success 'setup' '
 	test_commit A &&
 	GIT_COMMITTER_DATE="@0 +0000" GIT_AUTHOR_DATE="@0 +0000" &&
 	test_commit --notick B &&
 	git checkout -b branch B &&
@@ -289,12 +290,25 @@
 	echo "$faux_gpg_tag" | sed -e s/XXXXXX/$sha1/ | head -n 6 > expect &&
 	git filter-branch -f --tag-name-filter cat &&
 	git cat-file tag S > actual &&
 	test_cmp expect actual
 '
 
+test_expect_success GPG 'Filtering retains message of gpg signed commit' '
+	mkdir gpg &&
+	touch gpg/foo &&
+	git add gpg &&
+	test_tick &&
+	git commit -S -m "Adding gpg" &&
+
+	git log -1 --format="%s" > expect &&
+	git filter-branch -f --msg-filter "cat" &&
+	git log -1 --format="%s" > actual &&
+	test_cmp expect actual
+'
+
 test_expect_success 'Tag name filtering allows slashes in tag names' '
 	git tag -m tag-with-slash X/1 &&
 	git cat-file tag X/1 | sed -e s,X/1,X/2, > expect &&
 	git filter-branch -f --tag-name-filter "echo X/2" &&
 	git cat-file tag X/2 > actual &&
 	test_cmp expect actual
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/t/t7060-wtstatus.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/t/t7060-wtstatus.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/t/t7060-wtstatus.sh	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/t/t7060-wtstatus.sh	2015-11-06 05:31:55.000000000 +0800
@@ -210,8 +210,22 @@
 	git status --untracked-files=no >actual &&
 	test_i18ncmp expected actual &&
 	git reset --hard &&
 	git checkout master
 '
 
+test_expect_success 'status --branch with detached HEAD' '
+	git reset --hard &&
+	git checkout master^0 &&
+	git status --branch --porcelain >actual &&
+	cat >expected <<-EOF &&
+	## HEAD (no branch)
+	?? .gitconfig
+	?? actual
+	?? expect
+	?? expected
+	?? mdconflict/
+	EOF
+	test_i18ncmp expected actual
+'
 
 test_done
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/t/t7063-status-untracked-cache.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/t/t7063-status-untracked-cache.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/t/t7063-status-untracked-cache.sh	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/t/t7063-status-untracked-cache.sh	2015-11-06 05:31:55.000000000 +0800
@@ -409,13 +409,15 @@
 '
 
 test_expect_success 'create/modify files, some of which are gitignored' '
 	echo two bis >done/two &&
 	echo three >done/three && # three is gitignored
 	echo four >done/four && # four is gitignored at a higher level
-	echo five >done/five # five is not gitignored
+	echo five >done/five && # five is not gitignored
+	echo test >base && #we need to ensure that the root dir is touched
+	rm base
 '
 
 test_expect_success 'test sparse status with untracked cache' '
 	: >../trace &&
 	avoid_racy &&
 	GIT_TRACE_UNTRACKED_STATS="$TRASH_DIRECTORY/trace" \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/t/t7410-submodule-checkout-to.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/t/t7410-submodule-checkout-to.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/t/t7410-submodule-checkout-to.sh	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/t/t7410-submodule-checkout-to.sh	2015-11-06 05:31:55.000000000 +0800
@@ -44,7 +44,17 @@
 	git worktree add "$base_path/fully_cloned_submodule/main" "$rev1_hash_main") &&
     (cd fully_cloned_submodule/main && git submodule update)'
 
 test_expect_success 'can see submodule diffs after independed cloning' \
     '(cd fully_cloned_submodule/main && git diff --submodule master"^!" | grep "file1 updated")'
 
+test_expect_success 'checkout sub manually' \
+    'mkdir linked_submodule &&
+    (cd clone/main &&
+	git worktree add "$base_path/linked_submodule/main" "$rev1_hash_main") &&
+    (cd clone/main/sub &&
+	git worktree add "$base_path/linked_submodule/main/sub" "$rev1_hash_sub")'
+
+test_expect_success 'can see submodule diffs after manual checkout of linked submodule' \
+    '(cd linked_submodule/main && git diff --submodule master"^!" | grep "file1 updated")'
+
 test_done
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/t/t7600-merge.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/t/t7600-merge.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/t/t7600-merge.sh	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/t/t7600-merge.sh	2015-11-06 05:31:55.000000000 +0800
@@ -689,7 +689,40 @@
 	EDITOR=false git merge --no-edit signed &&
 	git rev-parse signed^0 >expect &&
 	git rev-parse HEAD^2 >actual &&
 	test_cmp actual expect
 '
 
+test_expect_success 'set up mod-256 conflict scenario' '
+	# 256 near-identical stanzas...
+	for i in $(test_seq 1 256); do
+		for j in 1 2 3 4 5; do
+			echo $i-$j
+		done
+	done >file &&
+	git add file &&
+	git commit -m base &&
+
+	# one side changes the first line of each to "master"
+	sed s/-1/-master/ <file >tmp &&
+	mv tmp file &&
+	git commit -am master &&
+
+	# and the other to "side"; merging the two will
+	# yield 256 separate conflicts
+	git checkout -b side HEAD^ &&
+	sed s/-1/-side/ <file >tmp &&
+	mv tmp file &&
+	git commit -am side
+'
+
+test_expect_success 'merge detects mod-256 conflicts (recursive)' '
+	git reset --hard &&
+	test_must_fail git merge -s recursive master
+'
+
+test_expect_success 'merge detects mod-256 conflicts (resolve)' '
+	git reset --hard &&
+	test_must_fail git merge -s resolve master
+'
+
 test_done
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/t/t9811-git-p4-label-import.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/t/t9811-git-p4-label-import.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/t/t9811-git-p4-label-import.sh	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/t/t9811-git-p4-label-import.sh	2015-11-06 05:31:55.000000000 +0800
@@ -211,12 +211,57 @@
 		cd "$cli" &&
 		p4 labels &&
 		p4 labels | grep CFG_A_GIT_TAG
 	)
 '
 
+p4_head_revision() {
+	p4 changes -m 1 "$@" | awk '{print $2}'
+}
+
+# Importing a label that references a P4 commit that
+# has not been seen. The presence of a label on a commit
+# we haven't seen should not cause git-p4 to fail. It should
+# merely skip that label, and still import other labels.
+test_expect_success 'importing labels with missing revisions' '
+	test_when_finished cleanup_git &&
+	(
+		rm -fr "$cli" "$git" &&
+		mkdir "$cli" &&
+		P4CLIENT=missing-revision &&
+		client_view "//depot/missing-revision/... //missing-revision/..." &&
+		cd "$cli" &&
+		>f1 && p4 add f1 && p4 submit -d "start" &&
+
+		p4 tag -l TAG_S0 ... &&
+
+		>f2 && p4 add f2 && p4 submit -d "second" &&
+
+		startrev=$(p4_head_revision //depot/missing-revision/...) &&
+
+		>f3 && p4 add f3 && p4 submit -d "third" &&
+
+		p4 edit f2 && date >f2 && p4 submit -d "change" f2 &&
+
+		endrev=$(p4_head_revision //depot/missing-revision/...) &&
+
+		p4 tag -l TAG_S1 ... &&
+
+		# we should skip TAG_S0 since it is before our startpoint,
+		# but pick up TAG_S1.
+
+		git p4 clone --dest="$git" --import-labels -v \
+			//depot/missing-revision/...@$startrev,$endrev &&
+		(
+			cd "$git" &&
+			git rev-parse TAG_S1 &&
+			! git rev-parse TAG_S0
+		)
+	)
+'
+
 
 test_expect_success 'kill p4d' '
 	kill_p4d
 '
 
 test_done
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/t: t9825-git-p4-handle-utf16-without-bom.sh
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/tag.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/tag.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/tag.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/tag.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/tempfile.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/tempfile.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/tempfile.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/tempfile.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/templates/boilerplates.made /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/templates/boilerplates.made
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/templates/boilerplates.made	2017-10-10 14:25:02.270382929 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/templates/boilerplates.made	2017-10-10 14:28:50.786374554 +0800
@@ -1 +1 @@
-Tue Oct 10 14:25:02 CST 2017
+Tue Oct 10 14:28:50 CST 2017
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-chmtime and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-chmtime differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-chmtime.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-chmtime.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-chmtime.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-chmtime.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-config and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-config differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-config.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-config.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-config.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-config.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-ctype and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-ctype differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-ctype.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-ctype.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-ctype.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-ctype.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-date and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-date differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-date.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-date.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-date.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-date.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-delta and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-delta differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-delta.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-delta.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-delta.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-delta.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-dump-cache-tree and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-dump-cache-tree differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-dump-cache-tree.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-dump-cache-tree.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-dump-cache-tree.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-dump-cache-tree.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-dump-split-index and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-dump-split-index differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-dump-split-index.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-dump-split-index.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-dump-split-index.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-dump-split-index.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-dump-untracked-cache and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-dump-untracked-cache differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-dump-untracked-cache.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-dump-untracked-cache.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-dump-untracked-cache.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-dump-untracked-cache.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-genrandom and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-genrandom differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-genrandom.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-genrandom.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-genrandom.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-genrandom.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-hashmap and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-hashmap differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-hashmap.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-hashmap.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-hashmap.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-hashmap.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-index-version and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-index-version differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-index-version.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-index-version.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-index-version.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-index-version.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-line-buffer and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-line-buffer differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-line-buffer.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-line-buffer.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-line-buffer.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-line-buffer.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-match-trees and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-match-trees differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-match-trees.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-match-trees.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-match-trees.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-match-trees.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-mergesort and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-mergesort differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-mergesort.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-mergesort.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-mergesort.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-mergesort.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-mktemp and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-mktemp differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-mktemp.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-mktemp.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-mktemp.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-mktemp.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-parse-options and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-parse-options differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-parse-options.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-parse-options.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-parse-options.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-parse-options.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-path-utils and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-path-utils differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-path-utils.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-path-utils.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-path-utils.c	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-path-utils.c	2015-11-06 05:31:55.000000000 +0800
@@ -18,14 +18,12 @@
 		die("Path \"%s\" is too long", ceil);
 	if (!is_absolute_path(ceil))
 		die("Path \"%s\" is not absolute", ceil);
 	if (normalize_path_copy(buf, ceil) < 0)
 		die("Path \"%s\" could not be normalized", ceil);
 	len = strlen(buf);
-	if (len > 1 && buf[len-1] == '/')
-		die("Normalized path \"%s\" ended with slash", buf);
 	free(item->string);
 	item->string = xstrdup(buf);
 	return 1;
 }
 
 static void normalize_argv_string(const char **var, const char *input)
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-path-utils.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-path-utils.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-path-utils.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-path-utils.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-prio-queue and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-prio-queue differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-prio-queue.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-prio-queue.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-prio-queue.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-prio-queue.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-read-cache and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-read-cache differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-read-cache.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-read-cache.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-read-cache.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-read-cache.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-regex and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-regex differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-regex.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-regex.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-regex.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-regex.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-revision-walking and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-revision-walking differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-revision-walking.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-revision-walking.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-revision-walking.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-revision-walking.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-run-command and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-run-command differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-run-command.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-run-command.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-run-command.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-run-command.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-scrap-cache-tree and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-scrap-cache-tree differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-scrap-cache-tree.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-scrap-cache-tree.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-scrap-cache-tree.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-scrap-cache-tree.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-sha1 and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-sha1 differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-sha1-array and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-sha1-array differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-sha1-array.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-sha1-array.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-sha1-array.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-sha1-array.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-sha1.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-sha1.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-sha1.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-sha1.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-sigchain and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-sigchain differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-sigchain.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-sigchain.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-sigchain.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-sigchain.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-string-list and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-string-list differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-string-list.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-string-list.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-string-list.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-string-list.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-submodule-config and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-submodule-config differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-submodule-config.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-submodule-config.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-submodule-config.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-submodule-config.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-subprocess and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-subprocess differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-subprocess.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-subprocess.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-subprocess.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-subprocess.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-svn-fe and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-svn-fe differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-svn-fe.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-svn-fe.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-svn-fe.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-svn-fe.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-urlmatch-normalization and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-urlmatch-normalization differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-urlmatch-normalization.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-urlmatch-normalization.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-urlmatch-normalization.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-urlmatch-normalization.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-wildmatch and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-wildmatch differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-wildmatch.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-wildmatch.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/test-wildmatch.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/test-wildmatch.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/thread-utils.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/thread-utils.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/thread-utils.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/thread-utils.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/trace.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/trace.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/trace.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/trace.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/trailer.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/trailer.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/trailer.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/trailer.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/transport.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/transport.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/transport-helper.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/transport-helper.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/transport-helper.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/transport-helper.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/transport.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/transport.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/tree.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/tree.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/tree-diff.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/tree-diff.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/tree-diff.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/tree-diff.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/tree.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/tree.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/tree-walk.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/tree-walk.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/tree-walk.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/tree-walk.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/unix-socket.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/unix-socket.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/unix-socket.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/unix-socket.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/unpack-trees.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/unpack-trees.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/unpack-trees.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/unpack-trees.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/upload-pack.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/upload-pack.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/upload-pack.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/upload-pack.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/url.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/url.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/urlmatch.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/urlmatch.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/urlmatch.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/urlmatch.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/url.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/url.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/usage.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/usage.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/usage.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/usage.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/userdiff.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/userdiff.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/userdiff.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/userdiff.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/utf8.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/utf8.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/utf8.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/utf8.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/varint.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/varint.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/varint.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/varint.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/vcs-svn/fast_export.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/vcs-svn/fast_export.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/vcs-svn/fast_export.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/vcs-svn/fast_export.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/vcs-svn/lib.a and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/vcs-svn/lib.a differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/vcs-svn/line_buffer.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/vcs-svn/line_buffer.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/vcs-svn/line_buffer.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/vcs-svn/line_buffer.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/vcs-svn/repo_tree.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/vcs-svn/repo_tree.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/vcs-svn/repo_tree.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/vcs-svn/repo_tree.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/vcs-svn/sliding_window.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/vcs-svn/sliding_window.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/vcs-svn/sliding_window.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/vcs-svn/sliding_window.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/vcs-svn/svndiff.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/vcs-svn/svndiff.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/vcs-svn/svndiff.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/vcs-svn/svndiff.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/vcs-svn/svndump.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/vcs-svn/svndump.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/vcs-svn/svndump.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/vcs-svn/svndump.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/version /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/version
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/version	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/version	2015-11-06 05:31:55.000000000 +0800
@@ -1 +1 @@
-2.6.2
+2.6.3
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/version.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/version.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/versioncmp.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/versioncmp.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/versioncmp.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/versioncmp.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/version.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/version.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/walker.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/walker.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/walker.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/walker.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/wildmatch.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/wildmatch.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/wildmatch.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/wildmatch.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/wrapper.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/wrapper.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/wrapper.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/wrapper.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/write_or_die.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/write_or_die.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/write_or_die.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/write_or_die.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ws.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ws.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/ws.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/ws.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/wt-status.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/wt-status.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/wt-status.c	2015-10-17 05:58:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/wt-status.c	2015-11-06 05:31:55.000000000 +0800
@@ -894,21 +894,21 @@
 	}
 }
 
 static void wt_status_print_tracking(struct wt_status *s)
 {
 	struct strbuf sb = STRBUF_INIT;
-	const char *cp, *ep;
+	const char *cp, *ep, *branch_name;
 	struct branch *branch;
 	char comment_line_string[3];
 	int i;
 
 	assert(s->branch && !s->is_initial);
-	if (!starts_with(s->branch, "refs/heads/"))
+	if (!skip_prefix(s->branch, "refs/heads/", &branch_name))
 		return;
-	branch = branch_get(s->branch + 11);
+	branch = branch_get(branch_name);
 	if (!format_tracking_info(branch, &sb))
 		return;
 
 	i = 0;
 	if (s->display_comment_prefix) {
 		comment_line_string[i++] = comment_line_char;
@@ -1265,22 +1265,23 @@
  * Extract branch information from rebase/bisect
  */
 static char *read_and_strip_branch(const char *path)
 {
 	struct strbuf sb = STRBUF_INIT;
 	unsigned char sha1[20];
+	const char *branch_name;
 
 	if (strbuf_read_file(&sb, git_path("%s", path), 0) <= 0)
 		goto got_nothing;
 
 	while (sb.len && sb.buf[sb.len - 1] == '\n')
 		strbuf_setlen(&sb, sb.len - 1);
 	if (!sb.len)
 		goto got_nothing;
-	if (starts_with(sb.buf, "refs/heads/"))
-		strbuf_remove(&sb,0, strlen("refs/heads/"));
+	if (skip_prefix(sb.buf, "refs/heads/", &branch_name))
+		strbuf_remove(&sb, 0, branch_name - sb.buf);
 	else if (starts_with(sb.buf, "refs/"))
 		;
 	else if (!get_sha1_hex(sb.buf, sha1)) {
 		const char *abbrev;
 		abbrev = find_unique_abbrev(sha1, DEFAULT_ABBREV);
 		strbuf_reset(&sb);
@@ -1305,15 +1306,14 @@
 			   const char *email, unsigned long timestamp, int tz,
 			   const char *message, void *cb_data)
 {
 	struct grab_1st_switch_cbdata *cb = cb_data;
 	const char *target = NULL, *end;
 
-	if (!starts_with(message, "checkout: moving from "))
+	if (!skip_prefix(message, "checkout: moving from ", &message))
 		return 0;
-	message += strlen("checkout: moving from ");
 	target = strstr(message, " to ");
 	if (!target)
 		return 0;
 	target += strlen(" to ");
 	strbuf_reset(&cb->buf);
 	hashcpy(cb->nsha1, nsha1);
@@ -1345,20 +1345,16 @@
 	if (dwim_ref(cb.buf.buf, cb.buf.len, sha1, &ref) == 1 &&
 	    /* sha1 is a commit? match without further lookup */
 	    (!hashcmp(cb.nsha1, sha1) ||
 	     /* perhaps sha1 is a tag, try to dereference to a commit */
 	     ((commit = lookup_commit_reference_gently(sha1, 1)) != NULL &&
 	      !hashcmp(cb.nsha1, commit->object.sha1)))) {
-		int ofs;
-		if (starts_with(ref, "refs/tags/"))
-			ofs = strlen("refs/tags/");
-		else if (starts_with(ref, "refs/remotes/"))
-			ofs = strlen("refs/remotes/");
-		else
-			ofs = 0;
-		state->detached_from = xstrdup(ref + ofs);
+		const char *from = ref;
+		if (!skip_prefix(from, "refs/tags/", &from))
+			skip_prefix(from, "refs/remotes/", &from);
+		state->detached_from = xstrdup(from);
 	} else
 		state->detached_from =
 			xstrdup(find_unique_abbrev(cb.nsha1, DEFAULT_ABBREV));
 	hashcpy(state->detached_sha1, cb.nsha1);
 	state->detached_at = !get_sha1("HEAD", sha1) &&
 			     !hashcmp(sha1, state->detached_sha1);
@@ -1439,15 +1435,13 @@
 	wt_status_get_state(&state,
 			    s->branch && !strcmp(s->branch, "HEAD"));
 
 	if (s->branch) {
 		const char *on_what = _("On branch ");
 		const char *branch_name = s->branch;
-		if (starts_with(branch_name, "refs/heads/"))
-			branch_name += 11;
-		else if (!strcmp(branch_name, "HEAD")) {
+		if (!strcmp(branch_name, "HEAD")) {
 			branch_status_color = color(WT_STATUS_NOBRANCH, s);
 			if (state.rebase_in_progress || state.rebase_interactive_in_progress) {
 				if (state.rebase_interactive_in_progress)
 					on_what = _("interactive rebase in progress; onto ");
 				else
 					on_what = _("rebase in progress; onto ");
@@ -1459,13 +1453,14 @@
 				else
 					on_what = _("HEAD detached from ");
 			} else {
 				branch_name = "";
 				on_what = _("Not currently on any branch.");
 			}
-		}
+		} else
+			skip_prefix(branch_name, "refs/heads/", &branch_name);
 		status_printf(s, color(WT_STATUS_HEADER, s), "%s", "");
 		status_printf_more(s, branch_status_color, "%s", on_what);
 		status_printf_more(s, branch_color, "%s\n", branch_name);
 		if (!s->is_initial)
 			wt_status_print_tracking(s);
 	}
@@ -1641,43 +1636,41 @@
 	color_fprintf(s->fp, color(WT_STATUS_HEADER, s), "## ");
 
 	if (!s->branch)
 		return;
 	branch_name = s->branch;
 
-	if (starts_with(branch_name, "refs/heads/"))
-		branch_name += 11;
-	else if (!strcmp(branch_name, "HEAD")) {
-		branch_name = _("HEAD (no branch)");
-		branch_color_local = color(WT_STATUS_NOBRANCH, s);
-	}
-
-	branch = branch_get(s->branch + 11);
 	if (s->is_initial)
 		color_fprintf(s->fp, header_color, _("Initial commit on "));
 
+	if (!strcmp(s->branch, "HEAD")) {
+		color_fprintf(s->fp, color(WT_STATUS_NOBRANCH, s), "%s",
+			      _("HEAD (no branch)"));
+		goto conclude;
+	}
+
+	skip_prefix(branch_name, "refs/heads/", &branch_name);
+
+	branch = branch_get(branch_name);
+
 	color_fprintf(s->fp, branch_color_local, "%s", branch_name);
 
 	if (stat_tracking_info(branch, &num_ours, &num_theirs, &base) < 0) {
-		if (!base) {
-			fputc(s->null_termination ? '\0' : '\n', s->fp);
-			return;
-		}
+		if (!base)
+			goto conclude;
 
 		upstream_is_gone = 1;
 	}
 
 	base = shorten_unambiguous_ref(base, 0);
 	color_fprintf(s->fp, header_color, "...");
 	color_fprintf(s->fp, branch_color_remote, "%s", base);
 	free((char *)base);
 
-	if (!upstream_is_gone && !num_ours && !num_theirs) {
-		fputc(s->null_termination ? '\0' : '\n', s->fp);
-		return;
-	}
+	if (!upstream_is_gone && !num_ours && !num_theirs)
+		goto conclude;
 
 #define LABEL(string) (s->no_gettext ? (string) : _(string))
 
 	color_fprintf(s->fp, header_color, " [");
 	if (upstream_is_gone) {
 		color_fprintf(s->fp, header_color, LABEL(N_("gone")));
@@ -1692,12 +1685,13 @@
 		color_fprintf(s->fp, branch_color_local, "%d", num_ours);
 		color_fprintf(s->fp, header_color, ", %s", LABEL(N_("behind ")));
 		color_fprintf(s->fp, branch_color_remote, "%d", num_theirs);
 	}
 
 	color_fprintf(s->fp, header_color, "]");
+ conclude:
 	fputc(s->null_termination ? '\0' : '\n', s->fp);
 }
 
 void wt_shortstatus_print(struct wt_status *s)
 {
 	int i;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/wt-status.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/wt-status.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/wt-status.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/wt-status.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/xdiff/lib.a and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/xdiff/lib.a differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/xdiff/xdiffi.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/xdiff/xdiffi.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/xdiff/xdiffi.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/xdiff/xdiffi.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/xdiff/xemit.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/xdiff/xemit.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/xdiff/xemit.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/xdiff/xemit.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/xdiff/xhistogram.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/xdiff/xhistogram.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/xdiff/xhistogram.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/xdiff/xhistogram.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/xdiff/xmerge.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/xdiff/xmerge.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/xdiff/xmerge.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/xdiff/xmerge.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/xdiff/xpatience.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/xdiff/xpatience.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/xdiff/xpatience.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/xdiff/xpatience.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/xdiff/xprepare.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/xdiff/xprepare.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/xdiff/xprepare.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/xdiff/xprepare.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/xdiff/xutils.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/xdiff/xutils.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/xdiff/xutils.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/xdiff/xutils.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/xdiff-interface.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/xdiff-interface.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/xdiff-interface.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/xdiff-interface.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/zlib.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/zlib.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.2/zlib.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.6.3/zlib.o differ

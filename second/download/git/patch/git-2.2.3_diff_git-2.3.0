Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/abspath.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/abspath.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/abspath.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/abspath.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/advice.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/advice.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/advice.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/advice.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/alias.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/alias.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/alias.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/alias.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/alloc.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/alloc.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/alloc.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/alloc.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/archive.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/archive.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/archive.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/archive.c	2015-02-06 05:40:08.000000000 +0800
@@ -154,24 +154,32 @@
 
 	if (args->verbose)
 		fprintf(stderr, "%.*s\n", (int)path.len, path.buf);
 	return write_entry(args, sha1, path.buf, path.len, mode);
 }
 
+static int write_archive_entry_buf(const unsigned char *sha1, struct strbuf *base,
+		const char *filename, unsigned mode, int stage,
+		void *context)
+{
+	return write_archive_entry(sha1, base->buf, base->len,
+				     filename, mode, stage, context);
+}
+
 static void queue_directory(const unsigned char *sha1,
-		const char *base, int baselen, const char *filename,
+		struct strbuf *base, const char *filename,
 		unsigned mode, int stage, struct archiver_context *c)
 {
 	struct directory *d;
-	d = xmallocz(sizeof(*d) + baselen + 1 + strlen(filename));
+	d = xmallocz(sizeof(*d) + base->len + 1 + strlen(filename));
 	d->up	   = c->bottom;
-	d->baselen = baselen;
+	d->baselen = base->len;
 	d->mode	   = mode;
 	d->stage   = stage;
 	c->bottom  = d;
-	d->len = sprintf(d->path, "%.*s%s/", baselen, base, filename);
+	d->len = sprintf(d->path, "%.*s%s/", (int)base->len, base->buf, filename);
 	hashcpy(d->sha1, sha1);
 }
 
 static int write_directory(struct archiver_context *c)
 {
 	struct directory *d = c->bottom;
@@ -188,34 +196,34 @@
 				    d->stage, c) != READ_TREE_RECURSIVE;
 	free(d);
 	return ret ? -1 : 0;
 }
 
 static int queue_or_write_archive_entry(const unsigned char *sha1,
-		const char *base, int baselen, const char *filename,
+		struct strbuf *base, const char *filename,
 		unsigned mode, int stage, void *context)
 {
 	struct archiver_context *c = context;
 
 	while (c->bottom &&
-	       !(baselen >= c->bottom->len &&
-		 !strncmp(base, c->bottom->path, c->bottom->len))) {
+	       !(base->len >= c->bottom->len &&
+		 !strncmp(base->buf, c->bottom->path, c->bottom->len))) {
 		struct directory *next = c->bottom->up;
 		free(c->bottom);
 		c->bottom = next;
 	}
 
 	if (S_ISDIR(mode)) {
-		queue_directory(sha1, base, baselen, filename,
+		queue_directory(sha1, base, filename,
 				mode, stage, c);
 		return READ_TREE_RECURSIVE;
 	}
 
 	if (write_directory(c))
 		return -1;
-	return write_archive_entry(sha1, base, baselen, filename, mode,
+	return write_archive_entry(sha1, base->buf, base->len, filename, mode,
 				   stage, context);
 }
 
 int write_archive_entries(struct archiver_args *args,
 		write_archive_entry_fn_t write_entry)
 {
@@ -257,13 +265,13 @@
 		git_attr_set_direction(GIT_ATTR_INDEX, &the_index);
 	}
 
 	err = read_tree_recursive(args->tree, "", 0, 0, &args->pathspec,
 				  args->pathspec.has_wildcard ?
 				  queue_or_write_archive_entry :
-				  write_archive_entry,
+				  write_archive_entry_buf,
 				  &context);
 	if (err == READ_TREE_RECURSIVE)
 		err = 0;
 	while (context.bottom) {
 		struct directory *next = context.bottom->up;
 		free(context.bottom);
@@ -283,20 +291,20 @@
 		if (!strcmp(name, archivers[i]->name))
 			return archivers[i];
 	}
 	return NULL;
 }
 
-static int reject_entry(const unsigned char *sha1, const char *base,
-			int baselen, const char *filename, unsigned mode,
+static int reject_entry(const unsigned char *sha1, struct strbuf *base,
+			const char *filename, unsigned mode,
 			int stage, void *context)
 {
 	int ret = -1;
 	if (S_ISDIR(mode)) {
 		struct strbuf sb = STRBUF_INIT;
-		strbuf_addstr(&sb, base);
+		strbuf_addbuf(&sb, base);
 		strbuf_addstr(&sb, filename);
 		if (!match_pathspec(context, sb.buf, sb.len, 0, NULL, 1))
 			ret = READ_TREE_RECURSIVE;
 		strbuf_release(&sb);
 	}
 	return ret;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/archive.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/archive.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/archive.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/archive.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/archive-tar.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/archive-tar.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/archive-tar.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/archive-tar.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/archive-zip.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/archive-zip.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/archive-zip.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/archive-zip.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/argv-array.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/argv-array.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/argv-array.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/argv-array.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/attr.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/attr.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/attr.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/attr.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/base85.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/base85.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/base85.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/base85.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/git /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/git
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/git	2017-10-10 12:21:13.738655180 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/git	2017-10-10 12:24:49.586647269 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3 and git.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0 and git.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/git" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/git-cvsserver /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/git-cvsserver
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/git-cvsserver	2017-10-10 12:21:13.754655180 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/git-cvsserver	2017-10-10 12:24:49.602647269 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3 and git-cvsserver.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0 and git-cvsserver.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/git-cvsserver" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/git-receive-pack /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/git-receive-pack
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/git-receive-pack	2017-10-10 12:21:13.746655180 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/git-receive-pack	2017-10-10 12:24:49.594647269 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3 and git-receive-pack.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0 and git-receive-pack.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/git-receive-pack" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/git-shell /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/git-shell
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/git-shell	2017-10-10 12:21:13.750655180 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/git-shell	2017-10-10 12:24:49.598647269 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3 and git-shell.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0 and git-shell.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/git-shell" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/git-upload-archive /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/git-upload-archive
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/git-upload-archive	2017-10-10 12:21:13.746655180 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/git-upload-archive	2017-10-10 12:24:49.594647269 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3 and git-upload-archive.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0 and git-upload-archive.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/git-upload-archive" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/git-upload-pack /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/git-upload-pack
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/git-upload-pack	2017-10-10 12:21:13.742655180 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/git-upload-pack	2017-10-10 12:24:49.590647269 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3 and git-upload-pack.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0 and git-upload-pack.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/git-upload-pack" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-chmtime /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-chmtime
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-chmtime	2017-10-10 12:21:13.754655180 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-chmtime	2017-10-10 12:24:49.602647269 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3 and test-chmtime.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0 and test-chmtime.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-chmtime" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-config /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-config
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-config	2017-10-10 12:21:13.758655179 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-config	2017-10-10 12:24:49.606647269 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3 and test-config.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0 and test-config.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-config" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-ctype /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-ctype
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-ctype	2017-10-10 12:21:13.758655179 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-ctype	2017-10-10 12:24:49.606647269 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3 and test-ctype.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0 and test-ctype.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-ctype" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-date /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-date
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-date	2017-10-10 12:21:13.762655179 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-date	2017-10-10 12:24:49.610647269 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3 and test-date.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0 and test-date.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-date" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-delta /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-delta
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-delta	2017-10-10 12:21:13.766655179 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-delta	2017-10-10 12:24:49.614647268 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3 and test-delta.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0 and test-delta.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-delta" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-dump-cache-tree /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-dump-cache-tree
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-dump-cache-tree	2017-10-10 12:21:13.766655179 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-dump-cache-tree	2017-10-10 12:24:49.614647268 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3 and test-dump-cache-tree.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0 and test-dump-cache-tree.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-dump-cache-tree" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-dump-split-index /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-dump-split-index
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-dump-split-index	2017-10-10 12:21:13.770655179 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-dump-split-index	2017-10-10 12:24:49.618647268 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3 and test-dump-split-index.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0 and test-dump-split-index.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-dump-split-index" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-genrandom /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-genrandom
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-genrandom	2017-10-10 12:21:13.770655179 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-genrandom	2017-10-10 12:24:49.618647268 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3 and test-genrandom.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0 and test-genrandom.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-genrandom" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-hashmap /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-hashmap
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-hashmap	2017-10-10 12:21:13.774655179 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-hashmap	2017-10-10 12:24:49.622647268 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3 and test-hashmap.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0 and test-hashmap.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-hashmap" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-index-version /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-index-version
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-index-version	2017-10-10 12:21:13.778655179 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-index-version	2017-10-10 12:24:49.626647268 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3 and test-index-version.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0 and test-index-version.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-index-version" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-line-buffer /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-line-buffer
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-line-buffer	2017-10-10 12:21:13.778655179 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-line-buffer	2017-10-10 12:24:49.626647268 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3 and test-line-buffer.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0 and test-line-buffer.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-line-buffer" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-match-trees /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-match-trees
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-match-trees	2017-10-10 12:21:13.782655179 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-match-trees	2017-10-10 12:24:49.630647268 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3 and test-match-trees.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0 and test-match-trees.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-match-trees" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-mergesort /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-mergesort
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-mergesort	2017-10-10 12:21:13.782655179 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-mergesort	2017-10-10 12:24:49.630647268 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3 and test-mergesort.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0 and test-mergesort.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-mergesort" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-mktemp /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-mktemp
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-mktemp	2017-10-10 12:21:13.786655178 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-mktemp	2017-10-10 12:24:49.634647268 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3 and test-mktemp.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0 and test-mktemp.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-mktemp" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-parse-options /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-parse-options
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-parse-options	2017-10-10 12:21:13.786655178 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-parse-options	2017-10-10 12:24:49.634647268 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3 and test-parse-options.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0 and test-parse-options.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-parse-options" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-path-utils /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-path-utils
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-path-utils	2017-10-10 12:21:13.790655178 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-path-utils	2017-10-10 12:24:49.638647268 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3 and test-path-utils.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0 and test-path-utils.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-path-utils" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-prio-queue /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-prio-queue
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-prio-queue	2017-10-10 12:21:13.790655178 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-prio-queue	2017-10-10 12:24:49.638647268 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3 and test-prio-queue.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0 and test-prio-queue.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-prio-queue" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-read-cache /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-read-cache
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-read-cache	2017-10-10 12:21:13.794655178 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-read-cache	2017-10-10 12:24:49.642647267 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3 and test-read-cache.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0 and test-read-cache.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-read-cache" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-regex /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-regex
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-regex	2017-10-10 12:21:13.798655178 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-regex	2017-10-10 12:24:49.646647267 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3 and test-regex.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0 and test-regex.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-regex" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-revision-walking /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-revision-walking
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-revision-walking	2017-10-10 12:21:13.798655178 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-revision-walking	2017-10-10 12:24:49.646647267 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3 and test-revision-walking.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0 and test-revision-walking.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-revision-walking" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-run-command /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-run-command
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-run-command	2017-10-10 12:21:13.802655178 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-run-command	2017-10-10 12:24:49.650647267 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3 and test-run-command.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0 and test-run-command.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-run-command" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-scrap-cache-tree /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-scrap-cache-tree
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-scrap-cache-tree	2017-10-10 12:21:13.802655178 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-scrap-cache-tree	2017-10-10 12:24:49.650647267 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3 and test-scrap-cache-tree.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0 and test-scrap-cache-tree.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-scrap-cache-tree" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-sha1 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-sha1
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-sha1	2017-10-10 12:21:13.806655178 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-sha1	2017-10-10 12:24:49.654647267 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3 and test-sha1.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0 and test-sha1.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-sha1" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-sha1-array /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-sha1-array
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-sha1-array	2017-10-10 12:21:13.810655178 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-sha1-array	2017-10-10 12:24:49.654647267 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3 and test-sha1-array.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0 and test-sha1-array.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-sha1-array" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-sigchain /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-sigchain
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-sigchain	2017-10-10 12:21:13.810655178 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-sigchain	2017-10-10 12:24:49.658647267 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3 and test-sigchain.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0 and test-sigchain.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-sigchain" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-string-list /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-string-list
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-string-list	2017-10-10 12:21:13.814655177 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-string-list	2017-10-10 12:24:49.662647267 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3 and test-string-list.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0 and test-string-list.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-string-list" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-subprocess /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-subprocess
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-subprocess	2017-10-10 12:21:13.814655177 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-subprocess	2017-10-10 12:24:49.662647267 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3 and test-subprocess.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0 and test-subprocess.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-subprocess" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-svn-fe /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-svn-fe
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-svn-fe	2017-10-10 12:21:13.818655177 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-svn-fe	2017-10-10 12:24:49.666647267 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3 and test-svn-fe.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0 and test-svn-fe.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-svn-fe" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-urlmatch-normalization /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-urlmatch-normalization
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-urlmatch-normalization	2017-10-10 12:21:13.818655177 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-urlmatch-normalization	2017-10-10 12:24:49.666647267 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3 and test-urlmatch-normalization.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0 and test-urlmatch-normalization.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-urlmatch-normalization" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-wildmatch /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-wildmatch
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers/test-wildmatch	2017-10-10 12:21:13.822655177 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers/test-wildmatch	2017-10-10 12:24:49.670647266 +0800
@@ -1,22 +1,22 @@
 #!/bin/sh
 
 # wrap-for-bin.sh: Template for git executable wrapper scripts
 # to run test suite against sandbox, but with only bindir-installed
 # executables in PATH.  The Makefile copies this into various
 # files in bin-wrappers, substituting
-# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3 and test-wildmatch.
+# /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0 and test-wildmatch.
 
-GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3'
+GIT_EXEC_PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0'
 if test -n "$NO_SET_GIT_TEMPLATE_DIR"
 then
 	unset GIT_TEMPLATE_DIR
 else
-	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/templates/blt'
+	GIT_TEMPLATE_DIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/templates/blt'
 	export GIT_TEMPLATE_DIR
 fi
-GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
-GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/po/build/locale'
-PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bin-wrappers:'"$PATH"
+GITPERLLIB='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/blib/lib'"${GITPERLLIB:+:$GITPERLLIB}"
+GIT_TEXTDOMAINDIR='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/po/build/locale'
+PATH='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bin-wrappers:'"$PATH"
 export GIT_EXEC_PATH GITPERLLIB PATH GIT_TEXTDOMAINDIR
 
 exec "${GIT_EXEC_PATH}/test-wildmatch" "$@"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bisect.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bisect.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bisect.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bisect.c	2015-02-06 05:40:08.000000000 +0800
@@ -774,13 +774,13 @@
 static void check_merge_bases(int no_checkout)
 {
 	struct commit_list *result;
 	int rev_nr;
 	struct commit **rev = get_bad_and_good_commits(&rev_nr);
 
-	result = get_merge_bases_many(rev[0], rev_nr - 1, rev + 1, 0);
+	result = get_merge_bases_many(rev[0], rev_nr - 1, rev + 1);
 
 	for (; result; result = result->next) {
 		const unsigned char *mb = result->item->object.sha1;
 		if (!hashcmp(mb, current_bad_sha1)) {
 			handle_bad_merge_base();
 		} else if (0 <= sha1_array_lookup(&good_revs, mb)) {
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bisect.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bisect.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bisect.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bisect.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/blob.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/blob.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/blob.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/blob.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/block-sha1/sha1.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/block-sha1/sha1.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/block-sha1/sha1.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/block-sha1/sha1.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/branch.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/branch.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/branch.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/branch.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/build_ir.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/build_ir.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/build_ir.sh	2017-10-10 12:21:13.866655176 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/build_ir.sh	2017-10-10 12:24:49.682647266 +0800
@@ -11,1562 +11,1562 @@
 	then
 		succ=`expr $succ + 1`;
 	fi
 	total=`expr $total + 1`;
 }
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/credential-store.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/credential-store.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/credential-store.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/credential-store.c.bc
 check
-echo "1 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/credential-store.c to bc" >&2
+echo "1 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/credential-store.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/abspath.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/abspath.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/abspath.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/abspath.c.bc
 check
-echo "2 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/abspath.c to bc" >&2
+echo "2 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/abspath.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/advice.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/advice.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/advice.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/advice.c.bc
 check
-echo "3 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/advice.c to bc" >&2
+echo "3 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/advice.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/alias.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/alias.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/alias.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/alias.c.bc
 check
-echo "4 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/alias.c to bc" >&2
+echo "4 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/alias.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/alloc.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/alloc.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/alloc.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/alloc.c.bc
 check
-echo "5 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/alloc.c to bc" >&2
+echo "5 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/alloc.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/archive.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/archive.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/archive.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/archive.c.bc
 check
-echo "6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/archive.c to bc" >&2
+echo "6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/archive.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/archive-tar.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/archive-tar.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/archive-tar.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/archive-tar.c.bc
 check
-echo "7 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/archive-tar.c to bc" >&2
+echo "7 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/archive-tar.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/archive-zip.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/archive-zip.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/archive-zip.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/archive-zip.c.bc
 check
-echo "8 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/archive-zip.c to bc" >&2
+echo "8 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/archive-zip.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/argv-array.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/argv-array.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/argv-array.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/argv-array.c.bc
 check
-echo "9 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/argv-array.c to bc" >&2
+echo "9 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/argv-array.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DETC_GITATTRIBUTES=\"/usr/local/etc/gitattributes\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/attr.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/attr.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DETC_GITATTRIBUTES=\"/usr/local/etc/gitattributes\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/attr.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/attr.c.bc
 check
-echo "10 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/attr.c to bc" >&2
+echo "10 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/attr.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/base85.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/base85.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/base85.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/base85.c.bc
 check
-echo "11 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/base85.c to bc" >&2
+echo "11 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/base85.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bisect.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bisect.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bisect.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bisect.c.bc
 check
-echo "12 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bisect.c to bc" >&2
+echo "12 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bisect.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/blob.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/blob.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/blob.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/blob.c.bc
 check
-echo "13 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/blob.c to bc" >&2
+echo "13 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/blob.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/branch.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/branch.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/branch.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/branch.c.bc
 check
-echo "14 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/branch.c to bc" >&2
+echo "14 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/branch.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bulk-checkin.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bulk-checkin.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bulk-checkin.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bulk-checkin.c.bc
 check
-echo "15 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bulk-checkin.c to bc" >&2
+echo "15 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bulk-checkin.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bundle.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bundle.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bundle.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bundle.c.bc
 check
-echo "16 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bundle.c to bc" >&2
+echo "16 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bundle.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/cache-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/cache-tree.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/cache-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/cache-tree.c.bc
 check
-echo "17 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/cache-tree.c to bc" >&2
+echo "17 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/cache-tree.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/color.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/color.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/color.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/color.c.bc
 check
-echo "18 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/color.c to bc" >&2
+echo "18 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/color.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/column.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/column.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/column.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/column.c.bc
 check
-echo "19 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/column.c to bc" >&2
+echo "19 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/column.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/combine-diff.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/combine-diff.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/combine-diff.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/combine-diff.c.bc
 check
-echo "20 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/combine-diff.c to bc" >&2
+echo "20 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/combine-diff.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/commit.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/commit.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/commit.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/commit.c.bc
 check
-echo "21 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/commit.c to bc" >&2
+echo "21 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/commit.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/compat/obstack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/compat/obstack.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/compat/obstack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/compat/obstack.c.bc
 check
-echo "22 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/compat/obstack.c to bc" >&2
+echo "22 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/compat/obstack.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/compat/terminal.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/compat/terminal.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/compat/terminal.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/compat/terminal.c.bc
 check
-echo "23 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/compat/terminal.c to bc" >&2
+echo "23 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/compat/terminal.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DETC_GITCONFIG=\"/usr/local/etc/gitconfig\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/config.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/config.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DETC_GITCONFIG=\"/usr/local/etc/gitconfig\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/config.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/config.c.bc
 check
-echo "24 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/config.c to bc" >&2
+echo "24 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/config.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/connect.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/connect.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/connect.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/connect.c.bc
 check
-echo "25 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/connect.c to bc" >&2
+echo "25 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/connect.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/connected.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/connected.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/connected.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/connected.c.bc
 check
-echo "26 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/connected.c to bc" >&2
+echo "26 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/connected.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/convert.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/convert.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/convert.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/convert.c.bc
 check
-echo "27 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/convert.c to bc" >&2
+echo "27 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/convert.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/copy.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/copy.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/copy.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/copy.c.bc
 check
-echo "28 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/copy.c to bc" >&2
+echo "28 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/copy.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/credential.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/credential.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/credential.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/credential.c.bc
 check
-echo "29 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/credential.c to bc" >&2
+echo "29 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/credential.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/csum-file.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/csum-file.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/csum-file.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/csum-file.c.bc
 check
-echo "30 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/csum-file.c to bc" >&2
+echo "30 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/csum-file.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/ctype.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/ctype.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/ctype.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/ctype.c.bc
 check
-echo "31 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/ctype.c to bc" >&2
+echo "31 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/ctype.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/date.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/date.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/date.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/date.c.bc
 check
-echo "32 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/date.c to bc" >&2
+echo "32 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/date.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/decorate.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/decorate.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/decorate.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/decorate.c.bc
 check
-echo "33 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/decorate.c to bc" >&2
+echo "33 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/decorate.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diffcore-break.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diffcore-break.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diffcore-break.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diffcore-break.c.bc
 check
-echo "34 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diffcore-break.c to bc" >&2
+echo "34 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diffcore-break.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diffcore-delta.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diffcore-delta.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diffcore-delta.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diffcore-delta.c.bc
 check
-echo "35 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diffcore-delta.c to bc" >&2
+echo "35 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diffcore-delta.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diffcore-order.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diffcore-order.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diffcore-order.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diffcore-order.c.bc
 check
-echo "36 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diffcore-order.c to bc" >&2
+echo "36 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diffcore-order.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diffcore-pickaxe.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diffcore-pickaxe.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diffcore-pickaxe.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diffcore-pickaxe.c.bc
 check
-echo "37 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diffcore-pickaxe.c to bc" >&2
+echo "37 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diffcore-pickaxe.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diffcore-rename.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diffcore-rename.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diffcore-rename.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diffcore-rename.c.bc
 check
-echo "38 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diffcore-rename.c to bc" >&2
+echo "38 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diffcore-rename.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diff-delta.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diff-delta.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diff-delta.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diff-delta.c.bc
 check
-echo "39 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diff-delta.c to bc" >&2
+echo "39 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diff-delta.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diff-lib.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diff-lib.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diff-lib.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diff-lib.c.bc
 check
-echo "40 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diff-lib.c to bc" >&2
+echo "40 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diff-lib.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diff-no-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diff-no-index.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diff-no-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diff-no-index.c.bc
 check
-echo "41 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diff-no-index.c to bc" >&2
+echo "41 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diff-no-index.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diff.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diff.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diff.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diff.c.bc
 check
-echo "42 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diff.c to bc" >&2
+echo "42 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diff.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/dir.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/dir.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/dir.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/dir.c.bc
 check
-echo "43 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/dir.c to bc" >&2
+echo "43 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/dir.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/editor.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/editor.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/editor.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/editor.c.bc
 check
-echo "44 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/editor.c to bc" >&2
+echo "44 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/editor.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/entry.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/entry.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/entry.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/entry.c.bc
 check
-echo "45 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/entry.c to bc" >&2
+echo "45 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/entry.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/environment.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/environment.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/environment.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/environment.c.bc
 check
-echo "46 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/environment.c to bc" >&2
+echo "46 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/environment.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/ewah/bitmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/ewah/bitmap.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/ewah/bitmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/ewah/bitmap.c.bc
 check
-echo "47 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/ewah/bitmap.c to bc" >&2
+echo "47 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/ewah/bitmap.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/ewah/ewah_bitmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/ewah/ewah_bitmap.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/ewah/ewah_bitmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/ewah/ewah_bitmap.c.bc
 check
-echo "48 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/ewah/ewah_bitmap.c to bc" >&2
+echo "48 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/ewah/ewah_bitmap.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/ewah/ewah_io.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/ewah/ewah_io.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/ewah/ewah_io.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/ewah/ewah_io.c.bc
 check
-echo "49 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/ewah/ewah_io.c to bc" >&2
+echo "49 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/ewah/ewah_io.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/ewah/ewah_rlw.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/ewah/ewah_rlw.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/ewah/ewah_rlw.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/ewah/ewah_rlw.c.bc
 check
-echo "50 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/ewah/ewah_rlw.c to bc" >&2
+echo "50 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/ewah/ewah_rlw.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_EXEC_PATH=\"/usr/local/libexec/git-core\" -DBINDIR=\"bin\" -DPREFIX=\"/usr/local\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/exec_cmd.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/exec_cmd.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_EXEC_PATH=\"/usr/local/libexec/git-core\" -DBINDIR=\"bin\" -DPREFIX=\"/usr/local\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/exec_cmd.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/exec_cmd.c.bc
 check
-echo "51 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/exec_cmd.c to bc" >&2
+echo "51 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/exec_cmd.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/fetch-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/fetch-pack.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/fetch-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/fetch-pack.c.bc
 check
-echo "52 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/fetch-pack.c to bc" >&2
+echo "52 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/fetch-pack.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/fsck.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/fsck.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/fsck.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/fsck.c.bc
 check
-echo "53 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/fsck.c to bc" >&2
+echo "53 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/fsck.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_LOCALE_PATH=\"/usr/local/share/locale\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/gettext.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/gettext.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_LOCALE_PATH=\"/usr/local/share/locale\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/gettext.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/gettext.c.bc
 check
-echo "54 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/gettext.c to bc" >&2
+echo "54 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/gettext.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/gpg-interface.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/gpg-interface.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/gpg-interface.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/gpg-interface.c.bc
 check
-echo "55 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/gpg-interface.c to bc" >&2
+echo "55 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/gpg-interface.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/graph.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/graph.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/graph.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/graph.c.bc
 check
-echo "56 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/graph.c to bc" >&2
+echo "56 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/graph.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/grep.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/grep.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/grep.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/grep.c.bc
 check
-echo "57 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/grep.c to bc" >&2
+echo "57 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/grep.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/hashmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/hashmap.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/hashmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/hashmap.c.bc
 check
-echo "58 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/hashmap.c to bc" >&2
+echo "58 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/hashmap.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/help.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/help.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/help.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/help.c.bc
 check
-echo "59 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/help.c to bc" >&2
+echo "59 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/help.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/hex.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/hex.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/hex.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/hex.c.bc
 check
-echo "60 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/hex.c to bc" >&2
+echo "60 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/hex.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/ident.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/ident.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/ident.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/ident.c.bc
 check
-echo "61 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/ident.c to bc" >&2
+echo "61 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/ident.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/kwset.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/kwset.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/kwset.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/kwset.c.bc
 check
-echo "62 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/kwset.c to bc" >&2
+echo "62 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/kwset.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/levenshtein.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/levenshtein.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/levenshtein.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/levenshtein.c.bc
 check
-echo "63 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/levenshtein.c to bc" >&2
+echo "63 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/levenshtein.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/line-log.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/line-log.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/line-log.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/line-log.c.bc
 check
-echo "64 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/line-log.c to bc" >&2
+echo "64 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/line-log.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/line-range.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/line-range.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/line-range.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/line-range.c.bc
 check
-echo "65 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/line-range.c to bc" >&2
+echo "65 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/line-range.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/list-objects.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/list-objects.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/list-objects.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/list-objects.c.bc
 check
-echo "66 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/list-objects.c to bc" >&2
+echo "66 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/list-objects.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/ll-merge.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/ll-merge.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/ll-merge.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/ll-merge.c.bc
 check
-echo "67 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/ll-merge.c to bc" >&2
+echo "67 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/ll-merge.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/lockfile.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/lockfile.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/lockfile.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/lockfile.c.bc
 check
-echo "68 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/lockfile.c to bc" >&2
+echo "68 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/lockfile.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/log-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/log-tree.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/log-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/log-tree.c.bc
 check
-echo "69 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/log-tree.c to bc" >&2
+echo "69 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/log-tree.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/mailmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/mailmap.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/mailmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/mailmap.c.bc
 check
-echo "70 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/mailmap.c to bc" >&2
+echo "70 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/mailmap.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/match-trees.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/match-trees.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/match-trees.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/match-trees.c.bc
 check
-echo "71 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/match-trees.c to bc" >&2
+echo "71 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/match-trees.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/merge.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/merge.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/merge.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/merge.c.bc
 check
-echo "72 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/merge.c to bc" >&2
+echo "72 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/merge.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/merge-blobs.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/merge-blobs.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/merge-blobs.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/merge-blobs.c.bc
 check
-echo "73 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/merge-blobs.c to bc" >&2
+echo "73 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/merge-blobs.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/merge-recursive.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/merge-recursive.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/merge-recursive.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/merge-recursive.c.bc
 check
-echo "74 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/merge-recursive.c to bc" >&2
+echo "74 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/merge-recursive.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/mergesort.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/mergesort.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/mergesort.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/mergesort.c.bc
 check
-echo "75 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/mergesort.c to bc" >&2
+echo "75 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/mergesort.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/name-hash.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/name-hash.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/name-hash.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/name-hash.c.bc
 check
-echo "76 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/name-hash.c to bc" >&2
+echo "76 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/name-hash.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/notes.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/notes.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/notes.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/notes.c.bc
 check
-echo "77 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/notes.c to bc" >&2
+echo "77 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/notes.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/notes-cache.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/notes-cache.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/notes-cache.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/notes-cache.c.bc
 check
-echo "78 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/notes-cache.c to bc" >&2
+echo "78 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/notes-cache.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/notes-merge.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/notes-merge.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/notes-merge.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/notes-merge.c.bc
 check
-echo "79 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/notes-merge.c to bc" >&2
+echo "79 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/notes-merge.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/notes-utils.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/notes-utils.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/notes-utils.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/notes-utils.c.bc
 check
-echo "80 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/notes-utils.c to bc" >&2
+echo "80 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/notes-utils.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/object.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/object.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/object.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/object.c.bc
 check
-echo "81 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/object.c to bc" >&2
+echo "81 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/object.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pack-bitmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pack-bitmap.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pack-bitmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pack-bitmap.c.bc
 check
-echo "82 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pack-bitmap.c to bc" >&2
+echo "82 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pack-bitmap.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pack-bitmap-write.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pack-bitmap-write.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pack-bitmap-write.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pack-bitmap-write.c.bc
 check
-echo "83 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pack-bitmap-write.c to bc" >&2
+echo "83 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pack-bitmap-write.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pack-check.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pack-check.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pack-check.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pack-check.c.bc
 check
-echo "84 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pack-check.c to bc" >&2
+echo "84 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pack-check.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pack-objects.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pack-objects.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pack-objects.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pack-objects.c.bc
 check
-echo "85 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pack-objects.c to bc" >&2
+echo "85 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pack-objects.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pack-revindex.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pack-revindex.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pack-revindex.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pack-revindex.c.bc
 check
-echo "86 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pack-revindex.c to bc" >&2
+echo "86 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pack-revindex.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pack-write.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pack-write.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pack-write.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pack-write.c.bc
 check
-echo "87 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pack-write.c to bc" >&2
+echo "87 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pack-write.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pager.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pager.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pager.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pager.c.bc
 check
-echo "88 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pager.c to bc" >&2
+echo "88 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pager.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/parse-options.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/parse-options.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/parse-options.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/parse-options.c.bc
 check
-echo "89 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/parse-options.c to bc" >&2
+echo "89 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/parse-options.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/parse-options-cb.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/parse-options-cb.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/parse-options-cb.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/parse-options-cb.c.bc
 check
-echo "90 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/parse-options-cb.c to bc" >&2
+echo "90 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/parse-options-cb.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/patch-delta.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/patch-delta.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/patch-delta.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/patch-delta.c.bc
 check
-echo "91 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/patch-delta.c to bc" >&2
+echo "91 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/patch-delta.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/patch-ids.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/patch-ids.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/patch-ids.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/patch-ids.c.bc
 check
-echo "92 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/patch-ids.c to bc" >&2
+echo "92 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/patch-ids.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/path.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/path.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/path.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/path.c.bc
 check
-echo "93 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/path.c to bc" >&2
+echo "93 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/path.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pathspec.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pathspec.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pathspec.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pathspec.c.bc
 check
-echo "94 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pathspec.c to bc" >&2
+echo "94 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pathspec.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pkt-line.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pkt-line.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pkt-line.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pkt-line.c.bc
 check
-echo "95 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pkt-line.c to bc" >&2
+echo "95 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pkt-line.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/preload-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/preload-index.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/preload-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/preload-index.c.bc
 check
-echo "96 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/preload-index.c to bc" >&2
+echo "96 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/preload-index.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pretty.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pretty.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pretty.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pretty.c.bc
 check
-echo "97 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pretty.c to bc" >&2
+echo "97 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pretty.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/prio-queue.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/prio-queue.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/prio-queue.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/prio-queue.c.bc
 check
-echo "98 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/prio-queue.c to bc" >&2
+echo "98 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/prio-queue.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/progress.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/progress.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/progress.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/progress.c.bc
 check
-echo "99 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/progress.c to bc" >&2
+echo "99 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/progress.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/prompt.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/prompt.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/prompt.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/prompt.c.bc
 check
-echo "100 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/prompt.c to bc" >&2
+echo "100 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/prompt.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/quote.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/quote.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/quote.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/quote.c.bc
 check
-echo "101 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/quote.c to bc" >&2
+echo "101 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/quote.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/reachable.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/reachable.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/reachable.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/reachable.c.bc
 check
-echo "102 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/reachable.c to bc" >&2
+echo "102 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/reachable.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/read-cache.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/read-cache.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/read-cache.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/read-cache.c.bc
 check
-echo "103 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/read-cache.c to bc" >&2
+echo "103 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/read-cache.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/reflog-walk.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/reflog-walk.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/reflog-walk.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/reflog-walk.c.bc
 check
-echo "104 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/reflog-walk.c to bc" >&2
+echo "104 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/reflog-walk.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/refs.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/refs.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/refs.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/refs.c.bc
 check
-echo "105 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/refs.c to bc" >&2
+echo "105 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/refs.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/remote.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/remote.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/remote.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/remote.c.bc
 check
-echo "106 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/remote.c to bc" >&2
+echo "106 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/remote.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/replace_object.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/replace_object.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/replace_object.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/replace_object.c.bc
 check
-echo "107 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/replace_object.c to bc" >&2
+echo "107 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/replace_object.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/rerere.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/rerere.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/rerere.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/rerere.c.bc
 check
-echo "108 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/rerere.c to bc" >&2
+echo "108 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/rerere.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/resolve-undo.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/resolve-undo.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/resolve-undo.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/resolve-undo.c.bc
 check
-echo "109 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/resolve-undo.c to bc" >&2
+echo "109 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/resolve-undo.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/revision.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/revision.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/revision.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/revision.c.bc
 check
-echo "110 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/revision.c to bc" >&2
+echo "110 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/revision.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/run-command.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/run-command.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/run-command.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/run-command.c.bc
 check
-echo "111 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/run-command.c to bc" >&2
+echo "111 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/run-command.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/send-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/send-pack.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/send-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/send-pack.c.bc
 check
-echo "112 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/send-pack.c to bc" >&2
+echo "112 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/send-pack.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sequencer.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sequencer.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sequencer.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sequencer.c.bc
 check
-echo "113 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sequencer.c to bc" >&2
+echo "113 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sequencer.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/server-info.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/server-info.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/server-info.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/server-info.c.bc
 check
-echo "114 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/server-info.c to bc" >&2
+echo "114 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/server-info.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/setup.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/setup.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/setup.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/setup.c.bc
 check
-echo "115 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/setup.c to bc" >&2
+echo "115 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/setup.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sha1-array.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sha1-array.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sha1-array.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sha1-array.c.bc
 check
-echo "116 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sha1-array.c to bc" >&2
+echo "116 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sha1-array.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sha1-lookup.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sha1-lookup.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sha1-lookup.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sha1-lookup.c.bc
 check
-echo "117 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sha1-lookup.c to bc" >&2
+echo "117 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sha1-lookup.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sha1_file.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sha1_file.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sha1_file.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sha1_file.c.bc
 check
-echo "118 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sha1_file.c to bc" >&2
+echo "118 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sha1_file.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sha1_name.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sha1_name.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sha1_name.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sha1_name.c.bc
 check
-echo "119 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sha1_name.c to bc" >&2
+echo "119 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sha1_name.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/shallow.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/shallow.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/shallow.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/shallow.c.bc
 check
-echo "120 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/shallow.c to bc" >&2
+echo "120 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/shallow.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sideband.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sideband.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sideband.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sideband.c.bc
 check
-echo "121 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sideband.c to bc" >&2
+echo "121 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sideband.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sigchain.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sigchain.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sigchain.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sigchain.c.bc
 check
-echo "122 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sigchain.c to bc" >&2
+echo "122 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sigchain.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/split-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/split-index.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/split-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/split-index.c.bc
 check
-echo "123 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/split-index.c to bc" >&2
+echo "123 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/split-index.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/strbuf.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/strbuf.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/strbuf.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/strbuf.c.bc
 check
-echo "124 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/strbuf.c to bc" >&2
+echo "124 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/strbuf.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/streaming.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/streaming.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/streaming.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/streaming.c.bc
 check
-echo "125 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/streaming.c to bc" >&2
+echo "125 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/streaming.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/string-list.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/string-list.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/string-list.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/string-list.c.bc
 check
-echo "126 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/string-list.c to bc" >&2
+echo "126 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/string-list.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/submodule.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/submodule.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/submodule.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/submodule.c.bc
 check
-echo "127 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/submodule.c to bc" >&2
+echo "127 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/submodule.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/symlinks.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/symlinks.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/symlinks.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/symlinks.c.bc
 check
-echo "128 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/symlinks.c to bc" >&2
+echo "128 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/symlinks.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/tag.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/tag.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/tag.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/tag.c.bc
 check
-echo "129 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/tag.c to bc" >&2
+echo "129 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/tag.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/trace.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/trace.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/trace.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/trace.c.bc
 check
-echo "130 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/trace.c to bc" >&2
+echo "130 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/trace.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/trailer.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/trailer.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/trailer.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/trailer.c.bc
 check
-echo "131 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/trailer.c to bc" >&2
+echo "131 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/trailer.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/transport.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/transport.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/transport.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/transport.c.bc
 check
-echo "132 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/transport.c to bc" >&2
+echo "132 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/transport.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/transport-helper.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/transport-helper.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/transport-helper.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/transport-helper.c.bc
 check
-echo "133 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/transport-helper.c to bc" >&2
+echo "133 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/transport-helper.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/tree-diff.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/tree-diff.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/tree-diff.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/tree-diff.c.bc
 check
-echo "134 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/tree-diff.c to bc" >&2
+echo "134 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/tree-diff.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/tree.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/tree.c.bc
 check
-echo "135 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/tree.c to bc" >&2
+echo "135 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/tree.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/tree-walk.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/tree-walk.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/tree-walk.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/tree-walk.c.bc
 check
-echo "136 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/tree-walk.c to bc" >&2
+echo "136 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/tree-walk.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/unpack-trees.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/unpack-trees.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/unpack-trees.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/unpack-trees.c.bc
 check
-echo "137 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/unpack-trees.c to bc" >&2
+echo "137 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/unpack-trees.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/url.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/url.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/url.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/url.c.bc
 check
-echo "138 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/url.c to bc" >&2
+echo "138 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/url.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/urlmatch.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/urlmatch.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/urlmatch.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/urlmatch.c.bc
 check
-echo "139 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/urlmatch.c to bc" >&2
+echo "139 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/urlmatch.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/usage.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/usage.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/usage.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/usage.c.bc
 check
-echo "140 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/usage.c to bc" >&2
+echo "140 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/usage.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/userdiff.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/userdiff.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/userdiff.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/userdiff.c.bc
 check
-echo "141 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/userdiff.c to bc" >&2
+echo "141 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/userdiff.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/utf8.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/utf8.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/utf8.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/utf8.c.bc
 check
-echo "142 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/utf8.c to bc" >&2
+echo "142 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/utf8.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/varint.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/varint.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/varint.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/varint.c.bc
 check
-echo "143 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/varint.c to bc" >&2
+echo "143 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/varint.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_VERSION=\"2.2.3\" -DGIT_USER_AGENT=\"git/2.2.3\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/version.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/version.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_VERSION=\"2.3.0\" -DGIT_USER_AGENT=\"git/2.3.0\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/version.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/version.c.bc
 check
-echo "144 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/version.c to bc" >&2
+echo "144 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/version.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/versioncmp.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/versioncmp.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/versioncmp.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/versioncmp.c.bc
 check
-echo "145 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/versioncmp.c to bc" >&2
+echo "145 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/versioncmp.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/walker.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/walker.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/walker.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/walker.c.bc
 check
-echo "146 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/walker.c to bc" >&2
+echo "146 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/walker.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/wildmatch.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/wildmatch.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/wildmatch.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/wildmatch.c.bc
 check
-echo "147 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/wildmatch.c to bc" >&2
+echo "147 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/wildmatch.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/wrapper.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/wrapper.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/wrapper.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/wrapper.c.bc
 check
-echo "148 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/wrapper.c to bc" >&2
+echo "148 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/wrapper.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/write_or_die.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/write_or_die.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/write_or_die.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/write_or_die.c.bc
 check
-echo "149 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/write_or_die.c to bc" >&2
+echo "149 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/write_or_die.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/ws.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/ws.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/ws.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/ws.c.bc
 check
-echo "150 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/ws.c to bc" >&2
+echo "150 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/ws.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/wt-status.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/wt-status.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/wt-status.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/wt-status.c.bc
 check
-echo "151 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/wt-status.c to bc" >&2
+echo "151 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/wt-status.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/xdiff-interface.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/xdiff-interface.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/xdiff-interface.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/xdiff-interface.c.bc
 check
-echo "152 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/xdiff-interface.c to bc" >&2
+echo "152 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/xdiff-interface.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/zlib.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/zlib.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/zlib.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/zlib.c.bc
 check
-echo "153 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/zlib.c to bc" >&2
+echo "153 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/zlib.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/unix-socket.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/unix-socket.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/unix-socket.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/unix-socket.c.bc
 check
-echo "154 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/unix-socket.c to bc" >&2
+echo "154 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/unix-socket.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/block-sha1/sha1.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/block-sha1/sha1.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/block-sha1/sha1.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/block-sha1/sha1.c.bc
 check
-echo "155 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/block-sha1/sha1.c to bc" >&2
+echo "155 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/block-sha1/sha1.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/thread-utils.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/thread-utils.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/thread-utils.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/thread-utils.c.bc
 check
-echo "156 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/thread-utils.c to bc" >&2
+echo "156 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/thread-utils.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/compat/strlcpy.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/compat/strlcpy.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/compat/strlcpy.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/compat/strlcpy.c.bc
 check
-echo "157 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/compat/strlcpy.c to bc" >&2
+echo "157 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/compat/strlcpy.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/xdiff/xdiffi.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/xdiff/xdiffi.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/xdiff/xdiffi.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/xdiff/xdiffi.c.bc
 check
-echo "158 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/xdiff/xdiffi.c to bc" >&2
+echo "158 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/xdiff/xdiffi.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/xdiff/xprepare.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/xdiff/xprepare.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/xdiff/xprepare.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/xdiff/xprepare.c.bc
 check
-echo "159 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/xdiff/xprepare.c to bc" >&2
+echo "159 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/xdiff/xprepare.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/xdiff/xutils.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/xdiff/xutils.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/xdiff/xutils.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/xdiff/xutils.c.bc
 check
-echo "160 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/xdiff/xutils.c to bc" >&2
+echo "160 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/xdiff/xutils.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/xdiff/xemit.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/xdiff/xemit.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/xdiff/xemit.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/xdiff/xemit.c.bc
 check
-echo "161 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/xdiff/xemit.c to bc" >&2
+echo "161 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/xdiff/xemit.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/xdiff/xmerge.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/xdiff/xmerge.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/xdiff/xmerge.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/xdiff/xmerge.c.bc
 check
-echo "162 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/xdiff/xmerge.c to bc" >&2
+echo "162 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/xdiff/xmerge.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/xdiff/xpatience.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/xdiff/xpatience.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/xdiff/xpatience.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/xdiff/xpatience.c.bc
 check
-echo "163 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/xdiff/xpatience.c to bc" >&2
+echo "163 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/xdiff/xpatience.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/xdiff/xhistogram.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/xdiff/xhistogram.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/xdiff/xhistogram.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/xdiff/xhistogram.c.bc
 check
-echo "164 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/xdiff/xhistogram.c to bc" >&2
+echo "164 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/xdiff/xhistogram.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/daemon.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/daemon.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/daemon.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/daemon.c.bc
 check
-echo "165 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/daemon.c to bc" >&2
+echo "165 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/daemon.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/fast-import.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/fast-import.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/fast-import.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/fast-import.c.bc
 check
-echo "166 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/fast-import.c to bc" >&2
+echo "166 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/fast-import.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/http-backend.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/http-backend.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/http-backend.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/http-backend.c.bc
 check
-echo "167 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/http-backend.c to bc" >&2
+echo "167 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/http-backend.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/imap-send.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/imap-send.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/imap-send.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/imap-send.c.bc
 check
-echo "168 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/imap-send.c to bc" >&2
+echo "168 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/imap-send.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sh-i18n--envsubst.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sh-i18n--envsubst.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sh-i18n--envsubst.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sh-i18n--envsubst.c.bc
 check
-echo "169 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sh-i18n--envsubst.c to bc" >&2
+echo "169 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sh-i18n--envsubst.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/shell.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/shell.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/shell.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/shell.c.bc
 check
-echo "170 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/shell.c to bc" >&2
+echo "170 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/shell.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/show-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/show-index.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/show-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/show-index.c.bc
 check
-echo "171 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/show-index.c to bc" >&2
+echo "171 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/show-index.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/upload-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/upload-pack.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/upload-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/upload-pack.c.bc
 check
-echo "172 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/upload-pack.c to bc" >&2
+echo "172 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/upload-pack.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/remote-testsvn.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/remote-testsvn.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/remote-testsvn.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/remote-testsvn.c.bc
 check
-echo "173 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/remote-testsvn.c to bc" >&2
+echo "173 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/remote-testsvn.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/vcs-svn/line_buffer.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/vcs-svn/line_buffer.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/vcs-svn/line_buffer.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/vcs-svn/line_buffer.c.bc
 check
-echo "174 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/vcs-svn/line_buffer.c to bc" >&2
+echo "174 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/vcs-svn/line_buffer.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/vcs-svn/sliding_window.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/vcs-svn/sliding_window.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/vcs-svn/sliding_window.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/vcs-svn/sliding_window.c.bc
 check
-echo "175 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/vcs-svn/sliding_window.c to bc" >&2
+echo "175 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/vcs-svn/sliding_window.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/vcs-svn/repo_tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/vcs-svn/repo_tree.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/vcs-svn/repo_tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/vcs-svn/repo_tree.c.bc
 check
-echo "176 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/vcs-svn/repo_tree.c to bc" >&2
+echo "176 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/vcs-svn/repo_tree.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/vcs-svn/fast_export.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/vcs-svn/fast_export.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/vcs-svn/fast_export.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/vcs-svn/fast_export.c.bc
 check
-echo "177 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/vcs-svn/fast_export.c to bc" >&2
+echo "177 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/vcs-svn/fast_export.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/vcs-svn/svndiff.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/vcs-svn/svndiff.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/vcs-svn/svndiff.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/vcs-svn/svndiff.c.bc
 check
-echo "178 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/vcs-svn/svndiff.c to bc" >&2
+echo "178 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/vcs-svn/svndiff.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/vcs-svn/svndump.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/vcs-svn/svndump.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/vcs-svn/svndump.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/vcs-svn/svndump.c.bc
 check
-echo "179 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/vcs-svn/svndump.c to bc" >&2
+echo "179 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/vcs-svn/svndump.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/credential-cache.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/credential-cache.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/credential-cache.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/credential-cache.c.bc
 check
-echo "180 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/credential-cache.c to bc" >&2
+echo "180 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/credential-cache.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/credential-cache--daemon.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/credential-cache--daemon.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/credential-cache--daemon.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/credential-cache--daemon.c.bc
 check
-echo "181 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/credential-cache--daemon.c to bc" >&2
+echo "181 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/credential-cache--daemon.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_HTML_PATH=\"share/doc/git\" -DGIT_MAN_PATH=\"share/man\" -DGIT_INFO_PATH=\"share/info\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_HTML_PATH=\"share/doc/git\" -DGIT_MAN_PATH=\"share/man\" -DGIT_INFO_PATH=\"share/info\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git.c.bc
 check
-echo "182 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git.c to bc" >&2
+echo "182 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/add.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/add.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/add.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/add.c.bc
 check
-echo "183 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/add.c to bc" >&2
+echo "183 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/add.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/annotate.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/annotate.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/annotate.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/annotate.c.bc
 check
-echo "184 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/annotate.c to bc" >&2
+echo "184 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/annotate.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/apply.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/apply.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/apply.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/apply.c.bc
 check
-echo "185 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/apply.c to bc" >&2
+echo "185 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/apply.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/archive.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/archive.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/archive.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/archive.c.bc
 check
-echo "186 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/archive.c to bc" >&2
+echo "186 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/archive.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/bisect--helper.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/bisect--helper.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/bisect--helper.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/bisect--helper.c.bc
 check
-echo "187 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/bisect--helper.c to bc" >&2
+echo "187 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/bisect--helper.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/blame.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/blame.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/blame.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/blame.c.bc
 check
-echo "188 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/blame.c to bc" >&2
+echo "188 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/blame.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/branch.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/branch.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/branch.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/branch.c.bc
 check
-echo "189 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/branch.c to bc" >&2
+echo "189 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/branch.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/bundle.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/bundle.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/bundle.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/bundle.c.bc
 check
-echo "190 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/bundle.c to bc" >&2
+echo "190 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/bundle.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/cat-file.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/cat-file.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/cat-file.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/cat-file.c.bc
 check
-echo "191 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/cat-file.c to bc" >&2
+echo "191 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/cat-file.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/check-attr.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/check-attr.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/check-attr.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/check-attr.c.bc
 check
-echo "192 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/check-attr.c to bc" >&2
+echo "192 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/check-attr.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/check-ignore.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/check-ignore.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/check-ignore.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/check-ignore.c.bc
 check
-echo "193 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/check-ignore.c to bc" >&2
+echo "193 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/check-ignore.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/check-mailmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/check-mailmap.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/check-mailmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/check-mailmap.c.bc
 check
-echo "194 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/check-mailmap.c to bc" >&2
+echo "194 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/check-mailmap.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/check-ref-format.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/check-ref-format.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/check-ref-format.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/check-ref-format.c.bc
 check
-echo "195 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/check-ref-format.c to bc" >&2
+echo "195 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/check-ref-format.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/checkout-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/checkout-index.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/checkout-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/checkout-index.c.bc
 check
-echo "196 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/checkout-index.c to bc" >&2
+echo "196 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/checkout-index.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/checkout.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/checkout.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/checkout.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/checkout.c.bc
 check
-echo "197 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/checkout.c to bc" >&2
+echo "197 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/checkout.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/clean.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/clean.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/clean.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/clean.c.bc
 check
-echo "198 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/clean.c to bc" >&2
+echo "198 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/clean.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/clone.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/clone.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/clone.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/clone.c.bc
 check
-echo "199 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/clone.c to bc" >&2
+echo "199 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/clone.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/column.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/column.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/column.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/column.c.bc
 check
-echo "200 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/column.c to bc" >&2
+echo "200 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/column.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/commit-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/commit-tree.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/commit-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/commit-tree.c.bc
 check
-echo "201 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/commit-tree.c to bc" >&2
+echo "201 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/commit-tree.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/commit.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/commit.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/commit.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/commit.c.bc
 check
-echo "202 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/commit.c to bc" >&2
+echo "202 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/commit.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/config.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/config.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/config.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/config.c.bc
 check
-echo "203 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/config.c to bc" >&2
+echo "203 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/config.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/count-objects.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/count-objects.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/count-objects.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/count-objects.c.bc
 check
-echo "204 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/count-objects.c to bc" >&2
+echo "204 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/count-objects.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/credential.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/credential.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/credential.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/credential.c.bc
 check
-echo "205 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/credential.c to bc" >&2
+echo "205 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/credential.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/describe.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/describe.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/describe.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/describe.c.bc
 check
-echo "206 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/describe.c to bc" >&2
+echo "206 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/describe.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/diff-files.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/diff-files.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/diff-files.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/diff-files.c.bc
 check
-echo "207 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/diff-files.c to bc" >&2
+echo "207 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/diff-files.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/diff-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/diff-index.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/diff-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/diff-index.c.bc
 check
-echo "208 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/diff-index.c to bc" >&2
+echo "208 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/diff-index.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/diff-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/diff-tree.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/diff-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/diff-tree.c.bc
 check
-echo "209 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/diff-tree.c to bc" >&2
+echo "209 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/diff-tree.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/diff.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/diff.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/diff.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/diff.c.bc
 check
-echo "210 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/diff.c to bc" >&2
+echo "210 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/diff.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/fast-export.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/fast-export.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/fast-export.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/fast-export.c.bc
 check
-echo "211 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/fast-export.c to bc" >&2
+echo "211 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/fast-export.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/fetch-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/fetch-pack.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/fetch-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/fetch-pack.c.bc
 check
-echo "212 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/fetch-pack.c to bc" >&2
+echo "212 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/fetch-pack.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/fetch.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/fetch.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/fetch.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/fetch.c.bc
 check
-echo "213 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/fetch.c to bc" >&2
+echo "213 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/fetch.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/fmt-merge-msg.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/fmt-merge-msg.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/fmt-merge-msg.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/fmt-merge-msg.c.bc
 check
-echo "214 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/fmt-merge-msg.c to bc" >&2
+echo "214 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/fmt-merge-msg.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/for-each-ref.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/for-each-ref.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/for-each-ref.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/for-each-ref.c.bc
 check
-echo "215 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/for-each-ref.c to bc" >&2
+echo "215 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/for-each-ref.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/fsck.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/fsck.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/fsck.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/fsck.c.bc
 check
-echo "216 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/fsck.c to bc" >&2
+echo "216 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/fsck.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/gc.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/gc.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/gc.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/gc.c.bc
 check
-echo "217 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/gc.c to bc" >&2
+echo "217 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/gc.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/get-tar-commit-id.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/get-tar-commit-id.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/get-tar-commit-id.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/get-tar-commit-id.c.bc
 check
-echo "218 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/get-tar-commit-id.c to bc" >&2
+echo "218 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/get-tar-commit-id.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/grep.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/grep.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/grep.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/grep.c.bc
 check
-echo "219 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/grep.c to bc" >&2
+echo "219 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/grep.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/hash-object.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/hash-object.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/hash-object.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/hash-object.c.bc
 check
-echo "220 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/hash-object.c to bc" >&2
+echo "220 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/hash-object.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_HTML_PATH=\"share/doc/git\" -DGIT_MAN_PATH=\"share/man\" -DGIT_INFO_PATH=\"share/info\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/help.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/help.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_HTML_PATH=\"share/doc/git\" -DGIT_MAN_PATH=\"share/man\" -DGIT_INFO_PATH=\"share/info\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/help.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/help.c.bc
 check
-echo "221 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/help.c to bc" >&2
+echo "221 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/help.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/index-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/index-pack.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/index-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/index-pack.c.bc
 check
-echo "222 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/index-pack.c to bc" >&2
+echo "222 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/index-pack.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DDEFAULT_GIT_TEMPLATE_DIR=\"/usr/local/share/git-core/templates\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/init-db.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/init-db.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DDEFAULT_GIT_TEMPLATE_DIR=\"/usr/local/share/git-core/templates\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/init-db.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/init-db.c.bc
 check
-echo "223 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/init-db.c to bc" >&2
+echo "223 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/init-db.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/interpret-trailers.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/interpret-trailers.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/interpret-trailers.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/interpret-trailers.c.bc
 check
-echo "224 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/interpret-trailers.c to bc" >&2
+echo "224 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/interpret-trailers.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/log.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/log.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/log.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/log.c.bc
 check
-echo "225 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/log.c to bc" >&2
+echo "225 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/log.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/ls-files.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/ls-files.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/ls-files.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/ls-files.c.bc
 check
-echo "226 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/ls-files.c to bc" >&2
+echo "226 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/ls-files.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/ls-remote.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/ls-remote.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/ls-remote.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/ls-remote.c.bc
 check
-echo "227 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/ls-remote.c to bc" >&2
+echo "227 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/ls-remote.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/ls-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/ls-tree.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/ls-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/ls-tree.c.bc
 check
-echo "228 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/ls-tree.c to bc" >&2
+echo "228 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/ls-tree.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/mailinfo.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/mailinfo.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/mailinfo.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/mailinfo.c.bc
 check
-echo "229 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/mailinfo.c to bc" >&2
+echo "229 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/mailinfo.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/mailsplit.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/mailsplit.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/mailsplit.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/mailsplit.c.bc
 check
-echo "230 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/mailsplit.c to bc" >&2
+echo "230 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/mailsplit.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/merge.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/merge.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/merge.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/merge.c.bc
 check
-echo "231 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/merge.c to bc" >&2
+echo "231 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/merge.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/merge-base.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/merge-base.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/merge-base.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/merge-base.c.bc
 check
-echo "232 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/merge-base.c to bc" >&2
+echo "232 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/merge-base.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/merge-file.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/merge-file.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/merge-file.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/merge-file.c.bc
 check
-echo "233 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/merge-file.c to bc" >&2
+echo "233 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/merge-file.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/merge-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/merge-index.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/merge-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/merge-index.c.bc
 check
-echo "234 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/merge-index.c to bc" >&2
+echo "234 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/merge-index.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/merge-ours.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/merge-ours.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/merge-ours.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/merge-ours.c.bc
 check
-echo "235 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/merge-ours.c to bc" >&2
+echo "235 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/merge-ours.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/merge-recursive.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/merge-recursive.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/merge-recursive.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/merge-recursive.c.bc
 check
-echo "236 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/merge-recursive.c to bc" >&2
+echo "236 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/merge-recursive.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/merge-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/merge-tree.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/merge-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/merge-tree.c.bc
 check
-echo "237 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/merge-tree.c to bc" >&2
+echo "237 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/merge-tree.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/mktag.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/mktag.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/mktag.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/mktag.c.bc
 check
-echo "238 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/mktag.c to bc" >&2
+echo "238 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/mktag.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/mktree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/mktree.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/mktree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/mktree.c.bc
 check
-echo "239 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/mktree.c to bc" >&2
+echo "239 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/mktree.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/mv.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/mv.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/mv.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/mv.c.bc
 check
-echo "240 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/mv.c to bc" >&2
+echo "240 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/mv.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/name-rev.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/name-rev.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/name-rev.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/name-rev.c.bc
 check
-echo "241 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/name-rev.c to bc" >&2
+echo "241 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/name-rev.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/notes.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/notes.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/notes.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/notes.c.bc
 check
-echo "242 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/notes.c to bc" >&2
+echo "242 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/notes.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/pack-objects.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/pack-objects.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/pack-objects.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/pack-objects.c.bc
 check
-echo "243 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/pack-objects.c to bc" >&2
+echo "243 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/pack-objects.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/pack-redundant.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/pack-redundant.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/pack-redundant.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/pack-redundant.c.bc
 check
-echo "244 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/pack-redundant.c to bc" >&2
+echo "244 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/pack-redundant.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/pack-refs.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/pack-refs.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/pack-refs.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/pack-refs.c.bc
 check
-echo "245 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/pack-refs.c to bc" >&2
+echo "245 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/pack-refs.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/patch-id.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/patch-id.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/patch-id.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/patch-id.c.bc
 check
-echo "246 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/patch-id.c to bc" >&2
+echo "246 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/patch-id.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/prune-packed.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/prune-packed.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/prune-packed.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/prune-packed.c.bc
 check
-echo "247 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/prune-packed.c to bc" >&2
+echo "247 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/prune-packed.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/prune.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/prune.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/prune.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/prune.c.bc
 check
-echo "248 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/prune.c to bc" >&2
+echo "248 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/prune.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/push.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/push.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/push.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/push.c.bc
 check
-echo "249 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/push.c to bc" >&2
+echo "249 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/push.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/read-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/read-tree.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/read-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/read-tree.c.bc
 check
-echo "250 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/read-tree.c to bc" >&2
+echo "250 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/read-tree.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/receive-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/receive-pack.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/receive-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/receive-pack.c.bc
 check
-echo "251 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/receive-pack.c to bc" >&2
+echo "251 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/receive-pack.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/reflog.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/reflog.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/reflog.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/reflog.c.bc
 check
-echo "252 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/reflog.c to bc" >&2
+echo "252 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/reflog.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/remote.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/remote.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/remote.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/remote.c.bc
 check
-echo "253 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/remote.c to bc" >&2
+echo "253 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/remote.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/remote-ext.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/remote-ext.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/remote-ext.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/remote-ext.c.bc
 check
-echo "254 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/remote-ext.c to bc" >&2
+echo "254 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/remote-ext.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/remote-fd.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/remote-fd.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/remote-fd.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/remote-fd.c.bc
 check
-echo "255 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/remote-fd.c to bc" >&2
+echo "255 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/remote-fd.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/repack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/repack.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/repack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/repack.c.bc
 check
-echo "256 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/repack.c to bc" >&2
+echo "256 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/repack.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/replace.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/replace.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/replace.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/replace.c.bc
 check
-echo "257 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/replace.c to bc" >&2
+echo "257 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/replace.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/rerere.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/rerere.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/rerere.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/rerere.c.bc
 check
-echo "258 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/rerere.c to bc" >&2
+echo "258 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/rerere.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/reset.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/reset.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/reset.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/reset.c.bc
 check
-echo "259 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/reset.c to bc" >&2
+echo "259 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/reset.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/rev-list.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/rev-list.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/rev-list.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/rev-list.c.bc
 check
-echo "260 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/rev-list.c to bc" >&2
+echo "260 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/rev-list.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/rev-parse.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/rev-parse.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/rev-parse.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/rev-parse.c.bc
 check
-echo "261 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/rev-parse.c to bc" >&2
+echo "261 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/rev-parse.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/revert.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/revert.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/revert.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/revert.c.bc
 check
-echo "262 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/revert.c to bc" >&2
+echo "262 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/revert.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/rm.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/rm.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/rm.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/rm.c.bc
 check
-echo "263 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/rm.c to bc" >&2
+echo "263 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/rm.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/send-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/send-pack.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/send-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/send-pack.c.bc
 check
-echo "264 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/send-pack.c to bc" >&2
+echo "264 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/send-pack.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/shortlog.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/shortlog.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/shortlog.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/shortlog.c.bc
 check
-echo "265 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/shortlog.c to bc" >&2
+echo "265 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/shortlog.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/show-branch.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/show-branch.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/show-branch.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/show-branch.c.bc
 check
-echo "266 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/show-branch.c to bc" >&2
+echo "266 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/show-branch.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/show-ref.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/show-ref.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/show-ref.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/show-ref.c.bc
 check
-echo "267 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/show-ref.c to bc" >&2
+echo "267 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/show-ref.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/stripspace.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/stripspace.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/stripspace.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/stripspace.c.bc
 check
-echo "268 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/stripspace.c to bc" >&2
+echo "268 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/stripspace.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/symbolic-ref.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/symbolic-ref.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/symbolic-ref.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/symbolic-ref.c.bc
 check
-echo "269 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/symbolic-ref.c to bc" >&2
+echo "269 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/symbolic-ref.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/tag.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/tag.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/tag.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/tag.c.bc
 check
-echo "270 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/tag.c to bc" >&2
+echo "270 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/tag.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/unpack-file.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/unpack-file.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/unpack-file.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/unpack-file.c.bc
 check
-echo "271 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/unpack-file.c to bc" >&2
+echo "271 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/unpack-file.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/unpack-objects.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/unpack-objects.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/unpack-objects.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/unpack-objects.c.bc
 check
-echo "272 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/unpack-objects.c to bc" >&2
+echo "272 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/unpack-objects.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/update-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/update-index.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/update-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/update-index.c.bc
 check
-echo "273 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/update-index.c to bc" >&2
+echo "273 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/update-index.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/update-ref.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/update-ref.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/update-ref.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/update-ref.c.bc
 check
-echo "274 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/update-ref.c to bc" >&2
+echo "274 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/update-ref.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/update-server-info.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/update-server-info.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/update-server-info.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/update-server-info.c.bc
 check
-echo "275 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/update-server-info.c to bc" >&2
+echo "275 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/update-server-info.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/upload-archive.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/upload-archive.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/upload-archive.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/upload-archive.c.bc
 check
-echo "276 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/upload-archive.c to bc" >&2
+echo "276 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/upload-archive.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/var.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/var.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/var.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/var.c.bc
 check
-echo "277 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/var.c to bc" >&2
+echo "277 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/var.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/verify-commit.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/verify-commit.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/verify-commit.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/verify-commit.c.bc
 check
-echo "278 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/verify-commit.c to bc" >&2
+echo "278 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/verify-commit.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/verify-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/verify-pack.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/verify-pack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/verify-pack.c.bc
 check
-echo "279 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/verify-pack.c to bc" >&2
+echo "279 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/verify-pack.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/verify-tag.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/verify-tag.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/verify-tag.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/verify-tag.c.bc
 check
-echo "280 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/verify-tag.c to bc" >&2
+echo "280 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/verify-tag.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/write-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/write-tree.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/write-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/write-tree.c.bc
 check
-echo "281 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/write-tree.c to bc" >&2
+echo "281 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/write-tree.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-chmtime.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-chmtime.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-chmtime.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-chmtime.c.bc
 check
-echo "282 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-chmtime.c to bc" >&2
+echo "282 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-chmtime.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-ctype.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-ctype.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-ctype.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-ctype.c.bc
 check
-echo "283 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-ctype.c to bc" >&2
+echo "283 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-ctype.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-config.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-config.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-config.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-config.c.bc
 check
-echo "284 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-config.c to bc" >&2
+echo "284 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-config.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-date.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-date.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-date.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-date.c.bc
 check
-echo "285 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-date.c to bc" >&2
+echo "285 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-date.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-delta.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-delta.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-delta.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-delta.c.bc
 check
-echo "286 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-delta.c to bc" >&2
+echo "286 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-delta.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-dump-cache-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-dump-cache-tree.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-dump-cache-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-dump-cache-tree.c.bc
 check
-echo "287 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-dump-cache-tree.c to bc" >&2
+echo "287 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-dump-cache-tree.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-dump-split-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-dump-split-index.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-dump-split-index.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-dump-split-index.c.bc
 check
-echo "288 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-dump-split-index.c to bc" >&2
+echo "288 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-dump-split-index.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-genrandom.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-genrandom.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-genrandom.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-genrandom.c.bc
 check
-echo "289 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-genrandom.c to bc" >&2
+echo "289 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-genrandom.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-hashmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-hashmap.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-hashmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-hashmap.c.bc
 check
-echo "290 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-hashmap.c to bc" >&2
+echo "290 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-hashmap.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-index-version.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-index-version.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-index-version.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-index-version.c.bc
 check
-echo "291 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-index-version.c to bc" >&2
+echo "291 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-index-version.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-line-buffer.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-line-buffer.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-line-buffer.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-line-buffer.c.bc
 check
-echo "292 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-line-buffer.c to bc" >&2
+echo "292 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-line-buffer.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-match-trees.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-match-trees.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-match-trees.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-match-trees.c.bc
 check
-echo "293 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-match-trees.c to bc" >&2
+echo "293 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-match-trees.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-mergesort.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-mergesort.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-mergesort.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-mergesort.c.bc
 check
-echo "294 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-mergesort.c to bc" >&2
+echo "294 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-mergesort.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-mktemp.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-mktemp.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-mktemp.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-mktemp.c.bc
 check
-echo "295 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-mktemp.c to bc" >&2
+echo "295 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-mktemp.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-parse-options.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-parse-options.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-parse-options.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-parse-options.c.bc
 check
-echo "296 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-parse-options.c to bc" >&2
+echo "296 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-parse-options.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-path-utils.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-path-utils.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-path-utils.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-path-utils.c.bc
 check
-echo "297 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-path-utils.c to bc" >&2
+echo "297 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-path-utils.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-prio-queue.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-prio-queue.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-prio-queue.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-prio-queue.c.bc
 check
-echo "298 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-prio-queue.c to bc" >&2
+echo "298 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-prio-queue.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-read-cache.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-read-cache.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-read-cache.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-read-cache.c.bc
 check
-echo "299 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-read-cache.c to bc" >&2
+echo "299 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-read-cache.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-regex.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-regex.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-regex.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-regex.c.bc
 check
-echo "300 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-regex.c to bc" >&2
+echo "300 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-regex.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-revision-walking.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-revision-walking.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-revision-walking.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-revision-walking.c.bc
 check
-echo "301 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-revision-walking.c to bc" >&2
+echo "301 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-revision-walking.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-run-command.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-run-command.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-run-command.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-run-command.c.bc
 check
-echo "302 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-run-command.c to bc" >&2
+echo "302 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-run-command.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-scrap-cache-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-scrap-cache-tree.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-scrap-cache-tree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-scrap-cache-tree.c.bc
 check
-echo "303 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-scrap-cache-tree.c to bc" >&2
+echo "303 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-scrap-cache-tree.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-sha1.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-sha1.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-sha1.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-sha1.c.bc
 check
-echo "304 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-sha1.c to bc" >&2
+echo "304 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-sha1.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-sha1-array.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-sha1-array.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-sha1-array.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-sha1-array.c.bc
 check
-echo "305 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-sha1-array.c to bc" >&2
+echo "305 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-sha1-array.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-sigchain.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-sigchain.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-sigchain.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-sigchain.c.bc
 check
-echo "306 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-sigchain.c to bc" >&2
+echo "306 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-sigchain.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-string-list.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-string-list.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-string-list.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-string-list.c.bc
 check
-echo "307 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-string-list.c to bc" >&2
+echo "307 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-string-list.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-subprocess.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-subprocess.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-subprocess.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-subprocess.c.bc
 check
-echo "308 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-subprocess.c to bc" >&2
+echo "308 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-subprocess.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-svn-fe.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-svn-fe.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-svn-fe.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-svn-fe.c.bc
 check
-echo "309 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-svn-fe.c to bc" >&2
+echo "309 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-svn-fe.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-urlmatch-normalization.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-urlmatch-normalization.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-urlmatch-normalization.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-urlmatch-normalization.c.bc
 check
-echo "310 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-urlmatch-normalization.c to bc" >&2
+echo "310 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-urlmatch-normalization.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3
-clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-wildmatch.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-wildmatch.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0
+clang -g -emit-llvm -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-wildmatch.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-wildmatch.c.bc
 check
-echo "311 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-wildmatch.c to bc" >&2
+echo "311 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-wildmatch.c to bc" >&2
 echo "Total ir $total" >&2
 echo "Succ ir $succ" >&2
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/add.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/add.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/add.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/add.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/annotate.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/annotate.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/annotate.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/annotate.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/apply.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/apply.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/apply.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/apply.c	2015-02-06 05:40:08.000000000 +0800
@@ -3725,13 +3725,13 @@
 			continue;
 
 		if (S_ISGITLINK(patch->old_mode)) {
 			if (!preimage_sha1_in_gitlink_patch(patch, sha1))
 				; /* ok, the textual part looks sane */
 			else
-				die("sha1 information is lacking or useless for submoule %s",
+				die("sha1 information is lacking or useless for submodule %s",
 				    name);
 		} else if (!get_sha1_blob(patch->old_sha1_prefix, sha1)) {
 			; /* ok */
 		} else if (!patch->lines_added && !patch->lines_deleted) {
 			/* mode-only change: update the current */
 			if (get_current_sha1(patch->old_name, sha1))
@@ -4177,13 +4177,13 @@
 		}
 	}
 
 	if (cpath.nr) {
 		struct string_list_item *item;
 
-		sort_string_list(&cpath);
+		string_list_sort(&cpath);
 		for_each_string_list_item(item, &cpath)
 			fprintf(stderr, "U %s\n", item->string);
 		string_list_clear(&cpath, 0);
 
 		rerere(0);
 	}
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/apply.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/apply.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/apply.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/apply.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/archive.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/archive.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/archive.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/archive.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/bisect--helper.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/bisect--helper.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/bisect--helper.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/bisect--helper.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/blame.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/blame.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/blame.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/blame.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/branch.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/branch.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/branch.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/branch.c	2015-02-06 05:40:08.000000000 +0800
@@ -797,13 +797,13 @@
 
 	return status;
 }
 
 int cmd_branch(int argc, const char **argv, const char *prefix)
 {
-	int delete = 0, rename = 0, force_create = 0, list = 0;
+	int delete = 0, rename = 0, force = 0, list = 0;
 	int verbose = 0, abbrev = -1, detached = 0;
 	int reflog = 0, edit_description = 0;
 	int quiet = 0, unset_upstream = 0;
 	const char *new_upstream = NULL;
 	enum branch_track track;
 	int kinds = REF_LOCAL_BRANCH;
@@ -845,13 +845,13 @@
 		OPT_BIT('m', "move", &rename, N_("move/rename a branch and its reflog"), 1),
 		OPT_BIT('M', NULL, &rename, N_("move/rename a branch, even if target exists"), 2),
 		OPT_BOOL(0, "list", &list, N_("list branch names")),
 		OPT_BOOL('l', "create-reflog", &reflog, N_("create the branch's reflog")),
 		OPT_BOOL(0, "edit-description", &edit_description,
 			 N_("edit the description for the branch")),
-		OPT__FORCE(&force_create, N_("force creation (when already exists)")),
+		OPT__FORCE(&force, N_("force creation, move/rename, deletion")),
 		{
 			OPTION_CALLBACK, 0, "no-merged", &merge_filter_ref,
 			N_("commit"), N_("print only not merged branches"),
 			PARSE_OPT_LASTARG_DEFAULT | PARSE_OPT_NONEG,
 			opt_parse_merge_filter, (intptr_t) "HEAD",
 		},
@@ -888,25 +888,30 @@
 	if (!delete && !rename && !edit_description && !new_upstream && !unset_upstream && argc == 0)
 		list = 1;
 
 	if (with_commit || merge_filter != NO_FILTER)
 		list = 1;
 
-	if (!!delete + !!rename + !!force_create + !!new_upstream +
+	if (!!delete + !!rename + !!new_upstream +
 	    list + unset_upstream > 1)
 		usage_with_options(builtin_branch_usage, options);
 
 	if (abbrev == -1)
 		abbrev = DEFAULT_ABBREV;
 	finalize_colopts(&colopts, -1);
 	if (verbose) {
 		if (explicitly_enable_column(colopts))
 			die(_("--column and --verbose are incompatible"));
 		colopts = 0;
 	}
 
+	if (force) {
+		delete *= 2;
+		rename *= 2;
+	}
+
 	if (delete) {
 		if (!argc)
 			die(_("branch name required"));
 		return delete_branches(argc, argv, delete > 1, kinds, quiet);
 	} else if (list) {
 		int ret = print_ref_list(kinds, detached, verbose, abbrev,
@@ -1017,13 +1022,13 @@
 		strbuf_addf(&buf, "refs/remotes/%s", branch->name);
 		remote_tracking = ref_exists(buf.buf);
 		strbuf_release(&buf);
 
 		branch_existed = ref_exists(branch->refname);
 		create_branch(head, argv[0], (argc == 2) ? argv[1] : head,
-			      force_create, reflog, 0, quiet, track);
+			      force, reflog, 0, quiet, track);
 
 		/*
 		 * We only show the instructions if the user gave us
 		 * one branch which doesn't exist locally, but is the
 		 * name of a remote-tracking branch.
 		 */
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/branch.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/branch.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/branch.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/branch.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/bundle.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/bundle.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/bundle.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/bundle.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/cat-file.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/cat-file.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/cat-file.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/cat-file.c	2015-02-06 05:40:08.000000000 +0800
@@ -1,18 +1,14 @@
 /*
  * GIT - The information manager from hell
  *
  * Copyright (C) Linus Torvalds, 2005
  */
 #include "cache.h"
-#include "exec_cmd.h"
-#include "tag.h"
-#include "tree.h"
 #include "builtin.h"
 #include "parse-options.h"
-#include "diff.h"
 #include "userdiff.h"
 #include "streaming.h"
 
 static int cat_one_file(int opt, const char *exp_type, const char *obj_name)
 {
 	unsigned char sha1[20];
@@ -76,14 +72,12 @@
 		break;
 
 	case 0:
 		if (type_from_string(exp_type) == OBJ_BLOB) {
 			unsigned char blob_sha1[20];
 			if (sha1_object_info(sha1, NULL) == OBJ_TAG) {
-				enum object_type type;
-				unsigned long size;
 				char *buffer = read_sha1_file(sha1, &type, &size);
 				const char *target;
 				if (!skip_prefix(buffer, "object ", &target) ||
 				    get_sha1_hex(target, blob_sha1))
 					die("%s not a valid tag", sha1_to_hex(sha1));
 				free(buffer);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/cat-file.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/cat-file.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/cat-file.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/cat-file.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/check-attr.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/check-attr.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/check-attr.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/check-attr.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/check-ignore.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/check-ignore.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/check-ignore.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/check-ignore.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/check-mailmap.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/check-mailmap.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/check-mailmap.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/check-mailmap.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/checkout.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/checkout.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/checkout.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/checkout.c	2015-02-06 05:40:08.000000000 +0800
@@ -59,27 +59,27 @@
 			   changed ? "1" : "0", NULL);
 	/* "new" can be NULL when checking out from the index before
 	   a commit exists. */
 
 }
 
-static int update_some(const unsigned char *sha1, const char *base, int baselen,
+static int update_some(const unsigned char *sha1, struct strbuf *base,
 		const char *pathname, unsigned mode, int stage, void *context)
 {
 	int len;
 	struct cache_entry *ce;
 	int pos;
 
 	if (S_ISDIR(mode))
 		return READ_TREE_RECURSIVE;
 
-	len = baselen + strlen(pathname);
+	len = base->len + strlen(pathname);
 	ce = xcalloc(1, cache_entry_size(len));
 	hashcpy(ce->sha1, sha1);
-	memcpy(ce->name, base, baselen);
-	memcpy(ce->name + baselen, pathname, len - baselen);
+	memcpy(ce->name, base->buf, base->len);
+	memcpy(ce->name + base->len, pathname, len - base->len);
 	ce->ce_flags = create_ce_flags(0) | CE_UPDATE;
 	ce->ce_namelen = len;
 	ce->ce_mode = create_ce_mode(mode);
 
 	/*
 	 * If the entry is the same as the current index, we can leave the old
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/checkout.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/checkout.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/checkout-index.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/checkout-index.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/checkout-index.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/checkout-index.c	2015-02-06 05:40:08.000000000 +0800
@@ -15,13 +15,13 @@
 static int checkout_stage; /* default to checkout stage0 */
 static int to_tempfile;
 static char topath[4][TEMPORARY_FILENAME_LENGTH + 1];
 
 static struct checkout state;
 
-static void write_tempfile_record(const char *name, int prefix_length)
+static void write_tempfile_record(const char *name, const char *prefix)
 {
 	int i;
 
 	if (CHECKOUT_ALL == checkout_stage) {
 		for (i = 1; i < 4; i++) {
 			if (i > 1)
@@ -32,20 +32,20 @@
 				putchar('.');
 		}
 	} else
 		fputs(topath[checkout_stage], stdout);
 
 	putchar('\t');
-	write_name_quoted(name + prefix_length, stdout, line_termination);
+	write_name_quoted_relative(name, prefix, stdout, line_termination);
 
 	for (i = 0; i < 4; i++) {
 		topath[i][0] = 0;
 	}
 }
 
-static int checkout_file(const char *name, int prefix_length)
+static int checkout_file(const char *name, const char *prefix)
 {
 	int namelen = strlen(name);
 	int pos = cache_name_pos(name, namelen);
 	int has_same_name = 0;
 	int did_checkout = 0;
 	int errs = 0;
@@ -68,13 +68,13 @@
 		    to_tempfile ? topath[ce_stage(ce)] : NULL) < 0)
 			errs++;
 	}
 
 	if (did_checkout) {
 		if (to_tempfile)
-			write_tempfile_record(name, prefix_length);
+			write_tempfile_record(name, prefix);
 		return errs > 0 ? -1 : 0;
 	}
 
 	if (!state.quiet) {
 		fprintf(stderr, "git checkout-index: %s ", name);
 		if (!has_same_name)
@@ -103,21 +103,21 @@
 		    (ce_namelen(ce) <= prefix_length ||
 		     memcmp(prefix, ce->name, prefix_length)))
 			continue;
 		if (last_ce && to_tempfile) {
 			if (ce_namelen(last_ce) != ce_namelen(ce)
 			    || memcmp(last_ce->name, ce->name, ce_namelen(ce)))
-				write_tempfile_record(last_ce->name, prefix_length);
+				write_tempfile_record(last_ce->name, prefix);
 		}
 		if (checkout_entry(ce, &state,
 		    to_tempfile ? topath[ce_stage(ce)] : NULL) < 0)
 			errs++;
 		last_ce = ce;
 	}
 	if (last_ce && to_tempfile)
-		write_tempfile_record(last_ce->name, prefix_length);
+		write_tempfile_record(last_ce->name, prefix);
 	if (errs)
 		/* we have already done our error reporting.
 		 * exit with the same code as die().
 		 */
 		exit(128);
 }
@@ -245,13 +245,13 @@
 
 		if (all)
 			die("git checkout-index: don't mix '--all' and explicit filenames");
 		if (read_from_stdin)
 			die("git checkout-index: don't mix '--stdin' and explicit filenames");
 		p = prefix_path(prefix, prefix_length, arg);
-		checkout_file(p, prefix_length);
+		checkout_file(p, prefix);
 		if (p < arg || p > arg + strlen(arg))
 			free((char *)p);
 	}
 
 	if (read_from_stdin) {
 		struct strbuf buf = STRBUF_INIT, nbuf = STRBUF_INIT;
@@ -265,13 +265,13 @@
 				strbuf_reset(&nbuf);
 				if (unquote_c_style(&nbuf, buf.buf, NULL))
 					die("line is badly quoted");
 				strbuf_swap(&buf, &nbuf);
 			}
 			p = prefix_path(prefix, prefix_length, buf.buf);
-			checkout_file(p, prefix_length);
+			checkout_file(p, prefix);
 			if (p < buf.buf || p > buf.buf + buf.len)
 				free((char *)p);
 		}
 		strbuf_release(&nbuf);
 		strbuf_release(&buf);
 	}
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/checkout-index.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/checkout-index.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/checkout-index.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/checkout-index.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/checkout.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/checkout.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/check-ref-format.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/check-ref-format.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/check-ref-format.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/check-ref-format.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/clean.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/clean.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/clean.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/clean.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/clone.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/clone.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/clone.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/clone.c	2015-02-06 05:40:08.000000000 +0800
@@ -46,12 +46,13 @@
 static const char *real_git_dir;
 static char *option_upload_pack = "git-upload-pack";
 static int option_verbosity;
 static int option_progress = -1;
 static struct string_list option_config;
 static struct string_list option_reference;
+static int option_dissociate;
 
 static int opt_parse_reference(const struct option *opt, const char *arg, int unset)
 {
 	struct string_list *option_reference = opt->value;
 	if (!arg)
 		return -1;
@@ -91,12 +92,14 @@
 	OPT_STRING('u', "upload-pack", &option_upload_pack, N_("path"),
 		   N_("path to git-upload-pack on the remote")),
 	OPT_STRING(0, "depth", &option_depth, N_("depth"),
 		    N_("create a shallow clone of that depth")),
 	OPT_BOOL(0, "single-branch", &option_single_branch,
 		    N_("clone only one branch, HEAD or --branch")),
+	OPT_BOOL(0, "dissociate", &option_dissociate,
+		 N_("use --reference only while cloning")),
 	OPT_STRING(0, "separate-git-dir", &real_git_dir, N_("gitdir"),
 		   N_("separate git dir from working tree")),
 	OPT_STRING_LIST('c', "config", &option_config, N_("key=value"),
 			N_("set config inside the new repository")),
 	OPT_END()
 };
@@ -732,12 +735,22 @@
 	}
 
 	strbuf_release(&key);
 	strbuf_release(&value);
 }
 
+static void dissociate_from_references(void)
+{
+	static const char* argv[] = { "repack", "-a", "-d", NULL };
+
+	if (run_command_v_opt(argv, RUN_GIT_CMD|RUN_COMMAND_NO_STDIN))
+		die(_("cannot repack to clean up"));
+	if (unlink(git_path("objects/info/alternates")) && errno != ENOENT)
+		die_errno(_("cannot unlink temporary alternates file"));
+}
+
 int cmd_clone(int argc, const char **argv, const char *prefix)
 {
 	int is_bundle = 0, is_local;
 	struct stat buf;
 	const char *repo_name, *repo, *work_tree, *git_dir;
 	char *path, *dir;
@@ -877,12 +890,16 @@
 	strbuf_addf(&key, "remote.%s.url", option_origin);
 	git_config_set(key.buf, repo);
 	strbuf_reset(&key);
 
 	if (option_reference.nr)
 		setup_reference();
+	else if (option_dissociate) {
+		warning(_("--dissociate given, but there is no --reference"));
+		option_dissociate = 0;
+	}
 
 	fetch_pattern = value.buf;
 	refspec = parse_fetch_refspec(1, &fetch_pattern);
 
 	strbuf_reset(&value);
 
@@ -990,12 +1007,15 @@
 
 	update_head(our_head_points_at, remote_head, reflog_msg.buf);
 
 	transport_unlock_pack(transport);
 	transport_disconnect(transport);
 
+	if (option_dissociate)
+		dissociate_from_references();
+
 	junk_mode = JUNK_LEAVE_REPO;
 	err = checkout();
 
 	strbuf_release(&reflog_msg);
 	strbuf_release(&branch_top);
 	strbuf_release(&key);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/clone.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/clone.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/clone.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/clone.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/column.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/column.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/column.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/column.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/commit.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/commit.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/commit.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/commit.c	2015-02-06 05:40:08.000000000 +0800
@@ -519,36 +519,28 @@
 
 static int is_a_merge(const struct commit *current_head)
 {
 	return !!(current_head->parents && current_head->parents->next);
 }
 
+static void assert_split_ident(struct ident_split *id, const struct strbuf *buf)
+{
+	if (split_ident_line(id, buf->buf, buf->len) || !id->date_begin)
+		die("BUG: unable to parse our own ident: %s", buf->buf);
+}
+
 static void export_one(const char *var, const char *s, const char *e, int hack)
 {
 	struct strbuf buf = STRBUF_INIT;
 	if (hack)
 		strbuf_addch(&buf, hack);
 	strbuf_addf(&buf, "%.*s", (int)(e - s), s);
 	setenv(var, buf.buf, 1);
 	strbuf_release(&buf);
 }
 
-static int sane_ident_split(struct ident_split *person)
-{
-	if (!person->name_begin || !person->name_end ||
-	    person->name_begin == person->name_end)
-		return 0; /* no human readable name */
-	if (!person->mail_begin || !person->mail_end ||
-	    person->mail_begin == person->mail_end)
-		return 0; /* no usable mail */
-	if (!person->date_begin || !person->date_end ||
-	    !person->tz_begin || !person->tz_end)
-		return 0;
-	return 1;
-}
-
 static int parse_force_date(const char *in, struct strbuf *out)
 {
 	strbuf_addch(out, '@');
 
 	if (parse_date(in, out) < 0) {
 		int errors = 0;
@@ -620,31 +612,21 @@
 		if (parse_force_date(force_date, &date_buf))
 			die(_("invalid date format: %s"), force_date);
 		set_ident_var(&date, strbuf_detach(&date_buf, NULL));
 	}
 
 	strbuf_addstr(author_ident, fmt_ident(name, email, date, IDENT_STRICT));
-	if (!split_ident_line(&author, author_ident->buf, author_ident->len) &&
-	    sane_ident_split(&author)) {
-		export_one("GIT_AUTHOR_NAME", author.name_begin, author.name_end, 0);
-		export_one("GIT_AUTHOR_EMAIL", author.mail_begin, author.mail_end, 0);
-		export_one("GIT_AUTHOR_DATE", author.date_begin, author.tz_end, '@');
-	}
-
+	assert_split_ident(&author, author_ident);
+	export_one("GIT_AUTHOR_NAME", author.name_begin, author.name_end, 0);
+	export_one("GIT_AUTHOR_EMAIL", author.mail_begin, author.mail_end, 0);
+	export_one("GIT_AUTHOR_DATE", author.date_begin, author.tz_end, '@');
 	free(name);
 	free(email);
 	free(date);
 }
 
-static void split_ident_or_die(struct ident_split *id, const struct strbuf *buf)
-{
-	if (split_ident_line(id, buf->buf, buf->len) ||
-	    !sane_ident_split(id))
-		die(_("Malformed ident string: '%s'"), buf->buf);
-}
-
 static int author_date_is_interesting(void)
 {
 	return author_message || force_date;
 }
 
 static void adjust_comment_line_char(const struct strbuf *sb)
@@ -797,38 +779,14 @@
 	 */
 	s->hints = 0;
 
 	if (clean_message_contents)
 		stripspace(&sb, 0);
 
-	if (signoff) {
-		/*
-		 * See if we have a Conflicts: block at the end. If yes, count
-		 * its size, so we can ignore it.
-		 */
-		int ignore_footer = 0;
-		int i, eol, previous = 0;
-		const char *nl;
-
-		for (i = 0; i < sb.len; i++) {
-			nl = memchr(sb.buf + i, '\n', sb.len - i);
-			if (nl)
-				eol = nl - sb.buf;
-			else
-				eol = sb.len;
-			if (starts_with(sb.buf + previous, "\nConflicts:\n")) {
-				ignore_footer = sb.len - previous;
-				break;
-			}
-			while (i < eol)
-				i++;
-			previous = eol;
-		}
-
-		append_signoff(&sb, ignore_footer, 0);
-	}
+	if (signoff)
+		append_signoff(&sb, ignore_non_trailer(&sb), 0);
 
 	if (fwrite(sb.buf, 1, sb.len, s->fp) < sb.len)
 		die_errno(_("could not write commit template"));
 
 	if (auto_comment_line_char)
 		adjust_comment_line_char(&sb);
@@ -877,14 +835,20 @@
 				  " yourself if you want to.\n"
 				  "An empty message aborts the commit.\n"), comment_line_char);
 		if (only_include_assumed)
 			status_printf_ln(s, GIT_COLOR_NORMAL,
 					"%s", only_include_assumed);
 
-		split_ident_or_die(&ai, author_ident);
-		split_ident_or_die(&ci, &committer_ident);
+		/*
+		 * These should never fail because they come from our own
+		 * fmt_ident. They may fail the sane_ident test, but we know
+		 * that the name and mail pointers will at least be valid,
+		 * which is enough for our tests and printing here.
+		 */
+		assert_split_ident(&ai, author_ident);
+		assert_split_ident(&ci, &committer_ident);
 
 		if (ident_cmp(&ai, &ci))
 			status_printf_ln(s, GIT_COLOR_NORMAL,
 				_("%s"
 				"Author:    %.*s <%.*s>"),
 				ident_shown++ ? "" : "\n",
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/commit.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/commit.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/commit.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/commit.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/commit-tree.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/commit-tree.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/commit-tree.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/commit-tree.c	2015-02-06 05:40:08.000000000 +0800
@@ -63,16 +63,14 @@
 				die("Not a valid object name %s", argv[i]);
 			assert_sha1_type(sha1, OBJ_COMMIT);
 			new_parent(lookup_commit(sha1), &parents);
 			continue;
 		}
 
-		if (!memcmp(arg, "-S", 2)) {
-			sign_commit = arg + 2;
+		if (skip_prefix(arg, "-S", &sign_commit))
 			continue;
-		}
 
 		if (!strcmp(arg, "--no-gpg-sign")) {
 			sign_commit = NULL;
 			continue;
 		}
 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/commit-tree.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/commit-tree.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/commit-tree.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/commit-tree.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/config.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/config.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/config.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/config.c	2015-02-06 05:40:08.000000000 +0800
@@ -562,34 +562,37 @@
 					  given_config_source.file);
 			else
 				die("error processing config file(s)");
 		}
 	}
 	else if (actions == ACTION_EDIT) {
-		const char *config_file = given_config_source.file ?
-			given_config_source.file : git_path("config");
+		char *config_file;
+
 		check_argc(argc, 0, 0);
 		if (!given_config_source.file && nongit)
 			die("not in a git directory");
 		if (given_config_source.use_stdin)
 			die("editing stdin is not supported");
 		if (given_config_source.blob)
 			die("editing blobs is not supported");
 		git_config(git_default_config, NULL);
+		config_file = xstrdup(given_config_source.file ?
+				      given_config_source.file : git_path("config"));
 		if (use_global_config) {
 			int fd = open(config_file, O_CREAT | O_EXCL | O_WRONLY, 0666);
 			if (fd) {
 				char *content = default_user_config();
 				write_str_in_full(fd, content);
 				free(content);
 				close(fd);
 			}
 			else if (errno != EEXIST)
 				die_errno(_("cannot create configuration file %s"), config_file);
 		}
 		launch_editor(config_file, NULL, NULL);
+		free(config_file);
 	}
 	else if (actions == ACTION_SET) {
 		int ret;
 		check_write();
 		check_argc(argc, 2, 2);
 		value = normalize_value(argv[0], argv[1]);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/config.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/config.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/config.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/config.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/count-objects.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/count-objects.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/count-objects.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/count-objects.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/credential.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/credential.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/credential.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/credential.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/describe.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/describe.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/describe.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/describe.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/diff.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/diff.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/diff-files.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/diff-files.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/diff-files.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/diff-files.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/diff-index.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/diff-index.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/diff-index.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/diff-index.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/diff.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/diff.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/diff-tree.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/diff-tree.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/diff-tree.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/diff-tree.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/fast-export.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/fast-export.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/fast-export.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/fast-export.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/fetch.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/fetch.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/fetch.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/fetch.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/fetch-pack.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/fetch-pack.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/fetch-pack.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/fetch-pack.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/fmt-merge-msg.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/fmt-merge-msg.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/fmt-merge-msg.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/fmt-merge-msg.c	2015-02-06 05:40:08.000000000 +0800
@@ -213,14 +213,13 @@
 			const char *ep = strchrnul(bp, '\n');
 			if (*ep)
 				ep++;
 			strbuf_addf(out, "  : %.*s", (int)(ep - bp), bp);
 			bp = ep;
 		}
-		if (out->buf[out->len - 1] != '\n')
-			strbuf_addch(out, '\n');
+		strbuf_complete_line(out);
 	}
 	strbuf_release(&desc);
 }
 
 #define util_as_integral(elem) ((intptr_t)((elem)->util))
 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/fmt-merge-msg.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/fmt-merge-msg.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/fmt-merge-msg.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/fmt-merge-msg.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/for-each-ref.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/for-each-ref.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/for-each-ref.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/for-each-ref.c	2015-02-06 05:40:08.000000000 +0800
@@ -714,13 +714,16 @@
 				refname = shorten_unambiguous_ref(refname,
 						      warn_ambiguous_refs);
 			else if (!strcmp(formatp, "track") &&
 				 starts_with(name, "upstream")) {
 				char buf[40];
 
-				stat_tracking_info(branch, &num_ours, &num_theirs);
+				if (stat_tracking_info(branch, &num_ours,
+						       &num_theirs) != 1)
+					continue;
+
 				if (!num_ours && !num_theirs)
 					v->s = "";
 				else if (!num_ours) {
 					sprintf(buf, "[behind %d]", num_theirs);
 					v->s = xstrdup(buf);
 				} else if (!num_theirs) {
@@ -732,13 +735,17 @@
 					v->s = xstrdup(buf);
 				}
 				continue;
 			} else if (!strcmp(formatp, "trackshort") &&
 				   starts_with(name, "upstream")) {
 				assert(branch);
-				stat_tracking_info(branch, &num_ours, &num_theirs);
+
+				if (stat_tracking_info(branch, &num_ours,
+							&num_theirs) != 1)
+					continue;
+
 				if (!num_ours && !num_theirs)
 					v->s = "=";
 				else if (!num_ours)
 					v->s = "<";
 				else if (!num_theirs)
 					v->s = ">";
@@ -1072,13 +1079,13 @@
 			N_("quote placeholders suitably for shells"), QUOTE_SHELL),
 		OPT_BIT('p', "perl",  &quote_style,
 			N_("quote placeholders suitably for perl"), QUOTE_PERL),
 		OPT_BIT(0 , "python", &quote_style,
 			N_("quote placeholders suitably for python"), QUOTE_PYTHON),
 		OPT_BIT(0 , "tcl",  &quote_style,
-			N_("quote placeholders suitably for tcl"), QUOTE_TCL),
+			N_("quote placeholders suitably for Tcl"), QUOTE_TCL),
 
 		OPT_GROUP(""),
 		OPT_INTEGER( 0 , "count", &maxcount, N_("show only <n> matched refs")),
 		OPT_STRING(  0 , "format", &format, N_("format"), N_("format to use for the output")),
 		OPT_CALLBACK(0 , "sort", sort_tail, N_("key"),
 			    N_("field name to sort on"), &opt_parse_sort),
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/for-each-ref.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/for-each-ref.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/for-each-ref.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/for-each-ref.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/fsck.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/fsck.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/fsck.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/fsck.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/gc.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/gc.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/gc.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/gc.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/get-tar-commit-id.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/get-tar-commit-id.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/get-tar-commit-id.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/get-tar-commit-id.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/grep.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/grep.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/grep.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/grep.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/hash-object.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/hash-object.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/hash-object.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/hash-object.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/help.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/help.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/help.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/help.c	2015-02-06 05:40:08.000000000 +0800
@@ -318,22 +318,24 @@
 }
 
 static void setup_man_path(void)
 {
 	struct strbuf new_path = STRBUF_INIT;
 	const char *old_path = getenv("MANPATH");
+	char *git_man_path = system_path(GIT_MAN_PATH);
 
 	/* We should always put ':' after our path. If there is no
 	 * old_path, the ':' at the end will let 'man' to try
 	 * system-wide paths after ours to find the manual page. If
 	 * there is old_path, we need ':' as delimiter. */
-	strbuf_addstr(&new_path, system_path(GIT_MAN_PATH));
+	strbuf_addstr(&new_path, git_man_path);
 	strbuf_addch(&new_path, ':');
 	if (old_path)
 		strbuf_addstr(&new_path, old_path);
 
+	free(git_man_path);
 	setenv("MANPATH", new_path.buf, 1);
 
 	strbuf_release(&new_path);
 }
 
 static void exec_viewer(const char *name, const char *page)
@@ -377,24 +379,27 @@
 	die(_("no info viewer handled the request"));
 }
 
 static void get_html_page_path(struct strbuf *page_path, const char *page)
 {
 	struct stat st;
+	char *to_free = NULL;
+
 	if (!html_path)
-		html_path = system_path(GIT_HTML_PATH);
+		html_path = to_free = system_path(GIT_HTML_PATH);
 
 	/* Check that we have a git documentation directory. */
 	if (!strstr(html_path, "://")) {
 		if (stat(mkpath("%s/git.html", html_path), &st)
 		    || !S_ISREG(st.st_mode))
 			die("'%s': not a documentation directory.", html_path);
 	}
 
 	strbuf_init(page_path, 0);
 	strbuf_addf(page_path, "%s/%s.html", html_path, page);
+	free(to_free);
 }
 
 /*
  * If open_html is not defined in a platform-specific way (see for
  * example compat/mingw.h), we use the script web--browse to display
  * HTML.
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/help.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/help.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/help.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/help.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/index-pack.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/index-pack.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/index-pack.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/index-pack.c	2015-02-06 05:40:08.000000000 +0800
@@ -444,13 +444,13 @@
 		git_SHA1_Update(&c, hdr, hdrlen);
 	} else
 		sha1 = NULL;
 	if (type == OBJ_BLOB && size > big_file_threshold)
 		buf = fixed_buf;
 	else
-		buf = xmalloc(size);
+		buf = xmallocz(size);
 
 	memset(&stream, 0, sizeof(stream));
 	git_inflate_init(&stream);
 	stream.next_out = buf;
 	stream.avail_out = buf == fixed_buf ? sizeof(fixed_buf) : size;
 
@@ -549,13 +549,13 @@
 	off_t from = obj[0].idx.offset + obj[0].hdr_size;
 	unsigned long len = obj[1].idx.offset - from;
 	unsigned char *data, *inbuf;
 	git_zstream stream;
 	int status;
 
-	data = xmalloc(consume ? 64*1024 : obj->size);
+	data = xmallocz(consume ? 64*1024 : obj->size);
 	inbuf = xmalloc((len < 64*1024) ? len : 64*1024);
 
 	memset(&stream, 0, sizeof(stream));
 	git_inflate_init(&stream);
 	stream.next_out = data;
 	stream.avail_out = consume ? 64*1024 : obj->size;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/index-pack.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/index-pack.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/index-pack.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/index-pack.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/init-db.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/init-db.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/init-db.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/init-db.c	2015-02-06 05:40:08.000000000 +0800
@@ -116,33 +116,36 @@
 	char path[PATH_MAX];
 	char template_path[PATH_MAX];
 	int template_len;
 	DIR *dir;
 	const char *git_dir = get_git_dir();
 	int len = strlen(git_dir);
+	char *to_free = NULL;
 
 	if (!template_dir)
 		template_dir = getenv(TEMPLATE_DIR_ENVIRONMENT);
 	if (!template_dir)
 		template_dir = init_db_template_dir;
 	if (!template_dir)
-		template_dir = system_path(DEFAULT_GIT_TEMPLATE_DIR);
-	if (!template_dir[0])
+		template_dir = to_free = system_path(DEFAULT_GIT_TEMPLATE_DIR);
+	if (!template_dir[0]) {
+		free(to_free);
 		return;
+	}
 	template_len = strlen(template_dir);
 	if (PATH_MAX <= (template_len+strlen("/config")))
 		die(_("insanely long template path %s"), template_dir);
 	strcpy(template_path, template_dir);
 	if (template_path[template_len-1] != '/') {
 		template_path[template_len++] = '/';
 		template_path[template_len] = 0;
 	}
 	dir = opendir(template_path);
 	if (!dir) {
 		warning(_("templates not found %s"), template_dir);
-		return;
+		goto free_return;
 	}
 
 	/* Make sure that template is from the correct vintage */
 	strcpy(template_path + template_len, "config");
 	repository_format_version = 0;
 	git_config_from_file(check_repository_format_version,
@@ -152,24 +155,26 @@
 	if (repository_format_version &&
 	    repository_format_version != GIT_REPO_VERSION) {
 		warning(_("not copying templates of "
 			"a wrong format version %d from '%s'"),
 			repository_format_version,
 			template_dir);
-		closedir(dir);
-		return;
+		goto close_free_return;
 	}
 
 	memcpy(path, git_dir, len);
 	if (len && path[len - 1] != '/')
 		path[len++] = '/';
 	path[len] = 0;
 	copy_templates_1(path, len,
 			 template_path, template_len,
 			 dir);
+close_free_return:
 	closedir(dir);
+free_return:
+	free(to_free);
 }
 
 static int git_init_db_config(const char *k, const char *v, void *cb)
 {
 	if (!strcmp(k, "init.templatedir"))
 		return git_config_pathname(&init_db_template_dir, k, v);
@@ -253,12 +258,14 @@
 	if (TEST_FILEMODE && !lstat(path, &st1)) {
 		struct stat st2;
 		filemode = (!chmod(path, st1.st_mode ^ S_IXUSR) &&
 				!lstat(path, &st2) &&
 				st1.st_mode != st2.st_mode &&
 				!chmod(path, st1.st_mode));
+		if (filemode && !reinit && (st1.st_mode & S_IXUSR))
+			filemode = 0;
 	}
 	git_config_set("core.filemode", filemode ? "true" : "false");
 
 	if (is_bare_repository())
 		git_config_set("core.bare", "true");
 	else {
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/init-db.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/init-db.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/init-db.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/init-db.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/interpret-trailers.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/interpret-trailers.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/interpret-trailers.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/interpret-trailers.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/log.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/log.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/log.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/log.c	2015-02-06 05:40:08.000000000 +0800
@@ -35,14 +35,14 @@
 static int decoration_given;
 static int use_mailmap_config;
 static const char *fmt_patch_subject_prefix = "PATCH";
 static const char *fmt_pretty;
 
 static const char * const builtin_log_usage[] = {
-	N_("git log [<options>] [<revision range>] [[--] <path>...]\n")
-	N_("   or: git show [options] <object>..."),
+	N_("git log [<options>] [<revision range>] [[--] <path>...]"),
+	N_("git show [options] <object>..."),
 	NULL
 };
 
 struct line_opt_callback_data {
 	struct rev_info *rev;
 	const char *prefix;
@@ -486,13 +486,13 @@
 		fwrite(buf + offset, size - offset, 1, stdout);
 	free(buf);
 	return 0;
 }
 
 static int show_tree_object(const unsigned char *sha1,
-		const char *base, int baselen,
+		struct strbuf *base,
 		const char *pathname, unsigned mode, int stage, void *context)
 {
 	printf("%s%s\n", pathname, S_ISDIR(mode) ? "/" : "");
 	return 0;
 }
 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/log.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/log.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/log.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/log.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/ls-files.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/ls-files.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/ls-files.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/ls-files.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/ls-remote.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/ls-remote.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/ls-remote.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/ls-remote.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/ls-tree.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/ls-tree.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/ls-tree.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/ls-tree.c	2015-02-06 05:40:08.000000000 +0800
@@ -58,16 +58,17 @@
 		if (memcmp(pathname, spec, len))
 			continue;
 		return 1;
 	}
 }
 
-static int show_tree(const unsigned char *sha1, const char *base, int baselen,
+static int show_tree(const unsigned char *sha1, struct strbuf *base,
 		const char *pathname, unsigned mode, int stage, void *context)
 {
 	int retval = 0;
+	int baselen;
 	const char *type = blob_type;
 
 	if (S_ISGITLINK(mode)) {
 		/*
 		 * Maybe we want to have some recursive version here?
 		 *
@@ -76,26 +77,22 @@
 		if (show_subprojects(base, baselen, pathname))
 			retval = READ_TREE_RECURSIVE;
 		 *
 		 */
 		type = commit_type;
 	} else if (S_ISDIR(mode)) {
-		if (show_recursive(base, baselen, pathname)) {
+		if (show_recursive(base->buf, base->len, pathname)) {
 			retval = READ_TREE_RECURSIVE;
 			if (!(ls_options & LS_SHOW_TREES))
 				return retval;
 		}
 		type = tree_type;
 	}
 	else if (ls_options & LS_TREE_ONLY)
 		return 0;
 
-	if (chomp_prefix &&
-	    (baselen < chomp_prefix || memcmp(ls_tree_prefix, base, chomp_prefix)))
-		return 0;
-
 	if (!(ls_options & LS_NAME_ONLY)) {
 		if (ls_options & LS_SHOW_SIZE) {
 			char size_text[24];
 			if (!strcmp(type, blob_type)) {
 				unsigned long size;
 				if (sha1_object_info(sha1, &size) == OBJ_BAD)
@@ -109,14 +106,18 @@
 			       find_unique_abbrev(sha1, abbrev),
 			       size_text);
 		} else
 			printf("%06o %s %s\t", mode, type,
 			       find_unique_abbrev(sha1, abbrev));
 	}
-	write_name_quotedpfx(base + chomp_prefix, baselen - chomp_prefix,
-			  pathname, stdout, line_termination);
+	baselen = base->len;
+	strbuf_addstr(base, pathname);
+	write_name_quoted_relative(base->buf,
+				   chomp_prefix ? ls_tree_prefix : NULL,
+				   stdout, line_termination);
+	strbuf_setlen(base, baselen);
 	return retval;
 }
 
 int cmd_ls_tree(int argc, const char **argv, const char *prefix)
 {
 	unsigned char sha1[20];
@@ -170,13 +171,14 @@
 	/*
 	 * show_recursive() rolls its own matching code and is
 	 * generally ignorant of 'struct pathspec'. The magic mask
 	 * cannot be lifted until it is converted to use
 	 * match_pathspec() or tree_entry_interesting()
 	 */
-	parse_pathspec(&pathspec, PATHSPEC_GLOB | PATHSPEC_ICASE,
+	parse_pathspec(&pathspec, PATHSPEC_GLOB | PATHSPEC_ICASE |
+				  PATHSPEC_EXCLUDE,
 		       PATHSPEC_PREFER_CWD,
 		       prefix, argv + 1);
 	for (i = 0; i < pathspec.nr; i++)
 		pathspec.items[i].nowildcard_len = pathspec.items[i].len;
 	pathspec.has_wildcard = 0;
 	tree = parse_tree_indirect(sha1);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/ls-tree.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/ls-tree.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/ls-tree.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/ls-tree.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/mailinfo.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/mailinfo.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/mailinfo.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/mailinfo.c	2015-02-06 05:40:08.000000000 +0800
@@ -12,21 +12,23 @@
 static int keep_subject;
 static int keep_non_patch_brackets_in_subject;
 static const char *metainfo_charset;
 static struct strbuf line = STRBUF_INIT;
 static struct strbuf name = STRBUF_INIT;
 static struct strbuf email = STRBUF_INIT;
+static char *message_id;
 
 static enum  {
 	TE_DONTCARE, TE_QP, TE_BASE64
 } transfer_encoding;
 
 static struct strbuf charset = STRBUF_INIT;
 static int patch_lines;
 static struct strbuf **p_hdr_data, **s_hdr_data;
 static int use_scissors;
+static int add_message_id;
 static int use_inbody_headers = 1;
 
 #define MAX_HDR_PARSED 10
 #define MAX_BOUNDARIES 5
 
 static void cleanup_space(struct strbuf *sb);
@@ -195,12 +197,18 @@
 	if (boundary) {
 		strbuf_release(boundary);
 		free(boundary);
 	}
 }
 
+static void handle_message_id(const struct strbuf *line)
+{
+	if (add_message_id)
+		message_id = strdup(line->buf);
+}
+
 static void handle_content_transfer_encoding(const struct strbuf *line)
 {
 	if (strcasestr(line->buf, "base64"))
 		transfer_encoding = TE_BASE64;
 	else if (strcasestr(line->buf, "quoted-printable"))
 		transfer_encoding = TE_QP;
@@ -339,12 +347,20 @@
 		strbuf_add(&sb, line->buf + len, line->len - len);
 		decode_header(&sb);
 		handle_content_transfer_encoding(&sb);
 		ret = 1;
 		goto check_header_out;
 	}
+	if (cmp_header(line, "Message-Id")) {
+		len = strlen("Message-Id: ");
+		strbuf_add(&sb, line->buf + len, line->len - len);
+		decode_header(&sb);
+		handle_message_id(&sb);
+		ret = 1;
+		goto check_header_out;
+	}
 
 	/* for inbody stuff */
 	if (starts_with(line->buf, ">From") && isspace(line->buf[5])) {
 		ret = is_format_patch_separator(line->buf + 1, line->len - 1);
 		goto check_header_out;
 	}
@@ -813,12 +829,14 @@
 			s_hdr_data[i] = NULL;
 		}
 		return 0;
 	}
 
 	if (patchbreak(line)) {
+		if (message_id)
+			fprintf(cmitmsg, "Message-Id: %s\n", message_id);
 		fclose(cmitmsg);
 		cmitmsg = NULL;
 		return 1;
 	}
 
 	fputs(line->buf, cmitmsg);
@@ -1010,13 +1028,13 @@
 	}
 	/* perhaps others here */
 	return 0;
 }
 
 static const char mailinfo_usage[] =
-	"git mailinfo [-k|-b] [-u | --encoding=<encoding> | -n] [--scissors | --no-scissors] msg patch < mail >info";
+	"git mailinfo [-k|-b] [-m | --message-id] [-u | --encoding=<encoding> | -n] [--scissors | --no-scissors] msg patch < mail >info";
 
 int cmd_mailinfo(int argc, const char **argv, const char *prefix)
 {
 	const char *def_charset;
 
 	/* NEEDSWORK: might want to do the optional .git/ directory
@@ -1029,12 +1047,14 @@
 
 	while (1 < argc && argv[1][0] == '-') {
 		if (!strcmp(argv[1], "-k"))
 			keep_subject = 1;
 		else if (!strcmp(argv[1], "-b"))
 			keep_non_patch_brackets_in_subject = 1;
+		else if (!strcmp(argv[1], "-m") || !strcmp(argv[1], "--message-id"))
+			add_message_id = 1;
 		else if (!strcmp(argv[1], "-u"))
 			metainfo_charset = def_charset;
 		else if (!strcmp(argv[1], "-n"))
 			metainfo_charset = NULL;
 		else if (starts_with(argv[1], "--encoding="))
 			metainfo_charset = argv[1] + 11;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/mailinfo.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/mailinfo.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/mailinfo.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/mailinfo.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/mailsplit.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/mailsplit.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/mailsplit.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/mailsplit.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/merge-base.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/merge-base.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/merge-base.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/merge-base.c	2015-02-06 05:40:08.000000000 +0800
@@ -7,13 +7,13 @@
 #include "parse-options.h"
 
 static int show_merge_base(struct commit **rev, int rev_nr, int show_all)
 {
 	struct commit_list *result;
 
-	result = get_merge_bases_many(rev[0], rev_nr - 1, rev + 1, 0);
+	result = get_merge_bases_many_dirty(rev[0], rev_nr - 1, rev + 1);
 
 	if (!result)
 		return 1;
 
 	while (result) {
 		printf("%s\n", sha1_to_hex(result->item->object.sha1));
@@ -173,13 +173,13 @@
 	revs.initial = 1;
 	for_each_reflog_ent(refname, collect_one_reflog_ent, &revs);
 
 	for (i = 0; i < revs.nr; i++)
 		revs.commit[i]->object.flags &= ~TMP_MARK;
 
-	bases = get_merge_bases_many(derived, revs.nr, revs.commit, 0);
+	bases = get_merge_bases_many_dirty(derived, revs.nr, revs.commit);
 
 	/*
 	 * There should be one and only one merge base, when we found
 	 * a common ancestor among reflog entries.
 	 */
 	if (!bases || bases->next) {
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/merge-base.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/merge-base.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/merge-base.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/merge-base.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/merge.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/merge.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/merge.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/merge.c	2015-02-06 05:40:08.000000000 +0800
@@ -26,12 +26,13 @@
 #include "help.h"
 #include "merge-recursive.h"
 #include "resolve-undo.h"
 #include "remote.h"
 #include "fmt-merge-msg.h"
 #include "gpg-interface.h"
+#include "sequencer.h"
 
 #define DEFAULT_TWOHEAD (1<<0)
 #define DEFAULT_OCTOPUS (1<<1)
 #define NO_FAST_FORWARD (1<<2)
 #define NO_TRIVIAL      (1<<3)
 
@@ -877,34 +878,26 @@
 	finish(head, remoteheads, result_commit, buf.buf);
 	strbuf_release(&buf);
 	drop_save();
 	return 0;
 }
 
-static int suggest_conflicts(int renormalizing)
+static int suggest_conflicts(void)
 {
 	const char *filename;
 	FILE *fp;
-	int pos;
+	struct strbuf msgbuf = STRBUF_INIT;
 
 	filename = git_path("MERGE_MSG");
 	fp = fopen(filename, "a");
 	if (!fp)
 		die_errno(_("Could not open '%s' for writing"), filename);
-	fprintf(fp, "\nConflicts:\n");
-	for (pos = 0; pos < active_nr; pos++) {
-		const struct cache_entry *ce = active_cache[pos];
-
-		if (ce_stage(ce)) {
-			fprintf(fp, "\t%s\n", ce->name);
-			while (pos + 1 < active_nr &&
-					!strcmp(ce->name,
-						active_cache[pos + 1]->name))
-				pos++;
-		}
-	}
+
+	append_conflicts_hint(&msgbuf);
+	fputs(msgbuf.buf, fp);
+	strbuf_release(&msgbuf);
 	fclose(fp);
 	rerere(allow_rerere_auto);
 	printf(_("Automatic merge failed; "
 			"fix conflicts and then commit the result.\n"));
 	return 1;
 }
@@ -1317,13 +1310,13 @@
 			allow_trivial = 0;
 	}
 
 	if (!remoteheads)
 		; /* already up-to-date */
 	else if (!remoteheads->next)
-		common = get_merge_bases(head_commit, remoteheads->item, 1);
+		common = get_merge_bases(head_commit, remoteheads->item);
 	else {
 		struct commit_list *list = remoteheads;
 		commit_list_insert(head_commit, &list);
 		common = get_octopus_merge_bases(list);
 		free(list);
 	}
@@ -1414,13 +1407,13 @@
 
 			/*
 			 * Here we *have* to calculate the individual
 			 * merge_bases again, otherwise "git merge HEAD^
 			 * HEAD^^" would be missed.
 			 */
-			common_one = get_merge_bases(head_commit, j->item, 1);
+			common_one = get_merge_bases(head_commit, j->item);
 			if (hashcmp(common_one->item->object.sha1,
 				j->item->object.sha1)) {
 				up_to_date = 0;
 				break;
 			}
 		}
@@ -1547,12 +1540,12 @@
 		write_merge_state(remoteheads);
 
 	if (merge_was_ok)
 		fprintf(stderr, _("Automatic merge went well; "
 			"stopped before committing as requested\n"));
 	else
-		ret = suggest_conflicts(option_renormalize);
+		ret = suggest_conflicts();
 
 done:
 	free(branch_to_free);
 	return ret;
 }
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/merge.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/merge.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/merge-file.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/merge-file.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/merge-file.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/merge-file.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/merge-index.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/merge-index.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/merge-index.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/merge-index.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/merge.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/merge.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/merge-ours.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/merge-ours.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/merge-ours.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/merge-ours.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/merge-recursive.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/merge-recursive.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/merge-recursive.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/merge-recursive.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/merge-tree.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/merge-tree.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/merge-tree.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/merge-tree.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/mktag.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/mktag.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/mktag.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/mktag.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/mktree.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/mktree.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/mktree.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/mktree.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/mv.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/mv.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/mv.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/mv.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/name-rev.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/name-rev.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/name-rev.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/name-rev.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/notes.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/notes.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/notes.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/notes.c	2015-02-06 05:40:08.000000000 +0800
@@ -19,16 +19,16 @@
 #include "string-list.h"
 #include "notes-merge.h"
 #include "notes-utils.h"
 
 static const char * const git_notes_usage[] = {
 	N_("git notes [--ref <notes_ref>] [list [<object>]]"),
-	N_("git notes [--ref <notes_ref>] add [-f] [-m <msg> | -F <file> | (-c | -C) <object>] [<object>]"),
+	N_("git notes [--ref <notes_ref>] add [-f] [--allow-empty] [-m <msg> | -F <file> | (-c | -C) <object>] [<object>]"),
 	N_("git notes [--ref <notes_ref>] copy [-f] <from-object> <to-object>"),
-	N_("git notes [--ref <notes_ref>] append [-m <msg> | -F <file> | (-c | -C) <object>] [<object>]"),
-	N_("git notes [--ref <notes_ref>] edit [<object>]"),
+	N_("git notes [--ref <notes_ref>] append [--allow-empty] [-m <msg> | -F <file> | (-c | -C) <object>] [<object>]"),
+	N_("git notes [--ref <notes_ref>] edit [--allow-empty] [<object>]"),
 	N_("git notes [--ref <notes_ref>] show [<object>]"),
 	N_("git notes [--ref <notes_ref>] merge [-v | -q] [-s <strategy> ] <notes_ref>"),
 	N_("git notes merge --commit [-v | -q]"),
 	N_("git notes merge --abort [-v | -q]"),
 	N_("git notes [--ref <notes_ref>] remove [<object>...]"),
 	N_("git notes [--ref <notes_ref>] prune [-n | -v]"),
@@ -89,27 +89,37 @@
 	NULL
 };
 
 static const char note_template[] =
 	"\nWrite/edit the notes for the following object:\n";
 
-struct msg_arg {
+struct note_data {
 	int given;
 	int use_editor;
+	char *edit_path;
 	struct strbuf buf;
 };
 
+static void free_note_data(struct note_data *d)
+{
+	if (d->edit_path) {
+		unlink_or_warn(d->edit_path);
+		free(d->edit_path);
+	}
+	strbuf_release(&d->buf);
+}
+
 static int list_each_note(const unsigned char *object_sha1,
 		const unsigned char *note_sha1, char *note_path,
 		void *cb_data)
 {
 	printf("%s %s\n", sha1_to_hex(note_sha1), sha1_to_hex(object_sha1));
 	return 0;
 }
 
-static void write_note_data(int fd, const unsigned char *sha1)
+static void copy_obj_to_fd(int fd, const unsigned char *sha1)
 {
 	unsigned long size;
 	enum object_type type;
 	char *buf = read_sha1_file(sha1, &type, &size);
 	if (buf) {
 		if (size)
@@ -146,148 +156,122 @@
 
 	if (finish_command(&show))
 		die(_("failed to finish 'show' for object '%s'"),
 		    sha1_to_hex(object));
 }
 
-static void create_note(const unsigned char *object, struct msg_arg *msg,
-			int append_only, const unsigned char *prev,
-			unsigned char *result)
+static void prepare_note_data(const unsigned char *object, struct note_data *d,
+		const unsigned char *old_note)
 {
-	char *path = NULL;
-
-	if (msg->use_editor || !msg->given) {
+	if (d->use_editor || !d->given) {
 		int fd;
 		struct strbuf buf = STRBUF_INIT;
 
 		/* write the template message before editing: */
-		path = git_pathdup("NOTES_EDITMSG");
-		fd = open(path, O_CREAT | O_TRUNC | O_WRONLY, 0600);
+		d->edit_path = git_pathdup("NOTES_EDITMSG");
+		fd = open(d->edit_path, O_CREAT | O_TRUNC | O_WRONLY, 0600);
 		if (fd < 0)
-			die_errno(_("could not create file '%s'"), path);
+			die_errno(_("could not create file '%s'"), d->edit_path);
 
-		if (msg->given)
-			write_or_die(fd, msg->buf.buf, msg->buf.len);
-		else if (prev && !append_only)
-			write_note_data(fd, prev);
+		if (d->given)
+			write_or_die(fd, d->buf.buf, d->buf.len);
+		else if (old_note)
+			copy_obj_to_fd(fd, old_note);
 
 		strbuf_addch(&buf, '\n');
 		strbuf_add_commented_lines(&buf, note_template, strlen(note_template));
 		strbuf_addch(&buf, '\n');
 		write_or_die(fd, buf.buf, buf.len);
 
 		write_commented_object(fd, object);
 
 		close(fd);
 		strbuf_release(&buf);
-		strbuf_reset(&(msg->buf));
-
-		if (launch_editor(path, &(msg->buf), NULL)) {
-			die(_("Please supply the note contents using either -m" \
-			    " or -F option"));
-		}
-		stripspace(&(msg->buf), 1);
-	}
-
-	if (prev && append_only) {
-		/* Append buf to previous note contents */
-		unsigned long size;
-		enum object_type type;
-		char *prev_buf = read_sha1_file(prev, &type, &size);
+		strbuf_reset(&d->buf);
 
-		strbuf_grow(&(msg->buf), size + 1);
-		if (msg->buf.len && prev_buf && size)
-			strbuf_insert(&(msg->buf), 0, "\n", 1);
-		if (prev_buf && size)
-			strbuf_insert(&(msg->buf), 0, prev_buf, size);
-		free(prev_buf);
-	}
-
-	if (!msg->buf.len) {
-		fprintf(stderr, _("Removing note for object %s\n"),
-			sha1_to_hex(object));
-		hashclr(result);
-	} else {
-		if (write_sha1_file(msg->buf.buf, msg->buf.len, blob_type, result)) {
-			error(_("unable to write note object"));
-			if (path)
-				error(_("The note contents have been left in %s"),
-				      path);
-			exit(128);
+		if (launch_editor(d->edit_path, &d->buf, NULL)) {
+			die(_("Please supply the note contents using either -m or -F option"));
 		}
+		stripspace(&d->buf, 1);
 	}
+}
 
-	if (path) {
-		unlink_or_warn(path);
-		free(path);
+static void write_note_data(struct note_data *d, unsigned char *sha1)
+{
+	if (write_sha1_file(d->buf.buf, d->buf.len, blob_type, sha1)) {
+		error(_("unable to write note object"));
+		if (d->edit_path)
+			error(_("The note contents have been left in %s"),
+				d->edit_path);
+		exit(128);
 	}
 }
 
 static int parse_msg_arg(const struct option *opt, const char *arg, int unset)
 {
-	struct msg_arg *msg = opt->value;
+	struct note_data *d = opt->value;
 
-	strbuf_grow(&(msg->buf), strlen(arg) + 2);
-	if (msg->buf.len)
-		strbuf_addch(&(msg->buf), '\n');
-	strbuf_addstr(&(msg->buf), arg);
-	stripspace(&(msg->buf), 0);
+	strbuf_grow(&d->buf, strlen(arg) + 2);
+	if (d->buf.len)
+		strbuf_addch(&d->buf, '\n');
+	strbuf_addstr(&d->buf, arg);
+	stripspace(&d->buf, 0);
 
-	msg->given = 1;
+	d->given = 1;
 	return 0;
 }
 
 static int parse_file_arg(const struct option *opt, const char *arg, int unset)
 {
-	struct msg_arg *msg = opt->value;
+	struct note_data *d = opt->value;
 
-	if (msg->buf.len)
-		strbuf_addch(&(msg->buf), '\n');
+	if (d->buf.len)
+		strbuf_addch(&d->buf, '\n');
 	if (!strcmp(arg, "-")) {
-		if (strbuf_read(&(msg->buf), 0, 1024) < 0)
+		if (strbuf_read(&d->buf, 0, 1024) < 0)
 			die_errno(_("cannot read '%s'"), arg);
-	} else if (strbuf_read_file(&(msg->buf), arg, 1024) < 0)
+	} else if (strbuf_read_file(&d->buf, arg, 1024) < 0)
 		die_errno(_("could not open or read '%s'"), arg);
-	stripspace(&(msg->buf), 0);
+	stripspace(&d->buf, 0);
 
-	msg->given = 1;
+	d->given = 1;
 	return 0;
 }
 
 static int parse_reuse_arg(const struct option *opt, const char *arg, int unset)
 {
-	struct msg_arg *msg = opt->value;
+	struct note_data *d = opt->value;
 	char *buf;
 	unsigned char object[20];
 	enum object_type type;
 	unsigned long len;
 
-	if (msg->buf.len)
-		strbuf_addch(&(msg->buf), '\n');
+	if (d->buf.len)
+		strbuf_addch(&d->buf, '\n');
 
 	if (get_sha1(arg, object))
 		die(_("Failed to resolve '%s' as a valid ref."), arg);
-	if (!(buf = read_sha1_file(object, &type, &len)) || !len) {
+	if (!(buf = read_sha1_file(object, &type, &len))) {
 		free(buf);
 		die(_("Failed to read object '%s'."), arg);
 	}
 	if (type != OBJ_BLOB) {
 		free(buf);
 		die(_("Cannot read note data from non-blob object '%s'."), arg);
 	}
-	strbuf_add(&(msg->buf), buf, len);
+	strbuf_add(&d->buf, buf, len);
 	free(buf);
 
-	msg->given = 1;
+	d->given = 1;
 	return 0;
 }
 
 static int parse_reedit_arg(const struct option *opt, const char *arg, int unset)
 {
-	struct msg_arg *msg = opt->value;
-	msg->use_editor = 1;
+	struct note_data *d = opt->value;
+	d->use_editor = 1;
 	return parse_reuse_arg(opt, arg, unset);
 }
 
 static int notes_copy_from_stdin(int force, const char *rewrite_cmd)
 {
 	struct strbuf buf = STRBUF_INIT;
@@ -394,32 +378,33 @@
 }
 
 static int append_edit(int argc, const char **argv, const char *prefix);
 
 static int add(int argc, const char **argv, const char *prefix)
 {
-	int retval = 0, force = 0;
+	int force = 0, allow_empty = 0;
 	const char *object_ref;
 	struct notes_tree *t;
 	unsigned char object[20], new_note[20];
-	char logmsg[100];
 	const unsigned char *note;
-	struct msg_arg msg = { 0, 0, STRBUF_INIT };
+	struct note_data d = { 0, 0, NULL, STRBUF_INIT };
 	struct option options[] = {
-		{ OPTION_CALLBACK, 'm', "message", &msg, N_("message"),
+		{ OPTION_CALLBACK, 'm', "message", &d, N_("message"),
 			N_("note contents as a string"), PARSE_OPT_NONEG,
 			parse_msg_arg},
-		{ OPTION_CALLBACK, 'F', "file", &msg, N_("file"),
+		{ OPTION_CALLBACK, 'F', "file", &d, N_("file"),
 			N_("note contents in a file"), PARSE_OPT_NONEG,
 			parse_file_arg},
-		{ OPTION_CALLBACK, 'c', "reedit-message", &msg, N_("object"),
+		{ OPTION_CALLBACK, 'c', "reedit-message", &d, N_("object"),
 			N_("reuse and edit specified note object"), PARSE_OPT_NONEG,
 			parse_reedit_arg},
-		{ OPTION_CALLBACK, 'C', "reuse-message", &msg, N_("object"),
+		{ OPTION_CALLBACK, 'C', "reuse-message", &d, N_("object"),
 			N_("reuse specified note object"), PARSE_OPT_NONEG,
 			parse_reuse_arg},
+		OPT_BOOL(0, "allow-empty", &allow_empty,
+			N_("allow storing empty note")),
 		OPT__FORCE(&force, N_("replace existing notes")),
 		OPT_END()
 	};
 
 	argc = parse_options(argc, argv, prefix, options, git_notes_add_usage,
 			     PARSE_OPT_KEEP_ARGV0);
@@ -436,47 +421,50 @@
 
 	t = init_notes_check("add");
 	note = get_note(t, object);
 
 	if (note) {
 		if (!force) {
-			if (!msg.given) {
-				/*
-				 * Redirect to "edit" subcommand.
-				 *
-				 * We only end up here if none of -m/-F/-c/-C
-				 * or -f are given. The original args are
-				 * therefore still in argv[0-1].
-				 */
-				argv[0] = "edit";
-				free_notes(t);
-				return append_edit(argc, argv, prefix);
+			free_notes(t);
+			if (d.given) {
+				free_note_data(&d);
+				return error(_("Cannot add notes. "
+					"Found existing notes for object %s. "
+					"Use '-f' to overwrite existing notes"),
+					sha1_to_hex(object));
 			}
-			retval = error(_("Cannot add notes. Found existing notes "
-				       "for object %s. Use '-f' to overwrite "
-				       "existing notes"), sha1_to_hex(object));
-			goto out;
+			/*
+			 * Redirect to "edit" subcommand.
+			 *
+			 * We only end up here if none of -m/-F/-c/-C or -f are
+			 * given. The original args are therefore still in
+			 * argv[0-1].
+			 */
+			argv[0] = "edit";
+			return append_edit(argc, argv, prefix);
 		}
 		fprintf(stderr, _("Overwriting existing notes for object %s\n"),
 			sha1_to_hex(object));
 	}
 
-	create_note(object, &msg, 0, note, new_note);
-
-	if (is_null_sha1(new_note))
+	prepare_note_data(object, &d, note);
+	if (d.buf.len || allow_empty) {
+		write_note_data(&d, new_note);
+		if (add_note(t, object, new_note, combine_notes_overwrite))
+			die("BUG: combine_notes_overwrite failed");
+		commit_notes(t, "Notes added by 'git notes add'");
+	} else {
+		fprintf(stderr, _("Removing note for object %s\n"),
+			sha1_to_hex(object));
 		remove_note(t, object);
-	else if (add_note(t, object, new_note, combine_notes_overwrite))
-		die("BUG: combine_notes_overwrite failed");
+		commit_notes(t, "Notes removed by 'git notes add'");
+	}
 
-	snprintf(logmsg, sizeof(logmsg), "Notes %s by 'git notes %s'",
-		 is_null_sha1(new_note) ? "removed" : "added", "add");
-	commit_notes(t, logmsg);
-out:
+	free_note_data(&d);
 	free_notes(t);
-	strbuf_release(&(msg.buf));
-	return retval;
+	return 0;
 }
 
 static int copy(int argc, const char **argv, const char *prefix)
 {
 	int retval = 0, force = 0, from_stdin = 0;
 	const unsigned char *from_note, *note;
@@ -551,32 +539,35 @@
 	free_notes(t);
 	return retval;
 }
 
 static int append_edit(int argc, const char **argv, const char *prefix)
 {
+	int allow_empty = 0;
 	const char *object_ref;
 	struct notes_tree *t;
 	unsigned char object[20], new_note[20];
 	const unsigned char *note;
 	char logmsg[100];
 	const char * const *usage;
-	struct msg_arg msg = { 0, 0, STRBUF_INIT };
+	struct note_data d = { 0, 0, NULL, STRBUF_INIT };
 	struct option options[] = {
-		{ OPTION_CALLBACK, 'm', "message", &msg, N_("message"),
+		{ OPTION_CALLBACK, 'm', "message", &d, N_("message"),
 			N_("note contents as a string"), PARSE_OPT_NONEG,
 			parse_msg_arg},
-		{ OPTION_CALLBACK, 'F', "file", &msg, N_("file"),
+		{ OPTION_CALLBACK, 'F', "file", &d, N_("file"),
 			N_("note contents in a file"), PARSE_OPT_NONEG,
 			parse_file_arg},
-		{ OPTION_CALLBACK, 'c', "reedit-message", &msg, N_("object"),
+		{ OPTION_CALLBACK, 'c', "reedit-message", &d, N_("object"),
 			N_("reuse and edit specified note object"), PARSE_OPT_NONEG,
 			parse_reedit_arg},
-		{ OPTION_CALLBACK, 'C', "reuse-message", &msg, N_("object"),
+		{ OPTION_CALLBACK, 'C', "reuse-message", &d, N_("object"),
 			N_("reuse specified note object"), PARSE_OPT_NONEG,
 			parse_reuse_arg},
+		OPT_BOOL(0, "allow-empty", &allow_empty,
+			N_("allow storing empty note")),
 		OPT_END()
 	};
 	int edit = !strcmp(argv[0], "edit");
 
 	usage = edit ? git_notes_edit_usage : git_notes_append_usage;
 	argc = parse_options(argc, argv, prefix, options, usage,
@@ -584,37 +575,58 @@
 
 	if (2 < argc) {
 		error(_("too many parameters"));
 		usage_with_options(usage, options);
 	}
 
-	if (msg.given && edit)
+	if (d.given && edit)
 		fprintf(stderr, _("The -m/-F/-c/-C options have been deprecated "
 			"for the 'edit' subcommand.\n"
 			"Please use 'git notes add -f -m/-F/-c/-C' instead.\n"));
 
 	object_ref = 1 < argc ? argv[1] : "HEAD";
 
 	if (get_sha1(object_ref, object))
 		die(_("Failed to resolve '%s' as a valid ref."), object_ref);
 
 	t = init_notes_check(argv[0]);
 	note = get_note(t, object);
 
-	create_note(object, &msg, !edit, note, new_note);
+	prepare_note_data(object, &d, edit ? note : NULL);
 
-	if (is_null_sha1(new_note))
-		remove_note(t, object);
-	else if (add_note(t, object, new_note, combine_notes_overwrite))
-		die("BUG: combine_notes_overwrite failed");
+	if (note && !edit) {
+		/* Append buf to previous note contents */
+		unsigned long size;
+		enum object_type type;
+		char *prev_buf = read_sha1_file(note, &type, &size);
+
+		strbuf_grow(&d.buf, size + 1);
+		if (d.buf.len && prev_buf && size)
+			strbuf_insert(&d.buf, 0, "\n", 1);
+		if (prev_buf && size)
+			strbuf_insert(&d.buf, 0, prev_buf, size);
+		free(prev_buf);
+	}
 
-	snprintf(logmsg, sizeof(logmsg), "Notes %s by 'git notes %s'",
-		 is_null_sha1(new_note) ? "removed" : "added", argv[0]);
+	if (d.buf.len || allow_empty) {
+		write_note_data(&d, new_note);
+		if (add_note(t, object, new_note, combine_notes_overwrite))
+			die("BUG: combine_notes_overwrite failed");
+		snprintf(logmsg, sizeof(logmsg), "Notes added by 'git notes %s'",
+			argv[0]);
+	} else {
+		fprintf(stderr, _("Removing note for object %s\n"),
+			sha1_to_hex(object));
+		remove_note(t, object);
+		snprintf(logmsg, sizeof(logmsg), "Notes removed by 'git notes %s'",
+			argv[0]);
+	}
 	commit_notes(t, logmsg);
+
+	free_note_data(&d);
 	free_notes(t);
-	strbuf_release(&(msg.buf));
 	return 0;
 }
 
 static int show(int argc, const char **argv, const char *prefix)
 {
 	const char *object_ref;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/notes.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/notes.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/notes.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/notes.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/pack-objects.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/pack-objects.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/pack-objects.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/pack-objects.c	2015-02-06 05:40:08.000000000 +0800
@@ -2610,12 +2610,13 @@
 	  PARSE_OPT_NONEG, option_parse_ulong }
 
 int cmd_pack_objects(int argc, const char **argv, const char *prefix)
 {
 	int use_internal_rev_list = 0;
 	int thin = 0;
+	int shallow = 0;
 	int all_progress_implied = 0;
 	struct argv_array rp = ARGV_ARRAY_INIT;
 	int rev_list_unpacked = 0, rev_list_all = 0, rev_list_reflog = 0;
 	int rev_list_index = 0;
 	struct option pack_objects_options[] = {
 		OPT_SET_INT('q', "quiet", &progress,
@@ -2674,12 +2675,14 @@
 			 N_("keep unreachable objects")),
 		{ OPTION_CALLBACK, 0, "unpack-unreachable", NULL, N_("time"),
 		  N_("unpack unreachable objects newer than <time>"),
 		  PARSE_OPT_OPTARG, option_parse_unpack_unreachable },
 		OPT_BOOL(0, "thin", &thin,
 			 N_("create thin packs")),
+		OPT_BOOL(0, "shallow", &shallow,
+			 N_("create packs suitable for shallow fetches")),
 		OPT_BOOL(0, "honor-pack-keep", &ignore_packed_keep,
 			 N_("ignore packs that have companion .keep file")),
 		OPT_INTEGER(0, "compression", &pack_compression_level,
 			    N_("pack compression level")),
 		OPT_SET_INT(0, "keep-true-parents", &grafts_replace_parents,
 			    N_("do not hide commits by grafts"), 0),
@@ -2708,13 +2711,15 @@
 	if (pack_to_stdout != !base_name || argc)
 		usage_with_options(pack_usage, pack_objects_options);
 
 	argv_array_push(&rp, "pack-objects");
 	if (thin) {
 		use_internal_rev_list = 1;
-		argv_array_push(&rp, "--objects-edge");
+		argv_array_push(&rp, shallow
+				? "--objects-edge-aggressive"
+				: "--objects-edge");
 	} else
 		argv_array_push(&rp, "--objects");
 
 	if (rev_list_all) {
 		use_internal_rev_list = 1;
 		argv_array_push(&rp, "--all");
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/pack-objects.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/pack-objects.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/pack-objects.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/pack-objects.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/pack-redundant.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/pack-redundant.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/pack-redundant.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/pack-redundant.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/pack-refs.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/pack-refs.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/pack-refs.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/pack-refs.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/patch-id.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/patch-id.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/patch-id.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/patch-id.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/prune.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/prune.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/prune.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/prune.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/prune-packed.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/prune-packed.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/prune-packed.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/prune-packed.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/push.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/push.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/push.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/push.c	2015-02-06 05:40:08.000000000 +0800
@@ -500,13 +500,13 @@
 		OPT_BIT( 0,  "porcelain", &flags, N_("machine-readable output"), TRANSPORT_PUSH_PORCELAIN),
 		OPT_BIT('f', "force", &flags, N_("force updates"), TRANSPORT_PUSH_FORCE),
 		{ OPTION_CALLBACK,
 		  0, CAS_OPT_NAME, &cas, N_("refname>:<expect"),
 		  N_("require old value of ref to be at this value"),
 		  PARSE_OPT_OPTARG, parseopt_push_cas_option },
-		{ OPTION_CALLBACK, 0, "recurse-submodules", &flags, N_("check"),
+		{ OPTION_CALLBACK, 0, "recurse-submodules", &flags, "check|on-demand",
 			N_("control recursive pushing of submodules"),
 			PARSE_OPT_OPTARG, option_parse_recurse_submodules },
 		OPT_BOOL( 0 , "thin", &thin, N_("use thin pack")),
 		OPT_STRING( 0 , "receive-pack", &receivepack, "receive-pack", N_("receive pack program")),
 		OPT_STRING( 0 , "exec", &receivepack, "receive-pack", N_("receive pack program")),
 		OPT_BIT('u', "set-upstream", &flags, N_("set upstream for git pull/status"),
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/push.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/push.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/push.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/push.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/read-tree.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/read-tree.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/read-tree.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/read-tree.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/receive-pack.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/receive-pack.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/receive-pack.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/receive-pack.c	2015-02-06 05:40:08.000000000 +0800
@@ -23,13 +23,14 @@
 static const char receive_pack_usage[] = "git receive-pack <git-dir>";
 
 enum deny_action {
 	DENY_UNCONFIGURED,
 	DENY_IGNORE,
 	DENY_WARN,
-	DENY_REFUSE
+	DENY_REFUSE,
+	DENY_UPDATE_INSTEAD
 };
 
 static int deny_deletes;
 static int deny_non_fast_forwards;
 static enum deny_action deny_current_branch = DENY_UNCONFIGURED;
 static enum deny_action deny_delete_current = DENY_UNCONFIGURED;
@@ -73,12 +74,14 @@
 		if (!strcasecmp(value, "ignore"))
 			return DENY_IGNORE;
 		if (!strcasecmp(value, "warn"))
 			return DENY_WARN;
 		if (!strcasecmp(value, "refuse"))
 			return DENY_REFUSE;
+		if (!strcasecmp(value, "updateinstead"))
+			return DENY_UPDATE_INSTEAD;
 	}
 	if (git_config_bool(var, value))
 		return DENY_REFUSE;
 	return DENY_IGNORE;
 }
 
@@ -727,17 +730,95 @@
 
 	si->shallow_ref[cmd->index] = 0;
 	sha1_array_clear(&extra);
 	return 0;
 }
 
+static const char *update_worktree(unsigned char *sha1)
+{
+	const char *update_refresh[] = {
+		"update-index", "-q", "--ignore-submodules", "--refresh", NULL
+	};
+	const char *diff_files[] = {
+		"diff-files", "--quiet", "--ignore-submodules", "--", NULL
+	};
+	const char *diff_index[] = {
+		"diff-index", "--quiet", "--cached", "--ignore-submodules",
+		"HEAD", "--", NULL
+	};
+	const char *read_tree[] = {
+		"read-tree", "-u", "-m", NULL, NULL
+	};
+	const char *work_tree = git_work_tree_cfg ? git_work_tree_cfg : "..";
+	struct argv_array env = ARGV_ARRAY_INIT;
+	struct child_process child = CHILD_PROCESS_INIT;
+
+	if (is_bare_repository())
+		return "denyCurrentBranch = updateInstead needs a worktree";
+
+	argv_array_pushf(&env, "GIT_DIR=%s", absolute_path(get_git_dir()));
+
+	child.argv = update_refresh;
+	child.env = env.argv;
+	child.dir = work_tree;
+	child.no_stdin = 1;
+	child.stdout_to_stderr = 1;
+	child.git_cmd = 1;
+	if (run_command(&child)) {
+		argv_array_clear(&env);
+		return "Up-to-date check failed";
+	}
+
+	/* run_command() does not clean up completely; reinitialize */
+	child_process_init(&child);
+	child.argv = diff_files;
+	child.env = env.argv;
+	child.dir = work_tree;
+	child.no_stdin = 1;
+	child.stdout_to_stderr = 1;
+	child.git_cmd = 1;
+	if (run_command(&child)) {
+		argv_array_clear(&env);
+		return "Working directory has unstaged changes";
+	}
+
+	child_process_init(&child);
+	child.argv = diff_index;
+	child.env = env.argv;
+	child.no_stdin = 1;
+	child.no_stdout = 1;
+	child.stdout_to_stderr = 0;
+	child.git_cmd = 1;
+	if (run_command(&child)) {
+		argv_array_clear(&env);
+		return "Working directory has staged changes";
+	}
+
+	read_tree[3] = sha1_to_hex(sha1);
+	child_process_init(&child);
+	child.argv = read_tree;
+	child.env = env.argv;
+	child.dir = work_tree;
+	child.no_stdin = 1;
+	child.no_stdout = 1;
+	child.stdout_to_stderr = 0;
+	child.git_cmd = 1;
+	if (run_command(&child)) {
+		argv_array_clear(&env);
+		return "Could not update working tree to new HEAD";
+	}
+
+	argv_array_clear(&env);
+	return NULL;
+}
+
 static const char *update(struct command *cmd, struct shallow_info *si)
 {
 	const char *name = cmd->ref_name;
 	struct strbuf namespaced_name_buf = STRBUF_INIT;
-	const char *namespaced_name;
+	const char *namespaced_name, *ret;
 	unsigned char *old_sha1 = cmd->old_sha1;
 	unsigned char *new_sha1 = cmd->new_sha1;
 
 	/* only refs/... are allowed */
 	if (!starts_with(name, "refs/") || check_refname_format(name + 5, 0)) {
 		rp_error("refusing to create funny ref '%s' remotely", name);
@@ -757,12 +838,17 @@
 		case DENY_REFUSE:
 		case DENY_UNCONFIGURED:
 			rp_error("refusing to update checked out branch: %s", name);
 			if (deny_current_branch == DENY_UNCONFIGURED)
 				refuse_unconfigured_deny();
 			return "branch is currently checked out";
+		case DENY_UPDATE_INSTEAD:
+			ret = update_worktree(new_sha1);
+			if (ret)
+				return ret;
+			break;
 		}
 	}
 
 	if (!is_null_sha1(new_sha1) && !has_sha1_file(new_sha1)) {
 		error("unpack should have generated %s, "
 		      "but I can't find it!", sha1_to_hex(new_sha1));
@@ -781,16 +867,19 @@
 				break;
 			case DENY_WARN:
 				rp_warning("deleting the current branch");
 				break;
 			case DENY_REFUSE:
 			case DENY_UNCONFIGURED:
+			case DENY_UPDATE_INSTEAD:
 				if (deny_delete_current == DENY_UNCONFIGURED)
 					refuse_unconfigured_deny_delete_current();
 				rp_error("refusing to delete the current branch: %s", name);
 				return "deletion of the current branch prohibited";
+			default:
+				return "Invalid denyDeleteCurrent setting";
 			}
 		}
 	}
 
 	if (deny_non_fast_forwards && !is_null_sha1(new_sha1) &&
 	    !is_null_sha1(old_sha1) &&
@@ -961,13 +1050,13 @@
 
 	for (cmd = commands; cmd; cmd = cmd->next) {
 		struct string_list_item *item =
 			string_list_append(&ref_list, cmd->ref_name);
 		item->util = (void *)cmd;
 	}
-	sort_string_list(&ref_list);
+	string_list_sort(&ref_list);
 
 	for (cmd = commands; cmd; cmd = cmd->next) {
 		if (!cmd->error_string)
 			check_aliased_update(cmd, &ref_list);
 	}
 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/receive-pack.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/receive-pack.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/receive-pack.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/receive-pack.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/reflog.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/reflog.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/reflog.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/reflog.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/remote.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/remote.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/remote.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/remote.c	2015-02-06 05:40:08.000000000 +0800
@@ -177,13 +177,15 @@
 		die(_("specifying branches to track makes sense only with fetch mirrors"));
 
 	name = argv[0];
 	url = argv[1];
 
 	remote = remote_get(name);
-	if (remote && (remote->url_nr > 1 || strcmp(name, remote->url[0]) ||
+	if (remote && (remote->url_nr > 1 ||
+			(strcmp(name, remote->url[0]) &&
+				strcmp(url, remote->url[0])) ||
 			remote->fetch_refspec_nr))
 		die(_("remote %s already exists."), name);
 
 	strbuf_addf(&buf2, "refs/heads/test:refs/remotes/%s/test", name);
 	if (!valid_fetch_refspec(buf2.buf))
 		die(_("'%s' is not a valid remote name"), name);
@@ -349,15 +351,15 @@
 			string_list_append(&states->stale, abbrev_branch(ref->name));
 		item->util = xstrdup(ref->name);
 	}
 	free_refs(stale_refs);
 	free_refs(fetch_map);
 
-	sort_string_list(&states->new);
-	sort_string_list(&states->tracked);
-	sort_string_list(&states->stale);
+	string_list_sort(&states->new);
+	string_list_sort(&states->tracked);
+	string_list_sort(&states->stale);
 
 	return 0;
 }
 
 struct push_info {
 	char *dest;
@@ -747,22 +749,17 @@
 	return 0;
 }
 
 static int remove_branches(struct string_list *branches)
 {
 	struct strbuf err = STRBUF_INIT;
-	const char **branch_names;
 	int i, result = 0;
 
-	branch_names = xmalloc(branches->nr * sizeof(*branch_names));
-	for (i = 0; i < branches->nr; i++)
-		branch_names[i] = branches->items[i].string;
-	if (repack_without_refs(branch_names, branches->nr, &err))
+	if (repack_without_refs(branches, &err))
 		result |= error("%s", err.buf);
 	strbuf_release(&err);
-	free(branch_names);
 
 	for (i = 0; i < branches->nr; i++) {
 		struct string_list_item *item = branches->items + i;
 		const char *refname = item->string;
 
 		if (delete_ref(refname, NULL, 0))
@@ -911,13 +908,13 @@
 		if (query & GET_HEAD_NAMES)
 			get_head_names(remote_refs, states);
 		if (query & GET_PUSH_REF_STATES)
 			get_push_ref_states(remote_refs, states);
 	} else {
 		for_each_ref(append_ref_to_tracked_list, states);
-		sort_string_list(&states->tracked);
+		string_list_sort(&states->tracked);
 		get_push_ref_states_noquery(states);
 	}
 
 	return 0;
 }
 
@@ -1130,13 +1127,13 @@
 	list.strdup_strings = 1;
 	result = for_each_remote(get_one_entry, &list);
 
 	if (!result) {
 		int i;
 
-		sort_string_list(&list);
+		string_list_sort(&list);
 		for (i = 0; i < list.nr; i++) {
 			struct string_list_item *item = list.items + i;
 			if (verbose)
 				printf("%s\t%s\n", item->string,
 					item->util ? (const char *)item->util : "");
 			else {
@@ -1311,62 +1308,62 @@
 	strbuf_release(&buf2);
 	return result;
 }
 
 static int prune_remote(const char *remote, int dry_run)
 {
-	int result = 0, i;
+	int result = 0;
 	struct ref_states states;
-	struct string_list delete_refs_list = STRING_LIST_INIT_NODUP;
-	const char **delete_refs;
+	struct string_list refs_to_prune = STRING_LIST_INIT_NODUP;
+	struct string_list_item *item;
 	const char *dangling_msg = dry_run
 		? _(" %s will become dangling!")
 		: _(" %s has become dangling!");
 
 	memset(&states, 0, sizeof(states));
 	get_remote_ref_states(remote, &states, GET_REF_STATES);
 
-	if (states.stale.nr) {
-		printf_ln(_("Pruning %s"), remote);
-		printf_ln(_("URL: %s"),
-		       states.remote->url_nr
-		       ? states.remote->url[0]
-		       : _("(no URL)"));
-
-		delete_refs = xmalloc(states.stale.nr * sizeof(*delete_refs));
-		for (i = 0; i < states.stale.nr; i++)
-			delete_refs[i] = states.stale.items[i].util;
-		if (!dry_run) {
-			struct strbuf err = STRBUF_INIT;
-			if (repack_without_refs(delete_refs, states.stale.nr,
-						&err))
-				result |= error("%s", err.buf);
-			strbuf_release(&err);
-		}
-		free(delete_refs);
+	if (!states.stale.nr) {
+		free_remote_ref_states(&states);
+		return 0;
 	}
 
-	for (i = 0; i < states.stale.nr; i++) {
-		const char *refname = states.stale.items[i].util;
+	printf_ln(_("Pruning %s"), remote);
+	printf_ln(_("URL: %s"),
+		  states.remote->url_nr
+		  ? states.remote->url[0]
+		  : _("(no URL)"));
+
+	for_each_string_list_item(item, &states.stale)
+		string_list_append(&refs_to_prune, item->util);
+	string_list_sort(&refs_to_prune);
+
+	if (!dry_run) {
+		struct strbuf err = STRBUF_INIT;
+		if (repack_without_refs(&refs_to_prune, &err))
+			result |= error("%s", err.buf);
+		strbuf_release(&err);
+	}
 
-		string_list_insert(&delete_refs_list, refname);
+	for_each_string_list_item(item, &states.stale) {
+		const char *refname = item->util;
 
 		if (!dry_run)
 			result |= delete_ref(refname, NULL, 0);
 
 		if (dry_run)
 			printf_ln(_(" * [would prune] %s"),
 			       abbrev_ref(refname, "refs/remotes/"));
 		else
 			printf_ln(_(" * [pruned] %s"),
 			       abbrev_ref(refname, "refs/remotes/"));
 	}
 
-	warn_dangling_symrefs(stdout, dangling_msg, &delete_refs_list);
-	string_list_clear(&delete_refs_list, 0);
+	warn_dangling_symrefs(stdout, dangling_msg, &refs_to_prune);
 
+	string_list_clear(&refs_to_prune, 0);
 	free_remote_ref_states(&states);
 	return result;
 }
 
 static int prune(int argc, const char **argv)
 {
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/remote.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/remote.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/remote-ext.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/remote-ext.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/remote-ext.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/remote-ext.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/remote-fd.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/remote-fd.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/remote-fd.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/remote-fd.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/remote.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/remote.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/repack.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/repack.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/repack.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/repack.c	2015-02-06 05:40:08.000000000 +0800
@@ -132,13 +132,12 @@
 		{".pack"},
 		{".idx"},
 		{".bitmap", 1},
 	};
 	struct child_process cmd = CHILD_PROCESS_INIT;
 	struct string_list_item *item;
-	struct argv_array cmd_args = ARGV_ARRAY_INIT;
 	struct string_list names = STRING_LIST_INIT_DUP;
 	struct string_list rollback = STRING_LIST_INIT_NODUP;
 	struct string_list existing_packs = STRING_LIST_INIT_DUP;
 	struct strbuf line = STRBUF_INIT;
 	int ext, ret, failed;
 	FILE *out;
@@ -199,62 +198,61 @@
 
 	packdir = mkpathdup("%s/pack", get_object_directory());
 	packtmp = mkpathdup("%s/.tmp-%d-pack", packdir, (int)getpid());
 
 	sigchain_push_common(remove_pack_on_signal);
 
-	argv_array_push(&cmd_args, "pack-objects");
-	argv_array_push(&cmd_args, "--keep-true-parents");
+	argv_array_push(&cmd.args, "pack-objects");
+	argv_array_push(&cmd.args, "--keep-true-parents");
 	if (!pack_kept_objects)
-		argv_array_push(&cmd_args, "--honor-pack-keep");
-	argv_array_push(&cmd_args, "--non-empty");
-	argv_array_push(&cmd_args, "--all");
-	argv_array_push(&cmd_args, "--reflog");
-	argv_array_push(&cmd_args, "--indexed-objects");
+		argv_array_push(&cmd.args, "--honor-pack-keep");
+	argv_array_push(&cmd.args, "--non-empty");
+	argv_array_push(&cmd.args, "--all");
+	argv_array_push(&cmd.args, "--reflog");
+	argv_array_push(&cmd.args, "--indexed-objects");
 	if (window)
-		argv_array_pushf(&cmd_args, "--window=%s", window);
+		argv_array_pushf(&cmd.args, "--window=%s", window);
 	if (window_memory)
-		argv_array_pushf(&cmd_args, "--window-memory=%s", window_memory);
+		argv_array_pushf(&cmd.args, "--window-memory=%s", window_memory);
 	if (depth)
-		argv_array_pushf(&cmd_args, "--depth=%s", depth);
+		argv_array_pushf(&cmd.args, "--depth=%s", depth);
 	if (max_pack_size)
-		argv_array_pushf(&cmd_args, "--max-pack-size=%s", max_pack_size);
+		argv_array_pushf(&cmd.args, "--max-pack-size=%s", max_pack_size);
 	if (no_reuse_delta)
-		argv_array_pushf(&cmd_args, "--no-reuse-delta");
+		argv_array_pushf(&cmd.args, "--no-reuse-delta");
 	if (no_reuse_object)
-		argv_array_pushf(&cmd_args, "--no-reuse-object");
+		argv_array_pushf(&cmd.args, "--no-reuse-object");
 	if (write_bitmaps)
-		argv_array_push(&cmd_args, "--write-bitmap-index");
+		argv_array_push(&cmd.args, "--write-bitmap-index");
 
 	if (pack_everything & ALL_INTO_ONE) {
 		get_non_kept_pack_filenames(&existing_packs);
 
 		if (existing_packs.nr && delete_redundant) {
 			if (unpack_unreachable)
-				argv_array_pushf(&cmd_args,
+				argv_array_pushf(&cmd.args,
 						"--unpack-unreachable=%s",
 						unpack_unreachable);
 			else if (pack_everything & LOOSEN_UNREACHABLE)
-				argv_array_push(&cmd_args,
+				argv_array_push(&cmd.args,
 						"--unpack-unreachable");
 		}
 	} else {
-		argv_array_push(&cmd_args, "--unpacked");
-		argv_array_push(&cmd_args, "--incremental");
+		argv_array_push(&cmd.args, "--unpacked");
+		argv_array_push(&cmd.args, "--incremental");
 	}
 
 	if (local)
-		argv_array_push(&cmd_args,  "--local");
+		argv_array_push(&cmd.args,  "--local");
 	if (quiet)
-		argv_array_push(&cmd_args,  "--quiet");
+		argv_array_push(&cmd.args,  "--quiet");
 	if (delta_base_offset)
-		argv_array_push(&cmd_args,  "--delta-base-offset");
+		argv_array_push(&cmd.args,  "--delta-base-offset");
 
-	argv_array_push(&cmd_args, packtmp);
+	argv_array_push(&cmd.args, packtmp);
 
-	cmd.argv = cmd_args.argv;
 	cmd.git_cmd = 1;
 	cmd.out = -1;
 	cmd.no_stdin = 1;
 
 	ret = start_command(&cmd);
 	if (ret)
@@ -267,13 +265,12 @@
 		string_list_append(&names, line.buf);
 	}
 	fclose(out);
 	ret = finish_command(&cmd);
 	if (ret)
 		return ret;
-	argv_array_clear(&cmd_args);
 
 	if (!names.nr && !quiet)
 		printf("Nothing new to pack.\n");
 
 	/*
 	 * Ok we have prepared all new packfiles.
@@ -376,13 +373,13 @@
 	}
 
 	/* End of pack replacement. */
 
 	if (delete_redundant) {
 		int opts = 0;
-		sort_string_list(&names);
+		string_list_sort(&names);
 		for_each_string_list_item(item, &existing_packs) {
 			char *sha1;
 			size_t len = strlen(item->string);
 			if (len < 40)
 				continue;
 			sha1 = item->string + len - 40;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/repack.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/repack.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/repack.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/repack.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/replace.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/replace.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/replace.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/replace.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/rerere.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/rerere.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/rerere.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/rerere.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/reset.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/reset.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/reset.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/reset.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/revert.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/revert.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/revert.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/revert.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/rev-list.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/rev-list.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/rev-list.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/rev-list.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/rev-parse.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/rev-parse.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/rev-parse.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/rev-parse.c	2015-02-06 05:40:08.000000000 +0800
@@ -276,13 +276,13 @@
 		show_rev(symmetric ? NORMAL : REVERSED, sha1, this);
 		if (symmetric) {
 			struct commit_list *exclude;
 			struct commit *a, *b;
 			a = lookup_commit_reference(sha1);
 			b = lookup_commit_reference(end);
-			exclude = get_merge_bases(a, b, 1);
+			exclude = get_merge_bases(a, b);
 			while (exclude) {
 				struct commit_list *n = exclude->next;
 				show_rev(REVERSED,
 					 exclude->item->object.sha1,NULL);
 				free(exclude);
 				exclude = n;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/rev-parse.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/rev-parse.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/rev-parse.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/rev-parse.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/rm.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/rm.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/rm.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/rm.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/send-pack.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/send-pack.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/send-pack.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/send-pack.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/shortlog.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/shortlog.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/shortlog.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/shortlog.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/show-branch.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/show-branch.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/show-branch.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/show-branch.c	2015-02-06 05:40:08.000000000 +0800
@@ -3,13 +3,16 @@
 #include "refs.h"
 #include "builtin.h"
 #include "color.h"
 #include "parse-options.h"
 
 static const char* show_branch_usage[] = {
-    N_("git show-branch [-a|--all] [-r|--remotes] [--topo-order | --date-order] [--current] [--color[=<when>] | --no-color] [--sparse] [--more=<n> | --list | --independent | --merge-base] [--no-name | --sha1-name] [--topics] [(<rev> | <glob>)...]"),
+    N_("git show-branch [-a|--all] [-r|--remotes] [--topo-order | --date-order]\n"
+       "		[--current] [--color[=<when>] | --no-color] [--sparse]\n"
+       "		[--more=<n> | --list | --independent | --merge-base]\n"
+       "		[--no-name | --sha1-name] [--topics] [(<rev> | <glob>)...]"),
     N_("git show-branch (-g|--reflog)[=<n>[,<base>]] [--list] [<ref>]"),
     NULL
 };
 
 static int showbranch_use_color = -1;
 
@@ -717,12 +720,13 @@
 	/* If nothing is specified, show all branches by default */
 	if (ac + all_heads + all_remotes == 0)
 		all_heads = 1;
 
 	if (reflog) {
 		unsigned char sha1[20];
+		char nth_desc[256];
 		char *ref;
 		int base = 0;
 		unsigned int flags = 0;
 
 		if (ac == 0) {
 			static const char *fake_av[2];
@@ -755,13 +759,12 @@
 					    NULL, NULL, &base);
 			}
 		}
 
 		for (i = 0; i < reflog; i++) {
 			char *logmsg;
-			char *nth_desc;
 			const char *msg;
 			unsigned long timestamp;
 			int tz;
 
 			if (read_ref_at(ref, flags, 0, base+i, sha1, &logmsg,
 					&timestamp, &tz, NULL)) {
@@ -774,16 +777,14 @@
 			else
 				msg++;
 			reflog_msg[i] = xstrfmt("(%s) %s",
 						show_date(timestamp, tz, 1),
 						msg);
 			free(logmsg);
-
-			nth_desc = xstrfmt("%s@{%d}", *av, base+i);
+			sprintf(nth_desc, "%s@{%d}", *av, base+i);
 			append_ref(nth_desc, sha1, 1);
-			free(nth_desc);
 		}
 		free(ref);
 	}
 	else if (all_heads + all_remotes)
 		snarf_refs(all_heads, all_remotes);
 	else {
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/show-branch.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/show-branch.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/show-branch.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/show-branch.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/show-ref.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/show-ref.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/show-ref.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/show-ref.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/stripspace.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/stripspace.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/stripspace.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/stripspace.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/symbolic-ref.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/symbolic-ref.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/symbolic-ref.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/symbolic-ref.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/tag.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/tag.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/tag.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/tag.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/unpack-file.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/unpack-file.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/unpack-file.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/unpack-file.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/unpack-objects.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/unpack-objects.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/unpack-objects.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/unpack-objects.c	2015-02-06 05:40:08.000000000 +0800
@@ -88,13 +88,13 @@
 	consumed_bytes += bytes;
 }
 
 static void *get_data(unsigned long size)
 {
 	git_zstream stream;
-	void *buf = xmalloc(size);
+	void *buf = xmallocz(size);
 
 	memset(&stream, 0, sizeof(stream));
 
 	stream.next_out = buf;
 	stream.avail_out = size;
 	stream.next_in = fill(1);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/unpack-objects.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/unpack-objects.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/unpack-objects.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/unpack-objects.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/update-index.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/update-index.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/update-index.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/update-index.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/update-ref.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/update-ref.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/update-ref.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/update-ref.c	2015-02-06 05:40:08.000000000 +0800
@@ -279,32 +279,28 @@
 				    struct strbuf *input, const char *next)
 {
 	struct strbuf err = STRBUF_INIT;
 	char *refname;
 	unsigned char new_sha1[20];
 	unsigned char old_sha1[20];
-	int have_old;
 
 	refname = parse_refname(input, &next);
 	if (!refname)
 		die("verify: missing <ref>");
 
 	if (parse_next_sha1(input, &next, old_sha1, "verify", refname,
-			    PARSE_SHA1_OLD)) {
-		hashclr(new_sha1);
-		have_old = 0;
-	} else {
-		hashcpy(new_sha1, old_sha1);
-		have_old = 1;
-	}
+			    PARSE_SHA1_OLD))
+		hashclr(old_sha1);
+
+	hashcpy(new_sha1, old_sha1);
 
 	if (*next != line_termination)
 		die("verify %s: extra input: %s", refname, next);
 
 	if (ref_transaction_update(transaction, refname, new_sha1, old_sha1,
-				   update_flags, have_old, msg, &err))
+				   update_flags, 1, msg, &err))
 		die("%s", err.buf);
 
 	update_flags = 0;
 	free(refname);
 	strbuf_release(&err);
 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/update-ref.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/update-ref.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/update-ref.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/update-ref.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/update-server-info.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/update-server-info.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/update-server-info.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/update-server-info.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/upload-archive.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/upload-archive.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/upload-archive.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/upload-archive.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/var.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/var.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/var.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/var.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/verify-commit.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/verify-commit.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/verify-commit.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/verify-commit.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/verify-pack.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/verify-pack.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/verify-pack.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/verify-pack.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/verify-tag.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/verify-tag.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/verify-tag.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/verify-tag.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/write-tree.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/write-tree.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/write-tree.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/write-tree.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bulk-checkin.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bulk-checkin.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bulk-checkin.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bulk-checkin.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bundle.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bundle.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bundle.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bundle.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/cache.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/cache.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/cache.h	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/cache.h	2015-02-06 05:40:08.000000000 +0800
@@ -62,19 +62,12 @@
 
 /*
  * A "directory link" is a link to another git directory.
  *
  * The value 0160000 is not normally a valid mode, and
  * also just happens to be S_IFDIR + S_IFLNK
- *
- * NOTE! We *really* shouldn't depend on the S_IFxxx macros
- * always having the same values everywhere. We should use
- * our internal git values for these things, and then we can
- * translate that to the OS-specific value. It just so
- * happens that everybody shares the same bit representation
- * in the UNIX world (and apparently wider too..)
  */
 #define S_IFGITLINK	0160000
 #define S_ISGITLINK(m)	(((m) & S_IFMT) == S_IFGITLINK)
 
 /*
  * Some mode bits are also used internally for computations.
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/cache-tree.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/cache-tree.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/cache-tree.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/cache-tree.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/color.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/color.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/color.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/color.c	2015-02-06 05:40:08.000000000 +0800
@@ -23,36 +23,116 @@
 	GIT_COLOR_RESET,
 };
 
 /* Ignore the RESET at the end when giving the size */
 const int column_colors_ansi_max = ARRAY_SIZE(column_colors_ansi) - 1;
 
-static int parse_color(const char *name, int len)
+/* An individual foreground or background color. */
+struct color {
+	enum {
+		COLOR_UNSPECIFIED = 0,
+		COLOR_NORMAL,
+		COLOR_ANSI, /* basic 0-7 ANSI colors */
+		COLOR_256,
+		COLOR_RGB
+	} type;
+	/* The numeric value for ANSI and 256-color modes */
+	unsigned char value;
+	/* 24-bit RGB color values */
+	unsigned char red, green, blue;
+};
+
+/*
+ * "word" is a buffer of length "len"; does it match the NUL-terminated
+ * "match" exactly?
+ */
+static int match_word(const char *word, int len, const char *match)
+{
+	return !strncasecmp(word, match, len) && !match[len];
+}
+
+static int get_hex_color(const char *in, unsigned char *out)
+{
+	unsigned int val;
+	val = (hexval(in[0]) << 4) | hexval(in[1]);
+	if (val & ~0xff)
+		return -1;
+	*out = val;
+	return 0;
+}
+
+static int parse_color(struct color *out, const char *name, int len)
 {
+	/* Positions in array must match ANSI color codes */
 	static const char * const color_names[] = {
-		"normal", "black", "red", "green", "yellow",
+		"black", "red", "green", "yellow",
 		"blue", "magenta", "cyan", "white"
 	};
 	char *end;
 	int i;
+	long val;
+
+	/* First try the special word "normal"... */
+	if (match_word(name, len, "normal")) {
+		out->type = COLOR_NORMAL;
+		return 0;
+	}
+
+	/* Try a 24-bit RGB value */
+	if (len == 7 && name[0] == '#') {
+		if (!get_hex_color(name + 1, &out->red) &&
+		    !get_hex_color(name + 3, &out->green) &&
+		    !get_hex_color(name + 5, &out->blue)) {
+			out->type = COLOR_RGB;
+			return 0;
+		}
+	}
+
+	/* Then pick from our human-readable color names... */
 	for (i = 0; i < ARRAY_SIZE(color_names); i++) {
-		const char *str = color_names[i];
-		if (!strncasecmp(name, str, len) && !str[len])
-			return i - 1;
+		if (match_word(name, len, color_names[i])) {
+			out->type = COLOR_ANSI;
+			out->value = i;
+			return 0;
+		}
+	}
+
+	/* And finally try a literal 256-color-mode number */
+	val = strtol(name, &end, 10);
+	if (end - name == len) {
+		/*
+		 * Allow "-1" as an alias for "normal", but other negative
+		 * numbers are bogus.
+		 */
+		if (val < -1)
+			; /* fall through to error */
+		else if (val < 0) {
+			out->type = COLOR_NORMAL;
+			return 0;
+		/* Rewrite low numbers as more-portable standard colors. */
+		} else if (val < 8) {
+			out->type = COLOR_ANSI;
+			out->value = val;
+			return 0;
+		} else if (val < 256) {
+			out->type = COLOR_256;
+			out->value = val;
+			return 0;
+		}
 	}
-	i = strtol(name, &end, 10);
-	if (end - name == len && i >= -1 && i <= 255)
-		return i;
-	return -2;
+
+	return -1;
 }
 
 static int parse_attr(const char *name, int len)
 {
-	static const int attr_values[] = { 1, 2, 4, 5, 7 };
+	static const int attr_values[] = { 1, 2, 4, 5, 7,
+					   22, 22, 24, 25, 27 };
 	static const char * const attr_names[] = {
-		"bold", "dim", "ul", "blink", "reverse"
+		"bold", "dim", "ul", "blink", "reverse",
+		"nobold", "nodim", "noul", "noblink", "noreverse"
 	};
 	int i;
 	for (i = 0; i < ARRAY_SIZE(attr_names); i++) {
 		const char *str = attr_names[i];
 		if (!strncasecmp(name, str, len) && !str[len])
 			return attr_values[i];
@@ -62,28 +142,60 @@
 
 int color_parse(const char *value, char *dst)
 {
 	return color_parse_mem(value, strlen(value), dst);
 }
 
+/*
+ * Write the ANSI color codes for "c" to "out"; the string should
+ * already have the ANSI escape code in it. "out" should have enough
+ * space in it to fit any color.
+ */
+static char *color_output(char *out, const struct color *c, char type)
+{
+	switch (c->type) {
+	case COLOR_UNSPECIFIED:
+	case COLOR_NORMAL:
+		break;
+	case COLOR_ANSI:
+		*out++ = type;
+		*out++ = '0' + c->value;
+		break;
+	case COLOR_256:
+		out += sprintf(out, "%c8;5;%d", type, c->value);
+		break;
+	case COLOR_RGB:
+		out += sprintf(out, "%c8;2;%d;%d;%d", type,
+			       c->red, c->green, c->blue);
+		break;
+	}
+	return out;
+}
+
+static int color_empty(const struct color *c)
+{
+	return c->type <= COLOR_NORMAL;
+}
+
 int color_parse_mem(const char *value, int value_len, char *dst)
 {
 	const char *ptr = value;
 	int len = value_len;
 	unsigned int attr = 0;
-	int fg = -2;
-	int bg = -2;
+	struct color fg = { COLOR_UNSPECIFIED };
+	struct color bg = { COLOR_UNSPECIFIED };
 
 	if (!strncasecmp(value, "reset", len)) {
 		strcpy(dst, GIT_COLOR_RESET);
 		return 0;
 	}
 
 	/* [fg [bg]] [attr]... */
 	while (len > 0) {
 		const char *word = ptr;
+		struct color c;
 		int val, wordlen = 0;
 
 		while (len > 0 && !isspace(word[wordlen])) {
 			wordlen++;
 			len--;
 		}
@@ -91,32 +203,31 @@
 		ptr = word + wordlen;
 		while (len > 0 && isspace(*ptr)) {
 			ptr++;
 			len--;
 		}
 
-		val = parse_color(word, wordlen);
-		if (val >= -1) {
-			if (fg == -2) {
-				fg = val;
+		if (!parse_color(&c, word, wordlen)) {
+			if (fg.type == COLOR_UNSPECIFIED) {
+				fg = c;
 				continue;
 			}
-			if (bg == -2) {
-				bg = val;
+			if (bg.type == COLOR_UNSPECIFIED) {
+				bg = c;
 				continue;
 			}
 			goto bad;
 		}
 		val = parse_attr(word, wordlen);
 		if (0 <= val)
 			attr |= (1 << val);
 		else
 			goto bad;
 	}
 
-	if (attr || fg >= 0 || bg >= 0) {
+	if (attr || !color_empty(&fg) || !color_empty(&bg)) {
 		int sep = 0;
 		int i;
 
 		*dst++ = '\033';
 		*dst++ = '[';
 
@@ -124,33 +235,25 @@
 			unsigned bit = (1 << i);
 			if (!(attr & bit))
 				continue;
 			attr &= ~bit;
 			if (sep++)
 				*dst++ = ';';
-			*dst++ = '0' + i;
+			dst += sprintf(dst, "%d", i);
 		}
-		if (fg >= 0) {
+		if (!color_empty(&fg)) {
 			if (sep++)
 				*dst++ = ';';
-			if (fg < 8) {
-				*dst++ = '3';
-				*dst++ = '0' + fg;
-			} else {
-				dst += sprintf(dst, "38;5;%d", fg);
-			}
+			/* foreground colors are all in the 3x range */
+			dst = color_output(dst, &fg, '3');
 		}
-		if (bg >= 0) {
+		if (!color_empty(&bg)) {
 			if (sep++)
 				*dst++ = ';';
-			if (bg < 8) {
-				*dst++ = '4';
-				*dst++ = '0' + bg;
-			} else {
-				dst += sprintf(dst, "48;5;%d", bg);
-			}
+			/* background colors are all in the 4x range */
+			dst = color_output(dst, &bg, '4');
 		}
 		*dst++ = 'm';
 	}
 	*dst = 0;
 	return 0;
 bad:
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/color.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/color.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/color.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/color.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/color.h	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/color.h	2015-02-06 05:40:08.000000000 +0800
@@ -5,21 +5,21 @@
 
 /*  2 + (2 * num_attrs) + 8 + 1 + 8 + 'm' + NUL */
 /* "\033[1;2;4;5;7;38;5;2xx;48;5;2xxm\0" */
 /*
  * The maximum length of ANSI color sequence we would generate:
  * - leading ESC '['            2
- * - attr + ';'                 2 * 8 (e.g. "1;")
- * - fg color + ';'             9 (e.g. "38;5;2xx;")
- * - fg color + ';'             9 (e.g. "48;5;2xx;")
+ * - attr + ';'                 3 * 10 (e.g. "1;")
+ * - fg color + ';'             17 (e.g. "38;2;255;255;255;")
+ * - bg color + ';'             17 (e.g. "48;2;255;255;255;")
  * - terminating 'm' NUL        2
  *
  * The above overcounts attr (we only use 5 not 8) and one semicolon
  * but it is close enough.
  */
-#define COLOR_MAXLEN 40
+#define COLOR_MAXLEN 70
 
 /*
  * IMPORTANT: Due to the way these color codes are emulated on Windows,
  * write them only using printf(), fprintf(), and fputs(). In particular,
  * do not use puts() or write().
  */
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/color.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/color.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/column.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/column.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/column.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/column.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/combine-diff.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/combine-diff.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/combine-diff.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/combine-diff.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/commit.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/commit.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/commit.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/commit.c	2015-02-06 05:40:08.000000000 +0800
@@ -864,13 +864,13 @@
 
 	for (i = in->next; i; i = i->next) {
 		struct commit_list *new = NULL, *end = NULL;
 
 		for (j = ret; j; j = j->next) {
 			struct commit_list *bases;
-			bases = get_merge_bases(i->item, j->item, 1);
+			bases = get_merge_bases(i->item, j->item);
 			if (!new)
 				new = bases;
 			else
 				end->next = bases;
 			for (k = bases; k; k = k->next)
 				end = k;
@@ -933,16 +933,16 @@
 	free(work);
 	free(redundant);
 	free(filled_index);
 	return filled;
 }
 
-struct commit_list *get_merge_bases_many(struct commit *one,
-					 int n,
-					 struct commit **twos,
-					 int cleanup)
+static struct commit_list *get_merge_bases_many_0(struct commit *one,
+						  int n,
+						  struct commit **twos,
+						  int cleanup)
 {
 	struct commit_list *list;
 	struct commit **rslt;
 	struct commit_list *result;
 	int cnt, i;
 
@@ -974,16 +974,29 @@
 	for (i = 0; i < cnt; i++)
 		commit_list_insert_by_date(rslt[i], &result);
 	free(rslt);
 	return result;
 }
 
-struct commit_list *get_merge_bases(struct commit *one, struct commit *two,
-				    int cleanup)
+struct commit_list *get_merge_bases_many(struct commit *one,
+					 int n,
+					 struct commit **twos)
+{
+	return get_merge_bases_many_0(one, n, twos, 1);
+}
+
+struct commit_list *get_merge_bases_many_dirty(struct commit *one,
+					       int n,
+					       struct commit **twos)
+{
+	return get_merge_bases_many_0(one, n, twos, 0);
+}
+
+struct commit_list *get_merge_bases(struct commit *one, struct commit *two)
 {
-	return get_merge_bases_many(one, 1, &two, cleanup);
+	return get_merge_bases_many_0(one, 1, &two, 1);
 }
 
 /*
  * Is "commit" a descendant of one of the elements on the "with_commit" list?
  */
 int is_descendant_of(struct commit *commit, struct commit_list *with_commit)
@@ -1637,6 +1650,52 @@
 			return line + key_len + 1;
 		}
 		line = *eol ? eol + 1 : NULL;
 	}
 	return NULL;
 }
+
+/*
+ * Inspect sb and determine the true "end" of the log message, in
+ * order to find where to put a new Signed-off-by: line.  Ignored are
+ * trailing comment lines and blank lines, and also the traditional
+ * "Conflicts:" block that is not commented out, so that we can use
+ * "git commit -s --amend" on an existing commit that forgot to remove
+ * it.
+ *
+ * Returns the number of bytes from the tail to ignore, to be fed as
+ * the second parameter to append_signoff().
+ */
+int ignore_non_trailer(struct strbuf *sb)
+{
+	int boc = 0;
+	int bol = 0;
+	int in_old_conflicts_block = 0;
+
+	while (bol < sb->len) {
+		char *next_line;
+
+		if (!(next_line = memchr(sb->buf + bol, '\n', sb->len - bol)))
+			next_line = sb->buf + sb->len;
+		else
+			next_line++;
+
+		if (sb->buf[bol] == comment_line_char || sb->buf[bol] == '\n') {
+			/* is this the first of the run of comments? */
+			if (!boc)
+				boc = bol;
+			/* otherwise, it is just continuing */
+		} else if (starts_with(sb->buf + bol, "Conflicts:\n")) {
+			in_old_conflicts_block = 1;
+			if (!boc)
+				boc = bol;
+		} else if (in_old_conflicts_block && sb->buf[bol] == '\t') {
+			; /* a pathname in the conflicts block */
+		} else if (boc) {
+			/* the previous was not trailing comment */
+			boc = 0;
+			in_old_conflicts_block = 0;
+		}
+		bol = next_line - sb->buf;
+	}
+	return boc ? sb->len - boc : 0;
+}
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/commit.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/commit.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/commit.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/commit.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/commit.h	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/commit.h	2015-02-06 05:40:08.000000000 +0800
@@ -233,16 +233,19 @@
 typedef int (*each_commit_graft_fn)(const struct commit_graft *, void *);
 
 struct commit_graft *read_graft_line(char *buf, int len);
 int register_commit_graft(struct commit_graft *, int);
 struct commit_graft *lookup_commit_graft(const unsigned char *sha1);
 
-extern struct commit_list *get_merge_bases(struct commit *rev1, struct commit *rev2, int cleanup);
-extern struct commit_list *get_merge_bases_many(struct commit *one, int n, struct commit **twos, int cleanup);
+extern struct commit_list *get_merge_bases(struct commit *rev1, struct commit *rev2);
+extern struct commit_list *get_merge_bases_many(struct commit *one, int n, struct commit **twos);
 extern struct commit_list *get_octopus_merge_bases(struct commit_list *in);
 
+/* To be used only when object flags after this call no longer matter */
+extern struct commit_list *get_merge_bases_many_dirty(struct commit *one, int n, struct commit **twos);
+
 /* largest positive number a signed 32-bit integer can contain */
 #define INFINITE_DEPTH 0x7fffffff
 
 struct sha1_array;
 struct ref;
 extern int register_shallow(const unsigned char *sha1);
@@ -334,12 +337,15 @@
  * Note that some headers (like mergetag) may be multi-line. It is the caller's
  * responsibility to parse further in this case!
  */
 extern const char *find_commit_header(const char *msg, const char *key,
 				      size_t *out_len);
 
+/* Find the end of the log message, the right place for a new trailer. */
+extern int ignore_non_trailer(struct strbuf *sb);
+
 typedef void (*each_mergetag_fn)(struct commit *commit, struct commit_extra_header *extra,
 				 void *cb_data);
 
 extern void for_each_mergetag(each_mergetag_fn fn, struct commit *commit, void *data);
 
 struct merge_remote_desc {
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/commit.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/commit.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/compat/obstack.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/compat/obstack.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/compat/obstack.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/compat/obstack.o differ
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/compat: stat.c
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/compat/strlcpy.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/compat/strlcpy.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/compat/strlcpy.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/compat/strlcpy.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/compat/terminal.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/compat/terminal.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/compat/terminal.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/compat/terminal.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/compile_commands.json /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/compile_commands.json
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/compile_commands.json	2017-10-10 12:21:13.854655176 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/compile_commands.json	2017-10-10 12:24:49.674647266 +0800
@@ -1,1867 +1,1867 @@
 [
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o credential-store.o -c -MF ./.depend/credential-store.o.d -MQ credential-store.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" credential-store.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/credential-store.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o credential-store.o -c -MF ./.depend/credential-store.o.d -MQ credential-store.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" credential-store.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/credential-store.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o abspath.o -c -MF ./.depend/abspath.o.d -MQ abspath.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" abspath.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/abspath.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o abspath.o -c -MF ./.depend/abspath.o.d -MQ abspath.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" abspath.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/abspath.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o advice.o -c -MF ./.depend/advice.o.d -MQ advice.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" advice.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/advice.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o advice.o -c -MF ./.depend/advice.o.d -MQ advice.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" advice.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/advice.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o alias.o -c -MF ./.depend/alias.o.d -MQ alias.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" alias.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/alias.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o alias.o -c -MF ./.depend/alias.o.d -MQ alias.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" alias.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/alias.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o alloc.o -c -MF ./.depend/alloc.o.d -MQ alloc.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" alloc.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/alloc.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o alloc.o -c -MF ./.depend/alloc.o.d -MQ alloc.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" alloc.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/alloc.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o archive.o -c -MF ./.depend/archive.o.d -MQ archive.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" archive.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/archive.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o archive.o -c -MF ./.depend/archive.o.d -MQ archive.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" archive.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/archive.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o archive-tar.o -c -MF ./.depend/archive-tar.o.d -MQ archive-tar.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" archive-tar.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/archive-tar.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o archive-tar.o -c -MF ./.depend/archive-tar.o.d -MQ archive-tar.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" archive-tar.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/archive-tar.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o archive-zip.o -c -MF ./.depend/archive-zip.o.d -MQ archive-zip.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" archive-zip.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/archive-zip.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o archive-zip.o -c -MF ./.depend/archive-zip.o.d -MQ archive-zip.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" archive-zip.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/archive-zip.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o argv-array.o -c -MF ./.depend/argv-array.o.d -MQ argv-array.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" argv-array.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/argv-array.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o argv-array.o -c -MF ./.depend/argv-array.o.d -MQ argv-array.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" argv-array.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/argv-array.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o attr.o -c -MF ./.depend/attr.o.d -MQ attr.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DETC_GITATTRIBUTES=\"/usr/local/etc/gitattributes\" attr.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/attr.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o attr.o -c -MF ./.depend/attr.o.d -MQ attr.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DETC_GITATTRIBUTES=\"/usr/local/etc/gitattributes\" attr.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/attr.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o base85.o -c -MF ./.depend/base85.o.d -MQ base85.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" base85.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/base85.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o base85.o -c -MF ./.depend/base85.o.d -MQ base85.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" base85.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/base85.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o bisect.o -c -MF ./.depend/bisect.o.d -MQ bisect.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" bisect.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bisect.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o bisect.o -c -MF ./.depend/bisect.o.d -MQ bisect.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" bisect.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bisect.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o blob.o -c -MF ./.depend/blob.o.d -MQ blob.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" blob.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/blob.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o blob.o -c -MF ./.depend/blob.o.d -MQ blob.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" blob.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/blob.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o branch.o -c -MF ./.depend/branch.o.d -MQ branch.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" branch.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/branch.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o branch.o -c -MF ./.depend/branch.o.d -MQ branch.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" branch.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/branch.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o bulk-checkin.o -c -MF ./.depend/bulk-checkin.o.d -MQ bulk-checkin.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" bulk-checkin.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bulk-checkin.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o bulk-checkin.o -c -MF ./.depend/bulk-checkin.o.d -MQ bulk-checkin.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" bulk-checkin.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bulk-checkin.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o bundle.o -c -MF ./.depend/bundle.o.d -MQ bundle.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" bundle.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bundle.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o bundle.o -c -MF ./.depend/bundle.o.d -MQ bundle.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" bundle.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bundle.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o cache-tree.o -c -MF ./.depend/cache-tree.o.d -MQ cache-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" cache-tree.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/cache-tree.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o cache-tree.o -c -MF ./.depend/cache-tree.o.d -MQ cache-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" cache-tree.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/cache-tree.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o color.o -c -MF ./.depend/color.o.d -MQ color.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" color.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/color.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o color.o -c -MF ./.depend/color.o.d -MQ color.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" color.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/color.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o column.o -c -MF ./.depend/column.o.d -MQ column.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" column.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/column.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o column.o -c -MF ./.depend/column.o.d -MQ column.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" column.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/column.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o combine-diff.o -c -MF ./.depend/combine-diff.o.d -MQ combine-diff.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" combine-diff.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/combine-diff.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o combine-diff.o -c -MF ./.depend/combine-diff.o.d -MQ combine-diff.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" combine-diff.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/combine-diff.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o commit.o -c -MF ./.depend/commit.o.d -MQ commit.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" commit.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/commit.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o commit.o -c -MF ./.depend/commit.o.d -MQ commit.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" commit.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/commit.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o compat/obstack.o -c -MF compat/.depend/obstack.o.d -MQ compat/obstack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" compat/obstack.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/compat/obstack.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o compat/obstack.o -c -MF compat/.depend/obstack.o.d -MQ compat/obstack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" compat/obstack.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/compat/obstack.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o compat/terminal.o -c -MF compat/.depend/terminal.o.d -MQ compat/terminal.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" compat/terminal.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/compat/terminal.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o compat/terminal.o -c -MF compat/.depend/terminal.o.d -MQ compat/terminal.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" compat/terminal.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/compat/terminal.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o config.o -c -MF ./.depend/config.o.d -MQ config.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DETC_GITCONFIG=\"/usr/local/etc/gitconfig\" config.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/config.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o config.o -c -MF ./.depend/config.o.d -MQ config.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DETC_GITCONFIG=\"/usr/local/etc/gitconfig\" config.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/config.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o connect.o -c -MF ./.depend/connect.o.d -MQ connect.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" connect.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/connect.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o connect.o -c -MF ./.depend/connect.o.d -MQ connect.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" connect.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/connect.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o connected.o -c -MF ./.depend/connected.o.d -MQ connected.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" connected.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/connected.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o connected.o -c -MF ./.depend/connected.o.d -MQ connected.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" connected.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/connected.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o convert.o -c -MF ./.depend/convert.o.d -MQ convert.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" convert.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/convert.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o convert.o -c -MF ./.depend/convert.o.d -MQ convert.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" convert.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/convert.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o copy.o -c -MF ./.depend/copy.o.d -MQ copy.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" copy.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/copy.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o copy.o -c -MF ./.depend/copy.o.d -MQ copy.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" copy.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/copy.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o credential.o -c -MF ./.depend/credential.o.d -MQ credential.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" credential.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/credential.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o credential.o -c -MF ./.depend/credential.o.d -MQ credential.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" credential.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/credential.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o csum-file.o -c -MF ./.depend/csum-file.o.d -MQ csum-file.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" csum-file.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/csum-file.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o csum-file.o -c -MF ./.depend/csum-file.o.d -MQ csum-file.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" csum-file.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/csum-file.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o ctype.o -c -MF ./.depend/ctype.o.d -MQ ctype.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" ctype.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/ctype.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o ctype.o -c -MF ./.depend/ctype.o.d -MQ ctype.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" ctype.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/ctype.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o date.o -c -MF ./.depend/date.o.d -MQ date.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" date.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/date.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o date.o -c -MF ./.depend/date.o.d -MQ date.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" date.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/date.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o decorate.o -c -MF ./.depend/decorate.o.d -MQ decorate.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" decorate.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/decorate.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o decorate.o -c -MF ./.depend/decorate.o.d -MQ decorate.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" decorate.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/decorate.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o diffcore-break.o -c -MF ./.depend/diffcore-break.o.d -MQ diffcore-break.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" diffcore-break.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diffcore-break.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o diffcore-break.o -c -MF ./.depend/diffcore-break.o.d -MQ diffcore-break.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" diffcore-break.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diffcore-break.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o diffcore-delta.o -c -MF ./.depend/diffcore-delta.o.d -MQ diffcore-delta.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" diffcore-delta.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diffcore-delta.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o diffcore-delta.o -c -MF ./.depend/diffcore-delta.o.d -MQ diffcore-delta.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" diffcore-delta.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diffcore-delta.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o diffcore-order.o -c -MF ./.depend/diffcore-order.o.d -MQ diffcore-order.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" diffcore-order.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diffcore-order.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o diffcore-order.o -c -MF ./.depend/diffcore-order.o.d -MQ diffcore-order.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" diffcore-order.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diffcore-order.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o diffcore-pickaxe.o -c -MF ./.depend/diffcore-pickaxe.o.d -MQ diffcore-pickaxe.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" diffcore-pickaxe.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diffcore-pickaxe.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o diffcore-pickaxe.o -c -MF ./.depend/diffcore-pickaxe.o.d -MQ diffcore-pickaxe.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" diffcore-pickaxe.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diffcore-pickaxe.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o diffcore-rename.o -c -MF ./.depend/diffcore-rename.o.d -MQ diffcore-rename.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" diffcore-rename.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diffcore-rename.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o diffcore-rename.o -c -MF ./.depend/diffcore-rename.o.d -MQ diffcore-rename.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" diffcore-rename.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diffcore-rename.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o diff-delta.o -c -MF ./.depend/diff-delta.o.d -MQ diff-delta.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" diff-delta.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diff-delta.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o diff-delta.o -c -MF ./.depend/diff-delta.o.d -MQ diff-delta.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" diff-delta.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diff-delta.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o diff-lib.o -c -MF ./.depend/diff-lib.o.d -MQ diff-lib.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" diff-lib.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diff-lib.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o diff-lib.o -c -MF ./.depend/diff-lib.o.d -MQ diff-lib.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" diff-lib.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diff-lib.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o diff-no-index.o -c -MF ./.depend/diff-no-index.o.d -MQ diff-no-index.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" diff-no-index.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diff-no-index.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o diff-no-index.o -c -MF ./.depend/diff-no-index.o.d -MQ diff-no-index.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" diff-no-index.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diff-no-index.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o diff.o -c -MF ./.depend/diff.o.d -MQ diff.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" diff.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diff.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o diff.o -c -MF ./.depend/diff.o.d -MQ diff.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" diff.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diff.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o dir.o -c -MF ./.depend/dir.o.d -MQ dir.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" dir.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/dir.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o dir.o -c -MF ./.depend/dir.o.d -MQ dir.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" dir.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/dir.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o editor.o -c -MF ./.depend/editor.o.d -MQ editor.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" editor.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/editor.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o editor.o -c -MF ./.depend/editor.o.d -MQ editor.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" editor.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/editor.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o entry.o -c -MF ./.depend/entry.o.d -MQ entry.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" entry.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/entry.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o entry.o -c -MF ./.depend/entry.o.d -MQ entry.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" entry.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/entry.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o environment.o -c -MF ./.depend/environment.o.d -MQ environment.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" environment.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/environment.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o environment.o -c -MF ./.depend/environment.o.d -MQ environment.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" environment.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/environment.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o ewah/bitmap.o -c -MF ewah/.depend/bitmap.o.d -MQ ewah/bitmap.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" ewah/bitmap.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/ewah/bitmap.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o ewah/bitmap.o -c -MF ewah/.depend/bitmap.o.d -MQ ewah/bitmap.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" ewah/bitmap.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/ewah/bitmap.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o ewah/ewah_bitmap.o -c -MF ewah/.depend/ewah_bitmap.o.d -MQ ewah/ewah_bitmap.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" ewah/ewah_bitmap.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/ewah/ewah_bitmap.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o ewah/ewah_bitmap.o -c -MF ewah/.depend/ewah_bitmap.o.d -MQ ewah/ewah_bitmap.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" ewah/ewah_bitmap.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/ewah/ewah_bitmap.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o ewah/ewah_io.o -c -MF ewah/.depend/ewah_io.o.d -MQ ewah/ewah_io.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" ewah/ewah_io.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/ewah/ewah_io.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o ewah/ewah_io.o -c -MF ewah/.depend/ewah_io.o.d -MQ ewah/ewah_io.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" ewah/ewah_io.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/ewah/ewah_io.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o ewah/ewah_rlw.o -c -MF ewah/.depend/ewah_rlw.o.d -MQ ewah/ewah_rlw.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" ewah/ewah_rlw.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/ewah/ewah_rlw.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o ewah/ewah_rlw.o -c -MF ewah/.depend/ewah_rlw.o.d -MQ ewah/ewah_rlw.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" ewah/ewah_rlw.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/ewah/ewah_rlw.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o exec_cmd.o -c -MF ./.depend/exec_cmd.o.d -MQ exec_cmd.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_EXEC_PATH=\"/usr/local/libexec/git-core\" -DBINDIR=\"bin\" -DPREFIX=\"/usr/local\" exec_cmd.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/exec_cmd.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o exec_cmd.o -c -MF ./.depend/exec_cmd.o.d -MQ exec_cmd.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_EXEC_PATH=\"/usr/local/libexec/git-core\" -DBINDIR=\"bin\" -DPREFIX=\"/usr/local\" exec_cmd.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/exec_cmd.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o fetch-pack.o -c -MF ./.depend/fetch-pack.o.d -MQ fetch-pack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" fetch-pack.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/fetch-pack.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o fetch-pack.o -c -MF ./.depend/fetch-pack.o.d -MQ fetch-pack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" fetch-pack.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/fetch-pack.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o fsck.o -c -MF ./.depend/fsck.o.d -MQ fsck.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" fsck.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/fsck.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o fsck.o -c -MF ./.depend/fsck.o.d -MQ fsck.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" fsck.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/fsck.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o gettext.o -c -MF ./.depend/gettext.o.d -MQ gettext.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_LOCALE_PATH=\"/usr/local/share/locale\" gettext.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/gettext.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o gettext.o -c -MF ./.depend/gettext.o.d -MQ gettext.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_LOCALE_PATH=\"/usr/local/share/locale\" gettext.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/gettext.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o gpg-interface.o -c -MF ./.depend/gpg-interface.o.d -MQ gpg-interface.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" gpg-interface.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/gpg-interface.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o gpg-interface.o -c -MF ./.depend/gpg-interface.o.d -MQ gpg-interface.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" gpg-interface.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/gpg-interface.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o graph.o -c -MF ./.depend/graph.o.d -MQ graph.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" graph.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/graph.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o graph.o -c -MF ./.depend/graph.o.d -MQ graph.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" graph.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/graph.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o grep.o -c -MF ./.depend/grep.o.d -MQ grep.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" grep.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/grep.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o grep.o -c -MF ./.depend/grep.o.d -MQ grep.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" grep.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/grep.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o hashmap.o -c -MF ./.depend/hashmap.o.d -MQ hashmap.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" hashmap.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/hashmap.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o hashmap.o -c -MF ./.depend/hashmap.o.d -MQ hashmap.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" hashmap.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/hashmap.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o help.o -c -MF ./.depend/help.o.d -MQ help.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" help.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/help.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o help.o -c -MF ./.depend/help.o.d -MQ help.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" help.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/help.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o hex.o -c -MF ./.depend/hex.o.d -MQ hex.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" hex.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/hex.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o hex.o -c -MF ./.depend/hex.o.d -MQ hex.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" hex.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/hex.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o ident.o -c -MF ./.depend/ident.o.d -MQ ident.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" ident.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/ident.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o ident.o -c -MF ./.depend/ident.o.d -MQ ident.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" ident.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/ident.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o kwset.o -c -MF ./.depend/kwset.o.d -MQ kwset.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" kwset.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/kwset.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o kwset.o -c -MF ./.depend/kwset.o.d -MQ kwset.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" kwset.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/kwset.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o levenshtein.o -c -MF ./.depend/levenshtein.o.d -MQ levenshtein.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" levenshtein.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/levenshtein.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o levenshtein.o -c -MF ./.depend/levenshtein.o.d -MQ levenshtein.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" levenshtein.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/levenshtein.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o line-log.o -c -MF ./.depend/line-log.o.d -MQ line-log.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" line-log.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/line-log.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o line-log.o -c -MF ./.depend/line-log.o.d -MQ line-log.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" line-log.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/line-log.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o line-range.o -c -MF ./.depend/line-range.o.d -MQ line-range.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" line-range.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/line-range.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o line-range.o -c -MF ./.depend/line-range.o.d -MQ line-range.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" line-range.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/line-range.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o list-objects.o -c -MF ./.depend/list-objects.o.d -MQ list-objects.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" list-objects.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/list-objects.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o list-objects.o -c -MF ./.depend/list-objects.o.d -MQ list-objects.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" list-objects.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/list-objects.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o ll-merge.o -c -MF ./.depend/ll-merge.o.d -MQ ll-merge.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" ll-merge.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/ll-merge.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o ll-merge.o -c -MF ./.depend/ll-merge.o.d -MQ ll-merge.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" ll-merge.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/ll-merge.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o lockfile.o -c -MF ./.depend/lockfile.o.d -MQ lockfile.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" lockfile.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/lockfile.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o lockfile.o -c -MF ./.depend/lockfile.o.d -MQ lockfile.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" lockfile.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/lockfile.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o log-tree.o -c -MF ./.depend/log-tree.o.d -MQ log-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" log-tree.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/log-tree.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o log-tree.o -c -MF ./.depend/log-tree.o.d -MQ log-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" log-tree.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/log-tree.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o mailmap.o -c -MF ./.depend/mailmap.o.d -MQ mailmap.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" mailmap.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/mailmap.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o mailmap.o -c -MF ./.depend/mailmap.o.d -MQ mailmap.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" mailmap.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/mailmap.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o match-trees.o -c -MF ./.depend/match-trees.o.d -MQ match-trees.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" match-trees.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/match-trees.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o match-trees.o -c -MF ./.depend/match-trees.o.d -MQ match-trees.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" match-trees.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/match-trees.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o merge.o -c -MF ./.depend/merge.o.d -MQ merge.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" merge.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/merge.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o merge.o -c -MF ./.depend/merge.o.d -MQ merge.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" merge.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/merge.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o merge-blobs.o -c -MF ./.depend/merge-blobs.o.d -MQ merge-blobs.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" merge-blobs.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/merge-blobs.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o merge-blobs.o -c -MF ./.depend/merge-blobs.o.d -MQ merge-blobs.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" merge-blobs.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/merge-blobs.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o merge-recursive.o -c -MF ./.depend/merge-recursive.o.d -MQ merge-recursive.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" merge-recursive.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/merge-recursive.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o merge-recursive.o -c -MF ./.depend/merge-recursive.o.d -MQ merge-recursive.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" merge-recursive.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/merge-recursive.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o mergesort.o -c -MF ./.depend/mergesort.o.d -MQ mergesort.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" mergesort.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/mergesort.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o mergesort.o -c -MF ./.depend/mergesort.o.d -MQ mergesort.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" mergesort.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/mergesort.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o name-hash.o -c -MF ./.depend/name-hash.o.d -MQ name-hash.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" name-hash.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/name-hash.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o name-hash.o -c -MF ./.depend/name-hash.o.d -MQ name-hash.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" name-hash.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/name-hash.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o notes.o -c -MF ./.depend/notes.o.d -MQ notes.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" notes.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/notes.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o notes.o -c -MF ./.depend/notes.o.d -MQ notes.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" notes.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/notes.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o notes-cache.o -c -MF ./.depend/notes-cache.o.d -MQ notes-cache.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" notes-cache.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/notes-cache.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o notes-cache.o -c -MF ./.depend/notes-cache.o.d -MQ notes-cache.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" notes-cache.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/notes-cache.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o notes-merge.o -c -MF ./.depend/notes-merge.o.d -MQ notes-merge.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" notes-merge.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/notes-merge.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o notes-merge.o -c -MF ./.depend/notes-merge.o.d -MQ notes-merge.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" notes-merge.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/notes-merge.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o notes-utils.o -c -MF ./.depend/notes-utils.o.d -MQ notes-utils.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" notes-utils.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/notes-utils.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o notes-utils.o -c -MF ./.depend/notes-utils.o.d -MQ notes-utils.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" notes-utils.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/notes-utils.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o object.o -c -MF ./.depend/object.o.d -MQ object.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" object.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/object.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o object.o -c -MF ./.depend/object.o.d -MQ object.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" object.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/object.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o pack-bitmap.o -c -MF ./.depend/pack-bitmap.o.d -MQ pack-bitmap.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pack-bitmap.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pack-bitmap.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o pack-bitmap.o -c -MF ./.depend/pack-bitmap.o.d -MQ pack-bitmap.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pack-bitmap.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pack-bitmap.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o pack-bitmap-write.o -c -MF ./.depend/pack-bitmap-write.o.d -MQ pack-bitmap-write.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pack-bitmap-write.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pack-bitmap-write.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o pack-bitmap-write.o -c -MF ./.depend/pack-bitmap-write.o.d -MQ pack-bitmap-write.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pack-bitmap-write.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pack-bitmap-write.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o pack-check.o -c -MF ./.depend/pack-check.o.d -MQ pack-check.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pack-check.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pack-check.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o pack-check.o -c -MF ./.depend/pack-check.o.d -MQ pack-check.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pack-check.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pack-check.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o pack-objects.o -c -MF ./.depend/pack-objects.o.d -MQ pack-objects.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pack-objects.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pack-objects.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o pack-objects.o -c -MF ./.depend/pack-objects.o.d -MQ pack-objects.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pack-objects.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pack-objects.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o pack-revindex.o -c -MF ./.depend/pack-revindex.o.d -MQ pack-revindex.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pack-revindex.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pack-revindex.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o pack-revindex.o -c -MF ./.depend/pack-revindex.o.d -MQ pack-revindex.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pack-revindex.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pack-revindex.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o pack-write.o -c -MF ./.depend/pack-write.o.d -MQ pack-write.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pack-write.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pack-write.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o pack-write.o -c -MF ./.depend/pack-write.o.d -MQ pack-write.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pack-write.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pack-write.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o pager.o -c -MF ./.depend/pager.o.d -MQ pager.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pager.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pager.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o pager.o -c -MF ./.depend/pager.o.d -MQ pager.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pager.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pager.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o parse-options.o -c -MF ./.depend/parse-options.o.d -MQ parse-options.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" parse-options.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/parse-options.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o parse-options.o -c -MF ./.depend/parse-options.o.d -MQ parse-options.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" parse-options.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/parse-options.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o parse-options-cb.o -c -MF ./.depend/parse-options-cb.o.d -MQ parse-options-cb.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" parse-options-cb.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/parse-options-cb.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o parse-options-cb.o -c -MF ./.depend/parse-options-cb.o.d -MQ parse-options-cb.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" parse-options-cb.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/parse-options-cb.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o patch-delta.o -c -MF ./.depend/patch-delta.o.d -MQ patch-delta.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" patch-delta.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/patch-delta.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o patch-delta.o -c -MF ./.depend/patch-delta.o.d -MQ patch-delta.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" patch-delta.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/patch-delta.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o patch-ids.o -c -MF ./.depend/patch-ids.o.d -MQ patch-ids.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" patch-ids.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/patch-ids.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o patch-ids.o -c -MF ./.depend/patch-ids.o.d -MQ patch-ids.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" patch-ids.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/patch-ids.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o path.o -c -MF ./.depend/path.o.d -MQ path.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" path.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/path.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o path.o -c -MF ./.depend/path.o.d -MQ path.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" path.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/path.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o pathspec.o -c -MF ./.depend/pathspec.o.d -MQ pathspec.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pathspec.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pathspec.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o pathspec.o -c -MF ./.depend/pathspec.o.d -MQ pathspec.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pathspec.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pathspec.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o pkt-line.o -c -MF ./.depend/pkt-line.o.d -MQ pkt-line.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pkt-line.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pkt-line.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o pkt-line.o -c -MF ./.depend/pkt-line.o.d -MQ pkt-line.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pkt-line.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pkt-line.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o preload-index.o -c -MF ./.depend/preload-index.o.d -MQ preload-index.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" preload-index.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/preload-index.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o preload-index.o -c -MF ./.depend/preload-index.o.d -MQ preload-index.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" preload-index.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/preload-index.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o pretty.o -c -MF ./.depend/pretty.o.d -MQ pretty.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pretty.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pretty.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o pretty.o -c -MF ./.depend/pretty.o.d -MQ pretty.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" pretty.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pretty.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o prio-queue.o -c -MF ./.depend/prio-queue.o.d -MQ prio-queue.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" prio-queue.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/prio-queue.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o prio-queue.o -c -MF ./.depend/prio-queue.o.d -MQ prio-queue.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" prio-queue.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/prio-queue.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o progress.o -c -MF ./.depend/progress.o.d -MQ progress.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" progress.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/progress.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o progress.o -c -MF ./.depend/progress.o.d -MQ progress.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" progress.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/progress.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o prompt.o -c -MF ./.depend/prompt.o.d -MQ prompt.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" prompt.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/prompt.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o prompt.o -c -MF ./.depend/prompt.o.d -MQ prompt.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" prompt.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/prompt.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o quote.o -c -MF ./.depend/quote.o.d -MQ quote.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" quote.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/quote.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o quote.o -c -MF ./.depend/quote.o.d -MQ quote.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" quote.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/quote.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o reachable.o -c -MF ./.depend/reachable.o.d -MQ reachable.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" reachable.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/reachable.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o reachable.o -c -MF ./.depend/reachable.o.d -MQ reachable.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" reachable.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/reachable.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o read-cache.o -c -MF ./.depend/read-cache.o.d -MQ read-cache.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" read-cache.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/read-cache.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o read-cache.o -c -MF ./.depend/read-cache.o.d -MQ read-cache.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" read-cache.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/read-cache.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o reflog-walk.o -c -MF ./.depend/reflog-walk.o.d -MQ reflog-walk.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" reflog-walk.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/reflog-walk.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o reflog-walk.o -c -MF ./.depend/reflog-walk.o.d -MQ reflog-walk.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" reflog-walk.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/reflog-walk.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o refs.o -c -MF ./.depend/refs.o.d -MQ refs.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" refs.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/refs.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o refs.o -c -MF ./.depend/refs.o.d -MQ refs.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" refs.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/refs.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o remote.o -c -MF ./.depend/remote.o.d -MQ remote.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" remote.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/remote.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o remote.o -c -MF ./.depend/remote.o.d -MQ remote.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" remote.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/remote.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o replace_object.o -c -MF ./.depend/replace_object.o.d -MQ replace_object.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" replace_object.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/replace_object.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o replace_object.o -c -MF ./.depend/replace_object.o.d -MQ replace_object.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" replace_object.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/replace_object.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o rerere.o -c -MF ./.depend/rerere.o.d -MQ rerere.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" rerere.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/rerere.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o rerere.o -c -MF ./.depend/rerere.o.d -MQ rerere.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" rerere.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/rerere.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o resolve-undo.o -c -MF ./.depend/resolve-undo.o.d -MQ resolve-undo.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" resolve-undo.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/resolve-undo.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o resolve-undo.o -c -MF ./.depend/resolve-undo.o.d -MQ resolve-undo.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" resolve-undo.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/resolve-undo.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o revision.o -c -MF ./.depend/revision.o.d -MQ revision.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" revision.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/revision.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o revision.o -c -MF ./.depend/revision.o.d -MQ revision.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" revision.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/revision.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o run-command.o -c -MF ./.depend/run-command.o.d -MQ run-command.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" run-command.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/run-command.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o run-command.o -c -MF ./.depend/run-command.o.d -MQ run-command.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" run-command.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/run-command.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o send-pack.o -c -MF ./.depend/send-pack.o.d -MQ send-pack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" send-pack.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/send-pack.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o send-pack.o -c -MF ./.depend/send-pack.o.d -MQ send-pack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" send-pack.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/send-pack.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o sequencer.o -c -MF ./.depend/sequencer.o.d -MQ sequencer.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" sequencer.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sequencer.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o sequencer.o -c -MF ./.depend/sequencer.o.d -MQ sequencer.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" sequencer.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sequencer.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o server-info.o -c -MF ./.depend/server-info.o.d -MQ server-info.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" server-info.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/server-info.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o server-info.o -c -MF ./.depend/server-info.o.d -MQ server-info.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" server-info.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/server-info.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o setup.o -c -MF ./.depend/setup.o.d -MQ setup.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" setup.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/setup.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o setup.o -c -MF ./.depend/setup.o.d -MQ setup.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" setup.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/setup.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o sha1-array.o -c -MF ./.depend/sha1-array.o.d -MQ sha1-array.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" sha1-array.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sha1-array.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o sha1-array.o -c -MF ./.depend/sha1-array.o.d -MQ sha1-array.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" sha1-array.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sha1-array.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o sha1-lookup.o -c -MF ./.depend/sha1-lookup.o.d -MQ sha1-lookup.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" sha1-lookup.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sha1-lookup.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o sha1-lookup.o -c -MF ./.depend/sha1-lookup.o.d -MQ sha1-lookup.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" sha1-lookup.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sha1-lookup.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o sha1_file.o -c -MF ./.depend/sha1_file.o.d -MQ sha1_file.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" sha1_file.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sha1_file.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o sha1_file.o -c -MF ./.depend/sha1_file.o.d -MQ sha1_file.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" sha1_file.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sha1_file.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o sha1_name.o -c -MF ./.depend/sha1_name.o.d -MQ sha1_name.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" sha1_name.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sha1_name.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o sha1_name.o -c -MF ./.depend/sha1_name.o.d -MQ sha1_name.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" sha1_name.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sha1_name.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o shallow.o -c -MF ./.depend/shallow.o.d -MQ shallow.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" shallow.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/shallow.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o shallow.o -c -MF ./.depend/shallow.o.d -MQ shallow.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" shallow.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/shallow.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o sideband.o -c -MF ./.depend/sideband.o.d -MQ sideband.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" sideband.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sideband.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o sideband.o -c -MF ./.depend/sideband.o.d -MQ sideband.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" sideband.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sideband.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o sigchain.o -c -MF ./.depend/sigchain.o.d -MQ sigchain.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" sigchain.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sigchain.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o sigchain.o -c -MF ./.depend/sigchain.o.d -MQ sigchain.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" sigchain.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sigchain.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o split-index.o -c -MF ./.depend/split-index.o.d -MQ split-index.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" split-index.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/split-index.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o split-index.o -c -MF ./.depend/split-index.o.d -MQ split-index.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" split-index.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/split-index.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o strbuf.o -c -MF ./.depend/strbuf.o.d -MQ strbuf.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" strbuf.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/strbuf.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o strbuf.o -c -MF ./.depend/strbuf.o.d -MQ strbuf.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" strbuf.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/strbuf.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o streaming.o -c -MF ./.depend/streaming.o.d -MQ streaming.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" streaming.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/streaming.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o streaming.o -c -MF ./.depend/streaming.o.d -MQ streaming.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" streaming.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/streaming.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o string-list.o -c -MF ./.depend/string-list.o.d -MQ string-list.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" string-list.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/string-list.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o string-list.o -c -MF ./.depend/string-list.o.d -MQ string-list.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" string-list.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/string-list.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o submodule.o -c -MF ./.depend/submodule.o.d -MQ submodule.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" submodule.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/submodule.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o submodule.o -c -MF ./.depend/submodule.o.d -MQ submodule.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" submodule.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/submodule.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o symlinks.o -c -MF ./.depend/symlinks.o.d -MQ symlinks.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" symlinks.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/symlinks.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o symlinks.o -c -MF ./.depend/symlinks.o.d -MQ symlinks.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" symlinks.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/symlinks.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o tag.o -c -MF ./.depend/tag.o.d -MQ tag.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" tag.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/tag.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o tag.o -c -MF ./.depend/tag.o.d -MQ tag.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" tag.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/tag.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o trace.o -c -MF ./.depend/trace.o.d -MQ trace.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" trace.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/trace.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o trace.o -c -MF ./.depend/trace.o.d -MQ trace.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" trace.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/trace.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o trailer.o -c -MF ./.depend/trailer.o.d -MQ trailer.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" trailer.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/trailer.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o trailer.o -c -MF ./.depend/trailer.o.d -MQ trailer.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" trailer.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/trailer.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o transport.o -c -MF ./.depend/transport.o.d -MQ transport.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" transport.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/transport.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o transport.o -c -MF ./.depend/transport.o.d -MQ transport.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" transport.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/transport.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o transport-helper.o -c -MF ./.depend/transport-helper.o.d -MQ transport-helper.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" transport-helper.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/transport-helper.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o transport-helper.o -c -MF ./.depend/transport-helper.o.d -MQ transport-helper.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" transport-helper.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/transport-helper.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o tree-diff.o -c -MF ./.depend/tree-diff.o.d -MQ tree-diff.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" tree-diff.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/tree-diff.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o tree-diff.o -c -MF ./.depend/tree-diff.o.d -MQ tree-diff.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" tree-diff.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/tree-diff.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o tree.o -c -MF ./.depend/tree.o.d -MQ tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" tree.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/tree.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o tree.o -c -MF ./.depend/tree.o.d -MQ tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" tree.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/tree.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o tree-walk.o -c -MF ./.depend/tree-walk.o.d -MQ tree-walk.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" tree-walk.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/tree-walk.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o tree-walk.o -c -MF ./.depend/tree-walk.o.d -MQ tree-walk.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" tree-walk.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/tree-walk.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o unpack-trees.o -c -MF ./.depend/unpack-trees.o.d -MQ unpack-trees.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" unpack-trees.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/unpack-trees.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o unpack-trees.o -c -MF ./.depend/unpack-trees.o.d -MQ unpack-trees.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" unpack-trees.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/unpack-trees.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o url.o -c -MF ./.depend/url.o.d -MQ url.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" url.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/url.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o url.o -c -MF ./.depend/url.o.d -MQ url.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" url.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/url.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o urlmatch.o -c -MF ./.depend/urlmatch.o.d -MQ urlmatch.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" urlmatch.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/urlmatch.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o urlmatch.o -c -MF ./.depend/urlmatch.o.d -MQ urlmatch.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" urlmatch.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/urlmatch.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o usage.o -c -MF ./.depend/usage.o.d -MQ usage.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" usage.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/usage.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o usage.o -c -MF ./.depend/usage.o.d -MQ usage.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" usage.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/usage.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o userdiff.o -c -MF ./.depend/userdiff.o.d -MQ userdiff.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" userdiff.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/userdiff.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o userdiff.o -c -MF ./.depend/userdiff.o.d -MQ userdiff.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" userdiff.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/userdiff.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o utf8.o -c -MF ./.depend/utf8.o.d -MQ utf8.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" utf8.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/utf8.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o utf8.o -c -MF ./.depend/utf8.o.d -MQ utf8.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" utf8.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/utf8.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o varint.o -c -MF ./.depend/varint.o.d -MQ varint.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" varint.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/varint.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o varint.o -c -MF ./.depend/varint.o.d -MQ varint.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" varint.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/varint.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o version.o -c -MF ./.depend/version.o.d -MQ version.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_VERSION=\"2.2.3\" -DGIT_USER_AGENT=\"git/2.2.3\" version.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/version.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o version.o -c -MF ./.depend/version.o.d -MQ version.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_VERSION=\"2.3.0\" -DGIT_USER_AGENT=\"git/2.3.0\" version.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/version.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o versioncmp.o -c -MF ./.depend/versioncmp.o.d -MQ versioncmp.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" versioncmp.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/versioncmp.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o versioncmp.o -c -MF ./.depend/versioncmp.o.d -MQ versioncmp.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" versioncmp.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/versioncmp.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o walker.o -c -MF ./.depend/walker.o.d -MQ walker.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" walker.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/walker.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o walker.o -c -MF ./.depend/walker.o.d -MQ walker.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" walker.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/walker.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o wildmatch.o -c -MF ./.depend/wildmatch.o.d -MQ wildmatch.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" wildmatch.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/wildmatch.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o wildmatch.o -c -MF ./.depend/wildmatch.o.d -MQ wildmatch.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" wildmatch.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/wildmatch.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o wrapper.o -c -MF ./.depend/wrapper.o.d -MQ wrapper.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" wrapper.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/wrapper.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o wrapper.o -c -MF ./.depend/wrapper.o.d -MQ wrapper.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" wrapper.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/wrapper.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o write_or_die.o -c -MF ./.depend/write_or_die.o.d -MQ write_or_die.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" write_or_die.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/write_or_die.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o write_or_die.o -c -MF ./.depend/write_or_die.o.d -MQ write_or_die.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" write_or_die.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/write_or_die.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o ws.o -c -MF ./.depend/ws.o.d -MQ ws.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" ws.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/ws.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o ws.o -c -MF ./.depend/ws.o.d -MQ ws.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" ws.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/ws.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o wt-status.o -c -MF ./.depend/wt-status.o.d -MQ wt-status.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" wt-status.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/wt-status.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o wt-status.o -c -MF ./.depend/wt-status.o.d -MQ wt-status.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" wt-status.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/wt-status.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o xdiff-interface.o -c -MF ./.depend/xdiff-interface.o.d -MQ xdiff-interface.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" xdiff-interface.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/xdiff-interface.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o xdiff-interface.o -c -MF ./.depend/xdiff-interface.o.d -MQ xdiff-interface.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" xdiff-interface.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/xdiff-interface.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o zlib.o -c -MF ./.depend/zlib.o.d -MQ zlib.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" zlib.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/zlib.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o zlib.o -c -MF ./.depend/zlib.o.d -MQ zlib.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" zlib.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/zlib.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o unix-socket.o -c -MF ./.depend/unix-socket.o.d -MQ unix-socket.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" unix-socket.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/unix-socket.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o unix-socket.o -c -MF ./.depend/unix-socket.o.d -MQ unix-socket.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" unix-socket.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/unix-socket.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o block-sha1/sha1.o -c -MF block-sha1/.depend/sha1.o.d -MQ block-sha1/sha1.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" block-sha1/sha1.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/block-sha1/sha1.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o block-sha1/sha1.o -c -MF block-sha1/.depend/sha1.o.d -MQ block-sha1/sha1.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" block-sha1/sha1.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/block-sha1/sha1.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o thread-utils.o -c -MF ./.depend/thread-utils.o.d -MQ thread-utils.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" thread-utils.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/thread-utils.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o thread-utils.o -c -MF ./.depend/thread-utils.o.d -MQ thread-utils.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" thread-utils.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/thread-utils.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o compat/strlcpy.o -c -MF compat/.depend/strlcpy.o.d -MQ compat/strlcpy.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" compat/strlcpy.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/compat/strlcpy.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o compat/strlcpy.o -c -MF compat/.depend/strlcpy.o.d -MQ compat/strlcpy.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" compat/strlcpy.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/compat/strlcpy.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o xdiff/xdiffi.o -c -MF xdiff/.depend/xdiffi.o.d -MQ xdiff/xdiffi.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" xdiff/xdiffi.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/xdiff/xdiffi.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o xdiff/xdiffi.o -c -MF xdiff/.depend/xdiffi.o.d -MQ xdiff/xdiffi.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" xdiff/xdiffi.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/xdiff/xdiffi.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o xdiff/xprepare.o -c -MF xdiff/.depend/xprepare.o.d -MQ xdiff/xprepare.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" xdiff/xprepare.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/xdiff/xprepare.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o xdiff/xprepare.o -c -MF xdiff/.depend/xprepare.o.d -MQ xdiff/xprepare.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" xdiff/xprepare.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/xdiff/xprepare.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o xdiff/xutils.o -c -MF xdiff/.depend/xutils.o.d -MQ xdiff/xutils.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" xdiff/xutils.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/xdiff/xutils.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o xdiff/xutils.o -c -MF xdiff/.depend/xutils.o.d -MQ xdiff/xutils.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" xdiff/xutils.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/xdiff/xutils.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o xdiff/xemit.o -c -MF xdiff/.depend/xemit.o.d -MQ xdiff/xemit.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" xdiff/xemit.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/xdiff/xemit.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o xdiff/xemit.o -c -MF xdiff/.depend/xemit.o.d -MQ xdiff/xemit.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" xdiff/xemit.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/xdiff/xemit.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o xdiff/xmerge.o -c -MF xdiff/.depend/xmerge.o.d -MQ xdiff/xmerge.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" xdiff/xmerge.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/xdiff/xmerge.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o xdiff/xmerge.o -c -MF xdiff/.depend/xmerge.o.d -MQ xdiff/xmerge.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" xdiff/xmerge.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/xdiff/xmerge.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o xdiff/xpatience.o -c -MF xdiff/.depend/xpatience.o.d -MQ xdiff/xpatience.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" xdiff/xpatience.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/xdiff/xpatience.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o xdiff/xpatience.o -c -MF xdiff/.depend/xpatience.o.d -MQ xdiff/xpatience.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" xdiff/xpatience.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/xdiff/xpatience.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o xdiff/xhistogram.o -c -MF xdiff/.depend/xhistogram.o.d -MQ xdiff/xhistogram.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" xdiff/xhistogram.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/xdiff/xhistogram.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o xdiff/xhistogram.o -c -MF xdiff/.depend/xhistogram.o.d -MQ xdiff/xhistogram.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" xdiff/xhistogram.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/xdiff/xhistogram.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o daemon.o -c -MF ./.depend/daemon.o.d -MQ daemon.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" daemon.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/daemon.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o daemon.o -c -MF ./.depend/daemon.o.d -MQ daemon.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" daemon.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/daemon.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o fast-import.o -c -MF ./.depend/fast-import.o.d -MQ fast-import.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" fast-import.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/fast-import.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o fast-import.o -c -MF ./.depend/fast-import.o.d -MQ fast-import.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" fast-import.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/fast-import.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o http-backend.o -c -MF ./.depend/http-backend.o.d -MQ http-backend.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" http-backend.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/http-backend.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o http-backend.o -c -MF ./.depend/http-backend.o.d -MQ http-backend.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" http-backend.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/http-backend.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o imap-send.o -c -MF ./.depend/imap-send.o.d -MQ imap-send.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" imap-send.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/imap-send.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o imap-send.o -c -MF ./.depend/imap-send.o.d -MQ imap-send.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" imap-send.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/imap-send.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o sh-i18n--envsubst.o -c -MF ./.depend/sh-i18n--envsubst.o.d -MQ sh-i18n--envsubst.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" sh-i18n--envsubst.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sh-i18n--envsubst.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o sh-i18n--envsubst.o -c -MF ./.depend/sh-i18n--envsubst.o.d -MQ sh-i18n--envsubst.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" sh-i18n--envsubst.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sh-i18n--envsubst.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o shell.o -c -MF ./.depend/shell.o.d -MQ shell.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" shell.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/shell.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o shell.o -c -MF ./.depend/shell.o.d -MQ shell.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" shell.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/shell.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o show-index.o -c -MF ./.depend/show-index.o.d -MQ show-index.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" show-index.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/show-index.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o show-index.o -c -MF ./.depend/show-index.o.d -MQ show-index.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" show-index.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/show-index.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o upload-pack.o -c -MF ./.depend/upload-pack.o.d -MQ upload-pack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" upload-pack.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/upload-pack.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o upload-pack.o -c -MF ./.depend/upload-pack.o.d -MQ upload-pack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" upload-pack.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/upload-pack.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o remote-testsvn.o -c -MF ./.depend/remote-testsvn.o.d -MQ remote-testsvn.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" remote-testsvn.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/remote-testsvn.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o remote-testsvn.o -c -MF ./.depend/remote-testsvn.o.d -MQ remote-testsvn.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" remote-testsvn.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/remote-testsvn.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o vcs-svn/line_buffer.o -c -MF vcs-svn/.depend/line_buffer.o.d -MQ vcs-svn/line_buffer.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" vcs-svn/line_buffer.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/vcs-svn/line_buffer.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o vcs-svn/line_buffer.o -c -MF vcs-svn/.depend/line_buffer.o.d -MQ vcs-svn/line_buffer.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" vcs-svn/line_buffer.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/vcs-svn/line_buffer.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o vcs-svn/sliding_window.o -c -MF vcs-svn/.depend/sliding_window.o.d -MQ vcs-svn/sliding_window.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" vcs-svn/sliding_window.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/vcs-svn/sliding_window.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o vcs-svn/sliding_window.o -c -MF vcs-svn/.depend/sliding_window.o.d -MQ vcs-svn/sliding_window.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" vcs-svn/sliding_window.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/vcs-svn/sliding_window.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o vcs-svn/repo_tree.o -c -MF vcs-svn/.depend/repo_tree.o.d -MQ vcs-svn/repo_tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" vcs-svn/repo_tree.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/vcs-svn/repo_tree.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o vcs-svn/repo_tree.o -c -MF vcs-svn/.depend/repo_tree.o.d -MQ vcs-svn/repo_tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" vcs-svn/repo_tree.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/vcs-svn/repo_tree.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o vcs-svn/fast_export.o -c -MF vcs-svn/.depend/fast_export.o.d -MQ vcs-svn/fast_export.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" vcs-svn/fast_export.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/vcs-svn/fast_export.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o vcs-svn/fast_export.o -c -MF vcs-svn/.depend/fast_export.o.d -MQ vcs-svn/fast_export.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" vcs-svn/fast_export.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/vcs-svn/fast_export.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o vcs-svn/svndiff.o -c -MF vcs-svn/.depend/svndiff.o.d -MQ vcs-svn/svndiff.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" vcs-svn/svndiff.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/vcs-svn/svndiff.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o vcs-svn/svndiff.o -c -MF vcs-svn/.depend/svndiff.o.d -MQ vcs-svn/svndiff.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" vcs-svn/svndiff.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/vcs-svn/svndiff.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o vcs-svn/svndump.o -c -MF vcs-svn/.depend/svndump.o.d -MQ vcs-svn/svndump.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" vcs-svn/svndump.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/vcs-svn/svndump.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o vcs-svn/svndump.o -c -MF vcs-svn/.depend/svndump.o.d -MQ vcs-svn/svndump.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" vcs-svn/svndump.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/vcs-svn/svndump.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o credential-cache.o -c -MF ./.depend/credential-cache.o.d -MQ credential-cache.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" credential-cache.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/credential-cache.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o credential-cache.o -c -MF ./.depend/credential-cache.o.d -MQ credential-cache.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" credential-cache.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/credential-cache.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o credential-cache--daemon.o -c -MF ./.depend/credential-cache--daemon.o.d -MQ credential-cache--daemon.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" credential-cache--daemon.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/credential-cache--daemon.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o credential-cache--daemon.o -c -MF ./.depend/credential-cache--daemon.o.d -MQ credential-cache--daemon.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" credential-cache--daemon.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/credential-cache--daemon.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o git.o -c -MF ./.depend/git.o.d -MQ git.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_HTML_PATH=\"share/doc/git\" -DGIT_MAN_PATH=\"share/man\" -DGIT_INFO_PATH=\"share/info\" git.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o git.o -c -MF ./.depend/git.o.d -MQ git.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_HTML_PATH=\"share/doc/git\" -DGIT_MAN_PATH=\"share/man\" -DGIT_INFO_PATH=\"share/info\" git.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/add.o -c -MF builtin/.depend/add.o.d -MQ builtin/add.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/add.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/add.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/add.o -c -MF builtin/.depend/add.o.d -MQ builtin/add.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/add.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/add.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/annotate.o -c -MF builtin/.depend/annotate.o.d -MQ builtin/annotate.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/annotate.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/annotate.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/annotate.o -c -MF builtin/.depend/annotate.o.d -MQ builtin/annotate.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/annotate.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/annotate.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/apply.o -c -MF builtin/.depend/apply.o.d -MQ builtin/apply.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/apply.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/apply.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/apply.o -c -MF builtin/.depend/apply.o.d -MQ builtin/apply.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/apply.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/apply.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/archive.o -c -MF builtin/.depend/archive.o.d -MQ builtin/archive.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/archive.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/archive.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/archive.o -c -MF builtin/.depend/archive.o.d -MQ builtin/archive.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/archive.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/archive.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/bisect--helper.o -c -MF builtin/.depend/bisect--helper.o.d -MQ builtin/bisect--helper.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/bisect--helper.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/bisect--helper.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/bisect--helper.o -c -MF builtin/.depend/bisect--helper.o.d -MQ builtin/bisect--helper.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/bisect--helper.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/bisect--helper.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/blame.o -c -MF builtin/.depend/blame.o.d -MQ builtin/blame.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/blame.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/blame.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/blame.o -c -MF builtin/.depend/blame.o.d -MQ builtin/blame.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/blame.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/blame.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/branch.o -c -MF builtin/.depend/branch.o.d -MQ builtin/branch.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/branch.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/branch.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/branch.o -c -MF builtin/.depend/branch.o.d -MQ builtin/branch.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/branch.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/branch.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/bundle.o -c -MF builtin/.depend/bundle.o.d -MQ builtin/bundle.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/bundle.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/bundle.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/bundle.o -c -MF builtin/.depend/bundle.o.d -MQ builtin/bundle.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/bundle.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/bundle.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/cat-file.o -c -MF builtin/.depend/cat-file.o.d -MQ builtin/cat-file.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/cat-file.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/cat-file.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/cat-file.o -c -MF builtin/.depend/cat-file.o.d -MQ builtin/cat-file.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/cat-file.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/cat-file.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/check-attr.o -c -MF builtin/.depend/check-attr.o.d -MQ builtin/check-attr.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/check-attr.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/check-attr.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/check-attr.o -c -MF builtin/.depend/check-attr.o.d -MQ builtin/check-attr.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/check-attr.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/check-attr.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/check-ignore.o -c -MF builtin/.depend/check-ignore.o.d -MQ builtin/check-ignore.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/check-ignore.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/check-ignore.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/check-ignore.o -c -MF builtin/.depend/check-ignore.o.d -MQ builtin/check-ignore.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/check-ignore.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/check-ignore.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/check-mailmap.o -c -MF builtin/.depend/check-mailmap.o.d -MQ builtin/check-mailmap.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/check-mailmap.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/check-mailmap.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/check-mailmap.o -c -MF builtin/.depend/check-mailmap.o.d -MQ builtin/check-mailmap.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/check-mailmap.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/check-mailmap.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/check-ref-format.o -c -MF builtin/.depend/check-ref-format.o.d -MQ builtin/check-ref-format.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/check-ref-format.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/check-ref-format.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/check-ref-format.o -c -MF builtin/.depend/check-ref-format.o.d -MQ builtin/check-ref-format.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/check-ref-format.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/check-ref-format.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/checkout-index.o -c -MF builtin/.depend/checkout-index.o.d -MQ builtin/checkout-index.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/checkout-index.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/checkout-index.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/checkout-index.o -c -MF builtin/.depend/checkout-index.o.d -MQ builtin/checkout-index.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/checkout-index.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/checkout-index.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/checkout.o -c -MF builtin/.depend/checkout.o.d -MQ builtin/checkout.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/checkout.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/checkout.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/checkout.o -c -MF builtin/.depend/checkout.o.d -MQ builtin/checkout.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/checkout.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/checkout.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/clean.o -c -MF builtin/.depend/clean.o.d -MQ builtin/clean.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/clean.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/clean.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/clean.o -c -MF builtin/.depend/clean.o.d -MQ builtin/clean.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/clean.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/clean.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/clone.o -c -MF builtin/.depend/clone.o.d -MQ builtin/clone.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/clone.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/clone.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/clone.o -c -MF builtin/.depend/clone.o.d -MQ builtin/clone.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/clone.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/clone.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/column.o -c -MF builtin/.depend/column.o.d -MQ builtin/column.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/column.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/column.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/column.o -c -MF builtin/.depend/column.o.d -MQ builtin/column.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/column.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/column.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/commit-tree.o -c -MF builtin/.depend/commit-tree.o.d -MQ builtin/commit-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/commit-tree.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/commit-tree.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/commit-tree.o -c -MF builtin/.depend/commit-tree.o.d -MQ builtin/commit-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/commit-tree.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/commit-tree.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/commit.o -c -MF builtin/.depend/commit.o.d -MQ builtin/commit.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/commit.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/commit.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/commit.o -c -MF builtin/.depend/commit.o.d -MQ builtin/commit.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/commit.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/commit.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/config.o -c -MF builtin/.depend/config.o.d -MQ builtin/config.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/config.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/config.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/config.o -c -MF builtin/.depend/config.o.d -MQ builtin/config.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/config.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/config.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/count-objects.o -c -MF builtin/.depend/count-objects.o.d -MQ builtin/count-objects.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/count-objects.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/count-objects.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/count-objects.o -c -MF builtin/.depend/count-objects.o.d -MQ builtin/count-objects.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/count-objects.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/count-objects.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/credential.o -c -MF builtin/.depend/credential.o.d -MQ builtin/credential.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/credential.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/credential.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/credential.o -c -MF builtin/.depend/credential.o.d -MQ builtin/credential.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/credential.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/credential.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/describe.o -c -MF builtin/.depend/describe.o.d -MQ builtin/describe.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/describe.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/describe.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/describe.o -c -MF builtin/.depend/describe.o.d -MQ builtin/describe.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/describe.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/describe.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/diff-files.o -c -MF builtin/.depend/diff-files.o.d -MQ builtin/diff-files.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/diff-files.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/diff-files.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/diff-files.o -c -MF builtin/.depend/diff-files.o.d -MQ builtin/diff-files.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/diff-files.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/diff-files.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/diff-index.o -c -MF builtin/.depend/diff-index.o.d -MQ builtin/diff-index.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/diff-index.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/diff-index.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/diff-index.o -c -MF builtin/.depend/diff-index.o.d -MQ builtin/diff-index.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/diff-index.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/diff-index.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/diff-tree.o -c -MF builtin/.depend/diff-tree.o.d -MQ builtin/diff-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/diff-tree.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/diff-tree.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/diff-tree.o -c -MF builtin/.depend/diff-tree.o.d -MQ builtin/diff-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/diff-tree.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/diff-tree.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/diff.o -c -MF builtin/.depend/diff.o.d -MQ builtin/diff.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/diff.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/diff.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/diff.o -c -MF builtin/.depend/diff.o.d -MQ builtin/diff.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/diff.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/diff.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/fast-export.o -c -MF builtin/.depend/fast-export.o.d -MQ builtin/fast-export.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/fast-export.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/fast-export.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/fast-export.o -c -MF builtin/.depend/fast-export.o.d -MQ builtin/fast-export.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/fast-export.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/fast-export.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/fetch-pack.o -c -MF builtin/.depend/fetch-pack.o.d -MQ builtin/fetch-pack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/fetch-pack.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/fetch-pack.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/fetch-pack.o -c -MF builtin/.depend/fetch-pack.o.d -MQ builtin/fetch-pack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/fetch-pack.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/fetch-pack.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/fetch.o -c -MF builtin/.depend/fetch.o.d -MQ builtin/fetch.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/fetch.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/fetch.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/fetch.o -c -MF builtin/.depend/fetch.o.d -MQ builtin/fetch.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/fetch.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/fetch.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/fmt-merge-msg.o -c -MF builtin/.depend/fmt-merge-msg.o.d -MQ builtin/fmt-merge-msg.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/fmt-merge-msg.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/fmt-merge-msg.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/fmt-merge-msg.o -c -MF builtin/.depend/fmt-merge-msg.o.d -MQ builtin/fmt-merge-msg.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/fmt-merge-msg.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/fmt-merge-msg.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/for-each-ref.o -c -MF builtin/.depend/for-each-ref.o.d -MQ builtin/for-each-ref.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/for-each-ref.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/for-each-ref.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/for-each-ref.o -c -MF builtin/.depend/for-each-ref.o.d -MQ builtin/for-each-ref.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/for-each-ref.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/for-each-ref.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/fsck.o -c -MF builtin/.depend/fsck.o.d -MQ builtin/fsck.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/fsck.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/fsck.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/fsck.o -c -MF builtin/.depend/fsck.o.d -MQ builtin/fsck.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/fsck.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/fsck.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/gc.o -c -MF builtin/.depend/gc.o.d -MQ builtin/gc.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/gc.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/gc.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/gc.o -c -MF builtin/.depend/gc.o.d -MQ builtin/gc.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/gc.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/gc.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/get-tar-commit-id.o -c -MF builtin/.depend/get-tar-commit-id.o.d -MQ builtin/get-tar-commit-id.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/get-tar-commit-id.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/get-tar-commit-id.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/get-tar-commit-id.o -c -MF builtin/.depend/get-tar-commit-id.o.d -MQ builtin/get-tar-commit-id.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/get-tar-commit-id.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/get-tar-commit-id.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/grep.o -c -MF builtin/.depend/grep.o.d -MQ builtin/grep.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/grep.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/grep.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/grep.o -c -MF builtin/.depend/grep.o.d -MQ builtin/grep.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/grep.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/grep.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/hash-object.o -c -MF builtin/.depend/hash-object.o.d -MQ builtin/hash-object.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/hash-object.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/hash-object.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/hash-object.o -c -MF builtin/.depend/hash-object.o.d -MQ builtin/hash-object.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/hash-object.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/hash-object.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/help.o -c -MF builtin/.depend/help.o.d -MQ builtin/help.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_HTML_PATH=\"share/doc/git\" -DGIT_MAN_PATH=\"share/man\" -DGIT_INFO_PATH=\"share/info\" builtin/help.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/help.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/help.o -c -MF builtin/.depend/help.o.d -MQ builtin/help.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DGIT_HTML_PATH=\"share/doc/git\" -DGIT_MAN_PATH=\"share/man\" -DGIT_INFO_PATH=\"share/info\" builtin/help.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/help.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/index-pack.o -c -MF builtin/.depend/index-pack.o.d -MQ builtin/index-pack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/index-pack.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/index-pack.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/index-pack.o -c -MF builtin/.depend/index-pack.o.d -MQ builtin/index-pack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/index-pack.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/index-pack.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/init-db.o -c -MF builtin/.depend/init-db.o.d -MQ builtin/init-db.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DDEFAULT_GIT_TEMPLATE_DIR=\"/usr/local/share/git-core/templates\" builtin/init-db.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/init-db.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/init-db.o -c -MF builtin/.depend/init-db.o.d -MQ builtin/init-db.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" -DDEFAULT_GIT_TEMPLATE_DIR=\"/usr/local/share/git-core/templates\" builtin/init-db.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/init-db.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/interpret-trailers.o -c -MF builtin/.depend/interpret-trailers.o.d -MQ builtin/interpret-trailers.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/interpret-trailers.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/interpret-trailers.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/interpret-trailers.o -c -MF builtin/.depend/interpret-trailers.o.d -MQ builtin/interpret-trailers.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/interpret-trailers.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/interpret-trailers.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/log.o -c -MF builtin/.depend/log.o.d -MQ builtin/log.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/log.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/log.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/log.o -c -MF builtin/.depend/log.o.d -MQ builtin/log.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/log.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/log.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/ls-files.o -c -MF builtin/.depend/ls-files.o.d -MQ builtin/ls-files.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/ls-files.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/ls-files.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/ls-files.o -c -MF builtin/.depend/ls-files.o.d -MQ builtin/ls-files.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/ls-files.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/ls-files.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/ls-remote.o -c -MF builtin/.depend/ls-remote.o.d -MQ builtin/ls-remote.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/ls-remote.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/ls-remote.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/ls-remote.o -c -MF builtin/.depend/ls-remote.o.d -MQ builtin/ls-remote.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/ls-remote.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/ls-remote.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/ls-tree.o -c -MF builtin/.depend/ls-tree.o.d -MQ builtin/ls-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/ls-tree.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/ls-tree.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/ls-tree.o -c -MF builtin/.depend/ls-tree.o.d -MQ builtin/ls-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/ls-tree.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/ls-tree.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/mailinfo.o -c -MF builtin/.depend/mailinfo.o.d -MQ builtin/mailinfo.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/mailinfo.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/mailinfo.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/mailinfo.o -c -MF builtin/.depend/mailinfo.o.d -MQ builtin/mailinfo.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/mailinfo.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/mailinfo.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/mailsplit.o -c -MF builtin/.depend/mailsplit.o.d -MQ builtin/mailsplit.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/mailsplit.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/mailsplit.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/mailsplit.o -c -MF builtin/.depend/mailsplit.o.d -MQ builtin/mailsplit.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/mailsplit.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/mailsplit.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/merge.o -c -MF builtin/.depend/merge.o.d -MQ builtin/merge.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/merge.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/merge.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/merge.o -c -MF builtin/.depend/merge.o.d -MQ builtin/merge.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/merge.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/merge.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/merge-base.o -c -MF builtin/.depend/merge-base.o.d -MQ builtin/merge-base.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/merge-base.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/merge-base.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/merge-base.o -c -MF builtin/.depend/merge-base.o.d -MQ builtin/merge-base.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/merge-base.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/merge-base.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/merge-file.o -c -MF builtin/.depend/merge-file.o.d -MQ builtin/merge-file.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/merge-file.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/merge-file.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/merge-file.o -c -MF builtin/.depend/merge-file.o.d -MQ builtin/merge-file.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/merge-file.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/merge-file.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/merge-index.o -c -MF builtin/.depend/merge-index.o.d -MQ builtin/merge-index.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/merge-index.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/merge-index.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/merge-index.o -c -MF builtin/.depend/merge-index.o.d -MQ builtin/merge-index.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/merge-index.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/merge-index.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/merge-ours.o -c -MF builtin/.depend/merge-ours.o.d -MQ builtin/merge-ours.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/merge-ours.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/merge-ours.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/merge-ours.o -c -MF builtin/.depend/merge-ours.o.d -MQ builtin/merge-ours.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/merge-ours.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/merge-ours.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/merge-recursive.o -c -MF builtin/.depend/merge-recursive.o.d -MQ builtin/merge-recursive.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/merge-recursive.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/merge-recursive.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/merge-recursive.o -c -MF builtin/.depend/merge-recursive.o.d -MQ builtin/merge-recursive.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/merge-recursive.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/merge-recursive.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/merge-tree.o -c -MF builtin/.depend/merge-tree.o.d -MQ builtin/merge-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/merge-tree.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/merge-tree.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/merge-tree.o -c -MF builtin/.depend/merge-tree.o.d -MQ builtin/merge-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/merge-tree.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/merge-tree.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/mktag.o -c -MF builtin/.depend/mktag.o.d -MQ builtin/mktag.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/mktag.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/mktag.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/mktag.o -c -MF builtin/.depend/mktag.o.d -MQ builtin/mktag.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/mktag.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/mktag.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/mktree.o -c -MF builtin/.depend/mktree.o.d -MQ builtin/mktree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/mktree.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/mktree.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/mktree.o -c -MF builtin/.depend/mktree.o.d -MQ builtin/mktree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/mktree.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/mktree.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/mv.o -c -MF builtin/.depend/mv.o.d -MQ builtin/mv.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/mv.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/mv.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/mv.o -c -MF builtin/.depend/mv.o.d -MQ builtin/mv.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/mv.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/mv.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/name-rev.o -c -MF builtin/.depend/name-rev.o.d -MQ builtin/name-rev.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/name-rev.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/name-rev.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/name-rev.o -c -MF builtin/.depend/name-rev.o.d -MQ builtin/name-rev.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/name-rev.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/name-rev.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/notes.o -c -MF builtin/.depend/notes.o.d -MQ builtin/notes.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/notes.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/notes.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/notes.o -c -MF builtin/.depend/notes.o.d -MQ builtin/notes.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/notes.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/notes.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/pack-objects.o -c -MF builtin/.depend/pack-objects.o.d -MQ builtin/pack-objects.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/pack-objects.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/pack-objects.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/pack-objects.o -c -MF builtin/.depend/pack-objects.o.d -MQ builtin/pack-objects.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/pack-objects.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/pack-objects.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/pack-redundant.o -c -MF builtin/.depend/pack-redundant.o.d -MQ builtin/pack-redundant.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/pack-redundant.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/pack-redundant.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/pack-redundant.o -c -MF builtin/.depend/pack-redundant.o.d -MQ builtin/pack-redundant.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/pack-redundant.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/pack-redundant.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/pack-refs.o -c -MF builtin/.depend/pack-refs.o.d -MQ builtin/pack-refs.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/pack-refs.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/pack-refs.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/pack-refs.o -c -MF builtin/.depend/pack-refs.o.d -MQ builtin/pack-refs.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/pack-refs.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/pack-refs.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/patch-id.o -c -MF builtin/.depend/patch-id.o.d -MQ builtin/patch-id.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/patch-id.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/patch-id.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/patch-id.o -c -MF builtin/.depend/patch-id.o.d -MQ builtin/patch-id.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/patch-id.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/patch-id.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/prune-packed.o -c -MF builtin/.depend/prune-packed.o.d -MQ builtin/prune-packed.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/prune-packed.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/prune-packed.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/prune-packed.o -c -MF builtin/.depend/prune-packed.o.d -MQ builtin/prune-packed.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/prune-packed.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/prune-packed.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/prune.o -c -MF builtin/.depend/prune.o.d -MQ builtin/prune.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/prune.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/prune.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/prune.o -c -MF builtin/.depend/prune.o.d -MQ builtin/prune.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/prune.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/prune.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/push.o -c -MF builtin/.depend/push.o.d -MQ builtin/push.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/push.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/push.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/push.o -c -MF builtin/.depend/push.o.d -MQ builtin/push.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/push.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/push.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/read-tree.o -c -MF builtin/.depend/read-tree.o.d -MQ builtin/read-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/read-tree.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/read-tree.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/read-tree.o -c -MF builtin/.depend/read-tree.o.d -MQ builtin/read-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/read-tree.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/read-tree.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/receive-pack.o -c -MF builtin/.depend/receive-pack.o.d -MQ builtin/receive-pack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/receive-pack.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/receive-pack.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/receive-pack.o -c -MF builtin/.depend/receive-pack.o.d -MQ builtin/receive-pack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/receive-pack.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/receive-pack.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/reflog.o -c -MF builtin/.depend/reflog.o.d -MQ builtin/reflog.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/reflog.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/reflog.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/reflog.o -c -MF builtin/.depend/reflog.o.d -MQ builtin/reflog.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/reflog.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/reflog.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/remote.o -c -MF builtin/.depend/remote.o.d -MQ builtin/remote.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/remote.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/remote.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/remote.o -c -MF builtin/.depend/remote.o.d -MQ builtin/remote.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/remote.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/remote.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/remote-ext.o -c -MF builtin/.depend/remote-ext.o.d -MQ builtin/remote-ext.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/remote-ext.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/remote-ext.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/remote-ext.o -c -MF builtin/.depend/remote-ext.o.d -MQ builtin/remote-ext.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/remote-ext.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/remote-ext.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/remote-fd.o -c -MF builtin/.depend/remote-fd.o.d -MQ builtin/remote-fd.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/remote-fd.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/remote-fd.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/remote-fd.o -c -MF builtin/.depend/remote-fd.o.d -MQ builtin/remote-fd.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/remote-fd.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/remote-fd.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/repack.o -c -MF builtin/.depend/repack.o.d -MQ builtin/repack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/repack.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/repack.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/repack.o -c -MF builtin/.depend/repack.o.d -MQ builtin/repack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/repack.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/repack.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/replace.o -c -MF builtin/.depend/replace.o.d -MQ builtin/replace.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/replace.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/replace.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/replace.o -c -MF builtin/.depend/replace.o.d -MQ builtin/replace.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/replace.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/replace.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/rerere.o -c -MF builtin/.depend/rerere.o.d -MQ builtin/rerere.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/rerere.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/rerere.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/rerere.o -c -MF builtin/.depend/rerere.o.d -MQ builtin/rerere.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/rerere.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/rerere.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/reset.o -c -MF builtin/.depend/reset.o.d -MQ builtin/reset.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/reset.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/reset.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/reset.o -c -MF builtin/.depend/reset.o.d -MQ builtin/reset.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/reset.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/reset.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/rev-list.o -c -MF builtin/.depend/rev-list.o.d -MQ builtin/rev-list.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/rev-list.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/rev-list.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/rev-list.o -c -MF builtin/.depend/rev-list.o.d -MQ builtin/rev-list.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/rev-list.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/rev-list.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/rev-parse.o -c -MF builtin/.depend/rev-parse.o.d -MQ builtin/rev-parse.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/rev-parse.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/rev-parse.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/rev-parse.o -c -MF builtin/.depend/rev-parse.o.d -MQ builtin/rev-parse.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/rev-parse.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/rev-parse.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/revert.o -c -MF builtin/.depend/revert.o.d -MQ builtin/revert.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/revert.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/revert.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/revert.o -c -MF builtin/.depend/revert.o.d -MQ builtin/revert.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/revert.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/revert.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/rm.o -c -MF builtin/.depend/rm.o.d -MQ builtin/rm.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/rm.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/rm.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/rm.o -c -MF builtin/.depend/rm.o.d -MQ builtin/rm.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/rm.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/rm.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/send-pack.o -c -MF builtin/.depend/send-pack.o.d -MQ builtin/send-pack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/send-pack.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/send-pack.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/send-pack.o -c -MF builtin/.depend/send-pack.o.d -MQ builtin/send-pack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/send-pack.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/send-pack.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/shortlog.o -c -MF builtin/.depend/shortlog.o.d -MQ builtin/shortlog.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/shortlog.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/shortlog.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/shortlog.o -c -MF builtin/.depend/shortlog.o.d -MQ builtin/shortlog.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/shortlog.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/shortlog.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/show-branch.o -c -MF builtin/.depend/show-branch.o.d -MQ builtin/show-branch.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/show-branch.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/show-branch.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/show-branch.o -c -MF builtin/.depend/show-branch.o.d -MQ builtin/show-branch.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/show-branch.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/show-branch.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/show-ref.o -c -MF builtin/.depend/show-ref.o.d -MQ builtin/show-ref.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/show-ref.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/show-ref.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/show-ref.o -c -MF builtin/.depend/show-ref.o.d -MQ builtin/show-ref.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/show-ref.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/show-ref.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/stripspace.o -c -MF builtin/.depend/stripspace.o.d -MQ builtin/stripspace.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/stripspace.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/stripspace.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/stripspace.o -c -MF builtin/.depend/stripspace.o.d -MQ builtin/stripspace.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/stripspace.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/stripspace.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/symbolic-ref.o -c -MF builtin/.depend/symbolic-ref.o.d -MQ builtin/symbolic-ref.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/symbolic-ref.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/symbolic-ref.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/symbolic-ref.o -c -MF builtin/.depend/symbolic-ref.o.d -MQ builtin/symbolic-ref.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/symbolic-ref.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/symbolic-ref.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/tag.o -c -MF builtin/.depend/tag.o.d -MQ builtin/tag.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/tag.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/tag.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/tag.o -c -MF builtin/.depend/tag.o.d -MQ builtin/tag.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/tag.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/tag.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/unpack-file.o -c -MF builtin/.depend/unpack-file.o.d -MQ builtin/unpack-file.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/unpack-file.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/unpack-file.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/unpack-file.o -c -MF builtin/.depend/unpack-file.o.d -MQ builtin/unpack-file.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/unpack-file.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/unpack-file.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/unpack-objects.o -c -MF builtin/.depend/unpack-objects.o.d -MQ builtin/unpack-objects.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/unpack-objects.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/unpack-objects.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/unpack-objects.o -c -MF builtin/.depend/unpack-objects.o.d -MQ builtin/unpack-objects.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/unpack-objects.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/unpack-objects.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/update-index.o -c -MF builtin/.depend/update-index.o.d -MQ builtin/update-index.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/update-index.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/update-index.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/update-index.o -c -MF builtin/.depend/update-index.o.d -MQ builtin/update-index.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/update-index.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/update-index.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/update-ref.o -c -MF builtin/.depend/update-ref.o.d -MQ builtin/update-ref.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/update-ref.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/update-ref.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/update-ref.o -c -MF builtin/.depend/update-ref.o.d -MQ builtin/update-ref.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/update-ref.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/update-ref.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/update-server-info.o -c -MF builtin/.depend/update-server-info.o.d -MQ builtin/update-server-info.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/update-server-info.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/update-server-info.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/update-server-info.o -c -MF builtin/.depend/update-server-info.o.d -MQ builtin/update-server-info.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/update-server-info.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/update-server-info.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/upload-archive.o -c -MF builtin/.depend/upload-archive.o.d -MQ builtin/upload-archive.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/upload-archive.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/upload-archive.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/upload-archive.o -c -MF builtin/.depend/upload-archive.o.d -MQ builtin/upload-archive.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/upload-archive.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/upload-archive.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/var.o -c -MF builtin/.depend/var.o.d -MQ builtin/var.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/var.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/var.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/var.o -c -MF builtin/.depend/var.o.d -MQ builtin/var.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/var.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/var.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/verify-commit.o -c -MF builtin/.depend/verify-commit.o.d -MQ builtin/verify-commit.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/verify-commit.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/verify-commit.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/verify-commit.o -c -MF builtin/.depend/verify-commit.o.d -MQ builtin/verify-commit.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/verify-commit.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/verify-commit.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/verify-pack.o -c -MF builtin/.depend/verify-pack.o.d -MQ builtin/verify-pack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/verify-pack.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/verify-pack.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/verify-pack.o -c -MF builtin/.depend/verify-pack.o.d -MQ builtin/verify-pack.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/verify-pack.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/verify-pack.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/verify-tag.o -c -MF builtin/.depend/verify-tag.o.d -MQ builtin/verify-tag.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/verify-tag.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/verify-tag.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/verify-tag.o -c -MF builtin/.depend/verify-tag.o.d -MQ builtin/verify-tag.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/verify-tag.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/verify-tag.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o builtin/write-tree.o -c -MF builtin/.depend/write-tree.o.d -MQ builtin/write-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/write-tree.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/write-tree.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o builtin/write-tree.o -c -MF builtin/.depend/write-tree.o.d -MQ builtin/write-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" builtin/write-tree.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/write-tree.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o test-chmtime.o -c -MF ./.depend/test-chmtime.o.d -MQ test-chmtime.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-chmtime.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-chmtime.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o test-chmtime.o -c -MF ./.depend/test-chmtime.o.d -MQ test-chmtime.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-chmtime.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-chmtime.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o test-ctype.o -c -MF ./.depend/test-ctype.o.d -MQ test-ctype.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-ctype.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-ctype.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o test-ctype.o -c -MF ./.depend/test-ctype.o.d -MQ test-ctype.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-ctype.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-ctype.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o test-config.o -c -MF ./.depend/test-config.o.d -MQ test-config.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-config.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-config.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o test-config.o -c -MF ./.depend/test-config.o.d -MQ test-config.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-config.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-config.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o test-date.o -c -MF ./.depend/test-date.o.d -MQ test-date.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-date.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-date.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o test-date.o -c -MF ./.depend/test-date.o.d -MQ test-date.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-date.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-date.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o test-delta.o -c -MF ./.depend/test-delta.o.d -MQ test-delta.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-delta.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-delta.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o test-delta.o -c -MF ./.depend/test-delta.o.d -MQ test-delta.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-delta.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-delta.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o test-dump-cache-tree.o -c -MF ./.depend/test-dump-cache-tree.o.d -MQ test-dump-cache-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-dump-cache-tree.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-dump-cache-tree.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o test-dump-cache-tree.o -c -MF ./.depend/test-dump-cache-tree.o.d -MQ test-dump-cache-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-dump-cache-tree.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-dump-cache-tree.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o test-dump-split-index.o -c -MF ./.depend/test-dump-split-index.o.d -MQ test-dump-split-index.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-dump-split-index.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-dump-split-index.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o test-dump-split-index.o -c -MF ./.depend/test-dump-split-index.o.d -MQ test-dump-split-index.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-dump-split-index.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-dump-split-index.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o test-genrandom.o -c -MF ./.depend/test-genrandom.o.d -MQ test-genrandom.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-genrandom.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-genrandom.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o test-genrandom.o -c -MF ./.depend/test-genrandom.o.d -MQ test-genrandom.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-genrandom.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-genrandom.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o test-hashmap.o -c -MF ./.depend/test-hashmap.o.d -MQ test-hashmap.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-hashmap.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-hashmap.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o test-hashmap.o -c -MF ./.depend/test-hashmap.o.d -MQ test-hashmap.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-hashmap.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-hashmap.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o test-index-version.o -c -MF ./.depend/test-index-version.o.d -MQ test-index-version.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-index-version.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-index-version.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o test-index-version.o -c -MF ./.depend/test-index-version.o.d -MQ test-index-version.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-index-version.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-index-version.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o test-line-buffer.o -c -MF ./.depend/test-line-buffer.o.d -MQ test-line-buffer.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-line-buffer.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-line-buffer.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o test-line-buffer.o -c -MF ./.depend/test-line-buffer.o.d -MQ test-line-buffer.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-line-buffer.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-line-buffer.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o test-match-trees.o -c -MF ./.depend/test-match-trees.o.d -MQ test-match-trees.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-match-trees.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-match-trees.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o test-match-trees.o -c -MF ./.depend/test-match-trees.o.d -MQ test-match-trees.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-match-trees.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-match-trees.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o test-mergesort.o -c -MF ./.depend/test-mergesort.o.d -MQ test-mergesort.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-mergesort.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-mergesort.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o test-mergesort.o -c -MF ./.depend/test-mergesort.o.d -MQ test-mergesort.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-mergesort.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-mergesort.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o test-mktemp.o -c -MF ./.depend/test-mktemp.o.d -MQ test-mktemp.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-mktemp.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-mktemp.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o test-mktemp.o -c -MF ./.depend/test-mktemp.o.d -MQ test-mktemp.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-mktemp.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-mktemp.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o test-parse-options.o -c -MF ./.depend/test-parse-options.o.d -MQ test-parse-options.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-parse-options.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-parse-options.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o test-parse-options.o -c -MF ./.depend/test-parse-options.o.d -MQ test-parse-options.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-parse-options.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-parse-options.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o test-path-utils.o -c -MF ./.depend/test-path-utils.o.d -MQ test-path-utils.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-path-utils.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-path-utils.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o test-path-utils.o -c -MF ./.depend/test-path-utils.o.d -MQ test-path-utils.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-path-utils.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-path-utils.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o test-prio-queue.o -c -MF ./.depend/test-prio-queue.o.d -MQ test-prio-queue.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-prio-queue.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-prio-queue.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o test-prio-queue.o -c -MF ./.depend/test-prio-queue.o.d -MQ test-prio-queue.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-prio-queue.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-prio-queue.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o test-read-cache.o -c -MF ./.depend/test-read-cache.o.d -MQ test-read-cache.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-read-cache.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-read-cache.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o test-read-cache.o -c -MF ./.depend/test-read-cache.o.d -MQ test-read-cache.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-read-cache.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-read-cache.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o test-regex.o -c -MF ./.depend/test-regex.o.d -MQ test-regex.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-regex.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-regex.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o test-regex.o -c -MF ./.depend/test-regex.o.d -MQ test-regex.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-regex.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-regex.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o test-revision-walking.o -c -MF ./.depend/test-revision-walking.o.d -MQ test-revision-walking.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-revision-walking.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-revision-walking.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o test-revision-walking.o -c -MF ./.depend/test-revision-walking.o.d -MQ test-revision-walking.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-revision-walking.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-revision-walking.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o test-run-command.o -c -MF ./.depend/test-run-command.o.d -MQ test-run-command.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-run-command.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-run-command.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o test-run-command.o -c -MF ./.depend/test-run-command.o.d -MQ test-run-command.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-run-command.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-run-command.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o test-scrap-cache-tree.o -c -MF ./.depend/test-scrap-cache-tree.o.d -MQ test-scrap-cache-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-scrap-cache-tree.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-scrap-cache-tree.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o test-scrap-cache-tree.o -c -MF ./.depend/test-scrap-cache-tree.o.d -MQ test-scrap-cache-tree.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-scrap-cache-tree.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-scrap-cache-tree.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o test-sha1.o -c -MF ./.depend/test-sha1.o.d -MQ test-sha1.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-sha1.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-sha1.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o test-sha1.o -c -MF ./.depend/test-sha1.o.d -MQ test-sha1.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-sha1.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-sha1.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o test-sha1-array.o -c -MF ./.depend/test-sha1-array.o.d -MQ test-sha1-array.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-sha1-array.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-sha1-array.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o test-sha1-array.o -c -MF ./.depend/test-sha1-array.o.d -MQ test-sha1-array.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-sha1-array.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-sha1-array.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o test-sigchain.o -c -MF ./.depend/test-sigchain.o.d -MQ test-sigchain.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-sigchain.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-sigchain.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o test-sigchain.o -c -MF ./.depend/test-sigchain.o.d -MQ test-sigchain.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-sigchain.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-sigchain.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o test-string-list.o -c -MF ./.depend/test-string-list.o.d -MQ test-string-list.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-string-list.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-string-list.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o test-string-list.o -c -MF ./.depend/test-string-list.o.d -MQ test-string-list.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-string-list.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-string-list.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o test-subprocess.o -c -MF ./.depend/test-subprocess.o.d -MQ test-subprocess.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-subprocess.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-subprocess.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o test-subprocess.o -c -MF ./.depend/test-subprocess.o.d -MQ test-subprocess.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-subprocess.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-subprocess.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o test-svn-fe.o -c -MF ./.depend/test-svn-fe.o.d -MQ test-svn-fe.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-svn-fe.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-svn-fe.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o test-svn-fe.o -c -MF ./.depend/test-svn-fe.o.d -MQ test-svn-fe.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-svn-fe.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-svn-fe.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o test-urlmatch-normalization.o -c -MF ./.depend/test-urlmatch-normalization.o.d -MQ test-urlmatch-normalization.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-urlmatch-normalization.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-urlmatch-normalization.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o test-urlmatch-normalization.o -c -MF ./.depend/test-urlmatch-normalization.o.d -MQ test-urlmatch-normalization.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-urlmatch-normalization.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-urlmatch-normalization.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3",
-  "command": "gcc -o test-wildmatch.o -c -MF ./.depend/test-wildmatch.o.d -MQ test-wildmatch.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-wildmatch.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-wildmatch.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0",
+  "command": "gcc -o test-wildmatch.o -c -MF ./.depend/test-wildmatch.o.d -MQ test-wildmatch.o -MMD -MP -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER=\"block-sha1/sha1.h\" -DNO_STRLCPY -DSHELL_PATH=\"/bin/sh\" test-wildmatch.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-wildmatch.c"
 }
 ]
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/compiled_files.def /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/compiled_files.def
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/compiled_files.def	2017-10-10 12:21:13.866655176 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/compiled_files.def	2017-10-10 12:24:49.682647266 +0800
@@ -1,311 +1,311 @@
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/credential-store.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/abspath.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/advice.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/alias.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/alloc.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/archive.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/archive-tar.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/archive-zip.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/argv-array.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/attr.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/base85.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bisect.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/blob.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/branch.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bulk-checkin.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/bundle.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/cache-tree.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/color.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/column.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/combine-diff.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/commit.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/compat/obstack.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/compat/terminal.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/config.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/connect.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/connected.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/convert.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/copy.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/credential.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/csum-file.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/ctype.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/date.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/decorate.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diffcore-break.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diffcore-delta.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diffcore-order.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diffcore-pickaxe.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diffcore-rename.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diff-delta.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diff-lib.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diff-no-index.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diff.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/dir.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/editor.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/entry.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/environment.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/ewah/bitmap.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/ewah/ewah_bitmap.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/ewah/ewah_io.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/ewah/ewah_rlw.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/exec_cmd.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/fetch-pack.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/fsck.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/gettext.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/gpg-interface.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/graph.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/grep.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/hashmap.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/help.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/hex.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/ident.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/kwset.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/levenshtein.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/line-log.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/line-range.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/list-objects.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/ll-merge.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/lockfile.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/log-tree.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/mailmap.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/match-trees.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/merge.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/merge-blobs.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/merge-recursive.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/mergesort.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/name-hash.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/notes.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/notes-cache.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/notes-merge.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/notes-utils.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/object.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pack-bitmap.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pack-bitmap-write.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pack-check.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pack-objects.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pack-revindex.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pack-write.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pager.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/parse-options.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/parse-options-cb.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/patch-delta.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/patch-ids.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/path.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pathspec.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pkt-line.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/preload-index.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pretty.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/prio-queue.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/progress.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/prompt.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/quote.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/reachable.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/read-cache.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/reflog-walk.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/refs.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/remote.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/replace_object.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/rerere.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/resolve-undo.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/revision.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/run-command.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/send-pack.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sequencer.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/server-info.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/setup.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sha1-array.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sha1-lookup.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sha1_file.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sha1_name.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/shallow.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sideband.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sigchain.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/split-index.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/strbuf.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/streaming.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/string-list.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/submodule.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/symlinks.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/tag.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/trace.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/trailer.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/transport.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/transport-helper.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/tree-diff.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/tree.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/tree-walk.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/unpack-trees.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/url.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/urlmatch.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/usage.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/userdiff.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/utf8.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/varint.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/version.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/versioncmp.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/walker.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/wildmatch.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/wrapper.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/write_or_die.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/ws.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/wt-status.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/xdiff-interface.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/zlib.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/unix-socket.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/block-sha1/sha1.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/thread-utils.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/compat/strlcpy.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/xdiff/xdiffi.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/xdiff/xprepare.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/xdiff/xutils.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/xdiff/xemit.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/xdiff/xmerge.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/xdiff/xpatience.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/xdiff/xhistogram.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/daemon.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/fast-import.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/http-backend.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/imap-send.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sh-i18n--envsubst.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/shell.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/show-index.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/upload-pack.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/remote-testsvn.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/vcs-svn/line_buffer.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/vcs-svn/sliding_window.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/vcs-svn/repo_tree.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/vcs-svn/fast_export.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/vcs-svn/svndiff.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/vcs-svn/svndump.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/credential-cache.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/credential-cache--daemon.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/add.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/annotate.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/apply.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/archive.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/bisect--helper.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/blame.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/branch.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/bundle.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/cat-file.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/check-attr.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/check-ignore.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/check-mailmap.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/check-ref-format.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/checkout-index.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/checkout.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/clean.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/clone.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/column.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/commit-tree.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/commit.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/config.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/count-objects.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/credential.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/describe.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/diff-files.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/diff-index.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/diff-tree.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/diff.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/fast-export.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/fetch-pack.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/fetch.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/fmt-merge-msg.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/for-each-ref.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/fsck.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/gc.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/get-tar-commit-id.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/grep.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/hash-object.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/help.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/index-pack.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/init-db.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/interpret-trailers.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/log.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/ls-files.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/ls-remote.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/ls-tree.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/mailinfo.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/mailsplit.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/merge.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/merge-base.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/merge-file.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/merge-index.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/merge-ours.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/merge-recursive.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/merge-tree.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/mktag.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/mktree.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/mv.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/name-rev.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/notes.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/pack-objects.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/pack-redundant.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/pack-refs.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/patch-id.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/prune-packed.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/prune.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/push.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/read-tree.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/receive-pack.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/reflog.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/remote.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/remote-ext.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/remote-fd.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/repack.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/replace.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/rerere.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/reset.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/rev-list.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/rev-parse.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/revert.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/rm.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/send-pack.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/shortlog.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/show-branch.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/show-ref.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/stripspace.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/symbolic-ref.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/tag.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/unpack-file.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/unpack-objects.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/update-index.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/update-ref.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/update-server-info.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/upload-archive.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/var.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/verify-commit.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/verify-pack.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/verify-tag.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/builtin/write-tree.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-chmtime.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-ctype.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-config.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-date.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-delta.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-dump-cache-tree.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-dump-split-index.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-genrandom.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-hashmap.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-index-version.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-line-buffer.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-match-trees.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-mergesort.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-mktemp.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-parse-options.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-path-utils.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-prio-queue.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-read-cache.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-regex.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-revision-walking.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-run-command.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-scrap-cache-tree.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-sha1.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-sha1-array.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-sigchain.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-string-list.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-subprocess.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-svn-fe.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-urlmatch-normalization.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-wildmatch.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/credential-store.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/abspath.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/advice.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/alias.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/alloc.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/archive.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/archive-tar.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/archive-zip.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/argv-array.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/attr.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/base85.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bisect.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/blob.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/branch.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bulk-checkin.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/bundle.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/cache-tree.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/color.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/column.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/combine-diff.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/commit.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/compat/obstack.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/compat/terminal.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/config.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/connect.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/connected.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/convert.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/copy.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/credential.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/csum-file.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/ctype.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/date.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/decorate.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diffcore-break.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diffcore-delta.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diffcore-order.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diffcore-pickaxe.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diffcore-rename.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diff-delta.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diff-lib.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diff-no-index.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diff.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/dir.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/editor.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/entry.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/environment.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/ewah/bitmap.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/ewah/ewah_bitmap.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/ewah/ewah_io.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/ewah/ewah_rlw.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/exec_cmd.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/fetch-pack.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/fsck.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/gettext.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/gpg-interface.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/graph.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/grep.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/hashmap.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/help.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/hex.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/ident.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/kwset.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/levenshtein.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/line-log.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/line-range.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/list-objects.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/ll-merge.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/lockfile.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/log-tree.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/mailmap.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/match-trees.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/merge.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/merge-blobs.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/merge-recursive.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/mergesort.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/name-hash.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/notes.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/notes-cache.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/notes-merge.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/notes-utils.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/object.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pack-bitmap.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pack-bitmap-write.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pack-check.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pack-objects.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pack-revindex.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pack-write.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pager.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/parse-options.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/parse-options-cb.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/patch-delta.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/patch-ids.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/path.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pathspec.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pkt-line.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/preload-index.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pretty.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/prio-queue.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/progress.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/prompt.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/quote.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/reachable.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/read-cache.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/reflog-walk.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/refs.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/remote.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/replace_object.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/rerere.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/resolve-undo.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/revision.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/run-command.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/send-pack.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sequencer.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/server-info.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/setup.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sha1-array.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sha1-lookup.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sha1_file.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sha1_name.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/shallow.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sideband.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sigchain.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/split-index.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/strbuf.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/streaming.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/string-list.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/submodule.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/symlinks.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/tag.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/trace.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/trailer.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/transport.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/transport-helper.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/tree-diff.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/tree.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/tree-walk.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/unpack-trees.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/url.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/urlmatch.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/usage.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/userdiff.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/utf8.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/varint.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/version.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/versioncmp.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/walker.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/wildmatch.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/wrapper.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/write_or_die.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/ws.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/wt-status.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/xdiff-interface.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/zlib.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/unix-socket.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/block-sha1/sha1.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/thread-utils.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/compat/strlcpy.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/xdiff/xdiffi.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/xdiff/xprepare.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/xdiff/xutils.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/xdiff/xemit.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/xdiff/xmerge.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/xdiff/xpatience.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/xdiff/xhistogram.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/daemon.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/fast-import.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/http-backend.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/imap-send.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sh-i18n--envsubst.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/shell.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/show-index.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/upload-pack.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/remote-testsvn.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/vcs-svn/line_buffer.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/vcs-svn/sliding_window.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/vcs-svn/repo_tree.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/vcs-svn/fast_export.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/vcs-svn/svndiff.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/vcs-svn/svndump.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/credential-cache.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/credential-cache--daemon.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/add.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/annotate.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/apply.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/archive.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/bisect--helper.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/blame.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/branch.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/bundle.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/cat-file.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/check-attr.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/check-ignore.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/check-mailmap.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/check-ref-format.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/checkout-index.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/checkout.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/clean.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/clone.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/column.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/commit-tree.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/commit.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/config.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/count-objects.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/credential.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/describe.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/diff-files.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/diff-index.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/diff-tree.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/diff.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/fast-export.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/fetch-pack.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/fetch.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/fmt-merge-msg.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/for-each-ref.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/fsck.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/gc.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/get-tar-commit-id.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/grep.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/hash-object.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/help.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/index-pack.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/init-db.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/interpret-trailers.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/log.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/ls-files.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/ls-remote.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/ls-tree.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/mailinfo.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/mailsplit.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/merge.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/merge-base.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/merge-file.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/merge-index.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/merge-ours.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/merge-recursive.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/merge-tree.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/mktag.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/mktree.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/mv.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/name-rev.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/notes.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/pack-objects.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/pack-redundant.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/pack-refs.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/patch-id.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/prune-packed.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/prune.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/push.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/read-tree.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/receive-pack.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/reflog.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/remote.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/remote-ext.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/remote-fd.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/repack.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/replace.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/rerere.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/reset.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/rev-list.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/rev-parse.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/revert.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/rm.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/send-pack.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/shortlog.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/show-branch.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/show-ref.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/stripspace.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/symbolic-ref.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/tag.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/unpack-file.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/unpack-objects.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/update-index.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/update-ref.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/update-server-info.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/upload-archive.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/var.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/verify-commit.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/verify-pack.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/verify-tag.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/builtin/write-tree.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-chmtime.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-ctype.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-config.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-date.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-delta.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-dump-cache-tree.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-dump-split-index.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-genrandom.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-hashmap.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-index-version.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-line-buffer.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-match-trees.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-mergesort.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-mktemp.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-parse-options.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-path-utils.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-prio-queue.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-read-cache.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-regex.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-revision-walking.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-run-command.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-scrap-cache-tree.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-sha1.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-sha1-array.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-sigchain.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-string-list.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-subprocess.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-svn-fe.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-urlmatch-normalization.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-wildmatch.c
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/config.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/config.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/config.log /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/config.log
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/config.log	2017-10-10 12:20:23.794657011 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/config.log	2017-10-10 12:23:59.414649108 +0800
@@ -1,10 +1,10 @@
 This file contains any messages produced by compilers while
 running configure, to aid debugging if configure makes a mistake.
 
-It was created by git configure 2.2.3, which was
+It was created by git configure 2.3.0, which was
 generated by GNU Autoconf 2.69.  Invocation command line was
 
   $ ./configure 
 
 ## --------- ##
 ## Platform. ##
@@ -118,14 +118,14 @@
 compilation terminated.
 configure:3293: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.2.3"
-| #define PACKAGE_STRING "git 2.2.3"
+| #define PACKAGE_VERSION "2.3.0"
+| #define PACKAGE_STRING "git 2.3.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | /* end confdefs.h.  */
 | #include <ac_nonexistent.h>
 configure:3318: result: gcc -E
 configure:3338: gcc -E  conftest.c
@@ -137,14 +137,14 @@
 compilation terminated.
 configure:3352: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.2.3"
-| #define PACKAGE_STRING "git 2.2.3"
+| #define PACKAGE_VERSION "2.3.0"
+| #define PACKAGE_STRING "git 2.3.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | /* end confdefs.h.  */
 | #include <ac_nonexistent.h>
 configure:3381: checking for grep that handles long lines and -e
 configure:3439: result: /bin/grep
@@ -204,14 +204,14 @@
                      ^
 configure:3640: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.2.3"
-| #define PACKAGE_STRING "git 2.2.3"
+| #define PACKAGE_VERSION "2.3.0"
+| #define PACKAGE_STRING "git 2.3.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -315,14 +315,14 @@
 gcc: error: unrecognized command line option '-R'
 configure:4588: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.2.3"
-| #define PACKAGE_STRING "git 2.2.3"
+| #define PACKAGE_VERSION "2.3.0"
+| #define PACKAGE_STRING "git 2.3.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -374,14 +374,14 @@
 collect2: error: ld returned 1 exit status
 configure:5024: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.2.3"
-| #define PACKAGE_STRING "git 2.2.3"
+| #define PACKAGE_VERSION "2.3.0"
+| #define PACKAGE_STRING "git 2.3.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -416,14 +416,14 @@
 collect2: error: ld returned 1 exit status
 configure:5063: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.2.3"
-| #define PACKAGE_STRING "git 2.2.3"
+| #define PACKAGE_VERSION "2.3.0"
+| #define PACKAGE_STRING "git 2.3.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -458,14 +458,14 @@
 collect2: error: ld returned 1 exit status
 configure:5205: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.2.3"
-| #define PACKAGE_STRING "git 2.2.3"
+| #define PACKAGE_VERSION "2.3.0"
+| #define PACKAGE_STRING "git 2.3.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -581,14 +581,14 @@
                         ^
 configure:5867: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.2.3"
-| #define PACKAGE_STRING "git 2.2.3"
+| #define PACKAGE_VERSION "2.3.0"
+| #define PACKAGE_STRING "git 2.3.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -623,14 +623,14 @@
                                ^
 configure:5939: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.2.3"
-| #define PACKAGE_STRING "git 2.2.3"
+| #define PACKAGE_VERSION "2.3.0"
+| #define PACKAGE_STRING "git 2.3.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -651,39 +651,185 @@
 | if (sizeof ((struct itimerval)))
 | 	    return 0;
 |   ;
 |   return 0;
 | }
 configure:5939: result: yes
-configure:5956: checking for struct dirent.d_ino
-configure:5956: gcc -c -g -O2  conftest.c >&5
-configure:5956: $? = 0
-configure:5956: result: yes
-configure:5969: checking for struct dirent.d_type
-configure:5969: gcc -c -g -O2  conftest.c >&5
-configure:5969: $? = 0
-configure:5969: result: yes
-configure:5982: checking for struct passwd.pw_gecos
-configure:5982: gcc -c -g -O2  conftest.c >&5
-configure:5982: $? = 0
-configure:5982: result: yes
-configure:5995: checking for struct sockaddr_storage
-configure:5995: gcc -c -g -O2  conftest.c >&5
-configure:5995: $? = 0
-configure:5995: gcc -c -g -O2  conftest.c >&5
+configure:5958: checking for struct stat.st_mtimespec.tv_nsec
+configure:5958: gcc -c -g -O2  conftest.c >&5
+conftest.c: In function 'main':
+conftest.c:59:12: error: 'struct stat' has no member named 'st_mtimespec'
+ if (ac_aggr.st_mtimespec.tv_nsec)
+            ^
+configure:5958: $? = 1
+configure: failed program was:
+| /* confdefs.h */
+| #define PACKAGE_NAME "git"
+| #define PACKAGE_TARNAME "git"
+| #define PACKAGE_VERSION "2.3.0"
+| #define PACKAGE_STRING "git 2.3.0"
+| #define PACKAGE_BUGREPORT "git@vger.kernel.org"
+| #define PACKAGE_URL ""
+| #define STDC_HEADERS 1
+| #define HAVE_SYS_TYPES_H 1
+| #define HAVE_SYS_STAT_H 1
+| #define HAVE_STDLIB_H 1
+| #define HAVE_STRING_H 1
+| #define HAVE_MEMORY_H 1
+| #define HAVE_STRINGS_H 1
+| #define HAVE_INTTYPES_H 1
+| #define HAVE_STDINT_H 1
+| #define HAVE_UNISTD_H 1
+| #define HAVE_ALLOCA_H 1
+| #define HAVE_ALLOCA 1
+| #define HAVE_STRUCT_ITIMERVAL 1
+| /* end confdefs.h.  */
+| #include <stdio.h>
+| #ifdef HAVE_SYS_TYPES_H
+| # include <sys/types.h>
+| #endif
+| #ifdef HAVE_SYS_STAT_H
+| # include <sys/stat.h>
+| #endif
+| #ifdef STDC_HEADERS
+| # include <stdlib.h>
+| # include <stddef.h>
+| #else
+| # ifdef HAVE_STDLIB_H
+| #  include <stdlib.h>
+| # endif
+| #endif
+| #ifdef HAVE_STRING_H
+| # if !defined STDC_HEADERS && defined HAVE_MEMORY_H
+| #  include <memory.h>
+| # endif
+| # include <string.h>
+| #endif
+| #ifdef HAVE_STRINGS_H
+| # include <strings.h>
+| #endif
+| #ifdef HAVE_INTTYPES_H
+| # include <inttypes.h>
+| #endif
+| #ifdef HAVE_STDINT_H
+| # include <stdint.h>
+| #endif
+| #ifdef HAVE_UNISTD_H
+| # include <unistd.h>
+| #endif
+| int
+| main ()
+| {
+| static struct stat ac_aggr;
+| if (ac_aggr.st_mtimespec.tv_nsec)
+| return 0;
+|   ;
+|   return 0;
+| }
+configure:5958: gcc -c -g -O2  conftest.c >&5
+conftest.c: In function 'main':
+conftest.c:59:19: error: 'struct stat' has no member named 'st_mtimespec'
+ if (sizeof ac_aggr.st_mtimespec.tv_nsec)
+                   ^
+configure:5958: $? = 1
+configure: failed program was:
+| /* confdefs.h */
+| #define PACKAGE_NAME "git"
+| #define PACKAGE_TARNAME "git"
+| #define PACKAGE_VERSION "2.3.0"
+| #define PACKAGE_STRING "git 2.3.0"
+| #define PACKAGE_BUGREPORT "git@vger.kernel.org"
+| #define PACKAGE_URL ""
+| #define STDC_HEADERS 1
+| #define HAVE_SYS_TYPES_H 1
+| #define HAVE_SYS_STAT_H 1
+| #define HAVE_STDLIB_H 1
+| #define HAVE_STRING_H 1
+| #define HAVE_MEMORY_H 1
+| #define HAVE_STRINGS_H 1
+| #define HAVE_INTTYPES_H 1
+| #define HAVE_STDINT_H 1
+| #define HAVE_UNISTD_H 1
+| #define HAVE_ALLOCA_H 1
+| #define HAVE_ALLOCA 1
+| #define HAVE_STRUCT_ITIMERVAL 1
+| /* end confdefs.h.  */
+| #include <stdio.h>
+| #ifdef HAVE_SYS_TYPES_H
+| # include <sys/types.h>
+| #endif
+| #ifdef HAVE_SYS_STAT_H
+| # include <sys/stat.h>
+| #endif
+| #ifdef STDC_HEADERS
+| # include <stdlib.h>
+| # include <stddef.h>
+| #else
+| # ifdef HAVE_STDLIB_H
+| #  include <stdlib.h>
+| # endif
+| #endif
+| #ifdef HAVE_STRING_H
+| # if !defined STDC_HEADERS && defined HAVE_MEMORY_H
+| #  include <memory.h>
+| # endif
+| # include <string.h>
+| #endif
+| #ifdef HAVE_STRINGS_H
+| # include <strings.h>
+| #endif
+| #ifdef HAVE_INTTYPES_H
+| # include <inttypes.h>
+| #endif
+| #ifdef HAVE_STDINT_H
+| # include <stdint.h>
+| #endif
+| #ifdef HAVE_UNISTD_H
+| # include <unistd.h>
+| #endif
+| int
+| main ()
+| {
+| static struct stat ac_aggr;
+| if (sizeof ac_aggr.st_mtimespec.tv_nsec)
+| return 0;
+|   ;
+|   return 0;
+| }
+configure:5958: result: no
+configure:5963: checking for struct stat.st_mtim.tv_nsec
+configure:5963: gcc -c -g -O2  conftest.c >&5
+configure:5963: $? = 0
+configure:5963: result: yes
+configure:5979: checking for struct dirent.d_ino
+configure:5979: gcc -c -g -O2  conftest.c >&5
+configure:5979: $? = 0
+configure:5979: result: yes
+configure:5992: checking for struct dirent.d_type
+configure:5992: gcc -c -g -O2  conftest.c >&5
+configure:5992: $? = 0
+configure:5992: result: yes
+configure:6005: checking for struct passwd.pw_gecos
+configure:6005: gcc -c -g -O2  conftest.c >&5
+configure:6005: $? = 0
+configure:6005: result: yes
+configure:6018: checking for struct sockaddr_storage
+configure:6018: gcc -c -g -O2  conftest.c >&5
+configure:6018: $? = 0
+configure:6018: gcc -c -g -O2  conftest.c >&5
 conftest.c: In function 'main':
 conftest.c:30:38: error: expected expression before ')' token
  if (sizeof ((struct sockaddr_storage)))
                                       ^
-configure:5995: $? = 1
+configure:6018: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.2.3"
-| #define PACKAGE_STRING "git 2.2.3"
+| #define PACKAGE_VERSION "2.3.0"
+| #define PACKAGE_STRING "git 2.3.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -707,28 +853,28 @@
 | {
 | if (sizeof ((struct sockaddr_storage)))
 | 	    return 0;
 |   ;
 |   return 0;
 | }
-configure:5995: result: yes
-configure:6010: checking for struct addrinfo
-configure:6010: gcc -c -g -O2  conftest.c >&5
-configure:6010: $? = 0
-configure:6010: gcc -c -g -O2  conftest.c >&5
+configure:6018: result: yes
+configure:6033: checking for struct addrinfo
+configure:6033: gcc -c -g -O2  conftest.c >&5
+configure:6033: $? = 0
+configure:6033: gcc -c -g -O2  conftest.c >&5
 conftest.c: In function 'main':
 conftest.c:31:30: error: expected expression before ')' token
  if (sizeof ((struct addrinfo)))
                               ^
-configure:6010: $? = 1
+configure:6033: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.2.3"
-| #define PACKAGE_STRING "git 2.2.3"
+| #define PACKAGE_VERSION "2.3.0"
+| #define PACKAGE_STRING "git 2.3.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -753,69 +899,71 @@
 | {
 | if (sizeof ((struct addrinfo)))
 | 	    return 0;
 |   ;
 |   return 0;
 | }
-configure:6010: result: yes
-configure:6018: checking for getaddrinfo
-configure:6018: gcc -o conftest -g -O2   conftest.c  >&5
-configure:6018: $? = 0
-configure:6018: result: yes
-configure:6021: checking for library containing getaddrinfo
-configure:6052: gcc -o conftest -g -O2   conftest.c  >&5
-configure:6052: $? = 0
-configure:6069: result: none required
-configure:6093: checking whether the platform regex can handle null bytes
-configure:6125: result: yes
-configure:6137: checking whether system succeeds to read fopen'ed directory
-configure:6162: gcc -o conftest -g -O2   conftest.c  >&5
-configure:6162: $? = 0
-configure:6162: ./conftest
-configure:6162: $? = 0
-configure:6173: result: no
-configure:6186: checking whether snprintf() and/or vsnprintf() return bogus value
-configure:6224: gcc -o conftest -g -O2   conftest.c  >&5
-configure:6224: $? = 0
-configure:6224: ./conftest
-configure:6224: $? = 0
-configure:6235: result: no
-configure:6248: CHECKS for library functions
-configure:6252: checking libgen.h usability
-configure:6252: gcc -c -g -O2  conftest.c >&5
-configure:6252: $? = 0
-configure:6252: result: yes
-configure:6252: checking libgen.h presence
-configure:6252: gcc -E  conftest.c
-configure:6252: $? = 0
-configure:6252: result: yes
-configure:6252: checking for libgen.h
-configure:6252: result: yes
-configure:6264: checking paths.h usability
-configure:6264: gcc -c -g -O2  conftest.c >&5
-configure:6264: $? = 0
-configure:6264: result: yes
-configure:6264: checking paths.h presence
-configure:6264: gcc -E  conftest.c
-configure:6264: $? = 0
-configure:6264: result: yes
-configure:6264: checking for paths.h
-configure:6264: result: yes
-configure:6276: checking libcharset.h usability
-configure:6276: gcc -c -g -O2  conftest.c >&5
+configure:6033: result: yes
+configure:6041: checking for getaddrinfo
+configure:6041: gcc -o conftest -g -O2   conftest.c  >&5
+configure:6041: $? = 0
+configure:6041: result: yes
+configure:6044: checking for library containing getaddrinfo
+configure:6075: gcc -o conftest -g -O2   conftest.c  >&5
+configure:6075: $? = 0
+configure:6092: result: none required
+configure:6116: checking whether the platform regex can handle null bytes
+configure:6148: result: yes
+configure:6160: checking whether system succeeds to read fopen'ed directory
+configure:6185: gcc -o conftest -g -O2   conftest.c  >&5
+configure:6185: $? = 0
+configure:6185: ./conftest
+configure:6185: $? = 0
+configure:6196: result: no
+configure:6209: checking whether snprintf() and/or vsnprintf() return bogus value
+configure:6247: gcc -o conftest -g -O2   conftest.c  >&5
+configure:6247: $? = 0
+configure:6247: ./conftest
+configure:6247: $? = 0
+configure:6258: result: no
+configure:6270: checking whether the platform uses typical file type bits
+configure:6303: result: yes
+configure:6316: CHECKS for library functions
+configure:6320: checking libgen.h usability
+configure:6320: gcc -c -g -O2  conftest.c >&5
+configure:6320: $? = 0
+configure:6320: result: yes
+configure:6320: checking libgen.h presence
+configure:6320: gcc -E  conftest.c
+configure:6320: $? = 0
+configure:6320: result: yes
+configure:6320: checking for libgen.h
+configure:6320: result: yes
+configure:6332: checking paths.h usability
+configure:6332: gcc -c -g -O2  conftest.c >&5
+configure:6332: $? = 0
+configure:6332: result: yes
+configure:6332: checking paths.h presence
+configure:6332: gcc -E  conftest.c
+configure:6332: $? = 0
+configure:6332: result: yes
+configure:6332: checking for paths.h
+configure:6332: result: yes
+configure:6344: checking libcharset.h usability
+configure:6344: gcc -c -g -O2  conftest.c >&5
 conftest.c:55:24: fatal error: libcharset.h: No such file or directory
  #include <libcharset.h>
                         ^
 compilation terminated.
-configure:6276: $? = 1
+configure:6344: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.2.3"
-| #define PACKAGE_STRING "git 2.2.3"
+| #define PACKAGE_VERSION "2.3.0"
+| #define PACKAGE_STRING "git 2.3.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -860,26 +1008,26 @@
 | # include <stdint.h>
 | #endif
 | #ifdef HAVE_UNISTD_H
 | # include <unistd.h>
 | #endif
 | #include <libcharset.h>
-configure:6276: result: no
-configure:6276: checking libcharset.h presence
-configure:6276: gcc -E  conftest.c
+configure:6344: result: no
+configure:6344: checking libcharset.h presence
+configure:6344: gcc -E  conftest.c
 conftest.c:22:24: fatal error: libcharset.h: No such file or directory
  #include <libcharset.h>
                         ^
 compilation terminated.
-configure:6276: $? = 1
+configure:6344: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.2.3"
-| #define PACKAGE_STRING "git 2.2.3"
+| #define PACKAGE_VERSION "2.3.0"
+| #define PACKAGE_STRING "git 2.3.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -891,28 +1039,28 @@
 | #define HAVE_UNISTD_H 1
 | #define HAVE_ALLOCA_H 1
 | #define HAVE_ALLOCA 1
 | #define HAVE_STRUCT_ITIMERVAL 1
 | /* end confdefs.h.  */
 | #include <libcharset.h>
-configure:6276: result: no
-configure:6276: checking for libcharset.h
-configure:6276: result: no
-configure:6288: checking for strings.h
-configure:6288: result: yes
-configure:6301: checking for locale_charset in -liconv
-configure:6326: gcc -o conftest -g -O2   conftest.c -liconv   >&5
+configure:6344: result: no
+configure:6344: checking for libcharset.h
+configure:6344: result: no
+configure:6356: checking for strings.h
+configure:6356: result: yes
+configure:6369: checking for locale_charset in -liconv
+configure:6394: gcc -o conftest -g -O2   conftest.c -liconv   >&5
 /usr/bin/ld: cannot find -liconv
 collect2: error: ld returned 1 exit status
-configure:6326: $? = 1
+configure:6394: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.2.3"
-| #define PACKAGE_STRING "git 2.2.3"
+| #define PACKAGE_VERSION "2.3.0"
+| #define PACKAGE_STRING "git 2.3.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -938,24 +1086,24 @@
 | main ()
 | {
 | return locale_charset ();
 |   ;
 |   return 0;
 | }
-configure:6335: result: no
-configure:6340: checking for locale_charset in -lcharset
-configure:6365: gcc -o conftest -g -O2   conftest.c -lcharset   >&5
+configure:6403: result: no
+configure:6408: checking for locale_charset in -lcharset
+configure:6433: gcc -o conftest -g -O2   conftest.c -lcharset   >&5
 /usr/bin/ld: cannot find -lcharset
 collect2: error: ld returned 1 exit status
-configure:6365: $? = 1
+configure:6433: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.2.3"
-| #define PACKAGE_STRING "git 2.2.3"
+| #define PACKAGE_VERSION "2.3.0"
+| #define PACKAGE_STRING "git 2.3.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -981,49 +1129,104 @@
 | main ()
 | {
 | return locale_charset ();
 |   ;
 |   return 0;
 | }
-configure:6374: result: no
-configure:6386: checking for setitimer
-configure:6386: gcc -o conftest -g -O2   conftest.c  >&5
-configure:6386: $? = 0
-configure:6386: result: yes
-configure:6389: checking for library containing setitimer
-configure:6420: gcc -o conftest -g -O2   conftest.c  >&5
-configure:6420: $? = 0
-configure:6437: result: none required
-configure:6456: checking for strcasestr
-configure:6456: gcc -o conftest -g -O2   conftest.c  >&5
-configure:6456: $? = 0
-configure:6456: result: yes
-configure:6459: checking for library containing strcasestr
-configure:6490: gcc -o conftest -g -O2   conftest.c  >&5
-configure:6490: $? = 0
-configure:6507: result: none required
-configure:6526: checking for memmem
-configure:6526: gcc -o conftest -g -O2   conftest.c  >&5
-configure:6526: $? = 0
-configure:6526: result: yes
-configure:6529: checking for library containing memmem
-configure:6560: gcc -o conftest -g -O2   conftest.c  >&5
-configure:6560: $? = 0
-configure:6577: result: none required
-configure:6596: checking for strlcpy
-configure:6596: gcc -o conftest -g -O2   conftest.c  >&5
-/tmp/ccGQWqpH.o: In function `main':
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/conftest.c:56: undefined reference to `strlcpy'
+configure:6442: result: no
+configure:6454: checking for HMAC_CTX_cleanup in -lcrypto
+configure:6479: gcc -o conftest -g -O2   conftest.c -lcrypto   >&5
+/usr/bin/ld: cannot find -lcrypto
+collect2: error: ld returned 1 exit status
+configure:6479: $? = 1
+configure: failed program was:
+| /* confdefs.h */
+| #define PACKAGE_NAME "git"
+| #define PACKAGE_TARNAME "git"
+| #define PACKAGE_VERSION "2.3.0"
+| #define PACKAGE_STRING "git 2.3.0"
+| #define PACKAGE_BUGREPORT "git@vger.kernel.org"
+| #define PACKAGE_URL ""
+| #define STDC_HEADERS 1
+| #define HAVE_SYS_TYPES_H 1
+| #define HAVE_SYS_STAT_H 1
+| #define HAVE_STDLIB_H 1
+| #define HAVE_STRING_H 1
+| #define HAVE_MEMORY_H 1
+| #define HAVE_STRINGS_H 1
+| #define HAVE_INTTYPES_H 1
+| #define HAVE_STDINT_H 1
+| #define HAVE_UNISTD_H 1
+| #define HAVE_ALLOCA_H 1
+| #define HAVE_ALLOCA 1
+| #define HAVE_STRUCT_ITIMERVAL 1
+| /* end confdefs.h.  */
+| 
+| /* Override any GCC internal prototype to avoid an error.
+|    Use char because int might match the return type of a GCC
+|    builtin and then its argument prototype would still apply.  */
+| #ifdef __cplusplus
+| extern "C"
+| #endif
+| char HMAC_CTX_cleanup ();
+| int
+| main ()
+| {
+| return HMAC_CTX_cleanup ();
+|   ;
+|   return 0;
+| }
+configure:6488: result: no
+configure:6504: checking for clock_gettime
+configure:6504: gcc -o conftest -g -O2   conftest.c  >&5
+configure:6504: $? = 0
+configure:6504: result: yes
+configure:6507: checking for library containing clock_gettime
+configure:6538: gcc -o conftest -g -O2   conftest.c  >&5
+configure:6538: $? = 0
+configure:6555: result: none required
+configure:6577: checking for CLOCK_MONOTONIC
+configure:6594: gcc -c -g -O2  conftest.c >&5
+configure:6594: $? = 0
+configure:6595: result: yes
+configure:6608: checking for setitimer
+configure:6608: gcc -o conftest -g -O2   conftest.c  >&5
+configure:6608: $? = 0
+configure:6608: result: yes
+configure:6611: checking for library containing setitimer
+configure:6642: gcc -o conftest -g -O2   conftest.c  >&5
+configure:6642: $? = 0
+configure:6659: result: none required
+configure:6678: checking for strcasestr
+configure:6678: gcc -o conftest -g -O2   conftest.c  >&5
+configure:6678: $? = 0
+configure:6678: result: yes
+configure:6681: checking for library containing strcasestr
+configure:6712: gcc -o conftest -g -O2   conftest.c  >&5
+configure:6712: $? = 0
+configure:6729: result: none required
+configure:6748: checking for memmem
+configure:6748: gcc -o conftest -g -O2   conftest.c  >&5
+configure:6748: $? = 0
+configure:6748: result: yes
+configure:6751: checking for library containing memmem
+configure:6782: gcc -o conftest -g -O2   conftest.c  >&5
+configure:6782: $? = 0
+configure:6799: result: none required
+configure:6818: checking for strlcpy
+configure:6818: gcc -o conftest -g -O2   conftest.c  >&5
+/tmp/cc3tkg8p.o: In function `main':
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/conftest.c:56: undefined reference to `strlcpy'
 collect2: error: ld returned 1 exit status
-configure:6596: $? = 1
+configure:6818: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.2.3"
-| #define PACKAGE_STRING "git 2.2.3"
+| #define PACKAGE_VERSION "2.3.0"
+| #define PACKAGE_STRING "git 2.3.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -1072,28 +1275,28 @@
 | main ()
 | {
 | return strlcpy ();
 |   ;
 |   return 0;
 | }
-configure:6596: result: no
-configure:6666: checking for uintmax_t
-configure:6666: gcc -c -g -O2  conftest.c >&5
-configure:6666: $? = 0
-configure:6666: gcc -c -g -O2  conftest.c >&5
+configure:6818: result: no
+configure:6888: checking for uintmax_t
+configure:6888: gcc -c -g -O2  conftest.c >&5
+configure:6888: $? = 0
+configure:6888: gcc -c -g -O2  conftest.c >&5
 conftest.c: In function 'main':
 conftest.c:29:24: error: expected expression before ')' token
  if (sizeof ((uintmax_t)))
                         ^
-configure:6666: $? = 1
+configure:6888: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.2.3"
-| #define PACKAGE_STRING "git 2.2.3"
+| #define PACKAGE_VERSION "2.3.0"
+| #define PACKAGE_STRING "git 2.3.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -1116,73 +1319,73 @@
 | {
 | if (sizeof ((uintmax_t)))
 | 	    return 0;
 |   ;
 |   return 0;
 | }
-configure:6666: result: yes
-configure:6680: checking for strtoumax
-configure:6680: gcc -o conftest -g -O2   conftest.c  >&5
-configure:6680: $? = 0
-configure:6680: result: yes
-configure:6683: checking for library containing strtoumax
-configure:6714: gcc -o conftest -g -O2   conftest.c  >&5
-configure:6714: $? = 0
-configure:6731: result: none required
-configure:6750: checking for setenv
-configure:6750: gcc -o conftest -g -O2   conftest.c  >&5
-configure:6750: $? = 0
-configure:6750: result: yes
-configure:6753: checking for library containing setenv
-configure:6784: gcc -o conftest -g -O2   conftest.c  >&5
-configure:6784: $? = 0
-configure:6801: result: none required
-configure:6820: checking for unsetenv
-configure:6820: gcc -o conftest -g -O2   conftest.c  >&5
-configure:6820: $? = 0
-configure:6820: result: yes
-configure:6823: checking for library containing unsetenv
-configure:6854: gcc -o conftest -g -O2   conftest.c  >&5
-configure:6854: $? = 0
-configure:6871: result: none required
-configure:6890: checking for mkdtemp
-configure:6890: gcc -o conftest -g -O2   conftest.c  >&5
-configure:6890: $? = 0
-configure:6890: result: yes
-configure:6893: checking for library containing mkdtemp
-configure:6924: gcc -o conftest -g -O2   conftest.c  >&5
-configure:6924: $? = 0
-configure:6941: result: none required
-configure:6960: checking for mkstemps
-configure:6960: gcc -o conftest -g -O2   conftest.c  >&5
-configure:6960: $? = 0
-configure:6960: result: yes
-configure:6963: checking for library containing mkstemps
-configure:6994: gcc -o conftest -g -O2   conftest.c  >&5
-configure:6994: $? = 0
-configure:7011: result: none required
-configure:7030: checking for initgroups
-configure:7030: gcc -o conftest -g -O2   conftest.c  >&5
-configure:7030: $? = 0
-configure:7030: result: yes
-configure:7033: checking for library containing initgroups
-configure:7064: gcc -o conftest -g -O2   conftest.c  >&5
-configure:7064: $? = 0
-configure:7081: result: none required
-configure:7141: checking for POSIX Threads with ''
-configure:7166: gcc -o conftest  -g -O2   conftest.c  >&5
-/tmp/ccTX50q9.o: In function `main':
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/conftest.c:33: undefined reference to `pthread_key_create'
+configure:6888: result: yes
+configure:6902: checking for strtoumax
+configure:6902: gcc -o conftest -g -O2   conftest.c  >&5
+configure:6902: $? = 0
+configure:6902: result: yes
+configure:6905: checking for library containing strtoumax
+configure:6936: gcc -o conftest -g -O2   conftest.c  >&5
+configure:6936: $? = 0
+configure:6953: result: none required
+configure:6972: checking for setenv
+configure:6972: gcc -o conftest -g -O2   conftest.c  >&5
+configure:6972: $? = 0
+configure:6972: result: yes
+configure:6975: checking for library containing setenv
+configure:7006: gcc -o conftest -g -O2   conftest.c  >&5
+configure:7006: $? = 0
+configure:7023: result: none required
+configure:7042: checking for unsetenv
+configure:7042: gcc -o conftest -g -O2   conftest.c  >&5
+configure:7042: $? = 0
+configure:7042: result: yes
+configure:7045: checking for library containing unsetenv
+configure:7076: gcc -o conftest -g -O2   conftest.c  >&5
+configure:7076: $? = 0
+configure:7093: result: none required
+configure:7112: checking for mkdtemp
+configure:7112: gcc -o conftest -g -O2   conftest.c  >&5
+configure:7112: $? = 0
+configure:7112: result: yes
+configure:7115: checking for library containing mkdtemp
+configure:7146: gcc -o conftest -g -O2   conftest.c  >&5
+configure:7146: $? = 0
+configure:7163: result: none required
+configure:7182: checking for mkstemps
+configure:7182: gcc -o conftest -g -O2   conftest.c  >&5
+configure:7182: $? = 0
+configure:7182: result: yes
+configure:7185: checking for library containing mkstemps
+configure:7216: gcc -o conftest -g -O2   conftest.c  >&5
+configure:7216: $? = 0
+configure:7233: result: none required
+configure:7252: checking for initgroups
+configure:7252: gcc -o conftest -g -O2   conftest.c  >&5
+configure:7252: $? = 0
+configure:7252: result: yes
+configure:7255: checking for library containing initgroups
+configure:7286: gcc -o conftest -g -O2   conftest.c  >&5
+configure:7286: $? = 0
+configure:7303: result: none required
+configure:7363: checking for POSIX Threads with ''
+configure:7388: gcc -o conftest  -g -O2   conftest.c  >&5
+/tmp/ccChI6TF.o: In function `main':
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/conftest.c:33: undefined reference to `pthread_key_create'
 collect2: error: ld returned 1 exit status
-configure:7166: $? = 1
+configure:7388: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.2.3"
-| #define PACKAGE_STRING "git 2.2.3"
+| #define PACKAGE_VERSION "2.3.0"
+| #define PACKAGE_STRING "git 2.3.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -1213,23 +1416,23 @@
 | 	retcode |= pthread_mutex_unlock(&test_mutex);
 | 	return retcode;
 | 
 |   ;
 |   return 0;
 | }
-configure:7176: result: no
-configure:7141: checking for POSIX Threads with '-mt'
-configure:7166: gcc -o conftest -mt -g -O2   conftest.c  >&5
+configure:7398: result: no
+configure:7363: checking for POSIX Threads with '-mt'
+configure:7388: gcc -o conftest -mt -g -O2   conftest.c  >&5
 gcc: error: unrecognized command line option '-mt'
-configure:7166: $? = 1
+configure:7388: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME "git"
 | #define PACKAGE_TARNAME "git"
-| #define PACKAGE_VERSION "2.2.3"
-| #define PACKAGE_STRING "git 2.2.3"
+| #define PACKAGE_VERSION "2.3.0"
+| #define PACKAGE_STRING "git 2.3.0"
 | #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 | #define PACKAGE_URL ""
 | #define STDC_HEADERS 1
 | #define HAVE_SYS_TYPES_H 1
 | #define HAVE_SYS_STAT_H 1
 | #define HAVE_STDLIB_H 1
@@ -1260,36 +1463,36 @@
 | 	retcode |= pthread_mutex_unlock(&test_mutex);
 | 	return retcode;
 | 
 |   ;
 |   return 0;
 | }
-configure:7176: result: no
-configure:7141: checking for POSIX Threads with '-pthread'
-configure:7166: gcc -o conftest -pthread -g -O2   conftest.c  >&5
-configure:7166: $? = 0
-configure:7167: result: yes
-configure:7433: creating ./config.status
+configure:7398: result: no
+configure:7363: checking for POSIX Threads with '-pthread'
+configure:7388: gcc -o conftest -pthread -g -O2   conftest.c  >&5
+configure:7388: $? = 0
+configure:7389: result: yes
+configure:7655: creating ./config.status
 
 ## ---------------------- ##
 ## Running config.status. ##
 ## ---------------------- ##
 
-This file was extended by git config.status 2.2.3, which was
+This file was extended by git config.status 2.3.0, which was
 generated by GNU Autoconf 2.69.  Invocation command line was
 
   CONFIG_FILES    = 
   CONFIG_HEADERS  = 
   CONFIG_LINKS    = 
   CONFIG_COMMANDS = 
   $ ./config.status 
 
 on sarah-Erazer-X310
 
-config.status:795: creating config.mak.autogen
-config.status:956: executing config.mak.autogen commands
+config.status:799: creating config.mak.autogen
+config.status:960: executing config.mak.autogen commands
 
 ## ---------------- ##
 ## Cache variables. ##
 ## ---------------- ##
 
 ac_cv_c_compiler_gnu=yes
@@ -1312,12 +1515,13 @@
 ac_cv_env_host_alias_set=
 ac_cv_env_host_alias_value=
 ac_cv_env_target_alias_set=
 ac_cv_env_target_alias_value=
 ac_cv_fread_reads_directories=no
 ac_cv_func_alloca_works=yes
+ac_cv_func_clock_gettime=yes
 ac_cv_func_getaddrinfo=yes
 ac_cv_func_hstrerror=yes
 ac_cv_func_inet_ntop=yes
 ac_cv_func_inet_pton=yes
 ac_cv_func_initgroups=yes
 ac_cv_func_memmem=yes
@@ -1346,30 +1550,35 @@
 ac_cv_header_sys_types_h=yes
 ac_cv_header_unistd_h=yes
 ac_cv_lib_c_basename=yes
 ac_cv_lib_c_gettext=yes
 ac_cv_lib_c_socket=yes
 ac_cv_lib_charset_locale_charset=no
+ac_cv_lib_crypto_HMAC_CTX_cleanup=no
 ac_cv_lib_crypto_SHA1_Init=no
 ac_cv_lib_curl_curl_global_init=no
 ac_cv_lib_expat_XML_ParserCreate=yes
 ac_cv_lib_iconv_locale_charset=no
 ac_cv_lib_ssl_SHA1_Init=no
 ac_cv_member_struct_dirent_d_ino=yes
 ac_cv_member_struct_dirent_d_type=yes
 ac_cv_member_struct_passwd_pw_gecos=yes
+ac_cv_member_struct_stat_st_mtim_tv_nsec=yes
+ac_cv_member_struct_stat_st_mtimespec_tv_nsec=no
 ac_cv_objext=o
 ac_cv_path_EGREP='/bin/grep -E'
 ac_cv_path_GREP=/bin/grep
 ac_cv_prog_CPP='gcc -E'
 ac_cv_prog_DIFF=diff
 ac_cv_prog_TAR=tar
 ac_cv_prog_ac_ct_AR=ar
 ac_cv_prog_ac_ct_CC=gcc
 ac_cv_prog_cc_c89=
 ac_cv_prog_cc_g=yes
+ac_cv_sane_mode_bits=yes
+ac_cv_search_clock_gettime='none required'
 ac_cv_search_getaddrinfo='none required'
 ac_cv_search_initgroups='none required'
 ac_cv_search_memmem='none required'
 ac_cv_search_mkdtemp='none required'
 ac_cv_search_mkstemps='none required'
 ac_cv_search_setenv='none required'
@@ -1396,13 +1605,13 @@
 AR='ar'
 ASCIIDOC=''
 CC='gcc'
 CFLAGS='-g -O2'
 CPP='gcc -E'
 CPPFLAGS=''
-DEFS='-DPACKAGE_NAME=\"git\" -DPACKAGE_TARNAME=\"git\" -DPACKAGE_VERSION=\"2.2.3\" -DPACKAGE_STRING=\"git\ 2.2.3\" -DPACKAGE_BUGREPORT=\"git@vger.kernel.org\" -DPACKAGE_URL=\"\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ALLOCA_H=1 -DHAVE_ALLOCA=1 -DHAVE_STRUCT_ITIMERVAL=1'
+DEFS='-DPACKAGE_NAME=\"git\" -DPACKAGE_TARNAME=\"git\" -DPACKAGE_VERSION=\"2.3.0\" -DPACKAGE_STRING=\"git\ 2.3.0\" -DPACKAGE_BUGREPORT=\"git@vger.kernel.org\" -DPACKAGE_URL=\"\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ALLOCA_H=1 -DHAVE_ALLOCA=1 -DHAVE_STRUCT_ITIMERVAL=1'
 DIFF='diff'
 ECHO_C=''
 ECHO_N='-n'
 ECHO_T=''
 EGREP='/bin/grep -E'
 EXEEXT=''
@@ -1411,16 +1620,16 @@
 LIBOBJS=''
 LIBS=''
 LTLIBOBJS=''
 OBJEXT='o'
 PACKAGE_BUGREPORT='git@vger.kernel.org'
 PACKAGE_NAME='git'
-PACKAGE_STRING='git 2.2.3'
+PACKAGE_STRING='git 2.3.0'
 PACKAGE_TARNAME='git'
 PACKAGE_URL=''
-PACKAGE_VERSION='2.2.3'
+PACKAGE_VERSION='2.3.0'
 PATH_SEPARATOR=':'
 SHELL='/bin/bash'
 TAR='tar'
 TCLTK_PATH='wish'
 ac_ct_AR='ar'
 ac_ct_CC='gcc'
@@ -1454,14 +1663,14 @@
 ## confdefs.h. ##
 ## ----------- ##
 
 /* confdefs.h */
 #define PACKAGE_NAME "git"
 #define PACKAGE_TARNAME "git"
-#define PACKAGE_VERSION "2.2.3"
-#define PACKAGE_STRING "git 2.2.3"
+#define PACKAGE_VERSION "2.3.0"
+#define PACKAGE_STRING "git 2.3.0"
 #define PACKAGE_BUGREPORT "git@vger.kernel.org"
 #define PACKAGE_URL ""
 #define STDC_HEADERS 1
 #define HAVE_SYS_TYPES_H 1
 #define HAVE_SYS_STAT_H 1
 #define HAVE_STDLIB_H 1
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/config.mak.autogen /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/config.mak.autogen
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/config.mak.autogen	2017-10-10 12:20:23.782657011 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/config.mak.autogen	2017-10-10 12:23:59.402649109 +0800
@@ -54,17 +54,21 @@
 NO_GECOS_IN_PWENT=
 NO_SOCKADDR_STORAGE=
 NO_IPV6=
 NO_REGEX=
 FREAD_READS_DIRECTORIES=
 SNPRINTF_RETURNS_BOGUS=
+NEEDS_MODE_TRANSLATION=
 NO_LIBGEN_H=
 HAVE_PATHS_H=YesPlease
 HAVE_LIBCHARSET_H=
 HAVE_STRINGS_H=YesPlease
 CHARSET_LIB=
+NO_HMAC_CTX_CLEANUP=YesPlease
+HAVE_CLOCK_GETTIME=YesPlease
+HAVE_CLOCK_MONOTONIC=YesPlease
 NO_SETITIMER=
 NO_STRCASESTR=
 NO_MEMMEM=
 NO_STRLCPY=YesPlease
 NO_UINTMAX_T=
 NO_STRTOUMAX=
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/config.mak.uname /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/config.mak.uname
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/config.mak.uname	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/config.mak.uname	2015-02-06 05:40:08.000000000 +0800
@@ -32,12 +32,13 @@
 	NO_STRLCPY = YesPlease
 	NO_MKSTEMPS = YesPlease
 	HAVE_PATHS_H = YesPlease
 	LIBC_CONTAINS_LIBINTL = YesPlease
 	HAVE_DEV_TTY = YesPlease
 	HAVE_CLOCK_GETTIME = YesPlease
+	HAVE_CLOCK_MONOTONIC = YesPlease
 endif
 ifeq ($(uname_S),GNU/kFreeBSD)
 	HAVE_ALLOCA_H = YesPlease
 	NO_STRLCPY = YesPlease
 	NO_MKSTEMPS = YesPlease
 	HAVE_PATHS_H = YesPlease
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/config.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/config.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/config.status /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/config.status
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/config.status	2017-10-10 12:20:23.750657012 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/config.status	2017-10-10 12:23:59.374649110 +0800
@@ -377,13 +377,13 @@
 ## Main body of $CONFIG_STATUS script. ##
 ## ----------------------------------- ##
 # Save the log message, to keep $0 and so on meaningful, and to
 # report actual input values of CONFIG_FILES etc. instead of their
 # values after options handling.
 ac_log="
-This file was extended by git $as_me 2.2.3, which was
+This file was extended by git $as_me 2.3.0, which was
 generated by GNU Autoconf 2.69.  Invocation command line was
 
   CONFIG_FILES    = $CONFIG_FILES
   CONFIG_HEADERS  = $CONFIG_HEADERS
   CONFIG_LINKS    = $CONFIG_LINKS
   CONFIG_COMMANDS = $CONFIG_COMMANDS
@@ -420,21 +420,21 @@
 $config_commands
 
 Report bugs to <git@vger.kernel.org>."
 
 ac_cs_config=""
 ac_cs_version="\
-git config.status 2.2.3
+git config.status 2.3.0
 configured by ./configure, generated by GNU Autoconf 2.69,
   with options \"$ac_cs_config\"
 
 Copyright (C) 2012 Free Software Foundation, Inc.
 This config.status script is free software; the Free Software Foundation
 gives unlimited permission to copy, distribute and modify it."
 
-ac_pwd='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3'
+ac_pwd='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0'
 srcdir='.'
 test -n "$AWK" || AWK=awk
 # The default lists apply if the user does not specify any file.
 ac_need_defaults=:
 while test $# != 0
 do
@@ -552,17 +552,21 @@
 NO_GECOS_IN_PWENT=
 NO_SOCKADDR_STORAGE=
 NO_IPV6=
 NO_REGEX=
 FREAD_READS_DIRECTORIES=
 SNPRINTF_RETURNS_BOGUS=
+NEEDS_MODE_TRANSLATION=
 NO_LIBGEN_H=
 HAVE_PATHS_H=YesPlease
 HAVE_LIBCHARSET_H=
 HAVE_STRINGS_H=YesPlease
 CHARSET_LIB=
+NO_HMAC_CTX_CLEANUP=YesPlease
+HAVE_CLOCK_GETTIME=YesPlease
+HAVE_CLOCK_MONOTONIC=YesPlease
 NO_SETITIMER=
 NO_STRCASESTR=
 NO_MEMMEM=
 NO_STRLCPY=YesPlease
 NO_UINTMAX_T=
 NO_STRTOUMAX=
@@ -669,13 +673,13 @@
 S["host_alias"]=""
 S["build_alias"]=""
 S["LIBS"]=""
 S["ECHO_T"]=""
 S["ECHO_N"]="-n"
 S["ECHO_C"]=""
-S["DEFS"]="-DPACKAGE_NAME=\\\"git\\\" -DPACKAGE_TARNAME=\\\"git\\\" -DPACKAGE_VERSION=\\\"2.2.3\\\" -DPACKAGE_STRING=\\\"git\\ 2.2.3\\\" -DPACKAGE_BUGREPORT=\\\"git@vger.kernel.o"\
+S["DEFS"]="-DPACKAGE_NAME=\\\"git\\\" -DPACKAGE_TARNAME=\\\"git\\\" -DPACKAGE_VERSION=\\\"2.3.0\\\" -DPACKAGE_STRING=\\\"git\\ 2.3.0\\\" -DPACKAGE_BUGREPORT=\\\"git@vger.kernel.o"\
 "rg\\\" -DPACKAGE_URL=\\\"\\\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRIN"\
 "GS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ALLOCA_H=1 -DHAVE_ALLOCA=1 -DHAVE_STRUCT_ITIMERVAL=1"
 S["mandir"]="${datarootdir}/man"
 S["localedir"]="${datarootdir}/locale"
 S["libdir"]="${exec_prefix}/lib"
 S["psdir"]="${docdir}"
@@ -696,14 +700,14 @@
 S["bindir"]="${exec_prefix}/bin"
 S["program_transform_name"]="s,x,x,"
 S["prefix"]="/usr/local"
 S["exec_prefix"]="${prefix}"
 S["PACKAGE_URL"]=""
 S["PACKAGE_BUGREPORT"]="git@vger.kernel.org"
-S["PACKAGE_STRING"]="git 2.2.3"
-S["PACKAGE_VERSION"]="2.2.3"
+S["PACKAGE_STRING"]="git 2.3.0"
+S["PACKAGE_VERSION"]="2.3.0"
 S["PACKAGE_TARNAME"]="git"
 S["PACKAGE_NAME"]="git"
 S["PATH_SEPARATOR"]=":"
 S["SHELL"]="/bin/bash"
 _ACAWK
 cat >>"$ac_tmp/subs1.awk" <<_ACAWK &&
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/configure /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/configure
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/configure	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/configure	2015-02-06 05:40:08.000000000 +0800
@@ -1,9 +1,9 @@
 #! /bin/sh
 # Guess values for system-dependent variables and create Makefiles.
-# Generated by GNU Autoconf 2.69 for git 2.2.3.
+# Generated by GNU Autoconf 2.69 for git 2.3.0.
 #
 # Report bugs to <git@vger.kernel.org>.
 #
 #
 # Copyright (C) 1992-1996, 1998-2012 Free Software Foundation, Inc.
 #
@@ -577,14 +577,14 @@
 MFLAGS=
 MAKEFLAGS=
 
 # Identity of this package.
 PACKAGE_NAME='git'
 PACKAGE_TARNAME='git'
-PACKAGE_VERSION='2.2.3'
-PACKAGE_STRING='git 2.2.3'
+PACKAGE_VERSION='2.3.0'
+PACKAGE_STRING='git 2.3.0'
 PACKAGE_BUGREPORT='git@vger.kernel.org'
 PACKAGE_URL=''
 
 ac_unique_file="git.c"
 # Factoring default headers for most tests.
 ac_includes_default="\
@@ -1248,13 +1248,13 @@
 # Report the --help message.
 #
 if test "$ac_init_help" = "long"; then
   # Omit some internal or obsolete options to make the list less imposing.
   # This message is too long to be a string in the A/UX 3.1 sh.
   cat <<_ACEOF
-\`configure' configures git 2.2.3 to adapt to many kinds of systems.
+\`configure' configures git 2.3.0 to adapt to many kinds of systems.
 
 Usage: $0 [OPTION]... [VAR=VALUE]...
 
 To assign environment variables (e.g., CC, CFLAGS...), specify them as
 VAR=VALUE.  See below for descriptions of some of the useful variables.
 
@@ -1309,13 +1309,13 @@
   cat <<\_ACEOF
 _ACEOF
 fi
 
 if test -n "$ac_init_help"; then
   case $ac_init_help in
-     short | recursive ) echo "Configuration of git 2.2.3:";;
+     short | recursive ) echo "Configuration of git 2.3.0:";;
    esac
   cat <<\_ACEOF
 
 Optional Features:
   --disable-option-checking  ignore unrecognized --enable/--with options
   --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
@@ -1448,13 +1448,13 @@
   done
 fi
 
 test -n "$ac_init_help" && exit $ac_status
 if $ac_init_version; then
   cat <<\_ACEOF
-git configure 2.2.3
+git configure 2.3.0
 generated by GNU Autoconf 2.69
 
 Copyright (C) 2012 Free Software Foundation, Inc.
 This configure script is free software; the Free Software Foundation
 gives unlimited permission to copy, distribute and modify it.
 _ACEOF
@@ -1928,13 +1928,13 @@
 
 } # ac_fn_c_check_member
 cat >config.log <<_ACEOF
 This file contains any messages produced by compilers while
 running configure, to aid debugging if configure makes a mistake.
 
-It was created by git $as_me 2.2.3, which was
+It was created by git $as_me 2.3.0, which was
 generated by GNU Autoconf 2.69.  Invocation command line was
 
   $ $0 $@
 
 _ACEOF
 exec 5>>config.log
@@ -5949,12 +5949,35 @@
   NO_STRUCT_ITIMERVAL=UnfortunatelyYes
 fi
 
 
 config_appended_defs="$config_appended_defs${newline}NO_STRUCT_ITIMERVAL=${NO_STRUCT_ITIMERVAL}"
 #
+# Define USE_ST_TIMESPEC=YesPlease when stat.st_mtimespec.tv_nsec exists.
+# Define NO_NSEC=YesPlease when neither stat.st_mtim.tv_nsec nor
+# stat.st_mtimespec.tv_nsec exists.
+ac_fn_c_check_member "$LINENO" "struct stat" "st_mtimespec.tv_nsec" "ac_cv_member_struct_stat_st_mtimespec_tv_nsec" "$ac_includes_default"
+if test "x$ac_cv_member_struct_stat_st_mtimespec_tv_nsec" = xyes; then :
+
+fi
+
+ac_fn_c_check_member "$LINENO" "struct stat" "st_mtim.tv_nsec" "ac_cv_member_struct_stat_st_mtim_tv_nsec" "$ac_includes_default"
+if test "x$ac_cv_member_struct_stat_st_mtim_tv_nsec" = xyes; then :
+
+fi
+
+if test x$ac_cv_member_struct_stat_st_mtimespec_tv_nsec = xyes; then
+	USE_ST_TIMESPEC=YesPlease
+
+config_appended_defs="$config_appended_defs${newline}USE_ST_TIMESPEC=${USE_ST_TIMESPEC}"
+elif test x$ac_cv_member_struct_stat_st_mtim_tv_nsec != xyes; then
+	NO_NSEC=YesPlease
+
+config_appended_defs="$config_appended_defs${newline}NO_NSEC=${NO_NSEC}"
+fi
+#
 # Define NO_D_INO_IN_DIRENT if you don't have d_ino in your struct dirent.
 ac_fn_c_check_member "$LINENO" "struct dirent" "d_ino" "ac_cv_member_struct_dirent_d_ino" "#include <dirent.h>
 "
 if test "x$ac_cv_member_struct_dirent_d_ino" = xyes; then :
   NO_D_INO_IN_DIRENT=
 else
@@ -6238,12 +6261,57 @@
 	SNPRINTF_RETURNS_BOGUS=UnfortunatelyYes
 else
 	SNPRINTF_RETURNS_BOGUS=
 fi
 
 config_appended_defs="$config_appended_defs${newline}SNPRINTF_RETURNS_BOGUS=${SNPRINTF_RETURNS_BOGUS}"
+#
+# Define NEEDS_MODE_TRANSLATION if your OS strays from the typical file type
+# bits in mode values.
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the platform uses typical file type bits" >&5
+$as_echo_n "checking whether the platform uses typical file type bits... " >&6; }
+if ${ac_cv_sane_mode_bits+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+$ac_includes_default
+int
+main ()
+{
+#if S_IFMT == 0170000 && \
+	S_IFREG == 0100000 && S_IFDIR == 0040000 && S_IFLNK == 0120000 && \
+	S_IFBLK == 0060000 && S_IFCHR == 0020000 && \
+	S_IFIFO == 0010000 && S_IFSOCK == 0140000
+yippeeyeswehaveit
+#endif
+
+  ;
+  return 0;
+}
+_ACEOF
+if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
+  $EGREP "yippeeyeswehaveit" >/dev/null 2>&1; then :
+  ac_cv_sane_mode_bits=yes
+else
+  ac_cv_sane_mode_bits=no
+fi
+rm -f conftest*
+
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_sane_mode_bits" >&5
+$as_echo "$ac_cv_sane_mode_bits" >&6; }
+if test $ac_cv_sane_mode_bits = yes; then
+	NEEDS_MODE_TRANSLATION=
+else
+	NEEDS_MODE_TRANSLATION=UnfortunatelyYes
+fi
+
+config_appended_defs="$config_appended_defs${newline}NEEDS_MODE_TRANSLATION=${NEEDS_MODE_TRANSLATION}"
 
 
 ## Checks for library functions.
 ## (in default C library and libraries checked by AC_CHECK_LIB)
 { $as_echo "$as_me:${as_lineno-$LINENO}: CHECKS for library functions" >&5
 $as_echo "$as_me: CHECKS for library functions" >&6;}
@@ -6379,12 +6447,166 @@
 
 fi
 
 
 config_appended_defs="$config_appended_defs${newline}CHARSET_LIB=${CHARSET_LIB}"
 #
+# Define NO_HMAC_CTX_CLEANUP=YesPlease if HMAC_CTX_cleanup is missing.
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for HMAC_CTX_cleanup in -lcrypto" >&5
+$as_echo_n "checking for HMAC_CTX_cleanup in -lcrypto... " >&6; }
+if ${ac_cv_lib_crypto_HMAC_CTX_cleanup+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_check_lib_save_LIBS=$LIBS
+LIBS="-lcrypto  $LIBS"
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char HMAC_CTX_cleanup ();
+int
+main ()
+{
+return HMAC_CTX_cleanup ();
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ac_cv_lib_crypto_HMAC_CTX_cleanup=yes
+else
+  ac_cv_lib_crypto_HMAC_CTX_cleanup=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+LIBS=$ac_check_lib_save_LIBS
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_crypto_HMAC_CTX_cleanup" >&5
+$as_echo "$ac_cv_lib_crypto_HMAC_CTX_cleanup" >&6; }
+if test "x$ac_cv_lib_crypto_HMAC_CTX_cleanup" = xyes; then :
+  cat >>confdefs.h <<_ACEOF
+#define HAVE_LIBCRYPTO 1
+_ACEOF
+
+  LIBS="-lcrypto $LIBS"
+
+else
+
+config_appended_defs="$config_appended_defs${newline}NO_HMAC_CTX_CLEANUP=YesPlease"
+fi
+
+#
+# Define HAVE_CLOCK_GETTIME=YesPlease if clock_gettime is available.
+ac_fn_c_check_func "$LINENO" "clock_gettime" "ac_cv_func_clock_gettime"
+if test "x$ac_cv_func_clock_gettime" = xyes; then :
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for library containing clock_gettime" >&5
+$as_echo_n "checking for library containing clock_gettime... " >&6; }
+if ${ac_cv_search_clock_gettime+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_func_search_save_LIBS=$LIBS
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char clock_gettime ();
+int
+main ()
+{
+return clock_gettime ();
+  ;
+  return 0;
+}
+_ACEOF
+for ac_lib in '' ; do
+  if test -z "$ac_lib"; then
+    ac_res="none required"
+  else
+    ac_res=-l$ac_lib
+    LIBS="-l$ac_lib  $ac_func_search_save_LIBS"
+  fi
+  if ac_fn_c_try_link "$LINENO"; then :
+  ac_cv_search_clock_gettime=$ac_res
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext
+  if ${ac_cv_search_clock_gettime+:} false; then :
+  break
+fi
+done
+if ${ac_cv_search_clock_gettime+:} false; then :
+
+else
+  ac_cv_search_clock_gettime=no
+fi
+rm conftest.$ac_ext
+LIBS=$ac_func_search_save_LIBS
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_search_clock_gettime" >&5
+$as_echo "$ac_cv_search_clock_gettime" >&6; }
+ac_res=$ac_cv_search_clock_gettime
+if test "$ac_res" != no; then :
+  test "$ac_res" = "none required" || LIBS="$ac_res $LIBS"
+  HAVE_CLOCK_GETTIME=YesPlease
+else
+  HAVE_CLOCK_GETTIME=
+fi
+
+
+else
+  HAVE_CLOCK_GETTIME=
+fi
+
+
+config_appended_defs="$config_appended_defs${newline}HAVE_CLOCK_GETTIME=${HAVE_CLOCK_GETTIME}"
+
+
+
+#
+# Define HAVE_CLOCK_MONOTONIC=YesPlease if CLOCK_MONOTONIC is available.
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for CLOCK_MONOTONIC" >&5
+$as_echo_n "checking for CLOCK_MONOTONIC... " >&6; }
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+
+#include <time.h>
+clockid_t id = CLOCK_MONOTONIC;
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+	HAVE_CLOCK_MONOTONIC=YesPlease
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+	HAVE_CLOCK_MONOTONIC=
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+
+config_appended_defs="$config_appended_defs${newline}HAVE_CLOCK_MONOTONIC=${HAVE_CLOCK_MONOTONIC}"
+#
 # Define NO_SETITIMER if you don't have setitimer.
 ac_fn_c_check_func "$LINENO" "setitimer" "ac_cv_func_setitimer"
 if test "x$ac_cv_func_setitimer" = xyes; then :
 
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for library containing setitimer" >&5
 $as_echo_n "checking for library containing setitimer... " >&6; }
@@ -7819,13 +8041,13 @@
 
 cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
 # Save the log message, to keep $0 and so on meaningful, and to
 # report actual input values of CONFIG_FILES etc. instead of their
 # values after options handling.
 ac_log="
-This file was extended by git $as_me 2.2.3, which was
+This file was extended by git $as_me 2.3.0, which was
 generated by GNU Autoconf 2.69.  Invocation command line was
 
   CONFIG_FILES    = $CONFIG_FILES
   CONFIG_HEADERS  = $CONFIG_HEADERS
   CONFIG_LINKS    = $CONFIG_LINKS
   CONFIG_COMMANDS = $CONFIG_COMMANDS
@@ -7876,13 +8098,13 @@
 Report bugs to <git@vger.kernel.org>."
 
 _ACEOF
 cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
 ac_cs_config="`$as_echo "$ac_configure_args" | sed 's/^ //; s/[\\""\`\$]/\\\\&/g'`"
 ac_cs_version="\\
-git config.status 2.2.3
+git config.status 2.3.0
 configured by $0, generated by GNU Autoconf 2.69,
   with options \\"\$ac_cs_config\\"
 
 Copyright (C) 2012 Free Software Foundation, Inc.
 This config.status script is free software; the Free Software Foundation
 gives unlimited permission to copy, distribute and modify it."
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/configure.ac /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/configure.ac
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/configure.ac	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/configure.ac	2015-02-06 05:40:08.000000000 +0800
@@ -751,12 +751,25 @@
 AC_CHECK_TYPES([struct itimerval],
 [NO_STRUCT_ITIMERVAL=],
 [NO_STRUCT_ITIMERVAL=UnfortunatelyYes],
 [#include <sys/time.h>])
 GIT_CONF_SUBST([NO_STRUCT_ITIMERVAL])
 #
+# Define USE_ST_TIMESPEC=YesPlease when stat.st_mtimespec.tv_nsec exists.
+# Define NO_NSEC=YesPlease when neither stat.st_mtim.tv_nsec nor
+# stat.st_mtimespec.tv_nsec exists.
+AC_CHECK_MEMBER([struct stat.st_mtimespec.tv_nsec])
+AC_CHECK_MEMBER([struct stat.st_mtim.tv_nsec])
+if test x$ac_cv_member_struct_stat_st_mtimespec_tv_nsec = xyes; then
+	USE_ST_TIMESPEC=YesPlease
+	GIT_CONF_SUBST([USE_ST_TIMESPEC])
+elif test x$ac_cv_member_struct_stat_st_mtim_tv_nsec != xyes; then
+	NO_NSEC=YesPlease
+	GIT_CONF_SUBST([NO_NSEC])
+fi
+#
 # Define NO_D_INO_IN_DIRENT if you don't have d_ino in your struct dirent.
 AC_CHECK_MEMBER(struct dirent.d_ino,
 [NO_D_INO_IN_DIRENT=],
 [NO_D_INO_IN_DIRENT=YesPlease],
 [#include <dirent.h>])
 GIT_CONF_SUBST([NO_D_INO_IN_DIRENT])
@@ -870,12 +883,35 @@
 if test $ac_cv_snprintf_returns_bogus = yes; then
 	SNPRINTF_RETURNS_BOGUS=UnfortunatelyYes
 else
 	SNPRINTF_RETURNS_BOGUS=
 fi
 GIT_CONF_SUBST([SNPRINTF_RETURNS_BOGUS])
+#
+# Define NEEDS_MODE_TRANSLATION if your OS strays from the typical file type
+# bits in mode values.
+AC_CACHE_CHECK([whether the platform uses typical file type bits],
+ [ac_cv_sane_mode_bits], [
+AC_EGREP_CPP(yippeeyeswehaveit,
+	AC_LANG_PROGRAM([AC_INCLUDES_DEFAULT],
+[#if S_IFMT == 0170000 && \
+	S_IFREG == 0100000 && S_IFDIR == 0040000 && S_IFLNK == 0120000 && \
+	S_IFBLK == 0060000 && S_IFCHR == 0020000 && \
+	S_IFIFO == 0010000 && S_IFSOCK == 0140000
+yippeeyeswehaveit
+#endif
+]),
+	[ac_cv_sane_mode_bits=yes],
+	[ac_cv_sane_mode_bits=no])
+])
+if test $ac_cv_sane_mode_bits = yes; then
+	NEEDS_MODE_TRANSLATION=
+else
+	NEEDS_MODE_TRANSLATION=UnfortunatelyYes
+fi
+GIT_CONF_SUBST([NEEDS_MODE_TRANSLATION])
 
 
 ## Checks for library functions.
 ## (in default C library and libraries checked by AC_CHECK_LIB)
 AC_MSG_NOTICE([CHECKS for library functions])
 #
@@ -908,12 +944,38 @@
 AC_CHECK_LIB([iconv], [locale_charset],
        [CHARSET_LIB=-liconv],
        [AC_CHECK_LIB([charset], [locale_charset],
                      [CHARSET_LIB=-lcharset])])
 GIT_CONF_SUBST([CHARSET_LIB])
 #
+# Define NO_HMAC_CTX_CLEANUP=YesPlease if HMAC_CTX_cleanup is missing.
+AC_CHECK_LIB([crypto], [HMAC_CTX_cleanup],
+	[], [GIT_CONF_SUBST([NO_HMAC_CTX_CLEANUP], [YesPlease])])
+#
+# Define HAVE_CLOCK_GETTIME=YesPlease if clock_gettime is available.
+GIT_CHECK_FUNC(clock_gettime,
+	[HAVE_CLOCK_GETTIME=YesPlease],
+	[HAVE_CLOCK_GETTIME=])
+GIT_CONF_SUBST([HAVE_CLOCK_GETTIME])
+
+AC_DEFUN([CLOCK_MONOTONIC_SRC], [
+AC_LANG_PROGRAM([[
+#include <time.h>
+clockid_t id = CLOCK_MONOTONIC;
+]])])
+
+#
+# Define HAVE_CLOCK_MONOTONIC=YesPlease if CLOCK_MONOTONIC is available.
+AC_MSG_CHECKING([for CLOCK_MONOTONIC])
+AC_COMPILE_IFELSE([CLOCK_MONOTONIC_SRC],
+	[AC_MSG_RESULT([yes])
+	HAVE_CLOCK_MONOTONIC=YesPlease],
+	[AC_MSG_RESULT([no])
+	HAVE_CLOCK_MONOTONIC=])
+GIT_CONF_SUBST([HAVE_CLOCK_MONOTONIC])
+#
 # Define NO_SETITIMER if you don't have setitimer.
 GIT_CHECK_FUNC(setitimer,
 [NO_SETITIMER=],
 [NO_SETITIMER=YesPlease])
 GIT_CONF_SUBST([NO_SETITIMER])
 #
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/connect.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/connect.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/connect.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/connect.c	2015-02-06 05:40:08.000000000 +0800
@@ -90,13 +90,13 @@
 		val = parse_feature_value(feature_list, "symref", &len);
 		if (!val)
 			break;
 		parse_one_symref_info(&symref, val, len);
 		feature_list = val + 1;
 	}
-	sort_string_list(&symref);
+	string_list_sort(&symref);
 
 	for (; ref; ref = ref->next) {
 		struct string_list_item *item;
 		item = string_list_lookup(&symref, ref->name);
 		if (!item)
 			continue;
@@ -697,20 +697,29 @@
 		strbuf_addstr(&cmd, prog);
 		strbuf_addch(&cmd, ' ');
 		sq_quote_buf(&cmd, path);
 
 		conn->in = conn->out = -1;
 		if (protocol == PROTO_SSH) {
-			const char *ssh = getenv("GIT_SSH");
-			int putty = ssh && strcasestr(ssh, "plink");
+			const char *ssh;
+			int putty;
 			char *ssh_host = hostandport;
 			const char *port = NULL;
 			get_host_and_port(&ssh_host, &port);
 			port = get_port_numeric(port);
 
-			if (!ssh) ssh = "ssh";
+			ssh = getenv("GIT_SSH_COMMAND");
+			if (ssh) {
+				conn->use_shell = 1;
+				putty = 0;
+			} else {
+				ssh = getenv("GIT_SSH");
+				if (!ssh)
+					ssh = "ssh";
+				putty = !!strcasestr(ssh, "plink");
+			}
 
 			argv_array_push(&conn->args, ssh);
 			if (putty && !strcasestr(ssh, "tortoiseplink"))
 				argv_array_push(&conn->args, "-batch");
 			if (port) {
 				/* P is for PuTTY, p is for OpenSSH */
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/connect.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/connect.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/connected.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/connected.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/connected.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/connected.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/connect.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/connect.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/contrib/completion/git-completion.bash /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/contrib/completion/git-completion.bash
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/contrib/completion/git-completion.bash	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/contrib/completion/git-completion.bash	2015-02-06 05:40:08.000000000 +0800
@@ -13,15 +13,15 @@
 #    *) tree paths within 'ref:path/to/file' expressions
 #    *) file paths within current working directory and index
 #    *) common --long-options
 #
 # To use these routines:
 #
-#    1) Copy this file to somewhere (e.g. ~/.git-completion.sh).
+#    1) Copy this file to somewhere (e.g. ~/.git-completion.bash).
 #    2) Add the following line to your .bashrc/.zshrc:
-#        source ~/.git-completion.sh
+#        source ~/.git-completion.bash
 #    3) Consider changing your PS1 to also show the current branch,
 #       see git-prompt.sh for details.
 #
 # If you use complex aliases of form '!f() { ... }; f', you can use the null
 # command ':' as the first command in the function body to declare the desired
 # completion style.  For example '!f() { : git commit ; ... }; f' will
@@ -1690,12 +1690,13 @@
 		__gitcomp "
 			--onto --merge --strategy --interactive
 			--preserve-merges --stat --no-stat
 			--committer-date-is-author-date --ignore-date
 			--ignore-whitespace --whitespace=
 			--autosquash --fork-point --no-fork-point
+			--autostash
 			"
 
 		return
 	esac
 	__gitcomp_nl "$(__git_refs)"
 }
@@ -1872,12 +1873,16 @@
 		return
 		;;
 	sendemail.suppresscc)
 		__gitcomp "$__git_send_email_suppresscc_options"
 		return
 		;;
+	sendemail.transferencoding)
+		__gitcomp "7bit 8bit quoted-printable base64"
+		return
+		;;
 	--get|--get-all|--unset|--unset-all)
 		__gitcomp_nl "$(__git_config_get_set_variables)"
 		return
 		;;
 	*.*)
 		return
@@ -2545,12 +2550,22 @@
 		fi
 		;;
 	*)
 		__gitcomp_nl "$(__git_refs)"
 		;;
 	esac
+
+	case "$cur" in
+	--*)
+		__gitcomp "
+			--list --delete --verify --annotate --message --file
+			--sign --cleanup --local-user --force --column --sort
+			--contains --points-at
+			"
+		;;
+	esac
 }
 
 _git_whatchanged ()
 {
 	_git_log
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/contrib/completion/git-completion.zsh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/contrib/completion/git-completion.zsh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/contrib/completion/git-completion.zsh	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/contrib/completion/git-completion.zsh	2015-02-06 05:40:08.000000000 +0800
@@ -6,13 +6,13 @@
 #
 # You need git's bash completion script installed somewhere, by default it
 # would be the location bash-completion uses.
 #
 # If your script is somewhere else, you can configure it on your ~/.zshrc:
 #
-#  zstyle ':completion:*:*:git:*' script ~/.git-completion.sh
+#  zstyle ':completion:*:*:git:*' script ~/.git-completion.zsh
 #
 # The recommended way to install this script is to copy to '~/.zsh/_git', and
 # then add the following to your ~/.zshrc file:
 #
 #  fpath=(~/.zsh $fpath)
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/contrib/completion/git-prompt.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/contrib/completion/git-prompt.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/contrib/completion/git-prompt.sh	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/contrib/completion/git-prompt.sh	2015-02-06 05:40:08.000000000 +0800
@@ -81,12 +81,17 @@
 #     default       exactly matching tag
 #
 # If you would like a colored hint about the current dirty state, set
 # GIT_PS1_SHOWCOLORHINTS to a nonempty value. The colors are based on
 # the colored output of "git status -sb" and are available only when
 # using __git_ps1 for PROMPT_COMMAND or precmd.
+#
+# If you would like __git_ps1 to do nothing in the case when the current
+# directory is set up to be ignored by git, then set
+# GIT_PS1_HIDE_IF_PWD_IGNORED to a nonempty value. Override this on the
+# repository level by setting bash.hideIfPwdIgnored to "false".
 
 # check whether printf supports -v
 __git_printf_supports_v=
 printf -v __git_printf_supports_v -- '%s' yes >/dev/null 2>&1
 
 # stores the divergence from upstream in $p
@@ -267,13 +272,13 @@
 	fi
 	r="$c_clear$r"
 }
 
 __git_eread ()
 {
-	f="$1"
+	local f="$1"
 	shift
 	test -r "$f" && read "$@" <"$f"
 }
 
 # __git_ps1 accepts 0 or 1 arguments (i.e., format string)
 # when called from PS1 using command substitution
@@ -285,27 +290,33 @@
 # to the state string when assigned to PS1.
 # The optional third parameter will be used as printf format string to further
 # customize the output of the git-status string.
 # In this mode you can request colored hints using GIT_PS1_SHOWCOLORHINTS=true
 __git_ps1 ()
 {
+	# preserve exit status
+	local exit=$?
 	local pcmode=no
 	local detached=no
 	local ps1pc_start='\u@\h:\w '
 	local ps1pc_end='\$ '
 	local printf_format=' (%s)'
 
 	case "$#" in
 		2|3)	pcmode=yes
 			ps1pc_start="$1"
 			ps1pc_end="$2"
 			printf_format="${3:-$printf_format}"
+			# set PS1 to a plain prompt so that we can
+			# simply return early if the prompt should not
+			# be decorated
+			PS1="$ps1pc_start$ps1pc_end"
 		;;
 		0|1)	printf_format="${1:-$printf_format}"
 		;;
-		*)	return
+		*)	return $exit
 		;;
 	esac
 
 	# ps1_expanded:  This variable is set to 'yes' if the shell
 	# subjects the value of PS1 to parameter expansion:
 	#
@@ -347,17 +358,13 @@
 	repo_info="$(git rev-parse --git-dir --is-inside-git-dir \
 		--is-bare-repository --is-inside-work-tree \
 		--short HEAD 2>/dev/null)"
 	rev_parse_exit_code="$?"
 
 	if [ -z "$repo_info" ]; then
-		if [ $pcmode = yes ]; then
-			#In PC mode PS1 always needs to be set
-			PS1="$ps1pc_start$ps1pc_end"
-		fi
-		return
+		return $exit
 	fi
 
 	local short_sha
 	if [ "$rev_parse_exit_code" = "0" ]; then
 		short_sha="${repo_info##*$'\n'}"
 		repo_info="${repo_info%$'\n'*}"
@@ -366,12 +373,20 @@
 	repo_info="${repo_info%$'\n'*}"
 	local bare_repo="${repo_info##*$'\n'}"
 	repo_info="${repo_info%$'\n'*}"
 	local inside_gitdir="${repo_info##*$'\n'}"
 	local g="${repo_info%$'\n'*}"
 
+	if [ "true" = "$inside_worktree" ] &&
+	   [ -n "${GIT_PS1_HIDE_IF_PWD_IGNORED-}" ] &&
+	   [ "$(git config --bool bash.hideIfPwdIgnored)" != "false" ] &&
+	   git check-ignore -q .
+	then
+		return $exit
+	fi
+
 	local r=""
 	local b=""
 	local step=""
 	local total=""
 	if [ -d "$g/rebase-merge" ]; then
 		__git_eread "$g/rebase-merge/head-name" b
@@ -409,16 +424,13 @@
 		elif [ -h "$g/HEAD" ]; then
 			# symlink symbolic ref
 			b="$(git symbolic-ref HEAD 2>/dev/null)"
 		else
 			local head=""
 			if ! __git_eread "$g/HEAD" head; then
-				if [ $pcmode = yes ]; then
-					PS1="$ps1pc_start$ps1pc_end"
-				fi
-				return
+				return $exit
 			fi
 			# is it a symbolic ref?
 			b="${head#ref: }"
 			if [ "$head" = "$b" ]; then
 				detached=yes
 				b="$(
@@ -508,7 +520,9 @@
 			printf -v gitstring -- "$printf_format" "$gitstring"
 		fi
 		PS1="$ps1pc_start$gitstring$ps1pc_end"
 	else
 		printf -- "$printf_format" "$gitstring"
 	fi
+
+	return $exit
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/contrib/diff-highlight/diff-highlight /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/contrib/diff-highlight/diff-highlight
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/contrib/diff-highlight/diff-highlight	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/contrib/diff-highlight/diff-highlight	2015-02-06 05:40:08.000000000 +0800
@@ -2,14 +2,24 @@
 
 use warnings FATAL => 'all';
 use strict;
 
 # Highlight by reversing foreground and background. You could do
 # other things like bold or underline if you prefer.
-my $HIGHLIGHT   = "\x1b[7m";
-my $UNHIGHLIGHT = "\x1b[27m";
+my @OLD_HIGHLIGHT = (
+	color_config('color.diff-highlight.oldnormal'),
+	color_config('color.diff-highlight.oldhighlight', "\x1b[7m"),
+	color_config('color.diff-highlight.oldreset', "\x1b[27m")
+);
+my @NEW_HIGHLIGHT = (
+	color_config('color.diff-highlight.newnormal', $OLD_HIGHLIGHT[0]),
+	color_config('color.diff-highlight.newhighlight', $OLD_HIGHLIGHT[1]),
+	color_config('color.diff-highlight.newreset', $OLD_HIGHLIGHT[2])
+);
+
+my $RESET = "\x1b[m";
 my $COLOR = qr/\x1b\[[0-9;]*m/;
 my $BORING = qr/$COLOR|\s/;
 
 my @removed;
 my @added;
 my $in_hunk;
@@ -54,12 +64,23 @@
 # Flush any queued hunk (this can happen when there is no trailing context in
 # the final diff of the input).
 show_hunk(\@removed, \@added);
 
 exit 0;
 
+# Ideally we would feed the default as a human-readable color to
+# git-config as the fallback value. But diff-highlight does
+# not otherwise depend on git at all, and there are reports
+# of it being used in other settings. Let's handle our own
+# fallback, which means we will work even if git can't be run.
+sub color_config {
+	my ($key, $default) = @_;
+	my $s = `git config --get-color $key 2>/dev/null`;
+	return length($s) ? $s : $default;
+}
+
 sub show_hunk {
 	my ($a, $b) = @_;
 
 	# If one side is empty, then there is nothing to compare or highlight.
 	if (!@$a || !@$b) {
 		print @$a, @$b;
@@ -129,14 +150,14 @@
 		else {
 			last;
 		}
 	}
 
 	if (is_pair_interesting(\@a, $pa, $sa, \@b, $pb, $sb)) {
-		return highlight_line(\@a, $pa, $sa),
-		       highlight_line(\@b, $pb, $sb);
+		return highlight_line(\@a, $pa, $sa, \@OLD_HIGHLIGHT),
+		       highlight_line(\@b, $pb, $sb, \@NEW_HIGHLIGHT);
 	}
 	else {
 		return join('', @a),
 		       join('', @b);
 	}
 }
@@ -145,21 +166,36 @@
 	local $_ = shift;
 	return map { /$COLOR/ ? $_ : (split //) }
 	       split /($COLOR*)/;
 }
 
 sub highlight_line {
-	my ($line, $prefix, $suffix) = @_;
+	my ($line, $prefix, $suffix, $theme) = @_;
 
-	return join('',
-		@{$line}[0..($prefix-1)],
-		$HIGHLIGHT,
-		@{$line}[$prefix..$suffix],
-		$UNHIGHLIGHT,
-		@{$line}[($suffix+1)..$#$line]
-	);
+	my $start = join('', @{$line}[0..($prefix-1)]);
+	my $mid = join('', @{$line}[$prefix..$suffix]);
+	my $end = join('', @{$line}[($suffix+1)..$#$line]);
+
+	# If we have a "normal" color specified, then take over the whole line.
+	# Otherwise, we try to just manipulate the highlighted bits.
+	if (defined $theme->[0]) {
+		s/$COLOR//g for ($start, $mid, $end);
+		chomp $end;
+		return join('',
+			$theme->[0], $start, $RESET,
+			$theme->[1], $mid, $RESET,
+			$theme->[0], $end, $RESET,
+			"\n"
+		);
+	} else {
+		return join('',
+			$start,
+			$theme->[1], $mid, $theme->[2],
+			$end
+		);
+	}
 }
 
 # Pairs are interesting to highlight only if we are going to end up
 # highlighting a subset (i.e., not the whole line). Otherwise, the highlighting
 # is just useless noise. We can detect this by finding either a matching prefix
 # or suffix (disregarding boring bits like whitespace and colorization).
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/contrib/diff-highlight/README /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/contrib/diff-highlight/README
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/contrib/diff-highlight/README	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/contrib/diff-highlight/README	2015-02-06 05:40:08.000000000 +0800
@@ -55,12 +55,53 @@
 [pager]
 	log = diff-highlight | less
 	show = diff-highlight | less
 	diff = diff-highlight | less
 ---------------------------------------------
 
+
+Color Config
+------------
+
+You can configure the highlight colors and attributes using git's
+config. The colors for "old" and "new" lines can be specified
+independently. There are two "modes" of configuration:
+
+  1. You can specify a "highlight" color and a matching "reset" color.
+     This will retain any existing colors in the diff, and apply the
+     "highlight" and "reset" colors before and after the highlighted
+     portion.
+
+  2. You can specify a "normal" color and a "highlight" color. In this
+     case, existing colors are dropped from that line. The non-highlighted
+     bits of the line get the "normal" color, and the highlights get the
+     "highlight" color.
+
+If no "new" colors are specified, they default to the "old" colors. If
+no "old" colors are specified, the default is to reverse the foreground
+and background for highlighted portions.
+
+Examples:
+
+---------------------------------------------
+# Underline highlighted portions
+[color "diff-highlight"]
+oldHighlight = ul
+oldReset = noul
+---------------------------------------------
+
+---------------------------------------------
+# Varying background intensities
+[color "diff-highlight"]
+oldNormal = "black #f8cbcb"
+oldHighlight = "black #ffaaaa"
+newNormal = "black #cbeecb"
+newHighlight = "black #aaffaa"
+---------------------------------------------
+
+
 Bugs
 ----
 
 Because diff-highlight relies on heuristics to guess which parts of
 changes are important, there are some cases where the highlighting is
 more distracting than useful. Fortunately, these cases are rare in
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/contrib/subtree/git-subtree.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/contrib/subtree/git-subtree.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/contrib/subtree/git-subtree.txt	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/contrib/subtree/git-subtree.txt	2015-02-06 05:40:08.000000000 +0800
@@ -78,18 +78,17 @@
 	Merge recent changes up to <commit> into the <prefix>
 	subtree.  As with normal 'git merge', this doesn't
 	remove your own local changes; it just merges those
 	changes into the latest <commit>.  With '--squash',
 	creates only one commit that contains all the changes,
 	rather than merging in the entire history.
-
-	If you use '--squash', the merge direction doesn't
-	always have to be forward; you can use this command to
-	go back in time from v2.5 to v2.4, for example.  If your
-	merge introduces a conflict, you can resolve it in the
-	usual ways.
++
+If you use '--squash', the merge direction doesn't always have to be
+forward; you can use this command to go back in time from v2.5 to v2.4,
+for example.  If your merge introduces a conflict, you can resolve it in
+the usual ways.
 	
 pull::
 	Exactly like 'merge', but parallels 'git pull' in that
 	it fetches the given ref from the specified remote
 	repository.
 	
@@ -104,27 +103,25 @@
 	history of the <prefix> subtree.  The new history
 	includes only the commits (including merges) that
 	affected <prefix>, and each of those commits now has the
 	contents of <prefix> at the root of the project instead
 	of in a subdirectory.  Thus, the newly created history
 	is suitable for export as a separate git repository.
-	
-	After splitting successfully, a single commit id is
-	printed to stdout.  This corresponds to the HEAD of the
-	newly created tree, which you can manipulate however you
-	want.
-	
-	Repeated splits of exactly the same history are
-	guaranteed to be identical (i.e. to produce the same
-	commit ids).  Because of this, if you add new commits
-	and then re-split, the new commits will be attached as
-	commits on top of the history you generated last time,
-	so 'git merge' and friends will work as expected.
-	
-	Note that if you use '--squash' when you merge, you
-	should usually not just '--rejoin' when you split.
++
+After splitting successfully, a single commit id is printed to stdout.
+This corresponds to the HEAD of the newly created tree, which you can
+manipulate however you want.
++
+Repeated splits of exactly the same history are guaranteed to be
+identical (i.e. to produce the same commit ids).  Because of this, if
+you add new commits and then re-split, the new commits will be attached
+as commits on top of the history you generated last time, so 'git merge'
+and friends will work as expected.
++
+Note that if you use '--squash' when you merge, you should usually not
+just '--rejoin' when you split.
 
 
 OPTIONS
 -------
 -q::
 --quiet::
@@ -148,115 +145,102 @@
 
 OPTIONS FOR add, merge, push, pull
 ----------------------------------
 --squash::
 	This option is only valid for add, merge, push and pull
 	commands.
-
-	Instead of merging the entire history from the subtree
-	project, produce only a single commit that contains all
-	the differences you want to merge, and then merge that
-	new commit into your project.
-	
-	Using this option helps to reduce log clutter. People
-	rarely want to see every change that happened between
-	v1.0 and v1.1 of the library they're using, since none of the
-	interim versions were ever included in their application.
-	
-	Using '--squash' also helps avoid problems when the same
-	subproject is included multiple times in the same
-	project, or is removed and then re-added.  In such a
-	case, it doesn't make sense to combine the histories
-	anyway, since it's unclear which part of the history
-	belongs to which subtree.
-	
-	Furthermore, with '--squash', you can switch back and
-	forth between different versions of a subtree, rather
-	than strictly forward.  'git subtree merge --squash'
-	always adjusts the subtree to match the exactly
-	specified commit, even if getting to that commit would
-	require undoing some changes that were added earlier.
-	
-	Whether or not you use '--squash', changes made in your
-	local repository remain intact and can be later split
-	and send upstream to the subproject.
++
+Instead of merging the entire history from the subtree project, produce
+only a single commit that contains all the differences you want to
+merge, and then merge that new commit into your project.
++
+Using this option helps to reduce log clutter. People rarely want to see
+every change that happened between v1.0 and v1.1 of the library they're
+using, since none of the interim versions were ever included in their
+application.
++
+Using '--squash' also helps avoid problems when the same subproject is
+included multiple times in the same project, or is removed and then
+re-added.  In such a case, it doesn't make sense to combine the
+histories anyway, since it's unclear which part of the history belongs
+to which subtree.
++
+Furthermore, with '--squash', you can switch back and forth between
+different versions of a subtree, rather than strictly forward.  'git
+subtree merge --squash' always adjusts the subtree to match the exactly
+specified commit, even if getting to that commit would require undoing
+some changes that were added earlier.
++
+Whether or not you use '--squash', changes made in your local repository
+remain intact and can be later split and send upstream to the
+subproject.
 
 
 OPTIONS FOR split
 -----------------
 --annotate=<annotation>::
 	This option is only valid for the split command.
-
-	When generating synthetic history, add <annotation> as a
-	prefix to each commit message.  Since we're creating new
-	commits with the same commit message, but possibly
-	different content, from the original commits, this can help
-	to differentiate them and avoid confusion.
-	
-	Whenever you split, you need to use the same
-	<annotation>, or else you don't have a guarantee that
-	the new re-created history will be identical to the old
-	one.  That will prevent merging from working correctly. 
-	git subtree tries to make it work anyway, particularly
-	if you use --rejoin, but it may not always be effective.
++
+When generating synthetic history, add <annotation> as a prefix to each
+commit message.  Since we're creating new commits with the same commit
+message, but possibly different content, from the original commits, this
+can help to differentiate them and avoid confusion.
++
+Whenever you split, you need to use the same <annotation>, or else you
+don't have a guarantee that the new re-created history will be identical
+to the old one.  That will prevent merging from working correctly.  git
+subtree tries to make it work anyway, particularly if you use --rejoin,
+but it may not always be effective.
 
 -b <branch>::
 --branch=<branch>::
 	This option is only valid for the split command.
-
-	After generating the synthetic history, create a new
-	branch called <branch> that contains the new history. 
-	This is suitable for immediate pushing upstream. 
-	<branch> must not already exist.
++
+After generating the synthetic history, create a new branch called
+<branch> that contains the new history.  This is suitable for immediate
+pushing upstream.  <branch> must not already exist.
 
 --ignore-joins::
 	This option is only valid for the split command.
-
-	If you use '--rejoin', git subtree attempts to optimize
-	its history reconstruction to generate only the new
-	commits since the last '--rejoin'.  '--ignore-join'
-	disables this behaviour, forcing it to regenerate the
-	entire history.  In a large project, this can take a
-	long time.
++
+If you use '--rejoin', git subtree attempts to optimize its history
+reconstruction to generate only the new commits since the last
+'--rejoin'.  '--ignore-join' disables this behaviour, forcing it to
+regenerate the entire history.  In a large project, this can take a long
+time.
 
 --onto=<onto>::
 	This option is only valid for the split command.
-
-	If your subtree was originally imported using something
-	other than git subtree, its history may not match what
-	git subtree is expecting.  In that case, you can specify
-	the commit id <onto> that corresponds to the first
-	revision of the subproject's history that was imported
-	into your project, and git subtree will attempt to build
-	its history from there.
-	
-	If you used 'git subtree add', you should never need
-	this option.
++
+If your subtree was originally imported using something other than git
+subtree, its history may not match what git subtree is expecting.  In
+that case, you can specify the commit id <onto> that corresponds to the
+first revision of the subproject's history that was imported into your
+project, and git subtree will attempt to build its history from there.
++
+If you used 'git subtree add', you should never need this option.
 
 --rejoin::
 	This option is only valid for the split command.
-
-	After splitting, merge the newly created synthetic
-	history back into your main project.  That way, future
-	splits can search only the part of history that has
-	been added since the most recent --rejoin.
-	
-	If your split commits end up merged into the upstream
-	subproject, and then you want to get the latest upstream
-	version, this will allow git's merge algorithm to more
-	intelligently avoid conflicts (since it knows these
-	synthetic commits are already part of the upstream
-	repository).
-	
-	Unfortunately, using this option results in 'git log'
-	showing an extra copy of every new commit that was
-	created (the original, and the synthetic one).
-	
-	If you do all your merges with '--squash', don't use
-	'--rejoin' when you split, because you don't want the
-	subproject's history to be part of your project anyway.
++
+After splitting, merge the newly created synthetic history back into
+your main project.  That way, future splits can search only the part of
+history that has been added since the most recent --rejoin.
++
+If your split commits end up merged into the upstream subproject, and
+then you want to get the latest upstream version, this will allow git's
+merge algorithm to more intelligently avoid conflicts (since it knows
+these synthetic commits are already part of the upstream repository).
++
+Unfortunately, using this option results in 'git log' showing an extra
+copy of every new commit that was created (the original, and the
+synthetic one).
++
+If you do all your merges with '--squash', don't use '--rejoin' when you
+split, because you don't want the subproject's history to be part of
+your project anyway.
 
 
 EXAMPLE 1. Add command
 ----------------------
 Let's assume that you have a local repository that you would like
 to add an external vendor library to. In this case we will add the
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/contrib/workdir/git-new-workdir /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/contrib/workdir/git-new-workdir
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/contrib/workdir/git-new-workdir	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/contrib/workdir/git-new-workdir	2015-02-06 05:40:08.000000000 +0800
@@ -7,12 +7,16 @@
 
 die () {
 	echo $@
 	exit 128
 }
 
+failed () {
+	die "unable to create new workdir '$new_workdir'!"
+}
+
 if test $# -lt 2 || test $# -gt 3
 then
 	usage "$0 <repository> <new_workdir> [<branch>]"
 fi
 
 orig_git=$1
@@ -32,51 +36,70 @@
 	git_dir=$orig_git
 	;;
 esac
 
 # don't link to a configured bare repository
 isbare=$(git --git-dir="$git_dir" config --bool --get core.bare)
-if test ztrue = z$isbare
+if test ztrue = "z$isbare"
 then
 	die "\"$git_dir\" has core.bare set to true," \
 		" remove from \"$git_dir/config\" to use $0"
 fi
 
 # don't link to a workdir
 if test -h "$git_dir/config"
 then
 	die "\"$orig_git\" is a working directory only, please specify" \
 		"a complete repository."
 fi
 
-# don't recreate a workdir over an existing repository
-if test -e "$new_workdir"
+# make sure the links in the workdir have full paths to the original repo
+git_dir=$(cd "$git_dir" && pwd) || exit 1
+
+# don't recreate a workdir over an existing directory, unless it's empty
+if test -d "$new_workdir"
 then
-	die "destination directory '$new_workdir' already exists."
+	if test $(ls -a1 "$new_workdir/." | wc -l) -ne 2
+	then
+		die "destination directory '$new_workdir' is not empty."
+	fi
+	cleandir="$new_workdir/.git"
+else
+	cleandir="$new_workdir"
 fi
 
-# make sure the links use full paths
-git_dir=$(cd "$git_dir"; pwd)
+mkdir -p "$new_workdir/.git" || failed
+cleandir=$(cd "$cleandir" && pwd) || failed
 
-# create the workdir
-mkdir -p "$new_workdir/.git" || die "unable to create \"$new_workdir\"!"
+cleanup () {
+	rm -rf "$cleandir"
+}
+siglist="0 1 2 15"
+trap cleanup $siglist
 
 # create the links to the original repo.  explicitly exclude index, HEAD and
 # logs/HEAD from the list since they are purely related to the current working
 # directory, and should not be shared.
 for x in config refs logs/refs objects info hooks packed-refs remotes rr-cache svn
 do
+	# create a containing directory if needed
 	case $x in
 	*/*)
-		mkdir -p "$(dirname "$new_workdir/.git/$x")"
+		mkdir -p "$new_workdir/.git/${x%/*}"
 		;;
 	esac
-	ln -s "$git_dir/$x" "$new_workdir/.git/$x"
+
+	ln -s "$git_dir/$x" "$new_workdir/.git/$x" || failed
 done
 
-# now setup the workdir
-cd "$new_workdir"
+# commands below this are run in the context of the new workdir
+cd "$new_workdir" || failed
+
 # copy the HEAD from the original repository as a default branch
-cp "$git_dir/HEAD" .git/HEAD
-# checkout the branch (either the same as HEAD from the original repository, or
-# the one that was asked for)
+cp "$git_dir/HEAD" .git/HEAD || failed
+
+# the workdir is set up.  if the checkout fails, the user can fix it.
+trap - $siglist
+
+# checkout the branch (either the same as HEAD from the original repository,
+# or the one that was asked for)
 git checkout -f $branch
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/convert.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/convert.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/convert.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/convert.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/copy.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/copy.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/copy.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/copy.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/credential.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/credential.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/credential.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/credential.c	2015-02-06 05:40:08.000000000 +0800
@@ -170,12 +170,14 @@
 			c->host = xstrdup(value);
 		} else if (!strcmp(key, "path")) {
 			free(c->path);
 			c->path = xstrdup(value);
 		} else if (!strcmp(key, "url")) {
 			credential_from_url(c, value);
+		} else if (!strcmp(key, "quit")) {
+			c->quit = !!git_config_bool("quit", value);
 		}
 		/*
 		 * Ignore other lines; we don't know what they mean, but
 		 * this future-proofs us when later versions of git do
 		 * learn new lines, and the helpers are updated to match.
 		 */
@@ -271,12 +273,15 @@
 	credential_apply_config(c);
 
 	for (i = 0; i < c->helpers.nr; i++) {
 		credential_do(c, c->helpers.items[i].string, "get");
 		if (c->username && c->password)
 			return;
+		if (c->quit)
+			die("credential helper '%s' told us to quit",
+			    c->helpers.items[i].string);
 	}
 
 	credential_getpass(c);
 	if (!c->username && !c->password)
 		die("unable to get password from user");
 }
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/credential-cache.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/credential-cache.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/credential-cache--daemon.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/credential-cache--daemon.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/credential-cache--daemon.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/credential-cache--daemon.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/credential-cache.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/credential-cache.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/credential.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/credential.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/credential.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/credential.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/credential.h	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/credential.h	2015-02-06 05:40:08.000000000 +0800
@@ -4,12 +4,13 @@
 #include "string-list.h"
 
 struct credential {
 	struct string_list helpers;
 	unsigned approved:1,
 		 configured:1,
+		 quit:1,
 		 use_http_path:1;
 
 	char *username;
 	char *password;
 	char *protocol;
 	char *host;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/credential.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/credential.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/credential-store.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/credential-store.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/credential-store.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/credential-store.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/csum-file.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/csum-file.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/csum-file.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/csum-file.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/csum-file.h	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/csum-file.h	2015-02-06 05:40:08.000000000 +0800
@@ -36,7 +36,18 @@
 extern int sha1close(struct sha1file *, unsigned char *, unsigned int);
 extern void sha1write(struct sha1file *, const void *, unsigned int);
 extern void sha1flush(struct sha1file *f);
 extern void crc32_begin(struct sha1file *);
 extern uint32_t crc32_end(struct sha1file *);
 
+static inline void sha1write_u8(struct sha1file *f, uint8_t data)
+{
+	sha1write(f, &data, sizeof(data));
+}
+
+static inline void sha1write_be32(struct sha1file *f, uint32_t data)
+{
+	data = htonl(data);
+	sha1write(f, &data, sizeof(data));
+}
+
 #endif
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/csum-file.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/csum-file.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/ctype.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/ctype.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/ctype.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/ctype.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/daemon.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/daemon.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/daemon.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/daemon.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/date.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/date.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/date.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/date.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/decorate.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/decorate.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/decorate.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/decorate.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/.depend/git.o.d /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/.depend/git.o.d
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/.depend/git.o.d	2017-10-10 12:20:53.662655916 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/.depend/git.o.d	2017-10-10 12:24:29.402648009 +0800
@@ -1,10 +1,10 @@
 git.o: git.c builtin.h git-compat-util.h compat/bswap.h wildmatch.h \
  strbuf.h cache.h hashmap.h advice.h gettext.h convert.h trace.h \
  string-list.h block-sha1/sha1.h commit.h object.h tree.h decorate.h \
- gpg-interface.h exec_cmd.h help.h quote.h run-command.h argv-array.h
+ gpg-interface.h exec_cmd.h help.h run-command.h argv-array.h
 
 builtin.h:
 
 git-compat-util.h:
 
 compat/bswap.h:
@@ -40,11 +40,9 @@
 gpg-interface.h:
 
 exec_cmd.h:
 
 help.h:
 
-quote.h:
-
 run-command.h:
 
 argv-array.h:
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/.depend/imap-send.o.d /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/.depend/imap-send.o.d
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/.depend/imap-send.o.d	2017-10-10 12:20:51.410655999 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/.depend/imap-send.o.d	2017-10-10 12:24:27.122648093 +0800
@@ -1,10 +1,10 @@
 imap-send.o: imap-send.c cache.h git-compat-util.h compat/bswap.h \
  wildmatch.h strbuf.h hashmap.h advice.h gettext.h convert.h trace.h \
  string-list.h block-sha1/sha1.h credential.h exec_cmd.h run-command.h \
- argv-array.h
+ argv-array.h parse-options.h
 
 cache.h:
 
 git-compat-util.h:
 
 compat/bswap.h:
@@ -31,6 +31,8 @@
 
 exec_cmd.h:
 
 run-command.h:
 
 argv-array.h:
+
+parse-options.h:
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/.depend/trailer.o.d /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/.depend/trailer.o.d
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/.depend/trailer.o.d	2017-10-10 12:20:45.342656221 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/.depend/trailer.o.d	2017-10-10 12:24:20.930648320 +0800
@@ -1,9 +1,10 @@
 trailer.o: trailer.c cache.h git-compat-util.h compat/bswap.h wildmatch.h \
  strbuf.h hashmap.h advice.h gettext.h convert.h trace.h string-list.h \
- block-sha1/sha1.h run-command.h argv-array.h trailer.h
+ block-sha1/sha1.h run-command.h argv-array.h commit.h object.h tree.h \
+ decorate.h gpg-interface.h trailer.h
 
 cache.h:
 
 git-compat-util.h:
 
 compat/bswap.h:
@@ -27,7 +28,17 @@
 block-sha1/sha1.h:
 
 run-command.h:
 
 argv-array.h:
 
+commit.h:
+
+object.h:
+
+tree.h:
+
+decorate.h:
+
+gpg-interface.h:
+
 trailer.h:
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diff.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diff.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diffcore-break.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diffcore-break.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diffcore-break.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diffcore-break.c	2015-02-06 05:40:08.000000000 +0800
@@ -243,12 +243,19 @@
 		die("internal error in merge #3");
 	if (!DIFF_FILE_VALID(c->two))
 		die("internal error in merge #4");
 
 	dp = diff_queue(outq, d->one, c->two);
 	dp->score = p->score;
+	/*
+	 * We will be one extra user of the same src side of the
+	 * broken pair, if it was used as the rename source for other
+	 * paths elsewhere.  Increment to mark that the path stays
+	 * in the resulting tree.
+	 */
+	d->one->rename_used++;
 	diff_free_filespec_data(d->two);
 	diff_free_filespec_data(c->one);
 	free(d);
 	free(c);
 }
 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diffcore-break.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diffcore-break.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diffcore-break.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diffcore-break.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diffcore-delta.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diffcore-delta.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diffcore-delta.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diffcore-delta.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diffcore-order.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diffcore-order.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diffcore-order.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diffcore-order.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diffcore-pickaxe.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diffcore-pickaxe.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diffcore-pickaxe.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diffcore-pickaxe.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diffcore-rename.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diffcore-rename.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diffcore-rename.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diffcore-rename.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diff-delta.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diff-delta.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diff-delta.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diff-delta.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diff-lib.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diff-lib.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diff-lib.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diff-lib.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diff-no-index.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diff-no-index.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diff-no-index.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diff-no-index.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/diff.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/diff.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/dir.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/dir.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/dir.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/dir.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/Documentation/config.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/Documentation/config.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/Documentation/config.txt	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/Documentation/config.txt	2015-02-06 05:40:08.000000000 +0800
@@ -372,20 +372,25 @@
 The special string `none` can be used as the proxy command to
 specify that no proxy be used for a given domain pattern.
 This is useful for excluding servers inside a firewall from
 proxy use, while defaulting to a common proxy for external domains.
 
 core.ignoreStat::
-	If true, commands which modify both the working tree and the index
-	will mark the updated paths with the "assume unchanged" bit in the
-	index. These marked files are then assumed to stay unchanged in the
-	working tree, until you mark them otherwise manually - Git will not
-	detect the file changes	by lstat() calls. This is useful on systems
-	where those are very slow, such as Microsoft Windows.
-	See linkgit:git-update-index[1].
-	False by default.
+	If true, Git will avoid using lstat() calls to detect if files have
+	changed by setting the "assume-unchanged" bit for those tracked files
+	which it has updated identically in both the index and working tree.
++
+When files are modified outside of Git, the user will need to stage
+the modified files explicitly (e.g. see 'Examples' section in
+linkgit:git-update-index[1]).
+Git will not normally detect changes to those files.
++
+This is useful on systems where lstat() calls are very slow, such as
+CIFS/Microsoft Windows.
++
+False by default.
 
 core.preferSymlinkRefs::
 	Instead of the default "symref" format for HEAD
 	and other symbolic reference files, use symbolic links.
 	This is sometimes needed to work with old scripts that
 	expect HEAD to be a symbolic link.
@@ -846,17 +851,19 @@
 The value for these configuration variables is a list of colors (at most
 two) and attributes (at most one), separated by spaces.  The colors
 accepted are `normal`, `black`, `red`, `green`, `yellow`, `blue`,
 `magenta`, `cyan` and `white`; the attributes are `bold`, `dim`, `ul`,
 `blink` and `reverse`.  The first color given is the foreground; the
 second is the background.  The position of the attribute, if any,
-doesn't matter.
+doesn't matter. Attributes may be turned off specifically by prefixing
+them with `no` (e.g., `noreverse`, `noul`, etc).
 +
 Colors (foreground and background) may also be given as numbers between
 0 and 255; these use ANSI 256-color mode (but note that not all
-terminals may support this).
+terminals may support this).  If your terminal supports it, you may also
+specify 24-bit RGB values as hex, like `#ff0ab3`.
 
 color.diff::
 	Whether to use ANSI escape sequences to add color to patches.
 	If this is set to `always`, linkgit:git-diff[1],
 	linkgit:git-log[1], and linkgit:git-show[1] will use color
 	for all patches.  If it is set to `true` or `auto`, those
@@ -2141,12 +2148,19 @@
 	to the currently checked out branch of a non-bare repository.
 	Such a push is potentially dangerous because it brings the HEAD
 	out of sync with the index and working tree. If set to "warn",
 	print a warning of such a push to stderr, but allow the push to
 	proceed. If set to false or "ignore", allow such pushes with no
 	message. Defaults to "refuse".
++
+Another option is "updateInstead" which will update the working
+directory (must be clean) if pushing into the current branch. This option is
+intended for synchronizing working directories when one side is not easily
+accessible via interactive ssh (e.g. a live web site, hence the requirement
+that the working directory be clean). This mode also comes in handy when
+developing inside a VM to test and fix code on different Operating Systems.
 
 receive.denyNonFastForwards::
 	If set to true, git-receive-pack will deny a ref update which is
 	not a fast-forward. Use this to prevent such an update via a push,
 	even if that push is forced. This configuration variable is
 	set when initializing a shared repository.
@@ -2315,13 +2329,15 @@
 sendemail.smtpdomain::
 sendemail.smtpserver::
 sendemail.smtpserverport::
 sendemail.smtpserveroption::
 sendemail.smtpuser::
 sendemail.thread::
+sendemail.transferencoding::
 sendemail.validate::
+sendemail.xmailer::
 	See linkgit:git-send-email[1] for description.
 
 sendemail.signedoffcc::
 	Deprecated alias for 'sendemail.signedoffbycc'.
 
 showbranch.default::
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/Documentation/git-add.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/Documentation/git-add.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/Documentation/git-add.txt	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/Documentation/git-add.txt	2015-02-06 05:40:08.000000000 +0800
@@ -5,13 +5,13 @@
 ----
 git-add - Add file contents to the index
 
 SYNOPSIS
 --------
 [verse]
-'git add' [-n] [-v] [--force | -f] [--interactive | -i] [--patch | -p]
+'git add' [--verbose | -v] [--dry-run | -n] [--force | -f] [--interactive | -i] [--patch | -p]
 	  [--edit | -e] [--[no-]all | --[no-]ignore-removal | [--update | -u]]
 	  [--intent-to-add | -N] [--refresh] [--ignore-errors] [--ignore-missing]
 	  [--] [<pathspec>...]
 
 DESCRIPTION
 -----------
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/Documentation/git-am.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/Documentation/git-am.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/Documentation/git-am.txt	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/Documentation/git-am.txt	2015-02-06 05:40:08.000000000 +0800
@@ -54,12 +54,23 @@
 	Remove everything in body before a scissors line (see
 	linkgit:git-mailinfo[1]).
 
 --no-scissors::
 	Ignore scissors lines (see linkgit:git-mailinfo[1]).
 
+-m::
+--message-id::
+	Pass the `-m` flag to 'git mailinfo' (see linkgit:git-mailinfo[1]),
+	so that the Message-ID header is added to the commit message.
+	The `am.messageid` configuration variable can be used to specify
+	the default behaviour.
+
+--no-message-id::
+	Do not add the Message-ID header to the commit message.
+	`no-message-id` is useful to override `am.messageid`.
+
 -q::
 --quiet::
 	Be quiet. Only print error messages.
 
 -u::
 --utf8::
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/Documentation/git-check-ignore.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/Documentation/git-check-ignore.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/Documentation/git-check-ignore.txt	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/Documentation/git-check-ignore.txt	2015-02-06 05:40:08.000000000 +0800
@@ -18,12 +18,15 @@
 For each pathname given via the command-line or from a file via
 `--stdin`, show the pattern from .gitignore (or other input files to
 the exclude mechanism) that decides if the pathname is excluded or
 included.  Later patterns within a file take precedence over earlier
 ones.
 
+By default, tracked files are not shown at all since they are not
+subject to exclude rules; but see `--no-index'.
+
 OPTIONS
 -------
 -q, --quiet::
 	Don't output anything, just set exit status.  This is only
 	valid with a single pathname.
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/Documentation/git-clone.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/Documentation/git-clone.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/Documentation/git-clone.txt	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/Documentation/git-clone.txt	2015-02-06 05:40:08.000000000 +0800
@@ -9,13 +9,13 @@
 SYNOPSIS
 --------
 [verse]
 'git clone' [--template=<template_directory>]
 	  [-l] [-s] [--no-hardlinks] [-q] [-n] [--bare] [--mirror]
 	  [-o <name>] [-b <name>] [-u <upload-pack>] [--reference <repository>]
-	  [--separate-git-dir <git dir>]
+	  [--dissociate] [--separate-git-dir <git dir>]
 	  [--depth <depth>] [--[no-]single-branch]
 	  [--recursive | --recurse-submodules] [--] <repository>
 	  [<directory>]
 
 DESCRIPTION
 -----------
@@ -95,13 +95,20 @@
 	automatically setup `.git/objects/info/alternates` to
 	obtain objects from the reference repository.  Using
 	an already existing repository as an alternate will
 	require fewer objects to be copied from the repository
 	being cloned, reducing network and local storage costs.
 +
-*NOTE*: see the NOTE for the `--shared` option.
+*NOTE*: see the NOTE for the `--shared` option, and also the
+`--dissociate` option.
+
+--dissociate::
+	Borrow the objects from reference repositories specified
+	with the `--reference` options only to reduce network
+	transfer and stop borrowing from them after a clone is made
+	by making necessary local copies of borrowed objects.
 
 --quiet::
 -q::
 	Operate quietly.  Progress is not reported to the standard
 	error stream. This flag is also passed to the `rsync'
 	command when given.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/Documentation/gitignore.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/Documentation/gitignore.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/Documentation/gitignore.txt	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/Documentation/gitignore.txt	2015-02-06 05:40:08.000000000 +0800
@@ -135,15 +135,12 @@
 NOTES
 -----
 
 The purpose of gitignore files is to ensure that certain files
 not tracked by Git remain untracked.
 
-To ignore uncommitted changes in a file that is already tracked,
-use 'git update-index {litdd}assume-unchanged'.
-
 To stop tracking a file that is currently tracked, use
 'git rm --cached'.
 
 EXAMPLES
 --------
 
@@ -200,13 +197,12 @@
     !/foo/bar
 --------------------------------------------------------------
 
 SEE ALSO
 --------
 linkgit:git-rm[1],
-linkgit:git-update-index[1],
 linkgit:gitrepository-layout[5],
 linkgit:git-check-ignore[1]
 
 GIT
 ---
 Part of the linkgit:git[1] suite
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/Documentation/git-imap-send.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/Documentation/git-imap-send.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/Documentation/git-imap-send.txt	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/Documentation/git-imap-send.txt	2015-02-06 05:40:08.000000000 +0800
@@ -6,13 +6,13 @@
 git-imap-send - Send a collection of patches from stdin to an IMAP folder
 
 
 SYNOPSIS
 --------
 [verse]
-'git imap-send'
+'git imap-send' [-v] [-q] [--[no-]curl]
 
 
 DESCRIPTION
 -----------
 This command uploads a mailbox generated with 'git format-patch'
 into an IMAP drafts folder.  This allows patches to be sent as
@@ -23,12 +23,33 @@
 
 Typical usage is something like:
 
 git format-patch --signoff --stdout --attach origin | git imap-send
 
 
+OPTIONS
+-------
+
+-v::
+--verbose::
+	Be verbose.
+
+-q::
+--quiet::
+	Be quiet.
+
+--curl::
+	Use libcurl to communicate with the IMAP server, unless tunneling
+	into it.  Ignored if Git was built without the USE_CURL_FOR_IMAP_SEND
+	option set.
+
+--no-curl::
+	Talk to the IMAP server using git's own IMAP routines instead of
+	using libcurl.
+
+
 CONFIGURATION
 -------------
 
 To use the tool, imap.folder and either imap.tunnel or imap.host must be set
 to appropriate values.
 
@@ -72,13 +93,15 @@
 	and have a content type of text/html.  Ironically, enabling this
 	option causes Thunderbird to send the patch as a plain/text,
 	format=fixed email.  Default is `false`.
 
 imap.authMethod::
 	Specify authenticate method for authentication with IMAP server.
-	Current supported method is 'CRAM-MD5' only. If this is not set
+	If Git was built with the NO_CURL option, or if your curl version is older
+	than 7.34.0, or if you're running git-imap-send with the `--no-curl`
+	option, the only supported method is 'CRAM-MD5'. If this is not set
 	then 'git imap-send' uses the basic IMAP plaintext LOGIN command.
 
 Examples
 ~~~~~~~~
 
 Using tunnel mode:
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/Documentation/git-mailinfo.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/Documentation/git-mailinfo.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/Documentation/git-mailinfo.txt	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/Documentation/git-mailinfo.txt	2015-02-06 05:40:08.000000000 +0800
@@ -63,12 +63,17 @@
 	Similar to -u.  But when re-coding, the charset specified here is
 	used instead of the one specified by i18n.commitencoding or UTF-8.
 
 -n::
 	Disable all charset re-coding of the metadata.
 
+-m::
+--message-id::
+	Copy the Message-ID header at the end of the commit message.  This
+	is useful in order to associate commits with mailing list discussions.
+
 --scissors::
 	Remove everything in body before a scissors line.  A line that
 	mainly consists of scissors (either ">8" or "8<") and perforation
 	(dash "-") marks is called a scissors line, and is used to request
 	the reader to cut the message at that line.  If such a line
 	appears in the body of the message before the patch, everything
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/Documentation/git-notes.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/Documentation/git-notes.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/Documentation/git-notes.txt	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/Documentation/git-notes.txt	2015-02-06 05:40:08.000000000 +0800
@@ -6,16 +6,16 @@
 git-notes - Add or inspect object notes
 
 SYNOPSIS
 --------
 [verse]
 'git notes' [list [<object>]]
-'git notes' add [-f] [-F <file> | -m <msg> | (-c | -C) <object>] [<object>]
+'git notes' add [-f] [--allow-empty] [-F <file> | -m <msg> | (-c | -C) <object>] [<object>]
 'git notes' copy [-f] ( --stdin | <from-object> <to-object> )
-'git notes' append [-F <file> | -m <msg> | (-c | -C) <object>] [<object>]
-'git notes' edit [<object>]
+'git notes' append [--allow-empty] [-F <file> | -m <msg> | (-c | -C) <object>] [<object>]
+'git notes' edit [--allow-empty] [<object>]
 'git notes' show [<object>]
 'git notes' merge [-v | -q] [-s <strategy> ] <notes-ref>
 'git notes' merge --commit [-v | -q]
 'git notes' merge --abort [-v | -q]
 'git notes' remove [--ignore-missing] [--stdin] [<object>...]
 'git notes' prune [-n | -v]
@@ -152,12 +152,16 @@
 
 -c <object>::
 --reedit-message=<object>::
 	Like '-C', but with '-c' the editor is invoked, so that
 	the user can further edit the note message.
 
+--allow-empty::
+	Allow an empty note object to be stored. The default behavior is
+	to automatically remove empty notes.
+
 --ref <ref>::
 	Manipulate the notes tree in <ref>.  This overrides
 	'GIT_NOTES_REF' and the "core.notesRef" configuration.  The ref
 	is taken to be in `refs/notes/` if it is not qualified.
 
 --ignore-missing::
@@ -284,13 +288,13 @@
 (non-)format is accepted.  You can binary-safely create notes from
 arbitrary files using 'git hash-object':
 
 ------------
 $ cc *.c
 $ blob=$(git hash-object -w a.out)
-$ git notes --ref=built add -C "$blob" HEAD
+$ git notes --ref=built add --allow-empty -C "$blob" HEAD
 ------------
 
 (You cannot simply use `git notes --ref=built add -F a.out HEAD`
 because that is not binary-safe.)
 Of course, it doesn't make much sense to display non-text-format notes
 with 'git log', so if you use such notes, you'll probably need to write
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/Documentation/git-pack-objects.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/Documentation/git-pack-objects.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/Documentation/git-pack-objects.txt	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/Documentation/git-pack-objects.txt	2015-02-06 05:40:08.000000000 +0800
@@ -10,13 +10,13 @@
 --------
 [verse]
 'git pack-objects' [-q | --progress | --all-progress] [--all-progress-implied]
 	[--no-reuse-delta] [--delta-base-offset] [--non-empty]
 	[--local] [--incremental] [--window=<n>] [--depth=<n>]
 	[--revs [--unpacked | --all]] [--stdout | base-name]
-	[--keep-true-parents] < object-list
+	[--shallow] [--keep-true-parents] < object-list
 
 
 DESCRIPTION
 -----------
 Reads list of objects from the standard input, and writes a packed
 archive with specified base-name, or to the standard output.
@@ -187,12 +187,17 @@
 +
 Note: A thin pack violates the packed archive format by omitting
 required objects and is thus unusable by Git without making it
 self-contained. Use `git index-pack --fix-thin`
 (see linkgit:git-index-pack[1]) to restore the self-contained property.
 
+--shallow::
+	Optimize a pack that will be provided to a client with a shallow
+	repository.  This option, combined with \--thin, can result in a
+	smaller pack at the cost of speed.
+
 --delta-base-offset::
 	A packed archive can express the base object of a delta as
 	either a 20-byte object name or as an offset in the
 	stream, but ancient versions of Git don't understand the
 	latter.  By default, 'git pack-objects' only uses the
 	former format for better compatibility.  This option
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/Documentation/git-rev-list.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/Documentation/git-rev-list.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/Documentation/git-rev-list.txt	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/Documentation/git-rev-list.txt	2015-02-06 05:40:08.000000000 +0800
@@ -43,13 +43,14 @@
 	     [ \--encoding=<encoding> ]
 	     [ \--(author|committer|grep)=<pattern> ]
 	     [ \--regexp-ignore-case | -i ]
 	     [ \--extended-regexp | -E ]
 	     [ \--fixed-strings | -F ]
 	     [ \--date=(local|relative|default|iso|iso-strict|rfc|short) ]
-	     [ [\--objects | \--objects-edge] [ \--unpacked ] ]
+	     [ [ \--objects | \--objects-edge | \--objects-edge-aggressive ]
+	       [ \--unpacked ] ]
 	     [ \--pretty | \--header ]
 	     [ \--bisect ]
 	     [ \--bisect-vars ]
 	     [ \--bisect-all ]
 	     [ \--merge ]
 	     [ \--reverse ]
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/Documentation/git-send-email.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/Documentation/git-send-email.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/Documentation/git-send-email.txt	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/Documentation/git-send-email.txt	2015-02-06 05:40:08.000000000 +0800
@@ -128,12 +128,27 @@
 Note that no attempts whatsoever are made to validate the encoding.
 
 --compose-encoding=<encoding>::
 	Specify encoding of compose message. Default is the value of the
 	'sendemail.composeencoding'; if that is unspecified, UTF-8 is assumed.
 
+--transfer-encoding=(7bit|8bit|quoted-printable|base64)::
+	Specify the transfer encoding to be used to send the message over SMTP.
+	7bit will fail upon encountering a non-ASCII message.  quoted-printable
+	can be useful when the repository contains files that contain carriage
+	returns, but makes the raw patch email file (as saved from a MUA) much
+	harder to inspect manually.  base64 is even more fool proof, but also
+	even more opaque.  Default is the value of the 'sendemail.transferEncoding'
+	configuration value; if that is unspecified, git will use 8bit and not
+	add a Content-Transfer-Encoding header.
+
+--xmailer::
+--no-xmailer::
+	Add (or prevent adding) the "X-Mailer:" header.  By default,
+	the header is added, but it can be turned off by setting the
+	`sendemail.xmailer` configuration variable to `false`.
 
 Sending
 ~~~~~~~
 
 --envelope-sender=<address>::
 	Specify the envelope sender used to send the emails.
@@ -196,16 +211,21 @@
 must be used for each option.
 
 --smtp-ssl::
 	Legacy alias for '--smtp-encryption ssl'.
 
 --smtp-ssl-cert-path::
-	Path to ca-certificates (either a directory or a single file).
-	Set it to an empty string to disable certificate verification.
-	Defaults to the value set to the 'sendemail.smtpsslcertpath'
-	configuration variable, if set, or `/etc/ssl/certs` otherwise.
+	Path to a store of trusted CA certificates for SMTP SSL/TLS
+	certificate validation (either a directory that has been processed
+	by 'c_rehash', or a single file containing one or more PEM format
+	certificates concatenated together: see verify(1) -CAfile and
+	-CApath for more information on these). Set it to an empty string
+	to disable certificate verification. Defaults to the value of the
+	'sendemail.smtpsslcertpath' configuration variable, if set, or the
+	backing SSL library's compiled-in default otherwise (which should
+	be the best choice on most platforms).
 
 --smtp-user=<user>::
 	Username for SMTP-AUTH. Default is the value of 'sendemail.smtpuser';
 	if a username is not specified (with '--smtp-user' or 'sendemail.smtpuser'),
 	then authentication is not attempted.
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/Documentation/git-stripspace.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/Documentation/git-stripspace.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/Documentation/git-stripspace.txt	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/Documentation/git-stripspace.txt	2015-02-06 05:40:08.000000000 +0800
@@ -7,12 +7,13 @@
 
 
 SYNOPSIS
 --------
 [verse]
 'git stripspace' [-s | --strip-comments] < input
+'git stripspace' [-c | --comment-lines] < input
 
 DESCRIPTION
 -----------
 
 Clean the input in the manner used by Git for text such as commit
 messages, notes, tags and branch descriptions.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/Documentation/git.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/Documentation/git.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/Documentation/git.txt	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/Documentation/git.txt	2015-02-06 05:40:08.000000000 +0800
@@ -40,16 +40,20 @@
 
 You are reading the documentation for the latest (possibly
 unreleased) version of Git, that is available from the 'master'
 branch of the `git.git` repository.
 Documentation for older releases are available here:
 
-* link:v2.2.3/git.html[documentation for release 2.2.3]
+* link:v2.3.0/git.html[documentation for release 2.3]
+
+* release notes for
+  link:RelNotes/2.3.0.txt[2.3].
+
+* link:v2.2.2/git.html[documentation for release 2.2.2]
 
 * release notes for
-  link:RelNotes/2.2.3.txt[2.2.3],
   link:RelNotes/2.2.2.txt[2.2.2],
   link:RelNotes/2.2.1.txt[2.2.1],
   link:RelNotes/2.2.0.txt[2.2].
 
 * link:v2.1.4/git.html[documentation for release 2.1.4]
 
@@ -885,37 +889,43 @@
 	This environment variable overrides `$EDITOR` and `$VISUAL`.
 	It is used by several Git commands when, on interactive mode,
 	an editor is to be launched. See also linkgit:git-var[1]
 	and the `core.editor` option in linkgit:git-config[1].
 
 'GIT_SSH'::
-	If this environment variable is set then 'git fetch'
-	and 'git push' will use this command instead
-	of 'ssh' when they need to connect to a remote system.
-	The '$GIT_SSH' command will be given exactly two or
-	four arguments: the 'username@host' (or just 'host')
-	from the URL and the shell command to execute on that
-	remote system, optionally preceded by '-p' (literally) and
-	the 'port' from the URL when it specifies something other
-	than the default SSH port.
+'GIT_SSH_COMMAND'::
+	If either of these environment variables is set then 'git fetch'
+	and 'git push' will use the specified command instead of 'ssh'
+	when they need to connect to a remote system.
+	The command will be given exactly two or four arguments: the
+	'username@host' (or just 'host') from the URL and the shell
+	command to execute on that remote system, optionally preceded by
+	'-p' (literally) and the 'port' from the URL when it specifies
+	something other than the default SSH port.
 +
-To pass options to the program that you want to list in GIT_SSH
-you will need to wrap the program and options into a shell script,
-then set GIT_SSH to refer to the shell script.
+`$GIT_SSH_COMMAND` takes precedence over `$GIT_SSH`, and is interpreted
+by the shell, which allows additional arguments to be included.
+`$GIT_SSH` on the other hand must be just the path to a program
+(which can be a wrapper shell script, if additional arguments are
+needed).
 +
 Usually it is easier to configure any desired options through your
 personal `.ssh/config` file.  Please consult your ssh documentation
 for further details.
 
 'GIT_ASKPASS'::
 	If this environment variable is set, then Git commands which need to
 	acquire passwords or passphrases (e.g. for HTTP or IMAP authentication)
 	will call this program with a suitable prompt as command-line argument
 	and read the password from its STDOUT. See also the 'core.askpass'
 	option in linkgit:git-config[1].
 
+'GIT_TERMINAL_PROMPT'::
+	If this environment variable is set to `0`, git will not prompt
+	on the terminal (e.g., when asking for HTTP authentication).
+
 'GIT_CONFIG_NOSYSTEM'::
 	Whether to skip reading settings from the system-wide
 	`$(prefix)/etc/gitconfig` file.  This environment variable can
 	be used along with `$HOME` and `$XDG_CONFIG_HOME` to create a
 	predictable environment for a picky script, or you can set it
 	temporarily to avoid using a buggy `/etc/gitconfig` file while
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/Documentation/git-update-index.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/Documentation/git-update-index.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/Documentation/git-update-index.txt	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/Documentation/git-update-index.txt	2015-02-06 05:40:08.000000000 +0800
@@ -79,26 +79,24 @@
         Read index information from stdin.
 
 --chmod=(+|-)x::
         Set the execute permissions on the updated files.
 
 --[no-]assume-unchanged::
-	When these flags are specified, the object names recorded
-	for the paths are not updated.  Instead, these options
-	set and unset the "assume unchanged" bit for the
-	paths.  When the "assume unchanged" bit is on, Git stops
-	checking the working tree files for possible
-	modifications, so you need to manually unset the bit to
-	tell Git when you change the working tree file. This is
+	When this flag is specified, the object names recorded
+	for the paths are not updated.  Instead, this option
+	sets/unsets the "assume unchanged" bit for the
+	paths.  When the "assume unchanged" bit is on, the user
+	promises not to change the file and allows Git to assume
+	that the working tree file matches what is recorded in
+	the index.  If you want to change the working tree file,
+	you need to unset the bit to tell Git.  This is
 	sometimes helpful when working with a big project on a
 	filesystem that has very slow lstat(2) system call
 	(e.g. cifs).
 +
-This option can be also used as a coarse file-level mechanism
-to ignore uncommitted changes in tracked files (akin to what
-`.gitignore` does for untracked files).
 Git will fail (gracefully) in case it needs to modify this file
 in the index e.g. when merging in a commit;
 thus, in case the assumed-untracked file is changed upstream,
 you will need to handle the situation manually.
 
 --really-refresh::
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/Documentation/Makefile /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/Documentation/Makefile
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/Documentation/Makefile	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/Documentation/Makefile	2015-02-06 05:40:08.000000000 +0800
@@ -100,13 +100,13 @@
 ASCIIDOC = asciidoc
 ASCIIDOC_EXTRA =
 ASCIIDOC_HTML = xhtml11
 ASCIIDOC_DOCBOOK = docbook
 ASCIIDOC_CONF = -f asciidoc.conf
 ASCIIDOC_COMMON = $(ASCIIDOC) $(ASCIIDOC_EXTRA) $(ASCIIDOC_CONF) \
-		-agit-version=$(GIT_VERSION)
+		-agit_version=$(GIT_VERSION)
 TXT_TO_HTML = $(ASCIIDOC_COMMON) -b $(ASCIIDOC_HTML)
 TXT_TO_XML = $(ASCIIDOC_COMMON) -b $(ASCIIDOC_DOCBOOK)
 MANPAGE_XSL = manpage-normal.xsl
 XMLTO = xmlto
 XMLTO_EXTRA =
 INSTALL ?= install
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/Documentation/RelNotes: 2.2.3.txt
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/Documentation/RelNotes: 2.3.0.txt
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/Documentation/rev-list-options.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/Documentation/rev-list-options.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/Documentation/rev-list-options.txt	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/Documentation/rev-list-options.txt	2015-02-06 05:40:08.000000000 +0800
@@ -650,16 +650,21 @@
 	all object IDs which I need to download if I have the commit
 	object _bar_ but not _foo_''.
 
 --objects-edge::
 	Similar to `--objects`, but also print the IDs of excluded
 	commits prefixed with a ``-'' character.  This is used by
-	linkgit:git-pack-objects[1] to build ``thin'' pack, which records
+	linkgit:git-pack-objects[1] to build a ``thin'' pack, which records
 	objects in deltified form based on objects contained in these
 	excluded commits to reduce network traffic.
 
+--objects-edge-aggressive::
+	Similar to `--objects-edge`, but it tries harder to find excluded
+	commits at the cost of increased time.  This is used instead of
+	`--objects-edge` to build ``thin'' packs for shallow repositories.
+
 --unpacked::
 	Only useful with `--objects`; print the object IDs that are not
 	in packs.
 
 --no-walk[=(sorted|unsorted)]::
 	Only show the given commits, but do not traverse their ancestors.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/Documentation/SubmittingPatches /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/Documentation/SubmittingPatches
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/Documentation/SubmittingPatches	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/Documentation/SubmittingPatches	2015-02-06 05:40:08.000000000 +0800
@@ -54,13 +54,14 @@
 the code, are the most beautiful patches.  Descriptions that summarise
 the point in the subject well, and describe the motivation for the
 change, the approach taken by the change, and if relevant how this
 differs substantially from the prior version, are all good things
 to have.
 
-Make sure that you have tests for the bug you are fixing.
+Make sure that you have tests for the bug you are fixing.  See
+t/README for guidance.
 
 When adding a new feature, make sure that you have new tests to show
 the feature triggers the new behaviour when it should, and to show the
 feature does not trigger when it shouldn't.  Also make sure that the
 test suite passes after your commit.  Do not forget to update the
 documentation to describe the updated behaviour.
@@ -172,14 +173,17 @@
 you are forwarding a patch from somebody else, optionally, at
 the beginning of the e-mail message just before the commit
 message starts, you can put a "From: " line to name that person.
 
 You often want to add additional explanation about the patch,
 other than the commit message itself.  Place such "cover letter"
-material between the three dash lines and the diffstat. Git-notes
-can also be inserted using the `--notes` option.
+material between the three-dash line and the diffstat.  For
+patches requiring multiple iterations of review and discussion,
+an explanation of changes between each iteration can be kept in
+Git-notes and inserted automatically following the three-dash
+line via `git format-patch --notes`.
 
 Do not attach the patch as a MIME attachment, compressed or not.
 Do not let your e-mail client send quoted-printable.  Do not let
 your e-mail client send format=flowed which would destroy
 whitespaces in your patches. Many
 popular e-mail applications will not always transmit a MIME
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/Documentation/technical/api-credentials.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/Documentation/technical/api-credentials.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/Documentation/technical/api-credentials.txt	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/Documentation/technical/api-credentials.txt	2015-02-06 05:40:08.000000000 +0800
@@ -245,13 +245,16 @@
 `git credential` plumbing command (see the section `INPUT/OUTPUT
 FORMAT` in linkgit:git-credential[7] for a detailed specification).
 
 For a `get` operation, the helper should produce a list of attributes
 on stdout in the same format. A helper is free to produce a subset, or
 even no values at all if it has nothing useful to provide. Any provided
-attributes will overwrite those already known about by Git.
+attributes will overwrite those already known about by Git.  If a helper
+outputs a `quit` attribute with a value of `true` or `1`, no further
+helpers will be consulted, nor will the user be prompted (if no
+credential has been provided, the operation will then fail).
 
 For a `store` or `erase` operation, the helper's output is ignored.
 If it fails to perform the requested operation, it may complain to
 stderr to inform the user. If it does not support the requested
 operation (e.g., a read-only store), it should silently ignore the
 request.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/Documentation/technical/api-string-list.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/Documentation/technical/api-string-list.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/Documentation/technical/api-string-list.txt	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/Documentation/technical/api-string-list.txt	2015-02-06 05:40:08.000000000 +0800
@@ -26,13 +26,13 @@
   `string_list_split`, and/or `string_list_split_in_place`.
 
 . Can check if a string is in the list using `string_list_has_string` or
   `unsorted_string_list_has_string` and get it from the list using
   `string_list_lookup` for sorted lists.
 
-. Can sort an unsorted list using `sort_string_list`.
+. Can sort an unsorted list using `string_list_sort`.
 
 . Can remove duplicate items from a sorted list using
   `string_list_remove_duplicates`.
 
 . Can remove individual items of an unsorted list using
   `unsorted_string_list_delete_item`.
@@ -143,13 +143,13 @@
 	Append a new string to the end of the string_list.  The new
 	`string_list_entry` always refers to the input string, even if
 	`strdup_string` is set.  This function can be used to hand
 	ownership of a malloc()ed string to a `string_list` that has
 	`strdup_string` set.
 
-`sort_string_list`::
+`string_list_sort`::
 
 	Sort the list's entries by string value in `strcmp()` order.
 
 `unsorted_string_list_has_string`::
 
 	It's like `string_list_has_string()` but for unsorted lists.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/Documentation/technical/index-format.txt /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/Documentation/technical/index-format.txt
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/Documentation/technical/index-format.txt	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/Documentation/technical/index-format.txt	2015-02-06 05:40:08.000000000 +0800
@@ -204,13 +204,13 @@
 === Split index
 
   In split index mode, the majority of index entries could be stored
   in a separate file. This extension records the changes to be made on
   top of that to produce the final index.
 
-  The signature for this extension is { 'l', 'i, 'n', 'k' }.
+  The signature for this extension is { 'l', 'i', 'n', 'k' }.
 
   The extension consists of:
 
   - 160-bit SHA-1 of the shared index file. The shared index file path
     is $GIT_DIR/sharedindex.<SHA-1>. If all 160 bits are zero, the
     index does not require a shared index file.
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/editor.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/editor.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/editor.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/editor.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/entry.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/entry.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/entry.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/entry.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/environment.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/environment.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/environment.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/environment.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/ewah/bitmap.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/ewah/bitmap.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/ewah/bitmap.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/ewah/bitmap.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/ewah/ewah_bitmap.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/ewah/ewah_bitmap.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/ewah/ewah_bitmap.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/ewah/ewah_bitmap.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/ewah/ewah_io.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/ewah/ewah_io.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/ewah/ewah_io.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/ewah/ewah_io.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/ewah/ewah_rlw.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/ewah/ewah_rlw.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/ewah/ewah_rlw.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/ewah/ewah_rlw.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/exec_cmd.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/exec_cmd.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/exec_cmd.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/exec_cmd.c	2015-02-06 05:40:08.000000000 +0800
@@ -3,23 +3,23 @@
 #include "quote.h"
 #define MAX_ARGS	32
 
 static const char *argv_exec_path;
 static const char *argv0_path;
 
-const char *system_path(const char *path)
+char *system_path(const char *path)
 {
 #ifdef RUNTIME_PREFIX
 	static const char *prefix;
 #else
 	static const char *prefix = PREFIX;
 #endif
 	struct strbuf d = STRBUF_INIT;
 
 	if (is_absolute_path(path))
-		return path;
+		return xstrdup(path);
 
 #ifdef RUNTIME_PREFIX
 	assert(argv0_path);
 	assert(is_absolute_path(argv0_path));
 
 	if (!prefix &&
@@ -31,14 +31,13 @@
 				"but prefix computation failed.  "
 				"Using static fallback '%s'.\n", prefix);
 	}
 #endif
 
 	strbuf_addf(&d, "%s/%s", prefix, path);
-	path = strbuf_detach(&d, NULL);
-	return path;
+	return strbuf_detach(&d, NULL);
 }
 
 const char *git_extract_argv0_path(const char *argv0)
 {
 	const char *slash;
 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/exec_cmd.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/exec_cmd.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/exec_cmd.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/exec_cmd.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/exec_cmd.h	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/exec_cmd.h	2015-02-06 05:40:08.000000000 +0800
@@ -6,9 +6,9 @@
 extern const char *git_exec_path(void);
 extern void setup_path(void);
 extern const char **prepare_git_cmd(const char **argv);
 extern int execv_git_cmd(const char **argv); /* NULL terminated */
 LAST_ARG_MUST_BE_NULL
 extern int execl_git_cmd(const char *cmd, ...);
-extern const char *system_path(const char *path);
+extern char *system_path(const char *path);
 
 #endif /* GIT_EXEC_CMD_H */
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/exec_cmd.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/exec_cmd.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/fast-import.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/fast-import.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/fast-import.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/fast-import.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/fetch-pack.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/fetch-pack.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/fetch-pack.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/fetch-pack.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/fsck.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/fsck.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/fsck.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/fsck.c	2015-02-06 05:40:08.000000000 +0800
@@ -423,13 +423,14 @@
 	if (!eol) {
 		ret = error_func(&tag->object, FSCK_ERROR, "invalid format - unexpected end after 'type' line");
 		goto done;
 	}
 	strbuf_addf(&sb, "refs/tags/%.*s", (int)(eol - buffer), buffer);
 	if (check_refname_format(sb.buf, 0))
-		error_func(&tag->object, FSCK_WARN, "invalid 'tag' name: %s", buffer);
+		error_func(&tag->object, FSCK_WARN, "invalid 'tag' name: %.*s",
+			   (int)(eol - buffer), buffer);
 	buffer = eol + 1;
 
 	if (!skip_prefix(buffer, "tagger ", &buffer))
 		/* early tags do not contain 'tagger' lines; warn only */
 		error_func(&tag->object, FSCK_WARN, "invalid format - expected 'tagger' line");
 	else
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/fsck.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/fsck.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/fsck.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/fsck.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/gettext.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/gettext.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/gettext.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/gettext.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-add and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-add differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-add--interactive /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-add--interactive
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-add--interactive	2017-10-10 12:20:53.350655927 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-add--interactive	2017-10-10 12:24:29.094648021 +0800
@@ -1354,12 +1354,13 @@
 		  ($hunk[$ix]{TYPE} eq 'mode' ? ' mode change' :
 		   $hunk[$ix]{TYPE} eq 'deletion' ? ' deletion' :
 		   ' this hunk'),
 		  $patch_mode_flavour{TARGET},
 		  " [y,n,q,a,d,/$other,?]? ";
 		my $line = prompt_single_character;
+		last unless defined $line;
 		if ($line) {
 			if ($line =~ /^y/i) {
 				$hunk[$ix]{USE} = 1;
 			}
 			elsif ($line =~ /^n/i) {
 				$hunk[$ix]{USE} = 0;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-add--interactive.perl /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-add--interactive.perl
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-add--interactive.perl	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-add--interactive.perl	2015-02-06 05:40:08.000000000 +0800
@@ -1353,12 +1353,13 @@
 		  ($hunk[$ix]{TYPE} eq 'mode' ? ' mode change' :
 		   $hunk[$ix]{TYPE} eq 'deletion' ? ' deletion' :
 		   ' this hunk'),
 		  $patch_mode_flavour{TARGET},
 		  " [y,n,q,a,d,/$other,?]? ";
 		my $line = prompt_single_character;
+		last unless defined $line;
 		if ($line) {
 			if ($line =~ /^y/i) {
 				$hunk[$ix]{USE} = 1;
 			}
 			elsif ($line =~ /^n/i) {
 				$hunk[$ix]{USE} = 0;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-am /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-am
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-am	2017-10-10 12:20:53.178655934 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-am	2017-10-10 12:24:28.910648027 +0800
@@ -14,12 +14,13 @@
 3,3way          allow fall back on 3way merging if needed
 q,quiet         be quiet
 s,signoff       add a Signed-off-by line to the commit message
 u,utf8          recode into utf8 (default)
 k,keep          pass -k flag to git-mailinfo
 keep-non-patch  pass -b flag to git-mailinfo
+m,message-id    pass -m flag to git-mailinfo
 keep-cr         pass --keep-cr flag to git-mailsplit for mbox format
 no-keep-cr      do not pass --keep-cr flag to git-mailsplit independent of am.keepcr
 c,scissors      strip everything before a scissors line
 whitespace=     pass it through git-apply
 ignore-space-change pass it through git-apply
 ignore-whitespace pass it through git-apply
@@ -368,19 +369,24 @@
 	esac
 }
 
 prec=4
 dotest="$GIT_DIR/rebase-apply"
 sign= utf8=t keep= keepcr= skip= interactive= resolved= rebasing= abort=
-resolvemsg= resume= scissors= no_inbody_headers=
+messageid= resolvemsg= resume= scissors= no_inbody_headers=
 git_apply_opt=
 committer_date_is_author_date=
 ignore_date=
 allow_rerere_autoupdate=
 gpg_sign_opt=
 
+if test "$(git config --bool --get am.messageid)" = true
+then
+    messageid=t
+fi
+
 if test "$(git config --bool --get am.keepcr)" = true
 then
     keepcr=t
 fi
 
 while test $# != 0
@@ -397,12 +403,16 @@
 	-s|--signoff)
 		sign=t ;;
 	-u|--utf8)
 		utf8=t ;; # this is now default
 	--no-utf8)
 		utf8= ;;
+	-m|--message-id)
+		messageid=t ;;
+	--no-message-id)
+		messageid=f ;;
 	-k|--keep)
 		keep=t ;;
 	--keep-non-patch)
 		keep=b ;;
 	-c|--scissors)
 		scissors=t ;;
@@ -564,12 +574,13 @@
 	# else is kept
 	echo " $git_apply_opt" >"$dotest/apply-opt"
 	echo "$threeway" >"$dotest/threeway"
 	echo "$sign" >"$dotest/sign"
 	echo "$utf8" >"$dotest/utf8"
 	echo "$keep" >"$dotest/keep"
+	echo "$messageid" >"$dotest/messageid"
 	echo "$scissors" >"$dotest/scissors"
 	echo "$no_inbody_headers" >"$dotest/no_inbody_headers"
 	echo "$GIT_QUIET" >"$dotest/quiet"
 	echo 1 >"$dotest/next"
 	if test -n "$rebasing"
 	then
@@ -618,12 +629,18 @@
 	keep=-k ;;
 b)
 	keep=-b ;;
 *)
 	keep= ;;
 esac
+case "$(cat "$dotest/messageid")" in
+t)
+	messageid=-m ;;
+f)
+	messageid= ;;
+esac
 case "$(cat "$dotest/scissors")" in
 t)
 	scissors=--scissors ;;
 f)
 	scissors=--no-scissors ;;
 esac
@@ -689,13 +706,13 @@
 			git cat-file commit "$commit" |
 			sed -e '1,/^$/d' >"$dotest/msg-clean"
 			echo "$commit" >"$dotest/original-commit"
 			get_author_ident_from_commit "$commit" >"$dotest/author-script"
 			git diff-tree --root --binary --full-index "$commit" >"$dotest/patch"
 		else
-			git mailinfo $keep $no_inbody_headers $scissors $utf8 "$dotest/msg" "$dotest/patch" \
+			git mailinfo $keep $no_inbody_headers $messageid $scissors $utf8 "$dotest/msg" "$dotest/patch" \
 				<"$dotest/$msgnum" >"$dotest/info" ||
 				stop_here $this
 
 			# skip pine's internal folder data
 			sane_grep '^Author: Mail System Internal Data$' \
 				<"$dotest"/info >/dev/null &&
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-am.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-am.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-am.sh	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-am.sh	2015-02-06 05:40:08.000000000 +0800
@@ -14,12 +14,13 @@
 3,3way          allow fall back on 3way merging if needed
 q,quiet         be quiet
 s,signoff       add a Signed-off-by line to the commit message
 u,utf8          recode into utf8 (default)
 k,keep          pass -k flag to git-mailinfo
 keep-non-patch  pass -b flag to git-mailinfo
+m,message-id    pass -m flag to git-mailinfo
 keep-cr         pass --keep-cr flag to git-mailsplit for mbox format
 no-keep-cr      do not pass --keep-cr flag to git-mailsplit independent of am.keepcr
 c,scissors      strip everything before a scissors line
 whitespace=     pass it through git-apply
 ignore-space-change pass it through git-apply
 ignore-whitespace pass it through git-apply
@@ -368,19 +369,24 @@
 	esac
 }
 
 prec=4
 dotest="$GIT_DIR/rebase-apply"
 sign= utf8=t keep= keepcr= skip= interactive= resolved= rebasing= abort=
-resolvemsg= resume= scissors= no_inbody_headers=
+messageid= resolvemsg= resume= scissors= no_inbody_headers=
 git_apply_opt=
 committer_date_is_author_date=
 ignore_date=
 allow_rerere_autoupdate=
 gpg_sign_opt=
 
+if test "$(git config --bool --get am.messageid)" = true
+then
+    messageid=t
+fi
+
 if test "$(git config --bool --get am.keepcr)" = true
 then
     keepcr=t
 fi
 
 while test $# != 0
@@ -397,12 +403,16 @@
 	-s|--signoff)
 		sign=t ;;
 	-u|--utf8)
 		utf8=t ;; # this is now default
 	--no-utf8)
 		utf8= ;;
+	-m|--message-id)
+		messageid=t ;;
+	--no-message-id)
+		messageid=f ;;
 	-k|--keep)
 		keep=t ;;
 	--keep-non-patch)
 		keep=b ;;
 	-c|--scissors)
 		scissors=t ;;
@@ -564,12 +574,13 @@
 	# else is kept
 	echo " $git_apply_opt" >"$dotest/apply-opt"
 	echo "$threeway" >"$dotest/threeway"
 	echo "$sign" >"$dotest/sign"
 	echo "$utf8" >"$dotest/utf8"
 	echo "$keep" >"$dotest/keep"
+	echo "$messageid" >"$dotest/messageid"
 	echo "$scissors" >"$dotest/scissors"
 	echo "$no_inbody_headers" >"$dotest/no_inbody_headers"
 	echo "$GIT_QUIET" >"$dotest/quiet"
 	echo 1 >"$dotest/next"
 	if test -n "$rebasing"
 	then
@@ -618,12 +629,18 @@
 	keep=-k ;;
 b)
 	keep=-b ;;
 *)
 	keep= ;;
 esac
+case "$(cat "$dotest/messageid")" in
+t)
+	messageid=-m ;;
+f)
+	messageid= ;;
+esac
 case "$(cat "$dotest/scissors")" in
 t)
 	scissors=--scissors ;;
 f)
 	scissors=--no-scissors ;;
 esac
@@ -689,13 +706,13 @@
 			git cat-file commit "$commit" |
 			sed -e '1,/^$/d' >"$dotest/msg-clean"
 			echo "$commit" >"$dotest/original-commit"
 			get_author_ident_from_commit "$commit" >"$dotest/author-script"
 			git diff-tree --root --binary --full-index "$commit" >"$dotest/patch"
 		else
-			git mailinfo $keep $no_inbody_headers $scissors $utf8 "$dotest/msg" "$dotest/patch" \
+			git mailinfo $keep $no_inbody_headers $messageid $scissors $utf8 "$dotest/msg" "$dotest/patch" \
 				<"$dotest/$msgnum" >"$dotest/info" ||
 				stop_here $this
 
 			# skip pine's internal folder data
 			sane_grep '^Author: Mail System Internal Data$' \
 				<"$dotest"/info >/dev/null &&
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-annotate and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-annotate differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-apply and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-apply differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-archive and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-archive differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-bisect /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-bisect
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-bisect	2017-10-10 12:20:53.182655934 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-bisect	2017-10-10 12:24:28.910648027 +0800
@@ -234,21 +234,24 @@
 		rev=$(git rev-parse --verify $(bisect_head)) ||
 			die "$(gettext "Bad rev input: $(bisect_head)")"
 		bisect_write "$state" "$rev"
 		check_expected_revs "$rev" ;;
 	2,bad|*,good|*,skip)
 		shift
-		eval=''
+		hash_list=''
 		for rev in "$@"
 		do
 			sha=$(git rev-parse --verify "$rev^{commit}") ||
 				die "$(eval_gettext "Bad rev input: \$rev")"
-			eval="$eval bisect_write '$state' '$sha'; "
+			hash_list="$hash_list $sha"
 		done
-		eval "$eval"
-		check_expected_revs "$@" ;;
+		for rev in $hash_list
+		do
+			bisect_write "$state" "$rev"
+		done
+		check_expected_revs $hash_list ;;
 	*,bad)
 		die "$(gettext "'git bisect bad' can take only one argument.")" ;;
 	*)
 		usage ;;
 	esac
 	bisect_auto_next
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-bisect--helper and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-bisect--helper differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-bisect.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-bisect.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-bisect.sh	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-bisect.sh	2015-02-06 05:40:08.000000000 +0800
@@ -234,21 +234,24 @@
 		rev=$(git rev-parse --verify $(bisect_head)) ||
 			die "$(gettext "Bad rev input: $(bisect_head)")"
 		bisect_write "$state" "$rev"
 		check_expected_revs "$rev" ;;
 	2,bad|*,good|*,skip)
 		shift
-		eval=''
+		hash_list=''
 		for rev in "$@"
 		do
 			sha=$(git rev-parse --verify "$rev^{commit}") ||
 				die "$(eval_gettext "Bad rev input: \$rev")"
-			eval="$eval bisect_write '$state' '$sha'; "
+			hash_list="$hash_list $sha"
 		done
-		eval "$eval"
-		check_expected_revs "$@" ;;
+		for rev in $hash_list
+		do
+			bisect_write "$state" "$rev"
+		done
+		check_expected_revs $hash_list ;;
 	*,bad)
 		die "$(gettext "'git bisect bad' can take only one argument.")" ;;
 	*)
 		usage ;;
 	esac
 	bisect_auto_next
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-blame and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-blame differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-branch and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-branch differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-bundle and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-bundle differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git.c	2015-02-06 05:40:08.000000000 +0800
@@ -1,13 +1,10 @@
 #include "builtin.h"
-#include "cache.h"
 #include "exec_cmd.h"
 #include "help.h"
-#include "quote.h"
 #include "run-command.h"
-#include "commit.h"
 
 const char git_usage_string[] =
 	"git [--version] [--help] [-C <path>] [-c name=value]\n"
 	"           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]\n"
 	"           [-p|--paginate|--no-pager] [--no-replace-objects] [--bare]\n"
 	"           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]\n"
@@ -484,28 +481,34 @@
 	{ "verify-tag", cmd_verify_tag, RUN_SETUP },
 	{ "version", cmd_version },
 	{ "whatchanged", cmd_whatchanged, RUN_SETUP },
 	{ "write-tree", cmd_write_tree, RUN_SETUP },
 };
 
-int is_builtin(const char *s)
+static struct cmd_struct *get_builtin(const char *s)
 {
 	int i;
 	for (i = 0; i < ARRAY_SIZE(commands); i++) {
-		struct cmd_struct *p = commands+i;
+		struct cmd_struct *p = commands + i;
 		if (!strcmp(s, p->cmd))
-			return 1;
+			return p;
 	}
-	return 0;
+	return NULL;
+}
+
+int is_builtin(const char *s)
+{
+	return !!get_builtin(s);
 }
 
 static void handle_builtin(int argc, const char **argv)
 {
 	const char *cmd = argv[0];
 	int i;
 	static const char ext[] = STRIP_EXTENSION;
+	struct cmd_struct *builtin;
 
 	if (sizeof(ext) > 1) {
 		i = strlen(argv[0]) - strlen(ext);
 		if (i > 0 && !strcmp(argv[0] + i, ext)) {
 			char *argv0 = xstrdup(argv[0]);
 			argv[0] = cmd = argv0;
@@ -516,21 +519,18 @@
 	/* Turn "git cmd --help" into "git help cmd" */
 	if (argc > 1 && !strcmp(argv[1], "--help")) {
 		argv[1] = argv[0];
 		argv[0] = cmd = "help";
 	}
 
-	for (i = 0; i < ARRAY_SIZE(commands); i++) {
-		struct cmd_struct *p = commands+i;
-		if (strcmp(p->cmd, cmd))
-			continue;
-		if (saved_environment && (p->option & NO_SETUP)) {
+	builtin = get_builtin(cmd);
+	if (builtin) {
+		if (saved_environment && (builtin->option & NO_SETUP))
 			restore_env();
-			break;
-		}
-		exit(run_builtin(p, argc, argv));
+		else
+			exit(run_builtin(builtin, argc, argv));
 	}
 }
 
 static void execv_dashed_external(const char **argv)
 {
 	struct strbuf cmd = STRBUF_INIT;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-cat-file and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-cat-file differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/GIT-CFLAGS /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/GIT-CFLAGS
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/GIT-CFLAGS	2017-10-10 12:20:23.846657009 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/GIT-CFLAGS	2017-10-10 12:23:59.470649106 +0800
@@ -1 +1 @@
-gcc: -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DSHA1_HEADER='"block-sha1/sha1.h"'  -DNO_STRLCPY -DSHELL_PATH='"/bin/sh"':
+gcc: -g -O2 -I. -DHAVE_ALLOCA_H -DNO_CURL -DNO_OPENSSL -pthread -DHAVE_PATHS_H -DHAVE_STRINGS_H -DHAVE_DEV_TTY -DXDL_FAST_HASH -DHAVE_CLOCK_GETTIME -DHAVE_CLOCK_MONOTONIC -DSHA1_HEADER='"block-sha1/sha1.h"'  -DNO_STRLCPY -DSHELL_PATH='"/bin/sh"':
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-check-attr and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-check-attr differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-check-ignore and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-check-ignore differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-check-mailmap and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-check-mailmap differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-checkout and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-checkout differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-checkout-index and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-checkout-index differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-check-ref-format and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-check-ref-format differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-cherry and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-cherry differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-cherry-pick and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-cherry-pick differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-clean and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-clean differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-clone and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-clone differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-column and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-column differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-commit and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-commit differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-commit-tree and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-commit-tree differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-compat-util.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-compat-util.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-compat-util.h	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-compat-util.h	2015-02-06 05:40:08.000000000 +0800
@@ -72,13 +72,14 @@
 # define _XOPEN_SOURCE 600
 # else
 # define _XOPEN_SOURCE 500
 # endif
 #elif !defined(__APPLE__) && !defined(__FreeBSD__) && !defined(__USLC__) && \
       !defined(_M_UNIX) && !defined(__sgi) && !defined(__DragonFly__) && \
-      !defined(__TANDEM) && !defined(__QNX__) && !defined(__MirBSD__)
+      !defined(__TANDEM) && !defined(__QNX__) && !defined(__MirBSD__) && \
+      !defined(__CYGWIN__)
 #define _XOPEN_SOURCE 600 /* glibc2 and AIX 5.3L need 500, OpenBSD needs 600 for S_ISLNK() */
 #define _XOPEN_SOURCE_EXTENDED 1 /* AIX 5.3L needs this */
 #endif
 #define _ALL_SOURCE 1
 #define _GNU_SOURCE 1
 #define _BSD_SOURCE 1
@@ -208,14 +209,21 @@
 
 #ifndef NO_ICONV
 #include <iconv.h>
 #endif
 
 #ifndef NO_OPENSSL
+#define __AVAILABILITY_MACROS_USES_AVAILABILITY 0
+#define MAC_OS_X_VERSION_MIN_REQUIRED MAC_OS_X_VERSION_10_6
 #include <openssl/ssl.h>
 #include <openssl/err.h>
+#undef MAC_OS_X_VERSION_MIN_REQUIRED
+#undef __AVAILABILITY_MACROS_USES_AVAILABILITY
+#ifdef NO_HMAC_CTX_CLEANUP
+#define HMAC_CTX_cleanup HMAC_cleanup
+#endif
 #endif
 
 /* On most systems <netdb.h> would have given us this, but
  * not on some systems (e.g. z/OS).
  */
 #ifndef NI_MAXHOST
@@ -471,12 +479,46 @@
 #ifdef NO_ST_BLOCKS_IN_STRUCT_STAT
 #define on_disk_bytes(st) ((st).st_size)
 #else
 #define on_disk_bytes(st) ((st).st_blocks * 512)
 #endif
 
+#ifdef NEEDS_MODE_TRANSLATION
+#undef S_IFMT
+#undef S_IFREG
+#undef S_IFDIR
+#undef S_IFLNK
+#undef S_IFBLK
+#undef S_IFCHR
+#undef S_IFIFO
+#undef S_IFSOCK
+#define S_IFMT   0170000
+#define S_IFREG  0100000
+#define S_IFDIR  0040000
+#define S_IFLNK  0120000
+#define S_IFBLK  0060000
+#define S_IFCHR  0020000
+#define S_IFIFO  0010000
+#define S_IFSOCK 0140000
+#ifdef stat
+#undef stat
+#endif
+#define stat(path, buf) git_stat(path, buf)
+extern int git_stat(const char *, struct stat *);
+#ifdef fstat
+#undef fstat
+#endif
+#define fstat(fd, buf) git_fstat(fd, buf)
+extern int git_fstat(int, struct stat *);
+#ifdef lstat
+#undef lstat
+#endif
+#define lstat(path, buf) git_lstat(path, buf)
+extern int git_lstat(const char *, struct stat *);
+#endif
+
 #define DEFAULT_PACKED_GIT_LIMIT \
 	((1024L * 1024L) * (sizeof(void*) >= 8 ? 8192 : 256))
 
 #ifdef NO_PREAD
 #define pread git_pread
 extern ssize_t git_pread(int fd, void *buf, size_t count, off_t offset);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-config and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-config differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-count-objects and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-count-objects differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-credential and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-credential differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-credential-cache and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-credential-cache differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-credential-cache--daemon and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-credential-cache--daemon differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-credential-store and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-credential-store differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-cvsserver /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-cvsserver
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-cvsserver	2017-10-10 12:20:53.386655926 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-cvsserver	2017-10-10 12:24:29.134648019 +0800
@@ -24,13 +24,13 @@
 use Fcntl;
 use File::Temp qw/tempdir tempfile/;
 use File::Path qw/rmtree/;
 use File::Basename;
 use Getopt::Long qw(:config require_order no_ignore_case);
 
-my $VERSION = '2.2.3';
+my $VERSION = '2.3.0';
 
 my $log = GITCVS::log->new();
 my $cfg;
 
 my $DATE_LIST = {
     Jan => "01",
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-daemon and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-daemon differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-describe and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-describe differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-diff and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-diff differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-diff-files and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-diff-files differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-diff-index and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-diff-index differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-difftool--helper /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-difftool--helper
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-difftool--helper	2017-10-10 12:20:53.186655933 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-difftool--helper	2017-10-10 12:24:28.914648027 +0800
@@ -91,6 +91,8 @@
 		then
 			exit $status
 		fi
 		shift 7
 	done
 fi
+
+exit 0
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-difftool--helper.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-difftool--helper.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-difftool--helper.sh	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-difftool--helper.sh	2015-02-06 05:40:08.000000000 +0800
@@ -91,6 +91,8 @@
 		then
 			exit $status
 		fi
 		shift 7
 	done
 fi
+
+exit 0
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-diff-tree and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-diff-tree differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-fast-export and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-fast-export differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-fast-import and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-fast-import differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-fetch and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-fetch differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-fetch-pack and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-fetch-pack differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-fmt-merge-msg and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-fmt-merge-msg differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-for-each-ref and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-for-each-ref differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-format-patch and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-format-patch differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-fsck and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-fsck differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-fsck-objects and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-fsck-objects differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-gc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-gc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-get-tar-commit-id and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-get-tar-commit-id differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-grep and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-grep differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-hash-object and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-hash-object differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-help and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-help differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-http-backend and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-http-backend differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-imap-send and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-imap-send differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-index-pack and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-index-pack differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-init and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-init differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-init-db and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-init-db differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-interpret-trailers and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-interpret-trailers differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-log and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-log differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-ls-files and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-ls-files differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-ls-remote and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-ls-remote differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-ls-tree and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-ls-tree differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-mailinfo and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-mailinfo differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-mailsplit and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-mailsplit differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-merge and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-merge differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-merge-base and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-merge-base differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-merge-file and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-merge-file differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-merge-index and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-merge-index differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-merge-ours and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-merge-ours differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-merge-recursive and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-merge-recursive differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-merge-subtree and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-merge-subtree differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-mergetool /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-mergetool
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-mergetool	2017-10-10 12:20:53.214655932 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-mergetool	2017-10-10 12:24:28.950648026 +0800
@@ -423,14 +423,12 @@
 		guessed_merge_tool=true
 	fi
 fi
 merge_keep_backup="$(git config --bool mergetool.keepBackup || echo true)"
 merge_keep_temporaries="$(git config --bool mergetool.keepTemporaries || echo false)"
 
-last_status=0
-rollup_status=0
 files=
 
 if test $# -eq 0
 then
 	cd_to_toplevel
 
@@ -452,22 +450,18 @@
 
 printf "Merging:\n"
 printf "%s\n" "$files"
 
 IFS='
 '
+rc=0
 for i in $files
 do
-	if test $last_status -ne 0
-	then
-		prompt_after_failed_merge || exit 1
-	fi
 	printf "\n"
-	merge_file "$i"
-	last_status=$?
-	if test $last_status -ne 0
+	if ! merge_file "$i"
 	then
-		rollup_status=1
+		rc=1
+		prompt_after_failed_merge || exit 1
 	fi
 done
 
-exit $rollup_status
+exit $rc
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-mergetool--lib /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-mergetool--lib
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-mergetool--lib	2017-10-10 12:20:53.490655922 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-mergetool--lib	2017-10-10 12:24:29.234648015 +0800
@@ -89,22 +89,22 @@
 	echo "$1"
 }
 
 check_unchanged () {
 	if test "$MERGED" -nt "$BACKUP"
 	then
-		status=0
+		return 0
 	else
 		while true
 		do
 			echo "$MERGED seems unchanged."
 			printf "Was the merge successful? [y/n] "
 			read answer || return 1
 			case "$answer" in
-			y*|Y*) status=0; break ;;
-			n*|N*) status=1; break ;;
+			y*|Y*) return 0 ;;
+			n*|N*) return 1 ;;
 			esac
 		done
 	fi
 }
 
 valid_tool () {
@@ -116,30 +116,25 @@
 setup_user_tool () {
 	merge_tool_cmd=$(get_merge_tool_cmd "$tool")
 	test -n "$merge_tool_cmd" || return 1
 
 	diff_cmd () {
 		( eval $merge_tool_cmd )
-		status=$?
-		return $status
 	}
 
 	merge_cmd () {
 		trust_exit_code=$(git config --bool \
 			"mergetool.$1.trustExitCode" || echo false)
 		if test "$trust_exit_code" = "false"
 		then
 			touch "$BACKUP"
 			( eval $merge_tool_cmd )
-			status=$?
 			check_unchanged
 		else
 			( eval $merge_tool_cmd )
-			status=$?
 		fi
-		return $status
 	}
 }
 
 setup_tool () {
 	tool="$1"
 
@@ -150,19 +145,17 @@
 
 	can_diff () {
 		return 0
 	}
 
 	diff_cmd () {
-		status=1
-		return $status
+		return 1
 	}
 
 	merge_cmd () {
-		status=1
-		return $status
+		return 1
 	}
 
 	translate_merge_tool_path () {
 		echo "$1"
 	}
 
@@ -207,25 +200,22 @@
 	# that expect to be able to chdir() to its value.
 	GIT_PREFIX=${GIT_PREFIX:-.}
 	export GIT_PREFIX
 
 	merge_tool_path=$(get_merge_tool_path "$1") || exit
 	base_present="$2"
-	status=0
 
 	# Bring tool-specific functions into scope
 	setup_tool "$1" || return 1
 
 	if merge_mode
 	then
 		run_merge_cmd "$1"
 	else
 		run_diff_cmd "$1"
 	fi
-	status=$?
-	return $status
 }
 
 # Run a either a configured or built-in diff tool
 run_diff_cmd () {
 	diff_cmd "$1"
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-mergetool--lib.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-mergetool--lib.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-mergetool--lib.sh	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-mergetool--lib.sh	2015-02-06 05:40:08.000000000 +0800
@@ -89,22 +89,22 @@
 	echo "$1"
 }
 
 check_unchanged () {
 	if test "$MERGED" -nt "$BACKUP"
 	then
-		status=0
+		return 0
 	else
 		while true
 		do
 			echo "$MERGED seems unchanged."
 			printf "Was the merge successful? [y/n] "
 			read answer || return 1
 			case "$answer" in
-			y*|Y*) status=0; break ;;
-			n*|N*) status=1; break ;;
+			y*|Y*) return 0 ;;
+			n*|N*) return 1 ;;
 			esac
 		done
 	fi
 }
 
 valid_tool () {
@@ -116,30 +116,25 @@
 setup_user_tool () {
 	merge_tool_cmd=$(get_merge_tool_cmd "$tool")
 	test -n "$merge_tool_cmd" || return 1
 
 	diff_cmd () {
 		( eval $merge_tool_cmd )
-		status=$?
-		return $status
 	}
 
 	merge_cmd () {
 		trust_exit_code=$(git config --bool \
 			"mergetool.$1.trustExitCode" || echo false)
 		if test "$trust_exit_code" = "false"
 		then
 			touch "$BACKUP"
 			( eval $merge_tool_cmd )
-			status=$?
 			check_unchanged
 		else
 			( eval $merge_tool_cmd )
-			status=$?
 		fi
-		return $status
 	}
 }
 
 setup_tool () {
 	tool="$1"
 
@@ -150,19 +145,17 @@
 
 	can_diff () {
 		return 0
 	}
 
 	diff_cmd () {
-		status=1
-		return $status
+		return 1
 	}
 
 	merge_cmd () {
-		status=1
-		return $status
+		return 1
 	}
 
 	translate_merge_tool_path () {
 		echo "$1"
 	}
 
@@ -207,25 +200,22 @@
 	# that expect to be able to chdir() to its value.
 	GIT_PREFIX=${GIT_PREFIX:-.}
 	export GIT_PREFIX
 
 	merge_tool_path=$(get_merge_tool_path "$1") || exit
 	base_present="$2"
-	status=0
 
 	# Bring tool-specific functions into scope
 	setup_tool "$1" || return 1
 
 	if merge_mode
 	then
 		run_merge_cmd "$1"
 	else
 		run_diff_cmd "$1"
 	fi
-	status=$?
-	return $status
 }
 
 # Run a either a configured or built-in diff tool
 run_diff_cmd () {
 	diff_cmd "$1"
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-mergetool.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-mergetool.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-mergetool.sh	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-mergetool.sh	2015-02-06 05:40:08.000000000 +0800
@@ -423,14 +423,12 @@
 		guessed_merge_tool=true
 	fi
 fi
 merge_keep_backup="$(git config --bool mergetool.keepBackup || echo true)"
 merge_keep_temporaries="$(git config --bool mergetool.keepTemporaries || echo false)"
 
-last_status=0
-rollup_status=0
 files=
 
 if test $# -eq 0
 then
 	cd_to_toplevel
 
@@ -452,22 +450,18 @@
 
 printf "Merging:\n"
 printf "%s\n" "$files"
 
 IFS='
 '
+rc=0
 for i in $files
 do
-	if test $last_status -ne 0
-	then
-		prompt_after_failed_merge || exit 1
-	fi
 	printf "\n"
-	merge_file "$i"
-	last_status=$?
-	if test $last_status -ne 0
+	if ! merge_file "$i"
 	then
-		rollup_status=1
+		rc=1
+		prompt_after_failed_merge || exit 1
 	fi
 done
 
-exit $rollup_status
+exit $rc
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-merge-tree and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-merge-tree differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-mktag and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-mktag differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-mktree and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-mktree differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-mv and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-mv differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-name-rev and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-name-rev differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-notes and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-notes differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-pack-objects and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-pack-objects differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-pack-redundant and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-pack-redundant differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-pack-refs and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-pack-refs differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-patch-id and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-patch-id differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-prune and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-prune differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-prune-packed and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-prune-packed differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-push and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-push differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-read-tree and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-read-tree differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-rebase--interactive /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-rebase--interactive
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-rebase--interactive	2017-10-10 12:20:53.506655922 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-rebase--interactive	2017-10-10 12:24:29.246648015 +0800
@@ -1028,15 +1028,17 @@
 fi
 
 test -s "$todo" || echo noop >> "$todo"
 test -n "$autosquash" && rearrange_squash "$todo"
 test -n "$cmd" && add_exec_commands "$todo"
 
+todocount=$(git stripspace --strip-comments <"$todo" | wc -l)
+
 cat >>"$todo" <<EOF
 
-$comment_char Rebase $shortrevisions onto $shortonto
+$comment_char Rebase $shortrevisions onto $shortonto ($todocount TODO item(s))
 EOF
 append_todo_help
 git stripspace --comment-lines >>"$todo" <<\EOF
 
 However, if you remove everything, the rebase will be aborted.
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-rebase--interactive.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-rebase--interactive.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-rebase--interactive.sh	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-rebase--interactive.sh	2015-02-06 05:40:08.000000000 +0800
@@ -1028,15 +1028,17 @@
 fi
 
 test -s "$todo" || echo noop >> "$todo"
 test -n "$autosquash" && rearrange_squash "$todo"
 test -n "$cmd" && add_exec_commands "$todo"
 
+todocount=$(git stripspace --strip-comments <"$todo" | wc -l)
+
 cat >>"$todo" <<EOF
 
-$comment_char Rebase $shortrevisions onto $shortonto
+$comment_char Rebase $shortrevisions onto $shortonto ($todocount TODO item(s))
 EOF
 append_todo_help
 git stripspace --comment-lines >>"$todo" <<\EOF
 
 However, if you remove everything, the rebase will be aborted.
 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-receive-pack and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-receive-pack differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-reflog and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-reflog differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-remote and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-remote differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-remote-ext and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-remote-ext differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-remote-fd and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-remote-fd differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-remote-testsvn and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-remote-testsvn differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-repack and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-repack differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-replace and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-replace differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-rerere and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-rerere differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-reset and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-reset differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-revert and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-revert differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-rev-list and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-rev-list differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-rev-parse and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-rev-parse differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-rm and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-rm differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/GIT-SCRIPT-DEFINES /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/GIT-SCRIPT-DEFINES
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/GIT-SCRIPT-DEFINES	2017-10-10 12:20:53.174655934 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/GIT-SCRIPT-DEFINES	2017-10-10 12:24:28.906648027 +0800
@@ -1 +1 @@
-/bin/sh:diff:2.2.3: /usr/local/share/locale:YesPlease::: /usr/local/share/gitweb:/usr/bin/perl
+/bin/sh:diff:2.3.0: /usr/local/share/locale:YesPlease::: /usr/local/share/gitweb:/usr/bin/perl
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-send-email /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-send-email
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-send-email	2017-10-10 12:20:53.398655926 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-send-email	2017-10-10 12:24:29.146648019 +0800
@@ -52,16 +52,18 @@
     --from                  <str>  * Email From:
     --[no-]to               <str>  * Email To:
     --[no-]cc               <str>  * Email Cc:
     --[no-]bcc              <str>  * Email Bcc:
     --subject               <str>  * Email "Subject:"
     --in-reply-to           <str>  * Email "In-Reply-To:"
+    --[no-]xmailer                 * Add "X-Mailer:" header (default).
     --[no-]annotate                * Review each patch that will be sent in an editor.
     --compose                      * Open an editor for introduction.
     --compose-encoding      <str>  * Encoding to assume for introduction.
     --8bit-encoding         <str>  * Encoding to assume 8bit mails if undeclared
+    --transfer-encoding     <str>  * Transfer encoding to use (quoted-printable, 8bit, base64)
 
   Sending:
     --envelope-sender       <str>  * Email envelope sender.
     --smtp-server       <str:int>  * Outgoing SMTP server to use. The port
                                      is optional. Default 'localhost'.
     --smtp-server-option    <str>  * Outgoing SMTP server option to use.
@@ -143,16 +145,21 @@
 
 my $have_email_valid = eval { require Email::Valid; 1 };
 my $have_mail_address = eval { require Mail::Address; 1 };
 my $smtp;
 my $auth;
 
+# Regexes for RFC 2047 productions.
+my $re_token = qr/[^][()<>@,;:\\"\/?.= \000-\037\177-\377]+/;
+my $re_encoded_text = qr/[^? \000-\037\177-\377]+/;
+my $re_encoded_word = qr/=\?($re_token)\?($re_token)\?($re_encoded_text)\?=/;
+
 # Variables we fill in automatically, or via prompting:
 my (@to,$no_to,@initial_to,@cc,$no_cc,@initial_cc,@bcclist,$no_bcc,@xh,
 	$initial_reply_to,$initial_subject,@files,
-	$author,$sender,$smtp_authpass,$annotate,$compose,$time);
+	$author,$sender,$smtp_authpass,$annotate,$use_xmailer,$compose,$time);
 
 my $envelope_sender;
 
 # Example reply to:
 #$initial_reply_to = ''; #<20050203173208.GA23964@foobar.com>';
 
@@ -204,12 +211,13 @@
 my ($smtp_authuser, $smtp_encryption, $smtp_ssl_cert_path);
 my ($identity, $aliasfiletype, @alias_files, $smtp_domain);
 my ($validate, $confirm);
 my (@suppress_cc);
 my ($auto_8bit_encoding);
 my ($compose_encoding);
+my ($target_xfer_encoding);
 
 my ($debug_net_smtp) = 0;		# Net::SMTP, see send_message()
 
 my %config_bool_settings = (
     "thread" => [\$thread, 1],
     "chainreplyto" => [\$chain_reply_to, 0],
@@ -217,13 +225,14 @@
     "signedoffbycc" => [\$signed_off_by_cc, undef],
     "cccover" => [\$cover_cc, undef],
     "tocover" => [\$cover_to, undef],
     "signedoffcc" => [\$signed_off_by_cc, undef],      # Deprecated
     "validate" => [\$validate, 1],
     "multiedit" => [\$multiedit, undef],
-    "annotate" => [\$annotate, undef]
+    "annotate" => [\$annotate, undef],
+    "xmailer" => [\$use_xmailer, 1]
 );
 
 my %config_settings = (
     "smtpserver" => \$smtp_server,
     "smtpserverport" => \$smtp_server_port,
     "smtpserveroption" => \@smtp_server_options,
@@ -240,12 +249,13 @@
     "suppresscc" => \@suppress_cc,
     "envelopesender" => \$envelope_sender,
     "confirm"   => \$confirm,
     "from" => \$sender,
     "assume8bitencoding" => \$auto_8bit_encoding,
     "composeencoding" => \$compose_encoding,
+    "transferencoding" => \$target_xfer_encoding,
 );
 
 my %config_path_settings = (
     "aliasesfile" => \@alias_files,
 );
 
@@ -312,16 +322,18 @@
 		    "to-cover|to-cover!" => \$cover_to,
 		    "confirm=s" => \$confirm,
 		    "dry-run" => \$dry_run,
 		    "envelope-sender=s" => \$envelope_sender,
 		    "thread!" => \$thread,
 		    "validate!" => \$validate,
+		    "transfer-encoding=s" => \$target_xfer_encoding,
 		    "format-patch!" => \$format_patch,
 		    "8bit-encoding=s" => \$auto_8bit_encoding,
 		    "compose-encoding=s" => \$compose_encoding,
 		    "force" => \$force,
+		    "xmailer!" => \$use_xmailer,
 	 );
 
 usage() if $help;
 unless ($rc) {
     usage();
 }
@@ -911,37 +923,46 @@
 
 
 $time = time - scalar $#files;
 
 sub unquote_rfc2047 {
 	local ($_) = @_;
-	my $encoding;
-	s{=\?([^?]+)\?q\?(.*?)\?=}{
-		$encoding = $1;
-		my $e = $2;
-		$e =~ s/_/ /g;
-		$e =~ s/=([0-9A-F]{2})/chr(hex($1))/eg;
-		$e;
+	my $charset;
+	my $sep = qr/[ \t]+/;
+	s{$re_encoded_word(?:$sep$re_encoded_word)*}{
+		my @words = split $sep, $&;
+		foreach (@words) {
+			m/$re_encoded_word/;
+			$charset = $1;
+			my $encoding = $2;
+			my $text = $3;
+			if ($encoding eq 'q' || $encoding eq 'Q') {
+				$_ = $text;
+				s/_/ /g;
+				s/=([0-9A-F]{2})/chr(hex($1))/egi;
+			} else {
+				# other encodings not supported yet
+			}
+		}
+		join '', @words;
 	}eg;
-	return wantarray ? ($_, $encoding) : $_;
+	return wantarray ? ($_, $charset) : $_;
 }
 
 sub quote_rfc2047 {
 	local $_ = shift;
 	my $encoding = shift || 'UTF-8';
 	s/([^-a-zA-Z0-9!*+\/])/sprintf("=%02X", ord($1))/eg;
 	s/(.*)/=\?$encoding\?q\?$1\?=/;
 	return $_;
 }
 
 sub is_rfc2047_quoted {
 	my $s = shift;
-	my $token = qr/[^][()<>@,;:"\/?.= \000-\037\177-\377]+/;
-	my $encoded_text = qr/[!->@-~]+/;
 	length($s) <= 75 &&
-	$s =~ m/^(?:"[[:ascii:]]*"|=\?$token\?$token\?$encoded_text\?=)$/o;
+	$s =~ m/^(?:"[[:ascii:]]*"|$re_encoded_word)$/o;
 }
 
 sub subject_needs_rfc2047_quoting {
 	my $s = shift;
 
 	return ($s =~ /[^[:ascii:]]/) || ($s =~ /=\?/);
@@ -1144,13 +1165,13 @@
 		    }
 	       @cc);
 	my $to = join (",\n\t", @recipients);
 	@recipients = unique_email_list(@recipients,@cc,@bcclist);
 	@recipients = (map { extract_valid_address_or_die($_) } @recipients);
 	my $date = format_2822_time($time++);
-	my $gitversion = '2.2.3';
+	my $gitversion = '2.3.0';
 	if ($gitversion =~ m/..GIT_VERSION../) {
 	    $gitversion = Git::version();
 	}
 
 	my $cc = join(",\n\t", unique_email_list(@cc));
 	my $ccline = "";
@@ -1161,14 +1182,16 @@
 
 	my $header = "From: $sender
 To: $to${ccline}
 Subject: $subject
 Date: $date
 Message-Id: $message_id
-X-Mailer: git-send-email $gitversion
 ";
+	if ($use_xmailer) {
+		$header .= "X-Mailer: git-send-email $gitversion\n";
+	}
 	if ($reply_to) {
 
 		$header .= "In-Reply-To: $reply_to\n";
 		$header .= "References: $references\n";
 	}
 	if (@xh) {
@@ -1322,12 +1345,14 @@
 
 	my $author = undef;
 	my $sauthor = undef;
 	my $author_encoding;
 	my $has_content_type;
 	my $body_encoding;
+	my $xfer_encoding;
+	my $has_mime_version;
 	@to = ();
 	@cc = ();
 	@xh = ();
 	my $input_format = undef;
 	my @header = ();
 	$message = "";
@@ -1392,15 +1417,22 @@
 				$has_content_type = 1;
 				if (/charset="?([^ "]+)/) {
 					$body_encoding = $1;
 				}
 				push @xh, $_;
 			}
+			elsif (/^MIME-Version/i) {
+				$has_mime_version = 1;
+				push @xh, $_;
+			}
 			elsif (/^Message-Id: (.*)/i) {
 				$message_id = $1;
 			}
+			elsif (/^Content-Transfer-Encoding: (.*)/i) {
+				$xfer_encoding = $1 if not defined $xfer_encoding;
+			}
 			elsif (!/^Date:\s/i && /^[-A-Za-z]+:\s+\S/) {
 				push @xh, $_;
 			}
 
 		} else {
 			# In the traditional
@@ -1442,16 +1474,15 @@
 	push @to, recipients_cmd("to-cmd", "to", $to_cmd, $t)
 		if defined $to_cmd;
 	push @cc, recipients_cmd("cc-cmd", "cc", $cc_cmd, $t)
 		if defined $cc_cmd && !$suppress_cc{'cccmd'};
 
 	if ($broken_encoding{$t} && !$has_content_type) {
+		$xfer_encoding = '8bit' if not defined $xfer_encoding;
 		$has_content_type = 1;
-		push @xh, "MIME-Version: 1.0",
-			"Content-Type: text/plain; charset=$auto_8bit_encoding",
-			"Content-Transfer-Encoding: 8bit";
+		push @xh, "Content-Type: text/plain; charset=$auto_8bit_encoding";
 		$body_encoding = $auto_8bit_encoding;
 	}
 
 	if ($broken_encoding{$t} && !is_rfc2047_quoted($subject)) {
 		$subject = quote_subject($subject, $auto_8bit_encoding);
 	}
@@ -1465,20 +1496,31 @@
 				}
 				else {
 					# uh oh, we should re-encode
 				}
 			}
 			else {
+				$xfer_encoding = '8bit' if not defined $xfer_encoding;
 				$has_content_type = 1;
 				push @xh,
-				  'MIME-Version: 1.0',
-				  "Content-Type: text/plain; charset=$author_encoding",
-				  'Content-Transfer-Encoding: 8bit';
+				  "Content-Type: text/plain; charset=$author_encoding";
 			}
 		}
 	}
+	if (defined $target_xfer_encoding) {
+		$xfer_encoding = '8bit' if not defined $xfer_encoding;
+		$message = apply_transfer_encoding(
+			$message, $xfer_encoding, $target_xfer_encoding);
+		$xfer_encoding = $target_xfer_encoding;
+	}
+	if (defined $xfer_encoding) {
+		push @xh, "Content-Transfer-Encoding: $xfer_encoding";
+	}
+	if (defined $xfer_encoding or $has_content_type) {
+		unshift @xh, 'MIME-Version: 1.0' unless $has_mime_version;
+	}
 
 	$needs_confirm = (
 		$confirm eq "always" or
 		($confirm =~ /^(?:auto|cc)$/ && @cc) or
 		($confirm =~ /^(?:auto|compose)$/ && $compose && $message_num == 1));
 	$needs_confirm = "inform" if ($needs_confirm && $confirm_unconfigured && @cc);
@@ -1541,12 +1583,38 @@
 sub cleanup_compose_files {
 	unlink($compose_filename, $compose_filename . ".final") if $compose;
 }
 
 $smtp->quit if $smtp;
 
+sub apply_transfer_encoding {
+	my $message = shift;
+	my $from = shift;
+	my $to = shift;
+
+	return $message if ($from eq $to and $from ne '7bit');
+
+	require MIME::QuotedPrint;
+	require MIME::Base64;
+
+	$message = MIME::QuotedPrint::decode($message)
+		if ($from eq 'quoted-printable');
+	$message = MIME::Base64::decode($message)
+		if ($from eq 'base64');
+
+	die "cannot send message as 7bit"
+		if ($to eq '7bit' and $message =~ /[^[:ascii:]]/);
+	return $message
+		if ($to eq '7bit' or $to eq '8bit');
+	return MIME::QuotedPrint::encode($message, "\n", 0)
+		if ($to eq 'quoted-printable');
+	return MIME::Base64::encode($message, "\n")
+		if ($to eq 'base64');
+	die "invalid transfer encoding";
+}
+
 sub unique_email_list {
 	my %seen;
 	my @emails;
 
 	foreach my $entry (@_) {
 		my $clean = extract_valid_address_or_die($entry);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-send-email.perl /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-send-email.perl
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-send-email.perl	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-send-email.perl	2015-02-06 05:40:08.000000000 +0800
@@ -51,16 +51,18 @@
     --from                  <str>  * Email From:
     --[no-]to               <str>  * Email To:
     --[no-]cc               <str>  * Email Cc:
     --[no-]bcc              <str>  * Email Bcc:
     --subject               <str>  * Email "Subject:"
     --in-reply-to           <str>  * Email "In-Reply-To:"
+    --[no-]xmailer                 * Add "X-Mailer:" header (default).
     --[no-]annotate                * Review each patch that will be sent in an editor.
     --compose                      * Open an editor for introduction.
     --compose-encoding      <str>  * Encoding to assume for introduction.
     --8bit-encoding         <str>  * Encoding to assume 8bit mails if undeclared
+    --transfer-encoding     <str>  * Transfer encoding to use (quoted-printable, 8bit, base64)
 
   Sending:
     --envelope-sender       <str>  * Email envelope sender.
     --smtp-server       <str:int>  * Outgoing SMTP server to use. The port
                                      is optional. Default 'localhost'.
     --smtp-server-option    <str>  * Outgoing SMTP server option to use.
@@ -142,16 +144,21 @@
 
 my $have_email_valid = eval { require Email::Valid; 1 };
 my $have_mail_address = eval { require Mail::Address; 1 };
 my $smtp;
 my $auth;
 
+# Regexes for RFC 2047 productions.
+my $re_token = qr/[^][()<>@,;:\\"\/?.= \000-\037\177-\377]+/;
+my $re_encoded_text = qr/[^? \000-\037\177-\377]+/;
+my $re_encoded_word = qr/=\?($re_token)\?($re_token)\?($re_encoded_text)\?=/;
+
 # Variables we fill in automatically, or via prompting:
 my (@to,$no_to,@initial_to,@cc,$no_cc,@initial_cc,@bcclist,$no_bcc,@xh,
 	$initial_reply_to,$initial_subject,@files,
-	$author,$sender,$smtp_authpass,$annotate,$compose,$time);
+	$author,$sender,$smtp_authpass,$annotate,$use_xmailer,$compose,$time);
 
 my $envelope_sender;
 
 # Example reply to:
 #$initial_reply_to = ''; #<20050203173208.GA23964@foobar.com>';
 
@@ -203,12 +210,13 @@
 my ($smtp_authuser, $smtp_encryption, $smtp_ssl_cert_path);
 my ($identity, $aliasfiletype, @alias_files, $smtp_domain);
 my ($validate, $confirm);
 my (@suppress_cc);
 my ($auto_8bit_encoding);
 my ($compose_encoding);
+my ($target_xfer_encoding);
 
 my ($debug_net_smtp) = 0;		# Net::SMTP, see send_message()
 
 my %config_bool_settings = (
     "thread" => [\$thread, 1],
     "chainreplyto" => [\$chain_reply_to, 0],
@@ -216,13 +224,14 @@
     "signedoffbycc" => [\$signed_off_by_cc, undef],
     "cccover" => [\$cover_cc, undef],
     "tocover" => [\$cover_to, undef],
     "signedoffcc" => [\$signed_off_by_cc, undef],      # Deprecated
     "validate" => [\$validate, 1],
     "multiedit" => [\$multiedit, undef],
-    "annotate" => [\$annotate, undef]
+    "annotate" => [\$annotate, undef],
+    "xmailer" => [\$use_xmailer, 1]
 );
 
 my %config_settings = (
     "smtpserver" => \$smtp_server,
     "smtpserverport" => \$smtp_server_port,
     "smtpserveroption" => \@smtp_server_options,
@@ -239,12 +248,13 @@
     "suppresscc" => \@suppress_cc,
     "envelopesender" => \$envelope_sender,
     "confirm"   => \$confirm,
     "from" => \$sender,
     "assume8bitencoding" => \$auto_8bit_encoding,
     "composeencoding" => \$compose_encoding,
+    "transferencoding" => \$target_xfer_encoding,
 );
 
 my %config_path_settings = (
     "aliasesfile" => \@alias_files,
 );
 
@@ -311,16 +321,18 @@
 		    "to-cover|to-cover!" => \$cover_to,
 		    "confirm=s" => \$confirm,
 		    "dry-run" => \$dry_run,
 		    "envelope-sender=s" => \$envelope_sender,
 		    "thread!" => \$thread,
 		    "validate!" => \$validate,
+		    "transfer-encoding=s" => \$target_xfer_encoding,
 		    "format-patch!" => \$format_patch,
 		    "8bit-encoding=s" => \$auto_8bit_encoding,
 		    "compose-encoding=s" => \$compose_encoding,
 		    "force" => \$force,
+		    "xmailer!" => \$use_xmailer,
 	 );
 
 usage() if $help;
 unless ($rc) {
     usage();
 }
@@ -910,37 +922,46 @@
 
 
 $time = time - scalar $#files;
 
 sub unquote_rfc2047 {
 	local ($_) = @_;
-	my $encoding;
-	s{=\?([^?]+)\?q\?(.*?)\?=}{
-		$encoding = $1;
-		my $e = $2;
-		$e =~ s/_/ /g;
-		$e =~ s/=([0-9A-F]{2})/chr(hex($1))/eg;
-		$e;
+	my $charset;
+	my $sep = qr/[ \t]+/;
+	s{$re_encoded_word(?:$sep$re_encoded_word)*}{
+		my @words = split $sep, $&;
+		foreach (@words) {
+			m/$re_encoded_word/;
+			$charset = $1;
+			my $encoding = $2;
+			my $text = $3;
+			if ($encoding eq 'q' || $encoding eq 'Q') {
+				$_ = $text;
+				s/_/ /g;
+				s/=([0-9A-F]{2})/chr(hex($1))/egi;
+			} else {
+				# other encodings not supported yet
+			}
+		}
+		join '', @words;
 	}eg;
-	return wantarray ? ($_, $encoding) : $_;
+	return wantarray ? ($_, $charset) : $_;
 }
 
 sub quote_rfc2047 {
 	local $_ = shift;
 	my $encoding = shift || 'UTF-8';
 	s/([^-a-zA-Z0-9!*+\/])/sprintf("=%02X", ord($1))/eg;
 	s/(.*)/=\?$encoding\?q\?$1\?=/;
 	return $_;
 }
 
 sub is_rfc2047_quoted {
 	my $s = shift;
-	my $token = qr/[^][()<>@,;:"\/?.= \000-\037\177-\377]+/;
-	my $encoded_text = qr/[!->@-~]+/;
 	length($s) <= 75 &&
-	$s =~ m/^(?:"[[:ascii:]]*"|=\?$token\?$token\?$encoded_text\?=)$/o;
+	$s =~ m/^(?:"[[:ascii:]]*"|$re_encoded_word)$/o;
 }
 
 sub subject_needs_rfc2047_quoting {
 	my $s = shift;
 
 	return ($s =~ /[^[:ascii:]]/) || ($s =~ /=\?/);
@@ -1160,14 +1181,16 @@
 
 	my $header = "From: $sender
 To: $to${ccline}
 Subject: $subject
 Date: $date
 Message-Id: $message_id
-X-Mailer: git-send-email $gitversion
 ";
+	if ($use_xmailer) {
+		$header .= "X-Mailer: git-send-email $gitversion\n";
+	}
 	if ($reply_to) {
 
 		$header .= "In-Reply-To: $reply_to\n";
 		$header .= "References: $references\n";
 	}
 	if (@xh) {
@@ -1321,12 +1344,14 @@
 
 	my $author = undef;
 	my $sauthor = undef;
 	my $author_encoding;
 	my $has_content_type;
 	my $body_encoding;
+	my $xfer_encoding;
+	my $has_mime_version;
 	@to = ();
 	@cc = ();
 	@xh = ();
 	my $input_format = undef;
 	my @header = ();
 	$message = "";
@@ -1391,15 +1416,22 @@
 				$has_content_type = 1;
 				if (/charset="?([^ "]+)/) {
 					$body_encoding = $1;
 				}
 				push @xh, $_;
 			}
+			elsif (/^MIME-Version/i) {
+				$has_mime_version = 1;
+				push @xh, $_;
+			}
 			elsif (/^Message-Id: (.*)/i) {
 				$message_id = $1;
 			}
+			elsif (/^Content-Transfer-Encoding: (.*)/i) {
+				$xfer_encoding = $1 if not defined $xfer_encoding;
+			}
 			elsif (!/^Date:\s/i && /^[-A-Za-z]+:\s+\S/) {
 				push @xh, $_;
 			}
 
 		} else {
 			# In the traditional
@@ -1441,16 +1473,15 @@
 	push @to, recipients_cmd("to-cmd", "to", $to_cmd, $t)
 		if defined $to_cmd;
 	push @cc, recipients_cmd("cc-cmd", "cc", $cc_cmd, $t)
 		if defined $cc_cmd && !$suppress_cc{'cccmd'};
 
 	if ($broken_encoding{$t} && !$has_content_type) {
+		$xfer_encoding = '8bit' if not defined $xfer_encoding;
 		$has_content_type = 1;
-		push @xh, "MIME-Version: 1.0",
-			"Content-Type: text/plain; charset=$auto_8bit_encoding",
-			"Content-Transfer-Encoding: 8bit";
+		push @xh, "Content-Type: text/plain; charset=$auto_8bit_encoding";
 		$body_encoding = $auto_8bit_encoding;
 	}
 
 	if ($broken_encoding{$t} && !is_rfc2047_quoted($subject)) {
 		$subject = quote_subject($subject, $auto_8bit_encoding);
 	}
@@ -1464,20 +1495,31 @@
 				}
 				else {
 					# uh oh, we should re-encode
 				}
 			}
 			else {
+				$xfer_encoding = '8bit' if not defined $xfer_encoding;
 				$has_content_type = 1;
 				push @xh,
-				  'MIME-Version: 1.0',
-				  "Content-Type: text/plain; charset=$author_encoding",
-				  'Content-Transfer-Encoding: 8bit';
+				  "Content-Type: text/plain; charset=$author_encoding";
 			}
 		}
 	}
+	if (defined $target_xfer_encoding) {
+		$xfer_encoding = '8bit' if not defined $xfer_encoding;
+		$message = apply_transfer_encoding(
+			$message, $xfer_encoding, $target_xfer_encoding);
+		$xfer_encoding = $target_xfer_encoding;
+	}
+	if (defined $xfer_encoding) {
+		push @xh, "Content-Transfer-Encoding: $xfer_encoding";
+	}
+	if (defined $xfer_encoding or $has_content_type) {
+		unshift @xh, 'MIME-Version: 1.0' unless $has_mime_version;
+	}
 
 	$needs_confirm = (
 		$confirm eq "always" or
 		($confirm =~ /^(?:auto|cc)$/ && @cc) or
 		($confirm =~ /^(?:auto|compose)$/ && $compose && $message_num == 1));
 	$needs_confirm = "inform" if ($needs_confirm && $confirm_unconfigured && @cc);
@@ -1540,12 +1582,38 @@
 sub cleanup_compose_files {
 	unlink($compose_filename, $compose_filename . ".final") if $compose;
 }
 
 $smtp->quit if $smtp;
 
+sub apply_transfer_encoding {
+	my $message = shift;
+	my $from = shift;
+	my $to = shift;
+
+	return $message if ($from eq $to and $from ne '7bit');
+
+	require MIME::QuotedPrint;
+	require MIME::Base64;
+
+	$message = MIME::QuotedPrint::decode($message)
+		if ($from eq 'quoted-printable');
+	$message = MIME::Base64::decode($message)
+		if ($from eq 'base64');
+
+	die "cannot send message as 7bit"
+		if ($to eq '7bit' and $message =~ /[^[:ascii:]]/);
+	return $message
+		if ($to eq '7bit' or $to eq '8bit');
+	return MIME::QuotedPrint::encode($message, "\n", 0)
+		if ($to eq 'quoted-printable');
+	return MIME::Base64::encode($message, "\n")
+		if ($to eq 'base64');
+	die "invalid transfer encoding";
+}
+
 sub unique_email_list {
 	my %seen;
 	my @emails;
 
 	foreach my $entry (@_) {
 		my $clean = extract_valid_address_or_die($entry);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-send-pack and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-send-pack differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-shell and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-shell differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-sh-i18n--envsubst and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-sh-i18n--envsubst differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-shortlog and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-shortlog differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-show and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-show differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-show-branch and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-show-branch differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-show-index and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-show-index differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-show-ref and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-show-ref differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-sh-setup /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-sh-setup
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-sh-setup	2017-10-10 12:20:53.510655922 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-sh-setup	2017-10-10 12:24:29.250648015 +0800
@@ -77,13 +77,13 @@
 	eval "$(
 		echo "$OPTIONS_SPEC" |
 			git rev-parse --parseopt $parseopt_extra -- "$@" ||
 		echo exit $?
 	)"
 else
-	dashless=$(basename "$0" | sed -e 's/-/ /')
+	dashless=$(basename -- "$0" | sed -e 's/-/ /')
 	usage() {
 		die "usage: $dashless $USAGE"
 	}
 
 	if [ -z "$LONG_USAGE" ]
 	then
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-sh-setup.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-sh-setup.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-sh-setup.sh	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-sh-setup.sh	2015-02-06 05:40:08.000000000 +0800
@@ -78,13 +78,13 @@
 	eval "$(
 		echo "$OPTIONS_SPEC" |
 			git rev-parse --parseopt $parseopt_extra -- "$@" ||
 		echo exit $?
 	)"
 else
-	dashless=$(basename "$0" | sed -e 's/-/ /')
+	dashless=$(basename -- "$0" | sed -e 's/-/ /')
 	usage() {
 		die "usage: $dashless $USAGE"
 	}
 
 	if [ -z "$LONG_USAGE" ]
 	then
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-stage and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-stage differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-status and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-status differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-stripspace and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-stripspace differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-svn /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-svn
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-svn	2017-10-10 12:20:53.406655925 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-svn	2017-10-10 12:24:29.150648018 +0800
@@ -6,13 +6,13 @@
 use warnings;
 use strict;
 use vars qw/	$AUTHOR $VERSION
 		$sha1 $sha1_short $_revision $_repository
 		$_q $_authors $_authors_prog %users/;
 $AUTHOR = 'Eric Wong <normalperson@yhbt.net>';
-$VERSION = '2.2.3';
+$VERSION = '2.3.0';
 
 use Carp qw/croak/;
 use Digest::MD5;
 use IO::File qw//;
 use File::Basename qw/dirname basename/;
 use File::Path qw/mkpath/;
@@ -113,13 +113,13 @@
 	$_message, $_file, $_branch_dest,
 	$_template, $_shared,
 	$_version, $_fetch_all, $_no_rebase, $_fetch_parent,
 	$_before, $_after,
 	$_merge, $_strategy, $_preserve_merges, $_dry_run, $_parents, $_local,
 	$_prefix, $_no_checkout, $_url, $_verbose,
-	$_commit_url, $_tag, $_merge_info, $_interactive);
+	$_commit_url, $_tag, $_merge_info, $_interactive, $_set_svn_props);
 
 # This is a refactoring artifact so Git::SVN can get at this git-svn switch.
 sub opt_prefix { return $_prefix || '' }
 
 $Git::SVN::Fetcher::_placeholder_filename = ".gitignore";
 $_q ||= 0;
@@ -191,12 +191,13 @@
 			{ 'merge|m|M' => \$_merge,
 			  'strategy|s=s' => \$_strategy,
 			  'verbose|v' => \$_verbose,
 			  'dry-run|n' => \$_dry_run,
 			  'fetch-all|all' => \$_fetch_all,
 			  'commit-url=s' => \$_commit_url,
+			  'set-svn-props=s' => \$_set_svn_props,
 			  'revision|r=i' => \$_revision,
 			  'no-rebase' => \$_no_rebase,
 			  'mergeinfo=s' => \$_merge_info,
 			  'interactive|i' => \$_interactive,
 			%cmt_opts, %fc_opts } ],
 	branch => [ \&cmd_branch,
@@ -226,12 +227,15 @@
 	'mkdirs' => [ \&cmd_mkdirs ,
 	              "recreate empty directories after a checkout",
 	              { 'revision|r=i' => \$_revision } ],
         'propget' => [ \&cmd_propget,
 		       'Print the value of a property on a file or directory',
 		       { 'revision|r=i' => \$_revision } ],
+        'propset' => [ \&cmd_propset,
+		       'Set the value of a property on a file or directory - will be set on commit',
+		       {} ],
         'proplist' => [ \&cmd_proplist,
 		       'List all properties of a file or directory',
 		       { 'revision|r=i' => \$_revision } ],
 	'show-ignore' => [ \&cmd_show_ignore, "Show svn:ignore listings",
 			{ 'revision|r=i' => \$_revision
 			} ],
@@ -331,12 +335,18 @@
 	}
 };
 
 # make sure we're always running at the top-level working directory
 if ($cmd && $cmd =~ /(?:clone|init|multi-init)$/) {
 	$ENV{GIT_DIR} ||= ".git";
+	# catch the submodule case
+	if (-f $ENV{GIT_DIR}) {
+		open(my $fh, '<', $ENV{GIT_DIR}) or
+			die "failed to open $ENV{GIT_DIR}: $!\n";
+		$ENV{GIT_DIR} = $1 if <$fh> =~ /^gitdir: (.+)$/;
+	}
 } else {
 	my ($git_dir, $cdup);
 	git_cmd_try {
 		$git_dir = command_oneline([qw/rev-parse --git-dir/]);
 	} "Unable to find .git directory\n";
 	git_cmd_try {
@@ -1374,12 +1384,55 @@
 	if (not defined $props->{$prop}) {
 		fatal("`$path' does not have a `$prop' SVN property.");
 	}
 	print $props->{$prop} . "\n";
 }
 
+# cmd_propset (PROPNAME, PROPVAL, PATH)
+# ------------------------
+# Adjust the SVN property PROPNAME to PROPVAL for PATH.
+sub cmd_propset {
+	my ($propname, $propval, $path) = @_;
+	$path = '.' if not defined $path;
+	$path = $cmd_dir_prefix . $path;
+	usage(1) if not defined $propname;
+	usage(1) if not defined $propval;
+	my $file = basename($path);
+	my $dn = dirname($path);
+	my $cur_props = Git::SVN::Editor::check_attr( "svn-properties", $path );
+	my @new_props;
+	if (!$cur_props || $cur_props eq "unset" || $cur_props eq "" || $cur_props eq "set") {
+		push @new_props, "$propname=$propval";
+	} else {
+		# TODO: handle combining properties better
+		my @props = split(/;/, $cur_props);
+		my $replaced_prop;
+		foreach my $prop (@props) {
+			# Parse 'name=value' syntax and set the property.
+			if ($prop =~ /([^=]+)=(.*)/) {
+				my ($n,$v) = ($1,$2);
+				if ($n eq $propname) {
+					$v = $propval;
+					$replaced_prop = 1;
+				}
+				push @new_props, "$n=$v";
+			}
+		}
+		if (!$replaced_prop) {
+			push @new_props, "$propname=$propval";
+		}
+	}
+	my $attrfile = "$dn/.gitattributes";
+	open my $attrfh, '>>', $attrfile or die "Can't open $attrfile: $!\n";
+	# TODO: don't simply append here if $file already has svn-properties
+	my $new_props = join(';', @new_props);
+	print $attrfh "$file svn-properties=$new_props\n" or
+		die "write to $attrfile: $!\n";
+	close $attrfh or die "close $attrfile: $!\n";
+}
+
 # cmd_proplist (PATH)
 # -------------------
 # Print the list of SVN properties for PATH.
 sub cmd_proplist {
 	my $path = shift;
 	$path = '.' if not defined $path;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-svn.perl /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-svn.perl
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-svn.perl	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-svn.perl	2015-02-06 05:40:08.000000000 +0800
@@ -112,13 +112,13 @@
 	$_message, $_file, $_branch_dest,
 	$_template, $_shared,
 	$_version, $_fetch_all, $_no_rebase, $_fetch_parent,
 	$_before, $_after,
 	$_merge, $_strategy, $_preserve_merges, $_dry_run, $_parents, $_local,
 	$_prefix, $_no_checkout, $_url, $_verbose,
-	$_commit_url, $_tag, $_merge_info, $_interactive);
+	$_commit_url, $_tag, $_merge_info, $_interactive, $_set_svn_props);
 
 # This is a refactoring artifact so Git::SVN can get at this git-svn switch.
 sub opt_prefix { return $_prefix || '' }
 
 $Git::SVN::Fetcher::_placeholder_filename = ".gitignore";
 $_q ||= 0;
@@ -190,12 +190,13 @@
 			{ 'merge|m|M' => \$_merge,
 			  'strategy|s=s' => \$_strategy,
 			  'verbose|v' => \$_verbose,
 			  'dry-run|n' => \$_dry_run,
 			  'fetch-all|all' => \$_fetch_all,
 			  'commit-url=s' => \$_commit_url,
+			  'set-svn-props=s' => \$_set_svn_props,
 			  'revision|r=i' => \$_revision,
 			  'no-rebase' => \$_no_rebase,
 			  'mergeinfo=s' => \$_merge_info,
 			  'interactive|i' => \$_interactive,
 			%cmt_opts, %fc_opts } ],
 	branch => [ \&cmd_branch,
@@ -225,12 +226,15 @@
 	'mkdirs' => [ \&cmd_mkdirs ,
 	              "recreate empty directories after a checkout",
 	              { 'revision|r=i' => \$_revision } ],
         'propget' => [ \&cmd_propget,
 		       'Print the value of a property on a file or directory',
 		       { 'revision|r=i' => \$_revision } ],
+        'propset' => [ \&cmd_propset,
+		       'Set the value of a property on a file or directory - will be set on commit',
+		       {} ],
         'proplist' => [ \&cmd_proplist,
 		       'List all properties of a file or directory',
 		       { 'revision|r=i' => \$_revision } ],
 	'show-ignore' => [ \&cmd_show_ignore, "Show svn:ignore listings",
 			{ 'revision|r=i' => \$_revision
 			} ],
@@ -330,12 +334,18 @@
 	}
 };
 
 # make sure we're always running at the top-level working directory
 if ($cmd && $cmd =~ /(?:clone|init|multi-init)$/) {
 	$ENV{GIT_DIR} ||= ".git";
+	# catch the submodule case
+	if (-f $ENV{GIT_DIR}) {
+		open(my $fh, '<', $ENV{GIT_DIR}) or
+			die "failed to open $ENV{GIT_DIR}: $!\n";
+		$ENV{GIT_DIR} = $1 if <$fh> =~ /^gitdir: (.+)$/;
+	}
 } else {
 	my ($git_dir, $cdup);
 	git_cmd_try {
 		$git_dir = command_oneline([qw/rev-parse --git-dir/]);
 	} "Unable to find .git directory\n";
 	git_cmd_try {
@@ -1373,12 +1383,55 @@
 	if (not defined $props->{$prop}) {
 		fatal("`$path' does not have a `$prop' SVN property.");
 	}
 	print $props->{$prop} . "\n";
 }
 
+# cmd_propset (PROPNAME, PROPVAL, PATH)
+# ------------------------
+# Adjust the SVN property PROPNAME to PROPVAL for PATH.
+sub cmd_propset {
+	my ($propname, $propval, $path) = @_;
+	$path = '.' if not defined $path;
+	$path = $cmd_dir_prefix . $path;
+	usage(1) if not defined $propname;
+	usage(1) if not defined $propval;
+	my $file = basename($path);
+	my $dn = dirname($path);
+	my $cur_props = Git::SVN::Editor::check_attr( "svn-properties", $path );
+	my @new_props;
+	if (!$cur_props || $cur_props eq "unset" || $cur_props eq "" || $cur_props eq "set") {
+		push @new_props, "$propname=$propval";
+	} else {
+		# TODO: handle combining properties better
+		my @props = split(/;/, $cur_props);
+		my $replaced_prop;
+		foreach my $prop (@props) {
+			# Parse 'name=value' syntax and set the property.
+			if ($prop =~ /([^=]+)=(.*)/) {
+				my ($n,$v) = ($1,$2);
+				if ($n eq $propname) {
+					$v = $propval;
+					$replaced_prop = 1;
+				}
+				push @new_props, "$n=$v";
+			}
+		}
+		if (!$replaced_prop) {
+			push @new_props, "$propname=$propval";
+		}
+	}
+	my $attrfile = "$dn/.gitattributes";
+	open my $attrfh, '>>', $attrfile or die "Can't open $attrfile: $!\n";
+	# TODO: don't simply append here if $file already has svn-properties
+	my $new_props = join(';', @new_props);
+	print $attrfh "$file svn-properties=$new_props\n" or
+		die "write to $attrfile: $!\n";
+	close $attrfh or die "close $attrfile: $!\n";
+}
+
 # cmd_proplist (PATH)
 # -------------------
 # Print the list of SVN properties for PATH.
 sub cmd_proplist {
 	my $path = shift;
 	$path = '.' if not defined $path;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-symbolic-ref and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-symbolic-ref differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-tag and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-tag differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-unpack-file and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-unpack-file differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-unpack-objects and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-unpack-objects differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-update-index and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-update-index differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-update-ref and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-update-ref differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-update-server-info and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-update-server-info differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-upload-archive and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-upload-archive differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-upload-pack and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-upload-pack differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/GIT-USER-AGENT /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/GIT-USER-AGENT
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/GIT-USER-AGENT	2017-10-10 12:20:47.318656148 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/GIT-USER-AGENT	2017-10-10 12:24:22.906648247 +0800
@@ -1 +1 @@
-git/2.2.3
+git/2.3.0
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-var and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-var differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-verify-commit and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-verify-commit differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-verify-pack and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-verify-pack differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-verify-tag and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-verify-tag differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/GIT-VERSION-FILE /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/GIT-VERSION-FILE
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/GIT-VERSION-FILE	2017-10-10 12:20:23.818657010 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/GIT-VERSION-FILE	2017-10-10 12:23:59.438649107 +0800
@@ -1 +1 @@
-GIT_VERSION = 2.2.3
+GIT_VERSION = 2.3.0
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/GIT-VERSION-GEN /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/GIT-VERSION-GEN
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/GIT-VERSION-GEN	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/GIT-VERSION-GEN	2015-02-06 05:40:08.000000000 +0800
@@ -1,10 +1,10 @@
 #!/bin/sh
 
 GVF=GIT-VERSION-FILE
-DEF_VER=v2.2.3
+DEF_VER=v2.3.0
 
 LF='
 '
 
 # First see if there is a version file (included in release tarballs),
 # then try git-describe, then default.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/gitweb/GITWEB-BUILD-OPTIONS /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/gitweb/GITWEB-BUILD-OPTIONS
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/gitweb/GITWEB-BUILD-OPTIONS	2017-10-10 12:20:53.446655924 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/gitweb/GITWEB-BUILD-OPTIONS	2017-10-10 12:24:29.194648017 +0800
@@ -1 +1 @@
-x /usr/bin/perl -e s|++GIT_VERSION++|2.2.3|g -e s|++GIT_BINDIR++|/usr/local/bin|g -e s|++GITWEB_CONFIG++|gitweb_config.perl|g -e s|++GITWEB_CONFIG_SYSTEM++|/etc/gitweb.conf|g -e s|++GITWEB_CONFIG_COMMON++|/etc/gitweb-common.conf|g -e s|++GITWEB_HOME_LINK_STR++|projects|g -e s|++GITWEB_SITENAME++||g -e s|++GITWEB_PROJECTROOT++|/pub/git|g -e s|"++GITWEB_PROJECT_MAXDEPTH++"|2007|g -e s|++GITWEB_EXPORT_OK++||g -e s|++GITWEB_STRICT_EXPORT++||g -e s|++GITWEB_BASE_URL++||g -e s|++GITWEB_LIST++||g -e s|++GITWEB_HOMETEXT++|indextext.html|g -e s|++GITWEB_CSS++|static/gitweb.css|g -e s|++GITWEB_LOGO++|static/git-logo.png|g -e s|++GITWEB_FAVICON++|static/git-favicon.png|g -e s|++GITWEB_JS++|static/gitweb.js|g -e s|++GITWEB_SITE_HTML_HEAD_STRING++||g -e s|++GITWEB_SITE_HEADER++||g -e s|++GITWEB_SITE_FOOTER++||g -e s|++HIGHLIGHT_BIN++|highlight|g |
+x /usr/bin/perl -e s|++GIT_VERSION++|2.3.0|g -e s|++GIT_BINDIR++|/usr/local/bin|g -e s|++GITWEB_CONFIG++|gitweb_config.perl|g -e s|++GITWEB_CONFIG_SYSTEM++|/etc/gitweb.conf|g -e s|++GITWEB_CONFIG_COMMON++|/etc/gitweb-common.conf|g -e s|++GITWEB_HOME_LINK_STR++|projects|g -e s|++GITWEB_SITENAME++||g -e s|++GITWEB_PROJECTROOT++|/pub/git|g -e s|"++GITWEB_PROJECT_MAXDEPTH++"|2007|g -e s|++GITWEB_EXPORT_OK++||g -e s|++GITWEB_STRICT_EXPORT++||g -e s|++GITWEB_BASE_URL++||g -e s|++GITWEB_LIST++||g -e s|++GITWEB_HOMETEXT++|indextext.html|g -e s|++GITWEB_CSS++|static/gitweb.css|g -e s|++GITWEB_LOGO++|static/git-logo.png|g -e s|++GITWEB_FAVICON++|static/git-favicon.png|g -e s|++GITWEB_JS++|static/gitweb.js|g -e s|++GITWEB_SITE_HTML_HEAD_STRING++||g -e s|++GITWEB_SITE_HEADER++||g -e s|++GITWEB_SITE_FOOTER++||g -e s|++HIGHLIGHT_BIN++|highlight|g |
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/gitweb/gitweb.cgi /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/gitweb/gitweb.cgi
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/gitweb/gitweb.cgi	2017-10-10 12:20:53.470655923 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/gitweb/gitweb.cgi	2017-10-10 12:24:29.218648016 +0800
@@ -28,13 +28,13 @@
 our $number_of_git_cmds = 0;
 
 BEGIN {
 	CGI->compile() if $ENV{'MOD_PERL'};
 }
 
-our $version = "2.2.3";
+our $version = "2.3.0";
 
 our ($my_url, $my_uri, $base_url, $path_info, $home_link);
 sub evaluate_uri {
 	our $cgi;
 
 	our $my_url = $cgi->url();
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-whatchanged and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-whatchanged differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/git-write-tree and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/git-write-tree differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/gpg-interface.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/gpg-interface.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/gpg-interface.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/gpg-interface.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/graph.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/graph.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/graph.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/graph.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/grep.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/grep.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/grep.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/grep.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/hashmap.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/hashmap.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/hashmap.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/hashmap.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/help.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/help.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/help.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/help.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/hex.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/hex.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/hex.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/hex.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/http-backend.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/http-backend.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/http-backend.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/http-backend.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/http-push.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/http-push.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/http-push.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/http-push.c	2015-02-06 05:40:08.000000000 +0800
@@ -1574,12 +1574,15 @@
 	*symref = NULL;
 	hashclr(sha1);
 
 	if (buffer.len == 0)
 		return;
 
+	/* Cut off trailing newline. */
+	strbuf_rtrim(&buffer);
+
 	/* If it's a symref, set the refname; otherwise try for a sha1 */
 	if (skip_prefix(buffer.buf, "ref: ", &name)) {
 		*symref = xmemdupz(name, buffer.len - (name - buffer.buf));
 	} else {
 		get_sha1_hex(buffer.buf, sha1);
 	}
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/ident.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/ident.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/ident.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/ident.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/imap-send.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/imap-send.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/imap-send.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/imap-send.c	2015-02-06 05:40:08.000000000 +0800
@@ -23,26 +23,37 @@
  */
 
 #include "cache.h"
 #include "credential.h"
 #include "exec_cmd.h"
 #include "run-command.h"
+#include "parse-options.h"
 #ifdef NO_OPENSSL
 typedef void *SSL;
 #endif
+#ifdef USE_CURL_FOR_IMAP_SEND
+#include "http.h"
+#endif
+
+static int verbosity;
+static int use_curl; /* strictly opt in */
 
-static const char imap_send_usage[] = "git imap-send < <mbox>";
+static const char * const imap_send_usage[] = { "git imap-send [-v] [-q] [--[no-]curl] < <mbox>", NULL };
+
+static struct option imap_send_options[] = {
+	OPT__VERBOSITY(&verbosity),
+	OPT_BOOL(0, "curl", &use_curl, "use libcurl to communicate with the IMAP server"),
+	OPT_END()
+};
 
 #undef DRV_OK
 #define DRV_OK          0
 #define DRV_MSG_BAD     -1
 #define DRV_BOX_BAD     -2
 #define DRV_STORE_BAD   -3
 
-static int Verbose, Quiet;
-
 __attribute__((format (printf, 1, 2)))
 static void imap_info(const char *, ...);
 __attribute__((format (printf, 1, 2)))
 static void imap_warn(const char *, ...);
 
 static char *next_arg(char **);
@@ -415,13 +426,13 @@
 
 		if (b->buf[b->offset] == '\r') {
 			assert(b->offset + 1 < b->bytes);
 			if (b->buf[b->offset + 1] == '\n') {
 				b->buf[b->offset] = 0;  /* terminate the string */
 				b->offset += 2; /* next line */
-				if (Verbose)
+				if (0 < verbosity)
 					puts(*s);
 				return 0;
 			}
 		}
 
 		b->offset++;
@@ -430,25 +441,25 @@
 }
 
 static void imap_info(const char *msg, ...)
 {
 	va_list va;
 
-	if (!Quiet) {
+	if (0 <= verbosity) {
 		va_start(va, msg);
 		vprintf(msg, va);
 		va_end(va);
 		fflush(stdout);
 	}
 }
 
 static void imap_warn(const char *msg, ...)
 {
 	va_list va;
 
-	if (Quiet < 2) {
+	if (-2 < verbosity) {
 		va_start(va, msg);
 		vfprintf(stderr, msg, va);
 		va_end(va);
 	}
 }
 
@@ -519,13 +530,13 @@
 		bufl = nfsnprintf(buf, sizeof(buf), "%d %s\r\n", cmd->tag, cmd->cmd);
 	else
 		bufl = nfsnprintf(buf, sizeof(buf), "%d %s{%d%s}\r\n",
 				  cmd->tag, cmd->cmd, cmd->cb.dlen,
 				  CAP(LITERALPLUS) ? "+" : "");
 
-	if (Verbose) {
+	if (0 < verbosity) {
 		if (imap->num_in_progress)
 			printf("(%d in progress) ", imap->num_in_progress);
 		if (!starts_with(cmd->cmd, "LOGIN"))
 			printf(">>> %s", buf);
 		else
 			printf(">>> %d LOGIN <user> <pass>\n", cmd->tag);
@@ -1335,32 +1346,172 @@
 	git_config_get_string("imap.pass", &server.pass);
 	git_config_get_int("imap.port", &server.port);
 	git_config_get_string("imap.tunnel", &server.tunnel);
 	git_config_get_string("imap.authmethod", &server.auth_method);
 }
 
-int main(int argc, char **argv)
+static int append_msgs_to_imap(struct imap_server_conf *server,
+			       struct strbuf* all_msgs, int total)
 {
-	struct strbuf all_msgs = STRBUF_INIT;
 	struct strbuf msg = STRBUF_INIT;
 	struct imap_store *ctx = NULL;
 	int ofs = 0;
 	int r;
-	int total, n = 0;
+	int n = 0;
+
+	ctx = imap_open_store(server, server->folder);
+	if (!ctx) {
+		fprintf(stderr, "failed to open store\n");
+		return 1;
+	}
+	ctx->name = server->folder;
+
+	fprintf(stderr, "sending %d message%s\n", total, (total != 1) ? "s" : "");
+	while (1) {
+		unsigned percent = n * 100 / total;
+
+		fprintf(stderr, "%4u%% (%d/%d) done\r", percent, n, total);
+
+		if (!split_msg(all_msgs, &msg, &ofs))
+			break;
+		if (server->use_html)
+			wrap_in_html(&msg);
+		r = imap_store_msg(ctx, &msg);
+		if (r != DRV_OK)
+			break;
+		n++;
+	}
+	fprintf(stderr, "\n");
+
+	imap_close_store(ctx);
+
+	return 0;
+}
+
+#ifdef USE_CURL_FOR_IMAP_SEND
+static CURL *setup_curl(struct imap_server_conf *srvc)
+{
+	CURL *curl;
+	struct strbuf path = STRBUF_INIT;
+
+	if (curl_global_init(CURL_GLOBAL_ALL) != CURLE_OK)
+		die("curl_global_init failed");
+
+	curl = curl_easy_init();
+
+	if (!curl)
+		die("curl_easy_init failed");
+
+	curl_easy_setopt(curl, CURLOPT_USERNAME, server.user);
+	curl_easy_setopt(curl, CURLOPT_PASSWORD, server.pass);
+
+	strbuf_addstr(&path, server.host);
+	if (!path.len || path.buf[path.len - 1] != '/')
+		strbuf_addch(&path, '/');
+	strbuf_addstr(&path, server.folder);
+
+	curl_easy_setopt(curl, CURLOPT_URL, path.buf);
+	strbuf_release(&path);
+	curl_easy_setopt(curl, CURLOPT_PORT, server.port);
+
+	if (server.auth_method) {
+		struct strbuf auth = STRBUF_INIT;
+		strbuf_addstr(&auth, "AUTH=");
+		strbuf_addstr(&auth, server.auth_method);
+		curl_easy_setopt(curl, CURLOPT_LOGIN_OPTIONS, auth.buf);
+		strbuf_release(&auth);
+	}
+
+	if (!server.use_ssl)
+		curl_easy_setopt(curl, CURLOPT_USE_SSL, (long)CURLUSESSL_TRY);
+
+	curl_easy_setopt(curl, CURLOPT_SSL_VERIFYPEER, server.ssl_verify);
+	curl_easy_setopt(curl, CURLOPT_SSL_VERIFYHOST, server.ssl_verify);
+
+	curl_easy_setopt(curl, CURLOPT_READFUNCTION, fread_buffer);
+
+	curl_easy_setopt(curl, CURLOPT_UPLOAD, 1L);
+
+	if (0 < verbosity || getenv("GIT_CURL_VERBOSE"))
+		curl_easy_setopt(curl, CURLOPT_VERBOSE, 1L);
+
+	return curl;
+}
+
+static int curl_append_msgs_to_imap(struct imap_server_conf *server,
+				    struct strbuf* all_msgs, int total) {
+	int ofs = 0;
+	int n = 0;
+	struct buffer msgbuf = { STRBUF_INIT, 0 };
+	CURL *curl;
+	CURLcode res = CURLE_OK;
+
+	curl = setup_curl(server);
+	curl_easy_setopt(curl, CURLOPT_READDATA, &msgbuf);
+
+	fprintf(stderr, "sending %d message%s\n", total, (total != 1) ? "s" : "");
+	while (1) {
+		unsigned percent = n * 100 / total;
+		int prev_len;
+
+		fprintf(stderr, "%4u%% (%d/%d) done\r", percent, n, total);
+
+		prev_len = msgbuf.buf.len;
+		if (!split_msg(all_msgs, &msgbuf.buf, &ofs))
+			break;
+		if (server->use_html)
+			wrap_in_html(&msgbuf.buf);
+		lf_to_crlf(&msgbuf.buf);
+
+		curl_easy_setopt(curl, CURLOPT_INFILESIZE_LARGE,
+				 (curl_off_t)(msgbuf.buf.len-prev_len));
+
+		res = curl_easy_perform(curl);
+
+		if(res != CURLE_OK) {
+			fprintf(stderr, "curl_easy_perform() failed: %s\n",
+					curl_easy_strerror(res));
+			break;
+		}
+
+		n++;
+	}
+	fprintf(stderr, "\n");
+
+	curl_easy_cleanup(curl);
+	curl_global_cleanup();
+
+	return 0;
+}
+#endif
+
+int main(int argc, char **argv)
+{
+	struct strbuf all_msgs = STRBUF_INIT;
+	int total;
 	int nongit_ok;
 
 	git_extract_argv0_path(argv[0]);
 
 	git_setup_gettext();
 
-	if (argc != 1)
-		usage(imap_send_usage);
-
 	setup_git_directory_gently(&nongit_ok);
 	git_imap_config();
 
+	argc = parse_options(argc, (const char **)argv, "", imap_send_options, imap_send_usage, 0);
+
+	if (argc)
+		usage_with_options(imap_send_usage, imap_send_options);
+
+#ifndef USE_CURL_FOR_IMAP_SEND
+	if (use_curl) {
+		warning("--use-curl not supported in this build");
+		use_curl = 0;
+	}
+#endif
+
 	if (!server.port)
 		server.port = server.use_ssl ? 993 : 143;
 
 	if (!server.folder) {
 		fprintf(stderr, "no imap store specified\n");
 		return 1;
@@ -1388,32 +1539,17 @@
 	if (!total) {
 		fprintf(stderr, "no messages to send\n");
 		return 1;
 	}
 
 	/* write it to the imap server */
-	ctx = imap_open_store(&server, server.folder);
-	if (!ctx) {
-		fprintf(stderr, "failed to open store\n");
-		return 1;
-	}
 
-	fprintf(stderr, "sending %d message%s\n", total, (total != 1) ? "s" : "");
-	while (1) {
-		unsigned percent = n * 100 / total;
+	if (server.tunnel)
+		return append_msgs_to_imap(&server, &all_msgs, total);
 
-		fprintf(stderr, "%4u%% (%d/%d) done\r", percent, n, total);
-		if (!split_msg(&all_msgs, &msg, &ofs))
-			break;
-		if (server.use_html)
-			wrap_in_html(&msg);
-		r = imap_store_msg(ctx, &msg);
-		if (r != DRV_OK)
-			break;
-		n++;
-	}
-	fprintf(stderr, "\n");
-
-	imap_close_store(ctx);
+#ifdef USE_CURL_FOR_IMAP_SEND
+	if (use_curl)
+		return curl_append_msgs_to_imap(&server, &all_msgs, total);
+#endif
 
-	return 0;
+	return append_msgs_to_imap(&server, &all_msgs, total);
 }
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/imap-send.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/imap-send.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/imap-send.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/imap-send.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/INSTALL /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/INSTALL
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/INSTALL	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/INSTALL	2015-02-06 05:40:08.000000000 +0800
@@ -105,24 +105,27 @@
 	  live without these, use NO_PERL.  Note that recent releases of
 	  Redhat/Fedora are reported to ship Perl binary package with some
 	  core modules stripped away (see http://lwn.net/Articles/477234/),
 	  so you might need to install additional packages other than Perl
 	  itself, e.g. Time::HiRes.
 
-	- "openssl" library is used by git-imap-send to use IMAP over SSL.
-	  If you don't need it, use NO_OPENSSL.
+	- git-imap-send needs the OpenSSL library to talk IMAP over SSL if
+	  you are using libcurl older than 7.34.0.  Otherwise you can use
+	  NO_OPENSSL without losing git-imap-send.
 
 	  By default, git uses OpenSSL for SHA1 but it will use its own
 	  library (inspired by Mozilla's) with either NO_OPENSSL or
 	  BLK_SHA1.  Also included is a version optimized for PowerPC
 	  (PPC_SHA1).
 
-	- "libcurl" library is used by git-http-fetch and git-fetch.  You
-	  might also want the "curl" executable for debugging purposes.
-	  If you do not use http:// or https:// repositories, you do not
-	  have to have them (use NO_CURL).
+	- "libcurl" library is used by git-http-fetch, git-fetch, and, if
+	  the curl version >= 7.34.0, for git-imap-send.  You might also
+	  want the "curl" executable for debugging purposes. If you do not
+	  use http:// or https:// repositories, and do not want to put
+	  patches into an IMAP mailbox, you do not have to have them
+	  (use NO_CURL).
 
 	- "expat" library; git-http-push uses it for remote lock
 	  management over DAV.  Similar to "curl" above, this is optional
 	  (with NO_EXPAT).
 
 	- "wish", the Tcl/Tk windowing shell is used in gitk to show the
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/kwset.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/kwset.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/kwset.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/kwset.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/levenshtein.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/levenshtein.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/levenshtein.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/levenshtein.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/libgit.a and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/libgit.a differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/line-log.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/line-log.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/line-log.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/line-log.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/line-range.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/line-range.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/line-range.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/line-range.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/list-objects.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/list-objects.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/list-objects.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/list-objects.c	2015-02-06 05:40:08.000000000 +0800
@@ -154,21 +154,21 @@
 
 	for (list = revs->commits; list; list = list->next) {
 		struct commit *commit = list->item;
 
 		if (commit->object.flags & UNINTERESTING) {
 			mark_tree_uninteresting(commit->tree);
-			if (revs->edge_hint && !(commit->object.flags & SHOWN)) {
+			if (revs->edge_hint_aggressive && !(commit->object.flags & SHOWN)) {
 				commit->object.flags |= SHOWN;
 				show_edge(commit);
 			}
 			continue;
 		}
 		mark_edge_parents_uninteresting(commit, revs, show_edge);
 	}
-	if (revs->edge_hint) {
+	if (revs->edge_hint_aggressive) {
 		for (i = 0; i < revs->cmdline.nr; i++) {
 			struct object *obj = revs->cmdline.rev[i].item;
 			struct commit *commit = (struct commit *)obj;
 			if (obj->type != OBJ_COMMIT || !(obj->flags & UNINTERESTING))
 				continue;
 			mark_tree_uninteresting(commit->tree);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/list-objects.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/list-objects.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/list-objects.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/list-objects.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/ll-merge.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/ll-merge.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/ll-merge.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/ll-merge.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/lockfile.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/lockfile.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/lockfile.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/lockfile.c	2015-02-06 05:40:08.000000000 +0800
@@ -125,15 +125,23 @@
 	} else if (lk->filename.len) {
 		/* This shouldn't happen, but better safe than sorry. */
 		die("BUG: lock_file(\"%s\") called with improperly-reset lock_file object",
 		    path);
 	}
 
-	strbuf_add(&lk->filename, path, pathlen);
-	if (!(flags & LOCK_NO_DEREF))
-		resolve_symlink(&lk->filename);
+	if (flags & LOCK_NO_DEREF) {
+		strbuf_add_absolute_path(&lk->filename, path);
+	} else {
+		struct strbuf resolved_path = STRBUF_INIT;
+
+		strbuf_add(&resolved_path, path, pathlen);
+		resolve_symlink(&resolved_path);
+		strbuf_add_absolute_path(&lk->filename, resolved_path.buf);
+		strbuf_release(&resolved_path);
+	}
+
 	strbuf_addstr(&lk->filename, LOCK_SUFFIX);
 	lk->fd = open(lk->filename.buf, O_RDWR | O_CREAT | O_EXCL, 0666);
 	if (lk->fd < 0) {
 		strbuf_reset(&lk->filename);
 		return -1;
 	}
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/lockfile.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/lockfile.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/lockfile.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/lockfile.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/log-tree.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/log-tree.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/log-tree.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/log-tree.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/mailmap.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/mailmap.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/mailmap.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/mailmap.c	2015-02-06 05:40:08.000000000 +0800
@@ -68,50 +68,44 @@
 
 static void add_mapping(struct string_list *map,
 			char *new_name, char *new_email,
 			char *old_name, char *old_email)
 {
 	struct mailmap_entry *me;
-	int index;
+	struct string_list_item *item;
 
 	if (old_email == NULL) {
 		old_email = new_email;
 		new_email = NULL;
 	}
 
-	if ((index = string_list_find_insert_index(map, old_email, 1)) < 0) {
-		/* mailmap entry exists, invert index value */
-		index = -1 - index;
-		me = (struct mailmap_entry *)map->items[index].util;
+	item = string_list_insert(map, old_email);
+	if (item->util) {
+		me = (struct mailmap_entry *)item->util;
 	} else {
-		/* create mailmap entry */
-		struct string_list_item *item;
-
-		item = string_list_insert_at_index(map, index, old_email);
 		me = xcalloc(1, sizeof(struct mailmap_entry));
 		me->namemap.strdup_strings = 1;
 		me->namemap.cmp = namemap_cmp;
 		item->util = me;
 	}
 
 	if (old_name == NULL) {
-		debug_mm("mailmap: adding (simple) entry for %s at index %d\n",
-			 old_email, index);
+		debug_mm("mailmap: adding (simple) entry for '%s'\n", old_email);
+
 		/* Replace current name and new email for simple entry */
 		if (new_name) {
 			free(me->name);
 			me->name = xstrdup(new_name);
 		}
 		if (new_email) {
 			free(me->email);
 			me->email = xstrdup(new_email);
 		}
 	} else {
 		struct mailmap_info *mi = xcalloc(1, sizeof(struct mailmap_info));
-		debug_mm("mailmap: adding (complex) entry for %s at index %d\n",
-			 old_email, index);
+		debug_mm("mailmap: adding (complex) entry for '%s'\n", old_email);
 		if (new_name)
 			mi->name = xstrdup(new_name);
 		if (new_email)
 			mi->email = xstrdup(new_email);
 		string_list_insert(&me->namemap, old_name)->util = mi;
 	}
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/mailmap.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/mailmap.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/mailmap.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/mailmap.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/Makefile /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/Makefile
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/Makefile	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/Makefile	2015-02-06 05:40:08.000000000 +0800
@@ -188,12 +188,16 @@
 # Define NO_FAST_WORKING_DIRECTORY if accessing objects in pack files is
 # generally faster on your platform than accessing the working directory.
 #
 # Define NO_TRUSTABLE_FILEMODE if your filesystem may claim to support
 # the executable mode bit, but doesn't really do so.
 #
+# Define NEEDS_MODE_TRANSLATION if your OS strays from the typical file type
+# bits in mode values (e.g. z/OS defines I_SFMT to 0xFF000000 as opposed to the
+# usual 0xF000).
+#
 # Define NO_IPV6 if you lack IPv6 support and getaddrinfo().
 #
 # Define NO_UNIX_SOCKETS if your system does not offer unix sockets.
 #
 # Define NO_SOCKADDR_STORAGE if your platform does not have struct
 # sockaddr_storage.
@@ -336,12 +340,17 @@
 # file format used is index-v[23].
 #
 # Define GMTIME_UNRELIABLE_ERRORS if your gmtime() function does not
 # return NULL when it receives a bogus time_t.
 #
 # Define HAVE_CLOCK_GETTIME if your platform has clock_gettime in librt.
+#
+# Define HAVE_CLOCK_MONOTONIC if your platform has CLOCK_MONOTONIC in librt.
+#
+# Define NO_HMAC_CTX_CLEANUP if your OpenSSL is version 0.9.6b or earlier to
+# cleanup the HMAC context with the older HMAC_cleanup function.
 
 GIT-VERSION-FILE: FORCE
 	@$(SHELL_PATH) ./GIT-VERSION-GEN
 -include GIT-VERSION-FILE
 
 # CFLAGS and LDFLAGS are for the users to override from the command line.
@@ -992,12 +1001,15 @@
 endif
 
 ifdef HAVE_ALLOCA_H
 	BASIC_CFLAGS += -DHAVE_ALLOCA_H
 endif
 
+IMAP_SEND_BUILDDEPS =
+IMAP_SEND_LDFLAGS = $(OPENSSL_LINK) $(OPENSSL_LIBSSL) $(LIB_4_CRYPTO)
+
 ifdef NO_CURL
 	BASIC_CFLAGS += -DNO_CURL
 	REMOTE_CURL_PRIMARY =
 	REMOTE_CURL_ALIASES =
 	REMOTE_CURL_NAMES =
 else
@@ -1026,12 +1038,21 @@
 	curl_check := $(shell (echo 070908; curl-config --vernum) 2>/dev/null | sort -r | sed -ne 2p)
 	ifeq "$(curl_check)" "070908"
 		ifndef NO_EXPAT
 			PROGRAM_OBJS += http-push.o
 		endif
 	endif
+	curl_check := $(shell (echo 072200; curl-config --vernum) 2>/dev/null | sort -r | sed -ne 2p)
+	ifeq "$(curl_check)" "072200"
+		USE_CURL_FOR_IMAP_SEND = YesPlease
+	endif
+	ifdef USE_CURL_FOR_IMAP_SEND
+		BASIC_CFLAGS += -DUSE_CURL_FOR_IMAP_SEND
+		IMAP_SEND_BUILDDEPS = http.o
+		IMAP_SEND_LDFLAGS += $(CURL_LIBCURL)
+	endif
 	ifndef NO_EXPAT
 		ifdef EXPATDIR
 			BASIC_CFLAGS += -I$(EXPATDIR)/include
 			EXPAT_LIBEXPAT = -L$(EXPATDIR)/$(lib) $(CC_LD_DYNPATH)$(EXPATDIR)/$(lib) -lexpat
 		else
 			EXPAT_LIBEXPAT = -lexpat
@@ -1056,12 +1077,15 @@
 	else
 		OPENSSL_LINK =
 	endif
 	ifdef NEEDS_CRYPTO_WITH_SSL
 		OPENSSL_LIBSSL += -lcrypto
 	endif
+	ifdef NO_HMAC_CTX_CLEANUP
+		BASIC_CFLAGS += -DNO_HMAC_CTX_CLEANUP
+	endif
 else
 	BASIC_CFLAGS += -DNO_OPENSSL
 	BLK_SHA1 = 1
 	OPENSSL_LIBSSL =
 endif
 ifdef NO_OPENSSL
@@ -1227,12 +1251,16 @@
 ifdef NO_FAST_WORKING_DIRECTORY
 	BASIC_CFLAGS += -DNO_FAST_WORKING_DIRECTORY
 endif
 ifdef NO_TRUSTABLE_FILEMODE
 	BASIC_CFLAGS += -DNO_TRUSTABLE_FILEMODE
 endif
+ifdef NEEDS_MODE_TRANSLATION
+	COMPAT_CFLAGS += -DNEEDS_MODE_TRANSLATION
+	COMPAT_OBJS += compat/stat.o
+endif
 ifdef NO_IPV6
 	BASIC_CFLAGS += -DNO_IPV6
 endif
 ifdef NO_INTPTR_T
 	COMPAT_CFLAGS += -DNO_INTPTR_T
 endif
@@ -1379,12 +1407,16 @@
 
 ifdef HAVE_CLOCK_GETTIME
 	BASIC_CFLAGS += -DHAVE_CLOCK_GETTIME
 	EXTLIBS += -lrt
 endif
 
+ifdef HAVE_CLOCK_MONOTONIC
+	BASIC_CFLAGS += -DHAVE_CLOCK_MONOTONIC
+endif
+
 ifeq ($(TCLTK_PATH),)
 NO_TCLTK = NoThanks
 endif
 
 ifeq ($(PERL_PATH),)
 NO_PERL = NoThanks
@@ -1877,13 +1909,13 @@
 	-DETC_GITATTRIBUTES='"$(ETC_GITATTRIBUTES_SQ)"'
 
 gettext.sp gettext.s gettext.o: GIT-PREFIX
 gettext.sp gettext.s gettext.o: EXTRA_CPPFLAGS = \
 	-DGIT_LOCALE_PATH='"$(localedir_SQ)"'
 
-http-push.sp http.sp http-walker.sp remote-curl.sp: SPARSE_FLAGS += \
+http-push.sp http.sp http-walker.sp remote-curl.sp imap-send.sp: SPARSE_FLAGS += \
 	-DCURL_DISABLE_TYPECHECK
 
 ifdef NO_EXPAT
 http-walker.sp http-walker.s http-walker.o: EXTRA_CPPFLAGS = -DNO_EXPAT
 endif
 
@@ -1898,15 +1930,15 @@
 compat/nedmalloc/nedmalloc.sp: SPARSE_FLAGS += -Wno-non-pointer-null
 endif
 
 git-%$X: %.o GIT-LDFLAGS $(GITLIBS)
 	$(QUIET_LINK)$(CC) $(ALL_CFLAGS) -o $@ $(ALL_LDFLAGS) $(filter %.o,$^) $(LIBS)
 
-git-imap-send$X: imap-send.o GIT-LDFLAGS $(GITLIBS)
+git-imap-send$X: imap-send.o $(IMAP_SEND_BUILDDEPS) GIT-LDFLAGS $(GITLIBS)
 	$(QUIET_LINK)$(CC) $(ALL_CFLAGS) -o $@ $(ALL_LDFLAGS) $(filter %.o,$^) \
-		$(LIBS) $(OPENSSL_LINK) $(OPENSSL_LIBSSL) $(LIB_4_CRYPTO)
+		$(LIBS) $(IMAP_SEND_LDFLAGS)
 
 git-http-fetch$X: http.o http-walker.o http-fetch.o GIT-LDFLAGS $(GITLIBS)
 	$(QUIET_LINK)$(CC) $(ALL_CFLAGS) -o $@ $(ALL_LDFLAGS) $(filter %.o,$^) \
 		$(LIBS) $(CURL_LIBCURL)
 git-http-push$X: http.o http-push.o GIT-LDFLAGS $(GITLIBS)
 	$(QUIET_LINK)$(CC) $(ALL_CFLAGS) -o $@ $(ALL_LDFLAGS) $(filter %.o,$^) \
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/match-trees.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/match-trees.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/match-trees.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/match-trees.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/merge-blobs.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/merge-blobs.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/merge-blobs.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/merge-blobs.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/merge.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/merge.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/merge.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/merge.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/merge-recursive.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/merge-recursive.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/merge-recursive.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/merge-recursive.c	2015-02-06 05:40:08.000000000 +0800
@@ -272,29 +272,26 @@
 	result = lookup_tree(active_cache_tree->sha1);
 
 	return result;
 }
 
 static int save_files_dirs(const unsigned char *sha1,
-		const char *base, int baselen, const char *path,
+		struct strbuf *base, const char *path,
 		unsigned int mode, int stage, void *context)
 {
-	int len = strlen(path);
-	char *newpath = xmalloc(baselen + len + 1);
+	int baselen = base->len;
 	struct merge_options *o = context;
 
-	memcpy(newpath, base, baselen);
-	memcpy(newpath + baselen, path, len);
-	newpath[baselen + len] = '\0';
+	strbuf_addstr(base, path);
 
 	if (S_ISDIR(mode))
-		string_list_insert(&o->current_directory_set, newpath);
+		string_list_insert(&o->current_directory_set, base->buf);
 	else
-		string_list_insert(&o->current_file_set, newpath);
-	free(newpath);
+		string_list_insert(&o->current_file_set, base->buf);
 
+	strbuf_setlen(base, baselen);
 	return (S_ISDIR(mode) ? READ_TREE_RECURSIVE : 0);
 }
 
 static int get_files_dirs(struct merge_options *o, struct tree *tree)
 {
 	int n;
@@ -1901,13 +1898,13 @@
 		output(o, 4, _("Merging:"));
 		output_commit_title(o, h1);
 		output_commit_title(o, h2);
 	}
 
 	if (!ca) {
-		ca = get_merge_bases(h1, h2, 1);
+		ca = get_merge_bases(h1, h2);
 		ca = reverse_commit_list(ca);
 	}
 
 	if (show(o, 5)) {
 		unsigned cnt = commit_list_count(ca);
 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/merge-recursive.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/merge-recursive.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/merge-recursive.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/merge-recursive.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/mergesort.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/mergesort.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/mergesort.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/mergesort.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/mergetools/diffmerge /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/mergetools/diffmerge
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/mergetools/diffmerge	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/mergetools/diffmerge	2015-02-06 05:40:08.000000000 +0800
@@ -8,8 +8,7 @@
 		"$merge_tool_path" --merge --result="$MERGED" \
 			"$LOCAL" "$BASE" "$REMOTE"
 	else
 		"$merge_tool_path" --merge \
 			--result="$MERGED" "$LOCAL" "$REMOTE"
 	fi
-	status=$?
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/mergetools/emerge /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/mergetools/emerge
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/mergetools/emerge	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/mergetools/emerge	2015-02-06 05:40:08.000000000 +0800
@@ -12,12 +12,11 @@
 	else
 		"$merge_tool_path" \
 			-f emerge-files-command \
 			"$LOCAL" "$REMOTE" \
 			"$(basename "$MERGED")"
 	fi
-	status=$?
 }
 
 translate_merge_tool_path() {
 	echo emacs
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/mergetools/kdiff3 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/mergetools/kdiff3
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/mergetools/kdiff3	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/mergetools/kdiff3	2015-02-06 05:40:08.000000000 +0800
@@ -17,8 +17,7 @@
 		"$merge_tool_path" --auto \
 			--L1 "$MERGED (Local)" \
 			--L2 "$MERGED (Remote)" \
 			-o "$MERGED" "$LOCAL" "$REMOTE" \
 		>/dev/null 2>&1
 	fi
-	status=$?
 }
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/name-hash.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/name-hash.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/name-hash.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/name-hash.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/notes.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/notes.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/notes.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/notes.c	2015-02-06 05:40:08.000000000 +0800
@@ -359,20 +359,19 @@
 
 static int non_note_cmp(const struct non_note *a, const struct non_note *b)
 {
 	return strcmp(a->path, b->path);
 }
 
-/* note: takes ownership of path string */
-static void add_non_note(struct notes_tree *t, char *path,
+static void add_non_note(struct notes_tree *t, const char *path,
 		unsigned int mode, const unsigned char *sha1)
 {
 	struct non_note *p = t->prev_non_note, *n;
 	n = (struct non_note *) xmalloc(sizeof(struct non_note));
 	n->next = NULL;
-	n->path = path;
+	n->path = xstrdup(path);
 	n->mode = mode;
 	hashcpy(n->sha1, sha1);
 	t->prev_non_note = n;
 
 	if (!t->first_non_note) {
 		t->first_non_note = n;
@@ -480,23 +479,23 @@
 		 *
 		 * To conclude, it is strongly advised to make sure non-notes
 		 * have at least one non-hex character in the top-level path
 		 * component.
 		 */
 		{
-			struct strbuf non_note_path = STRBUF_INIT;
+			char non_note_path[PATH_MAX];
+			char *p = non_note_path;
 			const char *q = sha1_to_hex(subtree->key_sha1);
 			int i;
 			for (i = 0; i < prefix_len; i++) {
-				strbuf_addch(&non_note_path, *q++);
-				strbuf_addch(&non_note_path, *q++);
-				strbuf_addch(&non_note_path, '/');
+				*p++ = *q++;
+				*p++ = *q++;
+				*p++ = '/';
 			}
-			strbuf_addstr(&non_note_path, entry.path);
-			add_non_note(t, strbuf_detach(&non_note_path, NULL),
-				     entry.mode, entry.sha1);
+			strcpy(p, entry.path);
+			add_non_note(t, non_note_path, entry.mode, entry.sha1);
 		}
 	}
 	free(buf);
 }
 
 /*
@@ -900,13 +899,13 @@
 	/* read both note blob objects into unique_lines */
 	if (string_list_add_note_lines(&sort_uniq_list, cur_sha1))
 		goto out;
 	if (string_list_add_note_lines(&sort_uniq_list, new_sha1))
 		goto out;
 	string_list_remove_empty_items(&sort_uniq_list, 0);
-	sort_string_list(&sort_uniq_list);
+	string_list_sort(&sort_uniq_list);
 	string_list_remove_duplicates(&sort_uniq_list, 0);
 
 	/* create a new blob object from sort_uniq_list */
 	if (for_each_string_list(&sort_uniq_list,
 				 string_list_join_lines_helper, &buf))
 		goto out;
@@ -1216,14 +1215,13 @@
 		init_notes(t, NULL, NULL, 0);
 
 	sha1 = get_note(t, object_sha1);
 	if (!sha1)
 		return;
 
-	if (!(msg = read_sha1_file(sha1, &type, &msglen)) || !msglen ||
-			type != OBJ_BLOB) {
+	if (!(msg = read_sha1_file(sha1, &type, &msglen)) || type != OBJ_BLOB) {
 		free(msg);
 		return;
 	}
 
 	if (output_encoding && *output_encoding &&
 	    !is_encoding_utf8(output_encoding)) {
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/notes-cache.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/notes-cache.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/notes-cache.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/notes-cache.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/notes.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/notes.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/notes-merge.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/notes-merge.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/notes-merge.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/notes-merge.c	2015-02-06 05:40:08.000000000 +0800
@@ -591,13 +591,13 @@
 		hashcpy(result_sha1, local_sha1);
 		goto found_result;
 	}
 	assert(local && remote);
 
 	/* Find merge bases */
-	bases = get_merge_bases(local, remote, 1);
+	bases = get_merge_bases(local, remote);
 	if (!bases) {
 		base_sha1 = null_sha1;
 		base_tree_sha1 = EMPTY_TREE_SHA1_BIN;
 		if (o->verbosity >= 4)
 			printf("No merge base found; doing history-less merge\n");
 	} else if (!bases->next) {
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/notes-merge.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/notes-merge.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/notes-merge.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/notes-merge.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/notes.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/notes.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/notes-utils.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/notes-utils.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/notes-utils.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/notes-utils.c	2015-02-06 05:40:08.000000000 +0800
@@ -41,14 +41,13 @@
 		die(_("Cannot commit uninitialized/unreferenced notes tree"));
 	if (!t->dirty)
 		return; /* don't have to commit an unchanged tree */
 
 	/* Prepare commit message and reflog message */
 	strbuf_addstr(&buf, msg);
-	if (buf.buf[buf.len - 1] != '\n')
-		strbuf_addch(&buf, '\n'); /* Make sure msg ends with newline */
+	strbuf_complete_line(&buf);
 
 	create_notes_commit(t, NULL, buf.buf, buf.len, commit_sha1);
 	strbuf_insert(&buf, 0, "notes: ", 7); /* commit message starts at index 7 */
 	update_ref(buf.buf, t->ref, commit_sha1, NULL, 0,
 		   UPDATE_REFS_DIE_ON_ERR);
 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/notes-utils.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/notes-utils.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/notes-utils.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/notes-utils.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/object.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/object.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/object.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/object.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pack-bitmap.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pack-bitmap.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pack-bitmap.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pack-bitmap.c	2015-02-06 05:40:08.000000000 +0800
@@ -194,38 +194,46 @@
 	}
 
 	kh_value(index->bitmaps, hash_pos) = stored;
 	return stored;
 }
 
+static inline uint32_t read_be32(const unsigned char *buffer, size_t *pos)
+{
+	uint32_t result = get_be32(buffer + *pos);
+	(*pos) += sizeof(result);
+	return result;
+}
+
+static inline uint8_t read_u8(const unsigned char *buffer, size_t *pos)
+{
+	return buffer[(*pos)++];
+}
+
 static int load_bitmap_entries_v1(struct bitmap_index *index)
 {
 	static const size_t MAX_XOR_OFFSET = 160;
 
 	uint32_t i;
 	struct stored_bitmap **recent_bitmaps;
-	struct bitmap_disk_entry *entry;
 
 	recent_bitmaps = xcalloc(MAX_XOR_OFFSET, sizeof(struct stored_bitmap));
 
 	for (i = 0; i < index->entry_count; ++i) {
 		int xor_offset, flags;
 		struct ewah_bitmap *bitmap = NULL;
 		struct stored_bitmap *xor_bitmap = NULL;
 		uint32_t commit_idx_pos;
 		const unsigned char *sha1;
 
-		entry = (struct bitmap_disk_entry *)(index->map + index->map_pos);
-		index->map_pos += sizeof(struct bitmap_disk_entry);
+		commit_idx_pos = read_be32(index->map, &index->map_pos);
+		xor_offset = read_u8(index->map, &index->map_pos);
+		flags = read_u8(index->map, &index->map_pos);
 
-		commit_idx_pos = ntohl(entry->object_pos);
 		sha1 = nth_packed_object_sha1(index->pack, commit_idx_pos);
 
-		xor_offset = (int)entry->xor_offset;
-		flags = (int)entry->flags;
-
 		bitmap = read_bitmap_1(index);
 		if (!bitmap)
 			return -1;
 
 		if (xor_offset > MAX_XOR_OFFSET || xor_offset > i)
 			return error("Corrupted bitmap pack index");
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pack-bitmap.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pack-bitmap.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pack-bitmap.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pack-bitmap.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pack-bitmap.h	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pack-bitmap.h	2015-02-06 05:40:08.000000000 +0800
@@ -2,18 +2,12 @@
 #define PACK_BITMAP_H
 
 #include "ewah/ewok.h"
 #include "khash.h"
 #include "pack-objects.h"
 
-struct bitmap_disk_entry {
-	uint32_t object_pos;
-	uint8_t xor_offset;
-	uint8_t flags;
-} __attribute__((packed));
-
 struct bitmap_disk_header {
 	char magic[4];
 	uint16_t version;
 	uint16_t options;
 	uint32_t entry_count;
 	unsigned char checksum[20];
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pack-bitmap.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pack-bitmap.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pack-bitmap-write.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pack-bitmap-write.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pack-bitmap-write.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pack-bitmap-write.c	2015-02-06 05:40:08.000000000 +0800
@@ -469,25 +469,23 @@
 				      uint32_t index_nr)
 {
 	int i;
 
 	for (i = 0; i < writer.selected_nr; ++i) {
 		struct bitmapped_commit *stored = &writer.selected[i];
-		struct bitmap_disk_entry on_disk;
 
 		int commit_pos =
 			sha1_pos(stored->commit->object.sha1, index, index_nr, sha1_access);
 
 		if (commit_pos < 0)
 			die("BUG: trying to write commit not in index");
 
-		on_disk.object_pos = htonl(commit_pos);
-		on_disk.xor_offset = stored->xor_offset;
-		on_disk.flags = stored->flags;
+		sha1write_be32(f, commit_pos);
+		sha1write_u8(f, stored->xor_offset);
+		sha1write_u8(f, stored->flags);
 
-		sha1write(f, &on_disk, sizeof(on_disk));
 		dump_bitmap(f, stored->write_as);
 	}
 }
 
 static void write_hash_cache(struct sha1file *f,
 			     struct pack_idx_entry **index,
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pack-bitmap-write.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pack-bitmap-write.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pack-bitmap-write.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pack-bitmap-write.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pack-check.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pack-check.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pack-check.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pack-check.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pack-objects.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pack-objects.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pack-objects.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pack-objects.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pack-revindex.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pack-revindex.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pack-revindex.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pack-revindex.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pack-write.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pack-write.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pack-write.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pack-write.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pager.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pager.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pager.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pager.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/parse-options.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/parse-options.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/parse-options-cb.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/parse-options-cb.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/parse-options-cb.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/parse-options-cb.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/parse-options.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/parse-options.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/patch-delta.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/patch-delta.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/patch-delta.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/patch-delta.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/patch-ids.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/patch-ids.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/patch-ids.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/patch-ids.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/path.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/path.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/path.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/path.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pathspec.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pathspec.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pathspec.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pathspec.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/blib/lib/Git/SVN/Editor.pm /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/blib/lib/Git/SVN/Editor.pm
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/blib/lib/Git/SVN/Editor.pm	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/blib/lib/Git/SVN/Editor.pm	2015-02-06 05:40:08.000000000 +0800
@@ -285,20 +285,55 @@
 			$conf_t,
 			$SVN::_Core::SVN_CONFIG_SECTION_AUTO_PROPS,
 			$callback);
 	}
 }
 
+sub check_attr {
+	my ($attr,$path) = @_;
+	my $val = command_oneline("check-attr", $attr, "--", $path);
+	if ($val) { $val =~ s/^[^:]*:\s*[^:]*:\s*(.*)\s*$/$1/; }
+	return $val;
+}
+
+sub apply_manualprops {
+	my ($self, $file, $fbat) = @_;
+	my $pending_properties = check_attr( "svn-properties", $file );
+	if ($pending_properties eq "") { return; }
+	# Parse the list of properties to set.
+	my @props = split(/;/, $pending_properties);
+	# TODO: get existing properties to compare to
+	# - this fails for add so currently not done
+	# my $existing_props = ::get_svnprops($file);
+	my $existing_props = {};
+	# TODO: caching svn properties or storing them in .gitattributes
+	# would make that faster
+	foreach my $prop (@props) {
+		# Parse 'name=value' syntax and set the property.
+		if ($prop =~ /([^=]+)=(.*)/) {
+			my ($n,$v) = ($1,$2);
+			for ($n, $v) {
+				s/^\s+//; s/\s+$//;
+			}
+			my $existing = $existing_props->{$n};
+			if (!defined($existing) || $existing ne $v) {
+			    $self->change_file_prop($fbat, $n, $v);
+			}
+		}
+	}
+}
+
 sub A {
 	my ($self, $m, $deletions) = @_;
 	my ($dir, $file) = split_path($m->{file_b});
 	my $pbat = $self->ensure_path($dir, $deletions);
 	my $fbat = $self->add_file($self->repo_path($m->{file_b}), $pbat,
 					undef, -1);
 	print "\tA\t$m->{file_b}\n" unless $::_q;
 	$self->apply_autoprops($file, $fbat);
+	$self->apply_manualprops($m->{file_b}, $fbat);
 	$self->chg_file($fbat, $m);
 	$self->close_file($fbat,undef,$self->{pool});
 }
 
 sub C {
 	my ($self, $m, $deletions) = @_;
@@ -308,12 +343,13 @@
 	# store third argument to ->add_file() in a local variable, to make it
 	# have the same lifetime as $fbat
 	my $upa = $self->url_path($m->{file_a});
 	my $fbat = $self->add_file($self->repo_path($m->{file_b}), $pbat,
 				$upa, $self->{r});
 	print "\tC\t$m->{file_a} => $m->{file_b}\n" unless $::_q;
+	$self->apply_manualprops($m->{file_b}, $fbat);
 	$self->chg_file($fbat, $m);
 	$self->close_file($fbat,undef,$self->{pool});
 }
 
 sub delete_entry {
 	my ($self, $path, $pbat) = @_;
@@ -330,12 +366,13 @@
 	# workaround for a bug in svn serf backend, see comment in C() above
 	my $upa = $self->url_path($m->{file_a});
 	my $fbat = $self->add_file($self->repo_path($m->{file_b}), $pbat,
 				$upa, $self->{r});
 	print "\tR\t$m->{file_a} => $m->{file_b}\n" unless $::_q;
 	$self->apply_autoprops($file, $fbat);
+	$self->apply_manualprops($m->{file_b}, $fbat);
 	$self->chg_file($fbat, $m);
 	$self->close_file($fbat,undef,$self->{pool});
 
 	($dir, $file) = split_path($m->{file_a});
 	$pbat = $self->ensure_path($dir, $deletions);
 	$self->delete_entry($m->{file_a}, $pbat);
@@ -345,12 +382,13 @@
 	my ($self, $m, $deletions) = @_;
 	my ($dir, $file) = split_path($m->{file_b});
 	my $pbat = $self->ensure_path($dir, $deletions);
 	my $fbat = $self->open_file($self->repo_path($m->{file_b}),
 				$pbat,$self->{r},$self->{pool});
 	print "\t$m->{chg}\t$m->{file_b}\n" unless $::_q;
+	$self->apply_manualprops($m->{file_b}, $fbat);
 	$self->chg_file($fbat, $m);
 	$self->close_file($fbat,undef,$self->{pool});
 }
 
 sub T {
 	my ($self, $m, $deletions) = @_;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/blib/lib/Git/SVN.pm /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/blib/lib/Git/SVN.pm
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/blib/lib/Git/SVN.pm	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/blib/lib/Git/SVN.pm	2015-02-06 05:40:08.000000000 +0800
@@ -2362,13 +2362,13 @@
 	}
 	$_[1] = $repo_id;
 	my $dir = "$ENV{GIT_DIR}/svn/$ref_id";
 
 	# Older repos imported by us used $GIT_DIR/svn/foo instead of
 	# $GIT_DIR/svn/refs/remotes/foo when tracking refs/remotes/foo
-	if ($ref_id =~ m{^refs/remotes/(.*)}) {
+	if ($ref_id =~ m{^refs/remotes/(.+)}) {
 		my $old_dir = "$ENV{GIT_DIR}/svn/$1";
 		if (-d $old_dir && ! -d $dir) {
 			$dir = $old_dir;
 		}
 	}
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/blib/man3/Git.3pm /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/blib/man3/Git.3pm
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/blib/man3/Git.3pm	2017-10-10 12:21:09.910655320 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/blib/man3/Git.3pm	2017-10-10 12:24:45.626647415 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "Git 3pm"
-.TH Git 3pm "2015-09-05" "perl v5.18.2" "User Contributed Perl Documentation"
+.TH Git 3pm "2015-02-06" "perl v5.18.2" "User Contributed Perl Documentation"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 Git \- Perl interface to the Git version control system
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/blib/man3/Git::I18N.3pm /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/blib/man3/Git::I18N.3pm
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/blib/man3/Git::I18N.3pm	2017-10-10 12:21:09.910655320 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/blib/man3/Git::I18N.3pm	2017-10-10 12:24:45.642647414 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "Git::I18N 3pm"
-.TH Git::I18N 3pm "2015-09-05" "perl v5.18.2" "User Contributed Perl Documentation"
+.TH Git::I18N 3pm "2015-02-06" "perl v5.18.2" "User Contributed Perl Documentation"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 Git::I18N \- Perl interface to Git's Gettext localizations
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/blib/man3/Git::SVN::Editor.3pm /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/blib/man3/Git::SVN::Editor.3pm
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/blib/man3/Git::SVN::Editor.3pm	2017-10-10 12:21:09.874655322 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/blib/man3/Git::SVN::Editor.3pm	2017-10-10 12:24:45.634647414 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "Git::SVN::Editor 3pm"
-.TH Git::SVN::Editor 3pm "2015-09-05" "perl v5.18.2" "User Contributed Perl Documentation"
+.TH Git::SVN::Editor 3pm "2015-02-06" "perl v5.18.2" "User Contributed Perl Documentation"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 Git::SVN::Editor \- commit driver for "git svn set\-tree" and dcommit
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/blib/man3/Git::SVN::Fetcher.3pm /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/blib/man3/Git::SVN::Fetcher.3pm
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/blib/man3/Git::SVN::Fetcher.3pm	2017-10-10 12:21:09.918655320 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/blib/man3/Git::SVN::Fetcher.3pm	2017-10-10 12:24:45.646647414 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "Git::SVN::Fetcher 3pm"
-.TH Git::SVN::Fetcher 3pm "2015-09-05" "perl v5.18.2" "User Contributed Perl Documentation"
+.TH Git::SVN::Fetcher 3pm "2015-02-06" "perl v5.18.2" "User Contributed Perl Documentation"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 Git::SVN::Fetcher \- tree delta consumer for "git svn fetch"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/blib/man3/Git::SVN::Memoize::YAML.3pm /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/blib/man3/Git::SVN::Memoize::YAML.3pm
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/blib/man3/Git::SVN::Memoize::YAML.3pm	2017-10-10 12:21:09.878655322 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/blib/man3/Git::SVN::Memoize::YAML.3pm	2017-10-10 12:24:45.642647414 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "Git::SVN::Memoize::YAML 3pm"
-.TH Git::SVN::Memoize::YAML 3pm "2015-09-05" "perl v5.18.2" "User Contributed Perl Documentation"
+.TH Git::SVN::Memoize::YAML 3pm "2015-02-06" "perl v5.18.2" "User Contributed Perl Documentation"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 Git::SVN::Memoize::YAML \- store Memoized data in YAML format
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/blib/man3/Git::SVN::Prompt.3pm /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/blib/man3/Git::SVN::Prompt.3pm
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/blib/man3/Git::SVN::Prompt.3pm	2017-10-10 12:21:09.882655322 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/blib/man3/Git::SVN::Prompt.3pm	2017-10-10 12:24:45.634647414 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "Git::SVN::Prompt 3pm"
-.TH Git::SVN::Prompt 3pm "2015-09-05" "perl v5.18.2" "User Contributed Perl Documentation"
+.TH Git::SVN::Prompt 3pm "2015-02-06" "perl v5.18.2" "User Contributed Perl Documentation"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 Git::SVN::Prompt \- authentication callbacks for git\-svn
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/blib/man3/Git::SVN::Ra.3pm /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/blib/man3/Git::SVN::Ra.3pm
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/blib/man3/Git::SVN::Ra.3pm	2017-10-10 12:21:09.878655322 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/blib/man3/Git::SVN::Ra.3pm	2017-10-10 12:24:45.638647414 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "Git::SVN::Ra 3pm"
-.TH Git::SVN::Ra 3pm "2015-09-05" "perl v5.18.2" "User Contributed Perl Documentation"
+.TH Git::SVN::Ra 3pm "2015-02-06" "perl v5.18.2" "User Contributed Perl Documentation"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 Git::SVN::Ra \- Subversion remote access functions for git\-svn
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/blib/man3/Git::SVN::Utils.3pm /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/blib/man3/Git::SVN::Utils.3pm
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/blib/man3/Git::SVN::Utils.3pm	2017-10-10 12:21:09.918655320 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/blib/man3/Git::SVN::Utils.3pm	2017-10-10 12:24:45.630647414 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "Git::SVN::Utils 3pm"
-.TH Git::SVN::Utils 3pm "2015-09-05" "perl v5.18.2" "User Contributed Perl Documentation"
+.TH Git::SVN::Utils 3pm "2015-02-06" "perl v5.18.2" "User Contributed Perl Documentation"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 Git::SVN::Utils \- utility functions used across Git::SVN
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/Git/SVN/Editor.pm /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/Git/SVN/Editor.pm
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/Git/SVN/Editor.pm	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/Git/SVN/Editor.pm	2015-02-06 05:40:08.000000000 +0800
@@ -285,20 +285,55 @@
 			$conf_t,
 			$SVN::_Core::SVN_CONFIG_SECTION_AUTO_PROPS,
 			$callback);
 	}
 }
 
+sub check_attr {
+	my ($attr,$path) = @_;
+	my $val = command_oneline("check-attr", $attr, "--", $path);
+	if ($val) { $val =~ s/^[^:]*:\s*[^:]*:\s*(.*)\s*$/$1/; }
+	return $val;
+}
+
+sub apply_manualprops {
+	my ($self, $file, $fbat) = @_;
+	my $pending_properties = check_attr( "svn-properties", $file );
+	if ($pending_properties eq "") { return; }
+	# Parse the list of properties to set.
+	my @props = split(/;/, $pending_properties);
+	# TODO: get existing properties to compare to
+	# - this fails for add so currently not done
+	# my $existing_props = ::get_svnprops($file);
+	my $existing_props = {};
+	# TODO: caching svn properties or storing them in .gitattributes
+	# would make that faster
+	foreach my $prop (@props) {
+		# Parse 'name=value' syntax and set the property.
+		if ($prop =~ /([^=]+)=(.*)/) {
+			my ($n,$v) = ($1,$2);
+			for ($n, $v) {
+				s/^\s+//; s/\s+$//;
+			}
+			my $existing = $existing_props->{$n};
+			if (!defined($existing) || $existing ne $v) {
+			    $self->change_file_prop($fbat, $n, $v);
+			}
+		}
+	}
+}
+
 sub A {
 	my ($self, $m, $deletions) = @_;
 	my ($dir, $file) = split_path($m->{file_b});
 	my $pbat = $self->ensure_path($dir, $deletions);
 	my $fbat = $self->add_file($self->repo_path($m->{file_b}), $pbat,
 					undef, -1);
 	print "\tA\t$m->{file_b}\n" unless $::_q;
 	$self->apply_autoprops($file, $fbat);
+	$self->apply_manualprops($m->{file_b}, $fbat);
 	$self->chg_file($fbat, $m);
 	$self->close_file($fbat,undef,$self->{pool});
 }
 
 sub C {
 	my ($self, $m, $deletions) = @_;
@@ -308,12 +343,13 @@
 	# store third argument to ->add_file() in a local variable, to make it
 	# have the same lifetime as $fbat
 	my $upa = $self->url_path($m->{file_a});
 	my $fbat = $self->add_file($self->repo_path($m->{file_b}), $pbat,
 				$upa, $self->{r});
 	print "\tC\t$m->{file_a} => $m->{file_b}\n" unless $::_q;
+	$self->apply_manualprops($m->{file_b}, $fbat);
 	$self->chg_file($fbat, $m);
 	$self->close_file($fbat,undef,$self->{pool});
 }
 
 sub delete_entry {
 	my ($self, $path, $pbat) = @_;
@@ -330,12 +366,13 @@
 	# workaround for a bug in svn serf backend, see comment in C() above
 	my $upa = $self->url_path($m->{file_a});
 	my $fbat = $self->add_file($self->repo_path($m->{file_b}), $pbat,
 				$upa, $self->{r});
 	print "\tR\t$m->{file_a} => $m->{file_b}\n" unless $::_q;
 	$self->apply_autoprops($file, $fbat);
+	$self->apply_manualprops($m->{file_b}, $fbat);
 	$self->chg_file($fbat, $m);
 	$self->close_file($fbat,undef,$self->{pool});
 
 	($dir, $file) = split_path($m->{file_a});
 	$pbat = $self->ensure_path($dir, $deletions);
 	$self->delete_entry($m->{file_a}, $pbat);
@@ -345,12 +382,13 @@
 	my ($self, $m, $deletions) = @_;
 	my ($dir, $file) = split_path($m->{file_b});
 	my $pbat = $self->ensure_path($dir, $deletions);
 	my $fbat = $self->open_file($self->repo_path($m->{file_b}),
 				$pbat,$self->{r},$self->{pool});
 	print "\t$m->{chg}\t$m->{file_b}\n" unless $::_q;
+	$self->apply_manualprops($m->{file_b}, $fbat);
 	$self->chg_file($fbat, $m);
 	$self->close_file($fbat,undef,$self->{pool});
 }
 
 sub T {
 	my ($self, $m, $deletions) = @_;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/Git/SVN.pm /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/Git/SVN.pm
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/Git/SVN.pm	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/Git/SVN.pm	2015-02-06 05:40:08.000000000 +0800
@@ -2362,13 +2362,13 @@
 	}
 	$_[1] = $repo_id;
 	my $dir = "$ENV{GIT_DIR}/svn/$ref_id";
 
 	# Older repos imported by us used $GIT_DIR/svn/foo instead of
 	# $GIT_DIR/svn/refs/remotes/foo when tracking refs/remotes/foo
-	if ($ref_id =~ m{^refs/remotes/(.*)}) {
+	if ($ref_id =~ m{^refs/remotes/(.+)}) {
 		my $old_dir = "$ENV{GIT_DIR}/svn/$1";
 		if (-d $old_dir && ! -d $dir) {
 			$dir = $old_dir;
 		}
 	}
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/perl.mak /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/perl.mak
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/perl/perl.mak	2017-10-10 12:20:53.334655928 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/perl/perl.mak	2017-10-10 12:24:29.078648021 +0800
@@ -13,13 +13,13 @@
 
 #     BUILD_REQUIRES => {  }
 #     CONFIGURE_REQUIRES => {  }
 #     INSTALLSITEMAN3DIR => q[$(SITEPREFIX)/share/man/man3]
 #     MAKEFILE => q[perl.mak]
 #     NAME => q[Git]
-#     PM => { Git/SVN.pm=>q[$(INST_LIBDIR)/Git/SVN.pm], Git/SVN/Editor.pm=>q[$(INST_LIBDIR)/Git/SVN/Editor.pm], Git/SVN/GlobSpec.pm=>q[$(INST_LIBDIR)/Git/SVN/GlobSpec.pm], Git/SVN/Log.pm=>q[$(INST_LIBDIR)/Git/SVN/Log.pm], Git/SVN/Ra.pm=>q[$(INST_LIBDIR)/Git/SVN/Ra.pm], Git/IndexInfo.pm=>q[$(INST_LIBDIR)/Git/IndexInfo.pm], Git.pm=>q[$(INST_LIBDIR)/Git.pm], Git/I18N.pm=>q[$(INST_LIBDIR)/Git/I18N.pm], Git/SVN/Migration.pm=>q[$(INST_LIBDIR)/Git/SVN/Migration.pm], Git/SVN/Memoize/YAML.pm=>q[$(INST_LIBDIR)/Git/SVN/Memoize/YAML.pm], Git/SVN/Prompt.pm=>q[$(INST_LIBDIR)/Git/SVN/Prompt.pm], Git/SVN/Utils.pm=>q[$(INST_LIBDIR)/Git/SVN/Utils.pm], Git/SVN/Fetcher.pm=>q[$(INST_LIBDIR)/Git/SVN/Fetcher.pm] }
+#     PM => { Git/SVN/Editor.pm=>q[$(INST_LIBDIR)/Git/SVN/Editor.pm], Git/SVN/GlobSpec.pm=>q[$(INST_LIBDIR)/Git/SVN/GlobSpec.pm], Git/SVN/Migration.pm=>q[$(INST_LIBDIR)/Git/SVN/Migration.pm], Git.pm=>q[$(INST_LIBDIR)/Git.pm], Git/SVN/Utils.pm=>q[$(INST_LIBDIR)/Git/SVN/Utils.pm], Git/SVN/Ra.pm=>q[$(INST_LIBDIR)/Git/SVN/Ra.pm], Git/SVN/Memoize/YAML.pm=>q[$(INST_LIBDIR)/Git/SVN/Memoize/YAML.pm], Git/I18N.pm=>q[$(INST_LIBDIR)/Git/I18N.pm], Git/SVN.pm=>q[$(INST_LIBDIR)/Git/SVN.pm], Git/SVN/Prompt.pm=>q[$(INST_LIBDIR)/Git/SVN/Prompt.pm], Git/SVN/Fetcher.pm=>q[$(INST_LIBDIR)/Git/SVN/Fetcher.pm], Git/IndexInfo.pm=>q[$(INST_LIBDIR)/Git/IndexInfo.pm], Git/SVN/Log.pm=>q[$(INST_LIBDIR)/Git/SVN/Log.pm] }
 #     PM_FILTER => q[$(PERL) -pe "s<\Q++LOCALEDIR++\E></usr/local/share/locale>"]
 #     PREREQ_PM => {  }
 #     TEST_REQUIRES => {  }
 #     VERSION_FROM => q[Git.pm]
 
 # --- MakeMaker post_initialize section:
@@ -204,38 +204,38 @@
 	Git/SVN/Memoize/YAML.pm \
 	Git/SVN/Migration.pm \
 	Git/SVN/Prompt.pm \
 	Git/SVN/Ra.pm \
 	Git/SVN/Utils.pm
 
-PM_TO_BLIB = Git/SVN.pm \
-	$(INST_LIBDIR)/Git/SVN.pm \
-	Git/SVN/Editor.pm \
+PM_TO_BLIB = Git/SVN/Editor.pm \
 	$(INST_LIBDIR)/Git/SVN/Editor.pm \
 	Git/SVN/GlobSpec.pm \
 	$(INST_LIBDIR)/Git/SVN/GlobSpec.pm \
-	Git/SVN/Log.pm \
-	$(INST_LIBDIR)/Git/SVN/Log.pm \
-	Git/SVN/Ra.pm \
-	$(INST_LIBDIR)/Git/SVN/Ra.pm \
-	Git/IndexInfo.pm \
-	$(INST_LIBDIR)/Git/IndexInfo.pm \
-	Git.pm \
-	$(INST_LIBDIR)/Git.pm \
-	Git/I18N.pm \
-	$(INST_LIBDIR)/Git/I18N.pm \
 	Git/SVN/Migration.pm \
 	$(INST_LIBDIR)/Git/SVN/Migration.pm \
+	Git.pm \
+	$(INST_LIBDIR)/Git.pm \
+	Git/SVN/Utils.pm \
+	$(INST_LIBDIR)/Git/SVN/Utils.pm \
+	Git/SVN/Ra.pm \
+	$(INST_LIBDIR)/Git/SVN/Ra.pm \
 	Git/SVN/Memoize/YAML.pm \
 	$(INST_LIBDIR)/Git/SVN/Memoize/YAML.pm \
+	Git/I18N.pm \
+	$(INST_LIBDIR)/Git/I18N.pm \
+	Git/SVN.pm \
+	$(INST_LIBDIR)/Git/SVN.pm \
 	Git/SVN/Prompt.pm \
 	$(INST_LIBDIR)/Git/SVN/Prompt.pm \
-	Git/SVN/Utils.pm \
-	$(INST_LIBDIR)/Git/SVN/Utils.pm \
 	Git/SVN/Fetcher.pm \
-	$(INST_LIBDIR)/Git/SVN/Fetcher.pm
+	$(INST_LIBDIR)/Git/SVN/Fetcher.pm \
+	Git/IndexInfo.pm \
+	$(INST_LIBDIR)/Git/IndexInfo.pm \
+	Git/SVN/Log.pm \
+	$(INST_LIBDIR)/Git/SVN/Log.pm
 
 
 # --- MakeMaker platform_constants section:
 MM_Unix_VERSION = 6.66
 PERL_MALLOC_DEF = -DPERL_EXTMALLOC_DEF -Dmalloc=Perl_malloc -Dfree=Perl_mfree -Drealloc=Perl_realloc -Dcalloc=Perl_calloc
 
@@ -454,29 +454,29 @@
 
 POD2MAN_EXE = $(PERLRUN) "-MExtUtils::Command::MM" -e pod2man "--"
 POD2MAN = $(POD2MAN_EXE)
 
 
 manifypods : pure_all  \
+	Git.pm \
+	Git/SVN/Utils.pm \
 	Git/SVN/Editor.pm \
+	Git/SVN/Prompt.pm \
 	Git/SVN/Ra.pm \
 	Git/SVN/Memoize/YAML.pm \
-	Git/SVN/Prompt.pm \
-	Git.pm \
 	Git/I18N.pm \
-	Git/SVN/Fetcher.pm \
-	Git/SVN/Utils.pm
+	Git/SVN/Fetcher.pm
 	$(NOECHO) $(POD2MAN) --section=$(MAN3EXT) --perm_rw=$(PERM_RW) \
+	  Git.pm $(INST_MAN3DIR)/Git.$(MAN3EXT) \
+	  Git/SVN/Utils.pm $(INST_MAN3DIR)/Git::SVN::Utils.$(MAN3EXT) \
 	  Git/SVN/Editor.pm $(INST_MAN3DIR)/Git::SVN::Editor.$(MAN3EXT) \
+	  Git/SVN/Prompt.pm $(INST_MAN3DIR)/Git::SVN::Prompt.$(MAN3EXT) \
 	  Git/SVN/Ra.pm $(INST_MAN3DIR)/Git::SVN::Ra.$(MAN3EXT) \
 	  Git/SVN/Memoize/YAML.pm $(INST_MAN3DIR)/Git::SVN::Memoize::YAML.$(MAN3EXT) \
-	  Git/SVN/Prompt.pm $(INST_MAN3DIR)/Git::SVN::Prompt.$(MAN3EXT) \
-	  Git.pm $(INST_MAN3DIR)/Git.$(MAN3EXT) \
 	  Git/I18N.pm $(INST_MAN3DIR)/Git::I18N.$(MAN3EXT) \
-	  Git/SVN/Fetcher.pm $(INST_MAN3DIR)/Git::SVN::Fetcher.$(MAN3EXT) \
-	  Git/SVN/Utils.pm $(INST_MAN3DIR)/Git::SVN::Utils.$(MAN3EXT) 
+	  Git/SVN/Fetcher.pm $(INST_MAN3DIR)/Git::SVN::Fetcher.$(MAN3EXT) 
 
 
 
 
 # --- MakeMaker processPL section:
 
@@ -497,28 +497,28 @@
 
 # Delete temporary files but do not touch installed files. We don't delete
 # the Makefile here so a later make realclean still has a makefile to use.
 
 clean :: clean_subdirs
 	- $(RM_F) \
-	  core.*perl.*.? core \
-	  $(BASEEXT).def $(INST_ARCHAUTODIR)/extralibs.ld \
-	  pm_to_blib blibdirs.ts \
-	  MYMETA.json *perl.core \
-	  $(MAKE_APERL_FILE) *$(LIB_EXT) \
-	  MYMETA.yml $(BASEEXT).x \
-	  perlmain.c core.[0-9][0-9][0-9][0-9][0-9] \
-	  core.[0-9] lib$(BASEEXT).def \
-	  core.[0-9][0-9][0-9] perl \
-	  perl.exe core.[0-9][0-9][0-9][0-9] \
-	  $(BOOTSTRAP) $(BASEEXT).exp \
-	  $(BASEEXT).bso perl$(EXE_EXT) \
-	  so_locations *$(OBJ_EXT) \
-	  mon.out pm_to_blib.ts \
-	  tmon.out core.[0-9][0-9] \
-	  $(INST_ARCHAUTODIR)/extralibs.all 
+	  pm_to_blib $(BASEEXT).def \
+	  blibdirs.ts perlmain.c \
+	  perl core.[0-9][0-9][0-9][0-9][0-9] \
+	  *perl.core perl$(EXE_EXT) \
+	  lib$(BASEEXT).def core.[0-9][0-9] \
+	  core.[0-9] perl.exe \
+	  $(BASEEXT).bso $(INST_ARCHAUTODIR)/extralibs.ld \
+	  MYMETA.json MYMETA.yml \
+	  $(INST_ARCHAUTODIR)/extralibs.all *$(OBJ_EXT) \
+	  core mon.out \
+	  so_locations tmon.out \
+	  core.[0-9][0-9][0-9] core.*perl.*.? \
+	  core.[0-9][0-9][0-9][0-9] pm_to_blib.ts \
+	  $(BOOTSTRAP) $(MAKE_APERL_FILE) \
+	  $(BASEEXT).x *$(LIB_EXT) \
+	  $(BASEEXT).exp 
 	- $(RM_RF) \
 	  blib 
 	- $(MV) $(FIRST_MAKEFILE) $(MAKEFILE_OLD) $(DEV_NULL)
 
 
 # --- MakeMaker realclean_subdirs section:
@@ -527,13 +527,13 @@
 
 
 # --- MakeMaker realclean section:
 # Delete temporary files (via clean) and also delete dist files
 realclean purge ::  clean realclean_subdirs
 	- $(RM_F) \
-	  $(FIRST_MAKEFILE) $(MAKEFILE_OLD) 
+	  $(MAKEFILE_OLD) $(FIRST_MAKEFILE) 
 	- $(RM_RF) \
 	  $(DISTVNAME) 
 
 
 # --- MakeMaker metafile section:
 metafile : create_distdir
@@ -884,25 +884,25 @@
 
 
 # --- MakeMaker pm_to_blib section:
 
 pm_to_blib : $(FIRST_MAKEFILE) $(TO_INST_PM)
 	$(NOECHO) $(ABSPERLRUN) -MExtUtils::Install -e 'pm_to_blib({@ARGV}, '\''$(INST_LIB)/auto'\'', q[$(PM_FILTER)], '\''$(PERM_DIR)'\'')' -- \
-	  Git/SVN.pm $(INST_LIBDIR)/Git/SVN.pm \
 	  Git/SVN/Editor.pm $(INST_LIBDIR)/Git/SVN/Editor.pm \
 	  Git/SVN/GlobSpec.pm $(INST_LIBDIR)/Git/SVN/GlobSpec.pm \
-	  Git/SVN/Log.pm $(INST_LIBDIR)/Git/SVN/Log.pm \
-	  Git/SVN/Ra.pm $(INST_LIBDIR)/Git/SVN/Ra.pm \
-	  Git/IndexInfo.pm $(INST_LIBDIR)/Git/IndexInfo.pm \
-	  Git.pm $(INST_LIBDIR)/Git.pm \
-	  Git/I18N.pm $(INST_LIBDIR)/Git/I18N.pm \
 	  Git/SVN/Migration.pm $(INST_LIBDIR)/Git/SVN/Migration.pm \
+	  Git.pm $(INST_LIBDIR)/Git.pm \
+	  Git/SVN/Utils.pm $(INST_LIBDIR)/Git/SVN/Utils.pm \
+	  Git/SVN/Ra.pm $(INST_LIBDIR)/Git/SVN/Ra.pm \
 	  Git/SVN/Memoize/YAML.pm $(INST_LIBDIR)/Git/SVN/Memoize/YAML.pm \
+	  Git/I18N.pm $(INST_LIBDIR)/Git/I18N.pm \
+	  Git/SVN.pm $(INST_LIBDIR)/Git/SVN.pm \
 	  Git/SVN/Prompt.pm $(INST_LIBDIR)/Git/SVN/Prompt.pm \
-	  Git/SVN/Utils.pm $(INST_LIBDIR)/Git/SVN/Utils.pm \
-	  Git/SVN/Fetcher.pm $(INST_LIBDIR)/Git/SVN/Fetcher.pm 
+	  Git/SVN/Fetcher.pm $(INST_LIBDIR)/Git/SVN/Fetcher.pm \
+	  Git/IndexInfo.pm $(INST_LIBDIR)/Git/IndexInfo.pm \
+	  Git/SVN/Log.pm $(INST_LIBDIR)/Git/SVN/Log.pm 
 	$(NOECHO) $(TOUCH) pm_to_blib
 
 
 # --- MakeMaker selfdocument section:
 
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pkt-line.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pkt-line.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pkt-line.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pkt-line.c	2015-02-06 05:40:08.000000000 +0800
@@ -61,50 +61,51 @@
 {
 	packet_trace("0000", 4, 1);
 	strbuf_add(buf, "0000", 4);
 }
 
 #define hex(a) (hexchar[(a) & 15])
-static char buffer[1000];
-static unsigned format_packet(const char *fmt, va_list args)
+static void format_packet(struct strbuf *out, const char *fmt, va_list args)
 {
 	static char hexchar[] = "0123456789abcdef";
-	unsigned n;
+	size_t orig_len, n;
 
-	n = vsnprintf(buffer + 4, sizeof(buffer) - 4, fmt, args);
-	if (n >= sizeof(buffer)-4)
+	orig_len = out->len;
+	strbuf_addstr(out, "0000");
+	strbuf_vaddf(out, fmt, args);
+	n = out->len - orig_len;
+
+	if (n > LARGE_PACKET_MAX)
 		die("protocol error: impossibly long line");
-	n += 4;
-	buffer[0] = hex(n >> 12);
-	buffer[1] = hex(n >> 8);
-	buffer[2] = hex(n >> 4);
-	buffer[3] = hex(n);
-	packet_trace(buffer+4, n-4, 1);
-	return n;
+
+	out->buf[orig_len + 0] = hex(n >> 12);
+	out->buf[orig_len + 1] = hex(n >> 8);
+	out->buf[orig_len + 2] = hex(n >> 4);
+	out->buf[orig_len + 3] = hex(n);
+	packet_trace(out->buf + orig_len + 4, n - 4, 1);
 }
 
 void packet_write(int fd, const char *fmt, ...)
 {
+	static struct strbuf buf = STRBUF_INIT;
 	va_list args;
-	unsigned n;
 
+	strbuf_reset(&buf);
 	va_start(args, fmt);
-	n = format_packet(fmt, args);
+	format_packet(&buf, fmt, args);
 	va_end(args);
-	write_or_die(fd, buffer, n);
+	write_or_die(fd, buf.buf, buf.len);
 }
 
 void packet_buf_write(struct strbuf *buf, const char *fmt, ...)
 {
 	va_list args;
-	unsigned n;
 
 	va_start(args, fmt);
-	n = format_packet(fmt, args);
+	format_packet(buf, fmt, args);
 	va_end(args);
-	strbuf_add(buf, buffer, n);
 }
 
 static int get_packet_data(int fd, char **src_buf, size_t *src_size,
 			   void *dst, unsigned size, int options)
 {
 	ssize_t ret;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pkt-line.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pkt-line.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pkt-line.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pkt-line.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/po/build/locale/ca/LC_MESSAGES/git.mo and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/po/build/locale/ca/LC_MESSAGES/git.mo differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/po/build/locale/de/LC_MESSAGES/git.mo and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/po/build/locale/de/LC_MESSAGES/git.mo differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/po/build/locale/fr/LC_MESSAGES/git.mo and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/po/build/locale/fr/LC_MESSAGES/git.mo differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/po/build/locale/sv/LC_MESSAGES/git.mo and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/po/build/locale/sv/LC_MESSAGES/git.mo differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/po/build/locale/vi/LC_MESSAGES/git.mo and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/po/build/locale/vi/LC_MESSAGES/git.mo differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/po/build/locale/zh_CN/LC_MESSAGES/git.mo and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/po/build/locale/zh_CN/LC_MESSAGES/git.mo differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/po/ca.po /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/po/ca.po
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/po/ca.po	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/po/ca.po	2015-02-06 05:40:08.000000000 +0800
@@ -4,214 +4,218 @@
 # Alex Henrie <alexhenrie24@gmail.com>, 2014.
 #
 msgid ""
 msgstr ""
 "Project-Id-Version: Git\n"
 "Report-Msgid-Bugs-To: Git Mailing List <git@vger.kernel.org>\n"
-"POT-Creation-Date: 2014-11-20 09:42+0800\n"
-"PO-Revision-Date: 2014-11-20 16:10+0800\n"
+"POT-Creation-Date: 2015-01-18 11:24+0800\n"
+"PO-Revision-Date: 2015-01-30 15:01-0700\n"
 "Last-Translator: Alex Henrie <alexhenrie24@gmail.com>\n"
 "Language-Team: Catalan\n"
 "Language: ca\n"
 "MIME-Version: 1.0\n"
 "Content-Type: text/plain; charset=UTF-8\n"
 "Content-Transfer-Encoding: 8bit\n"
 "Plural-Forms: nplurals=2; plural=(n != 1);\n"
-"X-Generator: Poedit 1.6.10\n"
+"X-Generator: Poedit 1.7.3\n"
 
 #: advice.c:55
 #, c-format
 msgid "hint: %.*s\n"
-msgstr "indirecta: %.*s\n"
+msgstr "pista: %.*s\n"
 
 #: advice.c:88
 msgid ""
 "Fix them up in the work tree, and then use 'git add/rm <file>'\n"
 "as appropriate to mark resolution and make a commit."
 msgstr ""
 "Arregleu-los en l'arbre de treball, i després useu\n"
 "'git add/rm <fitxer>' segons sigui apropiat per a marcar la\n"
 "resolució i feu una comissió."
 
 #: archive.c:11
 msgid "git archive [options] <tree-ish> [<path>...]"
-msgstr "git archive [opcions] <arbre> [<ruta>...]"
+msgstr "git archive [opcions] <arbre> [<camí>...]"
 
 #: archive.c:12
 msgid "git archive --list"
 msgstr "git archive --list"
 
 #: archive.c:13
 msgid ""
 "git archive --remote <repo> [--exec <cmd>] [options] <tree-ish> [<path>...]"
 msgstr ""
-"git archive --remote <dipòsit> [--exec <ordre>] [opcions] <arbre> [<ruta>...]"
+"git archive --remote <dipòsit> [--exec <ordre>] [opcions] <arbre> [<camí>...]"
 
 #: archive.c:14
 msgid "git archive --remote <repo> [--exec <cmd>] --list"
 msgstr "git archive --remote <dipòsit> [--exec <ordre>] --list"
 
-#: archive.c:334 builtin/add.c:137 builtin/add.c:427 builtin/rm.c:328
+#: archive.c:342 builtin/add.c:137 builtin/add.c:427 builtin/rm.c:328
 #, c-format
 msgid "pathspec '%s' did not match any files"
-msgstr "L'especificació de ruta '%s' no ha concordat amb cap fitxer"
+msgstr "L'especificació de camí '%s' no ha coincidit amb cap fitxer"
 
-#: archive.c:419
+#: archive.c:427
 msgid "fmt"
 msgstr "format"
 
-#: archive.c:419
+#: archive.c:427
 msgid "archive format"
 msgstr "format d'arxiu"
 
-#: archive.c:420 builtin/log.c:1204
+#: archive.c:428 builtin/log.c:1204
 msgid "prefix"
 msgstr "prefix"
 
-#: archive.c:421
+#: archive.c:429
 msgid "prepend prefix to each pathname in the archive"
-msgstr "anteposa el prefix a cada nom de ruta en l'arxiu"
+msgstr "anteposa el prefix a cada nom de camí en l'arxiu"
 
-#: archive.c:422 builtin/archive.c:88 builtin/blame.c:2517
+#: archive.c:430 builtin/archive.c:88 builtin/blame.c:2517
 #: builtin/blame.c:2518 builtin/config.c:57 builtin/fast-export.c:986
 #: builtin/fast-export.c:988 builtin/grep.c:712 builtin/hash-object.c:101
-#: builtin/ls-files.c:489 builtin/ls-files.c:492 builtin/notes.c:411
-#: builtin/notes.c:568 builtin/read-tree.c:109 parse-options.h:151
+#: builtin/ls-files.c:489 builtin/ls-files.c:492 builtin/notes.c:394
+#: builtin/notes.c:557 builtin/read-tree.c:109 parse-options.h:151
 msgid "file"
 msgstr "fitxer"
 
-#: archive.c:423 builtin/archive.c:89
+#: archive.c:431 builtin/archive.c:89
 msgid "write the archive to this file"
 msgstr "escriu l'arxiu a aquest fitxer"
 
-#: archive.c:425
+#: archive.c:433
 msgid "read .gitattributes in working directory"
 msgstr "llegeix .gitattributes en el directori de treball"
 
-#: archive.c:426
+#: archive.c:434
 msgid "report archived files on stderr"
 msgstr "informa de fitxers arxivats en stderr"
 
-#: archive.c:427
+#: archive.c:435
 msgid "store only"
 msgstr "només emmagatzemar"
 
-#: archive.c:428
+#: archive.c:436
 msgid "compress faster"
 msgstr "comprimeix més ràpid"
 
-#: archive.c:436
+#: archive.c:444
 msgid "compress better"
 msgstr "comprimeix millor"
 
-#: archive.c:439
+#: archive.c:447
 msgid "list supported archive formats"
-msgstr "allista els formats d'arxiu suportats"
+msgstr "allista els formats d'arxiu admesos"
 
-#: archive.c:441 builtin/archive.c:90 builtin/clone.c:85
+#: archive.c:449 builtin/archive.c:90 builtin/clone.c:86
 msgid "repo"
 msgstr "dipòsit"
 
-#: archive.c:442 builtin/archive.c:91
+#: archive.c:450 builtin/archive.c:91
 msgid "retrieve the archive from remote repository <repo>"
 msgstr "recupera l'arxiu del dipòsit remot <dipòsit>"
 
-#: archive.c:443 builtin/archive.c:92 builtin/notes.c:490
+#: archive.c:451 builtin/archive.c:92 builtin/notes.c:478
 msgid "command"
 msgstr "ordre"
 
-#: archive.c:444 builtin/archive.c:93
+#: archive.c:452 builtin/archive.c:93
 msgid "path to the remote git-upload-archive command"
-msgstr "ruta a l'ordre git-upload-archive remot"
+msgstr "camí a l'ordre git-upload-archive remot"
 
 #: attr.c:258
 msgid ""
 "Negative patterns are ignored in git attributes\n"
 "Use '\\!' for literal leading exclamation."
 msgstr ""
-"Els patrons negatius s'ignoren en els atributes de git\n"
+"Els patrons negatius s'ignoren en els atributs de git\n"
 "Useu '\\!' per exclamació capdavantera literal."
 
 #: branch.c:60
 #, c-format
 msgid "Not setting branch %s as its own upstream."
-msgstr "No establint la rama %s com a la seva pròpia font."
+msgstr "No establint la branca %s com a la seva pròpia font."
 
 #: branch.c:83
 #, c-format
 msgid "Branch %s set up to track remote branch %s from %s by rebasing."
 msgstr ""
-"La rama %s està configurada per a seguir la rama remota %s de %s per rebasar."
+"La branca %s està configurada per a seguir la branca remota %s de %s per "
+"rebasar."
 
 #: branch.c:84
 #, c-format
 msgid "Branch %s set up to track remote branch %s from %s."
-msgstr "La rama %s està configurada per a seguir la rama remota %s de %s."
+msgstr "La branca %s està configurada per a seguir la branca remota %s de %s."
 
 #: branch.c:88
 #, c-format
 msgid "Branch %s set up to track local branch %s by rebasing."
-msgstr "La rama %s està configurada per a seguir la rama local %s per rebasar."
+msgstr ""
+"La branca %s està configurada per a seguir la branca local %s per rebasar."
 
 #: branch.c:89
 #, c-format
 msgid "Branch %s set up to track local branch %s."
-msgstr "La rama %s està configurada per a seguir la rama local %s."
+msgstr "La branca %s està configurada per a seguir la branca local %s."
 
 #: branch.c:94
 #, c-format
 msgid "Branch %s set up to track remote ref %s by rebasing."
 msgstr ""
-"La rama %s està configurada per a seguir la referència remota %s per rebasar."
+"La branca %s està configurada per a seguir la referència remota %s per "
+"rebasar."
 
 #: branch.c:95
 #, c-format
 msgid "Branch %s set up to track remote ref %s."
-msgstr "La rama %s està configurada per a seguir la referència remota %s."
+msgstr "La branca %s està configurada per a seguir la referència remota %s."
 
 #: branch.c:99
 #, c-format
 msgid "Branch %s set up to track local ref %s by rebasing."
 msgstr ""
-"La rama %s està configurada per a seguir la referència local %s per rebasar."
+"La branca %s està configurada per a seguir la referència local %s per "
+"rebasar."
 
 #: branch.c:100
 #, c-format
 msgid "Branch %s set up to track local ref %s."
-msgstr "La rama %s està configurada per a seguir la referència local %s."
+msgstr "La branca %s està configurada per a seguir la referència local %s."
 
 #: branch.c:133
 #, c-format
 msgid "Not tracking: ambiguous information for ref %s"
 msgstr "No seguint: informació ambigua per a la referència %s"
 
 #: branch.c:162
 #, c-format
 msgid "'%s' is not a valid branch name."
-msgstr "'%s' no és un nom de rama vàlid."
+msgstr "'%s' no és un nom de branca vàlid."
 
 #: branch.c:167
 #, c-format
 msgid "A branch named '%s' already exists."
-msgstr "Una rama amb nom '%s' ja existeix."
+msgstr "Una branca amb nom '%s' ja existeix."
 
 #: branch.c:175
 msgid "Cannot force update the current branch."
-msgstr "No es pot actualitzar la rama actual a la força."
+msgstr "No es pot actualitzar la branca actual a la força."
 
 #: branch.c:195
 #, c-format
 msgid "Cannot setup tracking information; starting point '%s' is not a branch."
 msgstr ""
 "No es pot configurar la informació de seguiment; el punt inicial '%s' no és "
-"una rama."
+"una branca."
 
 #: branch.c:197
 #, c-format
 msgid "the requested upstream branch '%s' does not exist"
-msgstr "la rama font demanada '%s' no existeix"
+msgstr "la branca font demanada '%s' no existeix"
 
 #: branch.c:199
 msgid ""
 "\n"
 "If you are planning on basing your work on an upstream\n"
 "branch that already exists at the remote, you may need to\n"
@@ -219,20 +223,20 @@
 "\n"
 "If you are planning to push out a new local branch that\n"
 "will track its remote counterpart, you may want to use\n"
 "\"git push -u\" to set the upstream config as you push."
 msgstr ""
 "\n"
-"Si planeu basar el teu treball en una rama font que ja\n"
-"existeix al remot, pot que necessiteu executar\n"
-"\"git fetch\" per a obtenir-la.\n"
-"\n"
-"Si planeu pujar una rama local nova que seguirà la seva\n"
-"contrapart remota, pot que voleu usar\n"
-"\"git push -u\" per establir la configuració font mentre\n"
-"pugeu."
+"Si teniu pensat basar el vostre treball en una branca\n"
+"font que ja existeix al remot, pot ser que necessiteu\n"
+"executar \"git fetch\" per a obtenir-la.\n"
+"\n"
+"Si teniu pensat pujar una branca local nova que seguirà\n"
+"la seva contrapart remota, pot ser que vulgueu usar\n"
+"\"git push -u\" per a establir la configuració font\n"
+"mentre pugeu."
 
 #: branch.c:243
 #, c-format
 msgid "Not a valid object name: '%s'."
 msgstr "No és un nom d'objecte vàlid: '%s'."
 
@@ -246,52 +250,52 @@
 msgid "Not a valid branch point: '%s'."
 msgstr "No és un punt de ramificació vàlid: '%s'."
 
 #: bundle.c:34
 #, c-format
 msgid "'%s' does not look like a v2 bundle file"
-msgstr "'%s' no sembla a un fitxer d'embolic v2"
+msgstr "'%s' no sembla un fitxer de farcell v2"
 
 #: bundle.c:61
 #, c-format
 msgid "unrecognized header: %s%s (%d)"
 msgstr "capçalera no reconeguda: %s%s (%d)"
 
-#: bundle.c:87 builtin/commit.c:788
+#: bundle.c:87 builtin/commit.c:770
 #, c-format
 msgid "could not open '%s'"
 msgstr "no s'ha pogut obrir '%s'"
 
 #: bundle.c:139
 msgid "Repository lacks these prerequisite commits:"
 msgstr "Al dipòsit li manquen aquestes comissions prerequisits:"
 
-#: bundle.c:163 sequencer.c:641 sequencer.c:1096 builtin/blame.c:2706
-#: builtin/branch.c:652 builtin/commit.c:1085 builtin/log.c:330
-#: builtin/log.c:823 builtin/log.c:1432 builtin/log.c:1669 builtin/merge.c:357
+#: bundle.c:163 sequencer.c:645 sequencer.c:1100 builtin/blame.c:2706
+#: builtin/branch.c:652 builtin/commit.c:1049 builtin/log.c:330
+#: builtin/log.c:823 builtin/log.c:1432 builtin/log.c:1669 builtin/merge.c:358
 #: builtin/shortlog.c:158
 msgid "revision walk setup failed"
 msgstr "la configuració del passeig per revisions ha fallat"
 
 #: bundle.c:185
 #, c-format
 msgid "The bundle contains this ref:"
 msgid_plural "The bundle contains these %d refs:"
-msgstr[0] "L'embolic conté aquesta referència:"
-msgstr[1] "L'embolic conté aquestes %d referències:"
+msgstr[0] "El farcell conté aquesta referència:"
+msgstr[1] "El farcell conté aquestes %d referències:"
 
 #: bundle.c:192
 msgid "The bundle records a complete history."
-msgstr "L'embolic registra una història completa."
+msgstr "El farcell registra una història completa."
 
 #: bundle.c:194
 #, c-format
 msgid "The bundle requires this ref:"
 msgid_plural "The bundle requires these %d refs:"
-msgstr[0] "L'embolic requereix aquesta referència:"
-msgstr[1] "L'embolic requereix aquestes %d referències:"
+msgstr[0] "El farcell requereix aquesta referència:"
+msgstr[1] "El farcell requereix aquestes %d referències:"
 
 #: bundle.c:251
 msgid "Could not spawn pack-objects"
 msgstr "No s'ha pogut executar el pack-objects"
 
 #: bundle.c:269
@@ -311,27 +315,27 @@
 #, c-format
 msgid "unrecognized argument: %s"
 msgstr "paràmetre no reconegut: %s"
 
 #: bundle.c:444
 msgid "Refusing to create empty bundle."
-msgstr "Refusant crear un embolic buit."
+msgstr "Refusant crear un farcell buit."
 
 #: bundle.c:454
 #, c-format
 msgid "cannot create '%s'"
 msgstr "no es pot crear '%s'"
 
 #: bundle.c:475
 msgid "index-pack died"
 msgstr "L'index-pack s'ha mort"
 
-#: color.c:157
+#: color.c:259
 #, c-format
 msgid "invalid color value: %.*s"
-msgstr "valor de color invàlid: %.*s"
+msgstr "valor de color no vàlid: %.*s"
 
 #: commit.c:40
 #, c-format
 msgid "could not parse %s"
 msgstr "no s'ha pogut analitzar %s"
 
@@ -369,34 +373,33 @@
 msgid "bad zlib compression level %d"
 msgstr "nivell de compressió de zlib dolent %d"
 
 #: config.c:885
 #, c-format
 msgid "invalid mode for object creation: %s"
-msgstr "mode de creació d'objecte invàlid: %s"
+msgstr "mode de creació d'objecte no vàlid: %s"
 
-#: config.c:1201
+#: config.c:1211
 msgid "unable to parse command-line config"
-msgstr "incapaç de analitzar la configuració de la línia d'ordres"
+msgstr "no s'ha pogut analitzar la configuració de la línia d'ordres"
 
-#: config.c:1262
+#: config.c:1272
 msgid "unknown error occured while reading the configuration files"
-msgstr ""
-"s'ha ocorregut un error desconegut en llegir els fitxers de configuració"
+msgstr "ha ocorregut un error desconegut en llegir els fitxers de configuració"
 
-#: config.c:1586
+#: config.c:1596
 #, c-format
 msgid "unable to parse '%s' from command-line config"
-msgstr "incapaç d'analitzar '%s' de la configuració de la línia d'ordres"
+msgstr "no s'ha pogut analitzar '%s' de la configuració de la línia d'ordres"
 
-#: config.c:1588
+#: config.c:1598
 #, c-format
 msgid "bad config variable '%s' in file '%s' at line %d"
-msgstr "variable de configuració dolent '%s' en el fitxer '%s' a la línia %d"
+msgstr "variable de configuració dolenta '%s' en el fitxer '%s' a la línia %d"
 
-#: config.c:1647
+#: config.c:1657
 #, c-format
 msgid "%s has multiple values"
 msgstr "%s té múltiples valors"
 
 #: connected.c:69
 msgid "Could not run 'git rev-list'"
@@ -467,14 +470,14 @@
 
 #. TRANSLATORS: "%s" is "<n> years"
 #: date.c:149
 #, c-format
 msgid "%s, %lu month ago"
 msgid_plural "%s, %lu months ago"
-msgstr[0] "%s, fa %lu mes"
-msgstr[1] "%s, fa %lu mesos"
+msgstr[0] "fa %s i %lu mes"
+msgstr[1] "fa %s i %lu mesos"
 
 #: date.c:154 date.c:159
 #, c-format
 msgid "%lu year ago"
 msgid_plural "%lu years ago"
 msgstr[0] "fa %lu any"
@@ -484,13 +487,13 @@
 #, c-format
 msgid "failed to read orderfile '%s'"
 msgstr "s'ha fallat en llegir el fitxer d'ordres '%s'"
 
 #: diffcore-rename.c:516
 msgid "Performing inexact rename detection"
-msgstr "Realitzant detecció inexacte de canvis de nom"
+msgstr "Realitzant detecció inexacta de canvis de nom"
 
 #: diff.c:114
 #, c-format
 msgid "  Failed to parse dirstat cut-off percentage '%s'\n"
 msgstr "  S'ha fallat en analitzar el percentatge limitant de dirstat '%s'\n"
 
@@ -500,31 +503,31 @@
 msgstr "  Paràmetre de dirstat desconegut '%s'\n"
 
 #: diff.c:214
 #, c-format
 msgid "Unknown value for 'diff.submodule' config variable: '%s'"
 msgstr ""
-"Valor desconegut del variable de configuració de 'diff.submodule': '%s'"
+"Valor desconegut de la variable de configuració de 'diff.submodule': '%s'"
 
 #: diff.c:266
 #, c-format
 msgid ""
 "Found errors in 'diff.dirstat' config variable:\n"
 "%s"
 msgstr ""
-"Errors trobat en el variable de configuració 'diff.dirstat':\n"
+"Errors trobats en la variable de configuració 'diff.dirstat':\n"
 "%s"
 
 #: diff.c:2957
 #, c-format
 msgid "external diff died, stopping at %s"
 msgstr "El diff external s'ha mort, aturant a %s"
 
 #: diff.c:3352
 msgid "--follow requires exactly one pathspec"
-msgstr "--follow requereix exactament una especificació de ruta"
+msgstr "--follow requereix exactament una especificació de camí"
 
 #: diff.c:3515
 #, c-format
 msgid ""
 "Failed to parse --dirstat/-X option parameter:\n"
 "%s"
@@ -559,13 +562,13 @@
 msgid "failed writing detached signature to '%s': %s"
 msgstr "s'ha fallat en escriure la firma separada a '%s': %s"
 
 #: grep.c:1718
 #, c-format
 msgid "'%s': unable to read %s"
-msgstr "'%s': incapaç de llegir %s"
+msgstr "'%s': no s'ha pogut llegir %s"
 
 #: grep.c:1735
 #, c-format
 msgid "'%s': %s"
 msgstr "'%s': %s"
 
@@ -578,49 +581,49 @@
 #, c-format
 msgid "available git commands in '%s'"
 msgstr "ordres de git disponibles en '%s'"
 
 #: help.c:214
 msgid "git commands available from elsewhere on your $PATH"
-msgstr "ordres de git disponibles d'altres llocs en la vostra $PATH"
+msgstr "ordres de git disponibles d'altres llocs en el vostre $PATH"
 
 #: help.c:230
 msgid "The most commonly used git commands are:"
-msgstr "Els ordres de git més freqüentment usats són:"
+msgstr "Les ordres de git més freqüentment usades són:"
 
 #: help.c:289
 #, c-format
 msgid ""
 "'%s' appears to be a git command, but we were not\n"
 "able to execute it. Maybe git-%s is broken?"
 msgstr ""
-"'%s' sembla un ordre git, però no hem pogut\n"
-"executar-lo. Pot ser que git-%s està estropejat?"
+"'%s' sembla una ordre git, però no hem pogut\n"
+"executar-la. Pot ser que git-%s estigui estropejat?"
 
 #: help.c:346
 msgid "Uh oh. Your system reports no Git commands at all."
 msgstr "Ai. El vostre sistema no informa de cap ordre de Git."
 
 #: help.c:368
 #, c-format
 msgid ""
 "WARNING: You called a Git command named '%s', which does not exist.\n"
 "Continuing under the assumption that you meant '%s'"
 msgstr ""
-"AVÍS: Heu invocat un ordre de Git amb nom '%s', el qual no existeix.\n"
-"Continuant baix l'assumpció que volíeu dir '%s'"
+"AVÍS: Heu invocat una ordre de Git amb nom '%s', la qual no existeix.\n"
+"Continuant sota l'assumpció que volíeu dir '%s'"
 
 #: help.c:373
 #, c-format
 msgid "in %0.1f seconds automatically..."
 msgstr "en %0.1f segons automàticament..."
 
 #: help.c:380
 #, c-format
 msgid "git: '%s' is not a git command. See 'git --help'."
-msgstr "git: '%s' no és un ordre de git. Veu 'git --help'."
+msgstr "git: '%s' no és una ordre de git. Vegeu 'git --help'."
 
 #: help.c:384 help.c:444
 msgid ""
 "\n"
 "Did you mean this?"
 msgid_plural ""
@@ -635,308 +638,308 @@
 
 #: help.c:440
 #, c-format
 msgid "%s: %s - %s"
 msgstr "%s: %s - %s"
 
-#: lockfile.c:275
+#: lockfile.c:283
 msgid "BUG: reopen a lockfile that is still open"
 msgstr "BUG: reobrir un fitxer de bloqueig que encara està obert"
 
-#: lockfile.c:277
+#: lockfile.c:285
 msgid "BUG: reopen a lockfile that has been committed"
 msgstr "BUG: reobrir un fitxer de bloqueig que s'ha comès"
 
 #: merge.c:41
 msgid "failed to read the cache"
 msgstr "s'ha fallat en llegir la memòria cau"
 
-#: merge.c:94 builtin/checkout.c:356 builtin/checkout.c:562
-#: builtin/clone.c:659
+#: merge.c:94 builtin/checkout.c:374 builtin/checkout.c:580
+#: builtin/clone.c:662
 msgid "unable to write new index file"
-msgstr "incapaç d'escriure un fitxer d'índex nou"
+msgstr "no s'ha pogut escriure un fitxer d'índex nou"
 
 #: merge-recursive.c:189
 #, c-format
 msgid "(bad commit)\n"
 msgstr "(comissió dolenta)\n"
 
 #: merge-recursive.c:209
 #, c-format
 msgid "addinfo_cache failed for path '%s'"
-msgstr "addinfo_cache ha fallat per a la ruta '%s'"
+msgstr "addinfo_cache ha fallat per al camí '%s'"
 
 #: merge-recursive.c:270
 msgid "error building trees"
 msgstr "error en construir arbres"
 
-#: merge-recursive.c:691
+#: merge-recursive.c:688
 #, c-format
 msgid "failed to create path '%s'%s"
-msgstr "s'ha fallat en crear la ruta '%s' %s"
+msgstr "s'ha fallat en crear el camí '%s' %s"
 
-#: merge-recursive.c:702
+#: merge-recursive.c:699
 #, c-format
 msgid "Removing %s to make room for subdirectory\n"
-msgstr "Traient %s per a fer espai per al subdirectori\n"
+msgstr "Eliminant %s per a fer espai per al subdirectori\n"
 
-#: merge-recursive.c:716 merge-recursive.c:737
+#: merge-recursive.c:713 merge-recursive.c:734
 msgid ": perhaps a D/F conflict?"
 msgstr ": potser un conflicte D/F?"
 
-#: merge-recursive.c:727
+#: merge-recursive.c:724
 #, c-format
 msgid "refusing to lose untracked file at '%s'"
 msgstr "refusant perdre el fitxer no seguit a '%s'"
 
-#: merge-recursive.c:767
+#: merge-recursive.c:764
 #, c-format
 msgid "cannot read object %s '%s'"
 msgstr "no es pot llegir l'objecte %s '%s'"
 
-#: merge-recursive.c:769
+#: merge-recursive.c:766
 #, c-format
 msgid "blob expected for %s '%s'"
 msgstr "blob esperat per a %s '%s'"
 
-#: merge-recursive.c:792 builtin/clone.c:318
+#: merge-recursive.c:789 builtin/clone.c:321
 #, c-format
 msgid "failed to open '%s'"
 msgstr "s'ha fallat en obrir '%s'"
 
-#: merge-recursive.c:800
+#: merge-recursive.c:797
 #, c-format
 msgid "failed to symlink '%s'"
 msgstr "s'ha fallat en fer l'enllaç simbòlic '%s'"
 
-#: merge-recursive.c:803
+#: merge-recursive.c:800
 #, c-format
 msgid "do not know what to do with %06o %s '%s'"
 msgstr "no es sap què fer amb %06o %s '%s'"
 
-#: merge-recursive.c:941
+#: merge-recursive.c:938
 msgid "Failed to execute internal merge"
 msgstr "S'ha fallat en executar la fusió interna"
 
-#: merge-recursive.c:945
+#: merge-recursive.c:942
 #, c-format
 msgid "Unable to add %s to database"
-msgstr "Incapaç d'afegir %s a la base de dades"
+msgstr "no s'ha pogut afegir %s a la base de dades"
 
-#: merge-recursive.c:961
+#: merge-recursive.c:958
 msgid "unsupported object type in the tree"
-msgstr "tipus d'objecte no suportat en l'arbre"
+msgstr "tipus d'objecte no compatible en l'arbre"
 
-#: merge-recursive.c:1036 merge-recursive.c:1050
+#: merge-recursive.c:1033 merge-recursive.c:1047
 #, c-format
 msgid ""
 "CONFLICT (%s/delete): %s deleted in %s and %s in %s. Version %s of %s left "
 "in tree."
 msgstr ""
 "CONFLICTE: (%s/supressió): %s suprimit en %s i %s en %s. La versió %s de %s "
 "s'ha deixat en l'arbre."
 
-#: merge-recursive.c:1042 merge-recursive.c:1055
+#: merge-recursive.c:1039 merge-recursive.c:1052
 #, c-format
 msgid ""
 "CONFLICT (%s/delete): %s deleted in %s and %s in %s. Version %s of %s left "
 "in tree at %s."
 msgstr ""
 "CONFLICTE: (%s/supressió): %s suprimit en %s i %s en %s. La versió %s de %s "
 "s'ha deixat en l'arbre a %s."
 
-#: merge-recursive.c:1096
+#: merge-recursive.c:1093
 msgid "rename"
 msgstr "canvia de nom"
 
-#: merge-recursive.c:1096
+#: merge-recursive.c:1093
 msgid "renamed"
 msgstr "canviat de nom"
 
-#: merge-recursive.c:1152
+#: merge-recursive.c:1149
 #, c-format
 msgid "%s is a directory in %s adding as %s instead"
 msgstr "%s és un directori en %s; afegint com a %s en lloc"
 
-#: merge-recursive.c:1174
+#: merge-recursive.c:1171
 #, c-format
 msgid ""
 "CONFLICT (rename/rename): Rename \"%s\"->\"%s\" in branch \"%s\" rename \"%s"
 "\"->\"%s\" in \"%s\"%s"
 msgstr ""
 "CONFLICTE (canvi de nom/canvi de nom): Canvi de nom \"%s\"->\"%s\" en la "
-"rama \"%s\" canvi de nom \"%s\"->\"%s\" en \"%s\"%s"
+"branca \"%s\" canvi de nom \"%s\"->\"%s\" en \"%s\"%s"
 
-#: merge-recursive.c:1179
+#: merge-recursive.c:1176
 msgid " (left unresolved)"
 msgstr " (deixat sense resolució)"
 
-#: merge-recursive.c:1233
+#: merge-recursive.c:1230
 #, c-format
 msgid "CONFLICT (rename/rename): Rename %s->%s in %s. Rename %s->%s in %s"
 msgstr ""
 "CONFLICTE (canvi de nom/canvi de nom): Canvi de nom %s->%s en %s. Canvi de "
 "nom %s->%s en %s"
 
-#: merge-recursive.c:1263
+#: merge-recursive.c:1260
 #, c-format
 msgid "Renaming %s to %s and %s to %s instead"
-msgstr "Canviant el nom de %s a %s i %s a %s en lloc"
+msgstr "Canviant el nom de %s a %s i %s a %s en lloc d'això"
 
-#: merge-recursive.c:1462
+#: merge-recursive.c:1459
 #, c-format
 msgid "CONFLICT (rename/add): Rename %s->%s in %s. %s added in %s"
 msgstr ""
 "CONFLICTE (supressió/afegiment): Canvi de nom %s->%s en %s. %s afegit en %s"
 
-#: merge-recursive.c:1472
+#: merge-recursive.c:1469
 #, c-format
 msgid "Adding merged %s"
 msgstr "Afegint %s fusionat"
 
-#: merge-recursive.c:1477 merge-recursive.c:1675
+#: merge-recursive.c:1474 merge-recursive.c:1672
 #, c-format
 msgid "Adding as %s instead"
-msgstr "Afegint com a %s en lloc"
+msgstr "Afegint com a %s en lloc d'això"
 
-#: merge-recursive.c:1528
+#: merge-recursive.c:1525
 #, c-format
 msgid "cannot read object %s"
 msgstr "no es pot llegir l'objecte %s"
 
-#: merge-recursive.c:1531
+#: merge-recursive.c:1528
 #, c-format
 msgid "object %s is not a blob"
 msgstr "L'objecte %s no és un blob"
 
-#: merge-recursive.c:1579
+#: merge-recursive.c:1576
 msgid "modify"
 msgstr "modifica"
 
-#: merge-recursive.c:1579
+#: merge-recursive.c:1576
 msgid "modified"
 msgstr "modificat"
 
-#: merge-recursive.c:1589
+#: merge-recursive.c:1586
 msgid "content"
 msgstr "contingut"
 
-#: merge-recursive.c:1596
+#: merge-recursive.c:1593
 msgid "add/add"
 msgstr "afegiment/afegiment"
 
-#: merge-recursive.c:1630
+#: merge-recursive.c:1627
 #, c-format
 msgid "Skipped %s (merged same as existing)"
 msgstr "%s saltat (el fusionat és igual a l'existent)"
 
-#: merge-recursive.c:1644
+#: merge-recursive.c:1641
 #, c-format
 msgid "Auto-merging %s"
 msgstr "Autofusionant %s"
 
-#: merge-recursive.c:1648 git-submodule.sh:1150
+#: merge-recursive.c:1645 git-submodule.sh:1150
 msgid "submodule"
 msgstr "submòdul"
 
-#: merge-recursive.c:1649
+#: merge-recursive.c:1646
 #, c-format
 msgid "CONFLICT (%s): Merge conflict in %s"
 msgstr "CONFLICTE (%s): Conflicte de fusió en %s"
 
-#: merge-recursive.c:1735
+#: merge-recursive.c:1732
 #, c-format
 msgid "Removing %s"
-msgstr "Traient %s"
+msgstr "Eliminant %s"
 
-#: merge-recursive.c:1760
+#: merge-recursive.c:1757
 msgid "file/directory"
 msgstr "fitxer/directori"
 
-#: merge-recursive.c:1766
+#: merge-recursive.c:1763
 msgid "directory/file"
 msgstr "directori/fitxer"
 
-#: merge-recursive.c:1771
+#: merge-recursive.c:1768
 #, c-format
 msgid "CONFLICT (%s): There is a directory with name %s in %s. Adding %s as %s"
 msgstr ""
-"CONFLICTE (%s=: Hi ha un directori amb nom %s en %s. Afegint %s com a %s"
+"CONFLICTE (%s): Hi ha un directori amb nom %s en %s. Afegint %s com a %s"
 
-#: merge-recursive.c:1781
+#: merge-recursive.c:1778
 #, c-format
 msgid "Adding %s"
 msgstr "Afegint %s"
 
-#: merge-recursive.c:1798
+#: merge-recursive.c:1795
 msgid "Fatal merge failure, shouldn't happen."
 msgstr "Fallat de fusió fatal; això no ha de passar."
 
-#: merge-recursive.c:1817
+#: merge-recursive.c:1814
 msgid "Already up-to-date!"
 msgstr "Ja al dia!"
 
-#: merge-recursive.c:1826
+#: merge-recursive.c:1823
 #, c-format
 msgid "merging of trees %s and %s failed"
 msgstr "la fusió dels arbres %s i %s ha fallat"
 
-#: merge-recursive.c:1856
+#: merge-recursive.c:1853
 #, c-format
 msgid "Unprocessed path??? %s"
-msgstr "Ruta no processat??? %s"
+msgstr "Camí no processat??? %s"
 
-#: merge-recursive.c:1901
+#: merge-recursive.c:1898
 msgid "Merging:"
 msgstr "Fusionant:"
 
-#: merge-recursive.c:1914
+#: merge-recursive.c:1911
 #, c-format
 msgid "found %u common ancestor:"
 msgid_plural "found %u common ancestors:"
 msgstr[0] "s'ha trobat %u avantpassat:"
 msgstr[1] "s'han trobat %u avantpassats:"
 
-#: merge-recursive.c:1951
+#: merge-recursive.c:1948
 msgid "merge returned no commit"
 msgstr "la fusió no ha retornat cap comissió"
 
-#: merge-recursive.c:2008
+#: merge-recursive.c:2005
 #, c-format
 msgid "Could not parse object '%s'"
 msgstr "No s'ha pogut analitzar l'objecte '%s'"
 
-#: merge-recursive.c:2019 builtin/merge.c:666
+#: merge-recursive.c:2016 builtin/merge.c:667
 msgid "Unable to write index."
-msgstr "Incapaç d'escriure l'índex."
+msgstr "No s'ha pogut escriure l'índex."
 
 #: notes-utils.c:41
 msgid "Cannot commit uninitialized/unreferenced notes tree"
 msgstr "No es pot cometre un arbre de notes no inicialitzat / no referenciat"
 
-#: notes-utils.c:83
+#: notes-utils.c:82
 #, c-format
 msgid "Bad notes.rewriteMode value: '%s'"
 msgstr "Valor de notes.rewriteMode dolent: '%s'"
 
-#: notes-utils.c:93
+#: notes-utils.c:92
 #, c-format
 msgid "Refusing to rewrite notes in %s (outside of refs/notes/)"
 msgstr "Refusant reescriure les notes en %s (fora de refs/notes/)"
 
 #. TRANSLATORS: The first %s is the name of the
 #. environment variable, the second %s is its value
-#: notes-utils.c:120
+#: notes-utils.c:119
 #, c-format
 msgid "Bad %s value: '%s'"
 msgstr "Valor dolent de %s: '%s'"
 
 #: object.c:241
 #, c-format
 msgid "unable to parse object: %s"
-msgstr "incapaç d'analitzar l'objecte: %s"
+msgstr "no s'ha pogut analitzar l'objecte: %s"
 
 #: parse-options.c:546
 msgid "..."
 msgstr "..."
 
 #: parse-options.c:564
@@ -946,13 +949,13 @@
 
 #. TRANSLATORS: the colon here should align with the
 #. one in "usage: %s" translation
 #: parse-options.c:568
 #, c-format
 msgid "   or: %s"
-msgstr "   o: %s"
+msgstr " o: %s"
 
 #: parse-options.c:571
 #, c-format
 msgid "    %s"
 msgstr "    %s"
 
@@ -960,41 +963,41 @@
 msgid "-NUM"
 msgstr "-NUM"
 
 #: pathspec.c:133
 msgid "global 'glob' and 'noglob' pathspec settings are incompatible"
 msgstr ""
-"els ajusts d'especificació de ruta 'glob' i 'noglob' globals són "
+"els ajusts d'especificació de camí 'glob' i 'noglob' globals són "
 "incompatibles"
 
 #: pathspec.c:143
 msgid ""
 "global 'literal' pathspec setting is incompatible with all other global "
 "pathspec settings"
 msgstr ""
-"l'ajust d'especificació de ruta 'literal' global és incompatible amb tots "
-"els altres ajusts d'especificació de ruta globals"
+"l'ajust d'especificació de camí 'literal' global és incompatible amb tots "
+"els altres ajusts d'especificació de camí globals"
 
 #: pathspec.c:177
 msgid "invalid parameter for pathspec magic 'prefix'"
-msgstr "paràmetre invàlid per a la màgica d'especificació de ruta 'prefix'"
+msgstr "paràmetre no vàlid per a la màgia d'especificació de camí 'prefix'"
 
 #: pathspec.c:183
 #, c-format
 msgid "Invalid pathspec magic '%.*s' in '%s'"
-msgstr "Màgica d'especificació de ruta invàlida '%.*s' en '%s'"
+msgstr "Màgia d'especificació de camí no vàlida '%.*s' en '%s'"
 
 #: pathspec.c:187
 #, c-format
 msgid "Missing ')' at the end of pathspec magic in '%s'"
-msgstr "')' mancant al final de la màgica d'especificació de ruta en '%s'"
+msgstr "')' mancant al final de la màgia d'especificació de camí en '%s'"
 
 #: pathspec.c:205
 #, c-format
 msgid "Unimplemented pathspec magic '%c' in '%s'"
-msgstr "Màgica d'especificació de ruta no implementada '%c' en '%s'"
+msgstr "Màgia d'especificació de camí no implementada '%c' en '%s'"
 
 #: pathspec.c:230
 #, c-format
 msgid "%s: 'literal' and 'glob' are incompatible"
 msgstr "%s: 'literal' i 'glob' són incompatibles"
 
@@ -1008,57 +1011,58 @@
 msgid "Pathspec '%s' is in submodule '%.*s'"
 msgstr "L'especificació '%s' és en el submòdul '%.*s'"
 
 #: pathspec.c:353
 #, c-format
 msgid "%s: pathspec magic not supported by this command: %s"
-msgstr "%s: aquest ordre no suporta la màgica d'especificació de ruta: %s"
+msgstr ""
+"%s: aquesta ordre no és compatible amb la màgia d'especificació de camí: %s"
 
 #: pathspec.c:432
 #, c-format
 msgid "pathspec '%s' is beyond a symbolic link"
-msgstr "l'especificació de ruta '%s' és més allà d'un enllaç simbòlic"
+msgstr "l'especificació de camí '%s' és més enllà d'un enllaç simbòlic"
 
 #: pathspec.c:441
 msgid ""
 "There is nothing to exclude from by :(exclude) patterns.\n"
 "Perhaps you forgot to add either ':/' or '.' ?"
 msgstr ""
 "No hi ha res a excloure per patrons :(exclusió).\n"
 "Potser heu oblidat afegir o ':/' o '.' ?"
 
 #: pretty.c:968
 msgid "unable to parse --pretty format"
-msgstr "incapaç d'analitzar el format --pretty"
+msgstr "no s'ha pogut analitzar el format --pretty"
 
 #: progress.c:225
 msgid "done"
 msgstr "fet"
 
-#: read-cache.c:1261
+#: read-cache.c:1267
 #, c-format
 msgid ""
 "index.version set, but the value is invalid.\n"
 "Using version %i"
 msgstr ""
-"index.version establert, però el valor és invàlid.\n"
+"index.version establert, però el valor no és vàlid.\n"
 "Usant la versió %i"
 
-#: read-cache.c:1271
+#: read-cache.c:1277
 #, c-format
 msgid ""
 "GIT_INDEX_VERSION set, but the value is invalid.\n"
 "Using version %i"
 msgstr ""
-"GIT_INDEX_VERSION establert, però el valor és invàlid.\n"
+"GIT_INDEX_VERSION establert, però el valor no és vàlid.\n"
 "Usant la versió %i"
 
 #: remote.c:782
 #, c-format
 msgid "Cannot fetch both %s and %s to %s"
-msgstr "No és pot obtenir ambdós %s i %s a %s"
+msgstr "No es pot obtenir ambdós %s i %s a %s"
 
 #: remote.c:786
 #, c-format
 msgid "%s usually tracks %s, not %s"
 msgstr "%s generalment segueix %s, no %s"
 
@@ -1068,128 +1072,128 @@
 msgstr "%s segueix ambdós %s i %s"
 
 #: remote.c:798
 msgid "Internal error"
 msgstr "Error intern"
 
-#: remote.c:1968
+#: remote.c:1980
 #, c-format
 msgid "Your branch is based on '%s', but the upstream is gone.\n"
-msgstr "La teva rama està basada en '%s', però la font no és.\n"
+msgstr "La vostra branca està basada en '%s', però la font no hi és.\n"
 
-#: remote.c:1972
+#: remote.c:1984
 msgid "  (use \"git branch --unset-upstream\" to fixup)\n"
 msgstr "  (useu \"git branch --unset-upstream\" per a arreglar)\n"
 
-#: remote.c:1975
+#: remote.c:1987
 #, c-format
 msgid "Your branch is up-to-date with '%s'.\n"
-msgstr "La vostra rama està al dia amb '%s'.\n"
+msgstr "La vostra branca està al dia amb '%s'.\n"
 
-#: remote.c:1979
+#: remote.c:1991
 #, c-format
 msgid "Your branch is ahead of '%s' by %d commit.\n"
 msgid_plural "Your branch is ahead of '%s' by %d commits.\n"
-msgstr[0] "La vostra rama està davant de '%s' per %d comissions.\n"
-msgstr[1] "La vostra rama està davant de '%s' per %d comissions.\n"
+msgstr[0] "La vostra branca està davant de '%s' per %d comissió.\n"
+msgstr[1] "La vostra branca està davant de '%s' per %d comissions.\n"
 
-#: remote.c:1985
+#: remote.c:1997
 msgid "  (use \"git push\" to publish your local commits)\n"
 msgstr "  (useu \"git push\" per a publicar les vostres comissions locals)\n"
 
-#: remote.c:1988
+#: remote.c:2000
 #, c-format
 msgid "Your branch is behind '%s' by %d commit, and can be fast-forwarded.\n"
 msgid_plural ""
 "Your branch is behind '%s' by %d commits, and can be fast-forwarded.\n"
 msgstr[0] ""
-"La vostra rama està darrere de '%s' per %d comissió, i pot avançar-se "
+"La vostra branca està darrere de '%s' per %d comissió, i pot avançar-se "
 "ràpidament.\n"
 msgstr[1] ""
-"La vostra rama està darrere de '%s' per %d comissions, i pot avançar-se "
+"La vostra branca està darrere de '%s' per %d comissions, i pot avançar-se "
 "ràpidament.\n"
 
-#: remote.c:1996
+#: remote.c:2008
 msgid "  (use \"git pull\" to update your local branch)\n"
-msgstr " (useu \"git pull\" per a actualitzar la vostra rama local)\n"
+msgstr " (useu \"git pull\" per a actualitzar la vostra branca local)\n"
 
-#: remote.c:1999
+#: remote.c:2011
 #, c-format
 msgid ""
 "Your branch and '%s' have diverged,\n"
 "and have %d and %d different commit each, respectively.\n"
 msgid_plural ""
 "Your branch and '%s' have diverged,\n"
 "and have %d and %d different commits each, respectively.\n"
 msgstr[0] ""
-"La vostra rama i '%s' s'han divergit,\n"
+"La vostra branca i '%s' s'han divergit,\n"
 "i tenen %d i %d comissió distinta cada una, respectivament.\n"
 msgstr[1] ""
-"La vostra rama i '%s' s'han divergit,\n"
+"La vostra branca i '%s' s'han divergit,\n"
 "i tenen %d i %d comissions distintes cada una, respectivament.\n"
 
-#: remote.c:2009
+#: remote.c:2021
 msgid "  (use \"git pull\" to merge the remote branch into yours)\n"
-msgstr "  (useu \"git pull\" per a fusionar la rama remota a la vostra)\n"
+msgstr "  (useu \"git pull\" per a fusionar la branca remota a la vostra)\n"
 
 #: run-command.c:87
 msgid "open /dev/null failed"
 msgstr "s'ha fallat en obrir /dev/null"
 
 #: run-command.c:89
 #, c-format
 msgid "dup2(%d,%d) failed"
 msgstr "dup2(%d,%d) ha fallat"
 
-#: send-pack.c:265
+#: send-pack.c:268
 msgid "failed to sign the push certificate"
 msgstr "s'ha fallat en firmar el certificat de pujada"
 
-#: send-pack.c:322
+#: send-pack.c:325
 msgid "the receiving end does not support --signed push"
-msgstr "el destí rebent no suporta el pujar --signed"
+msgstr "el destí receptor no admet pujar --signed"
 
-#: sequencer.c:172 builtin/merge.c:781 builtin/merge.c:892
-#: builtin/merge.c:1002 builtin/merge.c:1012
+#: sequencer.c:172 builtin/merge.c:782 builtin/merge.c:893 builtin/merge.c:995
+#: builtin/merge.c:1005
 #, c-format
 msgid "Could not open '%s' for writing"
 msgstr "No s'ha pogut obrir '%s' per a escriptura"
 
-#: sequencer.c:174 builtin/merge.c:343 builtin/merge.c:784
-#: builtin/merge.c:1004 builtin/merge.c:1017
+#: sequencer.c:174 builtin/merge.c:344 builtin/merge.c:785 builtin/merge.c:997
+#: builtin/merge.c:1010
 #, c-format
 msgid "Could not write to '%s'"
 msgstr "No s'ha pogut escriure al '%s'"
 
 #: sequencer.c:195
 msgid ""
 "after resolving the conflicts, mark the corrected paths\n"
 "with 'git add <paths>' or 'git rm <paths>'"
 msgstr ""
-"després de resoldre els conflictes, marqueu les rutes\n"
-"corregides amb 'git add <rutes>' o 'git rm <rutes>'"
+"després de resoldre els conflictes, marqueu els camins\n"
+"corregits amb 'git add <camins>' o 'git rm <camins>'"
 
 #: sequencer.c:198
 msgid ""
 "after resolving the conflicts, mark the corrected paths\n"
 "with 'git add <paths>' or 'git rm <paths>'\n"
 "and commit the result with 'git commit'"
 msgstr ""
-"després de resoldre els conflictes, marqueu les rutes\n"
-"corregides amb 'git add <rutes>' o 'git rm <rutes>'\n"
+"després de resoldre els conflictes, marqueu els camins\n"
+"corregits amb 'git add <camins>' o 'git rm <camins>'\n"
 "i cometeu el resultat amb 'git commit'"
 
-#: sequencer.c:211 sequencer.c:852 sequencer.c:935
+#: sequencer.c:211 sequencer.c:856 sequencer.c:939
 #, c-format
 msgid "Could not write to %s"
 msgstr "No s'ha pogut escriure a %s"
 
 #: sequencer.c:214
 #, c-format
 msgid "Error wrapping up %s"
-msgstr "Error en terminar %s"
+msgstr "Error en finalitzar %s"
 
 #: sequencer.c:229
 msgid "Your local changes would be overwritten by cherry-pick."
 msgstr "Els vostres canvis locals es sobreescriurien pel recull de cireres."
 
 #: sequencer.c:231
@@ -1198,205 +1202,205 @@
 
 #: sequencer.c:234
 msgid "Commit your changes or stash them to proceed."
 msgstr "Cometeu els vostres canvis o emmagatzemeu-los per a procedir."
 
 #. TRANSLATORS: %s will be "revert" or "cherry-pick"
-#: sequencer.c:304
+#: sequencer.c:321
 #, c-format
 msgid "%s: Unable to write new index file"
-msgstr "%s: Incapaç d'escriure un fitxer d'índex nou"
+msgstr "%s: No s'ha pogut escriure un fitxer d'índex nou"
 
-#: sequencer.c:335
+#: sequencer.c:339
 msgid "Could not resolve HEAD commit\n"
 msgstr "No s'ha pogut resoldre la comissió HEAD\n"
 
-#: sequencer.c:355
+#: sequencer.c:359
 msgid "Unable to update cache tree\n"
-msgstr "Incapaç d'actualitzar l'arbre cau\n"
+msgstr "No s'ha pogut actualitzar l'arbre cau\n"
 
-#: sequencer.c:402
+#: sequencer.c:406
 #, c-format
 msgid "Could not parse commit %s\n"
 msgstr "No s'ha pogut analitzar la comissió %s\n"
 
-#: sequencer.c:407
+#: sequencer.c:411
 #, c-format
 msgid "Could not parse parent commit %s\n"
-msgstr "No s'ha pogut analitzar la comissió pare %s\n"
+msgstr "No s'ha pogut analitzar la comissió mare %s\n"
 
-#: sequencer.c:473
+#: sequencer.c:477
 msgid "Your index file is unmerged."
 msgstr "El vostre fitxer d'índex està sense fusionar."
 
-#: sequencer.c:492
+#: sequencer.c:496
 #, c-format
 msgid "Commit %s is a merge but no -m option was given."
-msgstr "La comissió %s és una fusió però cap opció -m s'ha donat."
+msgstr "La comissió %s és una fusió però no s'ha donat cap opció -m."
 
-#: sequencer.c:500
+#: sequencer.c:504
 #, c-format
 msgid "Commit %s does not have parent %d"
-msgstr "La comissió %s no té pare %d"
+msgstr "La comissió %s no té mare %d"
 
-#: sequencer.c:504
+#: sequencer.c:508
 #, c-format
 msgid "Mainline was specified but commit %s is not a merge."
 msgstr ""
 "S'ha especificat la línia principal però la comissió %s no és una fusió."
 
 #. TRANSLATORS: The first %s will be "revert" or
 #. "cherry-pick", the second %s a SHA1
-#: sequencer.c:517
+#: sequencer.c:521
 #, c-format
 msgid "%s: cannot parse parent commit %s"
-msgstr "%s: no es pot analitzar la comissió pare %s"
+msgstr "%s: no es pot analitzar la comissió mare %s"
 
-#: sequencer.c:521
+#: sequencer.c:525
 #, c-format
 msgid "Cannot get commit message for %s"
 msgstr "No es pot obtenir el missatge de comissió de %s"
 
-#: sequencer.c:607
+#: sequencer.c:611
 #, c-format
 msgid "could not revert %s... %s"
 msgstr "no s'ha pogut revertir %s...%s"
 
-#: sequencer.c:608
+#: sequencer.c:612
 #, c-format
 msgid "could not apply %s... %s"
 msgstr "no s'ha pogut aplicar %s...%s"
 
-#: sequencer.c:644
+#: sequencer.c:648
 msgid "empty commit set passed"
 msgstr "conjunt de comissions buit passat"
 
-#: sequencer.c:652
+#: sequencer.c:656
 #, c-format
 msgid "git %s: failed to read the index"
 msgstr "git %s: s'ha fallat en llegir l'índex"
 
-#: sequencer.c:656
+#: sequencer.c:660
 #, c-format
 msgid "git %s: failed to refresh the index"
 msgstr "git %s: s'ha fallat en actualitzar l'índex"
 
-#: sequencer.c:716
+#: sequencer.c:720
 #, c-format
 msgid "Cannot %s during a %s"
 msgstr "No es pot %s durant un %s"
 
-#: sequencer.c:738
+#: sequencer.c:742
 #, c-format
 msgid "Could not parse line %d."
 msgstr "No s'ha pogut analitzar la línia %d."
 
-#: sequencer.c:743
+#: sequencer.c:747
 msgid "No commits parsed."
 msgstr "Cap comissió analitzada."
 
-#: sequencer.c:756
+#: sequencer.c:760
 #, c-format
 msgid "Could not open %s"
 msgstr "No s'ha pogut obrir %s"
 
-#: sequencer.c:760
+#: sequencer.c:764
 #, c-format
 msgid "Could not read %s."
 msgstr "No s'ha pogut llegir %s."
 
-#: sequencer.c:767
+#: sequencer.c:771
 #, c-format
 msgid "Unusable instruction sheet: %s"
 msgstr "Full d'instruccions inusable: %s"
 
-#: sequencer.c:797
+#: sequencer.c:801
 #, c-format
 msgid "Invalid key: %s"
-msgstr "Clau invàlid: %s"
+msgstr "Clau no vàlida: %s"
 
-#: sequencer.c:800
+#: sequencer.c:804
 #, c-format
 msgid "Invalid value for %s: %s"
-msgstr "Valor invàlid per a %s: %s"
+msgstr "Valor no vàlid per a %s: %s"
 
-#: sequencer.c:812
+#: sequencer.c:816
 #, c-format
 msgid "Malformed options sheet: %s"
-msgstr "Full d'opcions malformat: %s"
+msgstr "Full d'opcions mal format: %s"
 
-#: sequencer.c:833
+#: sequencer.c:837
 msgid "a cherry-pick or revert is already in progress"
 msgstr "un recull de cireres o una reversió ja està en curs"
 
-#: sequencer.c:834
+#: sequencer.c:838
 msgid "try \"git cherry-pick (--continue | --quit | --abort)\""
 msgstr "intenteu \"git cherry-pick (--continue | --quit | --abort)\""
 
-#: sequencer.c:838
+#: sequencer.c:842
 #, c-format
 msgid "Could not create sequencer directory %s"
 msgstr "No s'ha pogut crear el directori de seqüenciador %s"
 
-#: sequencer.c:854 sequencer.c:939
+#: sequencer.c:858 sequencer.c:943
 #, c-format
 msgid "Error wrapping up %s."
-msgstr "Error en terminar %s."
+msgstr "Error en finalitzar %s."
 
-#: sequencer.c:873 sequencer.c:1009
+#: sequencer.c:877 sequencer.c:1013
 msgid "no cherry-pick or revert in progress"
-msgstr "ni recull de cireres ni una reversió està en curs"
+msgstr "ni hi ha cap recull de cireres ni cap reversió en curs"
 
-#: sequencer.c:875
+#: sequencer.c:879
 msgid "cannot resolve HEAD"
 msgstr "no es pot resoldre HEAD"
 
-#: sequencer.c:877
+#: sequencer.c:881
 msgid "cannot abort from a branch yet to be born"
-msgstr "no es pot avortar des d'una rama que encara ha de nàixer"
+msgstr "no es pot avortar des d'una branca que encara ha de nàixer"
 
-#: sequencer.c:899 builtin/apply.c:4128
+#: sequencer.c:903 builtin/apply.c:4128
 #, c-format
 msgid "cannot open %s: %s"
 msgstr "no es pot obrir %s: %s"
 
-#: sequencer.c:902
+#: sequencer.c:906
 #, c-format
 msgid "cannot read %s: %s"
 msgstr "no es pot llegir %s: %s"
 
-#: sequencer.c:903
+#: sequencer.c:907
 msgid "unexpected end of file"
-msgstr "fin de fitxer inesperat"
+msgstr "final de fitxer inesperat"
 
-#: sequencer.c:909
+#: sequencer.c:913
 #, c-format
 msgid "stored pre-cherry-pick HEAD file '%s' is corrupt"
 msgstr ""
-"el fitxer HEAD emmagatzemat abans del recull de cirers '%s' és corrupte"
+"el fitxer HEAD emmagatzemat abans del recull de cireres '%s' és corrupte"
 
-#: sequencer.c:932
+#: sequencer.c:936
 #, c-format
 msgid "Could not format %s."
 msgstr "No s'ha pogut formatar %s."
 
-#: sequencer.c:1077
+#: sequencer.c:1081
 #, c-format
 msgid "%s: can't cherry-pick a %s"
-msgstr "%s: no es pot recollir com cirera un %s"
+msgstr "%s: no es pot recollir com a cirera un %s"
 
-#: sequencer.c:1080
+#: sequencer.c:1084
 #, c-format
 msgid "%s: bad revision"
 msgstr "%s: revisió dolenta"
 
-#: sequencer.c:1114
+#: sequencer.c:1118
 msgid "Can't revert as initial commit"
 msgstr "No es pot revertir com a comissió inicial"
 
-#: sequencer.c:1115
+#: sequencer.c:1119
 msgid "Can't cherry-pick into empty head"
 msgstr "No es pot recollir cireres en un cap buit"
 
 #: sha1_name.c:440
 msgid ""
 "Git normally never creates a ref that ends with 40 hex characters\n"
@@ -1406,42 +1410,43 @@
 "  git checkout -b $br $(git rev-parse ...)\n"
 "\n"
 "where \"$br\" is somehow empty and a 40-hex ref is created. Please\n"
 "examine these refs and maybe delete them. Turn this message off by\n"
 "running \"git config advice.objectNameWarning false\""
 msgstr ""
-"Git normalment mai crea una referència que termini amb 40 caràcters\n"
+"Git normalment mai crea una referència que acabi amb 40 caràcters\n"
 "hexadecimals perquè s'ignorarà quan només especifiqueu 40 caràcters\n"
 "hexadecimals. Aquestes referències es poden crear per error. Per\n"
 "exemple,\n"
 "\n"
 "  git checkout -b $br $(git rev-parse ...)\n"
 "\n"
-"on \"$br\" és de alguna manera buit i una referència de 40 caràcters\n"
+"on \"$br\" és d'alguna manera buit i una referència de 40 caràcters\n"
 "hexadecimals. Si us plau, examineu aquests referències i potser\n"
-"suprimiu-les. Desactiva aquest missatge per executar\n"
+"suprimiu-les. Desactiveu aquest missatge executant\n"
 "\"git config advice.objectNameWarning false\""
 
 #: sha1_name.c:1068
 msgid "HEAD does not point to a branch"
-msgstr "HEAD no assenyala cap rama"
+msgstr "HEAD no assenyala cap branca"
 
 #: sha1_name.c:1071
 #, c-format
 msgid "No such branch: '%s'"
-msgstr "No hi ha tal rama: '%s'"
+msgstr "No hi ha tal branca: '%s'"
 
 #: sha1_name.c:1073
 #, c-format
 msgid "No upstream configured for branch '%s'"
-msgstr "Cap font configurada per a la rama '%s'"
+msgstr "Cap font configurada per a la branca '%s'"
 
 #: sha1_name.c:1077
 #, c-format
 msgid "Upstream branch '%s' not stored as a remote-tracking branch"
-msgstr "La rama font '%s' no s'emmagatzema com a rama que segueixi al remot"
+msgstr ""
+"La branca font '%s' no s'emmagatzema com a branca que segueixi al remot"
 
 #: submodule.c:64 submodule.c:98
 msgid "Cannot change unmerged .gitmodules, resolve merge conflicts first"
 msgstr ""
 "No es pot canviar un .gitmodules no fusionat, primer resoldreu els "
 "conflictes de fusió"
@@ -1456,112 +1461,112 @@
 msgid "Could not update .gitmodules entry %s"
 msgstr "No s'ha pogut actualitzar l'entrada de .gitmodules %s"
 
 #: submodule.c:109
 #, c-format
 msgid "Could not remove .gitmodules entry for %s"
-msgstr "No s'ha pogut treure l'entrada de .gitmodules per a %s"
+msgstr "No s'ha pogut eliminar l'entrada de .gitmodules per a %s"
 
 #: submodule.c:120
 msgid "staging updated .gitmodules failed"
 msgstr "L'allistament del .gitmodules actualitzat ha fallat"
 
-#: submodule.c:1111 builtin/init-db.c:363
+#: submodule.c:1111 builtin/init-db.c:371
 #, c-format
 msgid "Could not create git link %s"
 msgstr "No s'ha pogut crear l'enllaç de git %s"
 
 #: submodule.c:1122
 #, c-format
 msgid "Could not set core.worktree in %s"
 msgstr "No s'ha pogut establir core.worktree en %s"
 
-#: trailer.c:499 trailer.c:503 trailer.c:507 trailer.c:561 trailer.c:565
-#: trailer.c:569
+#: trailer.c:500 trailer.c:504 trailer.c:508 trailer.c:562 trailer.c:566
+#: trailer.c:570
 #, c-format
 msgid "unknown value '%s' for key '%s'"
 msgstr "valor desconegut '%s' per a la clau '%s'"
 
-#: trailer.c:551 trailer.c:556 builtin/remote.c:288
+#: trailer.c:552 trailer.c:557 builtin/remote.c:290
 #, c-format
 msgid "more than one %s"
 msgstr "més d'un %s"
 
-#: trailer.c:589
+#: trailer.c:590
 #, c-format
 msgid "empty trailer token in trailer '%.*s'"
 msgstr "fitxa de remolc buida en el remolc '%.*s'"
 
-#: trailer.c:709
+#: trailer.c:710
 #, c-format
 msgid "could not read input file '%s'"
 msgstr "no s'ha pogut llegir el fitxer d'entrada '%s'"
 
-#: trailer.c:712
+#: trailer.c:713
 msgid "could not read from stdin"
 msgstr "No s'ha pogut llegir des d'stdin"
 
 #: unpack-trees.c:202
 msgid "Checking out files"
 msgstr "Agafant fitxers"
 
 #: urlmatch.c:120
 msgid "invalid URL scheme name or missing '://' suffix"
-msgstr "l'esquema d'URL és invàlida o li manca el sufix '://'"
+msgstr "l'esquema d'URL no és vàlida o li manca el sufix '://'"
 
 #: urlmatch.c:144 urlmatch.c:297 urlmatch.c:356
 #, c-format
 msgid "invalid %XX escape sequence"
-msgstr "seqüència d'escapament %XX invàlida"
+msgstr "seqüència d'escapament %XX no vàlida"
 
 #: urlmatch.c:172
 msgid "missing host and scheme is not 'file:'"
 msgstr "manca l'host i l'esquema no és 'file:'"
 
 #: urlmatch.c:189
 msgid "a 'file:' URL may not have a port number"
 msgstr "un URL 'file:' no pot tenir número de port"
 
 #: urlmatch.c:199
 msgid "invalid characters in host name"
-msgstr "hi ha caràcters invàlids en el nom de host"
+msgstr "hi ha caràcters no vàlids en el nom de host"
 
 #: urlmatch.c:244 urlmatch.c:255
 msgid "invalid port number"
-msgstr "número de port invàlid"
+msgstr "número de port no vàlid"
 
 #: urlmatch.c:322
 msgid "invalid '..' path segment"
-msgstr "segment de ruta '..' invàlid"
+msgstr "segment de camí '..' no vàlid"
 
 #: wrapper.c:509
 #, c-format
 msgid "unable to access '%s': %s"
-msgstr "incapaç d'accedir a '%s': %s"
+msgstr "no s'ha pogut accedir a '%s': %s"
 
 #: wrapper.c:530
 #, c-format
 msgid "unable to access '%s'"
-msgstr "incapaç d'accedir a '%s'"
+msgstr "no s'ha pogut accedir a '%s'"
 
 #: wrapper.c:541
 #, c-format
 msgid "unable to look up current user in the passwd file: %s"
-msgstr "incapaç de trobar l'usuari actual en el fitxer passwd: %s"
+msgstr "no s'ha pogut trobar l'usuari actual en el fitxer passwd: %s"
 
 #: wrapper.c:542
 msgid "no such user"
 msgstr "no hi ha tal usuari"
 
 #: wrapper.c:550
 msgid "unable to get current working directory"
-msgstr "incapaç d'obtenir el directori de treball actual"
+msgstr "no s'ha pogut obtenir el directori de treball actual"
 
 #: wt-status.c:150
 msgid "Unmerged paths:"
-msgstr "Rutes sense fusionar:"
+msgstr "Camins sense fusionar:"
 
 #: wt-status.c:177 wt-status.c:204
 #, c-format
 msgid "  (use \"git reset %s <file>...\" to unstage)"
 msgstr "  (useu \"git reset %s <fitxer>...\" per a desallistar)"
 
@@ -1623,17 +1628,17 @@
 #: wt-status.c:254
 msgid "added by us:"
 msgstr "afegit per nosaltres:"
 
 #: wt-status.c:256
 msgid "deleted by them:"
-msgstr "suprimit pels:"
+msgstr "suprimit per ells:"
 
 #: wt-status.c:258
 msgid "added by them:"
-msgstr "afegit pels:"
+msgstr "afegit per ells:"
 
 #: wt-status.c:260
 msgid "deleted by us:"
 msgstr "suprimit per nosaltres:"
 
 #: wt-status.c:262
@@ -1644,13 +1649,13 @@
 msgid "both modified:"
 msgstr "modificat per ambdós:"
 
 #: wt-status.c:266
 #, c-format
 msgid "bug: unhandled unmerged status %x"
-msgstr "bug: estat no fusionat no manejat %x"
+msgstr "bug: estat no fusionat no gestionat %x"
 
 #: wt-status.c:274
 msgid "new file:"
 msgstr "fitxer nou:"
 
 #: wt-status.c:276
@@ -1693,311 +1698,311 @@
 msgid "untracked content, "
 msgstr "contingut no seguit, "
 
 #: wt-status.c:391
 #, c-format
 msgid "bug: unhandled diff status %c"
-msgstr "bug: estat de diferència no manejat %c"
+msgstr "bug: estat de diferència no gestionat %c"
 
-#: wt-status.c:761
+#: wt-status.c:758
 msgid "Submodules changed but not updated:"
 msgstr "Submòduls canviats però no actualitzats:"
 
-#: wt-status.c:763
+#: wt-status.c:760
 msgid "Submodule changes to be committed:"
 msgstr "Canvis de submòdul a cometre:"
 
-#: wt-status.c:842
+#: wt-status.c:839
 msgid ""
 "Do not touch the line above.\n"
 "Everything below will be removed."
 msgstr ""
-"No toqueu la línia amunt.\n"
-"Tot a baix es traurà."
+"No toqueu la línia de sobre.\n"
+"Tot el que hi ha a sota s'eliminarà."
 
-#: wt-status.c:933
+#: wt-status.c:930
 msgid "You have unmerged paths."
-msgstr "Teniu rutes sense fusionar."
+msgstr "Teniu camins sense fusionar."
 
-#: wt-status.c:936
+#: wt-status.c:933
 msgid "  (fix conflicts and run \"git commit\")"
 msgstr "  (arregleu els conflictes i executeu \"git commit\")"
 
-#: wt-status.c:939
+#: wt-status.c:936
 msgid "All conflicts fixed but you are still merging."
 msgstr "Tots els conflictes estan arreglats però encara esteu fusionant."
 
-#: wt-status.c:942
+#: wt-status.c:939
 msgid "  (use \"git commit\" to conclude merge)"
 msgstr "  (useu \"git commit\" per a concloure la fusió)"
 
-#: wt-status.c:952
+#: wt-status.c:949
 msgid "You are in the middle of an am session."
-msgstr "Esteu en el medi d'una sessió am."
+msgstr "Esteu enmig d'una sessió am."
 
-#: wt-status.c:955
+#: wt-status.c:952
 msgid "The current patch is empty."
 msgstr "El pedaç actual està buit."
 
-#: wt-status.c:959
+#: wt-status.c:956
 msgid "  (fix conflicts and then run \"git am --continue\")"
 msgstr "  (arregleu els conflictes i després executeu \"git am --continue\")"
 
-#: wt-status.c:961
+#: wt-status.c:958
 msgid "  (use \"git am --skip\" to skip this patch)"
-msgstr "  (useu \"git am --skip\" per a saltar aquest pedaç)"
+msgstr "  (useu \"git am --skip\" per a ometre aquest pedaç)"
 
-#: wt-status.c:963
+#: wt-status.c:960
 msgid "  (use \"git am --abort\" to restore the original branch)"
-msgstr "  (useu \"git am --abort\" per a restaurar la rama original)"
+msgstr "  (useu \"git am --abort\" per a restaurar la branca original)"
 
-#: wt-status.c:1023 wt-status.c:1040
+#: wt-status.c:1020 wt-status.c:1037
 #, c-format
 msgid "You are currently rebasing branch '%s' on '%s'."
-msgstr "Actualment esteu rebasant la rama '%s' en '%s'."
+msgstr "Actualment esteu rebasant la branca '%s' en '%s'."
 
-#: wt-status.c:1028 wt-status.c:1045
+#: wt-status.c:1025 wt-status.c:1042
 msgid "You are currently rebasing."
 msgstr "Actualment esteu rebasant."
 
-#: wt-status.c:1031
+#: wt-status.c:1028
 msgid "  (fix conflicts and then run \"git rebase --continue\")"
 msgstr ""
 "  (arregleu els conflictes i després executeu \"git rebase --continue\")"
 
-#: wt-status.c:1033
+#: wt-status.c:1030
 msgid "  (use \"git rebase --skip\" to skip this patch)"
 msgstr "  (useu \"git rebase --skip\" per a saltar aquest pedaç)"
 
-#: wt-status.c:1035
+#: wt-status.c:1032
 msgid "  (use \"git rebase --abort\" to check out the original branch)"
-msgstr "  (useu \"git rebase --abort\" per a agafar la rama original)"
+msgstr "  (useu \"git rebase --abort\" per a agafar la branca original)"
 
-#: wt-status.c:1048
+#: wt-status.c:1045
 msgid "  (all conflicts fixed: run \"git rebase --continue\")"
 msgstr "  (tots els conflictes arreglats: executeu \"git rebase --continue\")"
 
-#: wt-status.c:1052
+#: wt-status.c:1049
 #, c-format
 msgid ""
 "You are currently splitting a commit while rebasing branch '%s' on '%s'."
 msgstr ""
-"Actualment esteu dividint una comissió mentre rebasant la rama '%s' en '%s'."
+"Actualment esteu dividint una comissió mentre rebaseu la branca '%s' en '%s'."
 
-#: wt-status.c:1057
+#: wt-status.c:1054
 msgid "You are currently splitting a commit during a rebase."
 msgstr "Actualment esteu dividint una comissió durant una rebase."
 
-#: wt-status.c:1060
+#: wt-status.c:1057
 msgid "  (Once your working directory is clean, run \"git rebase --continue\")"
 msgstr ""
 "  (Una vegada que el vostre directori de treball sigui net, executeu \"git "
 "rebase --continue\")"
 
-#: wt-status.c:1064
+#: wt-status.c:1061
 #, c-format
 msgid "You are currently editing a commit while rebasing branch '%s' on '%s'."
 msgstr ""
-"Actualment esteu editant una comissió mentre rebasant la rama '%s' en '%s'."
+"Actualment esteu editant una comissió mentre rebaseu la branca '%s' en '%s'."
 
-#: wt-status.c:1069
+#: wt-status.c:1066
 msgid "You are currently editing a commit during a rebase."
 msgstr "Actualment esteu editant una comissió durant una rebase."
 
-#: wt-status.c:1072
+#: wt-status.c:1069
 msgid "  (use \"git commit --amend\" to amend the current commit)"
 msgstr "  (useu \"git commit --amend\" per a esmenar la comissió actual)"
 
-#: wt-status.c:1074
+#: wt-status.c:1071
 msgid ""
 "  (use \"git rebase --continue\" once you are satisfied with your changes)"
 msgstr ""
 "  (useu \"git rebase --continue\" una vegada que esteu satisfet amb els "
 "vostres canvis)"
 
-#: wt-status.c:1084
+#: wt-status.c:1081
 #, c-format
 msgid "You are currently cherry-picking commit %s."
-msgstr "Actualment esteu recollint com cirera la comissió %s."
+msgstr "Actualment esteu recollint com a cirera la comissió %s."
 
-#: wt-status.c:1089
+#: wt-status.c:1086
 msgid "  (fix conflicts and run \"git cherry-pick --continue\")"
 msgstr "  (arregleu els conflictes i executeu \"git cherry-pick --continue\")"
 
-#: wt-status.c:1092
+#: wt-status.c:1089
 msgid "  (all conflicts fixed: run \"git cherry-pick --continue\")"
 msgstr ""
 "  (tots els conflictes arreglats: executeu \"git cherry-pick --continue\")"
 
-#: wt-status.c:1094
+#: wt-status.c:1091
 msgid "  (use \"git cherry-pick --abort\" to cancel the cherry-pick operation)"
 msgstr ""
 "  (useu \"git cherry-pick --abort\" per a cancel·lar l'operació de recull de "
 "cireres)"
 
-#: wt-status.c:1103
+#: wt-status.c:1100
 #, c-format
 msgid "You are currently reverting commit %s."
 msgstr "Actualment esteu revertint la comissió %s."
 
-#: wt-status.c:1108
+#: wt-status.c:1105
 msgid "  (fix conflicts and run \"git revert --continue\")"
 msgstr "  (arregleu els conflictes i executeu \"git revert --continue\")"
 
-#: wt-status.c:1111
+#: wt-status.c:1108
 msgid "  (all conflicts fixed: run \"git revert --continue\")"
 msgstr ""
 "  (tots els conflictes estan arreglats: executeu \"git revert --continue\")"
 
-#: wt-status.c:1113
+#: wt-status.c:1110
 msgid "  (use \"git revert --abort\" to cancel the revert operation)"
 msgstr ""
 "  (useu \"git revert --abort\" per a cancel·lar l'operació de reversió)"
 
-#: wt-status.c:1124
+#: wt-status.c:1121
 #, c-format
 msgid "You are currently bisecting, started from branch '%s'."
-msgstr "Actualment esteu bisecant, heu començat des de la rama '%s'."
+msgstr "Actualment esteu bisecant, heu començat des de la branca '%s'."
 
-#: wt-status.c:1128
+#: wt-status.c:1125
 msgid "You are currently bisecting."
 msgstr "Actualment esteu bisecant."
 
-#: wt-status.c:1131
+#: wt-status.c:1128
 msgid "  (use \"git bisect reset\" to get back to the original branch)"
-msgstr "  (useu \"git bisect reset\" per a tornar a la rama original)"
+msgstr "  (useu \"git bisect reset\" per a tornar a la branca original)"
 
-#: wt-status.c:1306
+#: wt-status.c:1303
 msgid "On branch "
-msgstr "En la rama "
+msgstr "En la branca "
 
-#: wt-status.c:1313
+#: wt-status.c:1310
 msgid "rebase in progress; onto "
 msgstr "rebase en progrés; en "
 
-#: wt-status.c:1320
+#: wt-status.c:1317
 msgid "HEAD detached at "
-msgstr "HEAD separat a"
+msgstr "HEAD separat a "
 
-#: wt-status.c:1322
+#: wt-status.c:1319
 msgid "HEAD detached from "
-msgstr "HEAD separat de"
+msgstr "HEAD separat de "
 
-#: wt-status.c:1325
+#: wt-status.c:1322
 msgid "Not currently on any branch."
-msgstr "Actualment no en cap rama."
+msgstr "Actualment no en cap branca."
 
-#: wt-status.c:1342
+#: wt-status.c:1339
 msgid "Initial commit"
 msgstr "Comissió inicial"
 
-#: wt-status.c:1356
+#: wt-status.c:1353
 msgid "Untracked files"
 msgstr "Fitxers no seguits"
 
-#: wt-status.c:1358
+#: wt-status.c:1355
 msgid "Ignored files"
 msgstr "Fitxers ignorats"
 
-#: wt-status.c:1362
+#: wt-status.c:1359
 #, c-format
 msgid ""
 "It took %.2f seconds to enumerate untracked files. 'status -uno'\n"
 "may speed it up, but you have to be careful not to forget to add\n"
 "new files yourself (see 'git help status')."
 msgstr ""
-"Ha trigat %.2f segons en enumerar fitxers no seguits.\n"
-"'status -uno' pot accelerar-ho, però heu de tenir cuidat de no\n"
-"oblidar afegir fitxers nous per vós mateix (veu\n"
+"S'ha trigat %.2f segons a enumerar fitxers no seguits.\n"
+"'status -uno' pot accelerar-ho, però heu d'anar amb compte de no\n"
+"oblidar-vos d'afegir fitxers nous per vós mateix (vegeu\n"
 "'git help status')."
 
-#: wt-status.c:1368
+#: wt-status.c:1365
 #, c-format
 msgid "Untracked files not listed%s"
 msgstr "Els fitxers no seguits no estan llistats%s"
 
-#: wt-status.c:1370
+#: wt-status.c:1367
 msgid " (use -u option to show untracked files)"
 msgstr " (useu l'opció -u per a mostrar els fitxers no seguits)"
 
-#: wt-status.c:1376
+#: wt-status.c:1373
 msgid "No changes"
 msgstr "Sense canvis"
 
-#: wt-status.c:1381
+#: wt-status.c:1378
 #, c-format
 msgid "no changes added to commit (use \"git add\" and/or \"git commit -a\")\n"
 msgstr ""
 "no hi ha canvis afegits a cometre (useu \"git add\" o \"git commit -a\")\n"
 
-#: wt-status.c:1384
+#: wt-status.c:1381
 #, c-format
 msgid "no changes added to commit\n"
 msgstr "no hi ha canvis afegits a cometre\n"
 
-#: wt-status.c:1387
+#: wt-status.c:1384
 #, c-format
 msgid ""
 "nothing added to commit but untracked files present (use \"git add\" to "
 "track)\n"
 msgstr ""
 "no hi ha res afegit a cometre però fitxers no seguits estan presents (useu "
 "\"git add\" per a seguir-los)\n"
 
-#: wt-status.c:1390
+#: wt-status.c:1387
 #, c-format
 msgid "nothing added to commit but untracked files present\n"
 msgstr "no hi ha res afegit a cometre però fitxers no seguits estan presents\n"
 
-#: wt-status.c:1393
+#: wt-status.c:1390
 #, c-format
 msgid "nothing to commit (create/copy files and use \"git add\" to track)\n"
 msgstr ""
 "no hi ha res a cometre (creeu/copieu fitxers i useu \"git add\" per a seguir-"
 "los)\n"
 
-#: wt-status.c:1396 wt-status.c:1401
+#: wt-status.c:1393 wt-status.c:1398
 #, c-format
 msgid "nothing to commit\n"
 msgstr "no hi ha res a cometre\n"
 
-#: wt-status.c:1399
+#: wt-status.c:1396
 #, c-format
 msgid "nothing to commit (use -u to show untracked files)\n"
 msgstr ""
 "no hi ha res a cometre (useu -u per a mostrar els fitxers no seguits)\n"
 
-#: wt-status.c:1403
+#: wt-status.c:1400
 #, c-format
 msgid "nothing to commit, working directory clean\n"
 msgstr "no hi ha res a cometre, directori de treball net\n"
 
-#: wt-status.c:1512
+#: wt-status.c:1509
 msgid "HEAD (no branch)"
-msgstr "HEAD (sense rama)"
+msgstr "HEAD (sense branca)"
 
-#: wt-status.c:1518
+#: wt-status.c:1515
 msgid "Initial commit on "
 msgstr "Comissió inicial en "
 
-#: wt-status.c:1550
+#: wt-status.c:1547
 msgid "gone"
-msgstr "no és"
+msgstr "no hi és"
 
-#: wt-status.c:1552 wt-status.c:1560
+#: wt-status.c:1549 wt-status.c:1557
 msgid "behind "
 msgstr "darrere "
 
-#: compat/precompose_utf8.c:55 builtin/clone.c:357
+#: compat/precompose_utf8.c:55 builtin/clone.c:360
 #, c-format
 msgid "failed to unlink '%s'"
 msgstr "s'ha fallat en desenllaçar '%s'"
 
 #: builtin/add.c:22
 msgid "git add [options] [--] <pathspec>..."
-msgstr "git add [opcions] [--] <especificació-de-ruta>..."
+msgstr "git add [opcions] [--] <especificació-de-camí>..."
 
 #: builtin/add.c:65
 #, c-format
 msgid "unexpected diff status %c"
 msgstr "estat de diff inesperat %c"
 
@@ -2005,13 +2010,13 @@
 msgid "updating files failed"
 msgstr "s'ha fallat en actualitzar els fitxers"
 
 #: builtin/add.c:80
 #, c-format
 msgid "remove '%s'\n"
-msgstr "treu '%s'\n"
+msgstr "elimina '%s'\n"
 
 #: builtin/add.c:134
 msgid "Unstaged changes after refreshing the index:"
 msgstr "Canvis no allistats després d'actualitzar l'índex:"
 
 #: builtin/add.c:194 builtin/rev-parse.c:785
@@ -2040,80 +2045,78 @@
 #, c-format
 msgid "Could not apply '%s'"
 msgstr "No s'ha pogut aplicar '%s'"
 
 #: builtin/add.c:231
 msgid "The following paths are ignored by one of your .gitignore files:\n"
-msgstr "Les rutes següents s'ignoren per un dels vostres fitxers .gitignore:\n"
+msgstr ""
+"Els camins següents s'ignoren per un dels vostres fitxers .gitignore:\n"
 
 #: builtin/add.c:248 builtin/clean.c:875 builtin/fetch.c:108 builtin/mv.c:110
-#: builtin/prune-packed.c:55 builtin/push.c:499 builtin/remote.c:1375
+#: builtin/prune-packed.c:55 builtin/push.c:499 builtin/remote.c:1372
 #: builtin/rm.c:269
 msgid "dry run"
 msgstr "marxa en sec"
 
 #: builtin/add.c:249 builtin/apply.c:4415 builtin/check-ignore.c:19
-#: builtin/commit.c:1362 builtin/count-objects.c:63 builtin/fsck.c:608
+#: builtin/commit.c:1326 builtin/count-objects.c:63 builtin/fsck.c:608
 #: builtin/log.c:1617 builtin/mv.c:109 builtin/read-tree.c:114
 msgid "be verbose"
-msgstr "sigues verbós"
+msgstr "sigues detallat"
 
 #: builtin/add.c:251
 msgid "interactive picking"
 msgstr "recull interactiu"
 
-#: builtin/add.c:252 builtin/checkout.c:1108 builtin/reset.c:286
+#: builtin/add.c:252 builtin/checkout.c:1126 builtin/reset.c:286
 msgid "select hunks interactively"
 msgstr "selecciona els trossos interactivament"
 
 #: builtin/add.c:253
 msgid "edit current diff and apply"
-msgstr "edita la diferència actual i aplica'l"
+msgstr "edita la diferència actual i aplica-la"
 
 #: builtin/add.c:254
 msgid "allow adding otherwise ignored files"
 msgstr "permet afegir fitxers que d'altra manera s'ignoren"
 
 #: builtin/add.c:255
 msgid "update tracked files"
 msgstr "actualitza els fitxers seguits"
 
 #: builtin/add.c:256
 msgid "record only the fact that the path will be added later"
-msgstr "registra només el fet que la ruta s'afegirà més tard"
+msgstr "registra només el fet que el camí s'afegirà més tard"
 
 #: builtin/add.c:257
 msgid "add changes from all tracked and untracked files"
 msgstr "afegeix els canvis de tots els fitxers seguits i no seguits"
 
 #: builtin/add.c:260
 msgid "ignore paths removed in the working tree (same as --no-all)"
-msgstr "ignora les rutes tretes en l'arbre de treball (el mateix que --no-all)"
+msgstr ""
+"ignora els camins eliminats en l'arbre de treball (el mateix que --no-all)"
 
 #: builtin/add.c:262
 msgid "don't add, only refresh the index"
 msgstr "no afegeixis, només actualitza l'índex"
 
 #: builtin/add.c:263
 msgid "just skip files which cannot be added because of errors"
-msgstr "només salta els fitxers que no es poden afegir a causa d'errors"
+msgstr "només omet els fitxers que no es poden afegir a causa d'errors"
 
 #: builtin/add.c:264
 msgid "check if - even missing - files are ignored in dry run"
 msgstr ""
-"comproveu si els fitxers - encara els mancants - s'ignoren en marxa en sec"
+"comproveu si els fitxers - fins i tot els absents - s'ignoren en marxa en sec"
 
 #: builtin/add.c:286
 #, c-format
 msgid "Use -f if you really want to add them.\n"
 msgstr "Useu -f si realment els voleu afegir.\n"
 
-#: builtin/add.c:287
-msgid "no files added"
-msgstr "cap fitxer afegit"
-
 #: builtin/add.c:293
 msgid "adding files failed"
 msgstr "l'afegiment de fitxers ha fallat"
 
 #: builtin/add.c:329
 msgid "-A and -u are mutually incompatible"
@@ -2137,13 +2140,13 @@
 #: builtin/commit.c:333 builtin/mv.c:130 builtin/reset.c:235 builtin/rm.c:299
 msgid "index file corrupt"
 msgstr "fitxer d'índex malmès"
 
 #: builtin/add.c:446 builtin/apply.c:4510 builtin/mv.c:279 builtin/rm.c:431
 msgid "Unable to write new index file"
-msgstr "Incapaç d'escriure un fitxer d'índex nou"
+msgstr "no s'ha pogut escriure un fitxer d'índex nou"
 
 #: builtin/apply.c:58
 msgid "git apply [options] [<patch>...]"
 msgstr "git apply [opcions] [<pedaç>...]"
 
 #: builtin/apply.c:111
@@ -2166,13 +2169,13 @@
 msgid "regexec returned %d for input: %s"
 msgstr "regexec ha retornat %d per l'entrada: %s"
 
 #: builtin/apply.c:916
 #, c-format
 msgid "unable to find filename in patch at line %d"
-msgstr "incapaç de trobar el nom de fitxer en el pedaç a la línia %d"
+msgstr "no s'ha pogut trobar el nom de fitxer en el pedaç a la línia %d"
 
 #: builtin/apply.c:948
 #, c-format
 msgid "git apply: bad git-diff - expected /dev/null, got %s on line %d"
 msgstr ""
 "git apply: git-diff dolent - /dev/null esperat, %s rebut en la línia %d"
@@ -2210,17 +2213,17 @@
 "git diff header lacks filename information when removing %d leading pathname "
 "component (line %d)"
 msgid_plural ""
 "git diff header lacks filename information when removing %d leading pathname "
 "components (line %d)"
 msgstr[0] ""
-"a la capçalera de git diff li manca informació de nom de fitxer en treure %d "
-"component de nom de ruta inicial (línia %d)"
+"a la capçalera de git diff li manca informació de nom de fitxer en eliminar "
+"%d component de nom de camí inicial (línia %d)"
 msgstr[1] ""
-"a la capçalera de git diff li manca informació de nom de fitxer en treure %d "
-"components de nom de ruta inicial (línia %d)"
+"a la capçalera de git diff li manca informació de nom de fitxer en eliminar "
+"%d components de nom de camí inicial (línia %d)"
 
 #: builtin/apply.c:1657
 msgid "new file depends on old contents"
 msgstr "el fitxer nou depèn dels continguts antics"
 
 #: builtin/apply.c:1659
@@ -2242,13 +2245,13 @@
 msgid "deleted file %s still has contents"
 msgstr "el fitxer suprimit %s encara té continguts"
 
 #: builtin/apply.c:1726
 #, c-format
 msgid "** warning: file %s becomes empty but is not deleted"
-msgstr "** avís: el fitxer %s es buida però no es suprimeix"
+msgstr "** avís: el fitxer %s queda buit però no es suprimeix"
 
 #: builtin/apply.c:1872
 #, c-format
 msgid "corrupt binary patch at line %d: %.*s"
 msgstr "pedaç binari malmès a la línia %d: %.*s"
 
@@ -2262,18 +2265,18 @@
 msgid "patch with only garbage at line %d"
 msgstr "pedaç amb només escombraries a la línia %d"
 
 #: builtin/apply.c:2142
 #, c-format
 msgid "unable to read symlink %s"
-msgstr "incapaç de llegir l'enllaç simbòlic %s"
+msgstr "no s'ha pogut llegir l'enllaç simbòlic %s"
 
 #: builtin/apply.c:2146
 #, c-format
 msgid "unable to open or read %s"
-msgstr "incapaç d'obrir o llegir %s"
+msgstr "no s'ha pogut obrir o llegir %s"
 
 #: builtin/apply.c:2754
 #, c-format
 msgid "invalid start of line: '%c'"
 msgstr "inici de línia no vàlid: '%c'"
 
@@ -2292,19 +2295,19 @@
 #: builtin/apply.c:2890
 #, c-format
 msgid ""
 "while searching for:\n"
 "%.*s"
 msgstr ""
-"mentre cercant:\n"
+"tot cercant:\n"
 "%.*s"
 
 #: builtin/apply.c:2909
 #, c-format
 msgid "missing binary patch data for '%s'"
-msgstr "manquen els dades de pedaç binari de '%s'"
+msgstr "manquen les dades de pedaç binari de '%s'"
 
 #: builtin/apply.c:3010
 #, c-format
 msgid "binary patch does not apply to '%s'"
 msgstr "el pedaç binari no s'aplica a '%s'"
 
@@ -2329,13 +2332,13 @@
 msgid "read of %s failed"
 msgstr "la lectura de %s ha fallat"
 
 #: builtin/apply.c:3240 builtin/apply.c:3462
 #, c-format
 msgid "path %s has been renamed/deleted"
-msgstr "la ruta %s s'ha canviat de nom / s'ha suprimit"
+msgstr "el camí %s s'ha canviat de nom / s'ha suprimit"
 
 #: builtin/apply.c:3321 builtin/apply.c:3476
 #, c-format
 msgid "%s: does not exist in index"
 msgstr "%s: no existeix en l'índex"
 
@@ -2348,23 +2351,23 @@
 #, c-format
 msgid "%s: does not match index"
 msgstr "%s: no coincideix amb l'índex"
 
 #: builtin/apply.c:3432
 msgid "removal patch leaves file contents"
-msgstr "el pedaç de treta deixa els continguts dels fitxers"
+msgstr "el pedaç de supressió deixa els continguts dels fitxers"
 
 #: builtin/apply.c:3501
 #, c-format
 msgid "%s: wrong type"
 msgstr "%s: tipus erroni"
 
 #: builtin/apply.c:3503
 #, c-format
 msgid "%s has type %o, expected %o"
-msgstr "%s és del tipus %o, %o esperat"
+msgstr "%s és del tipus %o, s'esperava %o"
 
 #: builtin/apply.c:3604
 #, c-format
 msgid "%s: already exists in index"
 msgstr "%s: ja existeix en l'índex"
 
@@ -2390,52 +2393,53 @@
 
 #: builtin/apply.c:3653
 #, c-format
 msgid "Checking patch %s..."
 msgstr "Comprovant el pedaç %s..."
 
-#: builtin/apply.c:3746 builtin/checkout.c:213 builtin/reset.c:135
+#: builtin/apply.c:3746 builtin/checkout.c:231 builtin/reset.c:135
 #, c-format
 msgid "make_cache_entry failed for path '%s'"
-msgstr "make_cache_entry ha fallat per a la ruta '%s'"
+msgstr "make_cache_entry ha fallat per al camí '%s'"
 
 #: builtin/apply.c:3889
 #, c-format
 msgid "unable to remove %s from index"
-msgstr "incapaç de treure %s de l'índex"
+msgstr "no s'ha pogut eliminar %s de l'índex"
 
 #: builtin/apply.c:3918
 #, c-format
 msgid "corrupt patch for submodule %s"
 msgstr "pedaç corrupte per al submòdul %s"
 
 #: builtin/apply.c:3922
 #, c-format
 msgid "unable to stat newly created file '%s'"
-msgstr "incapaç de fer stat al fitxer novament creat '%s'"
+msgstr "no s'ha pogut fer stat al fitxer novament creat '%s'"
 
 #: builtin/apply.c:3927
 #, c-format
 msgid "unable to create backing store for newly created file %s"
 msgstr ""
-"incapaç de crear un magatzem de recolzament per al fitxer novament creat %s"
+"no s'ha pogut crear un magatzem de recolzament per al fitxer novament creat "
+"%s"
 
 #: builtin/apply.c:3930 builtin/apply.c:4038
 #, c-format
 msgid "unable to add cache entry for %s"
-msgstr "incapaç d'afegir una entrada de cau per a %s"
+msgstr "no s'ha pogut afegir una entrada de cau per a %s"
 
 #: builtin/apply.c:3963
 #, c-format
 msgid "closing file '%s'"
 msgstr "tancant el fitxer '%s'"
 
 #: builtin/apply.c:4012
 #, c-format
 msgid "unable to write file '%s' mode %o"
-msgstr "incapaç d'escriure el fitxer '%s' mode %o"
+msgstr "no s'ha pogut escriure el fitxer '%s' mode %o"
 
 #: builtin/apply.c:4099
 #, c-format
 msgid "Applied patch %s cleanly."
 msgstr "El pedaç %s s'ha aplicat netament."
 
@@ -2464,39 +2468,39 @@
 #, c-format
 msgid "Rejected hunk #%d."
 msgstr "S'ha rebutjat el tros #%d."
 
 #: builtin/apply.c:4234
 msgid "unrecognized input"
-msgstr "entrada no reconegut"
+msgstr "entrada no reconeguda"
 
 #: builtin/apply.c:4245
 msgid "unable to read index file"
-msgstr "incapaç de llegir el fitxer d'índex"
+msgstr "no es pot llegir el fitxer d'índex"
 
-#: builtin/apply.c:4362 builtin/apply.c:4365 builtin/clone.c:91
+#: builtin/apply.c:4362 builtin/apply.c:4365 builtin/clone.c:92
 #: builtin/fetch.c:93
 msgid "path"
-msgstr "ruta"
+msgstr "camí"
 
 #: builtin/apply.c:4363
 msgid "don't apply changes matching the given path"
-msgstr "no apliquis els canvis que coincideixin amb la ruta donada"
+msgstr "no apliquis els canvis que coincideixin amb el camí donat"
 
 #: builtin/apply.c:4366
 msgid "apply changes matching the given path"
-msgstr "aplica els canvis que coincideixin amb la ruta donada"
+msgstr "aplica els canvis que coincideixin amb el camí donat"
 
 #: builtin/apply.c:4368
 msgid "num"
 msgstr "número"
 
 #: builtin/apply.c:4369
 msgid "remove <num> leading slashes from traditional diff paths"
 msgstr ""
-"treu <nombre> barres obliqües inicials de les rutes de diferència "
+"elimina <nombre> barres obliqües inicials dels camins de diferència "
 "tradicionals"
 
 #: builtin/apply.c:4372
 msgid "ignore additions made by the patch"
 msgstr "ignora afegiments fets pel pedaç"
 
@@ -2536,30 +2540,30 @@
 #: builtin/apply.c:4392
 msgid "build a temporary index based on embedded index information"
 msgstr "construeix un índex temporal basat en la informació d'índex incrustada"
 
 #: builtin/apply.c:4394 builtin/checkout-index.c:198 builtin/ls-files.c:455
 msgid "paths are separated with NUL character"
-msgstr "rutes es separen amb el caràcter NUL"
+msgstr "els camins es separen amb el caràcter NUL"
 
 #: builtin/apply.c:4397
 msgid "ensure at least <n> lines of context match"
-msgstr "assegura que almenys <n> línies de context coincideixin"
+msgstr "assegura't que almenys <n> línies de context coincideixin"
 
 #: builtin/apply.c:4398
 msgid "action"
 msgstr "acció"
 
 #: builtin/apply.c:4399
 msgid "detect new or modified lines that have whitespace errors"
 msgstr ""
 "detecta les línies noves o modificades que tinguin errors d'espai en blanc"
 
 #: builtin/apply.c:4402 builtin/apply.c:4405
 msgid "ignore changes in whitespace when finding context"
-msgstr "ignora els canvis d'espai en blanc al cercar context"
+msgstr "ignora els canvis d'espai en blanc en cercar context"
 
 #: builtin/apply.c:4408
 msgid "apply the patch in reverse"
 msgstr "aplica el pedaç al revés"
 
 #: builtin/apply.c:4410
@@ -2680,13 +2684,14 @@
 msgid "Show blame entries as we find them, incrementally"
 msgstr "Mostra les entrades de culpa mentre les trobem, incrementalment"
 
 #: builtin/blame.c:2502
 msgid "Show blank SHA-1 for boundary commits (Default: off)"
 msgstr ""
-"Mostra un SHA-1 blanc peles comissions de frontera (Per defecte: desactivat)"
+"Mostra un SHA-1 en blanc per les comissions de frontera (Per defecte: "
+"desactivat)"
 
 #: builtin/blame.c:2503
 msgid "Do not treat root commits as boundaries (Default: off)"
 msgstr ""
 "No tractis les comissions d'arrel com a límits (Per defecte: desactivat)"
 
@@ -2740,13 +2745,13 @@
 #: builtin/blame.c:2515
 msgid "Ignore whitespace differences"
 msgstr "Ignora les diferencies d'espai en blanc"
 
 #: builtin/blame.c:2516
 msgid "Spend extra cycles to find better match"
-msgstr "Gasta cicles extres per a trobar una coincidència millora"
+msgstr "Gasta cicles extres per a trobar una coincidència millor"
 
 #: builtin/blame.c:2517
 msgid "Use revisions from <file> instead of calling git-rev-list"
 msgstr "Usa les revisions de <fitxer> en lloc d'invocar git-rev-list"
 
 #: builtin/blame.c:2518
@@ -2778,62 +2783,62 @@
 #. output.  For C locale, "4 years, 11 months ago", which
 #. takes 22 places, is the longest among various forms of
 #. relative timestamps, but your language may need more or
 #. fewer display columns.
 #: builtin/blame.c:2602
 msgid "4 years, 11 months ago"
-msgstr "fa 4 anys, 11 mesos"
+msgstr "fa 4 anys i 11 mesos"
 
 #: builtin/branch.c:24
 msgid "git branch [options] [-r | -a] [--merged | --no-merged]"
 msgstr "git branch [opcions] [-r | -a] [--merged | --no-merged]"
 
 #: builtin/branch.c:25
 msgid "git branch [options] [-l] [-f] <branchname> [<start-point>]"
-msgstr "git branch [opcions] [-l] [-f] <nom-de-rama> [<punt-inicial>]"
+msgstr "git branch [opcions] [-l] [-f] <nom-de-branca> [<punt-inicial>]"
 
 #: builtin/branch.c:26
 msgid "git branch [options] [-r] (-d | -D) <branchname>..."
-msgstr "git branch [opcions] [-r] (-d | -D) <nom-de-rama>..."
+msgstr "git branch [opcions] [-r] (-d | -D) <nom-de-branca>..."
 
 #: builtin/branch.c:27
 msgid "git branch [options] (-m | -M) [<oldbranch>] <newbranch>"
-msgstr "git branch [opcions] (-m | -M) [<rama-antiga>] <rama-nova>"
+msgstr "git branch [opcions] (-m | -M) [<branca-antiga>] <branca-nova>"
 
 #: builtin/branch.c:152
 #, c-format
 msgid ""
 "deleting branch '%s' that has been merged to\n"
 "         '%s', but not yet merged to HEAD."
 msgstr ""
-"suprimint la rama '%s' que s'ha fusionat a\n"
+"suprimint la branca '%s' que s'ha fusionat a\n"
 "         '%s', però encara no s'ha fusionat\n"
 "         a HEAD."
 
 #: builtin/branch.c:156
 #, c-format
 msgid ""
 "not deleting branch '%s' that is not yet merged to\n"
 "         '%s', even though it is merged to HEAD."
 msgstr ""
-"no suprimint la rama '%s' que encara no s'ha\n"
-"         fusionat a '%s', encara que està fusionat\n"
-"         a HEAD."
+"no suprimint la branca '%s' que encara no s'ha\n"
+"         fusionat a '%s', encara que està\n"
+"         fusionada a HEAD."
 
 #: builtin/branch.c:170
 #, c-format
 msgid "Couldn't look up commit object for '%s'"
 msgstr "No s'ha pogut trobar l'objecte de comissió de '%s'"
 
 #: builtin/branch.c:174
 #, c-format
 msgid ""
 "The branch '%s' is not fully merged.\n"
 "If you are sure you want to delete it, run 'git branch -D %s'."
 msgstr ""
-"La rama '%s' no està totalment fusionada.\n"
+"La branca '%s' no està totalment fusionada.\n"
 "Si esteu segur que la voleu suprimir, executeu 'git branch -D %s'."
 
 #: builtin/branch.c:187
 msgid "Update of config-file failed"
 msgstr "L'actualització del fitxer de configuració ha fallat"
 
@@ -2845,53 +2850,53 @@
 msgid "Couldn't look up commit object for HEAD"
 msgstr "No s'ha pogut trobar l'objecte de comissió de HEAD"
 
 #: builtin/branch.c:229
 #, c-format
 msgid "Cannot delete the branch '%s' which you are currently on."
-msgstr "No es pot suprimir la rama '%s' en que esteu actualment."
+msgstr "No es pot suprimir la branca '%s', en la qual sou actualment."
 
 #: builtin/branch.c:245
 #, c-format
 msgid "remote branch '%s' not found."
-msgstr "no s'ha trobat la rama remota '%s'."
+msgstr "no s'ha trobat la branca remota '%s'."
 
 #: builtin/branch.c:246
 #, c-format
 msgid "branch '%s' not found."
-msgstr "no s'ha trobat la rama '%s'."
+msgstr "no s'ha trobat la branca '%s'."
 
 #: builtin/branch.c:260
 #, c-format
 msgid "Error deleting remote branch '%s'"
-msgstr "Error en suprimir la rama remota '%s'"
+msgstr "Error en suprimir la branca remota '%s'"
 
 #: builtin/branch.c:261
 #, c-format
 msgid "Error deleting branch '%s'"
-msgstr "Error en suprimir la rama '%s'"
+msgstr "Error en suprimir la branca '%s'"
 
 #: builtin/branch.c:268
 #, c-format
 msgid "Deleted remote branch %s (was %s).\n"
-msgstr "S'ha suprimit la rama remota %s (ha estat %s).\n"
+msgstr "S'ha suprimit la branca remota %s (ha estat %s).\n"
 
 #: builtin/branch.c:269
 #, c-format
 msgid "Deleted branch %s (was %s).\n"
-msgstr "S'ha suprimit la rama %s (ha estat %s).\n"
+msgstr "S'ha suprimit la branca %s (ha estat %s).\n"
 
 #: builtin/branch.c:370
 #, c-format
 msgid "branch '%s' does not point at a commit"
-msgstr "la rama '%s' no assenyala una comissió"
+msgstr "la branca '%s' no assenyala cap comissió"
 
 #: builtin/branch.c:459
 #, c-format
 msgid "[%s: gone]"
-msgstr "[%s: no és]"
+msgstr "[%s: no hi és]"
 
 #: builtin/branch.c:464
 #, c-format
 msgid "[%s]"
 msgstr "[%s]"
 
@@ -2924,345 +2929,346 @@
 #, c-format
 msgid "[ahead %d, behind %d]"
 msgstr "[davant %d, darrere %d]"
 
 #: builtin/branch.c:496
 msgid " **** invalid ref ****"
-msgstr " **** referència invàlida ****"
+msgstr " **** referència no vàlida ****"
 
 #: builtin/branch.c:587
 #, c-format
 msgid "(no branch, rebasing %s)"
-msgstr "(cap rama, rebasant %s)"
+msgstr "(cap branca, rebasant %s)"
 
 #: builtin/branch.c:590
 #, c-format
 msgid "(no branch, bisect started on %s)"
-msgstr "(cap rama, bisecció començada en %s)"
+msgstr "(cap branca, bisecció començada en %s)"
 
 #: builtin/branch.c:593
 #, c-format
 msgid "(detached from %s)"
 msgstr "(separat de %s)"
 
 #: builtin/branch.c:596
 msgid "(no branch)"
-msgstr "(cap rama)"
+msgstr "(cap branca)"
 
 #: builtin/branch.c:643
 #, c-format
 msgid "object '%s' does not point to a commit"
 msgstr "l'objecte '%s' no assenyala cap comissió"
 
 #: builtin/branch.c:691
 msgid "some refs could not be read"
 msgstr "no s'han pogut llegir algunes referències"
 
 #: builtin/branch.c:704
 msgid "cannot rename the current branch while not on any."
-msgstr ""
-"no es pot canviar el nom de la rama actual mentre no estant en ninguna."
+msgstr "no es pot canviar el nom de la branca actual mentre no s'és a cap."
 
 #: builtin/branch.c:714
 #, c-format
 msgid "Invalid branch name: '%s'"
-msgstr "Nom de rama invàlid: '%s'"
+msgstr "Nom de branca no vàlid: '%s'"
 
 #: builtin/branch.c:729
 msgid "Branch rename failed"
-msgstr "El canvi de nom de rama ha fallat"
+msgstr "El canvi de nom de branca ha fallat"
 
 #: builtin/branch.c:733
 #, c-format
 msgid "Renamed a misnamed branch '%s' away"
-msgstr "S'ha canviat el nom de la rama malanomenada '%s'"
+msgstr "S'ha canviat el nom de la branca malanomenada '%s'"
 
 #: builtin/branch.c:737
 #, c-format
 msgid "Branch renamed to %s, but HEAD is not updated!"
-msgstr "S'ha canviat el nom de la rama a %s, però HEAD no està actualitzat!"
+msgstr "S'ha canviat el nom de la branca a %s, però HEAD no està actualitzat!"
 
 #: builtin/branch.c:744
 msgid "Branch is renamed, but update of config-file failed"
 msgstr ""
-"La ramà està canviada de nom, però l'actualització del fitxer de "
+"La branca està canviada de nom, però l'actualització del fitxer de "
 "configuració ha fallat"
 
 #: builtin/branch.c:759
 #, c-format
 msgid "malformed object name %s"
-msgstr "nom d'objecte %s malformat"
+msgstr "nom d'objecte %s mal format"
 
 #: builtin/branch.c:783
 #, c-format
 msgid "could not write branch description template: %s"
-msgstr "no s'ha pogut escriure la plantilla de descripció de rama: %s"
+msgstr "no s'ha pogut escriure la plantilla de descripció de branca: %s"
 
 #: builtin/branch.c:813
 msgid "Generic options"
 msgstr "Opcions genèriques"
 
 #: builtin/branch.c:815
 msgid "show hash and subject, give twice for upstream branch"
-msgstr "mostra el hash i el tema, doneu dos vegades per la rama font"
+msgstr "mostra el hash i el tema, doneu dues vegades per la branca font"
 
 #: builtin/branch.c:816
 msgid "suppress informational messages"
 msgstr "omet els missatges informatius"
 
 #: builtin/branch.c:817
 msgid "set up tracking mode (see git-pull(1))"
-msgstr "configura el mode de seguiment (veu git-pull(1))"
+msgstr "configura el mode de seguiment (vegeu git-pull(1))"
 
 #: builtin/branch.c:819
 msgid "change upstream info"
 msgstr "canvia la informació de font"
 
 #: builtin/branch.c:823
 msgid "use colored output"
 msgstr "usa sortida colorada"
 
 #: builtin/branch.c:824
 msgid "act on remote-tracking branches"
-msgstr "actua en rames amb seguiment remot"
+msgstr "actua en branques amb seguiment remot"
 
 #: builtin/branch.c:827 builtin/branch.c:833 builtin/branch.c:854
-#: builtin/branch.c:860 builtin/commit.c:1622 builtin/commit.c:1623
-#: builtin/commit.c:1624 builtin/commit.c:1625 builtin/tag.c:616
+#: builtin/branch.c:860 builtin/commit.c:1586 builtin/commit.c:1587
+#: builtin/commit.c:1588 builtin/commit.c:1589 builtin/tag.c:616
 #: builtin/tag.c:622
 msgid "commit"
 msgstr "comissió"
 
 #: builtin/branch.c:828 builtin/branch.c:834
 msgid "print only branches that contain the commit"
-msgstr "imprimeix només les rames que continguin la comissió"
+msgstr "imprimeix només les branques que continguin la comissió"
 
 #: builtin/branch.c:840
 msgid "Specific git-branch actions:"
 msgstr "Accions de git-branch específiques:"
 
 #: builtin/branch.c:841
 msgid "list both remote-tracking and local branches"
-msgstr "llista ambdós les rames amb seguiment remot i les locals"
+msgstr "llista les branques amb seguiment remot i les locals"
 
 #: builtin/branch.c:843
 msgid "delete fully merged branch"
-msgstr "suprimeix la rama si és completament fusionada"
+msgstr "suprimeix la branca si és completament fusionada"
 
 #: builtin/branch.c:844
 msgid "delete branch (even if not merged)"
-msgstr "suprimeix la rama (encara que no estigui fusionada)"
+msgstr "suprimeix la branca (encara que no estigui fusionada)"
 
 #: builtin/branch.c:845
 msgid "move/rename a branch and its reflog"
-msgstr "mou/canvia de nom una rama i el seu registre de referència"
+msgstr "mou/canvia de nom una branca i el seu registre de referència"
 
 #: builtin/branch.c:846
 msgid "move/rename a branch, even if target exists"
-msgstr "mou/canvia de nom una rama, encara que el destí existeixi"
+msgstr "mou/canvia de nom una branca, encara que el destí existeixi"
 
 #: builtin/branch.c:847
 msgid "list branch names"
-msgstr "llista els noms de rama"
+msgstr "llista els noms de branca"
 
 #: builtin/branch.c:848
 msgid "create the branch's reflog"
-msgstr "crea el registre de referència de la rama"
+msgstr "crea el registre de referència de la branca"
 
 #: builtin/branch.c:850
 msgid "edit the description for the branch"
-msgstr "edita la descripció de la rama"
+msgstr "edita la descripció de la branca"
 
 #: builtin/branch.c:851
-msgid "force creation (when already exists)"
-msgstr "força creació (quan ja existeix)"
+msgid "force creation, move/rename, deletion"
+msgstr "força creació, moviment/canvi de nom, supressió"
 
 #: builtin/branch.c:854
 msgid "print only not merged branches"
-msgstr "imprimeix només les rames sense fusionar"
+msgstr "imprimeix només les branques sense fusionar"
 
 #: builtin/branch.c:860
 msgid "print only merged branches"
-msgstr "imprimeix només les rames fusionades"
+msgstr "imprimeix només les branques fusionades"
 
 #: builtin/branch.c:864
 msgid "list branches in columns"
-msgstr "llista les rames en columnes"
+msgstr "llista les branques en columnes"
 
 #: builtin/branch.c:877
 msgid "Failed to resolve HEAD as a valid ref."
 msgstr "S'ha fallat en resoldre HEAD com a referència vàlida."
 
-#: builtin/branch.c:881 builtin/clone.c:634
+#: builtin/branch.c:881 builtin/clone.c:637
 msgid "HEAD not found below refs/heads!"
-msgstr "HEAD no trobat baix refs/heads!"
+msgstr "HEAD no trobat sota refs/heads!"
 
 #: builtin/branch.c:903
 msgid "--column and --verbose are incompatible"
 msgstr "--column i --verbose són incompatibles"
 
-#: builtin/branch.c:909 builtin/branch.c:948
+#: builtin/branch.c:914 builtin/branch.c:953
 msgid "branch name required"
-msgstr "cal el nom de rama"
+msgstr "cal el nom de branca"
 
-#: builtin/branch.c:924
+#: builtin/branch.c:929
 msgid "Cannot give description to detached HEAD"
 msgstr "No es pot donar descripció a un HEAD separat"
 
-#: builtin/branch.c:929
+#: builtin/branch.c:934
 msgid "cannot edit description of more than one branch"
-msgstr "no es pot editar la descripció de més d'una rama"
+msgstr "no es pot editar la descripció de més d'una branca"
 
-#: builtin/branch.c:936
+#: builtin/branch.c:941
 #, c-format
 msgid "No commit on branch '%s' yet."
-msgstr "Encara no hi ha comissió en la rama '%s'."
+msgstr "Encara no hi ha comissió en la branca '%s'."
 
-#: builtin/branch.c:939
+#: builtin/branch.c:944
 #, c-format
 msgid "No branch named '%s'."
-msgstr "No hi ha rama amb nom '%s'."
+msgstr "No hi ha branca amb nom '%s'."
 
-#: builtin/branch.c:954
+#: builtin/branch.c:959
 msgid "too many branches for a rename operation"
-msgstr "hi ha massa rames per a una operació de canvi de nom"
+msgstr "hi ha massa branques per a una operació de canvi de nom"
 
-#: builtin/branch.c:959
+#: builtin/branch.c:964
 msgid "too many branches to set new upstream"
-msgstr "hi ha massa rames per a establir una nova font"
+msgstr "hi ha massa branques per a establir una nova font"
 
-#: builtin/branch.c:963
+#: builtin/branch.c:968
 #, c-format
 msgid ""
 "could not set upstream of HEAD to %s when it does not point to any branch."
 msgstr ""
-"no s'ha pogut establir la font de HEAD com a %s quan no assenyala cap rama."
+"no s'ha pogut establir la font de HEAD com a %s quan no assenyala cap branca."
 
-#: builtin/branch.c:966 builtin/branch.c:988 builtin/branch.c:1009
+#: builtin/branch.c:971 builtin/branch.c:993 builtin/branch.c:1014
 #, c-format
 msgid "no such branch '%s'"
-msgstr "no hi ha tal rama '%s'"
+msgstr "no hi ha tal branca '%s'"
 
-#: builtin/branch.c:970
+#: builtin/branch.c:975
 #, c-format
 msgid "branch '%s' does not exist"
-msgstr "la rama '%s' no existeix"
+msgstr "la branca '%s' no existeix"
 
-#: builtin/branch.c:982
+#: builtin/branch.c:987
 msgid "too many branches to unset upstream"
-msgstr "hi ha massa rames per a desestablir la font"
+msgstr "hi ha massa branques per a desestablir la font"
 
-#: builtin/branch.c:986
+#: builtin/branch.c:991
 msgid "could not unset upstream of HEAD when it does not point to any branch."
-msgstr "no s'ha pogut desestablir la font de HEAD quan no assenyala cap rama."
+msgstr ""
+"no s'ha pogut desestablir la font de HEAD perquè no assenyala cap branca."
 
-#: builtin/branch.c:992
+#: builtin/branch.c:997
 #, c-format
 msgid "Branch '%s' has no upstream information"
-msgstr "La rama '%s' no té informació de font"
+msgstr "La branca '%s' no té informació de font"
 
-#: builtin/branch.c:1006
+#: builtin/branch.c:1011
 msgid "it does not make sense to create 'HEAD' manually"
 msgstr "no té sentit crear 'HEAD' manualment"
 
-#: builtin/branch.c:1012
+#: builtin/branch.c:1017
 msgid "-a and -r options to 'git branch' do not make sense with a branch name"
-msgstr "les opcions -a i -r a 'git branch' no tenen sentit amb un nom de rama"
+msgstr ""
+"les opcions -a i -r a 'git branch' no tenen sentit amb un nom de branca"
 
-#: builtin/branch.c:1015
+#: builtin/branch.c:1020
 #, c-format
 msgid ""
 "The --set-upstream flag is deprecated and will be removed. Consider using --"
 "track or --set-upstream-to\n"
 msgstr ""
-"La bandera --set-upstream està desaprovada i es traurà. Considereu usar --"
+"La bandera --set-upstream està desaprovada i s'eliminarà. Considereu usar --"
 "track o --set-upstream-to\n"
 
-#: builtin/branch.c:1032
+#: builtin/branch.c:1037
 #, c-format
 msgid ""
 "\n"
 "If you wanted to make '%s' track '%s', do this:\n"
 "\n"
 msgstr ""
 "\n"
 "Si volíeu fer '%s' seguir '%s', feu això:\n"
 "\n"
 
-#: builtin/branch.c:1033
+#: builtin/branch.c:1038
 #, c-format
 msgid "    git branch -d %s\n"
 msgstr "    git branch -d %s\n"
 
-#: builtin/branch.c:1034
+#: builtin/branch.c:1039
 #, c-format
 msgid "    git branch --set-upstream-to %s\n"
 msgstr "    git branch --set-upstream-to %s\n"
 
 #: builtin/bundle.c:47
 #, c-format
 msgid "%s is okay\n"
 msgstr "%s està bé\n"
 
 #: builtin/bundle.c:56
 msgid "Need a repository to create a bundle."
-msgstr "Cal un dipòsit per a fer un embolic."
+msgstr "Cal un dipòsit per a fer un farcell."
 
 #: builtin/bundle.c:60
 msgid "Need a repository to unbundle."
-msgstr "Cal un dipòsit per a desembolicar."
+msgstr "Cal un dipòsit per a desfer un farcell."
 
-#: builtin/cat-file.c:332
+#: builtin/cat-file.c:328
 msgid "git cat-file (-t|-s|-e|-p|<type>|--textconv) <object>"
 msgstr "git cat-file (-t|-s|-e|-p|<tipus>|--textconv) <objecte>"
 
-#: builtin/cat-file.c:333
+#: builtin/cat-file.c:329
 msgid "git cat-file (--batch|--batch-check) < <list_of_objects>"
 msgstr "git cat-file (--batch|--batch-check) < <llista_de_objectes>"
 
-#: builtin/cat-file.c:370
+#: builtin/cat-file.c:366
 msgid "<type> can be one of: blob, tree, commit, tag"
 msgstr "<tipus> pot ser un de: blob, tree, commit, tag"
 
-#: builtin/cat-file.c:371
+#: builtin/cat-file.c:367
 msgid "show object type"
 msgstr "mostra el tipus de l'objecte"
 
-#: builtin/cat-file.c:372
+#: builtin/cat-file.c:368
 msgid "show object size"
 msgstr "mostra la mida de l'objecte"
 
-#: builtin/cat-file.c:374
+#: builtin/cat-file.c:370
 msgid "exit with zero when there's no error"
 msgstr "surt amb zero quan no hi ha error"
 
-#: builtin/cat-file.c:375
+#: builtin/cat-file.c:371
 msgid "pretty-print object's content"
-msgstr "imprimeix bellament el contingut de l'objecte "
+msgstr "imprimeix bellament el contingut de l'objecte"
 
-#: builtin/cat-file.c:377
+#: builtin/cat-file.c:373
 msgid "for blob objects, run textconv on object's content"
 msgstr "en els objectes de blob, executa textconv en el contingut de l'objecte"
 
-#: builtin/cat-file.c:379
+#: builtin/cat-file.c:375
 msgid "show info and content of objects fed from the standard input"
 msgstr ""
 "mostra la informació i contingut dels objectes rebuts de l'entrada estàndard"
 
-#: builtin/cat-file.c:382
+#: builtin/cat-file.c:378
 msgid "show info about objects fed from the standard input"
 msgstr "mostra informació sobre els objectes rebuts de l'entrada estàndard"
 
 #: builtin/check-attr.c:11
 msgid "git check-attr [-a | --all | attr...] [--] pathname..."
-msgstr "git check-attr [-a | --all | atribut...] [--] nom-de-ruta..."
+msgstr "git check-attr [-a | --all | atribut...] [--] nom-de-camí..."
 
 #: builtin/check-attr.c:12
 msgid "git check-attr --stdin [-z] [-a | --all | attr...] < <list-of-paths>"
 msgstr ""
-"git check-attr --stdin [-z] [-a | --all | atribut...] < <llista-de-rutes>"
+"git check-attr --stdin [-z] [-a | --all | atribut...] < <llista-de-camins>"
 
 #: builtin/check-attr.c:19
 msgid "report all attributes set on file"
 msgstr "informa de tots els atributs establerts en el fitxer"
 
 #: builtin/check-attr.c:20
@@ -3272,41 +3278,41 @@
 #: builtin/check-attr.c:21 builtin/check-ignore.c:22 builtin/hash-object.c:98
 msgid "read file names from stdin"
 msgstr "llegeix els noms de fitxer d'stdin"
 
 #: builtin/check-attr.c:23 builtin/check-ignore.c:24
 msgid "terminate input and output records by a NUL character"
-msgstr "termina els registres d'entrada i de salida per un caràcter NUL"
+msgstr "acaba els registres d'entrada i de sortida amb un caràcter NUL"
 
-#: builtin/check-ignore.c:18 builtin/checkout.c:1089 builtin/gc.c:274
+#: builtin/check-ignore.c:18 builtin/checkout.c:1107 builtin/gc.c:274
 msgid "suppress progress reporting"
 msgstr "omet el reportatge de progrés"
 
 #: builtin/check-ignore.c:26
 msgid "show non-matching input paths"
-msgstr "mostra les rutes d'entrada que no coincideixin"
+msgstr "mostra els camins d'entrada que no coincideixin"
 
 #: builtin/check-ignore.c:28
 msgid "ignore index when checking"
-msgstr "ignora l'índex al comprovar"
+msgstr "ignora l'índex en comprovar"
 
 #: builtin/check-ignore.c:154
 msgid "cannot specify pathnames with --stdin"
-msgstr "no es pot especificar noms de ruta amb --stdin"
+msgstr "no es pot especificar noms de camí amb --stdin"
 
 #: builtin/check-ignore.c:157
 msgid "-z only makes sense with --stdin"
 msgstr "-z només té sentit amb --stdin"
 
 #: builtin/check-ignore.c:159
 msgid "no path specified"
-msgstr "cap ruta especificada"
+msgstr "cap camí especificat"
 
 #: builtin/check-ignore.c:163
 msgid "--quiet is only valid with a single pathname"
-msgstr "--quiet només és vàlid amb un nom de ruta solter"
+msgstr "--quiet només és vàlid amb un sol nom de camí"
 
 #: builtin/check-ignore.c:165
 msgid "cannot have both --quiet and --verbose"
 msgstr "no es pot tenir ambdós --quiet i --verbose"
 
 #: builtin/check-ignore.c:168
@@ -3321,13 +3327,13 @@
 msgid "also read contacts from stdin"
 msgstr "també llegeix els contactes des d'stdin"
 
 #: builtin/check-mailmap.c:24
 #, c-format
 msgid "unable to parse contact: %s"
-msgstr "incapaç d'analitzar el contacte: %s"
+msgstr "no s'ha pogut analitzar el contacte: %s"
 
 #: builtin/check-mailmap.c:47
 msgid "no contacts specified"
 msgstr "no hi ha contactes especificats"
 
 #: builtin/checkout-index.c:126
@@ -3353,343 +3359,344 @@
 #: builtin/checkout-index.c:195
 msgid "update stat information in the index file"
 msgstr "actualitza la informació d'estadístiques en el fitxer d'índex"
 
 #: builtin/checkout-index.c:201
 msgid "read list of paths from the standard input"
-msgstr "llegeix la llista de rutes des de l'entrada estàndard"
+msgstr "llegeix la llista de camins des de l'entrada estàndard"
 
 #: builtin/checkout-index.c:203
 msgid "write the content to temporary files"
 msgstr "escriu el contingut a fitxers temporals"
 
 #: builtin/checkout-index.c:204 builtin/column.c:30
 msgid "string"
 msgstr "cadena"
 
 #: builtin/checkout-index.c:205
 msgid "when creating files, prepend <string>"
-msgstr "al crear fitxers, anteposa <cadena>"
+msgstr "en crear fitxers, anteposa <cadena>"
 
 #: builtin/checkout-index.c:208
 msgid "copy out the files from named stage"
 msgstr "copia els fitxers des de l'etapa anomenada"
 
 #: builtin/checkout.c:25
 msgid "git checkout [options] <branch>"
-msgstr "git checkout [opcions] <rama>"
+msgstr "git checkout [opcions] <branca>"
 
 #: builtin/checkout.c:26
 msgid "git checkout [options] [<branch>] -- <file>..."
-msgstr "git checkout [opcions] [<rama>] -- <fitxer>..."
+msgstr "git checkout [opcions] [<branca>] -- <fitxer>..."
 
-#: builtin/checkout.c:114 builtin/checkout.c:147
+#: builtin/checkout.c:132 builtin/checkout.c:165
 #, c-format
 msgid "path '%s' does not have our version"
-msgstr "la ruta '%s' no té la versió nostra"
+msgstr "el camí '%s' no té la versió nostra"
 
-#: builtin/checkout.c:116 builtin/checkout.c:149
+#: builtin/checkout.c:134 builtin/checkout.c:167
 #, c-format
 msgid "path '%s' does not have their version"
-msgstr "la ruta '%s' no té la versió seva"
+msgstr "el camí '%s' no té la versió seva"
 
-#: builtin/checkout.c:132
+#: builtin/checkout.c:150
 #, c-format
 msgid "path '%s' does not have all necessary versions"
-msgstr "la ruta '%s' no té totes les versions necessàries"
+msgstr "el camí '%s' no té totes les versions necessàries"
 
-#: builtin/checkout.c:176
+#: builtin/checkout.c:194
 #, c-format
 msgid "path '%s' does not have necessary versions"
-msgstr "la ruta '%s' no té les versions necessàries"
+msgstr "el camí '%s' no té les versions necessàries"
 
-#: builtin/checkout.c:193
+#: builtin/checkout.c:211
 #, c-format
 msgid "path '%s': cannot merge"
-msgstr "ruta '%s': no es pot fusionar"
+msgstr "camí '%s': no es pot fusionar"
 
-#: builtin/checkout.c:210
+#: builtin/checkout.c:228
 #, c-format
 msgid "Unable to add merge result for '%s'"
-msgstr "Incapaç d'afegir el resultat de fusió per a '%s'"
+msgstr "no s'ha pogut afegir el resultat de fusió per a '%s'"
 
-#: builtin/checkout.c:231 builtin/checkout.c:234 builtin/checkout.c:237
-#: builtin/checkout.c:240
+#: builtin/checkout.c:249 builtin/checkout.c:252 builtin/checkout.c:255
+#: builtin/checkout.c:258
 #, c-format
 msgid "'%s' cannot be used with updating paths"
-msgstr "'%s' no es pot usar amb actualització de rutes"
+msgstr "'%s' no es pot usar amb actualització de camins"
 
-#: builtin/checkout.c:243 builtin/checkout.c:246
+#: builtin/checkout.c:261 builtin/checkout.c:264
 #, c-format
 msgid "'%s' cannot be used with %s"
 msgstr "'%s' no es pot usar amb %s"
 
-#: builtin/checkout.c:249
+#: builtin/checkout.c:267
 #, c-format
 msgid "Cannot update paths and switch to branch '%s' at the same time."
-msgstr "No es pot actualitzar les rutes i canviar a la rama '%s' a la vegada."
+msgstr ""
+"No es pot actualitzar els camins i canviar a la branca '%s' a la vegada."
 
-#: builtin/checkout.c:260 builtin/checkout.c:449
+#: builtin/checkout.c:278 builtin/checkout.c:467
 msgid "corrupt index file"
 msgstr "fitxer d'índex corrupte"
 
-#: builtin/checkout.c:320 builtin/checkout.c:327
+#: builtin/checkout.c:338 builtin/checkout.c:345
 #, c-format
 msgid "path '%s' is unmerged"
-msgstr "la ruta '%s' està sense fusionar"
+msgstr "el camí '%s' està sense fusionar"
 
-#: builtin/checkout.c:471
+#: builtin/checkout.c:489
 msgid "you need to resolve your current index first"
 msgstr "heu de resoldre el vostre índex actual primer"
 
-#: builtin/checkout.c:597
+#: builtin/checkout.c:615
 #, c-format
 msgid "Can not do reflog for '%s'\n"
 msgstr "No es pot fer reflog per a '%s'\n"
 
-#: builtin/checkout.c:635
+#: builtin/checkout.c:653
 msgid "HEAD is now at"
-msgstr "HEAD ara està a"
+msgstr "HEAD ara és a"
 
-#: builtin/checkout.c:642
+#: builtin/checkout.c:660
 #, c-format
 msgid "Reset branch '%s'\n"
-msgstr "Restableix la rama '%s'\n"
+msgstr "Restableix la branca '%s'\n"
 
-#: builtin/checkout.c:645
+#: builtin/checkout.c:663
 #, c-format
 msgid "Already on '%s'\n"
 msgstr "Ja en '%s'\n"
 
-#: builtin/checkout.c:649
+#: builtin/checkout.c:667
 #, c-format
 msgid "Switched to and reset branch '%s'\n"
-msgstr "S'ha agafat i restablert la rama '%s'\n"
+msgstr "S'ha agafat i restablert la branca '%s'\n"
 
-#: builtin/checkout.c:651 builtin/checkout.c:1032
+#: builtin/checkout.c:669 builtin/checkout.c:1050
 #, c-format
 msgid "Switched to a new branch '%s'\n"
-msgstr "S'ha agafat la rama nova '%s'\n"
+msgstr "S'ha agafat la branca nova '%s'\n"
 
-#: builtin/checkout.c:653
+#: builtin/checkout.c:671
 #, c-format
 msgid "Switched to branch '%s'\n"
-msgstr "S'ha agafat la rama '%s'\n"
+msgstr "S'ha agafat la branca '%s'\n"
 
-#: builtin/checkout.c:705
+#: builtin/checkout.c:723
 #, c-format
 msgid " ... and %d more.\n"
 msgstr " ... i %d més.\n"
 
-#: builtin/checkout.c:711
+#: builtin/checkout.c:729
 #, c-format
 msgid ""
 "Warning: you are leaving %d commit behind, not connected to\n"
 "any of your branches:\n"
 "\n"
 "%s\n"
 msgid_plural ""
 "Warning: you are leaving %d commits behind, not connected to\n"
 "any of your branches:\n"
 "\n"
 "%s\n"
 msgstr[0] ""
-"Avís: esteu deixant %d comissió darrere, no connectada a\n"
-"qualsevulla de les vostres rames:\n"
+"Avís: esteu deixant enrere %d comissió, no connectada a\n"
+"cap de les vostres branques:\n"
 "\n"
 "%s\n"
 msgstr[1] ""
-"Avís: esteu deixant %d comissions darrere, no connectada a\n"
-"qualsevulla de les vostres rames:\n"
+"Avís: esteu deixant enrere %d comissions, no connectades a\n"
+"cap de les vostres branques:\n"
 "\n"
 "%s\n"
 
-#: builtin/checkout.c:729
+#: builtin/checkout.c:747
 #, c-format
 msgid ""
 "If you want to keep them by creating a new branch, this may be a good time\n"
 "to do so with:\n"
 "\n"
 " git branch new_branch_name %s\n"
 "\n"
 msgstr ""
-"Si els voleu retenir per a crear una rama nova, ara pot ser una hora bona\n"
-"per a fer això amb:\n"
+"Si els voleu retenir per a crear una branca nova, ara pot ser un bon moment\n"
+"per a fer-ho amb:\n"
 "\n"
-" git branch new_branch_name %s\n"
+" git branch nom_de_branca_nova %s\n"
 "\n"
 
-#: builtin/checkout.c:759
+#: builtin/checkout.c:777
 msgid "internal error in revision walk"
 msgstr "error intern en el passeig per revisions"
 
-#: builtin/checkout.c:763
+#: builtin/checkout.c:781
 msgid "Previous HEAD position was"
-msgstr "La posició de HEAD anterior ha estat"
+msgstr "La posició de HEAD anterior era"
 
-#: builtin/checkout.c:790 builtin/checkout.c:1027
+#: builtin/checkout.c:808 builtin/checkout.c:1045
 msgid "You are on a branch yet to be born"
-msgstr "Esteu en una rama que encara ha de nàixer"
+msgstr "Sou en una branca que encara ha de nàixer"
 
-#: builtin/checkout.c:934
+#: builtin/checkout.c:952
 #, c-format
 msgid "only one reference expected, %d given."
 msgstr "només una referència esperada, %d donades."
 
-#: builtin/checkout.c:973
+#: builtin/checkout.c:991
 #, c-format
 msgid "invalid reference: %s"
-msgstr "referència invàlida: %s"
+msgstr "referència no vàlida: %s"
 
-#: builtin/checkout.c:1002
+#: builtin/checkout.c:1020
 #, c-format
 msgid "reference is not a tree: %s"
-msgstr "la referéncia no és un arbre: %s"
+msgstr "la referència no és un arbre: %s"
 
-#: builtin/checkout.c:1041
+#: builtin/checkout.c:1059
 msgid "paths cannot be used with switching branches"
-msgstr "les rutes no es poden usar amb canvi de rama"
+msgstr "els camins no es poden usar amb canvi de branca"
 
-#: builtin/checkout.c:1044 builtin/checkout.c:1048
+#: builtin/checkout.c:1062 builtin/checkout.c:1066
 #, c-format
 msgid "'%s' cannot be used with switching branches"
-msgstr "'%s' no es pot usar amb canvi de rama"
+msgstr "'%s' no es pot usar amb canvi de branca"
 
-#: builtin/checkout.c:1052 builtin/checkout.c:1055 builtin/checkout.c:1060
-#: builtin/checkout.c:1063
+#: builtin/checkout.c:1070 builtin/checkout.c:1073 builtin/checkout.c:1078
+#: builtin/checkout.c:1081
 #, c-format
 msgid "'%s' cannot be used with '%s'"
 msgstr "'%s' no es pot usar amb '%s'"
 
-#: builtin/checkout.c:1068
+#: builtin/checkout.c:1086
 #, c-format
 msgid "Cannot switch branch to a non-commit '%s'"
-msgstr "No es pot canviar la rama a un no comissió '%s'"
+msgstr "No es pot canviar la branca a una no comissió '%s'"
 
-#: builtin/checkout.c:1090 builtin/checkout.c:1092 builtin/clone.c:89
+#: builtin/checkout.c:1108 builtin/checkout.c:1110 builtin/clone.c:90
 #: builtin/remote.c:159 builtin/remote.c:161
 msgid "branch"
-msgstr "rama"
+msgstr "branca"
 
-#: builtin/checkout.c:1091
+#: builtin/checkout.c:1109
 msgid "create and checkout a new branch"
-msgstr "crea i agafa una rama nova"
+msgstr "crea i agafa una branca nova"
 
-#: builtin/checkout.c:1093
+#: builtin/checkout.c:1111
 msgid "create/reset and checkout a branch"
-msgstr "crea/restableix i agafa una rama"
+msgstr "crea/restableix i agafa una branca"
 
-#: builtin/checkout.c:1094
+#: builtin/checkout.c:1112
 msgid "create reflog for new branch"
-msgstr "crea un registre de referència per a la rama nova"
+msgstr "crea un registre de referència per a la branca nova"
 
-#: builtin/checkout.c:1095
+#: builtin/checkout.c:1113
 msgid "detach the HEAD at named commit"
 msgstr "separa el HEAD a la comissió anomenada"
 
-#: builtin/checkout.c:1096
+#: builtin/checkout.c:1114
 msgid "set upstream info for new branch"
-msgstr "estableix la informació de font de la rama nova"
+msgstr "estableix la informació de font de la branca nova"
 
-#: builtin/checkout.c:1098
+#: builtin/checkout.c:1116
 msgid "new-branch"
-msgstr "rama-nova"
+msgstr "branca-nova"
 
-#: builtin/checkout.c:1098
+#: builtin/checkout.c:1116
 msgid "new unparented branch"
-msgstr "rama nova sense pares"
+msgstr "branca nova sense mare"
 
-#: builtin/checkout.c:1099
+#: builtin/checkout.c:1117
 msgid "checkout our version for unmerged files"
 msgstr "agafa la versió nostra dels fitxers sense fusionar"
 
-#: builtin/checkout.c:1101
+#: builtin/checkout.c:1119
 msgid "checkout their version for unmerged files"
 msgstr "agafa la versió seva dels fitxers sense fusionar"
 
-#: builtin/checkout.c:1103
+#: builtin/checkout.c:1121
 msgid "force checkout (throw away local modifications)"
 msgstr "agafa a la força (descarta qualsevulles modificacions locals)"
 
-#: builtin/checkout.c:1104
+#: builtin/checkout.c:1122
 msgid "perform a 3-way merge with the new branch"
-msgstr "realitza una fusió de 3 vies amb la rama nova"
+msgstr "realitza una fusió de 3 vies amb la branca nova"
 
-#: builtin/checkout.c:1105 builtin/merge.c:226
+#: builtin/checkout.c:1123 builtin/merge.c:227
 msgid "update ignored files (default)"
 msgstr "actualitza els fitxers ignorats (per defecte)"
 
-#: builtin/checkout.c:1106 builtin/log.c:1239 parse-options.h:245
+#: builtin/checkout.c:1124 builtin/log.c:1239 parse-options.h:245
 msgid "style"
 msgstr "estil"
 
-#: builtin/checkout.c:1107
+#: builtin/checkout.c:1125
 msgid "conflict style (merge or diff3)"
 msgstr "estil de conflicte (fusió o diff3)"
 
-#: builtin/checkout.c:1110
+#: builtin/checkout.c:1128
 msgid "do not limit pathspecs to sparse entries only"
-msgstr "no limitis les especificacions de ruta a entrades escasses només"
+msgstr "no limitis les especificacions de camí només a entrades escasses"
 
-#: builtin/checkout.c:1112
+#: builtin/checkout.c:1130
 msgid "second guess 'git checkout no-such-branch'"
-msgstr "dubta 'git checkout cap-rama-així'"
+msgstr "dubta 'git checkout cap-branca-així'"
 
-#: builtin/checkout.c:1135
+#: builtin/checkout.c:1153
 msgid "-b, -B and --orphan are mutually exclusive"
 msgstr "-b, -B i --orphan són mutualment exclusius"
 
-#: builtin/checkout.c:1152
+#: builtin/checkout.c:1170
 msgid "--track needs a branch name"
-msgstr "--track necessita un nom de rama"
+msgstr "--track necessita un nom de branca"
 
-#: builtin/checkout.c:1157
+#: builtin/checkout.c:1175
 msgid "Missing branch name; try -b"
-msgstr "Manca el nom de rama; proveu -b"
+msgstr "Manca el nom de branca; proveu -b"
 
-#: builtin/checkout.c:1194
+#: builtin/checkout.c:1212
 msgid "invalid path specification"
-msgstr "especificació de ruta invàlida"
+msgstr "especificació de camí no vàlida"
 
-#: builtin/checkout.c:1201
+#: builtin/checkout.c:1219
 #, c-format
 msgid ""
 "Cannot update paths and switch to branch '%s' at the same time.\n"
 "Did you intend to checkout '%s' which can not be resolved as commit?"
 msgstr ""
-"No es pot actualitzar rames i canviar a la rama '%s' a la vegada.\n"
-"Volíeu agafar '%s' la qual no es pot resoldre com a comissió?"
+"No es poden actualitzar els camins i canviar a la branca '%s' a la vegada.\n"
+"Volíeu agafar '%s', la qual no es pot resoldre com a comissió?"
 
-#: builtin/checkout.c:1206
+#: builtin/checkout.c:1224
 #, c-format
 msgid "git checkout: --detach does not take a path argument '%s'"
-msgstr "git checkout: --detach no accepta un paràmetre de ruta '%s'"
+msgstr "git checkout: --detach no accepta un paràmetre de camí '%s'"
 
-#: builtin/checkout.c:1210
+#: builtin/checkout.c:1228
 msgid ""
 "git checkout: --ours/--theirs, --force and --merge are incompatible when\n"
 "checking out of the index."
 msgstr ""
-"git checkout: --ours/--theirs, --force i --merge són incompatibles al\n"
+"git checkout: --ours/--theirs, --force i --merge són incompatibles en\n"
 "agafar de l'índex."
 
 #: builtin/clean.c:26
 msgid ""
 "git clean [-d] [-f] [-i] [-n] [-q] [-e <pattern>] [-x | -X] [--] <paths>..."
 msgstr ""
-"git clean [-d] [-f] [-i] [-n] [-q] [-e <patró>] [-x | -X] [--] <rutes>..."
+"git clean [-d] [-f] [-i] [-n] [-q] [-e <patró>] [-x | -X] [--] <camins>..."
 
 #: builtin/clean.c:30
 #, c-format
 msgid "Removing %s\n"
-msgstr "Traient %s\n"
+msgstr "Eliminant %s\n"
 
 #: builtin/clean.c:31
 #, c-format
 msgid "Would remove %s\n"
-msgstr "Trauria %s\n"
+msgstr "Eliminaria %s\n"
 
 #: builtin/clean.c:32
 #, c-format
 msgid "Skipping repository %s\n"
 msgstr "Saltant el dipòsit %s\n"
 
@@ -3698,25 +3705,25 @@
 msgid "Would skip repository %s\n"
 msgstr "Saltaria el dipòsit %s\n"
 
 #: builtin/clean.c:34
 #, c-format
 msgid "failed to remove %s"
-msgstr "s'ha fallat en treure %s"
+msgstr "s'ha fallat en eliminar %s"
 
 #: builtin/clean.c:295
 msgid ""
 "Prompt help:\n"
 "1          - select a numbered item\n"
 "foo        - select item based on unique prefix\n"
 "           - (empty) select nothing"
 msgstr ""
 "Ajuda d'avís:\n"
 "1          - selecciona un ítem numerat\n"
 "foo        - selecciona un ítem basat en un prefix únic\n"
-"           - (buit) selecciona res"
+"           - (buit) no seleccionis res"
 
 #: builtin/clean.c:299
 msgid ""
 "Prompt help:\n"
 "1          - select a single item\n"
 "3-5        - select a range of items\n"
@@ -3724,19 +3731,19 @@
 "foo        - select item based on unique prefix\n"
 "-...       - unselect specified items\n"
 "*          - choose all items\n"
 "           - (empty) finish selecting"
 msgstr ""
 "Ajuda d'avís:\n"
-"1          - selecciona un ítem solter\n"
+"1          - selecciona un sol ítem\n"
 "3-5        - selecciona un rang d'ítems\n"
 "2-3,6-9    - selecciona múltiples rangs\n"
 "foo        - selecciona un ítem basat en un prefix únic\n"
 "-...       - desselecciona els ítems seleccionats\n"
 "*          - tria tots els ítems\n"
-"           - (buit) termina la selecció"
+"           - (buit) finalitza la selecció"
 
 #: builtin/clean.c:517
 #, c-format
 msgid "Huh (%s)?"
 msgstr "Perdó (%s)?"
 
@@ -3754,13 +3761,13 @@
 msgid "Select items to delete"
 msgstr "Selecciona els ítems a suprimir"
 
 #: builtin/clean.c:757
 #, c-format
 msgid "remove %s? "
-msgstr "treure %s?"
+msgstr "eliminar %s? "
 
 #: builtin/clean.c:782
 msgid "Bye."
 msgstr "Adéu."
 
 #: builtin/clean.c:790
@@ -3789,51 +3796,51 @@
 msgid "What now"
 msgstr "Què ara"
 
 #: builtin/clean.c:826
 msgid "Would remove the following item:"
 msgid_plural "Would remove the following items:"
-msgstr[0] "Trauria l'ítem següent:"
-msgstr[1] "Trauria els ítems següents:"
+msgstr[0] "Eliminaria l'ítem següent:"
+msgstr[1] "Eliminaria els ítems següents:"
 
 #: builtin/clean.c:843
 msgid "No more files to clean, exiting."
 msgstr "No hi ha més fitxers a netejar; sortint."
 
 #: builtin/clean.c:874
 msgid "do not print names of files removed"
-msgstr "no imprimeixis els noms dels fitxers trets"
+msgstr "no imprimeixis els noms dels fitxers eliminats"
 
 #: builtin/clean.c:876
 msgid "force"
 msgstr "força"
 
 #: builtin/clean.c:877
 msgid "interactive cleaning"
 msgstr "neteja interactiva"
 
 #: builtin/clean.c:879
 msgid "remove whole directories"
-msgstr "treu directoris enters"
+msgstr "elimina directoris sencers"
 
 #: builtin/clean.c:880 builtin/describe.c:407 builtin/grep.c:714
 #: builtin/ls-files.c:486 builtin/name-rev.c:311 builtin/show-ref.c:185
 msgid "pattern"
 msgstr "patró"
 
 #: builtin/clean.c:881
 msgid "add <pattern> to ignore rules"
 msgstr "afegiu <patró> per a ignorar les regles"
 
 #: builtin/clean.c:882
 msgid "remove ignored files, too"
-msgstr "treu els fitxers ignorats, també"
+msgstr "elimina els fitxers ignorats, també"
 
 #: builtin/clean.c:884
 msgid "remove only ignored files"
-msgstr "treu només els fitxers ignorats"
+msgstr "elimina només els fitxers ignorats"
 
 #: builtin/clean.c:902
 msgid "-x and -X cannot be used together"
 msgstr "-x i -X no es poden usar junts"
 
 #: builtin/clean.c:906
@@ -3853,275 +3860,291 @@
 "refusant netejar"
 
 #: builtin/clone.c:37
 msgid "git clone [options] [--] <repo> [<dir>]"
 msgstr "git clone [opcions] [--] <dipòsit> [<directori>]"
 
-#: builtin/clone.c:65 builtin/fetch.c:112 builtin/merge.c:223
+#: builtin/clone.c:66 builtin/fetch.c:112 builtin/merge.c:224
 #: builtin/push.c:514
 msgid "force progress reporting"
 msgstr "força l'informe de progrés"
 
-#: builtin/clone.c:67
+#: builtin/clone.c:68
 msgid "don't create a checkout"
-msgstr "no fes una agafada"
+msgstr "no facis cap agafada"
 
-#: builtin/clone.c:68 builtin/clone.c:70 builtin/init-db.c:488
+#: builtin/clone.c:69 builtin/clone.c:71 builtin/init-db.c:496
 msgid "create a bare repository"
 msgstr "crea un dipòsit nu"
 
-#: builtin/clone.c:72
+#: builtin/clone.c:73
 msgid "create a mirror repository (implies bare)"
 msgstr "crea un dipòsit reflectit (implica bare)"
 
-#: builtin/clone.c:74
+#: builtin/clone.c:75
 msgid "to clone from a local repository"
 msgstr "per a clonar des d'un dipòsit local"
 
-#: builtin/clone.c:76
+#: builtin/clone.c:77
 msgid "don't use local hardlinks, always copy"
 msgstr "no usis enllaços durs locals, sempre copia"
 
-#: builtin/clone.c:78
+#: builtin/clone.c:79
 msgid "setup as shared repository"
 msgstr "configura com a dipòsit compartit"
 
-#: builtin/clone.c:80 builtin/clone.c:82
+#: builtin/clone.c:81 builtin/clone.c:83
 msgid "initialize submodules in the clone"
 msgstr "initialitza els submòduls en el clon"
 
-#: builtin/clone.c:83 builtin/init-db.c:485
+#: builtin/clone.c:84 builtin/init-db.c:493
 msgid "template-directory"
 msgstr "directori-de-plantilla"
 
-#: builtin/clone.c:84 builtin/init-db.c:486
+#: builtin/clone.c:85 builtin/init-db.c:494
 msgid "directory from which templates will be used"
 msgstr "directori del qual les plantilles s'usaran"
 
-#: builtin/clone.c:86
+#: builtin/clone.c:87
 msgid "reference repository"
 msgstr "dipòsit de referència"
 
-#: builtin/clone.c:87 builtin/column.c:26 builtin/merge-file.c:44
+#: builtin/clone.c:88 builtin/column.c:26 builtin/merge-file.c:44
 msgid "name"
 msgstr "nom"
 
-#: builtin/clone.c:88
+#: builtin/clone.c:89
 msgid "use <name> instead of 'origin' to track upstream"
 msgstr "usa <nom> en lloc de 'origin' per a seguir la font"
 
-#: builtin/clone.c:90
+#: builtin/clone.c:91
 msgid "checkout <branch> instead of the remote's HEAD"
-msgstr "agafa <rama> en lloc del HEAD del remot"
+msgstr "agafa <branca> en lloc del HEAD del remot"
 
-#: builtin/clone.c:92
+#: builtin/clone.c:93
 msgid "path to git-upload-pack on the remote"
-msgstr "ruta a git-upload-pack en el remot"
+msgstr "camí a git-upload-pack en el remot"
 
-#: builtin/clone.c:93 builtin/fetch.c:113 builtin/grep.c:659
+#: builtin/clone.c:94 builtin/fetch.c:113 builtin/grep.c:659
 msgid "depth"
 msgstr "profunditat"
 
-#: builtin/clone.c:94
+#: builtin/clone.c:95
 msgid "create a shallow clone of that depth"
 msgstr "crea un clon superficial de tal profunditat"
 
-#: builtin/clone.c:96
+#: builtin/clone.c:97
 msgid "clone only one branch, HEAD or --branch"
-msgstr "clona només una rama, HEAD o --branch"
+msgstr "clona només una branca, HEAD o --branch"
+
+#: builtin/clone.c:99
+msgid "use --reference only while cloning"
+msgstr "usa --reference només en clonar"
 
-#: builtin/clone.c:97 builtin/init-db.c:494
+#: builtin/clone.c:100 builtin/init-db.c:502
 msgid "gitdir"
 msgstr "directori de git"
 
-#: builtin/clone.c:98 builtin/init-db.c:495
+#: builtin/clone.c:101 builtin/init-db.c:503
 msgid "separate git dir from working tree"
 msgstr "separa el directori de git de l'arbre de treball"
 
-#: builtin/clone.c:99
+#: builtin/clone.c:102
 msgid "key=value"
 msgstr "calu=valor"
 
-#: builtin/clone.c:100
+#: builtin/clone.c:103
 msgid "set config inside the new repository"
 msgstr "estableix la configuració dins del dipòsit nou"
 
-#: builtin/clone.c:253
+#: builtin/clone.c:256
 #, c-format
 msgid "reference repository '%s' is not a local repository."
 msgstr "el dipòsit de referència '%s' no és un dipòsit local."
 
-#: builtin/clone.c:257
+#: builtin/clone.c:260
 #, c-format
 msgid "reference repository '%s' is shallow"
 msgstr "el dipòsit de referència '%s' és superficial"
 
-#: builtin/clone.c:260
+#: builtin/clone.c:263
 #, c-format
 msgid "reference repository '%s' is grafted"
 msgstr "el dipòsit de referència '%s' és empeltat"
 
-#: builtin/clone.c:322
+#: builtin/clone.c:325
 #, c-format
 msgid "failed to create directory '%s'"
 msgstr "s'ha fallat en crear el directori '%s'"
 
-#: builtin/clone.c:324 builtin/diff.c:84
+#: builtin/clone.c:327 builtin/diff.c:84
 #, c-format
 msgid "failed to stat '%s'"
 msgstr "s'ha fallat en fer stat a '%s'"
 
-#: builtin/clone.c:326
+#: builtin/clone.c:329
 #, c-format
 msgid "%s exists and is not a directory"
 msgstr "%s existeix i no és un directori"
 
-#: builtin/clone.c:340
+#: builtin/clone.c:343
 #, c-format
 msgid "failed to stat %s\n"
 msgstr "s'ha fallat en fer stat a '%s'\n"
 
-#: builtin/clone.c:362
+#: builtin/clone.c:365
 #, c-format
 msgid "failed to create link '%s'"
 msgstr "s'ha fallat en crear l'enllaç '%s'"
 
-#: builtin/clone.c:366
+#: builtin/clone.c:369
 #, c-format
 msgid "failed to copy file to '%s'"
 msgstr "s'ha fallat en copiar el fitxer a '%s'"
 
-#: builtin/clone.c:389 builtin/clone.c:563
+#: builtin/clone.c:392 builtin/clone.c:566
 #, c-format
 msgid "done.\n"
 msgstr "fet.\n"
 
-#: builtin/clone.c:401
+#: builtin/clone.c:404
 msgid ""
 "Clone succeeded, but checkout failed.\n"
 "You can inspect what was checked out with 'git status'\n"
 "and retry the checkout with 'git checkout -f HEAD'\n"
 msgstr ""
 "La clonació ha tingut èxit, però l'agafada ha fallat.\n"
 "Podeu inspeccionar què s'ha agafat amb 'git status' i\n"
 "tornar a intentar l'agafada amb 'git checkout -f HEAD'\n"
 
-#: builtin/clone.c:478
+#: builtin/clone.c:481
 #, c-format
 msgid "Could not find remote branch %s to clone."
-msgstr "No s'ha pogut trobar la rama remota %s per a clonar."
+msgstr "No s'ha pogut trobar la branca remota %s per a clonar."
 
-#: builtin/clone.c:558
+#: builtin/clone.c:561
 #, c-format
 msgid "Checking connectivity... "
 msgstr "Provant connectivitat... "
 
-#: builtin/clone.c:561
+#: builtin/clone.c:564
 msgid "remote did not send all necessary objects"
 msgstr "el remot no ha enviat tots els objectes necessaris"
 
-#: builtin/clone.c:625
+#: builtin/clone.c:628
 msgid "remote HEAD refers to nonexistent ref, unable to checkout.\n"
 msgstr ""
-"el HEAD remot es refereix a una referència que no existeix; incapaç "
-"d'agafar.\n"
+"el HEAD remot es refereix a una referència que no existeix; no s'ha pogut "
+"agafar.\n"
 
-#: builtin/clone.c:656
+#: builtin/clone.c:659
 msgid "unable to checkout working tree"
-msgstr "incapaç d'agafar l'arbre de treball"
+msgstr "no s'ha pogut agafar l'arbre de treball"
 
-#: builtin/clone.c:765
+#: builtin/clone.c:746
+msgid "cannot repack to clean up"
+msgstr "no es pot reempaquetar per a netejar"
+
+#: builtin/clone.c:748
+msgid "cannot unlink temporary alternates file"
+msgstr "no es pot desenllaçar el fitxer d'alternatives temporal"
+
+#: builtin/clone.c:778
 msgid "Too many arguments."
 msgstr "Hi ha massa paràmetres."
 
-#: builtin/clone.c:769
+#: builtin/clone.c:782
 msgid "You must specify a repository to clone."
 msgstr "Heu d'especificar un dipòsit per a clonar."
 
-#: builtin/clone.c:780
+#: builtin/clone.c:793
 #, c-format
 msgid "--bare and --origin %s options are incompatible."
 msgstr "les opcions --bare i --origin %s són incompatibles."
 
-#: builtin/clone.c:783
+#: builtin/clone.c:796
 msgid "--bare and --separate-git-dir are incompatible."
 msgstr "--bare i --separate-git-dir són incompatibles."
 
-#: builtin/clone.c:796
+#: builtin/clone.c:809
 #, c-format
 msgid "repository '%s' does not exist"
 msgstr "el dipòsit '%s' no existeix"
 
-#: builtin/clone.c:802 builtin/fetch.c:1155
+#: builtin/clone.c:815 builtin/fetch.c:1155
 #, c-format
 msgid "depth %s is not a positive number"
 msgstr "la profunditat %s no és nombre positiu"
 
-#: builtin/clone.c:812
+#: builtin/clone.c:825
 #, c-format
 msgid "destination path '%s' already exists and is not an empty directory."
-msgstr "la ruta destí '%s' ja existeix i no és un directori buit."
+msgstr "el camí destí '%s' ja existeix i no és un directori buit."
 
-#: builtin/clone.c:822
+#: builtin/clone.c:835
 #, c-format
 msgid "working tree '%s' already exists."
 msgstr "l'arbre de treball '%s' ja existeix."
 
-#: builtin/clone.c:835 builtin/clone.c:847
+#: builtin/clone.c:848 builtin/clone.c:860
 #, c-format
 msgid "could not create leading directories of '%s'"
 msgstr "no s'ha pogut crear els directoris inicials de '%s'"
 
-#: builtin/clone.c:838
+#: builtin/clone.c:851
 #, c-format
 msgid "could not create work tree dir '%s'."
 msgstr "no s'ha pogut crear el directori d'arbre de treball '%s'."
 
-#: builtin/clone.c:857
+#: builtin/clone.c:870
 #, c-format
 msgid "Cloning into bare repository '%s'...\n"
 msgstr "Clonant al dipòsit nu '%s'...\n"
 
-#: builtin/clone.c:859
+#: builtin/clone.c:872
 #, c-format
 msgid "Cloning into '%s'...\n"
 msgstr "Clonant a '%s'...\n"
 
-#: builtin/clone.c:895
+#: builtin/clone.c:897
+msgid "--dissociate given, but there is no --reference"
+msgstr "s'ha donat --dissociate, però no hi ha --reference"
+
+#: builtin/clone.c:912
 msgid "--depth is ignored in local clones; use file:// instead."
-msgstr "--depth s'ignora en els clons locals; useu file:// en lloc."
+msgstr "--depth s'ignora en els clons locals; useu file:// en lloc d'això."
 
-#: builtin/clone.c:898
+#: builtin/clone.c:915
 msgid "source repository is shallow, ignoring --local"
 msgstr "el dipòsit font és superficial, ignorant --local"
 
-#: builtin/clone.c:903
+#: builtin/clone.c:920
 msgid "--local is ignored"
 msgstr "--local s'ignora"
 
-#: builtin/clone.c:907
+#: builtin/clone.c:924
 #, c-format
 msgid "Don't know how to clone %s"
 msgstr "No es sap com clonar %s"
 
-#: builtin/clone.c:958 builtin/clone.c:966
+#: builtin/clone.c:975 builtin/clone.c:983
 #, c-format
 msgid "Remote branch %s not found in upstream %s"
-msgstr "La rama remota %s no es troba en la font %s"
+msgstr "La branca remota %s no es troba en la font %s"
 
-#: builtin/clone.c:969
+#: builtin/clone.c:986
 msgid "You appear to have cloned an empty repository."
 msgstr "Sembla que heu clonat un dipòsit buit."
 
 #: builtin/column.c:9
 msgid "git column [options]"
 msgstr "git column [opcions]"
 
 #: builtin/column.c:26
 msgid "lookup config vars"
-msgstr "cerca els variables de configuració"
+msgstr "cerca les variables de configuració"
 
 #: builtin/column.c:27 builtin/column.c:28
 msgid "layout to use"
 msgstr "pla a usar"
 
 #: builtin/column.c:29
@@ -4143,17 +4166,17 @@
 #: builtin/column.c:51
 msgid "--command must be the first argument"
 msgstr "--command ha de ser el primer paràmetre"
 
 #: builtin/commit.c:37
 msgid "git commit [options] [--] <pathspec>..."
-msgstr "git commit [opcions] [--] <especificació-de-ruta>..."
+msgstr "git commit [opcions] [--] <especificació-de-camí>..."
 
 #: builtin/commit.c:42
 msgid "git status [options] [--] <pathspec>..."
-msgstr "git status [opcions] [--] <especificació-de-ruta>..."
+msgstr "git status [opcions] [--] <especificació-de-camí>..."
 
 #: builtin/commit.c:47
 msgid ""
 "Your name and email address were configured automatically based\n"
 "on your username and hostname. Please check that they are accurate.\n"
 "You can suppress this message by setting them explicitly. Run the\n"
@@ -4166,13 +4189,13 @@
 "\n"
 "    git commit --amend --reset-author\n"
 msgstr ""
 "S'han configurat el vostre nom i adreça de correu electrònic\n"
 "automàticament basats en el vostre nom d'usuari i nom de host. Si us\n"
 "plau, comproveu que siguin correctes. Podeu suprimir aquest missatge\n"
-"per establir-los explícitament. Executeu l'ordre següent i seguiu les\n"
+"establint-los explícitament. Executeu l'ordre següent i seguiu les\n"
 "instruccions en el vostre editor per editar el vostre fitxer de\n"
 "configuració:\n"
 "\n"
 "    git config --global --edit\n"
 "Després de fer això, podeu arreglar la identitat usada per a aquesta\n"
 "comissió amb:\n"
@@ -4192,13 +4215,13 @@
 "\n"
 "    git commit --amend --reset-author\n"
 msgstr ""
 "S'han configurat el vostre nom i adreça de correu electrònic\n"
 "automàticament basats en el vostre nom d'usuari i nom de host. Si us\n"
 "plau, comproveu que siguin correctes. Podeu suprimir aquest missatge\n"
-"per establir-los explícitament:\n"
+"establint-los explícitament:\n"
 "\n"
 "    git config --global user.name \"El Vostre Nom\"\n"
 "    git config --global user.email tu@example.com\n"
 "\n"
 "Després de fer això, podeu arreglar la identitat usada per a aquesta\n"
 "comissió amb:\n"
@@ -4208,15 +4231,15 @@
 #: builtin/commit.c:72
 msgid ""
 "You asked to amend the most recent commit, but doing so would make\n"
 "it empty. You can repeat your command with --allow-empty, or you can\n"
 "remove the commit entirely with \"git reset HEAD^\".\n"
 msgstr ""
-"Heu demanat esmenar la comissió més recent, però fer això la feria\n"
-"buida. Podeu repetir el vostre ordre amb --allow-empty, o podeu\n"
-"treure la comissió per complet amb \"git reset HEAD^\".\n"
+"Heu demanat esmenar la comissió més recent, però fer això la\n"
+"deixaria buida. Podeu repetir la vostra ordre amb --allow-empty, o\n"
+"podeu eliminar la comissió per complet amb \"git reset HEAD^\".\n"
 
 #: builtin/commit.c:77
 msgid ""
 "The previous cherry-pick is now empty, possibly due to conflict resolution.\n"
 "If you wish to commit it anyway, use:\n"
 "\n"
@@ -4240,46 +4263,46 @@
 "\n"
 "    git reset\n"
 "\n"
 "Then \"git cherry-pick --continue\" will resume cherry-picking\n"
 "the remaining commits.\n"
 msgstr ""
-"Si voleu saltar aquesta comissió, useu:\n"
+"Si voleu ometre aquesta comissió, useu:\n"
 "\n"
 "    git reset\n"
 "\n"
 "Llavors \"git cherry-pick --continue\" reprendrà recollint\n"
-"com cireres les comissions restants.\n"
+"com a cireres les comissions restants.\n"
 
 #: builtin/commit.c:302
 msgid "failed to unpack HEAD tree object"
 msgstr "s'ha fallat en desempaquetar l'objecte d'arbre HEAD"
 
 #: builtin/commit.c:342
 msgid "unable to create temporary index"
-msgstr "incapaç de crear un índex temporal"
+msgstr "no s'ha pogut crear un índex temporal"
 
 #: builtin/commit.c:348
 msgid "interactive add failed"
 msgstr "l'afegiment interactiu ha fallat"
 
 #: builtin/commit.c:359
 msgid "unable to write index file"
-msgstr "incapaç d'escriure el fitxer d'índex"
+msgstr "no s'ha pogut escriure el fitxer d'índex"
 
 #: builtin/commit.c:361
 msgid "unable to update temporary index"
-msgstr "incapaç de actualitzar l'índex temporal"
+msgstr "no s'ha pogut actualitzar l'índex temporal"
 
 #: builtin/commit.c:363
 msgid "Failed to update main cache tree"
 msgstr "S'ha fallat en actualitzar l'arbre principal de memòria cau"
 
 #: builtin/commit.c:387 builtin/commit.c:412 builtin/commit.c:461
 msgid "unable to write new_index file"
-msgstr "incapaç d'escriure el fitxer new_index"
+msgstr "no s'ha pogut escriure el fitxer new_index"
 
 #: builtin/commit.c:443
 msgid "cannot do a partial commit during a merge."
 msgstr "no es pot fer una comissió parcial durant una fusió."
 
 #: builtin/commit.c:445
@@ -4289,492 +4312,487 @@
 #: builtin/commit.c:454
 msgid "cannot read the index"
 msgstr "no es pot llegir l'índex"
 
 #: builtin/commit.c:473
 msgid "unable to write temporary index file"
-msgstr "incapaç d'escriure un fitxer d'índex temporal"
+msgstr "no s'ha pogut escriure un fitxer d'índex temporal"
 
-#: builtin/commit.c:592
+#: builtin/commit.c:584
 #, c-format
 msgid "commit '%s' lacks author header"
 msgstr "a la comissió '%s' li manca la capçalera d'autor"
 
-#: builtin/commit.c:594
+#: builtin/commit.c:586
 #, c-format
 msgid "commit '%s' has malformed author line"
-msgstr "la comissió '%s' té una línia d'autor malformada"
+msgstr "la comissió '%s' té una línia d'autor mal formada"
 
-#: builtin/commit.c:613
+#: builtin/commit.c:605
 msgid "malformed --author parameter"
-msgstr "paràmetre --author malformat"
+msgstr "paràmetre --author mal format"
 
-#: builtin/commit.c:621
+#: builtin/commit.c:613
 #, c-format
 msgid "invalid date format: %s"
-msgstr "format de data invàlid: %s"
+msgstr "format de data no vàlid: %s"
 
-#: builtin/commit.c:642
-#, c-format
-msgid "Malformed ident string: '%s'"
-msgstr "Cadena d'identificació malformada: '%s'"
-
-#: builtin/commit.c:675
+#: builtin/commit.c:657
 msgid ""
 "unable to select a comment character that is not used\n"
 "in the current commit message"
 msgstr ""
-"incapaç de seleccionar un caràcter de comentari que\n"
+"no es pot seleccionar un caràcter de comentari que\n"
 "no sigui usat en el missatge de comissió actual"
 
-#: builtin/commit.c:712 builtin/commit.c:745 builtin/commit.c:1120
+#: builtin/commit.c:694 builtin/commit.c:727 builtin/commit.c:1084
 #, c-format
 msgid "could not lookup commit %s"
 msgstr "no s'ha pogut trobar la comissió %s"
 
-#: builtin/commit.c:724 builtin/shortlog.c:273
+#: builtin/commit.c:706 builtin/shortlog.c:273
 #, c-format
 msgid "(reading log message from standard input)\n"
 msgstr "(llegint el missatge de registre de l'entrada estàndard)\n"
 
-#: builtin/commit.c:726
+#: builtin/commit.c:708
 msgid "could not read log from standard input"
 msgstr "no s'ha pogut llegir de l'entrada estàndard"
 
-#: builtin/commit.c:730
+#: builtin/commit.c:712
 #, c-format
 msgid "could not read log file '%s'"
 msgstr "no s'ha pogut llegir el fitxer de registre '%s'"
 
-#: builtin/commit.c:752
+#: builtin/commit.c:734
 msgid "could not read MERGE_MSG"
 msgstr "no s'ha pogut llegir MERGE_MSG"
 
-#: builtin/commit.c:756
+#: builtin/commit.c:738
 msgid "could not read SQUASH_MSG"
 msgstr "no s'ha pogur llegir SQUASH_MSG"
 
-#: builtin/commit.c:760
+#: builtin/commit.c:742
 #, c-format
 msgid "could not read '%s'"
 msgstr "no s'ha pogut llegir '%s'"
 
-#: builtin/commit.c:831
+#: builtin/commit.c:789
 msgid "could not write commit template"
 msgstr "no s'ha pogut escriure la plantilla de comissió"
 
-#: builtin/commit.c:849
+#: builtin/commit.c:807
 #, c-format
 msgid ""
 "\n"
 "It looks like you may be committing a merge.\n"
 "If this is not correct, please remove the file\n"
 "\t%s\n"
 "and try again.\n"
 msgstr ""
 "\n"
 "Sembla que podeu estar cometent una fusió.\n"
-"Si això no és correcte, si us plau, treu el fitxer\n"
+"Si això no és correcte, si us plau, elimineu el fitxer\n"
 "\t%s\n"
-"i intenteu de nou.\n"
+"i intenteu-ho de nou.\n"
 
-#: builtin/commit.c:854
+#: builtin/commit.c:812
 #, c-format
 msgid ""
 "\n"
 "It looks like you may be committing a cherry-pick.\n"
 "If this is not correct, please remove the file\n"
 "\t%s\n"
 "and try again.\n"
 msgstr ""
 "\n"
 "Sembla que podeu estar cometent un recull de cireres.\n"
-"Si això no és correcte, si us plau treu el fitxer\n"
+"Si això no és correcte, si us plau elimineu el fitxer\n"
 "\t%s\n"
-"i intenteu de nou.\n"
+"i intenteu-ho de nou.\n"
 
-#: builtin/commit.c:867
+#: builtin/commit.c:825
 #, c-format
 msgid ""
 "Please enter the commit message for your changes. Lines starting\n"
 "with '%c' will be ignored, and an empty message aborts the commit.\n"
 msgstr ""
 "Si us plau, introduïu el missatge de comissió dels vostres canvis.\n"
 "S'ignoraran les línies començant amb '%c', i un missatge de\n"
 "comissió buit avorta la comissió.\n"
 
-#: builtin/commit.c:874
+#: builtin/commit.c:832
 #, c-format
 msgid ""
 "Please enter the commit message for your changes. Lines starting\n"
 "with '%c' will be kept; you may remove them yourself if you want to.\n"
 "An empty message aborts the commit.\n"
 msgstr ""
 "Si us plau, introduïu el missatge de comissió dels vostres canvis.\n"
-"Es retindran les línies començants amb '%c'; podeu treure'ls per vós\n"
+"Es retindran les línies començants amb '%c'; podeu eliminar-les per vós\n"
 "mateix si voleu. Un missatge buit avorta la comissió.\n"
 
-#: builtin/commit.c:888
+#: builtin/commit.c:852
 #, c-format
 msgid "%sAuthor:    %.*s <%.*s>"
 msgstr "%sAutor:    %.*s <%.*s>"
 
-#: builtin/commit.c:896
+#: builtin/commit.c:860
 #, c-format
 msgid "%sDate:      %s"
 msgstr "%sData:      %s"
 
-#: builtin/commit.c:903
+#: builtin/commit.c:867
 #, c-format
 msgid "%sCommitter: %.*s <%.*s>"
 msgstr "%sComitent: %.*s <%.*s>"
 
-#: builtin/commit.c:921
+#: builtin/commit.c:885
 msgid "Cannot read index"
 msgstr "No es pot llegir l'índex"
 
-#: builtin/commit.c:978
+#: builtin/commit.c:942
 msgid "Error building trees"
 msgstr "Error en construir arbres"
 
-#: builtin/commit.c:993 builtin/tag.c:495
+#: builtin/commit.c:957 builtin/tag.c:495
 #, c-format
 msgid "Please supply the message using either -m or -F option.\n"
 msgstr "Si us plau, proveïu el missatge per usar o l'opció -m o l'opció -F.\n"
 
-#: builtin/commit.c:1095
+#: builtin/commit.c:1059
 #, c-format
 msgid "No existing author found with '%s'"
 msgstr "Cap autor existent trobat amb '%s'"
 
-#: builtin/commit.c:1110 builtin/commit.c:1350
+#: builtin/commit.c:1074 builtin/commit.c:1314
 #, c-format
 msgid "Invalid untracked files mode '%s'"
-msgstr "Mode de fitxers no seguits invàlid '%s'"
+msgstr "Mode de fitxers no seguits no vàlid '%s'"
 
-#: builtin/commit.c:1147
+#: builtin/commit.c:1111
 msgid "--long and -z are incompatible"
 msgstr "--long i -z són incompatibles"
 
-#: builtin/commit.c:1177
+#: builtin/commit.c:1141
 msgid "Using both --reset-author and --author does not make sense"
 msgstr "Usar ambdós --reset-author i --author no té sentit"
 
-#: builtin/commit.c:1186
+#: builtin/commit.c:1150
 msgid "You have nothing to amend."
 msgstr "No teniu res a esmenar."
 
-#: builtin/commit.c:1189
+#: builtin/commit.c:1153
 msgid "You are in the middle of a merge -- cannot amend."
-msgstr "Esteu en el medi d'una fusió -- no es pot esmenar."
+msgstr "Esteu enmig d'una fusió -- no es pot esmenar."
 
-#: builtin/commit.c:1191
+#: builtin/commit.c:1155
 msgid "You are in the middle of a cherry-pick -- cannot amend."
-msgstr "Esteu en el medi d'un recull de cireres -- no es pot esmenar."
+msgstr "Esteu enmig d'un recull de cireres -- no es pot esmenar."
 
-#: builtin/commit.c:1194
+#: builtin/commit.c:1158
 msgid "Options --squash and --fixup cannot be used together"
-msgstr "Les opcions --squash i --fixup no es poden usar junts"
+msgstr "Les opcions --squash i --fixup no es poden usar juntes"
 
-#: builtin/commit.c:1204
+#: builtin/commit.c:1168
 msgid "Only one of -c/-C/-F/--fixup can be used."
 msgstr "Només un de -c/-C/-F/--fixup es pot usar."
 
-#: builtin/commit.c:1206
+#: builtin/commit.c:1170
 msgid "Option -m cannot be combined with -c/-C/-F/--fixup."
 msgstr "L'opció -m no es pot combinar amb -c/-C/-F/--fixup."
 
-#: builtin/commit.c:1214
+#: builtin/commit.c:1178
 msgid "--reset-author can be used only with -C, -c or --amend."
 msgstr "--reset-author només es pot usar amb -C, -c o --amend."
 
-#: builtin/commit.c:1231
+#: builtin/commit.c:1195
 msgid "Only one of --include/--only/--all/--interactive/--patch can be used."
 msgstr "Només un de --include/--only/--all/--interactive/--patch es pot usar."
 
-#: builtin/commit.c:1233
+#: builtin/commit.c:1197
 msgid "No paths with --include/--only does not make sense."
-msgstr "--include/--only no té sentit sense ruta."
+msgstr "--include/--only no té sentit sense camí."
 
-#: builtin/commit.c:1235
+#: builtin/commit.c:1199
 msgid "Clever... amending the last one with dirty index."
-msgstr "Intel·ligent...esmenant el últim amb índex brut."
+msgstr "Intel·ligent... esmenant l'últim amb índex brut."
 
-#: builtin/commit.c:1237
+#: builtin/commit.c:1201
 msgid "Explicit paths specified without -i or -o; assuming --only paths..."
 msgstr ""
-"S'han especificat rutes explícites sense -i o -o; presumint rutes --only..."
+"S'han especificat camins explícits sense -i o -o; presumint camins --only..."
 
-#: builtin/commit.c:1249 builtin/tag.c:728
+#: builtin/commit.c:1213 builtin/tag.c:728
 #, c-format
 msgid "Invalid cleanup mode %s"
-msgstr "Mode de neteja invàlid %s"
+msgstr "Mode de neteja no vàlid %s"
 
-#: builtin/commit.c:1254
+#: builtin/commit.c:1218
 msgid "Paths with -a does not make sense."
-msgstr "-a no té sentit amb rutes."
+msgstr "-a no té sentit amb camins."
 
-#: builtin/commit.c:1364 builtin/commit.c:1644
+#: builtin/commit.c:1328 builtin/commit.c:1608
 msgid "show status concisely"
 msgstr "mostra l'estat concisament"
 
-#: builtin/commit.c:1366 builtin/commit.c:1646
+#: builtin/commit.c:1330 builtin/commit.c:1610
 msgid "show branch information"
-msgstr "mostra la informació de rama"
+msgstr "mostra la informació de branca"
 
-#: builtin/commit.c:1368 builtin/commit.c:1648 builtin/push.c:500
+#: builtin/commit.c:1332 builtin/commit.c:1612 builtin/push.c:500
 msgid "machine-readable output"
 msgstr "sortida llegible per màquina"
 
-#: builtin/commit.c:1371 builtin/commit.c:1650
+#: builtin/commit.c:1335 builtin/commit.c:1614
 msgid "show status in long format (default)"
 msgstr "mostra l'estat en format llarg (per defecte)"
 
-#: builtin/commit.c:1374 builtin/commit.c:1653
+#: builtin/commit.c:1338 builtin/commit.c:1617
 msgid "terminate entries with NUL"
-msgstr "termina les entrades amb NUL"
+msgstr "acaba les entrades amb NUL"
 
-#: builtin/commit.c:1376 builtin/commit.c:1656 builtin/fast-export.c:980
+#: builtin/commit.c:1340 builtin/commit.c:1620 builtin/fast-export.c:980
 #: builtin/fast-export.c:983 builtin/tag.c:603
 msgid "mode"
 msgstr "mode"
 
-#: builtin/commit.c:1377 builtin/commit.c:1656
+#: builtin/commit.c:1341 builtin/commit.c:1620
 msgid "show untracked files, optional modes: all, normal, no. (Default: all)"
 msgstr ""
 "mostra els fitxers no seguits, modes opcional: all, normal, no. (Per "
 "defecte: all)"
 
-#: builtin/commit.c:1380
+#: builtin/commit.c:1344
 msgid "show ignored files"
 msgstr "mostra els fitxers ignorats"
 
-#: builtin/commit.c:1381 parse-options.h:153
+#: builtin/commit.c:1345 parse-options.h:153
 msgid "when"
 msgstr "quan"
 
-#: builtin/commit.c:1382
+#: builtin/commit.c:1346
 msgid ""
 "ignore changes to submodules, optional when: all, dirty, untracked. "
 "(Default: all)"
 msgstr ""
 "ignora els canvis als submòduls, opcional quan: all, dirty, untracked. (Per "
 "defecte: all)"
 
-#: builtin/commit.c:1384
+#: builtin/commit.c:1348
 msgid "list untracked files in columns"
 msgstr "mostra els fitxers no seguits en columnes"
 
-#: builtin/commit.c:1471
+#: builtin/commit.c:1435
 msgid "couldn't look up newly created commit"
-msgstr "no s'ha pogut trobar la comissió novament creat"
+msgstr "no s'ha pogut trobar la comissió novament creada"
 
-#: builtin/commit.c:1473
+#: builtin/commit.c:1437
 msgid "could not parse newly created commit"
-msgstr "no s'ha pogut analitzar la comissió novament creat"
+msgstr "no s'ha pogut analitzar la comissió novament creada"
 
-#: builtin/commit.c:1518
+#: builtin/commit.c:1482
 msgid "detached HEAD"
 msgstr "HEAD separat"
 
-#: builtin/commit.c:1521
+#: builtin/commit.c:1485
 msgid " (root-commit)"
 msgstr " (comissió d'arrel)"
 
-#: builtin/commit.c:1614
+#: builtin/commit.c:1578
 msgid "suppress summary after successful commit"
-msgstr "omet el resum després d'una comissió reexita"
+msgstr "omet el resum després d'una comissió reeixida"
 
-#: builtin/commit.c:1615
+#: builtin/commit.c:1579
 msgid "show diff in commit message template"
 msgstr "mostra la diferència en la plantilla de missatge de comissió"
 
-#: builtin/commit.c:1617
+#: builtin/commit.c:1581
 msgid "Commit message options"
 msgstr "Opcions de missatge de comissió"
 
-#: builtin/commit.c:1618 builtin/tag.c:601
+#: builtin/commit.c:1582 builtin/tag.c:601
 msgid "read message from file"
 msgstr "llegiu el missatge des d'un fitxer"
 
-#: builtin/commit.c:1619
+#: builtin/commit.c:1583
 msgid "author"
 msgstr "autor"
 
-#: builtin/commit.c:1619
+#: builtin/commit.c:1583
 msgid "override author for commit"
 msgstr "autor corregit de la comissió"
 
-#: builtin/commit.c:1620 builtin/gc.c:275
+#: builtin/commit.c:1584 builtin/gc.c:275
 msgid "date"
 msgstr "data"
 
-#: builtin/commit.c:1620
+#: builtin/commit.c:1584
 msgid "override date for commit"
 msgstr "data corregida de la comissió"
 
-#: builtin/commit.c:1621 builtin/merge.c:217 builtin/notes.c:408
-#: builtin/notes.c:565 builtin/tag.c:599
+#: builtin/commit.c:1585 builtin/merge.c:218 builtin/notes.c:391
+#: builtin/notes.c:554 builtin/tag.c:599
 msgid "message"
 msgstr "missatge"
 
-#: builtin/commit.c:1621
+#: builtin/commit.c:1585
 msgid "commit message"
 msgstr "missatge de comissió"
 
-#: builtin/commit.c:1622
+#: builtin/commit.c:1586
 msgid "reuse and edit message from specified commit"
 msgstr "reusa i edita el missatge de la comissió especificada"
 
-#: builtin/commit.c:1623
+#: builtin/commit.c:1587
 msgid "reuse message from specified commit"
 msgstr "reusa el missatge de la comissió especificada"
 
-#: builtin/commit.c:1624
+#: builtin/commit.c:1588
 msgid "use autosquash formatted message to fixup specified commit"
 msgstr ""
 "usa el missatge formatat d'aixafada automàtica per a arreglar la comissió "
 "especificada"
 
-#: builtin/commit.c:1625
+#: builtin/commit.c:1589
 msgid "use autosquash formatted message to squash specified commit"
 msgstr ""
 "usa el missatge formatat d'aixafada automàtica per a aixafar la comissió "
 "especificada"
 
-#: builtin/commit.c:1626
+#: builtin/commit.c:1590
 msgid "the commit is authored by me now (used with -C/-c/--amend)"
 msgstr "l'autor de la comissió ja sóc jo (usat amb -C/-c/--amend)"
 
-#: builtin/commit.c:1627 builtin/log.c:1191 builtin/revert.c:86
+#: builtin/commit.c:1591 builtin/log.c:1191 builtin/revert.c:86
 msgid "add Signed-off-by:"
 msgstr "afegeix Signed-off-by:"
 
-#: builtin/commit.c:1628
+#: builtin/commit.c:1592
 msgid "use specified template file"
 msgstr "usa el fitxer de plantilla especificat"
 
-#: builtin/commit.c:1629
+#: builtin/commit.c:1593
 msgid "force edit of commit"
 msgstr "força l'edició de la comissió"
 
-#: builtin/commit.c:1630
+#: builtin/commit.c:1594
 msgid "default"
 msgstr "per defecte"
 
-#: builtin/commit.c:1630 builtin/tag.c:604
+#: builtin/commit.c:1594 builtin/tag.c:604
 msgid "how to strip spaces and #comments from message"
 msgstr "com despullar els espais i #comentaris del missatge"
 
-#: builtin/commit.c:1631
+#: builtin/commit.c:1595
 msgid "include status in commit message template"
 msgstr "inclou l'estat en la plantilla de missatge de comissió"
 
-#: builtin/commit.c:1632 builtin/merge.c:224 builtin/revert.c:92
+#: builtin/commit.c:1596 builtin/merge.c:225 builtin/revert.c:92
 #: builtin/tag.c:605
 msgid "key-id"
 msgstr "ID de clau"
 
-#: builtin/commit.c:1633 builtin/merge.c:225 builtin/revert.c:93
+#: builtin/commit.c:1597 builtin/merge.c:226 builtin/revert.c:93
 msgid "GPG sign commit"
 msgstr "firma la comissió amb GPG"
 
-#: builtin/commit.c:1636
+#: builtin/commit.c:1600
 msgid "Commit contents options"
 msgstr "Opcions dels continguts de les comissions"
 
-#: builtin/commit.c:1637
+#: builtin/commit.c:1601
 msgid "commit all changed files"
 msgstr "comet tots els fitxers canviats"
 
-#: builtin/commit.c:1638
+#: builtin/commit.c:1602
 msgid "add specified files to index for commit"
 msgstr "afegeix els fitxers especificats a l'índex per a cometre"
 
-#: builtin/commit.c:1639
+#: builtin/commit.c:1603
 msgid "interactively add files"
 msgstr "afegeix els fitxers interactivament"
 
-#: builtin/commit.c:1640
+#: builtin/commit.c:1604
 msgid "interactively add changes"
 msgstr "afegeix els canvis interactivament"
 
-#: builtin/commit.c:1641
+#: builtin/commit.c:1605
 msgid "commit only specified files"
 msgstr "comet només els fitxers especificats"
 
-#: builtin/commit.c:1642
+#: builtin/commit.c:1606
 msgid "bypass pre-commit hook"
 msgstr "evita el ganxo de precomissió"
 
-#: builtin/commit.c:1643
+#: builtin/commit.c:1607
 msgid "show what would be committed"
 msgstr "mostra què es cometria"
 
-#: builtin/commit.c:1654
+#: builtin/commit.c:1618
 msgid "amend previous commit"
 msgstr "esmena la comissió anterior"
 
-#: builtin/commit.c:1655
+#: builtin/commit.c:1619
 msgid "bypass post-rewrite hook"
 msgstr "evita el ganxo de postreescriure"
 
-#: builtin/commit.c:1660
+#: builtin/commit.c:1624
 msgid "ok to record an empty change"
 msgstr "està bé registrar un canvi buit"
 
-#: builtin/commit.c:1662
+#: builtin/commit.c:1626
 msgid "ok to record a change with an empty message"
 msgstr "està bé registrar un canvi amb missatge buit"
 
-#: builtin/commit.c:1691
+#: builtin/commit.c:1655
 msgid "could not parse HEAD commit"
 msgstr "no s'ha pogut analitzar la comissió HEAD"
 
-#: builtin/commit.c:1730 builtin/merge.c:518
+#: builtin/commit.c:1694 builtin/merge.c:519
 #, c-format
 msgid "could not open '%s' for reading"
 msgstr "no s'ha pogut obrir '%s' per a lectura"
 
-#: builtin/commit.c:1737
+#: builtin/commit.c:1701
 #, c-format
 msgid "Corrupt MERGE_HEAD file (%s)"
 msgstr "Fitxer MERGE_HEAD corrupte (%s)"
 
-#: builtin/commit.c:1744
+#: builtin/commit.c:1708
 msgid "could not read MERGE_MODE"
 msgstr "no s'ha pogut llegir MERGE_MODE"
 
-#: builtin/commit.c:1763
+#: builtin/commit.c:1727
 #, c-format
 msgid "could not read commit message: %s"
 msgstr "no s'ha pogut llegir el missatge de comissió: %s"
 
-#: builtin/commit.c:1774
+#: builtin/commit.c:1738
 #, c-format
 msgid "Aborting commit; you did not edit the message.\n"
 msgstr "Avortant la comissió; no heu editat el missatge.\n"
 
-#: builtin/commit.c:1779
+#: builtin/commit.c:1743
 #, c-format
 msgid "Aborting commit due to empty commit message.\n"
 msgstr "Avortant la comissió a causa d'un missatge de comissió buit.\n"
 
-#: builtin/commit.c:1794 builtin/merge.c:850 builtin/merge.c:875
+#: builtin/commit.c:1758 builtin/merge.c:851 builtin/merge.c:876
 msgid "failed to write commit object"
 msgstr "s'ha fallat en escriure l'objecte de comissió"
 
-#: builtin/commit.c:1827
+#: builtin/commit.c:1791
 msgid ""
 "Repository has been updated, but unable to write\n"
 "new_index file. Check that disk is not full and quota is\n"
 "not exceeded, and then \"git reset HEAD\" to recover."
 msgstr ""
 "S'ha actualitzat el dipòsit, però no es pot escriure el\n"
 "fitxer new_index. Comproveu que el disc no estigui ple i\n"
-"que la quota no estigui excedit, i després\n"
+"que la quota no estigui excedida, i després\n"
 "\"git reset HEAD\" per a recuperar."
 
 #: builtin/config.c:8
 msgid "git config [options]"
 msgstr "git config [opcions]"
 
@@ -4821,58 +4839,54 @@
 #: builtin/config.c:62
 msgid "get values for regexp: name-regex [value-regex]"
 msgstr "obtén valors de regexp: regex-de-noms [regex-de-valors]"
 
 #: builtin/config.c:63
 msgid "get value specific for the URL: section[.var] URL"
-msgstr "obtén el valor especific al URL: secció[.variable] URL"
+msgstr "obtén el valor especific per a l'URL: secció[.variable] URL"
 
 #: builtin/config.c:64
 msgid "replace all matching variables: name value [value_regex]"
 msgstr ""
-"reemplaça tots els variables que coincideixen: nom valor [regex_de_valors]"
+"reemplaça totes les variables que coincideixen: nom valor [regex_de_valors]"
 
 #: builtin/config.c:65
 msgid "add a new variable: name value"
-msgstr "afegeix un variable nou: nom valor"
+msgstr "afegeix una variable nova: nom valor"
 
 #: builtin/config.c:66
 msgid "remove a variable: name [value-regex]"
-msgstr "treu un variable: nom [regex-de-valors]"
+msgstr "elimina una variable: nom [regex-de-valors]"
 
 #: builtin/config.c:67
 msgid "remove all matches: name [value-regex]"
-msgstr "treu totes les coincidències: nom [regex-de-valors]"
+msgstr "elimina totes les coincidències: nom [regex-de-valors]"
 
 #: builtin/config.c:68
 msgid "rename section: old-name new-name"
 msgstr "canvia el nom de secció: nom-antic nom-nou"
 
 #: builtin/config.c:69
 msgid "remove a section: name"
-msgstr "treu una secció: nom"
+msgstr "elimina una secció: nom"
 
 #: builtin/config.c:70
 msgid "list all"
 msgstr "llista tots"
 
 #: builtin/config.c:71
 msgid "open an editor"
 msgstr "obre un editor"
 
-#: builtin/config.c:72 builtin/config.c:73
-msgid "slot"
-msgstr "ranura"
-
 #: builtin/config.c:72
-msgid "find the color configured: [default]"
-msgstr "troba el color configurat: [per defecte]"
+msgid "find the color configured: slot [default]"
+msgstr "troba el color configurat: ranura [per defecte]"
 
 #: builtin/config.c:73
-msgid "find the color setting: [stdout-is-tty]"
-msgstr "troba l'ajust de color: [stdout-és-tty]"
+msgid "find the color setting: slot [stdout-is-tty]"
+msgstr "troba l'ajust de color: ranura [stdout-és-tty]"
 
 #: builtin/config.c:74
 msgid "Type"
 msgstr "Tipus"
 
 #: builtin/config.c:75
@@ -4886,46 +4900,46 @@
 #: builtin/config.c:77
 msgid "value is --bool or --int"
 msgstr "el valor és --bool o --int"
 
 #: builtin/config.c:78
 msgid "value is a path (file or directory name)"
-msgstr "el valor és una ruta (nom de fitxer o directori)"
+msgstr "el valor és un camí (nom de fitxer o directori)"
 
 #: builtin/config.c:79
 msgid "Other"
 msgstr "Altre"
 
 #: builtin/config.c:80
 msgid "terminate values with NUL byte"
-msgstr "termina els valors amb un octet NUL"
+msgstr "acaba els valors amb un octet NUL"
 
 #: builtin/config.c:81
 msgid "respect include directives on lookup"
-msgstr "respecta les directives d'inclusió al cercar"
+msgstr "respecta les directives d'inclusió en cercar"
 
-#: builtin/config.c:315
+#: builtin/config.c:316
 msgid "unable to parse default color value"
-msgstr "incapaç d'analitzar el valor de color per defecte"
+msgstr "no s'ha pogut analitzar el valor de color per defecte"
 
-#: builtin/config.c:455
+#: builtin/config.c:457
 #, c-format
 msgid ""
 "# This is Git's per-user configuration file.\n"
 "[core]\n"
 "# Please adapt and uncomment the following lines:\n"
 "#\tuser = %s\n"
 "#\temail = %s\n"
 msgstr ""
-"# Això és el fitxer de configuració del Git del usuari.\n"
+"# Això és el fitxer de configuració del Git de l'usuari.\n"
 "[core]\n"
-"# Si us plau, adapteu i descomenteu les línies següentes:\n"
+"# Si us plau, adapteu i descomenteu les línies següents:\n"
 "#\tuser = %s\n"
 "#\temail = %s\n"
 
-#: builtin/config.c:590
+#: builtin/config.c:589
 #, c-format
 msgid "cannot create configuration file %s"
 msgstr "no es pot crear el fitxer de configuració '%s'"
 
 #: builtin/count-objects.c:55
 msgid "git count-objects [-v] [-H | --human-readable]"
@@ -4978,13 +4992,13 @@
 msgid "searching to describe %s\n"
 msgstr "cercant per a descriure %s\n"
 
 #: builtin/describe.c:319
 #, c-format
 msgid "finished search at %s\n"
-msgstr "s'ha terminat la cerca a %s\n"
+msgstr "s'ha finalitzat la cerca a %s\n"
 
 #: builtin/describe.c:346
 #, c-format
 msgid ""
 "No annotated tags can describe '%s'.\n"
 "However, there were unannotated tags: try --tags."
@@ -5026,21 +5040,21 @@
 #: builtin/describe.c:398
 msgid "use any ref"
 msgstr "usa qualsevulla referència"
 
 #: builtin/describe.c:399
 msgid "use any tag, even unannotated"
-msgstr "usa qualsevulla etiqueta, encara les sense anotar"
+msgstr "usa qualsevulla etiqueta, fins i tot aquelles sense anotar"
 
 #: builtin/describe.c:400
 msgid "always use long format"
 msgstr "sempre usa el format llarg"
 
 #: builtin/describe.c:401
 msgid "only follow first parent"
-msgstr "només segueix el primer pare"
+msgstr "només segueix la primera mare"
 
 #: builtin/describe.c:404
 msgid "only output exact matches"
 msgstr "emet només coincidències exactes"
 
 #: builtin/describe.c:406
@@ -5080,69 +5094,68 @@
 msgid "'%s': not a regular file or symlink"
 msgstr "'%s': no és ni fitxer regular ni enllaç simbòlic"
 
 #: builtin/diff.c:237
 #, c-format
 msgid "invalid option: %s"
-msgstr "opció invàlida: %s"
+msgstr "opció no vàlida: %s"
 
 #: builtin/diff.c:358
 msgid "Not a git repository"
 msgstr "No és un dipòsit de git"
 
 #: builtin/diff.c:401
 #, c-format
 msgid "invalid object '%s' given."
-msgstr "s'ha donat un objecte invàlid '%s'."
+msgstr "s'ha donat un objecte no vàlid '%s'."
 
 #: builtin/diff.c:410
 #, c-format
 msgid "more than two blobs given: '%s'"
 msgstr "s'ha donat més de dos blobs: '%s"
 
 #: builtin/diff.c:417
 #, c-format
 msgid "unhandled object '%s' given."
-msgstr "s'ha donat l'objecte no manejat '%s'."
+msgstr "s'ha donat l'objecte no gestionat '%s'."
 
 #: builtin/fast-export.c:24
 msgid "git fast-export [rev-list-opts]"
 msgstr "git fast-export [opcions-de-llista-de-revisions]"
 
 #: builtin/fast-export.c:979
 msgid "show progress after <n> objects"
 msgstr "mostra el progrés després de <n> objectes"
 
 #: builtin/fast-export.c:981
 msgid "select handling of signed tags"
-msgstr "selecciona el manejament de les etiquetes firmades"
+msgstr "selecciona la gestió de les etiquetes firmades"
 
 #: builtin/fast-export.c:984
 msgid "select handling of tags that tag filtered objects"
-msgstr ""
-"selecciona el manejament de les etiquetes que etiquetin objectes filtrats"
+msgstr "selecciona la gestió de les etiquetes que etiquetin objectes filtrats"
 
 #: builtin/fast-export.c:987
 msgid "Dump marks to this file"
-msgstr "Bolcar les marques a aquest fitxer"
+msgstr "Bolca les marques a aquest fitxer"
 
 #: builtin/fast-export.c:989
 msgid "Import marks from this file"
 msgstr "Importa les marques d'aquest fitxer"
 
 #: builtin/fast-export.c:991
 msgid "Fake a tagger when tags lack one"
-msgstr "Fingeix un etiquetador quan un lis manca a les etiquetes"
+msgstr "Fingeix un etiquetador quan els en manca un a les etiquetes"
 
 #: builtin/fast-export.c:993
 msgid "Output full tree for each commit"
 msgstr "Imprimeix l'arbre complet de cada comissió"
 
 #: builtin/fast-export.c:995
 msgid "Use the done feature to terminate the stream"
-msgstr "Usa la característica done per a terminar el corrent"
+msgstr "Usa la característica done per a acabar el corrent"
 
 #: builtin/fast-export.c:996
 msgid "Skip output of blob data"
 msgstr "Salta l'emissió de dades de blob"
 
 #: builtin/fast-export.c:997
@@ -5180,33 +5193,33 @@
 #: builtin/fetch.c:92
 msgid "append to .git/FETCH_HEAD instead of overwriting"
 msgstr "annexa a .git/FETCH_HEAD en lloc de sobreescriure"
 
 #: builtin/fetch.c:94
 msgid "path to upload pack on remote end"
-msgstr "ruta a que pujar el paquet en el costat remot"
+msgstr "camí al qual pujar el paquet en el costat remot"
 
 #: builtin/fetch.c:95
 msgid "force overwrite of local branch"
-msgstr "força la sobreescriptura de la rama local"
+msgstr "força la sobreescriptura de la branca local"
 
 #: builtin/fetch.c:97
 msgid "fetch from multiple remotes"
 msgstr "obtén de múltiples remots"
 
 #: builtin/fetch.c:99
 msgid "fetch all tags and associated objects"
-msgstr "obtén tots les etiquetes i objectes associats"
+msgstr "obtén totes les etiquetes i tots els objectes associats"
 
 #: builtin/fetch.c:101
 msgid "do not fetch all tags (--no-tags)"
-msgstr "no obtingues les etiquetes (--no-tags)"
+msgstr "no obtinguis les etiquetes (--no-tags)"
 
 #: builtin/fetch.c:103
 msgid "prune remote-tracking branches no longer on remote"
-msgstr "poda les rames amb seguiment remot que ja no estiguin en el remot"
+msgstr "poda les branques amb seguiment remot que ja no estiguin en el remot"
 
 #: builtin/fetch.c:104
 msgid "on-demand"
 msgstr "sota demanda"
 
 #: builtin/fetch.c:105
@@ -5232,13 +5245,13 @@
 #: builtin/fetch.c:118 builtin/log.c:1208
 msgid "dir"
 msgstr "directori"
 
 #: builtin/fetch.c:119
 msgid "prepend this to submodule path output"
-msgstr "anteposa això a la sortida de ruta del submòdul"
+msgstr "anteposa això a la sortida de camí del submòdul"
 
 #: builtin/fetch.c:122
 msgid "default mode for recursion"
 msgstr "mode de recursivitat per defecte"
 
 #: builtin/fetch.c:124
@@ -5266,65 +5279,65 @@
 msgid "[up to date]"
 msgstr "[al dia]"
 
 #: builtin/fetch.c:473
 #, c-format
 msgid "! %-*s %-*s -> %s  (can't fetch in current branch)"
-msgstr "! %-*s %-*s -> %s  (no es pot obtenir en la rama actual)"
+msgstr "! %-*s %-*s -> %s  (no es pot obtenir en la branca actual)"
 
 #: builtin/fetch.c:474 builtin/fetch.c:560
 msgid "[rejected]"
 msgstr "[rebutjat]"
 
 #: builtin/fetch.c:485
 msgid "[tag update]"
 msgstr "[actualització d'etiqueta]"
 
 #: builtin/fetch.c:487 builtin/fetch.c:522 builtin/fetch.c:540
 msgid "  (unable to update local ref)"
-msgstr "  (incapaç d'actualitzar la referència local)"
+msgstr "  (no s'ha pogut actualitzar la referència local)"
 
 #: builtin/fetch.c:505
 msgid "[new tag]"
 msgstr "[etiqueta nova]"
 
 #: builtin/fetch.c:508
 msgid "[new branch]"
-msgstr "[rama nova]"
+msgstr "[branca nova]"
 
 #: builtin/fetch.c:511
 msgid "[new ref]"
 msgstr "[referència nova]"
 
 #: builtin/fetch.c:556
 msgid "unable to update local ref"
-msgstr "incapaç d'actualitzar la referència local"
+msgstr "no s'ha pogut actualitzar la referència local"
 
 #: builtin/fetch.c:556
 msgid "forced update"
 msgstr "actualització forçada"
 
 #: builtin/fetch.c:562
 msgid "(non-fast-forward)"
 msgstr "(sense avanç ràpid)"
 
 #: builtin/fetch.c:595 builtin/fetch.c:828
 #, c-format
 msgid "cannot open %s: %s\n"
-msgstr "no és pot obrir %s: %s\n"
+msgstr "no es pot obrir %s: %s\n"
 
 #: builtin/fetch.c:604
 #, c-format
 msgid "%s did not send all necessary objects\n"
 msgstr "%s no ha enviat tots els objectes necessaris\n"
 
 #: builtin/fetch.c:622
 #, c-format
 msgid "reject %s because shallow roots are not allowed to be updated"
 msgstr ""
-"rebutja %s perquè no es permet que els arrels superficials s'actualitzin"
+"rebutja %s perquè no es permet que les arrels superficials s'actualitzin"
 
 #: builtin/fetch.c:710 builtin/fetch.c:793
 #, c-format
 msgid "From %.*s\n"
 msgstr "De %.*s\n"
 
@@ -5332,14 +5345,14 @@
 #, c-format
 msgid ""
 "some local refs could not be updated; try running\n"
 " 'git remote prune %s' to remove any old, conflicting branches"
 msgstr ""
 "algunes referències locals no s'han pogut actualitzar;\n"
-" intenteu executar 'git remote prune %s' per a treure\n"
-" qualsevulla rama antiga o conflictiva"
+" intenteu executar 'git remote prune %s' per a eliminar\n"
+" qualsevulla branca antiga o conflictiva"
 
 #: builtin/fetch.c:773
 #, c-format
 msgid "   (%s will become dangling)"
 msgstr "   (%s es tornarà penjant)"
 
@@ -5349,20 +5362,20 @@
 msgstr "   (%s s'ha tornat penjant)"
 
 #: builtin/fetch.c:798
 msgid "[deleted]"
 msgstr "[suprimit]"
 
-#: builtin/fetch.c:799 builtin/remote.c:1063
+#: builtin/fetch.c:799 builtin/remote.c:1060
 msgid "(none)"
 msgstr "(cap)"
 
 #: builtin/fetch.c:818
 #, c-format
 msgid "Refusing to fetch into current branch %s of non-bare repository"
-msgstr "Refusant obtenir en la rama actual %s d'un dipòsit no nu"
+msgstr "Refusant obtenir en la branca actual %s d'un dipòsit no nu"
 
 #: builtin/fetch.c:837
 #, c-format
 msgid "Option \"%s\" value \"%s\" is not valid for %s"
 msgstr "L'opció \"%s\" amb valor \"%s\" no és vàlida per a %s"
 
@@ -5425,81 +5438,81 @@
 
 #: builtin/fmt-merge-msg.c:13
 msgid "git fmt-merge-msg [-m <message>] [--log[=<n>]|--no-log] [--file <file>]"
 msgstr ""
 "git fmt-merge-msg [-m <missatge>] [--log[=<n>]|--no-log] [--file <fitxer>]"
 
-#: builtin/fmt-merge-msg.c:663 builtin/fmt-merge-msg.c:666 builtin/grep.c:698
-#: builtin/merge.c:197 builtin/repack.c:179 builtin/repack.c:183
-#: builtin/show-branch.c:654 builtin/show-ref.c:178 builtin/tag.c:590
+#: builtin/fmt-merge-msg.c:662 builtin/fmt-merge-msg.c:665 builtin/grep.c:698
+#: builtin/merge.c:198 builtin/repack.c:178 builtin/repack.c:182
+#: builtin/show-branch.c:657 builtin/show-ref.c:178 builtin/tag.c:590
 #: parse-options.h:132 parse-options.h:239
 msgid "n"
 msgstr "n"
 
-#: builtin/fmt-merge-msg.c:664
+#: builtin/fmt-merge-msg.c:663
 msgid "populate log with at most <n> entries from shortlog"
-msgstr "emplena el registre amb al màxim <n> entrades del registre curt"
+msgstr "emplena el registre amb <n> entrades del registre curt com a màxim"
 
-#: builtin/fmt-merge-msg.c:667
+#: builtin/fmt-merge-msg.c:666
 msgid "alias for --log (deprecated)"
 msgstr "àlies per --log (desaprovat)"
 
-#: builtin/fmt-merge-msg.c:670
+#: builtin/fmt-merge-msg.c:669
 msgid "text"
 msgstr "text"
 
-#: builtin/fmt-merge-msg.c:671
+#: builtin/fmt-merge-msg.c:670
 msgid "use <text> as start of message"
 msgstr "usa <text> com a inici de missatge"
 
-#: builtin/fmt-merge-msg.c:672
+#: builtin/fmt-merge-msg.c:671
 msgid "file to read from"
 msgstr "fitxer del qual llegir"
 
 #: builtin/for-each-ref.c:676
 msgid "unable to parse format"
-msgstr "incapaç d'analitzar el format"
+msgstr "no s'ha pogut analitzar el format"
 
-#: builtin/for-each-ref.c:1057
+#: builtin/for-each-ref.c:1064
 msgid "git for-each-ref [options] [<pattern>]"
 msgstr "git for-each-ref [opcions] [<patró>]"
 
-#: builtin/for-each-ref.c:1072
+#: builtin/for-each-ref.c:1079
 msgid "quote placeholders suitably for shells"
 msgstr ""
 "posa els marcadors de posició entre cometes adequades per als terminals"
 
-#: builtin/for-each-ref.c:1074
+#: builtin/for-each-ref.c:1081
 msgid "quote placeholders suitably for perl"
 msgstr "posa els marcadors de posició entre cometes adequades per a perl"
 
-#: builtin/for-each-ref.c:1076
+#: builtin/for-each-ref.c:1083
 msgid "quote placeholders suitably for python"
 msgstr "posa els marcadors de posició entre cometes adequades per a python"
 
-#: builtin/for-each-ref.c:1078
-msgid "quote placeholders suitably for tcl"
-msgstr "posa els marcadors de posició entre cometes adequades per a tcl"
+#: builtin/for-each-ref.c:1085
+msgid "quote placeholders suitably for Tcl"
+msgstr "posa els marcadors de posició entre cometes adequades per a Tcl"
 
-#: builtin/for-each-ref.c:1081
+#: builtin/for-each-ref.c:1088
 msgid "show only <n> matched refs"
 msgstr "mostra només <n> referències coincidents"
 
-#: builtin/for-each-ref.c:1082 builtin/replace.c:438
+#: builtin/for-each-ref.c:1089 builtin/replace.c:438
 msgid "format"
 msgstr "format"
 
-#: builtin/for-each-ref.c:1082
+#: builtin/for-each-ref.c:1089
 msgid "format to use for the output"
 msgstr "format a usar en la sortida"
 
-#: builtin/for-each-ref.c:1083
+#: builtin/for-each-ref.c:1090
 msgid "key"
 msgstr "clau"
 
-#: builtin/for-each-ref.c:1084
+#: builtin/for-each-ref.c:1091
 msgid "field name to sort on"
 msgstr "nom de camp en el qual ordenar"
 
 #: builtin/fsck.c:147 builtin/prune.c:136
 msgid "Checking connectivity"
 msgstr "Comprovant connectivitat"
@@ -5560,26 +5573,26 @@
 msgid "git gc [options]"
 msgstr "git gc [opcions]"
 
 #: builtin/gc.c:79
 #, c-format
 msgid "Invalid gc.pruneexpire: '%s'"
-msgstr "gc.pruneexpire invàlid: %s"
+msgstr "gc.pruneexpire no vàlid: %s"
 
 #: builtin/gc.c:107
 #, c-format
 msgid "insanely long object directory %.*s"
-msgstr "directori d'objectes increïblement llarga %.*s"
+msgstr "directori d'objectes increïblement llarg %.*s"
 
 #: builtin/gc.c:276
 msgid "prune unreferenced objects"
 msgstr "poda objectes sense referència"
 
 #: builtin/gc.c:278
 msgid "be more thorough (increased runtime)"
-msgstr "siguis més exhaustiu (temps d'execució augmentat)"
+msgstr "sigues més exhaustiu (el temps d'execució augmenta)"
 
 #: builtin/gc.c:279
 msgid "enable auto-gc mode"
 msgstr "habilita el mode de recollida d'escombraries automàtica"
 
 #: builtin/gc.c:280
@@ -5597,51 +5610,51 @@
 msgid "Auto packing the repository for optimum performance.\n"
 msgstr "Empaquetant automàticament el dipòsit per rendiment òptim.\n"
 
 #: builtin/gc.c:324
 #, c-format
 msgid "See \"git help gc\" for manual housekeeping.\n"
-msgstr "Veu \"git help gc\" per neteja manual.\n"
+msgstr "Vegeu \"git help gc\" per neteja manual.\n"
 
 #: builtin/gc.c:342
 #, c-format
 msgid ""
 "gc is already running on machine '%s' pid %<PRIuMAX> (use --force if not)"
 msgstr ""
 "gc ja està executant en la màquina '%s' pid %<PRIuMAX> (useu --force si no)"
 
 #: builtin/gc.c:364
 msgid ""
 "There are too many unreachable loose objects; run 'git prune' to remove them."
 msgstr ""
-"Hi ha massa objectes solts inabastables; executeu 'git prune' per a "
-"treure'ls."
+"Hi ha massa objectes solts inabastables; executeu 'git prune' per a eliminar-"
+"los."
 
 #: builtin/grep.c:23
 msgid "git grep [options] [-e] <pattern> [<rev>...] [[--] <path>...]"
-msgstr "git grep [opcions] [-e] <patró> [<revisió>...] [[--] <ruta>...]"
+msgstr "git grep [opcions] [-e] <patró> [<revisió>...] [[--] <camí>...]"
 
 #: builtin/grep.c:218
 #, c-format
 msgid "grep: failed to create thread: %s"
 msgstr "grep: s'ha fallat en crear fil: %s"
 
 #: builtin/grep.c:441 builtin/grep.c:476
 #, c-format
 msgid "unable to read tree (%s)"
-msgstr "incapaç de llegir l'arbre (%s)"
+msgstr "no s'ha pogut llegir l'arbre (%s)"
 
 #: builtin/grep.c:491
 #, c-format
 msgid "unable to grep from object of type %s"
 msgstr "no es pot fer grep des d'un objecte de tipus %s"
 
 #: builtin/grep.c:547
 #, c-format
 msgid "switch `%c' expects a numerical value"
-msgstr "l'ópcio `%c' espera un valor numèric"
+msgstr "l'opció `%c' espera un valor numèric"
 
 #: builtin/grep.c:564
 #, c-format
 msgid "cannot open '%s'"
 msgstr "no es pot obrir '%s'"
 
@@ -5652,13 +5665,13 @@
 #: builtin/grep.c:640
 msgid "find in contents not managed by git"
 msgstr "cerca en continguts no gestionats per git"
 
 #: builtin/grep.c:642
 msgid "search in both tracked and untracked files"
-msgstr "cerca en ambdós els fitxers seguits i no seguits"
+msgstr "cerca tant en fitxers seguits com en no seguits"
 
 #: builtin/grep.c:644
 msgid "search also in ignored files"
 msgstr "cerca en els fitxers ignorats també"
 
 #: builtin/grep.c:647
@@ -5724,13 +5737,13 @@
 #: builtin/grep.c:682
 msgid "show only filenames instead of matching lines"
 msgstr "mostra només els noms de fitxer en lloc de les línies coincidents"
 
 #: builtin/grep.c:684
 msgid "synonym for --files-with-matches"
-msgstr "sinònim per --files-with-matches"
+msgstr "sinònim de --files-with-matches"
 
 #: builtin/grep.c:687
 msgid "show only the names of files without match"
 msgstr "mostra només els noms dels fitxers sense coincidència"
 
 #: builtin/grep.c:689
@@ -5744,13 +5757,13 @@
 #: builtin/grep.c:692
 msgid "highlight matches"
 msgstr "ressalta les coincidències"
 
 #: builtin/grep.c:694
 msgid "print empty line between matches from different files"
-msgstr "imprimeix una línia buida entre coincidències de fitxers distintes"
+msgstr "imprimeix una línia buida entre coincidències de fitxers distints"
 
 #: builtin/grep.c:696
 msgid "show filename only once above matches from same file"
 msgstr ""
 "mostra el nom de fitxer només una vegada a dalt de les coincidències del "
 "mateix fitxer"
@@ -5774,13 +5787,13 @@
 #: builtin/grep.c:708
 msgid "show a line with the function name before matches"
 msgstr "mostra una línia amb el nom de funció abans de les coincidències"
 
 #: builtin/grep.c:710
 msgid "show the surrounding function"
-msgstr "mostra la funció alrededor"
+msgstr "mostra la funció circumdant"
 
 #: builtin/grep.c:713
 msgid "read patterns from file"
 msgstr "llegeix els patrons des d'un fitxer"
 
 #: builtin/grep.c:715
@@ -5852,13 +5865,13 @@
 msgstr ""
 "git hash-object [-t <tipus>] [-w] [--path=<fitxer>|--no-filters] [--stdin] "
 "[--] <fitxer>..."
 
 #: builtin/hash-object.c:83
 msgid "git hash-object  --stdin-paths < <list-of-paths>"
-msgstr "git hash-object  --stdin-paths < <llista-de-rutes>"
+msgstr "git hash-object  --stdin-paths < <llista-de-camins>"
 
 #: builtin/hash-object.c:94 builtin/tag.c:610
 msgid "type"
 msgstr "tipus"
 
 #: builtin/hash-object.c:94
@@ -5878,22 +5891,22 @@
 msgstr "emmagatzema el fitxer tal com és sense filtres"
 
 #: builtin/hash-object.c:100
 msgid ""
 "just hash any random garbage to create corrupt objects for debugging Git"
 msgstr ""
-"només sumar qualsevulla brossa aleatòria per a crear objectes corruptes per "
-"a depurar al Git"
+"només suma qualsevulla brossa aleatòria per a crear objectes corruptes per a "
+"depurar al Git"
 
 #: builtin/hash-object.c:101
 msgid "process file as it were from this path"
-msgstr "processa el fitxer com si fos d'aquesta ruta"
+msgstr "processa el fitxer com si fos d'aquest camí"
 
 #: builtin/help.c:41
 msgid "print all available commands"
-msgstr "imprimeix tots els ordres disponibles"
+msgstr "imprimeix totes les ordres disponibles"
 
 #: builtin/help.c:42
 msgid "print list of useful guides"
 msgstr "imprimeix la llista de guies útils"
 
 #: builtin/help.c:43
@@ -5920,13 +5933,13 @@
 #: builtin/help.c:91
 msgid "Failed to start emacsclient."
 msgstr "S'ha fallat en iniciar emacsclient."
 
 #: builtin/help.c:104
 msgid "Failed to parse emacsclient version."
-msgstr "S'ha fallat en analitzar la versió d'emacsclint."
+msgstr "S'ha fallat en analitzar la versió d'emacsclient."
 
 #: builtin/help.c:112
 #, c-format
 msgid "emacsclient version '%d' too old (< 22)."
 msgstr "la versió d'emacsclient '%d' és massa vella (< 22)."
 
@@ -5938,87 +5951,87 @@
 #: builtin/help.c:215
 #, c-format
 msgid ""
 "'%s': path for unsupported man viewer.\n"
 "Please consider using 'man.<tool>.cmd' instead."
 msgstr ""
-"'%s': ruta a un visualitzador de manuals no suportat.\n"
-"Si us plau, considereu usar 'man.<eine>.cmd' en lloc."
+"'%s': camí a un visualitzador de manuals no compatible.\n"
+"Si us plau, considereu usar 'man.<eina>.cmd' en lloc d'això."
 
 #: builtin/help.c:227
 #, c-format
 msgid ""
 "'%s': cmd for supported man viewer.\n"
 "Please consider using 'man.<tool>.path' instead."
 msgstr ""
-"'%s': ordre per un visualitzador de manuals suportat.\n"
-"Si us plau, considereu usar 'man.<eine>.path' en lloc."
+"'%s': ordre per a un visualitzador de manuals compatible.\n"
+"Si us plau, considereu usar 'man.<eina>.path' en lloc d'això."
 
-#: builtin/help.c:352
+#: builtin/help.c:354
 #, c-format
 msgid "'%s': unknown man viewer."
 msgstr "'%s': visualitzador de manuals desconegut"
 
-#: builtin/help.c:369
+#: builtin/help.c:371
 msgid "no man viewer handled the request"
-msgstr "cap visualitzador de manuals ha manejat la sol·licitud"
+msgstr "cap visualitzador de manuals ha gestionat la sol·licitud"
 
-#: builtin/help.c:377
+#: builtin/help.c:379
 msgid "no info viewer handled the request"
-msgstr "cap visualitzador d'informació ha manejat la sol·licitud"
+msgstr "cap visualitzador d'informació ha gestionat la sol·licitud"
 
-#: builtin/help.c:423
+#: builtin/help.c:428
 msgid "Defining attributes per path"
-msgstr "La definició d'atributs per ruta"
+msgstr "La definició d'atributs per camí"
 
-#: builtin/help.c:424
+#: builtin/help.c:429
 msgid "Everyday Git With 20 Commands Or So"
 msgstr "Git quotidià amb més o menys 20 ordres"
 
-#: builtin/help.c:425
+#: builtin/help.c:430
 msgid "A Git glossary"
 msgstr "Un glossari de Git"
 
-#: builtin/help.c:426
+#: builtin/help.c:431
 msgid "Specifies intentionally untracked files to ignore"
 msgstr "Especifica els fitxers intencionalment no seguits a ignorar"
 
-#: builtin/help.c:427
+#: builtin/help.c:432
 msgid "Defining submodule properties"
 msgstr "La definició de les propietats de submòduls"
 
-#: builtin/help.c:428
+#: builtin/help.c:433
 msgid "Specifying revisions and ranges for Git"
 msgstr "L'especificació de revisions i rangs per al Git"
 
-#: builtin/help.c:429
+#: builtin/help.c:434
 msgid "A tutorial introduction to Git (for version 1.5.1 or newer)"
 msgstr "Una introducció tutorial al Git (per a la versió 1.5.1 o més nou)"
 
-#: builtin/help.c:430
+#: builtin/help.c:435
 msgid "An overview of recommended workflows with Git"
 msgstr "Una visió de conjunt de fluxos de treball recomanats amb Git"
 
-#: builtin/help.c:442
+#: builtin/help.c:447
 msgid "The common Git guides are:\n"
 msgstr "Les guies de Git comunes són:\n"
 
-#: builtin/help.c:463 builtin/help.c:480
+#: builtin/help.c:468 builtin/help.c:485
 #, c-format
 msgid "usage: %s%s"
 msgstr "ús: %s%s"
 
-#: builtin/help.c:496
+#: builtin/help.c:501
 #, c-format
 msgid "`git %s' is aliased to `%s'"
-msgstr "`git %s' és àlies a `%s'"
+msgstr "`git %s' és un àlies de `%s'"
 
 #: builtin/index-pack.c:150
 #, c-format
 msgid "unable to open %s"
-msgstr "incapaç d'obrir %s"
+msgstr "no s'ha pogut obrir %s"
 
 #: builtin/index-pack.c:200
 #, c-format
 msgid "object type mismatch at %s"
 msgstr "hi ha una discordança de tipus d'objecte a %s"
 
@@ -6038,21 +6051,21 @@
 msgid_plural "cannot fill %d bytes"
 msgstr[0] "no es pot omplir %d octet"
 msgstr[1] "no es pot omplir %d octets"
 
 #: builtin/index-pack.c:275
 msgid "early EOF"
-msgstr "EOF aviat"
+msgstr "EOF prematur"
 
 #: builtin/index-pack.c:276
 msgid "read error on input"
 msgstr "error de lectura d'entrada"
 
 #: builtin/index-pack.c:288
 msgid "used more bytes than were available"
-msgstr "s'han usat més octets que estaven disponibles"
+msgstr "s'han usat més octets dels que hi havia disponibles"
 
 #: builtin/index-pack.c:295
 msgid "pack too large for current definition of off_t"
 msgstr "paquet massa gran per a la definició actual d'off_t"
 
 #: builtin/index-pack.c:311
@@ -6069,18 +6082,18 @@
 msgid "pack signature mismatch"
 msgstr "hi ha una discordança de firma de paquet"
 
 #: builtin/index-pack.c:332
 #, c-format
 msgid "pack version %<PRIu32> unsupported"
-msgstr "la versió de paquet %<PRIu32> no es suporta"
+msgstr "la versió de paquet %<PRIu32> no és compatible"
 
 #: builtin/index-pack.c:350
 #, c-format
 msgid "pack has bad object at offset %lu: %s"
-msgstr "el paquet té un objecte dolent a desplaçament %lu: %s"
+msgstr "el paquet té un objecte dolent a la posició %lu: %s"
 
 #: builtin/index-pack.c:471
 #, c-format
 msgid "inflate returned %d"
 msgstr "la inflació ha retornat %d"
 
@@ -6102,45 +6115,45 @@
 msgstr "no es pot fer pread en el fitxer de paquet"
 
 #: builtin/index-pack.c:569
 #, c-format
 msgid "premature end of pack file, %lu byte missing"
 msgid_plural "premature end of pack file, %lu bytes missing"
-msgstr[0] "fin prematur de fitxer de paquet, manca %lu octet"
-msgstr[1] "fin prematur de fitxer de paquet, manquen %lu octets"
+msgstr[0] "final prematur de fitxer de paquet, manca %lu octet"
+msgstr[1] "final prematur de fitxer de paquet, manquen %lu octets"
 
 #: builtin/index-pack.c:595
 msgid "serious inflate inconsistency"
-msgstr "hi ha una inconsistència seria d'inflació"
+msgstr "hi ha una inconsistència seriosa d'inflació"
 
 #: builtin/index-pack.c:686 builtin/index-pack.c:692 builtin/index-pack.c:715
 #: builtin/index-pack.c:749 builtin/index-pack.c:758
 #, c-format
 msgid "SHA1 COLLISION FOUND WITH %s !"
 msgstr "S'HA TROBAT UNA COL·LISIÓ SHA1 AMB %s !"
 
 #: builtin/index-pack.c:689 builtin/pack-objects.c:164
 #: builtin/pack-objects.c:256
 #, c-format
 msgid "unable to read %s"
-msgstr "incapaç de llegir %s"
+msgstr "no s'ha pogut llegir %s"
 
 #: builtin/index-pack.c:755
 #, c-format
 msgid "cannot read existing object %s"
 msgstr "no es pot llegir l'objecte existent %s"
 
 #: builtin/index-pack.c:769
 #, c-format
 msgid "invalid blob object %s"
-msgstr "objecte de blob invàlid %s"
+msgstr "objecte de blob no vàlid %s"
 
 #: builtin/index-pack.c:783
 #, c-format
 msgid "invalid %s"
-msgstr "%s invàlid"
+msgstr "%s no vàlid"
 
 #: builtin/index-pack.c:787
 msgid "Error in object"
 msgstr "Error en objecte"
 
 #: builtin/index-pack.c:789
@@ -6167,35 +6180,35 @@
 #: builtin/index-pack.c:1086
 msgid "cannot fstat packfile"
 msgstr "no es pot fer fstat en el fitxer de paquet"
 
 #: builtin/index-pack.c:1089
 msgid "pack has junk at the end"
-msgstr "el paquet té brossa al seu fin"
+msgstr "el paquet té brossa al seu final"
 
 #: builtin/index-pack.c:1100
 msgid "confusion beyond insanity in parse_pack_objects()"
 msgstr "confusió més enllà de la insanitat en parse_pack_objects()"
 
 #: builtin/index-pack.c:1123
 msgid "Resolving deltas"
 msgstr "Resolent les deltes"
 
 #: builtin/index-pack.c:1133
 #, c-format
 msgid "unable to create thread: %s"
-msgstr "incapaç de crear fil: %s"
+msgstr "no s'ha pogut crear fil: %s"
 
 #: builtin/index-pack.c:1175
 msgid "confusion beyond insanity"
 msgstr "confusió més enllà de la insanitat"
 
 #: builtin/index-pack.c:1181
 #, c-format
 msgid "completed with %d local objects"
-msgstr "s'ha terminat amb %d objectes locals"
+msgstr "s'ha completat amb %d objectes locals"
 
 #: builtin/index-pack.c:1191
 #, c-format
 msgid "Unexpected tail checksum for %s (disk corruption?)"
 msgstr "Suma de verificació final no esperada per a %s (corrupció de disc?)"
 
@@ -6206,13 +6219,13 @@
 msgstr[0] "El paquet té %d delta no resolta"
 msgstr[1] "El paquet té %d deltes no resoltes"
 
 #: builtin/index-pack.c:1220
 #, c-format
 msgid "unable to deflate appended object (%d)"
-msgstr "incapaç de desinflar l'objecte annexat (%d)"
+msgstr "no s'ha pogut desinflar l'objecte annexat (%d)"
 
 #: builtin/index-pack.c:1299
 #, c-format
 msgid "local object %s is corrupt"
 msgstr "l'objecte local %s és corrupte"
 
@@ -6243,13 +6256,13 @@
 msgid "bad pack.indexversion=%<PRIu32>"
 msgstr "pack.indexversion=%<PRIu32> dolent"
 
 #: builtin/index-pack.c:1407
 #, c-format
 msgid "invalid number of threads specified (%d)"
-msgstr "s'ha especificat un nombre de fils invàlid (%d)"
+msgstr "s'ha especificat un nombre de fils no vàlid (%d)"
 
 #: builtin/index-pack.c:1411 builtin/index-pack.c:1590
 #, c-format
 msgid "no threads support, ignoring %s"
 msgstr "no hi ha suport de fils, ignorant %s"
 
@@ -6291,27 +6304,27 @@
 msgid "--fix-thin cannot be used without --stdin"
 msgstr "--fix-thin no es pot usar sense --stdin"
 
 #: builtin/index-pack.c:1639 builtin/index-pack.c:1648
 #, c-format
 msgid "packfile name '%s' does not end with '.pack'"
-msgstr "el nom de fitxer de paquet '%s' no termina amb '.pack'"
+msgstr "el nom de fitxer de paquet '%s' no acaba amb '.pack'"
 
 #: builtin/index-pack.c:1656
 msgid "--verify with no packfile name given"
 msgstr "s'ha donat --verify sense nom de fitxer de paquet"
 
 #: builtin/init-db.c:35
 #, c-format
 msgid "Could not make %s writable by group"
-msgstr "No s'ha pogut fer %s escrivible pel grup"
+msgstr "No s'ha pogut fer %s gravable per al grup"
 
 #: builtin/init-db.c:62
 #, c-format
 msgid "insanely long template name %s"
-msgstr "nom de plantilla insanament llarg %s"
+msgstr "nom de plantilla increïblement llarg %s"
 
 #: builtin/init-db.c:67
 #, c-format
 msgid "cannot stat '%s'"
 msgstr "no es pot fer stat en '%s'"
 
@@ -6330,13 +6343,13 @@
 msgid "cannot readlink '%s'"
 msgstr "no es pot fer readlink en '%s'"
 
 #: builtin/init-db.c:99
 #, c-format
 msgid "insanely long symlink %s"
-msgstr "enllaç simbòlic insanament llarg %s"
+msgstr "enllaç simbòlic increïblement llarg %s"
 
 #: builtin/init-db.c:102
 #, c-format
 msgid "cannot symlink '%s' '%s'"
 msgstr "no es pot fer symlink en '%s' '%s'"
 
@@ -6347,110 +6360,110 @@
 
 #: builtin/init-db.c:110
 #, c-format
 msgid "ignoring template %s"
 msgstr "ignorant la plantilla %s"
 
-#: builtin/init-db.c:133
+#: builtin/init-db.c:136
 #, c-format
 msgid "insanely long template path %s"
-msgstr "ruta de plantilla insanament llarg %s"
+msgstr "camí de plantilla increïblement llarg %s"
 
-#: builtin/init-db.c:141
+#: builtin/init-db.c:144
 #, c-format
 msgid "templates not found %s"
 msgstr "no s'han trobat les plantilles %s"
 
-#: builtin/init-db.c:154
+#: builtin/init-db.c:157
 #, c-format
 msgid "not copying templates of a wrong format version %d from '%s'"
 msgstr "no copiant plantilles d'una versió de format errònia %d de '%s'"
 
-#: builtin/init-db.c:192
+#: builtin/init-db.c:197
 #, c-format
 msgid "insane git directory %s"
 msgstr "directori de git boig %s"
 
-#: builtin/init-db.c:323 builtin/init-db.c:326
+#: builtin/init-db.c:331 builtin/init-db.c:334
 #, c-format
 msgid "%s already exists"
 msgstr "%s ja existeix"
 
-#: builtin/init-db.c:355
+#: builtin/init-db.c:363
 #, c-format
 msgid "unable to handle file type %d"
-msgstr "incapaç de manejar el tipus de fitxer %d"
+msgstr "no s'ha pogut gestionar el tipus de fitxer %d"
 
-#: builtin/init-db.c:358
+#: builtin/init-db.c:366
 #, c-format
 msgid "unable to move %s to %s"
-msgstr "incapaç de moure %s a %s"
+msgstr "no s'ha pogut moure %s a %s"
 
 #. TRANSLATORS: The first '%s' is either "Reinitialized
 #. existing" or "Initialized empty", the second " shared" or
 #. "", and the last '%s%s' is the verbatim directory name.
-#: builtin/init-db.c:418
+#: builtin/init-db.c:426
 #, c-format
 msgid "%s%s Git repository in %s%s\n"
-msgstr "%s%s dipòsit de Git en %s%s\n"
+msgstr "%s dipòsit de Git%s a %s%s\n"
 
-#: builtin/init-db.c:419
+#: builtin/init-db.c:427
 msgid "Reinitialized existing"
 msgstr "S'ha reinicialitzat un existent"
 
-#: builtin/init-db.c:419
+#: builtin/init-db.c:427
 msgid "Initialized empty"
 msgstr "S'ha inicialitzat un buit"
 
-#: builtin/init-db.c:420
+#: builtin/init-db.c:428
 msgid " shared"
 msgstr " compartit"
 
-#: builtin/init-db.c:467
+#: builtin/init-db.c:475
 msgid ""
 "git init [-q | --quiet] [--bare] [--template=<template-directory>] [--"
 "shared[=<permissions>]] [directory]"
 msgstr ""
 "git init [-q | --quiet] [--bare] [--template=<directori-de-plantilla>] [--"
 "shared[=<permisos>]] [directori]"
 
-#: builtin/init-db.c:490
+#: builtin/init-db.c:498
 msgid "permissions"
 msgstr "permisos"
 
-#: builtin/init-db.c:491
+#: builtin/init-db.c:499
 msgid "specify that the git repository is to be shared amongst several users"
 msgstr "especifica que el dipòsit de git es compartirà entre diversos usuaris"
 
-#: builtin/init-db.c:493 builtin/prune-packed.c:57 builtin/repack.c:172
+#: builtin/init-db.c:501 builtin/prune-packed.c:57 builtin/repack.c:171
 msgid "be quiet"
 msgstr "calla"
 
-#: builtin/init-db.c:525 builtin/init-db.c:530
+#: builtin/init-db.c:533 builtin/init-db.c:538
 #, c-format
 msgid "cannot mkdir %s"
 msgstr "no es pot mkdir %s"
 
-#: builtin/init-db.c:534
+#: builtin/init-db.c:542
 #, c-format
 msgid "cannot chdir to %s"
 msgstr "no es pot chdir a %s"
 
-#: builtin/init-db.c:555
+#: builtin/init-db.c:563
 #, c-format
 msgid ""
 "%s (or --work-tree=<directory>) not allowed without specifying %s (or --git-"
 "dir=<directory>)"
 msgstr ""
 "no es permet %s (o --work-tree=<directori>) sense especificar %s (o --git-"
 "dir=<directori>)"
 
-#: builtin/init-db.c:583
+#: builtin/init-db.c:591
 #, c-format
 msgid "Cannot access work tree '%s'"
-msgstr "No es pot accedir al arbre de treball '%s'"
+msgstr "No es pot accedir a l'arbre de treball '%s'"
 
 #: builtin/interpret-trailers.c:15
 msgid ""
 "git interpret-trailers [--trim-empty] [(--trailer <token>[(=|:)<value>])...] "
 "[<file>...]"
 msgstr ""
@@ -6467,23 +6480,23 @@
 
 #: builtin/interpret-trailers.c:27
 msgid "trailer(s) to add"
 msgstr "remolcs a afegir"
 
 #: builtin/log.c:41
-msgid "git log [<options>] [<revision range>] [[--] <path>...]\n"
-msgstr "git log [<opcions>] [<rang de revisions>] [[--] <ruta>...]\n"
+msgid "git log [<options>] [<revision range>] [[--] <path>...]"
+msgstr "git log [<opcions>] [<rang de revisions>] [[--] <camí>...]"
 
 #: builtin/log.c:42
-msgid "   or: git show [options] <object>..."
-msgstr "   o: git show [opcions] <objecte>..."
+msgid "git show [options] <object>..."
+msgstr "git show [opcions] <objecte>..."
 
 #: builtin/log.c:81
 #, c-format
 msgid "invalid --decorate option: %s"
-msgstr "opció --decorate invàlida: %s"
+msgstr "opció --decorate no vàlida: %s"
 
 #: builtin/log.c:127
 msgid "suppress diff output"
 msgstr "omet la sortida de diferències"
 
 #: builtin/log.c:128
@@ -6559,17 +6572,17 @@
 #: builtin/log.c:1071
 msgid "Two output directories?"
 msgstr "Dos directoris de sortida?"
 
 #: builtin/log.c:1186
 msgid "use [PATCH n/m] even with a single patch"
-msgstr "usa [PATCH n/m] encara amb un pedaç solter"
+msgstr "usa [PATCH n/m] fins i tot amb un sol pedaç"
 
 #: builtin/log.c:1189
 msgid "use [PATCH] even with multiple patches"
-msgstr "usa [PATCH] encara amb múltiples pedaços"
+msgstr "usa [PATCH] fins i tot amb múltiples pedaços"
 
 #: builtin/log.c:1193
 msgid "print patches to standard out"
 msgstr "imprimeix els pedaços a la sortida estàndard"
 
 #: builtin/log.c:1195
@@ -6591,21 +6604,21 @@
 #: builtin/log.c:1201
 msgid "start numbering patches at <n> instead of 1"
 msgstr "comença nombrant els pedaços a <n> en lloc d'1"
 
 #: builtin/log.c:1203
 msgid "mark the series as Nth re-roll"
-msgstr "marca la sèrie com a la Nª llançada"
+msgstr "marca la sèrie com a l'enèsima llançada"
 
 #: builtin/log.c:1205
 msgid "Use [<prefix>] instead of [PATCH]"
 msgstr "Usa [<prefix>] en lloc de [PATCH]"
 
 #: builtin/log.c:1208
 msgid "store resulting files in <dir>"
-msgstr "emmagatzema els fitxers resultants en <directori>"
+msgstr "emmagatzema els fitxers resultants a <directori>"
 
 #: builtin/log.c:1211
 msgid "don't strip/add [PATCH]"
 msgstr "no despullis/afegeixis [PATCH]"
 
 #: builtin/log.c:1214
@@ -6649,21 +6662,21 @@
 msgid "ident"
 msgstr "identitat"
 
 #: builtin/log.c:1228
 msgid "set From address to <ident> (or committer ident if absent)"
 msgstr ""
-"estableix l'adreça From a <identitat> (o la identitat del comitent si absent)"
+"estableix l'adreça From a <identitat> (o la identitat del comitent si manca)"
 
 #: builtin/log.c:1230
 msgid "message-id"
 msgstr "ID de missatge"
 
 #: builtin/log.c:1231
 msgid "make first mail a reply to <message-id>"
-msgstr "fes el primer missatge una resposta a <ID de missatge>"
+msgstr "fes del primer missatge una resposta a <ID de missatge>"
 
 #: builtin/log.c:1232 builtin/log.c:1235
 msgid "boundary"
 msgstr "límit"
 
 #: builtin/log.c:1233
@@ -6694,13 +6707,13 @@
 msgid "don't print the patch filenames"
 msgstr "no imprimeixis els noms de fitxer del pedaç"
 
 #: builtin/log.c:1320
 #, c-format
 msgid "invalid ident line: %s"
-msgstr "línia d'identitat invàlida: %s"
+msgstr "línia d'identitat no vàlida: %s"
 
 #: builtin/log.c:1335
 msgid "-n and -k are mutually exclusive."
 msgstr "-n i -k són mutualment exclusius."
 
 #: builtin/log.c:1337
@@ -6718,23 +6731,23 @@
 #: builtin/log.c:1349
 msgid "--check does not make sense"
 msgstr "--check no té sentit"
 
 #: builtin/log.c:1372
 msgid "standard output, or directory, which one?"
-msgstr "sortida estàndard, o directori, qual dels dos?"
+msgstr "sortida estàndard o directori, quin dels dos?"
 
 #: builtin/log.c:1374
 #, c-format
 msgid "Could not create directory '%s'"
 msgstr "No s'ha pogut crear el directori '%s'"
 
 #: builtin/log.c:1472
 #, c-format
 msgid "unable to read signature file '%s'"
-msgstr "incapaç de llegir el fitxer de firma '%s'"
+msgstr "no s'ha pogut llegir el fitxer de firma '%s'"
 
 #: builtin/log.c:1535
 msgid "Failed to create output files"
 msgstr "S'ha fallat en crear els fitxers de sortida"
 
 #: builtin/log.c:1583
@@ -6743,13 +6756,13 @@
 
 #: builtin/log.c:1638
 #, c-format
 msgid ""
 "Could not find a tracked remote branch, please specify <upstream> manually.\n"
 msgstr ""
-"No s'ha pogut trobar una rama remota seguida, si us plau, especifiqueu "
+"No s'ha pogut trobar una branca remota seguida. Si us plau, especifiqueu "
 "<font> manualment.\n"
 
 #: builtin/log.c:1651 builtin/log.c:1653 builtin/log.c:1665
 #, c-format
 msgid "Unknown commit %s"
 msgstr "Comissió desconeguda %s"
@@ -6765,49 +6778,50 @@
 #: builtin/ls-files.c:460
 msgid "use lowercase letters for 'assume unchanged' files"
 msgstr "usa lletres minúscules per als fitxers 'assume unchanged'"
 
 #: builtin/ls-files.c:462
 msgid "show cached files in the output (default)"
-msgstr "mostra els fitxers en cau en la sortida (per defecte)"
+msgstr ""
+"mostra en la sortida els fitxers desats en la memòria cau (per defecte)"
 
 #: builtin/ls-files.c:464
 msgid "show deleted files in the output"
-msgstr "mostra els fitxers suprimits en la sortida"
+msgstr "mostra en la sortida els fitxers suprimits"
 
 #: builtin/ls-files.c:466
 msgid "show modified files in the output"
-msgstr "mostra els fitxers modificats en la sortida"
+msgstr "mostra en la sortida els fitxers modificats"
 
 #: builtin/ls-files.c:468
 msgid "show other files in the output"
-msgstr "mostra els altres fitxers en la sortida"
+msgstr "mostra en la sortida els altres fitxers"
 
 #: builtin/ls-files.c:470
 msgid "show ignored files in the output"
-msgstr "mostra els fitxers ignorats en la sortida"
+msgstr "mostra en la sortida els fitxers ignorats"
 
 #: builtin/ls-files.c:473
 msgid "show staged contents' object name in the output"
-msgstr "mostra el nom d'objecte dels continguts allistats en la sortida"
+msgstr "mostra en la sortida el nom d'objecte dels continguts allistats"
 
 #: builtin/ls-files.c:475
 msgid "show files on the filesystem that need to be removed"
-msgstr "mostra els fitxers en el sistema de fitxers que s'han de treure"
+msgstr "mostra els fitxers en el sistema de fitxers que s'han d'eliminar"
 
 #: builtin/ls-files.c:477
 msgid "show 'other' directories' names only"
 msgstr "mostra només els noms dels directoris 'other'"
 
 #: builtin/ls-files.c:480
 msgid "don't show empty directories"
 msgstr "no mostris els directoris buits"
 
 #: builtin/ls-files.c:483
 msgid "show unmerged files in the output"
-msgstr "mostra els fitxers sense fusionar en la sortida"
+msgstr "mostra en la sortida els fitxers sense fusionar"
 
 #: builtin/ls-files.c:485
 msgid "show resolve-undo information"
 msgstr "mostra la informació de resolució de desfet"
 
 #: builtin/ls-files.c:487
@@ -6825,420 +6839,422 @@
 #: builtin/ls-files.c:495
 msgid "add the standard git exclusions"
 msgstr "afegeix les exclusions estàndards de git"
 
 #: builtin/ls-files.c:498
 msgid "make the output relative to the project top directory"
-msgstr "fes que la sortida sigui relativa al directori superior del project"
+msgstr "fes que la sortida sigui relativa al directori superior del projecte"
 
 #: builtin/ls-files.c:501
 msgid "if any <file> is not in the index, treat this as an error"
 msgstr "si qualsevol <fitxer> no és en l'índex, tracta això com a error"
 
 #: builtin/ls-files.c:502
 msgid "tree-ish"
 msgstr "arbre"
 
 #: builtin/ls-files.c:503
 msgid "pretend that paths removed since <tree-ish> are still present"
 msgstr ""
-"pretenguis que les rutes tretes després de <arbre> encara estiguin presents"
+"pretén que els camins eliminats després de <arbre> encara estiguin presents"
 
 #: builtin/ls-files.c:505
 msgid "show debugging data"
 msgstr "mostra les dades de depuració"
 
 #: builtin/ls-tree.c:28
 msgid "git ls-tree [<options>] <tree-ish> [<path>...]"
-msgstr "git ls-tree [<opcions>] <arbre> [<ruta>...]"
+msgstr "git ls-tree [<opcions>] <arbre> [<camí>...]"
 
-#: builtin/ls-tree.c:126
+#: builtin/ls-tree.c:127
 msgid "only show trees"
 msgstr "mostra només els arbres"
 
-#: builtin/ls-tree.c:128
+#: builtin/ls-tree.c:129
 msgid "recurse into subtrees"
 msgstr "recursa als subarbres"
 
-#: builtin/ls-tree.c:130
+#: builtin/ls-tree.c:131
 msgid "show trees when recursing"
-msgstr "mostra els arbres al recursar"
+msgstr "mostra els arbres en recursar"
 
-#: builtin/ls-tree.c:133
+#: builtin/ls-tree.c:134
 msgid "terminate entries with NUL byte"
-msgstr "termina les entrades amb un octet NUL"
+msgstr "acaba les entrades amb un octet NUL"
 
-#: builtin/ls-tree.c:134
+#: builtin/ls-tree.c:135
 msgid "include object size"
 msgstr "mida de l'objecte d'inclusió"
 
-#: builtin/ls-tree.c:136 builtin/ls-tree.c:138
+#: builtin/ls-tree.c:137 builtin/ls-tree.c:139
 msgid "list only filenames"
 msgstr "llista només els noms de fitxer"
 
-#: builtin/ls-tree.c:141
+#: builtin/ls-tree.c:142
 msgid "use full path names"
-msgstr "usa els noms de ruta complets"
+msgstr "usa els noms de camí complets"
 
-#: builtin/ls-tree.c:143
+#: builtin/ls-tree.c:144
 msgid "list entire tree; not just current directory (implies --full-name)"
-msgstr "llista l'arbre enter; no sol el directori actual (implica --full-name)"
+msgstr ""
+"llista l'arbre sencer; no només el directori actual (implica --full-name)"
 
-#: builtin/merge.c:44
+#: builtin/merge.c:45
 msgid "git merge [options] [<commit>...]"
 msgstr "git merge [opcions] [<comissió>...]"
 
-#: builtin/merge.c:45
+#: builtin/merge.c:46
 msgid "git merge [options] <msg> HEAD <commit>"
 msgstr "git merge [opcions] <missatge> HEAD <comissió>"
 
-#: builtin/merge.c:46
+#: builtin/merge.c:47
 msgid "git merge --abort"
 msgstr "git merge --abort"
 
-#: builtin/merge.c:99
+#: builtin/merge.c:100
 msgid "switch `m' requires a value"
 msgstr "l'opció `m' requereix un valor"
 
-#: builtin/merge.c:136
+#: builtin/merge.c:137
 #, c-format
 msgid "Could not find merge strategy '%s'.\n"
 msgstr "No s'ha pogut trobar l'estratègia de fusió '%s'.\n"
 
-#: builtin/merge.c:137
+#: builtin/merge.c:138
 #, c-format
 msgid "Available strategies are:"
 msgstr "Les estratègies disponibles són:"
 
-#: builtin/merge.c:142
+#: builtin/merge.c:143
 #, c-format
 msgid "Available custom strategies are:"
 msgstr "Les estratègies personalitzades disponibles són:"
 
-#: builtin/merge.c:192
+#: builtin/merge.c:193
 msgid "do not show a diffstat at the end of the merge"
 msgstr "no mostris les estadístiques de diferència al final de la fusió"
 
-#: builtin/merge.c:195
+#: builtin/merge.c:196
 msgid "show a diffstat at the end of the merge"
 msgstr "mostra les estadístiques de diferència al final de la fusió"
 
-#: builtin/merge.c:196
+#: builtin/merge.c:197
 msgid "(synonym to --stat)"
 msgstr "(sinònim de --stat)"
 
-#: builtin/merge.c:198
+#: builtin/merge.c:199
 msgid "add (at most <n>) entries from shortlog to merge commit message"
 msgstr ""
 "afegeix (com a màxim <n>) entrades del registre curt per a fusionar el "
 "missatge de comissió"
 
-#: builtin/merge.c:201
+#: builtin/merge.c:202
 msgid "create a single commit instead of doing a merge"
-msgstr "crea una comissió soltera en lloc de fusionar"
+msgstr "crea una única comissió en lloc de fusionar"
 
-#: builtin/merge.c:203
+#: builtin/merge.c:204
 msgid "perform a commit if the merge succeeds (default)"
 msgstr "realitza una comissió si la fusió té èxit (per defecte)"
 
-#: builtin/merge.c:205
+#: builtin/merge.c:206
 msgid "edit message before committing"
 msgstr "edita el missatge abans de cometre"
 
-#: builtin/merge.c:206
+#: builtin/merge.c:207
 msgid "allow fast-forward (default)"
 msgstr "permet l'avanç ràpid (per defecte)"
 
-#: builtin/merge.c:208
+#: builtin/merge.c:209
 msgid "abort if fast-forward is not possible"
 msgstr "avorta si l'avanç ràpid no és possible"
 
-#: builtin/merge.c:212
+#: builtin/merge.c:213
 msgid "Verify that the named commit has a valid GPG signature"
 msgstr "Verifica que la comissió anomenada tingui una firma GPG vàlida"
 
-#: builtin/merge.c:213 builtin/notes.c:741 builtin/revert.c:89
+#: builtin/merge.c:214 builtin/notes.c:753 builtin/revert.c:89
 msgid "strategy"
 msgstr "estratègia"
 
-#: builtin/merge.c:214
+#: builtin/merge.c:215
 msgid "merge strategy to use"
 msgstr "estratègia de fusió a usar"
 
-#: builtin/merge.c:215
+#: builtin/merge.c:216
 msgid "option=value"
 msgstr "opció=valor"
 
-#: builtin/merge.c:216
+#: builtin/merge.c:217
 msgid "option for selected merge strategy"
 msgstr "opció per a l'estratègia de fusió seleccionada"
 
-#: builtin/merge.c:218
+#: builtin/merge.c:219
 msgid "merge commit message (for a non-fast-forward merge)"
-msgstr "missatge de comissió de fusió (per a una fusió no de avanç ràpid)"
+msgstr "missatge de comissió de fusió (per a una fusió no d'avanç ràpid)"
 
-#: builtin/merge.c:222
+#: builtin/merge.c:223
 msgid "abort the current in-progress merge"
 msgstr "avorta la fusió en curs actual"
 
-#: builtin/merge.c:250
+#: builtin/merge.c:251
 msgid "could not run stash."
 msgstr "no s'ha pogut executar stash."
 
-#: builtin/merge.c:255
+#: builtin/merge.c:256
 msgid "stash failed"
 msgstr "L'emmagatzemament ha fallat."
 
-#: builtin/merge.c:260
+#: builtin/merge.c:261
 #, c-format
 msgid "not a valid object: %s"
-msgstr "no és objecte vàlid: %s"
+msgstr "no és un objecte vàlid: %s"
 
-#: builtin/merge.c:279 builtin/merge.c:296
+#: builtin/merge.c:280 builtin/merge.c:297
 msgid "read-tree failed"
 msgstr "read-tree ha fallat"
 
-#: builtin/merge.c:326
+#: builtin/merge.c:327
 msgid " (nothing to squash)"
 msgstr " (res a aixafar)"
 
-#: builtin/merge.c:339
+#: builtin/merge.c:340
 #, c-format
 msgid "Squash commit -- not updating HEAD\n"
 msgstr "Comissió d'aixafada -- no actualitzant HEAD\n"
 
-#: builtin/merge.c:371
+#: builtin/merge.c:372
 msgid "Writing SQUASH_MSG"
 msgstr "Escrivint SQUASH_MSG"
 
-#: builtin/merge.c:373
+#: builtin/merge.c:374
 msgid "Finishing SQUASH_MSG"
-msgstr "Terminant SQUASH_MSG"
+msgstr "Finalitzant SQUASH_MSG"
 
-#: builtin/merge.c:396
+#: builtin/merge.c:397
 #, c-format
 msgid "No merge message -- not updating HEAD\n"
 msgstr "Cap missatge de fusió -- no actualitzant HEAD\n"
 
-#: builtin/merge.c:446
+#: builtin/merge.c:447
 #, c-format
 msgid "'%s' does not point to a commit"
 msgstr "'%s' no assenyala una comissió"
 
-#: builtin/merge.c:558
+#: builtin/merge.c:559
 #, c-format
 msgid "Bad branch.%s.mergeoptions string: %s"
 msgstr "Cadena branch.%s.mergeoptions dolenta: %s"
 
-#: builtin/merge.c:653
+#: builtin/merge.c:654
 msgid "git write-tree failed to write a tree"
 msgstr "git write-tree ha fallat en escriure un arbre"
 
-#: builtin/merge.c:677
+#: builtin/merge.c:678
 msgid "Not handling anything other than two heads merge."
-msgstr "No manejant res apart de la fusió de dos caps."
+msgstr "No gestionant res a part de la fusió de dos caps."
 
-#: builtin/merge.c:691
+#: builtin/merge.c:692
 #, c-format
 msgid "Unknown option for merge-recursive: -X%s"
 msgstr "Opció desconeguda de merge-recursive: -X%s"
 
-#: builtin/merge.c:704
+#: builtin/merge.c:705
 #, c-format
 msgid "unable to write %s"
-msgstr "incapaç d'escriure %s"
+msgstr "no s'ha pogut escriure %s"
 
-#: builtin/merge.c:793
+#: builtin/merge.c:794
 #, c-format
 msgid "Could not read from '%s'"
 msgstr "No s'ha pogut llegir de '%s'"
 
-#: builtin/merge.c:802
+#: builtin/merge.c:803
 #, c-format
 msgid "Not committing merge; use 'git commit' to complete the merge.\n"
-msgstr "No comitent la fusió; useu 'git commit' per a terminar la fusió.\n"
+msgstr "No cometent la fusió; useu 'git commit' per a completar la fusió.\n"
 
-#: builtin/merge.c:808
+#: builtin/merge.c:809
 #, c-format
 msgid ""
 "Please enter a commit message to explain why this merge is necessary,\n"
 "especially if it merges an updated upstream into a topic branch.\n"
 "\n"
 "Lines starting with '%c' will be ignored, and an empty message aborts\n"
 "the commit.\n"
 msgstr ""
 "Si us plau, introduïu un missatge de comissió per a explicar per què\n"
-"aquesta fusió és necessari, especialment si fusiona una font\n"
-"actualitzada a una rama temàtica.\n"
+"aquesta fusió és necessària, especialment si fusiona una font\n"
+"actualitzada a una branca temàtica.\n"
 "\n"
 "S'ignoraran les línies que comencin amb '%c', i un missatge buit\n"
 "avorta la comissió.\n"
 
-#: builtin/merge.c:832
+#: builtin/merge.c:833
 msgid "Empty commit message."
 msgstr "Missatge de comissió buit."
 
-#: builtin/merge.c:844
+#: builtin/merge.c:845
 #, c-format
 msgid "Wonderful.\n"
 msgstr "Meravellós.\n"
 
-#: builtin/merge.c:907
+#: builtin/merge.c:900
 #, c-format
 msgid "Automatic merge failed; fix conflicts and then commit the result.\n"
 msgstr ""
 "La fusió automàtica ha fallat; arregleu els conflictes i després cometeu el "
 "resultat.\n"
 
-#: builtin/merge.c:923
+#: builtin/merge.c:916
 #, c-format
 msgid "'%s' is not a commit"
 msgstr "'%s' no és una comissió"
 
-#: builtin/merge.c:964
+#: builtin/merge.c:957
 msgid "No current branch."
-msgstr "Cap rama actual."
+msgstr "Cap branca actual."
 
-#: builtin/merge.c:966
+#: builtin/merge.c:959
 msgid "No remote for the current branch."
-msgstr "Cap remot per a la rama actual."
+msgstr "No hi ha cap remot per a la branca actual."
 
-#: builtin/merge.c:968
+#: builtin/merge.c:961
 msgid "No default upstream defined for the current branch."
-msgstr "Cap font per defecte definida per a la rama actual."
+msgstr "No hi ha cap font per defecte definida per a la branca actual."
 
-#: builtin/merge.c:973
+#: builtin/merge.c:966
 #, c-format
 msgid "No remote-tracking branch for %s from %s"
-msgstr "Cap rama de seguiment remot per a %s de %s"
+msgstr "No hi ha cap branca de seguiment remot per a %s de %s"
 
-#: builtin/merge.c:1129
+#: builtin/merge.c:1122
 msgid "There is no merge to abort (MERGE_HEAD missing)."
 msgstr "No hi ha fusió a avortar (manca MERGE_HEAD)."
 
-#: builtin/merge.c:1145
+#: builtin/merge.c:1138
 msgid ""
 "You have not concluded your merge (MERGE_HEAD exists).\n"
 "Please, commit your changes before you merge."
 msgstr ""
-"No heu terminat la vostra fusió (MERGE_HEAD existeix).\n"
+"No heu completat la vostra fusió (MERGE_HEAD existeix).\n"
 "Si us plau, cometeu els vostres canvis abans de fusionar."
 
-#: builtin/merge.c:1148 git-pull.sh:34
+#: builtin/merge.c:1141 git-pull.sh:34
 msgid "You have not concluded your merge (MERGE_HEAD exists)."
-msgstr "No heu terminat la vostra fusió (MERGE_HEAD existeix)."
+msgstr "No heu completat la vostra fusió (MERGE_HEAD existeix)."
 
-#: builtin/merge.c:1152
+#: builtin/merge.c:1145
 msgid ""
 "You have not concluded your cherry-pick (CHERRY_PICK_HEAD exists).\n"
 "Please, commit your changes before you merge."
 msgstr ""
-"No heu terminat el vostre recull de cireres (CHERRY_PICK_HEAD existeix).\n"
+"No heu completat el vostre recull de cireres (CHERRY_PICK_HEAD existeix).\n"
 "Si us plau, cometeu els vostres canvis abans de fusionar."
 
-#: builtin/merge.c:1155
+#: builtin/merge.c:1148
 msgid "You have not concluded your cherry-pick (CHERRY_PICK_HEAD exists)."
 msgstr ""
-"No heu terminat el vostre recull de cireres (CHERRY_PICK_HEAD existeix)."
+"No heu completat el vostre recull de cireres (CHERRY_PICK_HEAD existeix)."
 
-#: builtin/merge.c:1164
+#: builtin/merge.c:1157
 msgid "You cannot combine --squash with --no-ff."
 msgstr "No podeu combinar --squash amb --no-ff."
 
-#: builtin/merge.c:1173
+#: builtin/merge.c:1166
 msgid "No commit specified and merge.defaultToUpstream not set."
 msgstr ""
 "No hi ha una comissió especificada i merge.defaultToUpstream no està "
 "establert."
 
-#: builtin/merge.c:1205
+#: builtin/merge.c:1198
 msgid "Can merge only exactly one commit into empty head"
 msgstr "Es pot fusionar només exactament una comissió a un cap buit"
 
-#: builtin/merge.c:1208
+#: builtin/merge.c:1201
 msgid "Squash commit into empty head not supported yet"
-msgstr "Aixafar una comissió a un cap buit encara no es suporta"
+msgstr "Aixafar una comissió a un cap buit encara no es permet"
 
-#: builtin/merge.c:1210
+#: builtin/merge.c:1203
 msgid "Non-fast-forward commit does not make sense into an empty head"
 msgstr "Una comissió no d'avanç ràpid no té sentit a un cap buit"
 
-#: builtin/merge.c:1215
+#: builtin/merge.c:1208
 #, c-format
 msgid "%s - not something we can merge"
-msgstr "%s - no és cosa que puguem fusionar"
+msgstr "%s - no és una cosa que puguem fusionar"
 
-#: builtin/merge.c:1266
+#: builtin/merge.c:1259
 #, c-format
 msgid "Commit %s has an untrusted GPG signature, allegedly by %s."
-msgstr "La comissió %s té una firma GPG no confiada, suposadament de %s."
+msgstr "La comissió %s té una firma GPG no fiable, suposadament de %s."
 
-#: builtin/merge.c:1269
+#: builtin/merge.c:1262
 #, c-format
 msgid "Commit %s has a bad GPG signature allegedly by %s."
 msgstr "La comissió %s té una firma GPG dolenta suposadament de %s."
 
-#: builtin/merge.c:1272
+#: builtin/merge.c:1265
 #, c-format
 msgid "Commit %s does not have a GPG signature."
 msgstr "La comissió %s no té firma GPG."
 
-#: builtin/merge.c:1275
+#: builtin/merge.c:1268
 #, c-format
 msgid "Commit %s has a good GPG signature by %s\n"
 msgstr "La comissió %s té una firma GPG bona de %s\n"
 
-#: builtin/merge.c:1356
+#: builtin/merge.c:1349
 #, c-format
 msgid "Updating %s..%s\n"
 msgstr "Actualitzant %s..%s\n"
 
-#: builtin/merge.c:1395
+#: builtin/merge.c:1388
 #, c-format
 msgid "Trying really trivial in-index merge...\n"
 msgstr "Intentant una fusió molt trivial en l'índex...\n"
 
-#: builtin/merge.c:1402
+#: builtin/merge.c:1395
 #, c-format
 msgid "Nope.\n"
 msgstr "No.\n"
 
-#: builtin/merge.c:1434
+#: builtin/merge.c:1427
 msgid "Not possible to fast-forward, aborting."
 msgstr "No és possible avançar ràpidament, avortant."
 
-#: builtin/merge.c:1457 builtin/merge.c:1536
+#: builtin/merge.c:1450 builtin/merge.c:1529
 #, c-format
 msgid "Rewinding the tree to pristine...\n"
 msgstr "Rebobinant l'arbre a la pristina...\n"
 
-#: builtin/merge.c:1461
+#: builtin/merge.c:1454
 #, c-format
 msgid "Trying merge strategy %s...\n"
 msgstr "Intentant l'estratègia de fusió %s...\n"
 
-#: builtin/merge.c:1527
+#: builtin/merge.c:1520
 #, c-format
 msgid "No merge strategy handled the merge.\n"
-msgstr "Cap estratègia de fusió ha manejat la fusió.\n"
+msgstr "Cap estratègia de fusió ha gestionat la fusió.\n"
 
-#: builtin/merge.c:1529
+#: builtin/merge.c:1522
 #, c-format
 msgid "Merge with strategy %s failed.\n"
 msgstr "L'estratègia de fusió %s ha fallat.\n"
 
-#: builtin/merge.c:1538
+#: builtin/merge.c:1531
 #, c-format
 msgid "Using the %s to prepare resolving by hand.\n"
 msgstr "Usant el %s per a preparar la resolució a mà.\n"
 
-#: builtin/merge.c:1550
+#: builtin/merge.c:1543
 #, c-format
 msgid "Automatic merge went well; stopped before committing as requested\n"
 msgstr ""
-"La fusió automàtica ha sortit bé; aturat abans de cometre segons demanat\n"
+"La fusió automàtica ha sortit bé; s'ha aturat abans de cometre tal i com "
+"s'havia demanat\n"
 
 #: builtin/merge-base.c:29
 msgid "git merge-base [-a|--all] <commit> <commit>..."
 msgstr "git merge-base [-a|--all] <comissió> <comissió>..."
 
 #: builtin/merge-base.c:30
@@ -7260,13 +7276,13 @@
 #: builtin/merge-base.c:214
 msgid "output all common ancestors"
 msgstr "emet tots els avantpassats comuns"
 
 #: builtin/merge-base.c:216
 msgid "find ancestors for a single n-way merge"
-msgstr "troba els avantpassats per a una fusió soltera de n vies"
+msgstr "troba els avantpassats per a una sola fusió de n vies"
 
 #: builtin/merge-base.c:218
 msgid "list revs not reachable from others"
 msgstr "llista les revisions no abastables d'altres"
 
 #: builtin/merge-base.c:220
@@ -7321,49 +7337,49 @@
 #: builtin/mktree.c:64
 msgid "git mktree [-z] [--missing] [--batch]"
 msgstr "git mktree [-z] [--missing] [--batch]"
 
 #: builtin/mktree.c:150
 msgid "input is NUL terminated"
-msgstr "l'entrada és terminada per NUL"
+msgstr "l'entrada és acabada amb NUL"
 
 #: builtin/mktree.c:151 builtin/write-tree.c:24
 msgid "allow missing objects"
-msgstr "permet els objectes mancants"
+msgstr "permet els objectes absents"
 
 #: builtin/mktree.c:152
 msgid "allow creation of more than one tree"
 msgstr "permet la creació de més d'un arbre"
 
 #: builtin/mv.c:15
 msgid "git mv [options] <source>... <destination>"
 msgstr "git mv [opcions] <font>... <destí>"
 
 #: builtin/mv.c:69
 #, c-format
 msgid "Directory %s is in index and no submodule?"
-msgstr "El directori %s està en l'índex i no hi ha submòdul?"
+msgstr "El directori %s és en l'índex i no hi ha cap submòdul?"
 
 #: builtin/mv.c:71
 msgid "Please stage your changes to .gitmodules or stash them to proceed"
 msgstr ""
 "Si us plau, allisteu els vostres canvis a .gitmodules o emmagatzemeu-los per "
 "a procedir"
 
 #: builtin/mv.c:89
 #, c-format
 msgid "%.*s is in index"
-msgstr "%.*s està en l'índex"
+msgstr "%.*s és en l'índex"
 
 #: builtin/mv.c:111
 msgid "force move/rename even if target exists"
 msgstr "força el moviment / canvi de nom encara que el destí existeixi"
 
 #: builtin/mv.c:112
 msgid "skip move/rename errors"
-msgstr "salta els error de moviment / canvi de nom"
+msgstr "omet els errors de moviment / canvi de nom"
 
 #: builtin/mv.c:151
 #, c-format
 msgid "destination '%s' is not a directory"
 msgstr "el destí '%s' no és un directori"
 
@@ -7375,25 +7391,25 @@
 #: builtin/mv.c:166
 msgid "bad source"
 msgstr "font dolenta"
 
 #: builtin/mv.c:169
 msgid "can not move directory into itself"
-msgstr "no es pot moure un directori al seu mateix"
+msgstr "no es pot moure un directori a dins d'ell mateix"
 
 #: builtin/mv.c:172
 msgid "cannot move directory over file"
 msgstr "no es pot moure un directori sobre un fitxer"
 
 #: builtin/mv.c:181
 msgid "source directory is empty"
 msgstr "el directori font està buit"
 
 #: builtin/mv.c:206
 msgid "not under version control"
-msgstr "no està baix control de versions"
+msgstr "no està sota control de versions"
 
 #: builtin/mv.c:209
 msgid "destination exists"
 msgstr "el destí existeix"
 
 #: builtin/mv.c:217
@@ -7420,13 +7436,13 @@
 
 #: builtin/mv.c:253
 #, c-format
 msgid "Renaming %s to %s\n"
 msgstr "Canviant el nom de %s a %s\n"
 
-#: builtin/mv.c:256 builtin/remote.c:726 builtin/repack.c:358
+#: builtin/mv.c:256 builtin/remote.c:728 builtin/repack.c:355
 #, c-format
 msgid "renaming '%s' failed"
 msgstr "el canvi del nom de '%s' ha fallat"
 
 #: builtin/name-rev.c:255
 msgid "git name-rev [options] <commit>..."
@@ -7471,34 +7487,35 @@
 #: builtin/notes.c:24
 msgid "git notes [--ref <notes_ref>] [list [<object>]]"
 msgstr "git notes [--ref <referència_de_notes>] [llista [<objecte>]]"
 
 #: builtin/notes.c:25
 msgid ""
-"git notes [--ref <notes_ref>] add [-f] [-m <msg> | -F <file> | (-c | -C) "
-"<object>] [<object>]"
+"git notes [--ref <notes_ref>] add [-f] [--allow-empty] [-m <msg> | -F <file> "
+"| (-c | -C) <object>] [<object>]"
 msgstr ""
-"git notes [--ref <referència_de_notes>] add [-f] [-m <missatge> | -F "
-"<fitxer> | (-c | -C) <objecte>] [<objecte>]"
+"git notes [--ref <referència_de_notes>] add [-f] [--allow-empty] [-m "
+"<missatge> | -F <fitxer> | (-c | -C) <objecte>] [<objecte>]"
 
 #: builtin/notes.c:26
 msgid "git notes [--ref <notes_ref>] copy [-f] <from-object> <to-object>"
 msgstr ""
 "git notes [--ref <referència_de_notes>] copy [-f] <d'objecte> <a-objecte>"
 
 #: builtin/notes.c:27
 msgid ""
-"git notes [--ref <notes_ref>] append [-m <msg> | -F <file> | (-c | -C) "
-"<object>] [<object>]"
+"git notes [--ref <notes_ref>] append [--allow-empty] [-m <msg> | -F <file> | "
+"(-c | -C) <object>] [<object>]"
 msgstr ""
-"git notes [--ref <referència_de_notes>] append [-m <missatge> | -F <fitxer> "
-"| (-c | -C) <objecte>] [<objecte>]"
+"git notes [--ref <referència_de_notes>] append [--allow-empty] [-m "
+"<missatge> | -F <fitxer> | (-c | -C) <objecte>] [<objecte>]"
 
 #: builtin/notes.c:28
-msgid "git notes [--ref <notes_ref>] edit [<object>]"
-msgstr "git notes [--ref <referència_de_notes>] edit [<objecte>]"
+msgid "git notes [--ref <notes_ref>] edit [--allow-empty] [<object>]"
+msgstr ""
+"git notes [--ref <referència_de_notes>] edit [--allow-empty] [<objecte>]"
 
 #: builtin/notes.c:29
 msgid "git notes [--ref <notes_ref>] show [<object>]"
 msgstr "git notes [--ref <referència_de_notes>] show [<objecte>]"
 
 #: builtin/notes.c:30
@@ -7577,229 +7594,233 @@
 msgstr "git notes prune [<opcions>]"
 
 #: builtin/notes.c:88
 msgid "git notes get-ref"
 msgstr "git notes get-ref"
 
-#: builtin/notes.c:136
+#: builtin/notes.c:146
 #, c-format
 msgid "unable to start 'show' for object '%s'"
-msgstr "incapaç d'iniciar 'show' per a l'objecte '%s'"
+msgstr "no s'ha pogut iniciar 'show' per a l'objecte '%s'"
 
-#: builtin/notes.c:140
+#: builtin/notes.c:150
 msgid "could not read 'show' output"
 msgstr "no s'ha pogut llegir la sortida de 'show'"
 
-#: builtin/notes.c:148
+#: builtin/notes.c:158
 #, c-format
 msgid "failed to finish 'show' for object '%s'"
-msgstr "s'ha fallat en terminar 'show' per a l'objecte '%s'"
+msgstr "s'ha fallat en finalitzar 'show' per a l'objecte '%s'"
 
-#: builtin/notes.c:166 builtin/tag.c:477
+#: builtin/notes.c:173 builtin/tag.c:477
 #, c-format
 msgid "could not create file '%s'"
 msgstr "no s'ha pogut crear el fitxer '%s'"
 
-#: builtin/notes.c:185
+#: builtin/notes.c:192
 msgid "Please supply the note contents using either -m or -F option"
 msgstr ""
-"Si us plau, proveïu els continguts de la nota per usar o l'opció -m o "
+"Si us plau, proveïu els continguts de la nota fent servir l'opció -m o "
 "l'opció -F"
 
-#: builtin/notes.c:206 builtin/notes.c:847
-#, c-format
-msgid "Removing note for object %s\n"
-msgstr "Traient la nota de l'objecte %s\n"
-
-#: builtin/notes.c:211
+#: builtin/notes.c:201
 msgid "unable to write note object"
-msgstr "incapaç d'escriure l'objecte de nota"
+msgstr "no s'ha pogut escriure l'objecte de nota"
 
-#: builtin/notes.c:213
+#: builtin/notes.c:203
 #, c-format
 msgid "The note contents have been left in %s"
 msgstr "Els continguts de la nota s'han deixat en %s"
 
-#: builtin/notes.c:247 builtin/tag.c:693
+#: builtin/notes.c:231 builtin/tag.c:693
 #, c-format
 msgid "cannot read '%s'"
 msgstr "no es pot llegir '%s'"
 
-#: builtin/notes.c:249 builtin/tag.c:696
+#: builtin/notes.c:233 builtin/tag.c:696
 #, c-format
 msgid "could not open or read '%s'"
 msgstr "no s'ha pogut obrir ni llegir '%s'"
 
-#: builtin/notes.c:268 builtin/notes.c:319 builtin/notes.c:321
-#: builtin/notes.c:381 builtin/notes.c:435 builtin/notes.c:518
-#: builtin/notes.c:523 builtin/notes.c:598 builtin/notes.c:640
-#: builtin/notes.c:842 builtin/tag.c:709
+#: builtin/notes.c:252 builtin/notes.c:303 builtin/notes.c:305
+#: builtin/notes.c:365 builtin/notes.c:420 builtin/notes.c:506
+#: builtin/notes.c:511 builtin/notes.c:589 builtin/notes.c:652
+#: builtin/notes.c:854 builtin/tag.c:709
 #, c-format
 msgid "Failed to resolve '%s' as a valid ref."
 msgstr "S'ha fallat en resoldre '%s' com a referència vàlida."
 
-#: builtin/notes.c:271
+#: builtin/notes.c:255
 #, c-format
 msgid "Failed to read object '%s'."
 msgstr "S'ha fallat en llegir l'objecte '%s'."
 
-#: builtin/notes.c:275
+#: builtin/notes.c:259
 #, c-format
 msgid "Cannot read note data from non-blob object '%s'."
 msgstr "No es pot llegir les dades de node de l'objecte no de blob '%s'."
 
-#: builtin/notes.c:315
+#: builtin/notes.c:299
 #, c-format
 msgid "Malformed input line: '%s'."
-msgstr "Línia d'entrada malformada: '%s'."
+msgstr "Línia d'entrada mal formada: '%s'."
 
-#: builtin/notes.c:330
+#: builtin/notes.c:314
 #, c-format
 msgid "Failed to copy notes from '%s' to '%s'"
 msgstr "S'ha fallat en copiar les notes de '%s' a '%s'"
 
-#: builtin/notes.c:374 builtin/notes.c:428 builtin/notes.c:501
-#: builtin/notes.c:513 builtin/notes.c:586 builtin/notes.c:633
-#: builtin/notes.c:907
+#: builtin/notes.c:358 builtin/notes.c:413 builtin/notes.c:489
+#: builtin/notes.c:501 builtin/notes.c:577 builtin/notes.c:645
+#: builtin/notes.c:919
 msgid "too many parameters"
 msgstr "massa paràmetres"
 
-#: builtin/notes.c:387 builtin/notes.c:646
+#: builtin/notes.c:371 builtin/notes.c:658
 #, c-format
 msgid "No note found for object %s."
-msgstr "Cap nota trobada per a l'objecte %s."
+msgstr "No s'ha trobat cap nota per a l'objecte %s."
 
-#: builtin/notes.c:409 builtin/notes.c:566
+#: builtin/notes.c:392 builtin/notes.c:555
 msgid "note contents as a string"
-msgstr "nota els continguts com a cadena"
+msgstr "anota els continguts com a cadena"
 
-#: builtin/notes.c:412 builtin/notes.c:569
+#: builtin/notes.c:395 builtin/notes.c:558
 msgid "note contents in a file"
-msgstr "nota els continguts en un fitxer"
+msgstr "anota els continguts en un fitxer"
 
-#: builtin/notes.c:414 builtin/notes.c:417 builtin/notes.c:571
-#: builtin/notes.c:574 builtin/tag.c:628
+#: builtin/notes.c:397 builtin/notes.c:400 builtin/notes.c:560
+#: builtin/notes.c:563 builtin/tag.c:628
 msgid "object"
 msgstr "objecte"
 
-#: builtin/notes.c:415 builtin/notes.c:572
+#: builtin/notes.c:398 builtin/notes.c:561
 msgid "reuse and edit specified note object"
 msgstr "reusa i edita l'objecte de nota especificat"
 
-#: builtin/notes.c:418 builtin/notes.c:575
+#: builtin/notes.c:401 builtin/notes.c:564
 msgid "reuse specified note object"
 msgstr "reusa l'objecte de nota especificat"
 
-#: builtin/notes.c:420 builtin/notes.c:488
+#: builtin/notes.c:404 builtin/notes.c:567
+msgid "allow storing empty note"
+msgstr "permet l'emmagatzematge d'una nota buida"
+
+#: builtin/notes.c:405 builtin/notes.c:476
 msgid "replace existing notes"
 msgstr "reemplaça les notes existents"
 
-#: builtin/notes.c:454
+#: builtin/notes.c:430
 #, c-format
 msgid ""
 "Cannot add notes. Found existing notes for object %s. Use '-f' to overwrite "
 "existing notes"
 msgstr ""
 "No es pot afegir les notes. S'ha trobat notes existents de l'objecte %s. "
 "Useu '-f' per a sobreescriure les notes existents."
 
-#: builtin/notes.c:459 builtin/notes.c:536
+#: builtin/notes.c:445 builtin/notes.c:524
 #, c-format
 msgid "Overwriting existing notes for object %s\n"
 msgstr "Sobreescrivint les notes existents de l'objecte %s\n"
 
-#: builtin/notes.c:489
+#: builtin/notes.c:456 builtin/notes.c:617 builtin/notes.c:859
+#, c-format
+msgid "Removing note for object %s\n"
+msgstr "Eliminant la nota de l'objecte %s\n"
+
+#: builtin/notes.c:477
 msgid "read objects from stdin"
 msgstr "llegeix els objectes des d'stdin"
 
-#: builtin/notes.c:491
+#: builtin/notes.c:479
 msgid "load rewriting config for <command> (implies --stdin)"
 msgstr ""
 "carrega la configuració de reescriptura per a <ordre> (implica --stdin)"
 
-#: builtin/notes.c:509
+#: builtin/notes.c:497
 msgid "too few parameters"
 msgstr "hi ha massa pocs paràmetres"
 
-#: builtin/notes.c:530
+#: builtin/notes.c:518
 #, c-format
 msgid ""
 "Cannot copy notes. Found existing notes for object %s. Use '-f' to overwrite "
 "existing notes"
 msgstr ""
 "No es pot copiar les notes. S'han trobat notes existents de l'objecte %s. "
 "Useu '-f' per a sobreescriure les notes existents."
 
-#: builtin/notes.c:542
+#: builtin/notes.c:530
 #, c-format
 msgid "Missing notes on source object %s. Cannot copy."
 msgstr "Manquen notes a l'objecte font %s. No es pot copiar."
 
-#: builtin/notes.c:591
+#: builtin/notes.c:582
 #, c-format
 msgid ""
 "The -m/-F/-c/-C options have been deprecated for the 'edit' subcommand.\n"
 "Please use 'git notes add -f -m/-F/-c/-C' instead.\n"
 msgstr ""
-"S'han desaprovat les opcions -m/-F/-c/-C del subordre 'edit'.\n"
-"Si us plau, useu 'git notes add -f -m/-F/-c/-C' en lloc.\n"
+"S'han desaprovat les opcions -m/-F/-c/-C en favor de la subordre 'edit'.\n"
+"Si us plau, useu 'git notes add -f -m/-F/-c/-C' en lloc d'això.\n"
 
-#: builtin/notes.c:738
+#: builtin/notes.c:750
 msgid "General options"
 msgstr "Opcions generals"
 
-#: builtin/notes.c:740
+#: builtin/notes.c:752
 msgid "Merge options"
 msgstr "Opcions de fusió"
 
-#: builtin/notes.c:742
+#: builtin/notes.c:754
 msgid ""
 "resolve notes conflicts using the given strategy (manual/ours/theirs/union/"
 "cat_sort_uniq)"
 msgstr ""
-"resol conflictes de nota per usar l'estratègia donada (manual/ours/theirs/"
+"resol els conflictes de nota usant l'estratègia donada (manual/ours/theirs/"
 "union/cat_sort_uniq)"
 
-#: builtin/notes.c:744
+#: builtin/notes.c:756
 msgid "Committing unmerged notes"
 msgstr "Cometent les notes sense fusionar"
 
-#: builtin/notes.c:746
+#: builtin/notes.c:758
 msgid "finalize notes merge by committing unmerged notes"
-msgstr "finalitza la fusió de notes per cometre les notes sense fusionar"
+msgstr "finalitza la fusió de notes cometent les notes sense fusionar"
 
-#: builtin/notes.c:748
+#: builtin/notes.c:760
 msgid "Aborting notes merge resolution"
 msgstr "Avortant la resolució de fusió de notes"
 
-#: builtin/notes.c:750
+#: builtin/notes.c:762
 msgid "abort notes merge"
 msgstr "avorta la fusió de notes"
 
-#: builtin/notes.c:845
+#: builtin/notes.c:857
 #, c-format
 msgid "Object %s has no note\n"
 msgstr "L'objecte %s no té cap nota\n"
 
-#: builtin/notes.c:857
+#: builtin/notes.c:869
 msgid "attempt to remove non-existent note is not an error"
-msgstr "l'intent de treure una nota no existent no és un error"
+msgstr "l'intent d'eliminar una nota no existent no és un error"
 
-#: builtin/notes.c:860
+#: builtin/notes.c:872
 msgid "read object names from the standard input"
 msgstr "llegeix els noms d'objecte des de l'entrada estàndard"
 
-#: builtin/notes.c:941
+#: builtin/notes.c:953
 msgid "notes-ref"
 msgstr "referència de notes"
 
-#: builtin/notes.c:942
+#: builtin/notes.c:954
 msgid "use notes from <notes_ref>"
 msgstr "usa les notes de <referència de notes>"
 
-#: builtin/notes.c:977 builtin/remote.c:1624
+#: builtin/notes.c:989 builtin/remote.c:1621
 #, c-format
 msgid "Unknown subcommand: %s"
 msgstr "Subordre desconegut: %s"
 
 #: builtin/pack-objects.c:28
 msgid "git pack-objects --stdout [options...] [< ref-list | < object-list]"
@@ -7822,23 +7843,23 @@
 msgid "Writing objects"
 msgstr "Escrivint els objectes"
 
 #: builtin/pack-objects.c:1015
 msgid "disabling bitmap writing, as some objects are not being packed"
 msgstr ""
-"deshabilitant l'escriptura de mapes de bits, perquè alguns objectes no "
+"inhabilitant l'escriptura de mapes de bits, perquè alguns objectes no "
 "s'estan empaquetant"
 
 #: builtin/pack-objects.c:2175
 msgid "Compressing objects"
 msgstr "Comprimint objectes"
 
 #: builtin/pack-objects.c:2572
 #, c-format
 msgid "unsupported index version %s"
-msgstr "versió d'índex no suportada %s"
+msgstr "versió d'índex no compatible %s"
 
 #: builtin/pack-objects.c:2576
 #, c-format
 msgid "bad index version '%s'"
 msgstr "versió d'índex dolenta '%s'"
 
@@ -7847,214 +7868,218 @@
 msgid "option %s does not accept negative form"
 msgstr "l'opció %s no accepta la forma negativa"
 
 #: builtin/pack-objects.c:2603
 #, c-format
 msgid "unable to parse value '%s' for option %s"
-msgstr "incapaç d'analitzar el valor '%s' per a l'opció %s"
+msgstr "no s'ha pogut analitzar el valor '%s' per a l'opció %s"
 
-#: builtin/pack-objects.c:2622
+#: builtin/pack-objects.c:2623
 msgid "do not show progress meter"
 msgstr "no mostris l'indicador de progrés"
 
-#: builtin/pack-objects.c:2624
+#: builtin/pack-objects.c:2625
 msgid "show progress meter"
 msgstr "mostra l'indicador de progrés"
 
-#: builtin/pack-objects.c:2626
+#: builtin/pack-objects.c:2627
 msgid "show progress meter during object writing phase"
-msgstr "mostra l'indicador de progrés durant el fase d'escriptura d'objectes"
+msgstr "mostra l'indicador de progrés durant la fase d'escriptura d'objectes"
 
-#: builtin/pack-objects.c:2629
+#: builtin/pack-objects.c:2630
 msgid "similar to --all-progress when progress meter is shown"
 msgstr "similar a --all-progress quan l'indicador de progrés es mostra"
 
-#: builtin/pack-objects.c:2630
+#: builtin/pack-objects.c:2631
 msgid "version[,offset]"
 msgstr "versió[,desplaçament]"
 
-#: builtin/pack-objects.c:2631
+#: builtin/pack-objects.c:2632
 msgid "write the pack index file in the specified idx format version"
 msgstr ""
 "escriu el fitxer d'índex de paquet en la versió de format d'índex "
 "especificada"
 
-#: builtin/pack-objects.c:2634
+#: builtin/pack-objects.c:2635
 msgid "maximum size of each output pack file"
 msgstr "mida màxima de cada fitxer de paquet de sortida"
 
-#: builtin/pack-objects.c:2636
+#: builtin/pack-objects.c:2637
 msgid "ignore borrowed objects from alternate object store"
 msgstr ""
 "ignora els objectes prestats d'un emmagatzemament d'objectes alternatiu"
 
-#: builtin/pack-objects.c:2638
+#: builtin/pack-objects.c:2639
 msgid "ignore packed objects"
 msgstr "ignora els objectes empaquetats"
 
-#: builtin/pack-objects.c:2640
+#: builtin/pack-objects.c:2641
 msgid "limit pack window by objects"
 msgstr "limita la finestra d'empaquetament per objectes"
 
-#: builtin/pack-objects.c:2642
+#: builtin/pack-objects.c:2643
 msgid "limit pack window by memory in addition to object limit"
 msgstr ""
 "limita la finestra d'empaquetament per memòria a més del límit d'objectes"
 
-#: builtin/pack-objects.c:2644
+#: builtin/pack-objects.c:2645
 msgid "maximum length of delta chain allowed in the resulting pack"
-msgstr "longitud màxima de la cadena de deltes permesa en el paquet resultat"
+msgstr "longitud màxima de la cadena de deltes permesa en el paquet resultant"
 
-#: builtin/pack-objects.c:2646
+#: builtin/pack-objects.c:2647
 msgid "reuse existing deltas"
 msgstr "reusa les deltes existents"
 
-#: builtin/pack-objects.c:2648
+#: builtin/pack-objects.c:2649
 msgid "reuse existing objects"
 msgstr "reusa els objectes existents"
 
-#: builtin/pack-objects.c:2650
+#: builtin/pack-objects.c:2651
 msgid "use OFS_DELTA objects"
 msgstr "usa objectes OFS_DELTA"
 
-#: builtin/pack-objects.c:2652
+#: builtin/pack-objects.c:2653
 msgid "use threads when searching for best delta matches"
 msgstr "usa fils en cercar les millores coincidències de delta"
 
-#: builtin/pack-objects.c:2654
+#: builtin/pack-objects.c:2655
 msgid "do not create an empty pack output"
 msgstr "no creïs una emissió de paquet buida"
 
-#: builtin/pack-objects.c:2656
+#: builtin/pack-objects.c:2657
 msgid "read revision arguments from standard input"
 msgstr "llegeix els paràmetres de revisió des de l'entrada estàndard"
 
-#: builtin/pack-objects.c:2658
+#: builtin/pack-objects.c:2659
 msgid "limit the objects to those that are not yet packed"
 msgstr "limita els objectes als que encara no s'hagin empaquetat"
 
-#: builtin/pack-objects.c:2661
+#: builtin/pack-objects.c:2662
 msgid "include objects reachable from any reference"
 msgstr "inclou els objectes abastables de qualsevulla referència"
 
-#: builtin/pack-objects.c:2664
+#: builtin/pack-objects.c:2665
 msgid "include objects referred by reflog entries"
 msgstr ""
-"inclou els objectes als quals les entrades del registre de referències "
-"refereixin"
+"inclou els objectes als quals facin referència les entrades del registre de "
+"referències"
 
-#: builtin/pack-objects.c:2667
+#: builtin/pack-objects.c:2668
 msgid "include objects referred to by the index"
-msgstr "inclou els objectes als quals l'índex refereixi"
+msgstr "inclou els objectes als quals faci referència l'índex"
 
-#: builtin/pack-objects.c:2670
+#: builtin/pack-objects.c:2671
 msgid "output pack to stdout"
 msgstr "emet el paquet a stdout"
 
-#: builtin/pack-objects.c:2672
+#: builtin/pack-objects.c:2673
 msgid "include tag objects that refer to objects to be packed"
 msgstr ""
-"inclou els objectes d'etiqueta que refereixin als objectes que empaquetar"
+"inclou els objectes d'etiqueta que facin referència als objectes a empaquetar"
 
-#: builtin/pack-objects.c:2674
+#: builtin/pack-objects.c:2675
 msgid "keep unreachable objects"
-msgstr "reté els objectes inabastables"
+msgstr "retén els objectes inabastables"
 
-#: builtin/pack-objects.c:2675 parse-options.h:140
+#: builtin/pack-objects.c:2676 parse-options.h:140
 msgid "time"
 msgstr "hora"
 
-#: builtin/pack-objects.c:2676
+#: builtin/pack-objects.c:2677
 msgid "unpack unreachable objects newer than <time>"
-msgstr "desempaquetar els objectes inabastables més nous que <hora>"
+msgstr "desempaqueta els objectes inabastables més nous que <hora>"
 
-#: builtin/pack-objects.c:2679
+#: builtin/pack-objects.c:2680
 msgid "create thin packs"
 msgstr "crea paquets prims"
 
-#: builtin/pack-objects.c:2681
+#: builtin/pack-objects.c:2682
+msgid "create packs suitable for shallow fetches"
+msgstr "crea paquets adequats per als obteniments superficials"
+
+#: builtin/pack-objects.c:2684
 msgid "ignore packs that have companion .keep file"
-msgstr "ignora els paquets que tinguin un fitxer .keep de company"
+msgstr "ignora els paquets que tinguin un fitxer .keep corresponent"
 
-#: builtin/pack-objects.c:2683
+#: builtin/pack-objects.c:2686
 msgid "pack compression level"
 msgstr "nivell de compressió de paquet"
 
-#: builtin/pack-objects.c:2685
+#: builtin/pack-objects.c:2688
 msgid "do not hide commits by grafts"
 msgstr "no amaguis les comissions per empelt"
 
-#: builtin/pack-objects.c:2687
+#: builtin/pack-objects.c:2690
 msgid "use a bitmap index if available to speed up counting objects"
 msgstr ""
-"usa un índex de mapa de bits, si disponible, per a accelerar el recompte "
-"d'objectes"
+"usa un índex de mapa de bits, si està disponible, per a accelerar el "
+"recompte d'objectes"
 
-#: builtin/pack-objects.c:2689
+#: builtin/pack-objects.c:2692
 msgid "write a bitmap index together with the pack index"
 msgstr "escriu un índex de mapa de bits junt amb l'índex de paquet"
 
-#: builtin/pack-objects.c:2778
+#: builtin/pack-objects.c:2783
 msgid "Counting objects"
 msgstr "Comptant els objectes"
 
 #: builtin/pack-refs.c:6
 msgid "git pack-refs [options]"
 msgstr "git pack-refs [opcions]"
 
 #: builtin/pack-refs.c:14
 msgid "pack everything"
-msgstr "empaqueta tot"
+msgstr "empaqueta-ho tot"
 
 #: builtin/pack-refs.c:15
 msgid "prune loose refs (default)"
 msgstr "poda les referències soltes (per defecte)"
 
 #: builtin/prune-packed.c:7
 msgid "git prune-packed [-n|--dry-run] [-q|--quiet]"
 msgstr "git prune-packed [-n|--dry-run] [-q|--quiet]"
 
 #: builtin/prune-packed.c:40
 msgid "Removing duplicate objects"
-msgstr "Traient objectes duplicats"
+msgstr "Eliminant objectes duplicats"
 
 #: builtin/prune.c:12
 msgid "git prune [-n] [-v] [--expire <time>] [--] [<head>...]"
 msgstr "git prune [-n] [-v] [--expire <hora>] [--] [<cap>...]"
 
 #: builtin/prune.c:106
 msgid "do not remove, show only"
-msgstr "no treguis, només mostra"
+msgstr "no eliminis, només mostra"
 
 #: builtin/prune.c:107
 msgid "report pruned objects"
 msgstr "informa d'objectes podats"
 
 #: builtin/prune.c:110
 msgid "expire objects older than <time>"
-msgstr "caduca els objectes més vells que <hora>"
+msgstr "fes caducar els objectes més vells que <hora>"
 
 #: builtin/push.c:14
 msgid "git push [<options>] [<repository> [<refspec>...]]"
 msgstr "git push [<opcions>] [<dipòsit> [<especificació-de-referència>...]]"
 
 #: builtin/push.c:85
 msgid "tag shorthand without <tag>"
 msgstr "abreviatura d'etiqueta sense <tag>"
 
 #: builtin/push.c:95
 msgid "--delete only accepts plain target ref names"
-msgstr "--delete només accepta noms de referència destí senzells"
+msgstr "--delete només accepta noms de referència de destí senzills"
 
 #: builtin/push.c:139
 msgid ""
 "\n"
 "To choose either option permanently, see push.default in 'git help config'."
 msgstr ""
 "\n"
-"Per a triar qualsevulla opció permanentment, veu push.default en 'git help "
+"Per a triar qualsevulla opció permanentment, vegeu push.default a 'git help "
 "config'."
 
 #: builtin/push.c:142
 #, c-format
 msgid ""
 "The upstream branch of your current branch does not match\n"
@@ -8065,19 +8090,19 @@
 "\n"
 "To push to the branch of the same name on the remote, use\n"
 "\n"
 "    git push %s %s\n"
 "%s"
 msgstr ""
-"La rama font de la vostra rama actual no coincideix amb\n"
-"el nom de la vostra rama actual. Per a pujar-la a la rama font\n"
-"en el remot, useu\n"
+"La branca font de la vostra branca actual no coincideix\n"
+"amb el nom de la vostra branca actual. Per a pujar-la a la\n"
+"branca font en el remot, useu\n"
 "\n"
 "    git push %s HEAD:%s\n"
 "\n"
-"Per a pujar a la rama de la mateixa nom en el remot, useu\n"
+"Per a pujar a la branca del mateix nom en el remot, useu\n"
 "\n"
 "    git push %s %s\n"
 "%s"
 
 #: builtin/push.c:157
 #, c-format
@@ -8085,46 +8110,46 @@
 "You are not currently on a branch.\n"
 "To push the history leading to the current (detached HEAD)\n"
 "state now, use\n"
 "\n"
 "    git push %s HEAD:<name-of-remote-branch>\n"
 msgstr ""
-"Actualment no esteu en cap rama.\n"
+"Actualment no sou en cap branca.\n"
 "Per a pujar la història que condueix a l'estat actual\n"
 "(HEAD separat) ara, useu\n"
 "\n"
-"    git push %s HEAD:<nom-de-rama-remota>\n"
+"    git push %s HEAD:<nom-de-branca-remota>\n"
 
 #: builtin/push.c:171
 #, c-format
 msgid ""
 "The current branch %s has no upstream branch.\n"
 "To push the current branch and set the remote as upstream, use\n"
 "\n"
 "    git push --set-upstream %s %s\n"
 msgstr ""
-"La rama actual %s no té rama font.\n"
-"Per a pujar la rama actual i estableix el remot com a font, useu\n"
+"La branca actual %s no té cap branca font.\n"
+"Per a pujar la branca actual i establir el remot com a font, useu\n"
 "\n"
 "    git push --set-upstream %s %s\n"
 
 #: builtin/push.c:179
 #, c-format
 msgid "The current branch %s has multiple upstream branches, refusing to push."
-msgstr "La rama actual %s té múltiples rames fonts, refusant pujar."
+msgstr "La branca actual %s té múltiples branques fonts, refusant pujar."
 
 #: builtin/push.c:182
 #, c-format
 msgid ""
 "You are pushing to remote '%s', which is not the upstream of\n"
 "your current branch '%s', without telling me what to push\n"
 "to update which remote branch."
 msgstr ""
 "Esteu pujant al remot '%s', que no és la font de la vostra\n"
-"rama actual '%s', sense dir-me què pujar per a actualitzar\n"
-"quina rama remota."
+"branca actual '%s', sense dir-me què pujar per a actualitzar\n"
+"quina branca remota."
 
 #: builtin/push.c:205
 msgid ""
 "push.default is unset; its implicit value has changed in\n"
 "Git 2.0 from 'matching' to 'simple'. To squelch this message\n"
 "and maintain the traditional behavior, use:\n"
@@ -8155,23 +8180,23 @@
 "  git config --global push.default matching\n"
 "\n"
 "Per a suprimir aquest missatge i adoptar el comportament nou ara, useu:\n"
 "\n"
 "  git config --global push.default simple\n"
 "\n"
-"Quan push.default és 'matching', git pujarà les rames locals a les\n"
-"rames remotes que ja existeixen amb el mateix nom.\n"
+"Quan push.default és 'matching', git pujarà les branques locals a les\n"
+"branques remotes que ja existeixen amb el mateix nom.\n"
 "\n"
 "Des del Git 2.0, el Git per defecte té el comportament més\n"
-"conservatiu 'simple', que només puja la rama actual a la rama\n"
-"corresponent que 'git pull' usa per actualitzar la rama actual.\n"
+"conservatiu 'simple', que només puja la branca actual a la branca\n"
+"corresponent que 'git pull' usa per a actualitzar la branca actual.\n"
 "\n"
-"Veu 'git help config' i cerqueu 'push.default' per més informació.\n"
+"Vegeu 'git help config' i cerqueu 'push.default' per a més informació.\n"
 "(s'ha introduït el mode 'simple' en el Git 1.7.11. Useu el mode similar\n"
-"'current' en lloc de 'simple' si a vegades utilitzeu versions més\n"
-"antigues del Git)"
+"'current' en lloc de 'simple' si a vegades useu versions més antigues\n"
+"del Git)"
 
 #: builtin/push.c:272
 msgid ""
 "You didn't specify any refspecs to push, and push.default is \"nothing\"."
 msgstr ""
 "No heu especificat cap especificació de referència a pujar, i push.default "
@@ -8181,42 +8206,44 @@
 msgid ""
 "Updates were rejected because the tip of your current branch is behind\n"
 "its remote counterpart. Integrate the remote changes (e.g.\n"
 "'git pull ...') before pushing again.\n"
 "See the 'Note about fast-forwards' in 'git push --help' for details."
 msgstr ""
-"S'han rebutjat les actualitzacions perquè el punt de la vostra rama\n"
-"actual està darrere de la seva contrapart remota. Integreu els canvis\n"
-"remots (per exemple, 'git pull ...') abans de pujar de nou.\n"
-"Veu la 'Nota sobre avances ràpids' en 'git push --help' per detalls."
+"S'han rebutjat les actualitzacions perquè el punt de la vostra branca\n"
+"actual està darrere de la seva branca remota corresponent. Integreu\n"
+"els canvis remots (per exemple, 'git pull ...') abans de pujar de nou.\n"
+"Vegeu la 'Nota sobre avanços ràpids' a 'git push --help' per detalls."
 
 #: builtin/push.c:285
 msgid ""
 "Updates were rejected because a pushed branch tip is behind its remote\n"
 "counterpart. Check out this branch and integrate the remote changes\n"
 "(e.g. 'git pull ...') before pushing again.\n"
 "See the 'Note about fast-forwards' in 'git push --help' for details."
 msgstr ""
-"S'han rebutjat les actualitzacions perquè un punt de rama pujada està\n"
-"darrere de la seva contrapart remota. Agafeu aquesta rama i integreu\n"
-"els canvis remots (per exemple, 'git pull ...') abans de pujar de nou.\n"
-"Veu la 'Nota sobre avances ràpids' en 'git push --help' per detalls."
+"S'han rebutjat les actualitzacions perquè un punt de branca pujada\n"
+"està darrere de la seva branca remota corresponent. Agafeu aquesta\n"
+"branca i integreu els canvis remots (per exemple, 'git pull ...')\n"
+"abans de pujar de nou.\n"
+"Vegeu la 'Nota sobre avanços ràpids' a 'git push --help' per detalls."
 
 #: builtin/push.c:291
 msgid ""
 "Updates were rejected because the remote contains work that you do\n"
 "not have locally. This is usually caused by another repository pushing\n"
 "to the same ref. You may want to first integrate the remote changes\n"
 "(e.g., 'git pull ...') before pushing again.\n"
 "See the 'Note about fast-forwards' in 'git push --help' for details."
 msgstr ""
-"S'han rebutjat les actualitzacions perquè el remot conté treball que\n"
-"no teniu localment. Això usualment es causa per un altre dipòsit\n"
-"havent pujat a la mateixa referència. Podeu voler primer integrar els\n"
-"canvis remots (per exemple, 'git pull ...') abans de pujar de nou.\n"
-"Veu la 'Nota sobre avances ràpids' en 'git push --help' per detalls."
+"S'han rebutjat les actualitzacions perquè el remot conté treball\n"
+"que no teniu localment. Això usualment és causat per un altre dipòsit\n"
+"que ha pujat a la mateixa referència. Pot ser que primer vulgueu\n"
+"integrar els canvis remots (per exemple, 'git pull ...') abans de\n"
+"pujar de nou.\n"
+"Vegeu la 'Nota sobre avanços ràpids' a 'git push --help' per detalls."
 
 #: builtin/push.c:298
 msgid "Updates were rejected because the tag already exists in the remote."
 msgstr ""
 "S'han rebutjat les actualitzacions perquè l'etiqueta ja existeix en el remot."
 
@@ -8256,18 +8283,18 @@
 "\n"
 "and then push using the remote name\n"
 "\n"
 "    git push <name>\n"
 msgstr ""
 "Cap destí de pujada configurada.\n"
-"O especifiqueu l'URL des de la línia d'ordres o configureu un dipòsit remot "
-"per usar\n"
+"Especifiqueu l'URL des de la línia d'ordres o bé configureu un dipòsit remot "
+"fent servir\n"
 "\n"
 "    git remote add <nom> <url>\n"
 "\n"
-"i després pujeu per usar el nom remot\n"
+"i després pugeu fent servir el nom remot\n"
 "\n"
 "    git push <nom>\n"
 
 #: builtin/push.c:410
 msgid "--all and --tags are incompatible"
 msgstr "--all i --tags són incompatibles"
@@ -8307,13 +8334,13 @@
 #: builtin/push.c:498
 msgid "push tags (can't be used with --all or --mirror)"
 msgstr "envia les etiquetes (no es pot usar amb --all o --mirror)"
 
 #: builtin/push.c:501
 msgid "force updates"
-msgstr "força actualitzacions"
+msgstr "força les actualitzacions"
 
 #: builtin/push.c:503
 msgid "refname>:<expect"
 msgstr "nom-de-referència>:<esperat"
 
 #: builtin/push.c:504
@@ -8335,21 +8362,21 @@
 #: builtin/push.c:512
 msgid "set upstream for git pull/status"
 msgstr "estableix la font per a git pull/status"
 
 #: builtin/push.c:515
 msgid "prune locally removed refs"
-msgstr "poda les referències localment tretes"
+msgstr "poda les referències eliminades localment"
 
 #: builtin/push.c:517
 msgid "bypass pre-push hook"
 msgstr "evita el ganxo de prepujada"
 
 #: builtin/push.c:518
 msgid "push missing but relevant tags"
-msgstr "puja les etiquetes mancants però relevants"
+msgstr "puja les etiquetes absents però rellevants"
 
 #: builtin/push.c:520
 msgid "GPG sign the push"
 msgstr "firma la pujada amb GPG"
 
 #: builtin/push.c:529
@@ -8385,29 +8412,29 @@
 #: builtin/read-tree.c:117
 msgid "perform a merge in addition to a read"
 msgstr "realitza una fusió a més d'una lectura"
 
 #: builtin/read-tree.c:119
 msgid "3-way merge if no file level merging required"
-msgstr "fusió de 3 vies si no cal fusió a la nivell de fitxers"
+msgstr "fusió de 3 vies si no cal fusió a nivell de fitxers"
 
 #: builtin/read-tree.c:121
 msgid "3-way merge in presence of adds and removes"
-msgstr "fusió de 3 vies en presència d'afegiments i tretes"
+msgstr "fusió de 3 vies en presència d'afegiments i supressions"
 
 #: builtin/read-tree.c:123
 msgid "same as -m, but discard unmerged entries"
 msgstr "el mateix que -m, però descarta les entrades no fusionades"
 
 #: builtin/read-tree.c:124
 msgid "<subdirectory>/"
 msgstr "<subdirectori>/"
 
 #: builtin/read-tree.c:125
 msgid "read the tree into the index under <subdirectory>/"
-msgstr "llegiu l'arbre a l'índex baix <subdirectori>/"
+msgstr "llegiu l'arbre a l'índex sota <subdirectori>/"
 
 #: builtin/read-tree.c:128
 msgid "update working tree with merge result"
 msgstr "actualitza l'arbre de treball amb el resultat de fusió"
 
 #: builtin/read-tree.c:130
@@ -8450,26 +8477,26 @@
 
 #: builtin/remote.c:13
 msgid ""
 "git remote add [-t <branch>] [-m <master>] [-f] [--tags|--no-tags] [--"
 "mirror=<fetch|push>] <name> <url>"
 msgstr ""
-"git remote add [-t <rama>] [-m <mestre>] [-f] [--tags|--no-tags] [--"
+"git remote add [-t <branca>] [-m <mestra>] [-f] [--tags|--no-tags] [--"
 "mirror=<fetch|push>] <nom> <url>"
 
 #: builtin/remote.c:14 builtin/remote.c:33
 msgid "git remote rename <old> <new>"
 msgstr "git remote rename <antic> <nou>"
 
 #: builtin/remote.c:15 builtin/remote.c:38
 msgid "git remote remove <name>"
 msgstr "git remote remove <nom>"
 
 #: builtin/remote.c:16
 msgid "git remote set-head <name> (-a | --auto | -d | --delete |<branch>)"
-msgstr "git remote set-head <nom> (-a | --auto | -d | --delete |<rama>)"
+msgstr "git remote set-head <nom> (-a | --auto | -d | --delete |<branca>)"
 
 #: builtin/remote.c:17
 msgid "git remote [-v | --verbose] show [-n] <name>"
 msgstr "git remote [-v | --verbose] show [-n] <nom>"
 
 #: builtin/remote.c:18
@@ -8481,41 +8508,41 @@
 "git remote [-v | --verbose] update [-p | --prune] [(<group> | <remote>)...]"
 msgstr ""
 "git remote [-v | --verbose] update [-p | --prune] [(<grup> | <remot>)...]"
 
 #: builtin/remote.c:20
 msgid "git remote set-branches [--add] <name> <branch>..."
-msgstr "git remote set-branches [--add] <nom> <rama>..."
+msgstr "git remote set-branches [--add] <nom> <branca>..."
 
 #: builtin/remote.c:21 builtin/remote.c:69
 msgid "git remote set-url [--push] <name> <newurl> [<oldurl>]"
 msgstr "git remote set-url [--push] <nom> <url-nou> [<url-antic>]"
 
 #: builtin/remote.c:22 builtin/remote.c:70
 msgid "git remote set-url --add <name> <newurl>"
-msgstr "git remote set-url --add <nom> <url nou>"
+msgstr "git remote set-url --add <nom> <url-nou>"
 
 #: builtin/remote.c:23 builtin/remote.c:71
 msgid "git remote set-url --delete <name> <url>"
 msgstr "git remote set-url --delete <nom> <url>"
 
 #: builtin/remote.c:28
 msgid "git remote add [<options>] <name> <url>"
 msgstr "git remote add [<opcions>] <nom> <url>"
 
 #: builtin/remote.c:43
 msgid "git remote set-head <name> (-a | --auto | -d | --delete | <branch>)"
-msgstr "git remote set-head <nom> (-a | --auto | -d | --delete | <rama>)"
+msgstr "git remote set-head <nom> (-a | --auto | -d | --delete | <branca>)"
 
 #: builtin/remote.c:48
 msgid "git remote set-branches <name> <branch>..."
-msgstr "git remote set-branches <nom> <rama>..."
+msgstr "git remote set-branches <nom> <branca>..."
 
 #: builtin/remote.c:49
 msgid "git remote set-branches --add <name> <branch>..."
-msgstr "git remote set-branches --add <nom> <rama>..."
+msgstr "git remote set-branches --add <nom> <branca>..."
 
 #: builtin/remote.c:54
 msgid "git remote show [<options>] <name>"
 msgstr "git remote show [<opcions>] <nom>"
 
 #: builtin/remote.c:59
@@ -8534,502 +8561,505 @@
 #: builtin/remote.c:120
 msgid ""
 "--mirror is dangerous and deprecated; please\n"
 "\t use --mirror=fetch or --mirror=push instead"
 msgstr ""
 "--mirror és perillós i desaprovat; si us\n"
-"\t plau, useu --mirror=fetch o\t --mirror=push en lloc"
+"\t plau, useu --mirror=fetch o\t --mirror=push en lloc d'això"
 
 #: builtin/remote.c:137
 #, c-format
 msgid "unknown mirror argument: %s"
 msgstr "paràmetre de reflexió desconegut: %s"
 
 #: builtin/remote.c:153
 msgid "fetch the remote branches"
-msgstr "obtén les rames remotes"
+msgstr "obtén les branques remotes"
 
 #: builtin/remote.c:155
 msgid "import all tags and associated objects when fetching"
-msgstr "en obtenir, importa totes les etiquetes i tos els objectes"
+msgstr "en obtenir, importa totes les etiquetes i tots els objectes"
 
 #: builtin/remote.c:158
 msgid "or do not fetch any tag at all (--no-tags)"
 msgstr "o no obtinguis cap etiqueta (--no-tags)"
 
 #: builtin/remote.c:160
 msgid "branch(es) to track"
-msgstr "rames a seguir"
+msgstr "branques a seguir"
 
 #: builtin/remote.c:161
 msgid "master branch"
-msgstr "rama mestre"
+msgstr "branca mestra"
 
 #: builtin/remote.c:162
 msgid "push|fetch"
 msgstr "push|fetch"
 
 #: builtin/remote.c:163
 msgid "set up remote as a mirror to push to or fetch from"
-msgstr "estableix el remot com a mirall a que pujar o de que obtenir"
+msgstr "estableix el remot com a mirall al qual pujar o del qual obtenir"
 
 #: builtin/remote.c:175
 msgid "specifying a master branch makes no sense with --mirror"
-msgstr "especificar una rama mestra no té sentit amb --mirror"
+msgstr "especificar una branca mestra no té sentit amb --mirror"
 
 #: builtin/remote.c:177
 msgid "specifying branches to track makes sense only with fetch mirrors"
 msgstr ""
-"especificar les rames a seguir té sentit només amb miralls d'obteniment"
+"especificar les branques a seguir té sentit només amb miralls d'obteniment"
 
-#: builtin/remote.c:185 builtin/remote.c:641
+#: builtin/remote.c:187 builtin/remote.c:643
 #, c-format
 msgid "remote %s already exists."
 msgstr "el remot %s ja existeix."
 
-#: builtin/remote.c:189 builtin/remote.c:645
+#: builtin/remote.c:191 builtin/remote.c:647
 #, c-format
 msgid "'%s' is not a valid remote name"
 msgstr "'%s' no és un nom de remot vàlid"
 
-#: builtin/remote.c:233
+#: builtin/remote.c:235
 #, c-format
 msgid "Could not setup master '%s'"
-msgstr "No s'ha pogut configurar el mestre '%s'"
+msgstr "No s'ha pogut configurar la mestra '%s'"
 
-#: builtin/remote.c:333
+#: builtin/remote.c:335
 #, c-format
 msgid "Could not get fetch map for refspec %s"
 msgstr ""
 "No s'ha pogut obtenir el mapa d'obteniment de l'especificació de referència "
 "%s"
 
-#: builtin/remote.c:434 builtin/remote.c:442
+#: builtin/remote.c:436 builtin/remote.c:444
 msgid "(matching)"
 msgstr "(coincident)"
 
-#: builtin/remote.c:446
+#: builtin/remote.c:448
 msgid "(delete)"
 msgstr "(suprimir)"
 
-#: builtin/remote.c:590 builtin/remote.c:596 builtin/remote.c:602
+#: builtin/remote.c:592 builtin/remote.c:598 builtin/remote.c:604
 #, c-format
 msgid "Could not append '%s' to '%s'"
 msgstr "No s'ha pogut annexar '%s' a '%s'"
 
-#: builtin/remote.c:634 builtin/remote.c:798 builtin/remote.c:898
+#: builtin/remote.c:636 builtin/remote.c:795 builtin/remote.c:895
 #, c-format
 msgid "No such remote: %s"
 msgstr "No hi ha tal remot: %s"
 
-#: builtin/remote.c:651
+#: builtin/remote.c:653
 #, c-format
 msgid "Could not rename config section '%s' to '%s'"
 msgstr "No s'ha pogut canviar el nom de la secció de configuració '%s' a '%s'"
 
-#: builtin/remote.c:657 builtin/remote.c:850
+#: builtin/remote.c:659 builtin/remote.c:847
 #, c-format
 msgid "Could not remove config section '%s'"
-msgstr "No s'ha pogut treure la secció de configuració '%s'"
+msgstr "No s'ha pogut eliminar la secció de configuració '%s'"
 
-#: builtin/remote.c:672
+#: builtin/remote.c:674
 #, c-format
 msgid ""
 "Not updating non-default fetch refspec\n"
 "\t%s\n"
 "\tPlease update the configuration manually if necessary."
 msgstr ""
 "No actualitzant l'especificació de referències d'obteniment no per defecte\n"
 "\t%s\n"
 "\tSi us plau, actualitzeu la configuració manualment si és necessari."
 
-#: builtin/remote.c:678
+#: builtin/remote.c:680
 #, c-format
 msgid "Could not append '%s'"
 msgstr "No s'ha pogut annexar '%s'"
 
-#: builtin/remote.c:689
+#: builtin/remote.c:691
 #, c-format
 msgid "Could not set '%s'"
 msgstr "No s'ha pogut establir '%s'"
 
-#: builtin/remote.c:711
+#: builtin/remote.c:713
 #, c-format
 msgid "deleting '%s' failed"
 msgstr "la supressió de '%s' ha fallat"
 
-#: builtin/remote.c:745
+#: builtin/remote.c:747
 #, c-format
 msgid "creating '%s' failed"
 msgstr "la creació de '%s' ha fallat"
 
-#: builtin/remote.c:769
+#: builtin/remote.c:766
 #, c-format
 msgid "Could not remove branch %s"
-msgstr "No s'ha pogut treure la rama %s"
+msgstr "No s'ha pogut eliminar la branca %s"
 
-#: builtin/remote.c:836
+#: builtin/remote.c:833
 msgid ""
 "Note: A branch outside the refs/remotes/ hierarchy was not removed;\n"
 "to delete it, use:"
 msgid_plural ""
 "Note: Some branches outside the refs/remotes/ hierarchy were not removed;\n"
 "to delete them, use:"
 msgstr[0] ""
-"Nota: Una rama fora de la jerarquia refs/remotes/ no s'ha tret;\n"
+"Nota: Una branca fora de la jerarquia refs/remotes/ no s'ha eliminat;\n"
 "per a suprimir-la, useu:"
 msgstr[1] ""
-"Nota: Unes rames fora de la jerarquia refs/remotes/ no s'han tret;\n"
+"Nota: Algunes branques fora de la jerarquia refs/remotes/ no s'han "
+"eliminat;\n"
 "per a suprimir-les, useu:"
 
-#: builtin/remote.c:951
+#: builtin/remote.c:948
 #, c-format
 msgid " new (next fetch will store in remotes/%s)"
-msgstr " nou (el pròxim obteniment emmagatzemarà en remotes/%s)"
+msgstr " nou (el pròxim obteniment emmagatzemarà a remotes/%s)"
 
-#: builtin/remote.c:954
+#: builtin/remote.c:951
 msgid " tracked"
 msgstr " seguit"
 
-#: builtin/remote.c:956
+#: builtin/remote.c:953
 msgid " stale (use 'git remote prune' to remove)"
-msgstr " ranci (useu 'git remote prune' per a treure)"
+msgstr " ranci (useu 'git remote prune' per a eliminar)"
 
-#: builtin/remote.c:958
+#: builtin/remote.c:955
 msgid " ???"
 msgstr " ???"
 
-#: builtin/remote.c:999
+#: builtin/remote.c:996
 #, c-format
 msgid "invalid branch.%s.merge; cannot rebase onto > 1 branch"
-msgstr "branch.%s.merge invàlid; no es pot rebasar en > 1 rama"
+msgstr "branch.%s.merge no vàlid; no es pot rebasar sobre > 1 branca"
 
-#: builtin/remote.c:1006
+#: builtin/remote.c:1003
 #, c-format
 msgid "rebases onto remote %s"
-msgstr "es rebasa en el remot %s"
+msgstr "es rebasa sobre el remot %s"
 
-#: builtin/remote.c:1009
+#: builtin/remote.c:1006
 #, c-format
 msgid " merges with remote %s"
 msgstr "es fusiona amb el remot %s"
 
-#: builtin/remote.c:1010
+#: builtin/remote.c:1007
 msgid "    and with remote"
 msgstr "    i amb el remot"
 
-#: builtin/remote.c:1012
+#: builtin/remote.c:1009
 #, c-format
 msgid "merges with remote %s"
 msgstr "es fusiona amb el remot %s"
 
-#: builtin/remote.c:1013
+#: builtin/remote.c:1010
 msgid "   and with remote"
 msgstr "   i amb el remot"
 
-#: builtin/remote.c:1059
+#: builtin/remote.c:1056
 msgid "create"
 msgstr "crea"
 
-#: builtin/remote.c:1062
+#: builtin/remote.c:1059
 msgid "delete"
 msgstr "suprimeix"
 
-#: builtin/remote.c:1066
+#: builtin/remote.c:1063
 msgid "up to date"
 msgstr "al dia"
 
-#: builtin/remote.c:1069
+#: builtin/remote.c:1066
 msgid "fast-forwardable"
 msgstr "avanç ràpid possible"
 
-#: builtin/remote.c:1072
+#: builtin/remote.c:1069
 msgid "local out of date"
 msgstr "local no actualitzat"
 
-#: builtin/remote.c:1079
+#: builtin/remote.c:1076
 #, c-format
 msgid "    %-*s forces to %-*s (%s)"
 msgstr "    %-*s força a %-*s (%s)"
 
-#: builtin/remote.c:1082
+#: builtin/remote.c:1079
 #, c-format
 msgid "    %-*s pushes to %-*s (%s)"
 msgstr "    %-*s puja a %-*s (%s)"
 
-#: builtin/remote.c:1086
+#: builtin/remote.c:1083
 #, c-format
 msgid "    %-*s forces to %s"
 msgstr "    %-*s força a %s"
 
-#: builtin/remote.c:1089
+#: builtin/remote.c:1086
 #, c-format
 msgid "    %-*s pushes to %s"
 msgstr "    %-*s puja a %s"
 
-#: builtin/remote.c:1157
+#: builtin/remote.c:1154
 msgid "do not query remotes"
 msgstr "no consultis els remots"
 
-#: builtin/remote.c:1184
+#: builtin/remote.c:1181
 #, c-format
 msgid "* remote %s"
 msgstr "* remot %s"
 
-#: builtin/remote.c:1185
+#: builtin/remote.c:1182
 #, c-format
 msgid "  Fetch URL: %s"
 msgstr "  URL d'obteniment: %s"
 
-#: builtin/remote.c:1186 builtin/remote.c:1333
+#: builtin/remote.c:1183 builtin/remote.c:1334
 msgid "(no URL)"
 msgstr "(sense URL)"
 
-#: builtin/remote.c:1195 builtin/remote.c:1197
+#: builtin/remote.c:1192 builtin/remote.c:1194
 #, c-format
 msgid "  Push  URL: %s"
 msgstr "  URL de pujada: %s"
 
-#: builtin/remote.c:1199 builtin/remote.c:1201 builtin/remote.c:1203
+#: builtin/remote.c:1196 builtin/remote.c:1198 builtin/remote.c:1200
 #, c-format
 msgid "  HEAD branch: %s"
-msgstr "  Rama de HEAD: %s"
+msgstr "  Branca de HEAD: %s"
 
-#: builtin/remote.c:1205
+#: builtin/remote.c:1202
 #, c-format
 msgid ""
 "  HEAD branch (remote HEAD is ambiguous, may be one of the following):\n"
-msgstr "  Rama de HEAD (el HEAD remot és ambigu, pot ser un dels següents):\n"
+msgstr ""
+"  Branca de HEAD (el HEAD remot és ambigu, pot ser un dels següents):\n"
 
-#: builtin/remote.c:1217
+#: builtin/remote.c:1214
 #, c-format
 msgid "  Remote branch:%s"
 msgid_plural "  Remote branches:%s"
-msgstr[0] "  Rama remota:%s"
-msgstr[1] "  Rames remotes:%s"
+msgstr[0] "  Branca remota:%s"
+msgstr[1] "  Branques remotes:%s"
 
-#: builtin/remote.c:1220 builtin/remote.c:1247
+#: builtin/remote.c:1217 builtin/remote.c:1244
 msgid " (status not queried)"
 msgstr " (estat no consultat)"
 
-#: builtin/remote.c:1229
+#: builtin/remote.c:1226
 msgid "  Local branch configured for 'git pull':"
 msgid_plural "  Local branches configured for 'git pull':"
-msgstr[0] "  Rama local configurada per a 'git pull':"
-msgstr[1] "  Rames locals configurades per a 'git pull':"
+msgstr[0] "  Branca local configurada per a 'git pull':"
+msgstr[1] "  Branques locals configurades per a 'git pull':"
 
-#: builtin/remote.c:1237
+#: builtin/remote.c:1234
 msgid "  Local refs will be mirrored by 'git push'"
 msgstr "  'git push' reflectirà les referències locals"
 
-#: builtin/remote.c:1244
+#: builtin/remote.c:1241
 #, c-format
 msgid "  Local ref configured for 'git push'%s:"
 msgid_plural "  Local refs configured for 'git push'%s:"
 msgstr[0] "  Referència local configurada per a 'git push'%s:"
 msgstr[1] "  Referències locals configurades per a 'git push'%s:"
 
-#: builtin/remote.c:1265
+#: builtin/remote.c:1262
 msgid "set refs/remotes/<name>/HEAD according to remote"
 msgstr "estableix refs/remotes/<name>/HEAD segons el remot"
 
-#: builtin/remote.c:1267
+#: builtin/remote.c:1264
 msgid "delete refs/remotes/<name>/HEAD"
 msgstr "suprimeix refs/remotes/<name>/HEAD"
 
-#: builtin/remote.c:1282
+#: builtin/remote.c:1279
 msgid "Cannot determine remote HEAD"
 msgstr "No es pot determinar el HEAD remot"
 
-#: builtin/remote.c:1284
+#: builtin/remote.c:1281
 msgid "Multiple remote HEAD branches. Please choose one explicitly with:"
 msgstr ""
-"Múltiples rames de HEAD remotes. Si us plau, trieu una explícitament amb:"
+"Múltiples branques de HEAD remotes. Si us plau, trieu-ne una explícitament "
+"amb:"
 
-#: builtin/remote.c:1294
+#: builtin/remote.c:1291
 #, c-format
 msgid "Could not delete %s"
 msgstr "No s'ha pogut suprimir %s"
 
-#: builtin/remote.c:1302
+#: builtin/remote.c:1299
 #, c-format
 msgid "Not a valid ref: %s"
 msgstr "No és una referència vàlida: %s"
 
-#: builtin/remote.c:1304
+#: builtin/remote.c:1301
 #, c-format
 msgid "Could not setup %s"
 msgstr "No s'ha pogut configurar %s"
 
-#: builtin/remote.c:1322
+#: builtin/remote.c:1319
 #, c-format
 msgid " %s will become dangling!"
-msgstr " %s es tornarà en penjant!"
+msgstr " %s es tornarà penjant!"
 
-#: builtin/remote.c:1323
+#: builtin/remote.c:1320
 #, c-format
 msgid " %s has become dangling!"
-msgstr " %s s'ha tornat en penjant!"
+msgstr " %s s'ha tornat penjant!"
 
-#: builtin/remote.c:1329
+#: builtin/remote.c:1330
 #, c-format
 msgid "Pruning %s"
 msgstr "Podant %s"
 
-#: builtin/remote.c:1330
+#: builtin/remote.c:1331
 #, c-format
 msgid "URL: %s"
 msgstr "URL: %s"
 
-#: builtin/remote.c:1357
+#: builtin/remote.c:1354
 #, c-format
 msgid " * [would prune] %s"
 msgstr " * [podaria] %s"
 
-#: builtin/remote.c:1360
+#: builtin/remote.c:1357
 #, c-format
 msgid " * [pruned] %s"
 msgstr " * [podat] %s"
 
-#: builtin/remote.c:1405
+#: builtin/remote.c:1402
 msgid "prune remotes after fetching"
 msgstr "poda els remots després d'obtenir-los"
 
-#: builtin/remote.c:1471 builtin/remote.c:1545
+#: builtin/remote.c:1468 builtin/remote.c:1542
 #, c-format
 msgid "No such remote '%s'"
 msgstr "No hi ha tal remot '%s'"
 
-#: builtin/remote.c:1491
+#: builtin/remote.c:1488
 msgid "add branch"
-msgstr "afegeix rama"
+msgstr "afegeix branca"
 
-#: builtin/remote.c:1498
+#: builtin/remote.c:1495
 msgid "no remote specified"
 msgstr "cap remot especificat"
 
-#: builtin/remote.c:1520
+#: builtin/remote.c:1517
 msgid "manipulate push URLs"
 msgstr "manipula els URL de pujada"
 
-#: builtin/remote.c:1522
+#: builtin/remote.c:1519
 msgid "add URL"
 msgstr "afegeix URL"
 
-#: builtin/remote.c:1524
+#: builtin/remote.c:1521
 msgid "delete URLs"
 msgstr "suprimeix URLs"
 
-#: builtin/remote.c:1531
+#: builtin/remote.c:1528
 msgid "--add --delete doesn't make sense"
 msgstr "--add --delete no té sentit"
 
-#: builtin/remote.c:1571
+#: builtin/remote.c:1568
 #, c-format
 msgid "Invalid old URL pattern: %s"
-msgstr "Patró d'URL antic invàlid: %s"
+msgstr "Patró d'URL antic no vàlid: %s"
 
-#: builtin/remote.c:1579
+#: builtin/remote.c:1576
 #, c-format
 msgid "No such URL found: %s"
 msgstr "No s'ha trobat tal URL: %s"
 
-#: builtin/remote.c:1581
+#: builtin/remote.c:1578
 msgid "Will not delete all non-push URLs"
-msgstr "Suprimirà tots els URL no de pujada"
+msgstr "No se suprimiran tots els URL no de pujada"
 
-#: builtin/remote.c:1595
+#: builtin/remote.c:1592
 msgid "be verbose; must be placed before a subcommand"
-msgstr "siguis verbós; s'ha de col·locar abans d'un subordre"
+msgstr "sigues detallat; s'ha de col·locar abans d'una subordre"
 
 #: builtin/repack.c:17
 msgid "git repack [options]"
 msgstr "git repack [opcions]"
 
-#: builtin/repack.c:160
+#: builtin/repack.c:159
 msgid "pack everything in a single pack"
-msgstr "empaqueta tot en un paquet solter"
+msgstr "empaqueta-ho tot en un únic paquet"
 
-#: builtin/repack.c:162
+#: builtin/repack.c:161
 msgid "same as -a, and turn unreachable objects loose"
 msgstr "el mateix que -a, i solta els objectes inabastables"
 
-#: builtin/repack.c:165
+#: builtin/repack.c:164
 msgid "remove redundant packs, and run git-prune-packed"
 msgstr "tragueu els paquets redundants, i executeu git-prune-packed"
 
-#: builtin/repack.c:167
+#: builtin/repack.c:166
 msgid "pass --no-reuse-delta to git-pack-objects"
-msgstr "passa --no-reuse-delta a git-pack-objects"
+msgstr "passa l'argument --no-reuse-delta a git-pack-objects"
 
-#: builtin/repack.c:169
+#: builtin/repack.c:168
 msgid "pass --no-reuse-object to git-pack-objects"
-msgstr "passa --no-reuse-object a git-pack-objects"
+msgstr "passa l'argument --no-reuse-object a git-pack-objects"
 
-#: builtin/repack.c:171
+#: builtin/repack.c:170
 msgid "do not run git-update-server-info"
 msgstr "no executis git-update-server-info"
 
-#: builtin/repack.c:174
+#: builtin/repack.c:173
 msgid "pass --local to git-pack-objects"
 msgstr "passa --local a git-pack-objects"
 
-#: builtin/repack.c:176
+#: builtin/repack.c:175
 msgid "write bitmap index"
 msgstr "escriu índex de mapa de bits"
 
-#: builtin/repack.c:177
+#: builtin/repack.c:176
 msgid "approxidate"
 msgstr "aproximat"
 
-#: builtin/repack.c:178
+#: builtin/repack.c:177
 msgid "with -A, do not loosen objects older than this"
 msgstr "amb -A, no soltis els objectes més vells que aquest"
 
-#: builtin/repack.c:180
+#: builtin/repack.c:179
 msgid "size of the window used for delta compression"
-msgstr "mida de la ventana que s'usa per a compressió de deltes"
+msgstr "mida de la finestra que s'usa per a compressió de deltes"
 
-#: builtin/repack.c:181 builtin/repack.c:185
+#: builtin/repack.c:180 builtin/repack.c:184
 msgid "bytes"
 msgstr "octets"
 
-#: builtin/repack.c:182
+#: builtin/repack.c:181
 msgid "same as the above, but limit memory size instead of entries count"
 msgstr ""
 "el mateix que l'anterior, però limita la mida de memòria en lloc del "
 "recompte d'entrades"
 
-#: builtin/repack.c:184
+#: builtin/repack.c:183
 msgid "limits the maximum delta depth"
 msgstr "limita la profunditat màxima de les deltes"
 
-#: builtin/repack.c:186
+#: builtin/repack.c:185
 msgid "maximum size of each packfile"
 msgstr "mida màxima de cada fitxer de paquet"
 
-#: builtin/repack.c:188
+#: builtin/repack.c:187
 msgid "repack objects in packs marked with .keep"
 msgstr "reempaqueta els objectes en paquets marcats amb .keep"
 
-#: builtin/repack.c:374
+#: builtin/repack.c:371
 #, c-format
 msgid "removing '%s' failed"
-msgstr "la treta de '%s' ha fallat"
+msgstr "la supressió de '%s' ha fallat"
 
 #: builtin/replace.c:19
 msgid "git replace [-f] <object> <replacement>"
 msgstr "git replace [-f] <objecte> <reemplaçament>"
 
 #: builtin/replace.c:20
 msgid "git replace [-f] --edit <object>"
 msgstr "git replace [-f] --edit <objecte>"
 
 #: builtin/replace.c:21
 msgid "git replace [-f] --graft <commit> [<parent>...]"
-msgstr "git replace [-f] --graft <comissió> [<pare>...]"
+msgstr "git replace [-f] --graft <comissió> [<mare>...]"
 
 #: builtin/replace.c:22
 msgid "git replace -d <object>..."
 msgstr "git replace -d <objecte>..."
 
 #: builtin/replace.c:23
@@ -9046,13 +9076,13 @@
 msgid "bad mergetag in commit '%s'"
 msgstr "etiqueta de fusió dolenta en la comissió '%s'"
 
 #: builtin/replace.c:357
 #, c-format
 msgid "malformed mergetag in commit '%s'"
-msgstr "etiqueta de fusió malformada en la comissió '%s'"
+msgstr "etiqueta de fusió mal formada en la comissió '%s'"
 
 #: builtin/replace.c:368
 #, c-format
 msgid ""
 "original commit '%s' contains mergetag '%s' that is discarded; use --edit "
 "instead of --graft"
@@ -9064,13 +9094,13 @@
 #, c-format
 msgid "the original commit '%s' has a gpg signature."
 msgstr "la comissió original '%s' té una firma gpg."
 
 #: builtin/replace.c:402
 msgid "the signature will be removed in the replacement commit!"
-msgstr "la firma es traurà en la comissió de reemplaçament!"
+msgstr "la firma s'eliminarà en la comissió de reemplaçament!"
 
 #: builtin/replace.c:408
 #, c-format
 msgid "could not write replacement commit for: '%s'"
 msgstr "no s'ha pogut escriure la comissió de reemplaçament per a: '%s'"
 
@@ -9085,13 +9115,13 @@
 #: builtin/replace.c:434
 msgid "edit existing object"
 msgstr "edita un objecte existent"
 
 #: builtin/replace.c:435
 msgid "change a commit's parents"
-msgstr "canvia els pares d'una comissió"
+msgstr "canvia les mares d'una comissió"
 
 #: builtin/replace.c:436
 msgid "replace the ref if it exists"
 msgstr "reemplaça la referència si existeix"
 
 #: builtin/replace.c:437
@@ -9101,31 +9131,31 @@
 #: builtin/replace.c:438
 msgid "use this format"
 msgstr "usa aquest format"
 
 #: builtin/rerere.c:12
 msgid "git rerere [clear | forget path... | status | remaining | diff | gc]"
-msgstr "git rerere [clear | forget path... | status | remaining | diff | gc]"
+msgstr "git rerere [clear | forget camí... | status | remaining | diff | gc]"
 
 #: builtin/rerere.c:57
 msgid "register clean resolutions in index"
-msgstr "registre les resolucions netes en l'índex"
+msgstr "registra les resolucions netes en l'índex"
 
 #: builtin/reset.c:26
 msgid ""
 "git reset [--mixed | --soft | --hard | --merge | --keep] [-q] [<commit>]"
 msgstr ""
 "git reset [--mixed | --soft | --hard | --merge | --keep] [-q] [<comissió>]"
 
 #: builtin/reset.c:27
 msgid "git reset [-q] <tree-ish> [--] <paths>..."
-msgstr "git reset [-q] <arbre> [--] <rutes>..."
+msgstr "git reset [-q] <arbre> [--] <camins>..."
 
 #: builtin/reset.c:28
 msgid "git reset --patch [<tree-ish>] [--] [<paths>...]"
-msgstr "git reset --patch [<arbre>] [--] [<rutes>...]"
+msgstr "git reset --patch [<arbre>] [--] [<camins>...]"
 
 #: builtin/reset.c:34
 msgid "mixed"
 msgstr "mixt"
 
 #: builtin/reset.c:34
@@ -9157,42 +9187,42 @@
 msgid "Failed to find tree of %s."
 msgstr "S'ha fallat en trobar l'arbre de %s."
 
 #: builtin/reset.c:100
 #, c-format
 msgid "HEAD is now at %s"
-msgstr "HEAD ara està a %s"
+msgstr "HEAD ara és a %s"
 
 #: builtin/reset.c:183
 #, c-format
 msgid "Cannot do a %s reset in the middle of a merge."
-msgstr "No es pot fer un restabliment de %s en el medi d'una fusió."
+msgstr "No es pot fer un restabliment de %s enmig d'una fusió."
 
 #: builtin/reset.c:276
 msgid "be quiet, only report errors"
 msgstr "calla, només informa d'errors"
 
 #: builtin/reset.c:278
 msgid "reset HEAD and index"
 msgstr "restableix HEAD i l'índex"
 
 #: builtin/reset.c:279
 msgid "reset only HEAD"
-msgstr "restablex només HEAD"
+msgstr "restableix només HEAD"
 
 #: builtin/reset.c:281 builtin/reset.c:283
 msgid "reset HEAD, index and working tree"
 msgstr "restableix HEAD, l'índex i l'arbre de treball"
 
 #: builtin/reset.c:285
 msgid "reset HEAD but keep local changes"
-msgstr "restableix HEAD però reté els canvis locals"
+msgstr "restableix HEAD però retén els canvis locals"
 
 #: builtin/reset.c:288
 msgid "record only the fact that removed paths will be added later"
-msgstr "registra només el fet de que les rutes tretes s'afegiran després"
+msgstr "registra només el fet de que els camins eliminats s'afegiran després"
 
 #: builtin/reset.c:305
 #, c-format
 msgid "Failed to resolve '%s' as a valid revision."
 msgstr "S'ha fallat en resoldre '%s' com a revisió vàlida."
 
@@ -9210,18 +9240,19 @@
 msgid "--patch is incompatible with --{hard,mixed,soft}"
 msgstr "--patch és incompatible amb --{hard,mixed,soft}"
 
 #: builtin/reset.c:331
 msgid "--mixed with paths is deprecated; use 'git reset -- <paths>' instead."
 msgstr ""
-"--mixed amb rutes està desaprovat; useu 'git reset -- <rutes>' en lloc."
+"--mixed amb camins està desaprovat; useu 'git reset -- <camins>' en lloc "
+"d'això."
 
 #: builtin/reset.c:333
 #, c-format
 msgid "Cannot do %s reset with paths."
-msgstr "No es pot fer reinici de %s amb rutes."
+msgstr "No es pot fer reinici de %s amb camins."
 
 #: builtin/reset.c:343
 #, c-format
 msgid "%s reset is not allowed in a bare repository"
 msgstr "el reinici de %s no es permet en un dipòsit nu"
 
@@ -9245,13 +9276,13 @@
 #: builtin/rev-parse.c:361
 msgid "git rev-parse --parseopt [options] -- [<args>...]"
 msgstr "git rev-parse --parseopt [opcions] -- [<paràmetres>...]"
 
 #: builtin/rev-parse.c:366
 msgid "keep the `--` passed as an arg"
-msgstr "reté el `--` passat com a paràmetre"
+msgstr "retén el `--` passat com a paràmetre"
 
 #: builtin/rev-parse.c:368
 msgid "stop parsing after the first non-option argument"
 msgstr "deixa d'analitzar després del primer paràmetre no d'opció"
 
 #: builtin/rev-parse.c:371
@@ -9293,13 +9324,13 @@
 #, c-format
 msgid "%s: %s cannot be used with %s"
 msgstr "%s: %s no es pot usar amb %s"
 
 #: builtin/revert.c:80
 msgid "end revert or cherry-pick sequence"
-msgstr "termina la seqüència de reversió o el recull de cireres"
+msgstr "acaba la seqüència de reversió o el recull de cireres"
 
 #: builtin/revert.c:81
 msgid "resume revert or cherry-pick sequence"
 msgstr "reprèn la seqüència de reversió o el recull de cireres"
 
 #: builtin/revert.c:82
@@ -9313,13 +9344,13 @@
 #: builtin/revert.c:84
 msgid "edit the commit message"
 msgstr "edita el missatge de comissió"
 
 #: builtin/revert.c:87
 msgid "parent number"
-msgstr "número de pare"
+msgstr "número de mare"
 
 #: builtin/revert.c:89
 msgid "merge strategy"
 msgstr "estratègia de fusió"
 
 #: builtin/revert.c:90
@@ -9383,13 +9414,13 @@
 #: builtin/rm.c:71
 msgid ""
 "\n"
 "(use 'rm -rf' if you really want to remove it including all of its history)"
 msgstr ""
 "\n"
-"(useu 'rm -rf' si realment voleu treure'l, inclòs tota la seva història)"
+"(useu 'rm -rf' si realment voleu eliminar-lo, inclòs tota la seva història)"
 
 #: builtin/rm.c:231
 msgid ""
 "the following file has staged content different from both the\n"
 "file and the HEAD:"
 msgid_plural ""
@@ -9405,13 +9436,13 @@
 #: builtin/rm.c:236
 msgid ""
 "\n"
 "(use -f to force removal)"
 msgstr ""
 "\n"
-"(useu -f per a forçar la treta)"
+"(useu -f per a forçar la supressió)"
 
 #: builtin/rm.c:240
 msgid "the following file has changes staged in the index:"
 msgid_plural "the following files have changes staged in the index:"
 msgstr[0] "el fitxer següent té canvis allistats en l'índex:"
 msgstr[1] "els fitxers següents tenen canvis allistats en l'índex:"
@@ -9419,35 +9450,35 @@
 #: builtin/rm.c:244 builtin/rm.c:255
 msgid ""
 "\n"
 "(use --cached to keep the file, or -f to force removal)"
 msgstr ""
 "\n"
-"(useu --cached per a desar el fitxer, o -f per a forçar la treta)"
+"(useu --cached per a desar el fitxer, o -f per a forçar la supressió)"
 
 #: builtin/rm.c:252
 msgid "the following file has local modifications:"
 msgid_plural "the following files have local modifications:"
 msgstr[0] "el fitxer següent té modificacions locals:"
 msgstr[1] "els fitxers següents tenen modificacions locals:"
 
 #: builtin/rm.c:270
 msgid "do not list removed files"
-msgstr "no llistis els fitxers trets"
+msgstr "no llistis els fitxers eliminats"
 
 #: builtin/rm.c:271
 msgid "only remove from the index"
-msgstr "només treu de l'índex"
+msgstr "només elimina de l'índex"
 
 #: builtin/rm.c:272
 msgid "override the up-to-date check"
-msgstr "passa per dalt la comprovació d'actualitat"
+msgstr "passa per alt la comprovació d'actualitat"
 
 #: builtin/rm.c:273
 msgid "allow recursive removal"
-msgstr "permet la treta recursiva"
+msgstr "permet la supressió recursiva"
 
 #: builtin/rm.c:275
 msgid "exit with a zero status even if nothing matched"
 msgstr "surt amb estat zero encara que res hagi coincidit"
 
 #: builtin/rm.c:318
@@ -9456,22 +9487,22 @@
 "Si us plau, allisteu els vostres canvis a .gitmodules o emmagatzemeu-los per "
 "a procedir"
 
 #: builtin/rm.c:336
 #, c-format
 msgid "not removing '%s' recursively without -r"
-msgstr "no trent '%s' recursivament sense -r"
+msgstr "no eliminant '%s' recursivament sense -r"
 
 #: builtin/rm.c:375
 #, c-format
 msgid "git rm: unable to remove %s"
-msgstr "git rm: incapaç de treure %s"
+msgstr "git rm: no s'ha pogut eliminar %s"
 
 #: builtin/shortlog.c:13
 msgid "git shortlog [<options>] [<revision range>] [[--] [<path>...]]"
-msgstr "git shortlog [<opcions>] [<rang de revisions>] [[--] [<ruta>...]]"
+msgstr "git shortlog [<opcions>] [<rang de revisions>] [[--] [<camí>...]]"
 
 #: builtin/shortlog.c:131
 #, c-format
 msgid "Missing author: %s"
 msgstr "Manca l'autor: %s"
 
@@ -9495,87 +9526,87 @@
 #: builtin/shortlog.c:236
 msgid "Linewrap output"
 msgstr "Ajusta les línies de la sortida"
 
 #: builtin/show-branch.c:9
 msgid ""
-"git show-branch [-a|--all] [-r|--remotes] [--topo-order | --date-order] [--"
-"current] [--color[=<when>] | --no-color] [--sparse] [--more=<n> | --list | --"
-"independent | --merge-base] [--no-name | --sha1-name] [--topics] [(<rev> | "
-"<glob>)...]"
-msgstr ""
-"git show-branch [-a|--all] [-r|--remotes] [--topo-order | --date-order] [--"
-"current] [--color[=<quan>] | --no-color] [--sparse] [--more=<n> | --list | --"
-"independent | --merge-base] [--no-name | --sha1-name] [--topics] [(<revisió> "
-"| <glob>)...]"
+"git show-branch [-a|--all] [-r|--remotes] [--topo-order | --date-order]\n"
+"\t\t       [--current] [--color[=<when>] | --no-color] [--sparse]\n"
+"\t\t       [--more=<n> | --list | --independent | --merge-base]\n"
+"\t       [--no-name | --sha1-name] [--topics] [(<rev> | <glob>)...]"
+msgstr ""
+"git show-branch [-a|--all] [-r|--remotes] [--topo-order | --date-order]\n"
+"\t\t       [--current] [--color[=<quan>] | --no-color] [--sparse]\n"
+"\t\t       [--more=<n> | --list | --independent | --merge-base]\n"
+"\t\t       [--no-name | --sha1-name] [--topics] [(<revisió> | <glob>)...]"
 
-#: builtin/show-branch.c:10
+#: builtin/show-branch.c:13
 msgid "git show-branch (-g|--reflog)[=<n>[,<base>]] [--list] [<ref>]"
 msgstr "git show-branch (-g|--reflog)[=<n>[,<base>]] [--list] [<referència>]"
 
-#: builtin/show-branch.c:649
+#: builtin/show-branch.c:652
 msgid "show remote-tracking and local branches"
-msgstr "mostra les rames amb seguiment remot i les locals"
+msgstr "mostra les branques amb seguiment remot i les locals"
 
-#: builtin/show-branch.c:651
+#: builtin/show-branch.c:654
 msgid "show remote-tracking branches"
-msgstr "mostra les rames amb seguiment remot"
+msgstr "mostra les branques amb seguiment remot"
 
-#: builtin/show-branch.c:653
+#: builtin/show-branch.c:656
 msgid "color '*!+-' corresponding to the branch"
-msgstr "colora '*!+-' corresponent a la rama"
+msgstr "colora '*!+-' corresponent a la branca"
 
-#: builtin/show-branch.c:655
+#: builtin/show-branch.c:658
 msgid "show <n> more commits after the common ancestor"
 msgstr "mostra <n> comissions després de l'avantpassat comú"
 
-#: builtin/show-branch.c:657
+#: builtin/show-branch.c:660
 msgid "synonym to more=-1"
 msgstr "sinònim de more=-1"
 
-#: builtin/show-branch.c:658
+#: builtin/show-branch.c:661
 msgid "suppress naming strings"
 msgstr "omet l'anomenament de cadenes"
 
-#: builtin/show-branch.c:660
+#: builtin/show-branch.c:663
 msgid "include the current branch"
-msgstr "inclou la rama actual"
+msgstr "inclou la branca actual"
 
-#: builtin/show-branch.c:662
+#: builtin/show-branch.c:665
 msgid "name commits with their object names"
 msgstr "anomena les comissions amb els seus noms d'objecte"
 
-#: builtin/show-branch.c:664
+#: builtin/show-branch.c:667
 msgid "show possible merge bases"
 msgstr "mostra les bases de fusió possibles"
 
-#: builtin/show-branch.c:666
+#: builtin/show-branch.c:669
 msgid "show refs unreachable from any other ref"
 msgstr "mostra les referències inabastables de qualsevulla altra referència"
 
-#: builtin/show-branch.c:668
+#: builtin/show-branch.c:671
 msgid "show commits in topological order"
 msgstr "mostra les comissions en ordre topològic"
 
-#: builtin/show-branch.c:671
+#: builtin/show-branch.c:674
 msgid "show only commits not on the first branch"
-msgstr "mostra només les comissions que no siguin en la primera rama"
+msgstr "mostra només les comissions que no siguin en la primera branca"
 
-#: builtin/show-branch.c:673
+#: builtin/show-branch.c:676
 msgid "show merges reachable from only one tip"
 msgstr "mostra les fusions abastables de només una punta"
 
-#: builtin/show-branch.c:675
+#: builtin/show-branch.c:678
 msgid "topologically sort, maintaining date order where possible"
-msgstr "ordena topològicament, mantenint l'ordre de dates on possible"
+msgstr "ordena topològicament, mantenint l'ordre de dates on sigui possible"
 
-#: builtin/show-branch.c:678
+#: builtin/show-branch.c:681
 msgid "<n>[,<base>]"
 msgstr "<n>[,<base>]"
 
-#: builtin/show-branch.c:679
+#: builtin/show-branch.c:682
 msgid "show <n> most recent ref-log entries starting at base"
 msgstr "mostra les <n> entrades més recents començant a la base"
 
 #: builtin/show-ref.c:10
 msgid ""
 "git show-ref [-q|--quiet] [--verify] [--head] [-d|--dereference] [-s|--"
@@ -9596,18 +9627,18 @@
 msgid "only show heads (can be combined with tags)"
 msgstr "mostra només els caps (es pot combinar amb tags)"
 
 #: builtin/show-ref.c:170
 msgid "stricter reference checking, requires exact ref path"
 msgstr ""
-"comprovació de referència més estricta, requereix la ruta de referència "
-"exacta"
+"comprovació de referència més estricta, requereix el camí de referència "
+"exacte"
 
 #: builtin/show-ref.c:173 builtin/show-ref.c:175
 msgid "show the HEAD reference, even if it would be filtered out"
-msgstr "mostra la referència HEAD, encara que es filtraria"
+msgstr "mostra la referència HEAD, encara que es filtrés"
 
 #: builtin/show-ref.c:177
 msgid "dereference tags into object IDs"
 msgstr "dereferencia les etiquetes a IDs d'objecte"
 
 #: builtin/show-ref.c:179
@@ -9617,13 +9648,13 @@
 #: builtin/show-ref.c:183
 msgid "do not print results to stdout (useful with --verify)"
 msgstr "no imprimeixis els resultats a stdout (útil amb --verify)"
 
 #: builtin/show-ref.c:185
 msgid "show refs from stdin that aren't in local repository"
-msgstr "mostra les referència d'stdin que no siguin en el dipòsit local"
+msgstr "mostra les referències d'stdin que no siguin en el dipòsit local"
 
 #: builtin/symbolic-ref.c:7
 msgid "git symbolic-ref [options] name [ref]"
 msgstr "git symbolic-ref [opcions] nom [referència]"
 
 #: builtin/symbolic-ref.c:8
@@ -9639,25 +9670,25 @@
 msgstr "suprimeix la referència simbòlica"
 
 #: builtin/symbolic-ref.c:42
 msgid "shorten ref output"
 msgstr "escurça la sortida de referències"
 
-#: builtin/symbolic-ref.c:43 builtin/update-ref.c:362
+#: builtin/symbolic-ref.c:43 builtin/update-ref.c:358
 msgid "reason"
 msgstr "raó"
 
-#: builtin/symbolic-ref.c:43 builtin/update-ref.c:362
+#: builtin/symbolic-ref.c:43 builtin/update-ref.c:358
 msgid "reason of the update"
 msgstr "raó de l'actualització"
 
 #: builtin/tag.c:22
 msgid ""
 "git tag [-a|-s|-u <key-id>] [-f] [-m <msg>|-F <file>] <tagname> [<head>]"
 msgstr ""
-"git tag [-a|-s|-u <key-id>] [-f] [-m <missatge>|-F <fitxer>] <nom-"
+"git tag [-a|-s|-u <id-de-clau>] [-f] [-m <missatge>|-F <fitxer>] <nom-"
 "d'etiqueta> [<cap>]"
 
 #: builtin/tag.c:23
 msgid "git tag -d <tagname>..."
 msgstr "git tag -d <nom-d'etiqueta>..."
 
@@ -9673,28 +9704,28 @@
 msgid "git tag -v <tagname>..."
 msgstr "git tag -v <nom-d'etiqueta>..."
 
 #: builtin/tag.c:69
 #, c-format
 msgid "malformed object at '%s'"
-msgstr "objecte malformat a '%s'"
+msgstr "objecte mal format a '%s'"
 
 #: builtin/tag.c:301
 #, c-format
 msgid "tag name too long: %.*s..."
 msgstr "nom d'etiqueta massa llarg: %.*s..."
 
 #: builtin/tag.c:306
 #, c-format
 msgid "tag '%s' not found."
-msgstr "etiqueta '%s' no trobada"
+msgstr "etiqueta '%s' no trobada."
 
 #: builtin/tag.c:321
 #, c-format
 msgid "Deleted tag '%s' (was %s)\n"
-msgstr "L'etiqueta '%s' s'ha suprimit (ha estat %s)\n"
+msgstr "L'etiqueta '%s' s'ha suprimit (era %s)\n"
 
 #: builtin/tag.c:333
 #, c-format
 msgid "could not verify the tag '%s'"
 msgstr "no s'ha pogut verificar l'etiqueta '%s'"
 
@@ -9720,32 +9751,32 @@
 "Lines starting with '%c' will be kept; you may remove them yourself if you "
 "want to.\n"
 msgstr ""
 "\n"
 "Escriviu el missatge de l'etiqueta:\n"
 "  %s\n"
-"Les línies que comencin amb '%c' es retindran; podeu treure'ls per vós "
+"Les línies que comencin amb '%c' es mantindran; podeu eliminar-les per vós "
 "mateix si voleu.\n"
 
 #: builtin/tag.c:371
 #, c-format
 msgid "unsupported sort specification '%s'"
-msgstr "especificació d'ordenació '%s' no suportat"
+msgstr "especificació d'ordenació '%s' no admesa"
 
 #: builtin/tag.c:373
 #, c-format
 msgid "unsupported sort specification '%s' in variable '%s'"
-msgstr "especificació d'ordenació '%s' no suportat en el variable '%s'"
+msgstr "especificació d'ordenació '%s' no admesa en la variable '%s'"
 
 #: builtin/tag.c:428
 msgid "unable to sign the tag"
-msgstr "incapaç de firmar l'etiqueta"
+msgstr "no s'ha pogut de firmar l'etiqueta"
 
 #: builtin/tag.c:430
 msgid "unable to write tag file"
-msgstr "incapaç d'escriure el fitxer d'etiqueta"
+msgstr "no s'ha pogut escriure el fitxer d'etiqueta"
 
 #: builtin/tag.c:455
 msgid "bad object type."
 msgstr "tipus d'objecte dolent."
 
 #: builtin/tag.c:468
@@ -9765,13 +9796,13 @@
 msgid "switch 'points-at' requires an object"
 msgstr "l'opció 'points-at' requereix un objecte"
 
 #: builtin/tag.c:561
 #, c-format
 msgid "malformed object name '%s'"
-msgstr "nom d'objecte malformat '%s'"
+msgstr "nom d'objecte mal format '%s'"
 
 #: builtin/tag.c:589
 msgid "list tag names"
 msgstr "llista els noms d'etiqueta"
 
 #: builtin/tag.c:591
@@ -9817,13 +9848,13 @@
 #: builtin/tag.c:610
 msgid "sort tags"
 msgstr "ordena les etiquetes"
 
 #: builtin/tag.c:614
 msgid "Tag listing options"
-msgstr "Opcions de llistament d'etiquetes"
+msgstr "Opcions de llistat d'etiquetes"
 
 #: builtin/tag.c:617 builtin/tag.c:623
 msgid "print only tags that contain the commit"
 msgstr "imprimeix només les etiquetes que continguin la comissió"
 
 #: builtin/tag.c:629
@@ -9849,13 +9880,13 @@
 #: builtin/tag.c:678
 msgid "--points-at option is only allowed with -l."
 msgstr "es permet --points-at option només amb -l."
 
 #: builtin/tag.c:686
 msgid "only one -F or -m option is allowed."
-msgstr "només una opció -F o -m es permet."
+msgstr "només es permet una opció -F o -m."
 
 #: builtin/tag.c:706
 msgid "too many params"
 msgstr "massa paràmetres"
 
 #: builtin/tag.c:712
@@ -9868,13 +9899,13 @@
 msgid "tag '%s' already exists"
 msgstr "l'etiqueta '%s' ja existeix"
 
 #: builtin/tag.c:741
 #, c-format
 msgid "Updated tag '%s' (was %s)\n"
-msgstr "Etiqueta '%s' actualitzada (ha estat %s)\n"
+msgstr "Etiqueta '%s' actualitzada (era %s)\n"
 
 #: builtin/unpack-objects.c:489
 msgid "Unpacking objects"
 msgstr "Desempaquetant objectes"
 
 #: builtin/update-index.c:403
@@ -9897,13 +9928,13 @@
 #: builtin/update-index.c:764
 msgid "let files replace directories and vice-versa"
 msgstr "deixa que els fitxers reemplacin els directoris i viceversa"
 
 #: builtin/update-index.c:766
 msgid "notice files missing from worktree"
-msgstr "nota els fitxers mancants de l'arbre de treball"
+msgstr "tingues en compte els fitxers absents de l'arbre de treball"
 
 #: builtin/update-index.c:768
 msgid "refresh even if index contains unmerged entries"
 msgstr "actualitza encara que l'índex contingui entrades no fusionades"
 
 #: builtin/update-index.c:771
@@ -9913,25 +9944,25 @@
 #: builtin/update-index.c:775
 msgid "like --refresh, but ignore assume-unchanged setting"
 msgstr "com --refresh, però ignora l'ajust assume-unchanged"
 
 #: builtin/update-index.c:779
 msgid "<mode>,<object>,<path>"
-msgstr "<mode>,<objecte>,<ruta>"
+msgstr "<mode>,<objecte>,<camí>"
 
 #: builtin/update-index.c:780
 msgid "add the specified entry to the index"
 msgstr "afegeix l'entrada especificada a l'índex"
 
 #: builtin/update-index.c:784
 msgid "(+/-)x"
 msgstr "(+/-)x"
 
 #: builtin/update-index.c:785
 msgid "override the executable bit of the listed files"
-msgstr "passa per dalt el bit executable dels fitxers llistats"
+msgstr "passa per alt el bit executable dels fitxers llistats"
 
 #: builtin/update-index.c:789
 msgid "mark files as \"not changing\""
 msgstr "marca els fitxers com a \"not changing\""
 
 #: builtin/update-index.c:792
@@ -9952,37 +9983,38 @@
 "només afegeix a l'índex; no afegeixis el contingut a la base de dades "
 "d'objectes"
 
 #: builtin/update-index.c:803
 msgid "remove named paths even if present in worktree"
 msgstr ""
-"treu les rutes anomenades encara que estiguin presents en l'arbre de treball"
+"elimina els camins anomenats encara que estiguin presents en l'arbre de "
+"treball"
 
 #: builtin/update-index.c:805
 msgid "with --stdin: input lines are terminated by null bytes"
-msgstr "amb --stdin: les línies d'entrada es terminen per octets nuls"
+msgstr "amb --stdin: les línies d'entrada acaben amb octets nuls"
 
 #: builtin/update-index.c:807
 msgid "read list of paths to be updated from standard input"
-msgstr "llegeix la llista de rutes a actualitzar des de l'entrada estàndard"
+msgstr "llegeix la llista de camins a actualitzar des de l'entrada estàndard"
 
 #: builtin/update-index.c:811
 msgid "add entries from standard input to the index"
 msgstr "afegeix les entrades de l'entrada estàndard a l'índex"
 
 #: builtin/update-index.c:815
 msgid "repopulate stages #2 and #3 for the listed paths"
-msgstr "reemplena les etapes #2 i #3 per a les rutes llistades"
+msgstr "reemplena les etapes #2 i #3 per als camins llistats"
 
 #: builtin/update-index.c:819
 msgid "only update entries that differ from HEAD"
 msgstr "només actualitza les entrades que difereixin de HEAD"
 
 #: builtin/update-index.c:823
 msgid "ignore files missing from worktree"
-msgstr "ignora els fitxers que manquin a l'arbre de treball"
+msgstr "ignora els fitxers absents de l'arbre de treball"
 
 #: builtin/update-index.c:826
 msgid "report actions to standard output"
 msgstr "informa de les accions en la sortida estàndard"
 
 #: builtin/update-index.c:828
@@ -9992,13 +10024,13 @@
 #: builtin/update-index.c:832
 msgid "write index in this format"
 msgstr "escriu l'índex en aquest format"
 
 #: builtin/update-index.c:834
 msgid "enable or disable split index"
-msgstr "habilita o deshabilita l'índex dividit"
+msgstr "habilita o inhabilita l'índex dividit"
 
 #: builtin/update-ref.c:9
 msgid "git update-ref [options] -d <refname> [<oldval>]"
 msgstr "git update-ref [opcions] -d <nom-de-referència> [<valor-antic>]"
 
 #: builtin/update-ref.c:10
@@ -10007,25 +10039,25 @@
 "git update-ref [opcions]    <nom-de-referència> <valor-nou> [<valor-antic>]"
 
 #: builtin/update-ref.c:11
 msgid "git update-ref [options] --stdin [-z]"
 msgstr "git update-ref [opcions] --stdin [-z]"
 
-#: builtin/update-ref.c:363
+#: builtin/update-ref.c:359
 msgid "delete the reference"
 msgstr "suprimeix la referència"
 
-#: builtin/update-ref.c:365
+#: builtin/update-ref.c:361
 msgid "update <refname> not the one it points to"
-msgstr "actualitza <nom de referència>, no la a que assenyali"
+msgstr "actualitza <nom de referència>, no la que assenyali"
 
-#: builtin/update-ref.c:366
+#: builtin/update-ref.c:362
 msgid "stdin has NUL-terminated arguments"
-msgstr "stdin té paràmetres terminats per NUL"
+msgstr "stdin té paràmetres acabats amb NUL"
 
-#: builtin/update-ref.c:367
+#: builtin/update-ref.c:363
 msgid "read updates from stdin"
 msgstr "llegeix les actualitzacions des d'stdin"
 
 #: builtin/update-server-info.c:6
 msgid "git update-server-info [--force]"
 msgstr "git update-server-info [--force]"
@@ -10045,13 +10077,13 @@
 #: builtin/verify-pack.c:54
 msgid "git verify-pack [-v|--verbose] [-s|--stat-only] <pack>..."
 msgstr "git verify-pack [-v|--verbose] [-s|--stat-only] <paquet>..."
 
 #: builtin/verify-pack.c:64
 msgid "verbose"
-msgstr "verbós"
+msgstr "detallat"
 
 #: builtin/verify-pack.c:66
 msgid "show statistics only"
 msgstr "mostra només estadístiques"
 
 #: builtin/verify-tag.c:17
@@ -10079,38 +10111,38 @@
 msgstr "només útil per a la depuració"
 
 #: credential-cache--daemon.c:267
 msgid "print debugging messages to stderr"
 msgstr "imprimeix els missatges de depuració a stderr"
 
-#: git.c:17
+#: git.c:14
 msgid ""
 "'git help -a' and 'git help -g' list available subcommands and some\n"
 "concept guides. See 'git help <command>' or 'git help <concept>'\n"
 "to read about a specific subcommand or concept."
 msgstr ""
 "'git help -a' i 'git help -g' llisten subordres disponibles i\n"
-"algunes guies de concepte. Veu 'git help <ordre>' o\n"
-"'git help <concepte>' per a llegir sobre un subordre o concepte\n"
+"algunes guies de concepte. Vegeu 'git help <ordre>' o\n"
+"'git help <concepte>' per a llegir sobre una subordre o concepte\n"
 "específic."
 
 #: common-cmds.h:8
 msgid "Add file contents to the index"
 msgstr "Afegeix els continguts dels fitxers a l'índex"
 
 #: common-cmds.h:9
 msgid "Find by binary search the change that introduced a bug"
 msgstr "Troba per cerca binària el canvi que hagi introduït un defecte"
 
 #: common-cmds.h:10
 msgid "List, create, or delete branches"
-msgstr "Llista, crea o suprimeix rames"
+msgstr "Llista, crea o suprimeix branques"
 
 #: common-cmds.h:11
 msgid "Checkout a branch or paths to the working tree"
-msgstr "Agafa una rama o unes rutes a l'arbre de treball"
+msgstr "Agafa una branca o uns camins a l'arbre de treball"
 
 #: common-cmds.h:12
 msgid "Clone a repository into a new directory"
 msgstr "Clona un dipòsit a un directori nou"
 
 #: common-cmds.h:13
@@ -10137,37 +10169,38 @@
 #: common-cmds.h:18
 msgid "Show commit logs"
 msgstr "Mostra els registres de comissió"
 
 #: common-cmds.h:19
 msgid "Join two or more development histories together"
-msgstr "Uneix dos o més històries de desenvolupament"
+msgstr "Uneix dues o més històries de desenvolupament"
 
 #: common-cmds.h:20
 msgid "Move or rename a file, a directory, or a symlink"
 msgstr "Mou o canvia de nom un fitxer, directori o enllaç simbòlic"
 
 #: common-cmds.h:21
 msgid "Fetch from and integrate with another repository or a local branch"
-msgstr "Obté de i integra con un altre dipòsit o una rama local"
+msgstr "Obtén de i integra amb un altre dipòsit o una branca local"
 
 #: common-cmds.h:22
 msgid "Update remote refs along with associated objects"
-msgstr "Actualitza les referències remotes juntes amb els objectes associats"
+msgstr ""
+"Actualitza les referències remotes juntament amb els objectes associats"
 
 #: common-cmds.h:23
 msgid "Forward-port local commits to the updated upstream head"
 msgstr "Avança les comissions locals al cap font actualitzat"
 
 #: common-cmds.h:24
 msgid "Reset current HEAD to the specified state"
 msgstr "Restableix el HEAD actual a l'estat especificat"
 
 #: common-cmds.h:25
 msgid "Remove files from the working tree and from the index"
-msgstr "Treu fitxers de l'arbre de treball i de l'índex"
+msgstr "Elimina fitxers de l'arbre de treball i de l'índex"
 
 #: common-cmds.h:26
 msgid "Show various types of objects"
 msgstr "Mostra diversos tipus d'objectes"
 
 #: common-cmds.h:27
@@ -10186,218 +10219,220 @@
 #: parse-options.h:158
 msgid "no-op (backward compatibility)"
 msgstr "operació nul·la (per a compatibilitat amb versions anteriors)"
 
 #: parse-options.h:232
 msgid "be more verbose"
-msgstr "siguis més verbós"
+msgstr "sigues més detallat"
 
 #: parse-options.h:234
 msgid "be more quiet"
-msgstr "siguis més callat"
+msgstr "sigues més callat"
 
 #: parse-options.h:240
 msgid "use <n> digits to display SHA-1s"
 msgstr "usa <n> xifres per presentar els SHA-1"
 
 #: rerere.h:27
 msgid "update the index with reused conflict resolution if possible"
 msgstr ""
 "actualitza l'índex amb la resolució de conflicte reusada si és possible"
 
-#: git-am.sh:52
+#: git-am.sh:53
 msgid "You need to set your committer info first"
 msgstr "Cal establir la vostra informació de comitent primer"
 
-#: git-am.sh:97
+#: git-am.sh:98
 msgid ""
 "You seem to have moved HEAD since the last 'am' failure.\n"
 "Not rewinding to ORIG_HEAD"
 msgstr ""
-"Sembla que heu mot HEAD després de l'última fallada de 'am'.\n"
+"Sembla que heu mogut HEAD després de l'última fallada de 'am'.\n"
 "No rebobinant a ORIG_HEAD"
 
-#: git-am.sh:107
+#: git-am.sh:108
 #, sh-format
 msgid ""
 "When you have resolved this problem, run \"$cmdline --continue\".\n"
 "If you prefer to skip this patch, run \"$cmdline --skip\" instead.\n"
 "To restore the original branch and stop patching, run \"$cmdline --abort\"."
 msgstr ""
 "Quan hàgiu resolt aquest problema, executeu \"$cmdline --continue\".\n"
-"Si preferiu saltar aquest pedaç, executeu \"$cmdline --skip\" en lloc.\n"
-"Per restaurar la rama original i deixar d'apedaçar, executeu \"$cmdline --"
-"abort\"."
+"Si preferiu ometre aquest pedaç, executeu \"$cmdline --skip\" en lloc "
+"d'això.\n"
+"Per a restaurar la branca original i deixar d'apedaçar, executeu \"$cmdline "
+"--abort\"."
 
-#: git-am.sh:123
+#: git-am.sh:124
 msgid "Cannot fall back to three-way merge."
 msgstr "No es pot retrocedir a una fusió de 3 vies."
 
-#: git-am.sh:139
+#: git-am.sh:140
 msgid "Repository lacks necessary blobs to fall back on 3-way merge."
 msgstr ""
 "Al dipòsit li manquen els blobs necessaris per a retrocedir a una fusió de 3 "
 "vies."
 
-#: git-am.sh:141
+#: git-am.sh:142
 msgid "Using index info to reconstruct a base tree..."
 msgstr "Usant la informació d'índex per a reconstruir un arbre base..."
 
-#: git-am.sh:156
+#: git-am.sh:157
 msgid ""
 "Did you hand edit your patch?\n"
 "It does not apply to blobs recorded in its index."
 msgstr ""
 "Heu editat el vostre pedaç a mà?\n"
 "No s'aplica als blobs recordats en el seu índex."
 
-#: git-am.sh:165
+#: git-am.sh:166
 msgid "Falling back to patching base and 3-way merge..."
 msgstr "Retrocedint a apedaçar la base i fusionar de 3 vies..."
 
-#: git-am.sh:181
+#: git-am.sh:182
 msgid "Failed to merge in the changes."
 msgstr "S'ha fallat en fusionar els canvis."
 
-#: git-am.sh:276
+#: git-am.sh:277
 msgid "Only one StGIT patch series can be applied at once"
 msgstr "només una sèrie de pedaços StGIT es pot aplicar a la vegada"
 
-#: git-am.sh:363
+#: git-am.sh:364
 #, sh-format
 msgid "Patch format $patch_format is not supported."
-msgstr "El format de pedaç $patch_format no és suportat."
+msgstr "El format de pedaç $patch_format no és compatible."
 
-#: git-am.sh:365
+#: git-am.sh:366
 msgid "Patch format detection failed."
 msgstr "La detecció de format de pedaç ha fallat."
 
-#: git-am.sh:392
+#: git-am.sh:398
 msgid ""
 "The -b/--binary option has been a no-op for long time, and\n"
 "it will be removed. Please do not use it anymore."
 msgstr ""
 "Fa molt que l'opció -b/--binary no ha fet res, i\n"
-"es traurà. Si us plau, no l'usis més."
+"s'eliminarà. Si us plau, no l'useu més."
 
-#: git-am.sh:486
+#: git-am.sh:496
 #, sh-format
 msgid "previous rebase directory $dotest still exists but mbox given."
 msgstr ""
 "un directori de rebase anterior $dotest encara existeix però s'ha donat una "
 "bústia."
 
-#: git-am.sh:491
+#: git-am.sh:501
 msgid "Please make up your mind. --skip or --abort?"
 msgstr "Si us plau, preneu una decisió. --skip o --abort?"
 
-#: git-am.sh:527
+#: git-am.sh:537
 #, sh-format
 msgid ""
 "Stray $dotest directory found.\n"
 "Use \"git am --abort\" to remove it."
 msgstr ""
 "Directori $dotest extraviat trobat.\n"
-"Useu \"git am --abort\" per a treure'l."
+"Useu \"git am --abort\" per a eliminar-lo."
 
-#: git-am.sh:535
+#: git-am.sh:545
 msgid "Resolve operation not in progress, we are not resuming."
 msgstr "Operació de resolució no en curs; no reprenem."
 
-#: git-am.sh:601
+#: git-am.sh:612
 #, sh-format
 msgid "Dirty index: cannot apply patches (dirty: $files)"
 msgstr "Índex brut: no es pot aplicar pedaços (bruts: $files)"
 
-#: git-am.sh:705
+#: git-am.sh:722
 #, sh-format
 msgid ""
 "Patch is empty.  Was it split wrong?\n"
 "If you would prefer to skip this patch, instead run \"$cmdline --skip\".\n"
 "To restore the original branch and stop patching run \"$cmdline --abort\"."
 msgstr ""
-"El pedaç és buit. S'ha dividit mal?\n"
-"Si preferiríeu saltar aquest pedaç, executeu en lloc \"$cmdline --skip\".\n"
-"Per a restaurar la rama original i deixar d'empaquetar, executeu \"$cmdline "
-"--abort\"."
+"El pedaç és buit. S'ha dividit malament?\n"
+"Si preferiu ometre aquest pedaç, executeu en lloc d'això \"$cmdline --skip"
+"\".\n"
+"Per a restaurar la branca original i deixar d'empaquetar, executeu "
+"\"$cmdline --abort\"."
 
-#: git-am.sh:732
+#: git-am.sh:749
 msgid "Patch does not have a valid e-mail address."
-msgstr "El pedaç no té adreça de correu electrònic vàlida."
+msgstr "El pedaç no té cap adreça de correu electrònic vàlida."
 
-#: git-am.sh:779
+#: git-am.sh:796
 msgid "cannot be interactive without stdin connected to a terminal."
 msgstr ""
 "no es pot ser interactiu sense que stdin sigui connectat a un terminal."
 
-#: git-am.sh:783
+#: git-am.sh:800
 msgid "Commit Body is:"
 msgstr "El cos de la comissió és:"
 
 #. TRANSLATORS: Make sure to include [y], [n], [e], [v] and [a]
 #. in your translation. The program will only accept English
 #. input at this point.
-#: git-am.sh:790
+#: git-am.sh:807
 msgid "Apply? [y]es/[n]o/[e]dit/[v]iew patch/[a]ccept all "
-msgstr "Aplica? [y]es/[n]o/[e]dita/[v]isualitza pedaç/[a]ccepta tots"
+msgstr "Aplica? [y]es/[n]o/[e]dita/[v]isualitza el pedaç/[a]ccepta'ls tots "
 
-#: git-am.sh:826
+#: git-am.sh:843
 #, sh-format
 msgid "Applying: $FIRSTLINE"
 msgstr "Aplicant: $FIRSTLINE"
 
-#: git-am.sh:847
+#: git-am.sh:864
 msgid ""
 "No changes - did you forget to use 'git add'?\n"
 "If there is nothing left to stage, chances are that something else\n"
 "already introduced the same changes; you might want to skip this patch."
 msgstr ""
 "Cap canvi - heu oblidat usar 'git add'?\n"
 "Si no hi ha res a allistar, probablement alguna altra cosa\n"
-"ja ha introduït els mateixos canvis; potser voleu saltar aquest pedaç."
+"ja ha introduït els mateixos canvis; potser voleu ometre aquest pedaç."
 
-#: git-am.sh:855
+#: git-am.sh:872
 msgid ""
 "You still have unmerged paths in your index\n"
 "did you forget to use 'git add'?"
 msgstr ""
-"Encara teniu rutes sense fusionar en el vostre índex\n"
+"Encara teniu camins sense fusionar en el vostre índex\n"
 "heu oblidat d'usar 'git add'?"
 
-#: git-am.sh:871
+#: git-am.sh:888
 msgid "No changes -- Patch already applied."
 msgstr "Sense canvis -- El pedaç ja s'ha aplicat."
 
-#: git-am.sh:881
+#: git-am.sh:898
 #, sh-format
 msgid "Patch failed at $msgnum $FIRSTLINE"
 msgstr "El pedaç ha fallat a $msgnum $FIRSTLINE"
 
-#: git-am.sh:884
+#: git-am.sh:901
 #, sh-format
 msgid ""
 "The copy of the patch that failed is found in:\n"
 "   $dotest/patch"
 msgstr ""
 "La còpia del pedaç que ha fallat es troba en:\n"
 "   $dotest/patch"
 
-#: git-am.sh:902
+#: git-am.sh:919
 msgid "applying to an empty history"
 msgstr "aplicant a una història buida"
 
 #: git-bisect.sh:48
 msgid "You need to start by \"git bisect start\""
 msgstr "Cal començar per \"git bisect start\""
 
 #. TRANSLATORS: Make sure to include [Y] and [n] in your
 #. translation. The program will only accept English input
 #. at this point.
 #: git-bisect.sh:54
 msgid "Do you want me to do it for you [Y/n]? "
-msgstr "Voleu que es faci per vós [Y/n]? "
+msgstr "Voleu que ho faci per vós [Y/n]? "
 
 #: git-bisect.sh:95
 #, sh-format
 msgid "unrecognised option: '$arg'"
 msgstr "opció no reconeguda: '$arg'"
 
@@ -10412,13 +10447,13 @@
 
 #: git-bisect.sh:130
 #, sh-format
 msgid ""
 "Checking out '$start_head' failed. Try 'git bisect reset <validbranch>'."
 msgstr ""
-"L'agafament de '$start_head' ha fallat. Proveu 'git bisect reset <rama-"
+"L'agafament de '$start_head' ha fallat. Proveu 'git bisect reset <branca-"
 "vàlida>'."
 
 #: git-bisect.sh:140
 msgid "won't bisect on cg-seek'ed tree"
 msgstr "no es bisecarà en un arbre en que s'ha fet cg-seek"
 
@@ -10442,104 +10477,104 @@
 
 #: git-bisect.sh:244
 #, sh-format
 msgid "Bad rev input: $rev"
 msgstr "Introducció de revisió dolenta: $rev"
 
-#: git-bisect.sh:250
+#: git-bisect.sh:253
 msgid "'git bisect bad' can take only one argument."
 msgstr "'git bisect bad' pot acceptar només un paràmetre."
 
-#: git-bisect.sh:273
+#: git-bisect.sh:276
 msgid "Warning: bisecting only with a bad commit."
 msgstr "Avís: bisecant amb només comissió dolenta."
 
 #. TRANSLATORS: Make sure to include [Y] and [n] in your
 #. translation. The program will only accept English input
 #. at this point.
-#: git-bisect.sh:279
+#: git-bisect.sh:282
 msgid "Are you sure [Y/n]? "
-msgstr "Esteu segur [Y/n]? "
+msgstr "N'esteu segur [Y/n]? "
 
-#: git-bisect.sh:289
+#: git-bisect.sh:292
 msgid ""
 "You need to give me at least one good and one bad revision.\n"
 "(You can use \"git bisect bad\" and \"git bisect good\" for that.)"
 msgstr ""
 "Cal donar-me almenys una revisió bona i una dolenta.\n"
 "(Podeu usar \"git bisect bad\" i \"git bisect good\" per això.)"
 
-#: git-bisect.sh:292
+#: git-bisect.sh:295
 msgid ""
 "You need to start by \"git bisect start\".\n"
 "You then need to give me at least one good and one bad revision.\n"
 "(You can use \"git bisect bad\" and \"git bisect good\" for that.)"
 msgstr ""
 "Cal començar amb \"git bisect start\".\n"
 "Després cal donar-me almenys una revisió bona i una dolenta.\n"
 "(Podeu usar \"git bisect bad\" i \"git bisect good\" per això.)"
 
-#: git-bisect.sh:363 git-bisect.sh:490
+#: git-bisect.sh:366 git-bisect.sh:493
 msgid "We are not bisecting."
 msgstr "No estem bisecant."
 
-#: git-bisect.sh:370
+#: git-bisect.sh:373
 #, sh-format
 msgid "'$invalid' is not a valid commit"
 msgstr "'$invalid' no és una comissió vàlida"
 
-#: git-bisect.sh:379
+#: git-bisect.sh:382
 #, sh-format
 msgid ""
 "Could not check out original HEAD '$branch'.\n"
 "Try 'git bisect reset <commit>'."
 msgstr ""
 "No s'ha pogut agafar el HEAD original '$branch'.\n"
 "Proveu 'git bisect reset <comissió>'."
 
-#: git-bisect.sh:406
+#: git-bisect.sh:409
 msgid "No logfile given"
 msgstr "Cap fitxer de registre donat"
 
-#: git-bisect.sh:407
+#: git-bisect.sh:410
 #, sh-format
 msgid "cannot read $file for replaying"
 msgstr "no es pot llegir $file per a reproducció"
 
-#: git-bisect.sh:424
+#: git-bisect.sh:427
 msgid "?? what are you talking about?"
 msgstr "?? de què parleu?"
 
-#: git-bisect.sh:436
+#: git-bisect.sh:439
 #, sh-format
 msgid "running $command"
 msgstr "executant $command"
 
-#: git-bisect.sh:443
+#: git-bisect.sh:446
 #, sh-format
 msgid ""
 "bisect run failed:\n"
 "exit code $res from '$command' is < 0 or >= 128"
 msgstr ""
 "el pas de bisecció ha fallat:\n"
 "el codi de sortida $res de '$command' és < 0 o >= 128"
 
-#: git-bisect.sh:469
+#: git-bisect.sh:472
 msgid "bisect run cannot continue any more"
 msgstr "el pas de bisecció no pot continuar més"
 
-#: git-bisect.sh:475
+#: git-bisect.sh:478
 #, sh-format
 msgid ""
 "bisect run failed:\n"
 "'bisect_state $state' exited with error code $res"
 msgstr ""
 "el pas de bisecció ha fallat:\n"
 "'bisect_state $state' ha surt amb el codi d'error $res"
 
-#: git-bisect.sh:482
+#: git-bisect.sh:485
 msgid "bisect run success"
 msgstr "pas de bisecció reeixit"
 
 #: git-pull.sh:21
 msgid ""
 "Pull is not possible because you have unmerged files.\n"
@@ -10557,48 +10592,48 @@
 
 #: git-pull.sh:31
 msgid ""
 "You have not concluded your merge (MERGE_HEAD exists).\n"
 "Please, commit your changes before you can merge."
 msgstr ""
-"No heu terminat la vostra fusió (MERGE_HEAD existeix).\n"
+"No heu completat la vostra fusió (MERGE_HEAD existeix).\n"
 "Si us plau, cometeu els vostres canvis abans de fusionar."
 
 #: git-pull.sh:245
 msgid "updating an unborn branch with changes added to the index"
-msgstr "actualitzant una rama no nascuda amb canvis afegits a l'índex"
+msgstr "actualitzant una branca no nascuda amb canvis afegits a l'índex"
 
 #: git-pull.sh:269
 #, sh-format
 msgid ""
 "Warning: fetch updated the current branch head.\n"
 "Warning: fast-forwarding your working tree from\n"
 "Warning: commit $orig_head."
 msgstr ""
-"Avís: l'obteniment ha actualitzat el cap de la rama actual.\n"
-"Avís: avançant ràpidament el vostre arbre de\n"
-"Avís: treball des de la comissió $orig_head."
+"Avís: l'obteniment ha actualitzat el cap de la branca actual.\n"
+"Avís: avançant ràpidament el vostre arbre de treball des de\n"
+"Avís: la comissió $orig_head."
 
 #: git-pull.sh:294
 msgid "Cannot merge multiple branches into empty head"
-msgstr "No es pot fusionar múltiples rames a un cap buit"
+msgstr "No es pot fusionar múltiples branques a un cap buit"
 
 #: git-pull.sh:298
 msgid "Cannot rebase onto multiple branches"
-msgstr "No es pot rebasar en múltiples rames"
+msgstr "No es pot rebasar sobre múltiples branques"
 
 #: git-rebase.sh:57
 msgid ""
 "When you have resolved this problem, run \"git rebase --continue\".\n"
 "If you prefer to skip this patch, run \"git rebase --skip\" instead.\n"
 "To check out the original branch and stop rebasing, run \"git rebase --abort"
 "\"."
 msgstr ""
 "Quan hàgiu resolt aquest problema, executeu \"git rebase --continue\".\n"
 "Si preferiu saltar aquest pedaç, executeu \"git rebase --skip\" en lloc.\n"
-"Per a agafar la rama original i deixar de rebasar, executeu \"git rebase --"
+"Per a agafar la branca original i deixar de rebasar, executeu \"git rebase --"
 "abort\"."
 
 #: git-rebase.sh:165
 msgid "Applied autostash."
 msgstr "S'ha aplicat el magatzem automàtic."
 
@@ -10632,30 +10667,30 @@
 #: git-rebase.sh:356
 msgid "No rebase in progress?"
 msgstr "No hi ha rebase en curs?"
 
 #: git-rebase.sh:367
 msgid "The --edit-todo action can only be used during interactive rebase."
-msgstr "L'acció --edit-todo només es pot usar durant una rebase interactiu."
+msgstr "L'acció --edit-todo només es pot usar durant una rebase interactiva."
 
 #: git-rebase.sh:374
 msgid "Cannot read HEAD"
 msgstr "No es pot llegir HEAD"
 
 #: git-rebase.sh:377
 msgid ""
 "You must edit all merge conflicts and then\n"
 "mark them as resolved using git add"
 msgstr ""
 "Heu d'editar tots els conflictes de fusió i després\n"
-"marcar-los com a resolts per usar git add"
+"marcar-los com a resolts fent servir git add"
 
 #: git-rebase.sh:395
 #, sh-format
 msgid "Could not move back to $head_name"
-msgstr "No s'ha pogut retardar a $head_name"
+msgstr "No s'ha pogut tornar a $head_name"
 
 #: git-rebase.sh:414
 #, sh-format
 msgid ""
 "It seems that there is already a $state_dir_base directory, and\n"
 "I wonder if you are in the middle of another rebase.  If that is the\n"
@@ -10664,44 +10699,44 @@
 "If that is not the case, please\n"
 "\t$cmd_clear_stale_rebase\n"
 "and run me again.  I am stopping in case you still have something\n"
 "valuable there."
 msgstr ""
 "Sembla que ja hi ha un directori $state_dir_base, i\n"
-"em pregono si esteu en el medi d'una altra rebase. Si això és el\n"
+"em pregunto si esteu enmig d'una altra rebase. Si aquest és el\n"
 "cas, si us plau, proveu\n"
 "\t$cmd_live_rebase\n"
 "Si no és el cas, si us plau,\n"
 "\t$cmd_clear_stale_rebase\n"
-"i executeu-me de nou. M'aturo en cas de que encara tingueu alguna cosa\n"
-"de valor allà."
+"i executeu-me de nou. M'aturo per si encara hi teniu alguna cosa\n"
+"de valor."
 
 #: git-rebase.sh:465
 #, sh-format
 msgid "invalid upstream $upstream_name"
-msgstr "font invàlida $upstream_name"
+msgstr "font no vàlida $upstream_name"
 
 #: git-rebase.sh:489
 #, sh-format
 msgid "$onto_name: there are more than one merge bases"
 msgstr "$onto_name: ja hi ha més d'una base de fusió"
 
 #: git-rebase.sh:492 git-rebase.sh:496
 #, sh-format
 msgid "$onto_name: there is no merge base"
-msgstr "$onto_name: no hi ha base de fusió"
+msgstr "$onto_name: no hi ha cap base de fusió"
 
 #: git-rebase.sh:501
 #, sh-format
 msgid "Does not point to a valid commit: $onto_name"
 msgstr "No assenyala una comissió vàlida: $onto_name"
 
 #: git-rebase.sh:524
 #, sh-format
 msgid "fatal: no such branch: $branch_name"
-msgstr "fatal: no hi ha tal rama: $branch_name"
+msgstr "fatal: no hi ha tal branca: $branch_name"
 
 #: git-rebase.sh:557
 msgid "Cannot autostash"
 msgstr "No es pot emmagatzemar automàticament"
 
 #: git-rebase.sh:562
@@ -10713,27 +10748,28 @@
 msgid "Please commit or stash them."
 msgstr "Si us plau, cometeu-los o emmagatzemeu-los."
 
 #: git-rebase.sh:586
 #, sh-format
 msgid "Current branch $branch_name is up to date."
-msgstr "La rama actual $branch_name està al dia."
+msgstr "La branca actual $branch_name està al dia."
 
 #: git-rebase.sh:590
 #, sh-format
 msgid "Current branch $branch_name is up to date, rebase forced."
-msgstr "La rama actual $branch_name està al dia; rebase forçada."
+msgstr "La branca actual $branch_name està al dia; rebase forçada."
 
 #: git-rebase.sh:601
 #, sh-format
 msgid "Changes from $mb to $onto:"
 msgstr "Canvis de $mb a $onto:"
 
 #: git-rebase.sh:610
 msgid "First, rewinding head to replay your work on top of it..."
-msgstr "Primer, rebobinant el cap per a reproduir el vostre treball encima..."
+msgstr ""
+"Primer, rebobinant el cap per a reproduir el vostre treball al damunt..."
 
 #: git-rebase.sh:620
 #, sh-format
 msgid "Fast-forwarded $branch_name to $onto_name."
 msgstr "S'ha avançat $branch_name ràpidament a $onto_name"
 
@@ -10756,13 +10792,13 @@
 #: git-stash.sh:141
 msgid "No changes selected"
 msgstr "No hi ha canvis seleccionats"
 
 #: git-stash.sh:144
 msgid "Cannot remove temporary index (can't happen)"
-msgstr "No es pot treure l'índex temporal (no es pot passar)"
+msgstr "No es pot eliminar l'índex temporal (això no pot passar)"
 
 #: git-stash.sh:157
 msgid "Cannot record working tree state"
 msgstr "No es pot registrar l'estat de l'arbre de treball"
 
 #: git-stash.sh:191
@@ -10800,13 +10836,13 @@
 #: git-stash.sh:267
 msgid "Cannot save the current status"
 msgstr "No es pot desar l'estat actual"
 
 #: git-stash.sh:285
 msgid "Cannot remove worktree changes"
-msgstr "No es pot treure els canvis de l'arbre de treball"
+msgstr "No es poden elminiar els canvis de l'arbre de treball"
 
 #: git-stash.sh:384
 msgid "No stash found."
 msgstr "Cap magatzem trobat."
 
 #: git-stash.sh:391
@@ -10814,35 +10850,35 @@
 msgid "Too many revisions specified: $REV"
 msgstr "Massa revisions especificades: $REV"
 
 #: git-stash.sh:397
 #, sh-format
 msgid "$reference is not a valid reference"
-msgstr "$reference no és referència vàlida"
+msgstr "$reference no és una referència vàlida"
 
 #: git-stash.sh:425
 #, sh-format
 msgid "'$args' is not a stash-like commit"
-msgstr "'$args' no és comissió com magatzem"
+msgstr "'$args' no és una comissió de tipus magatzem"
 
 #: git-stash.sh:436
 #, sh-format
 msgid "'$args' is not a stash reference"
-msgstr "'$args' no és referència de magatzem"
+msgstr "'$args' no és una referència de magatzem"
 
 #: git-stash.sh:444
 msgid "unable to refresh index"
-msgstr "incapaç d'actualitzar l'índex"
+msgstr "no s'ha pogut actualitzar l'índex"
 
 #: git-stash.sh:448
 msgid "Cannot apply a stash in the middle of a merge"
-msgstr "No es pot aplicar un magatzem en el medi d'una fusió"
+msgstr "No es pot aplicar un magatzem enmig d'una fusió"
 
 #: git-stash.sh:456
 msgid "Conflicts in index. Try without --index."
-msgstr "Hi ha conflictes en l'índex. Proveu-lo sense --index."
+msgstr "Hi ha conflictes en l'índex. Proveu-ho sense --index."
 
 #: git-stash.sh:458
 msgid "Could not save index tree"
 msgstr "No s'ha pogut desar l'arbre d'índex"
 
 #: git-stash.sh:492
@@ -10862,13 +10898,13 @@
 #, sh-format
 msgid "${REV}: Could not drop stash entry"
 msgstr "${REV}: No s'ha pogut descartar l'entrada de magatzem"
 
 #: git-stash.sh:539
 msgid "No branch name specified"
-msgstr "Cap nom de rama especificat"
+msgstr "Cap nom de branca especificat"
 
 #: git-stash.sh:611
 msgid "(To restore them type \"git stash apply\")"
 msgstr "(Per restaurar-les teclegeu \"git stash apply\")"
 
 #: git-submodule.sh:95
@@ -10877,30 +10913,28 @@
 msgstr "no es pot despullar un component de l'url '$remoteurl'"
 
 #: git-submodule.sh:237
 #, sh-format
 msgid "No submodule mapping found in .gitmodules for path '$sm_path'"
 msgstr ""
-"No s'ha trobat una mapatge de submòdul en .gitmodules per a la ruta "
-"'$sm_path'"
+"No s'ha trobat cap mapatge de submòdul a .gitmodules per al camí '$sm_path'"
 
 #: git-submodule.sh:287
 #, sh-format
 msgid "Clone of '$url' into submodule path '$sm_path' failed"
-msgstr "La clonatge de '$url' a la ruta de submòdul '$sm_path' ha fallat"
+msgstr "El clonatge de '$url' al camí de submòdul '$sm_path' ha fallat"
 
 #: git-submodule.sh:296
 #, sh-format
 msgid "Gitdir '$a' is part of the submodule path '$b' or vice versa"
-msgstr ""
-"El directori de git '$a' és part de la ruta de submòdul '$b' o viceversa"
+msgstr "El directori de git '$a' és part del camí de submòdul '$b' o viceversa"
 
 #: git-submodule.sh:406
 msgid "Relative path can only be used from the toplevel of the working tree"
 msgstr ""
-"La ruta relativa només es pot usar des del nivell superior de l'arbre de "
+"El camí relatiu només es pot usar des del nivell superior de l'arbre de "
 "treball"
 
 #: git-submodule.sh:416
 #, sh-format
 msgid "repo URL: '$repo' must be absolute or begin with ./|../"
 msgstr "URL de dipòsit: '$repo' ha de ser absolut o començar amb ./|../"
@@ -10914,13 +10948,13 @@
 #, sh-format
 msgid ""
 "The following path is ignored by one of your .gitignore files:\n"
 "$sm_path\n"
 "Use -f if you really want to add it."
 msgstr ""
-"La ruta següent s'ignora per un dels vostres fitxers .gitignore:\n"
+"El camí següent s'ignora per un dels vostres fitxers .gitignore:\n"
 "$sm_path\n"
 "Useu -f si realment voleu afegir-lo."
 
 #: git-submodule.sh:455
 #, sh-format
 msgid "Adding existing repo at '$sm_path' to the index"
@@ -10966,13 +11000,13 @@
 msgid "Reactivating local git directory for submodule '$sm_name'."
 msgstr "Reactivant el directori de git local per al submòdul '$sm_name'."
 
 #: git-submodule.sh:484
 #, sh-format
 msgid "Unable to checkout submodule '$sm_path'"
-msgstr "Incapaç d'agafar el submòdul '$sm_path'"
+msgstr "no s'ha pogut agafar el submòdul '$sm_path'"
 
 #: git-submodule.sh:489
 #, sh-format
 msgid "Failed to add submodule '$sm_path'"
 msgstr "S'ha fallat en afegir el submòdul '$sm_path'"
 
@@ -10981,42 +11015,41 @@
 msgid "Failed to register submodule '$sm_path'"
 msgstr "S'ha fallat en registrar el submòdul '$sm_path'"
 
 #: git-submodule.sh:542
 #, sh-format
 msgid "Entering '$prefix$displaypath'"
-msgstr "Entrant '$prefix$displaypath'"
+msgstr "Entrant a '$prefix$displaypath'"
 
 #: git-submodule.sh:562
 #, sh-format
 msgid "Stopping at '$prefix$displaypath'; script returned non-zero status."
 msgstr ""
 "Aturant a '$prefix$displaypath'; l'script ha retornat un estat no zero."
 
 #: git-submodule.sh:608
 #, sh-format
 msgid "No url found for submodule path '$displaypath' in .gitmodules"
 msgstr ""
-"No s'ha trobat un url per a la ruta de submòdul '$displaypath' en .gitmodules"
+"No s'ha trobat cap url per al camí de submòdul '$displaypath' a .gitmodules"
 
 #: git-submodule.sh:617
 #, sh-format
 msgid "Failed to register url for submodule path '$displaypath'"
-msgstr ""
-"S'ha fallat en registrar l'url per a la ruta de submòdul '$displaypath'"
+msgstr "S'ha fallat en registrar l'url per al camí de submòdul '$displaypath'"
 
 #: git-submodule.sh:619
 #, sh-format
 msgid "Submodule '$name' ($url) registered for path '$displaypath'"
-msgstr "S'ha registrat el submòdul '$name' ($url) per a la ruta '$displaypath'"
+msgstr "S'ha registrat el submòdul '$name' ($url) per al camí '$displaypath'"
 
 #: git-submodule.sh:636
 #, sh-format
 msgid "Failed to register update mode for submodule path '$displaypath'"
 msgstr ""
-"S'ha fallat en registrar el mode d'actualització per a la ruta de submòdul "
+"S'ha fallat en registrar el mode d'actualització per al camí de submòdul "
 "'$displaypath'"
 
 #: git-submodule.sh:674
 #, sh-format
 msgid "Use '.' if you really want to deinitialize all submodules"
 msgstr "Useu '.' si realment voleu desinicialitzar tots els submòduls"
@@ -11028,13 +11061,13 @@
 
 #: git-submodule.sh:692
 #, sh-format
 msgid ""
 "(use 'rm -rf' if you really want to remove it including all of its history)"
 msgstr ""
-"(useu 'rm -rf' si realment voleu treure'l inclòs tota la seva història)"
+"(useu 'rm -rf' si realment voleu eliminar-lo inclosa tota la seva història)"
 
 #: git-submodule.sh:698
 #, sh-format
 msgid ""
 "Submodule work tree '$displaypath' contains local modifications; use '-f' to "
 "discard them"
@@ -11047,96 +11080,96 @@
 msgid "Cleared directory '$displaypath'"
 msgstr "S'ha netejat el directori '$displaypath'"
 
 #: git-submodule.sh:702
 #, sh-format
 msgid "Could not remove submodule work tree '$displaypath'"
-msgstr "No s'ha pogut treure l'arbre de treball de submòdul '$displaypath'"
+msgstr "No s'ha pogut eliminar l'arbre de treball de submòdul '$displaypath'"
 
 #: git-submodule.sh:705
 #, sh-format
 msgid "Could not create empty submodule directory '$displaypath'"
 msgstr "No s'ha pogut crear el directori de submòdul buit '$displaypath'"
 
 #: git-submodule.sh:714
 #, sh-format
 msgid "Submodule '$name' ($url) unregistered for path '$displaypath'"
-msgstr "Submòdul '$name' ($url) no registrat per a la ruta '$displaypath'"
+msgstr "Submòdul '$name' ($url) no registrat per al camí '$displaypath'"
 
 #: git-submodule.sh:830
 #, sh-format
 msgid ""
 "Submodule path '$displaypath' not initialized\n"
 "Maybe you want to use 'update --init'?"
 msgstr ""
-"Ruta de submòdul '$displaypath' no inicialitzat\n"
+"Camí de submòdul '$displaypath' no inicialitzat\n"
 "Potser voleu usar 'update --init'?"
 
 #: git-submodule.sh:843
 #, sh-format
 msgid "Unable to find current revision in submodule path '$displaypath'"
 msgstr ""
-"Incapaç de trobar la revisió actual en la ruta de submòdul '$displaypath'"
+"No s'ha pogut trobar la revisió actual en el camí de submòdul '$displaypath'"
 
 #: git-submodule.sh:852
 #, sh-format
 msgid "Unable to fetch in submodule path '$sm_path'"
-msgstr "Incapaç d'obtenir en la ruta de submòdul '$sm_path'"
+msgstr "No s'ha pogut obtenir en el camí de submòdul '$sm_path'"
 
 #: git-submodule.sh:876
 #, sh-format
 msgid "Unable to fetch in submodule path '$displaypath'"
-msgstr "Incapaç d'obtenir en la ruta de submòdul '$displaypath'"
+msgstr "No s'ha pogut obtenir en el camí de submòdul '$displaypath'"
 
 #: git-submodule.sh:890
 #, sh-format
 msgid "Unable to checkout '$sha1' in submodule path '$displaypath'"
-msgstr "Incapaç d'agafar '$sha1' en la ruta de submòdul '$displaypath'"
+msgstr "No s'ha pogut agafar '$sha1' en el camí de submòdul '$displaypath'"
 
 #: git-submodule.sh:891
 #, sh-format
 msgid "Submodule path '$displaypath': checked out '$sha1'"
-msgstr "Ruta de submòdul '$displaypath': s'ha agafat '$sha1'"
+msgstr "Camí de submòdul '$displaypath': s'ha agafat '$sha1'"
 
 #: git-submodule.sh:895
 #, sh-format
 msgid "Unable to rebase '$sha1' in submodule path '$displaypath'"
-msgstr "Incapaç de rebasar '$sha1' en la ruta de submòdul '$displaypath'"
+msgstr "no s'ha pogut  rebasar '$sha1' en el camí de submòdul '$displaypath'"
 
 #: git-submodule.sh:896
 #, sh-format
 msgid "Submodule path '$displaypath': rebased into '$sha1'"
-msgstr "Ruta de submòdul '$displaypath': s'ha rebasat en '$sha1'"
+msgstr "Camí de submòdul '$displaypath': s'ha rebasat en '$sha1'"
 
 #: git-submodule.sh:901
 #, sh-format
 msgid "Unable to merge '$sha1' in submodule path '$displaypath'"
-msgstr "Incapaç de fusionar '$sha1' en la ruta de submòdul '$displaypath'"
+msgstr "No s'ha pogut  fusionar '$sha1' en el camí de submòdul '$displaypath'"
 
 #: git-submodule.sh:902
 #, sh-format
 msgid "Submodule path '$displaypath': merged in '$sha1'"
-msgstr "Ruta de submòdul '$displaypath': s'ha fusionat en '$sha1'"
+msgstr "Camí de submòdul '$displaypath': s'ha fusionat en '$sha1'"
 
 #: git-submodule.sh:907
 #, sh-format
 msgid ""
 "Execution of '$command $sha1' failed in submodule  path '$prefix$sm_path'"
 msgstr ""
-"L'execució de '$command $sha1' ha fallat en la ruta de submòdul '$prefix"
+"L'execució de '$command $sha1' ha fallat en el camí de submòdul '$prefix"
 "$sm_path'"
 
 #: git-submodule.sh:908
 #, sh-format
 msgid "Submodule path '$prefix$sm_path': '$command $sha1'"
-msgstr "Ruta de submòdul '$prefix$sm_path': '$command $sha1'"
+msgstr "Camí de submòdul '$prefix$sm_path': '$command $sha1'"
 
 #: git-submodule.sh:938
 #, sh-format
 msgid "Failed to recurse into submodule path '$displaypath'"
-msgstr "S'ha fallat en recursar a la ruta de submòdul '$displaypath'"
+msgstr "S'ha fallat en recursar al camí de submòdul '$displaypath'"
 
 #: git-submodule.sh:1046
 msgid "The --cached option cannot be used with the --files option"
 msgstr "L'opció --cached no es pot usar amb l'opció --files"
 
 #: git-submodule.sh:1098
@@ -11163,12 +11196,12 @@
 msgid "blob"
 msgstr "blob"
 
 #: git-submodule.sh:1267
 #, sh-format
 msgid "Failed to recurse into submodule path '$sm_path'"
-msgstr "S'ha fallat en recursar a la ruta de submòdul '$sm_path'"
+msgstr "S'ha fallat en recursar al camí de submòdul '$sm_path'"
 
 #: git-submodule.sh:1331
 #, sh-format
 msgid "Synchronizing submodule url for '$displaypath'"
 msgstr "Sincronitzant l'url de submòdul per a '$displaypath'"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/po/de.po /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/po/de.po
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/po/de.po	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/po/de.po	2015-02-06 05:40:08.000000000 +0800
@@ -1,17 +1,17 @@
 # German translations for Git.
 # Copyright (C) 2010-2012 Ralf Thielow <ralf.thielow@gmail.com>
 # This file is distributed under the same license as the Git package.
-# Ralf Thielow <ralf.thielow@gmail.com>, 2010, 2011, 2012.
+# Ralf Thielow <ralf.thielow@gmail.com>, 2010-2015.
 #
 msgid ""
 msgstr ""
 "Project-Id-Version: Git\n"
 "Report-Msgid-Bugs-To: Git Mailing List <git@vger.kernel.org>\n"
-"POT-Creation-Date: 2014-11-20 09:42+0800\n"
-"PO-Revision-Date: 2014-11-20 10:19+0800\n"
+"POT-Creation-Date: 2015-01-21 14:21+0800\n"
+"PO-Revision-Date: 2015-01-21 15:01+0800\n"
 "Last-Translator: Ralf Thielow <ralf.thielow@gmail.com>\n"
 "Language-Team: German <>\n"
 "Language: de\n"
 "MIME-Version: 1.0\n"
 "Content-Type: text/plain; charset=UTF-8\n"
 "Content-Transfer-Encoding: 8bit\n"
@@ -47,82 +47,82 @@
 "Referenz> [Pfad...]"
 
 #: archive.c:14
 msgid "git archive --remote <repo> [--exec <cmd>] --list"
 msgstr "git archive --remote <Repository> [--exec <Programm>] --list"
 
-#: archive.c:334 builtin/add.c:137 builtin/add.c:427 builtin/rm.c:328
+#: archive.c:342 builtin/add.c:137 builtin/add.c:427 builtin/rm.c:328
 #, c-format
 msgid "pathspec '%s' did not match any files"
 msgstr "Pfadspezifikation '%s' stimmt mit keinen Dateien überein"
 
-#: archive.c:419
+#: archive.c:427
 msgid "fmt"
 msgstr "Format"
 
-#: archive.c:419
+#: archive.c:427
 msgid "archive format"
 msgstr "Archivformat"
 
-#: archive.c:420 builtin/log.c:1204
+#: archive.c:428 builtin/log.c:1204
 msgid "prefix"
 msgstr "Präfix"
 
-#: archive.c:421
+#: archive.c:429
 msgid "prepend prefix to each pathname in the archive"
 msgstr "einen Präfix vor jeden Pfadnamen in dem Archiv stellen"
 
-#: archive.c:422 builtin/archive.c:88 builtin/blame.c:2517
+#: archive.c:430 builtin/archive.c:88 builtin/blame.c:2517
 #: builtin/blame.c:2518 builtin/config.c:57 builtin/fast-export.c:986
 #: builtin/fast-export.c:988 builtin/grep.c:712 builtin/hash-object.c:101
-#: builtin/ls-files.c:489 builtin/ls-files.c:492 builtin/notes.c:411
-#: builtin/notes.c:568 builtin/read-tree.c:109 parse-options.h:151
+#: builtin/ls-files.c:489 builtin/ls-files.c:492 builtin/notes.c:394
+#: builtin/notes.c:557 builtin/read-tree.c:109 parse-options.h:151
 msgid "file"
 msgstr "Datei"
 
-#: archive.c:423 builtin/archive.c:89
+#: archive.c:431 builtin/archive.c:89
 msgid "write the archive to this file"
 msgstr "das Archiv in diese Datei schreiben"
 
-#: archive.c:425
+#: archive.c:433
 msgid "read .gitattributes in working directory"
 msgstr ".gitattributes aus dem Arbeitsverzeichnis lesen"
 
-#: archive.c:426
+#: archive.c:434
 msgid "report archived files on stderr"
 msgstr "archivierte Dateien in der Standard-Fehlerausgabe ausgeben"
 
-#: archive.c:427
+#: archive.c:435
 msgid "store only"
 msgstr "nur speichern"
 
-#: archive.c:428
+#: archive.c:436
 msgid "compress faster"
 msgstr "schneller komprimieren"
 
-#: archive.c:436
+#: archive.c:444
 msgid "compress better"
 msgstr "besser komprimieren"
 
-#: archive.c:439
+#: archive.c:447
 msgid "list supported archive formats"
 msgstr "unterstützte Archivformate auflisten"
 
-#: archive.c:441 builtin/archive.c:90 builtin/clone.c:85
+#: archive.c:449 builtin/archive.c:90 builtin/clone.c:86
 msgid "repo"
 msgstr "Repository"
 
-#: archive.c:442 builtin/archive.c:91
+#: archive.c:450 builtin/archive.c:91
 msgid "retrieve the archive from remote repository <repo>"
 msgstr "Archiv vom Remote-Repository <Repository> abrufen"
 
-#: archive.c:443 builtin/archive.c:92 builtin/notes.c:490
+#: archive.c:451 builtin/archive.c:92 builtin/notes.c:478
 msgid "command"
 msgstr "Programm"
 
-#: archive.c:444 builtin/archive.c:93
+#: archive.c:452 builtin/archive.c:93
 msgid "path to the remote git-upload-archive command"
 msgstr "Pfad zum externen \"git-upload-archive\"-Programm"
 
 #: attr.c:258
 msgid ""
 "Negative patterns are ignored in git attributes\n"
@@ -254,24 +254,24 @@
 
 #: bundle.c:61
 #, c-format
 msgid "unrecognized header: %s%s (%d)"
 msgstr "nicht erkannter Kopfbereich: %s%s (%d)"
 
-#: bundle.c:87 builtin/commit.c:788
+#: bundle.c:87 builtin/commit.c:770
 #, c-format
 msgid "could not open '%s'"
 msgstr "Konnte '%s' nicht öffnen"
 
 #: bundle.c:139
 msgid "Repository lacks these prerequisite commits:"
 msgstr "Dem Repository fehlen folgende vorausgesetzte Commits:"
 
-#: bundle.c:163 sequencer.c:641 sequencer.c:1096 builtin/blame.c:2706
-#: builtin/branch.c:652 builtin/commit.c:1085 builtin/log.c:330
-#: builtin/log.c:823 builtin/log.c:1432 builtin/log.c:1669 builtin/merge.c:357
+#: bundle.c:163 sequencer.c:645 sequencer.c:1100 builtin/blame.c:2706
+#: builtin/branch.c:652 builtin/commit.c:1049 builtin/log.c:330
+#: builtin/log.c:823 builtin/log.c:1432 builtin/log.c:1669 builtin/merge.c:358
 #: builtin/shortlog.c:158
 msgid "revision walk setup failed"
 msgstr "Einrichtung des Revisionsgangs fehlgeschlagen"
 
 #: bundle.c:185
 #, c-format
@@ -323,13 +323,13 @@
 msgstr "kann '%s' nicht erstellen"
 
 #: bundle.c:475
 msgid "index-pack died"
 msgstr "Erstellung der Paketindexdatei abgebrochen"
 
-#: color.c:157
+#: color.c:260
 #, c-format
 msgid "invalid color value: %.*s"
 msgstr "Ungültiger Farbwert: %.*s"
 
 #: commit.c:40
 #, c-format
@@ -372,35 +372,35 @@
 
 #: config.c:885
 #, c-format
 msgid "invalid mode for object creation: %s"
 msgstr "Ungültiger Modus für Objekterstellung: %s"
 
-#: config.c:1201
+#: config.c:1211
 msgid "unable to parse command-line config"
 msgstr ""
 "Konnte die über die Kommandozeile angegebene Konfiguration nicht parsen."
 
-#: config.c:1262
+#: config.c:1272
 msgid "unknown error occured while reading the configuration files"
 msgstr ""
 "Es trat ein unbekannter Fehler beim Lesen der Konfigurationsdateien auf."
 
-#: config.c:1586
+#: config.c:1596
 #, c-format
 msgid "unable to parse '%s' from command-line config"
 msgstr ""
 "Konnte Wert '%s' aus der über die Kommandozeile angegebenen\n"
 "Konfiguration nicht parsen."
 
-#: config.c:1588
+#: config.c:1598
 #, c-format
 msgid "bad config variable '%s' in file '%s' at line %d"
 msgstr "ungültige Konfigurationsvariable '%s' in Datei '%s' bei Zeile %d"
 
-#: config.c:1647
+#: config.c:1657
 #, c-format
 msgid "%s has multiple values"
 msgstr "%s hat mehrere Werte"
 
 #: connected.c:69
 msgid "Could not run 'git rev-list'"
@@ -639,26 +639,26 @@
 
 #: help.c:440
 #, c-format
 msgid "%s: %s - %s"
 msgstr "%s: %s - %s"
 
-#: lockfile.c:275
+#: lockfile.c:283
 msgid "BUG: reopen a lockfile that is still open"
 msgstr "FEHLER: Wiederöffnen einer bereits geöffneten Lock-Datei"
 
-#: lockfile.c:277
+#: lockfile.c:285
 msgid "BUG: reopen a lockfile that has been committed"
 msgstr "FEHLER: Wiederöffnen einer bereits committeten Lock-Datei"
 
 #: merge.c:41
 msgid "failed to read the cache"
 msgstr "Lesen des Zwischenspeichers fehlgeschlagen"
 
-#: merge.c:94 builtin/checkout.c:356 builtin/checkout.c:562
-#: builtin/clone.c:659
+#: merge.c:94 builtin/checkout.c:374 builtin/checkout.c:580
+#: builtin/clone.c:662
 msgid "unable to write new index file"
 msgstr "Konnte neue Staging-Area-Datei nicht schreiben."
 
 #: merge-recursive.c:189
 #, c-format
 msgid "(bad commit)\n"
@@ -670,273 +670,273 @@
 msgstr "addinfo_cache für Pfad '%s' fehlgeschlagen"
 
 #: merge-recursive.c:270
 msgid "error building trees"
 msgstr "Fehler beim Erstellen der \"Tree\"-Objekte"
 
-#: merge-recursive.c:691
+#: merge-recursive.c:688
 #, c-format
 msgid "failed to create path '%s'%s"
 msgstr "Fehler beim Erstellen des Pfades '%s'%s"
 
-#: merge-recursive.c:702
+#: merge-recursive.c:699
 #, c-format
 msgid "Removing %s to make room for subdirectory\n"
 msgstr "Entferne %s, um Platz für Unterverzeichnis zu schaffen\n"
 
-#: merge-recursive.c:716 merge-recursive.c:737
+#: merge-recursive.c:713 merge-recursive.c:734
 msgid ": perhaps a D/F conflict?"
 msgstr ": vielleicht ein Verzeichnis/Datei-Konflikt?"
 
-#: merge-recursive.c:727
+#: merge-recursive.c:724
 #, c-format
 msgid "refusing to lose untracked file at '%s'"
-msgstr "verweigere, da unbeobachtete Dateien in '%s' verloren gehen würden"
+msgstr "verweigere, da unversionierte Dateien in '%s' verloren gehen würden"
 
-#: merge-recursive.c:767
+#: merge-recursive.c:764
 #, c-format
 msgid "cannot read object %s '%s'"
 msgstr "kann Objekt %s '%s' nicht lesen"
 
-#: merge-recursive.c:769
+#: merge-recursive.c:766
 #, c-format
 msgid "blob expected for %s '%s'"
 msgstr "Blob erwartet für %s '%s'"
 
-#: merge-recursive.c:792 builtin/clone.c:318
+#: merge-recursive.c:789 builtin/clone.c:321
 #, c-format
 msgid "failed to open '%s'"
 msgstr "Fehler beim Öffnen von '%s'"
 
-#: merge-recursive.c:800
+#: merge-recursive.c:797
 #, c-format
 msgid "failed to symlink '%s'"
 msgstr "Fehler beim Erstellen eines symbolischen Verweises für '%s'"
 
-#: merge-recursive.c:803
+#: merge-recursive.c:800
 #, c-format
 msgid "do not know what to do with %06o %s '%s'"
 msgstr "weiß nicht was mit %06o %s '%s' zu machen ist"
 
-#: merge-recursive.c:941
+#: merge-recursive.c:938
 msgid "Failed to execute internal merge"
 msgstr "Fehler bei Ausführung des internen Merges"
 
-#: merge-recursive.c:945
+#: merge-recursive.c:942
 #, c-format
 msgid "Unable to add %s to database"
 msgstr "Konnte %s nicht zur Datenbank hinzufügen"
 
-#: merge-recursive.c:961
+#: merge-recursive.c:958
 msgid "unsupported object type in the tree"
 msgstr "nicht unterstützter Objekttyp im Verzeichnis"
 
-#: merge-recursive.c:1036 merge-recursive.c:1050
+#: merge-recursive.c:1033 merge-recursive.c:1047
 #, c-format
 msgid ""
 "CONFLICT (%s/delete): %s deleted in %s and %s in %s. Version %s of %s left "
 "in tree."
 msgstr ""
 "KONFLIKT (%s/löschen): %s gelöscht in %s und %s in %s. Stand %s von %s wurde "
 "im Arbeitsbereich gelassen."
 
-#: merge-recursive.c:1042 merge-recursive.c:1055
+#: merge-recursive.c:1039 merge-recursive.c:1052
 #, c-format
 msgid ""
 "CONFLICT (%s/delete): %s deleted in %s and %s in %s. Version %s of %s left "
 "in tree at %s."
 msgstr ""
 "KONFLIKT (%s/löschen): %s gelöscht in %s und %s in %s. Stand %s von %s wurde "
 "im Arbeitsbereich bei %s gelassen."
 
-#: merge-recursive.c:1096
+#: merge-recursive.c:1093
 msgid "rename"
 msgstr "umbenennen"
 
-#: merge-recursive.c:1096
+#: merge-recursive.c:1093
 msgid "renamed"
 msgstr "umbenannt"
 
-#: merge-recursive.c:1152
+#: merge-recursive.c:1149
 #, c-format
 msgid "%s is a directory in %s adding as %s instead"
 msgstr "%s ist ein Verzeichnis in %s, füge es stattdessen als %s hinzu"
 
-#: merge-recursive.c:1174
+#: merge-recursive.c:1171
 #, c-format
 msgid ""
 "CONFLICT (rename/rename): Rename \"%s\"->\"%s\" in branch \"%s\" rename \"%s"
 "\"->\"%s\" in \"%s\"%s"
 msgstr ""
 "KONFLIKT (umbenennen/umbenennen): Benenne um \"%s\"->\"%s\" in Branch \"%s\" "
 "und \"%s\"->\"%s\" in Branch \"%s\"%s"
 
-#: merge-recursive.c:1179
+#: merge-recursive.c:1176
 msgid " (left unresolved)"
 msgstr " (bleibt unaufgelöst)"
 
-#: merge-recursive.c:1233
+#: merge-recursive.c:1230
 #, c-format
 msgid "CONFLICT (rename/rename): Rename %s->%s in %s. Rename %s->%s in %s"
 msgstr ""
 "KONFLIKT (umbenennen/umbenennen): Benenne um %s->%s in %s. Benenne um %s->%s "
 "in %s"
 
-#: merge-recursive.c:1263
+#: merge-recursive.c:1260
 #, c-format
 msgid "Renaming %s to %s and %s to %s instead"
 msgstr "Benenne stattdessen %s nach %s und %s nach %s um"
 
-#: merge-recursive.c:1462
+#: merge-recursive.c:1459
 #, c-format
 msgid "CONFLICT (rename/add): Rename %s->%s in %s. %s added in %s"
 msgstr ""
 "KONFLIKT (umbenennen/hinzufügen): Benenne um %s->%s in %s. %s hinzugefügt in "
 "%s"
 
-#: merge-recursive.c:1472
+#: merge-recursive.c:1469
 #, c-format
 msgid "Adding merged %s"
 msgstr "Füge zusammengeführte Datei %s hinzu"
 
-#: merge-recursive.c:1477 merge-recursive.c:1675
+#: merge-recursive.c:1474 merge-recursive.c:1672
 #, c-format
 msgid "Adding as %s instead"
 msgstr "Füge stattdessen als %s hinzu"
 
-#: merge-recursive.c:1528
+#: merge-recursive.c:1525
 #, c-format
 msgid "cannot read object %s"
 msgstr "kann Objekt %s nicht lesen"
 
-#: merge-recursive.c:1531
+#: merge-recursive.c:1528
 #, c-format
 msgid "object %s is not a blob"
 msgstr "Objekt %s ist kein Blob"
 
-#: merge-recursive.c:1579
+#: merge-recursive.c:1576
 msgid "modify"
 msgstr "ändern"
 
-#: merge-recursive.c:1579
+#: merge-recursive.c:1576
 msgid "modified"
 msgstr "geändert"
 
-#: merge-recursive.c:1589
+#: merge-recursive.c:1586
 msgid "content"
 msgstr "Inhalt"
 
-#: merge-recursive.c:1596
+#: merge-recursive.c:1593
 msgid "add/add"
 msgstr "hinzufügen/hinzufügen"
 
-#: merge-recursive.c:1630
+#: merge-recursive.c:1627
 #, c-format
 msgid "Skipped %s (merged same as existing)"
 msgstr "%s ausgelassen (Ergebnis des Merges existiert bereits)"
 
-#: merge-recursive.c:1644
+#: merge-recursive.c:1641
 #, c-format
 msgid "Auto-merging %s"
 msgstr "automatischer Merge von %s"
 
-#: merge-recursive.c:1648 git-submodule.sh:1150
+#: merge-recursive.c:1645 git-submodule.sh:1150
 msgid "submodule"
 msgstr "Submodul"
 
-#: merge-recursive.c:1649
+#: merge-recursive.c:1646
 #, c-format
 msgid "CONFLICT (%s): Merge conflict in %s"
 msgstr "KONFLIKT (%s): Merge-Konflikt in %s"
 
-#: merge-recursive.c:1735
+#: merge-recursive.c:1732
 #, c-format
 msgid "Removing %s"
 msgstr "Entferne %s"
 
-#: merge-recursive.c:1760
+#: merge-recursive.c:1757
 msgid "file/directory"
 msgstr "Datei/Verzeichnis"
 
-#: merge-recursive.c:1766
+#: merge-recursive.c:1763
 msgid "directory/file"
 msgstr "Verzeichnis/Datei"
 
-#: merge-recursive.c:1771
+#: merge-recursive.c:1768
 #, c-format
 msgid "CONFLICT (%s): There is a directory with name %s in %s. Adding %s as %s"
 msgstr ""
 "KONFLIKT (%s): Es existiert bereits ein Verzeichnis %s in %s. Füge %s als %s "
 "hinzu."
 
-#: merge-recursive.c:1781
+#: merge-recursive.c:1778
 #, c-format
 msgid "Adding %s"
 msgstr "Füge %s hinzu"
 
-#: merge-recursive.c:1798
+#: merge-recursive.c:1795
 msgid "Fatal merge failure, shouldn't happen."
 msgstr "Fataler Merge-Fehler. Sollte nicht passieren."
 
-#: merge-recursive.c:1817
+#: merge-recursive.c:1814
 msgid "Already up-to-date!"
 msgstr "Bereits aktuell!"
 
-#: merge-recursive.c:1826
+#: merge-recursive.c:1823
 #, c-format
 msgid "merging of trees %s and %s failed"
 msgstr "Zusammenführen der \"Tree\"-Objekte %s und %s fehlgeschlagen"
 
-#: merge-recursive.c:1856
+#: merge-recursive.c:1853
 #, c-format
 msgid "Unprocessed path??? %s"
 msgstr "unverarbeiteter Pfad??? %s"
 
-#: merge-recursive.c:1901
+#: merge-recursive.c:1898
 msgid "Merging:"
 msgstr "Merge:"
 
-#: merge-recursive.c:1914
+#: merge-recursive.c:1911
 #, c-format
 msgid "found %u common ancestor:"
 msgid_plural "found %u common ancestors:"
 msgstr[0] "%u gemeinsamen Vorgänger-Commit gefunden"
 msgstr[1] "%u gemeinsame Vorgänger-Commits gefunden"
 
-#: merge-recursive.c:1951
+#: merge-recursive.c:1948
 msgid "merge returned no commit"
 msgstr "Merge hat keinen Commit zurückgegeben"
 
-#: merge-recursive.c:2008
+#: merge-recursive.c:2005
 #, c-format
 msgid "Could not parse object '%s'"
 msgstr "Konnte Objekt '%s' nicht parsen."
 
-#: merge-recursive.c:2019 builtin/merge.c:666
+#: merge-recursive.c:2016 builtin/merge.c:667
 msgid "Unable to write index."
 msgstr "Konnte Staging-Area nicht schreiben."
 
 #: notes-utils.c:41
 msgid "Cannot commit uninitialized/unreferenced notes tree"
 msgstr ""
 "Kann uninitialisiertes/unreferenzierte Notiz-Verzeichnis nicht committen."
 
-#: notes-utils.c:83
+#: notes-utils.c:82
 #, c-format
 msgid "Bad notes.rewriteMode value: '%s'"
 msgstr "Ungültiger notes.rewriteMode Wert: '%s'"
 
-#: notes-utils.c:93
+#: notes-utils.c:92
 #, c-format
 msgid "Refusing to rewrite notes in %s (outside of refs/notes/)"
 msgstr ""
 "Umschreiben der Notizen in %s zurückgewiesen (außerhalb von refs/notes/)"
 
 #. TRANSLATORS: The first %s is the name of the
 #. environment variable, the second %s is its value
-#: notes-utils.c:120
+#: notes-utils.c:119
 #, c-format
 msgid "Bad %s value: '%s'"
 msgstr "Ungültiger %s Wert: '%s'"
 
 #: object.c:241
 #, c-format
@@ -1040,22 +1040,22 @@
 msgstr "Konnte --pretty Format nicht parsen."
 
 #: progress.c:225
 msgid "done"
 msgstr "Fertig"
 
-#: read-cache.c:1261
+#: read-cache.c:1267
 #, c-format
 msgid ""
 "index.version set, but the value is invalid.\n"
 "Using version %i"
 msgstr ""
 "index.version gesetzt, aber Wert ungültig.\n"
 "Verwende Version %i"
 
-#: read-cache.c:1271
+#: read-cache.c:1277
 #, c-format
 msgid ""
 "GIT_INDEX_VERSION set, but the value is invalid.\n"
 "Using version %i"
 msgstr ""
 "GIT_INDEX_VERSION gesetzt, aber Wert ungültig.\n"
@@ -1077,53 +1077,53 @@
 msgstr "%s folgt sowohl %s als auch %s"
 
 #: remote.c:798
 msgid "Internal error"
 msgstr "Interner Fehler"
 
-#: remote.c:1968
+#: remote.c:1980
 #, c-format
 msgid "Your branch is based on '%s', but the upstream is gone.\n"
 msgstr "Ihr Branch basiert auf '%s', aber Upstream-Branch wurde entfernt.\n"
 
-#: remote.c:1972
+#: remote.c:1984
 msgid "  (use \"git branch --unset-upstream\" to fixup)\n"
 msgstr "  (benutzen Sie \"git branch --unset-upstream\" zum Beheben)\n"
 
-#: remote.c:1975
+#: remote.c:1987
 #, c-format
 msgid "Your branch is up-to-date with '%s'.\n"
 msgstr "Ihr Branch ist auf dem selben Stand wie '%s'.\n"
 
-#: remote.c:1979
+#: remote.c:1991
 #, c-format
 msgid "Your branch is ahead of '%s' by %d commit.\n"
 msgid_plural "Your branch is ahead of '%s' by %d commits.\n"
 msgstr[0] "Ihr Branch ist vor '%s' um %d Commit.\n"
 msgstr[1] "Ihr Branch ist vor '%s' um %d Commits.\n"
 
-#: remote.c:1985
+#: remote.c:1997
 msgid "  (use \"git push\" to publish your local commits)\n"
 msgstr "  (benutzen Sie \"git push\", um lokale Commits zu publizieren)\n"
 
-#: remote.c:1988
+#: remote.c:2000
 #, c-format
 msgid "Your branch is behind '%s' by %d commit, and can be fast-forwarded.\n"
 msgid_plural ""
 "Your branch is behind '%s' by %d commits, and can be fast-forwarded.\n"
 msgstr[0] ""
 "Ihr Branch ist zu '%s' um %d Commit hinterher, und kann vorgespult werden.\n"
 msgstr[1] ""
 "Ihr Branch ist zu '%s' um %d Commits hinterher, und kann vorgespult werden.\n"
 
-#: remote.c:1996
+#: remote.c:2008
 msgid "  (use \"git pull\" to update your local branch)\n"
 msgstr ""
 "  (benutzen Sie \"git pull\", um Ihren lokalen Branch zu aktualisieren)\n"
 
-#: remote.c:1999
+#: remote.c:2011
 #, c-format
 msgid ""
 "Your branch and '%s' have diverged,\n"
 "and have %d and %d different commit each, respectively.\n"
 msgid_plural ""
 "Your branch and '%s' have diverged,\n"
@@ -1132,13 +1132,13 @@
 "Ihr Branch und '%s' sind divergiert,\n"
 "und haben jeweils %d und %d unterschiedliche Commits.\n"
 msgstr[1] ""
 "Ihr Branch und '%s' sind divergiert,\n"
 "und haben jeweils %d und %d unterschiedliche Commits.\n"
 
-#: remote.c:2009
+#: remote.c:2021
 msgid "  (use \"git pull\" to merge the remote branch into yours)\n"
 msgstr ""
 "  (benutzen Sie \"git pull\", um Ihren Branch mit dem Remote-Branch "
 "zusammenzuführen)\n"
 
 #: run-command.c:87
@@ -1147,29 +1147,29 @@
 
 #: run-command.c:89
 #, c-format
 msgid "dup2(%d,%d) failed"
 msgstr "dup2(%d,%d) fehlgeschlagen"
 
-#: send-pack.c:265
+#: send-pack.c:268
 msgid "failed to sign the push certificate"
 msgstr "Fehler beim Signieren des \"push\"-Zertifikates"
 
-#: send-pack.c:322
+#: send-pack.c:325
 msgid "the receiving end does not support --signed push"
 msgstr ""
 "die Gegenseite unterstützt keinen signierten Versand (\"--signed push\")"
 
-#: sequencer.c:172 builtin/merge.c:781 builtin/merge.c:892
-#: builtin/merge.c:1002 builtin/merge.c:1012
+#: sequencer.c:172 builtin/merge.c:782 builtin/merge.c:893 builtin/merge.c:995
+#: builtin/merge.c:1005
 #, c-format
 msgid "Could not open '%s' for writing"
 msgstr "Konnte '%s' nicht zum Schreiben öffnen."
 
-#: sequencer.c:174 builtin/merge.c:343 builtin/merge.c:784
-#: builtin/merge.c:1004 builtin/merge.c:1017
+#: sequencer.c:174 builtin/merge.c:344 builtin/merge.c:785 builtin/merge.c:997
+#: builtin/merge.c:1010
 #, c-format
 msgid "Could not write to '%s'"
 msgstr "Konnte nicht nach '%s' schreiben."
 
 #: sequencer.c:195
 msgid ""
@@ -1186,13 +1186,13 @@
 "and commit the result with 'git commit'"
 msgstr ""
 "nach Auflösung der Konflikte, markieren Sie die korrigierten Pfade\n"
 "mit 'git add <Pfade>' oder 'git rm <Pfade>'und tragen Sie das Ergebnis mit\n"
 "'git commit' ein"
 
-#: sequencer.c:211 sequencer.c:852 sequencer.c:935
+#: sequencer.c:211 sequencer.c:856 sequencer.c:939
 #, c-format
 msgid "Could not write to %s"
 msgstr "Konnte nicht nach %s schreiben"
 
 #: sequencer.c:214
 #, c-format
@@ -1211,203 +1211,203 @@
 #: sequencer.c:234
 msgid "Commit your changes or stash them to proceed."
 msgstr ""
 "Tragen Sie Ihre Änderungen ein oder benutzen Sie \"stash\", um fortzufahren."
 
 #. TRANSLATORS: %s will be "revert" or "cherry-pick"
-#: sequencer.c:304
+#: sequencer.c:321
 #, c-format
 msgid "%s: Unable to write new index file"
 msgstr "%s: Konnte neue Staging-Area-Datei nicht schreiben"
 
-#: sequencer.c:335
+#: sequencer.c:339
 msgid "Could not resolve HEAD commit\n"
 msgstr "Konnte Commit von HEAD nicht auflösen\n"
 
-#: sequencer.c:355
+#: sequencer.c:359
 msgid "Unable to update cache tree\n"
 msgstr "Konnte Cache-Verzeichnis nicht aktualisieren\n"
 
-#: sequencer.c:402
+#: sequencer.c:406
 #, c-format
 msgid "Could not parse commit %s\n"
 msgstr "Konnte Commit %s nicht parsen\n"
 
-#: sequencer.c:407
+#: sequencer.c:411
 #, c-format
 msgid "Could not parse parent commit %s\n"
 msgstr "Konnte Eltern-Commit %s nicht parsen\n"
 
-#: sequencer.c:473
+#: sequencer.c:477
 msgid "Your index file is unmerged."
 msgstr "Ihre Staging-Area-Datei ist nicht zusammengeführt."
 
-#: sequencer.c:492
+#: sequencer.c:496
 #, c-format
 msgid "Commit %s is a merge but no -m option was given."
 msgstr "Commit %s ist ein Merge, aber die Option -m wurde nicht angegeben."
 
-#: sequencer.c:500
+#: sequencer.c:504
 #, c-format
 msgid "Commit %s does not have parent %d"
 msgstr "Commit %s hat keinen Elternteil %d"
 
-#: sequencer.c:504
+#: sequencer.c:508
 #, c-format
 msgid "Mainline was specified but commit %s is not a merge."
 msgstr "Hauptlinie wurde spezifiziert, aber Commit %s ist kein Merge."
 
 #. TRANSLATORS: The first %s will be "revert" or
 #. "cherry-pick", the second %s a SHA1
-#: sequencer.c:517
+#: sequencer.c:521
 #, c-format
 msgid "%s: cannot parse parent commit %s"
 msgstr "%s: kann Eltern-Commit %s nicht parsen"
 
-#: sequencer.c:521
+#: sequencer.c:525
 #, c-format
 msgid "Cannot get commit message for %s"
 msgstr "Kann keine Commit-Beschreibung für %s bekommen"
 
-#: sequencer.c:607
+#: sequencer.c:611
 #, c-format
 msgid "could not revert %s... %s"
 msgstr "Konnte \"revert\" nicht auf %s ausführen... %s"
 
-#: sequencer.c:608
+#: sequencer.c:612
 #, c-format
 msgid "could not apply %s... %s"
 msgstr "Konnte %s nicht anwenden... %s"
 
-#: sequencer.c:644
+#: sequencer.c:648
 msgid "empty commit set passed"
 msgstr "leere Menge von Commits übergeben"
 
-#: sequencer.c:652
+#: sequencer.c:656
 #, c-format
 msgid "git %s: failed to read the index"
 msgstr "git %s: Fehler beim Lesen der Staging-Area"
 
-#: sequencer.c:656
+#: sequencer.c:660
 #, c-format
 msgid "git %s: failed to refresh the index"
 msgstr "git %s: Fehler beim Aktualisieren der Staging-Area"
 
-#: sequencer.c:716
+#: sequencer.c:720
 #, c-format
 msgid "Cannot %s during a %s"
 msgstr "Kann %s nicht während eines %s durchführen"
 
-#: sequencer.c:738
+#: sequencer.c:742
 #, c-format
 msgid "Could not parse line %d."
 msgstr "Konnte Zeile %d nicht parsen."
 
-#: sequencer.c:743
+#: sequencer.c:747
 msgid "No commits parsed."
 msgstr "Keine Commits geparst."
 
-#: sequencer.c:756
+#: sequencer.c:760
 #, c-format
 msgid "Could not open %s"
 msgstr "Konnte %s nicht öffnen"
 
-#: sequencer.c:760
+#: sequencer.c:764
 #, c-format
 msgid "Could not read %s."
 msgstr "Konnte %s nicht lesen."
 
-#: sequencer.c:767
+#: sequencer.c:771
 #, c-format
 msgid "Unusable instruction sheet: %s"
 msgstr "Unbenutzbares Instruktionsblatt: %s"
 
-#: sequencer.c:797
+#: sequencer.c:801
 #, c-format
 msgid "Invalid key: %s"
 msgstr "Ungültiger Schlüssel: %s"
 
-#: sequencer.c:800
+#: sequencer.c:804
 #, c-format
 msgid "Invalid value for %s: %s"
 msgstr "Ungültiger Wert für %s: %s"
 
-#: sequencer.c:812
+#: sequencer.c:816
 #, c-format
 msgid "Malformed options sheet: %s"
 msgstr "Fehlerhaftes Optionsblatt: %s"
 
-#: sequencer.c:833
+#: sequencer.c:837
 msgid "a cherry-pick or revert is already in progress"
 msgstr "\"cherry-pick\" oder \"revert\" ist bereits im Gang"
 
-#: sequencer.c:834
+#: sequencer.c:838
 msgid "try \"git cherry-pick (--continue | --quit | --abort)\""
 msgstr "versuchen Sie \"git cherry-pick (--continue | --quit | --abort)\""
 
-#: sequencer.c:838
+#: sequencer.c:842
 #, c-format
 msgid "Could not create sequencer directory %s"
 msgstr "Konnte \"sequencer\"-Verzeichnis %s nicht erstellen"
 
-#: sequencer.c:854 sequencer.c:939
+#: sequencer.c:858 sequencer.c:943
 #, c-format
 msgid "Error wrapping up %s."
 msgstr "Fehler beim Einpacken von %s."
 
-#: sequencer.c:873 sequencer.c:1009
+#: sequencer.c:877 sequencer.c:1013
 msgid "no cherry-pick or revert in progress"
 msgstr "kein \"cherry-pick\" oder \"revert\" im Gang"
 
-#: sequencer.c:875
+#: sequencer.c:879
 msgid "cannot resolve HEAD"
 msgstr "kann HEAD nicht auflösen"
 
-#: sequencer.c:877
+#: sequencer.c:881
 msgid "cannot abort from a branch yet to be born"
 msgstr "kann nicht abbrechen: bin auf einem Branch, der noch geboren wird"
 
-#: sequencer.c:899 builtin/apply.c:4128
+#: sequencer.c:903 builtin/apply.c:4128
 #, c-format
 msgid "cannot open %s: %s"
 msgstr "Kann %s nicht öffnen: %s"
 
-#: sequencer.c:902
+#: sequencer.c:906
 #, c-format
 msgid "cannot read %s: %s"
 msgstr "Kann %s nicht lesen: %s"
 
-#: sequencer.c:903
+#: sequencer.c:907
 msgid "unexpected end of file"
 msgstr "Unerwartetes Dateiende"
 
-#: sequencer.c:909
+#: sequencer.c:913
 #, c-format
 msgid "stored pre-cherry-pick HEAD file '%s' is corrupt"
 msgstr "gespeicherte \"pre-cherry-pick\" HEAD Datei '%s' ist beschädigt"
 
-#: sequencer.c:932
+#: sequencer.c:936
 #, c-format
 msgid "Could not format %s."
 msgstr "Konnte %s nicht formatieren."
 
-#: sequencer.c:1077
+#: sequencer.c:1081
 #, c-format
 msgid "%s: can't cherry-pick a %s"
 msgstr "%s: %s kann nicht in \"cherry-pick\" benutzt werden"
 
-#: sequencer.c:1080
+#: sequencer.c:1084
 #, c-format
 msgid "%s: bad revision"
 msgstr "%s: ungültiger Commit"
 
-#: sequencer.c:1114
+#: sequencer.c:1118
 msgid "Can't revert as initial commit"
 msgstr "Kann nicht als allerersten Commit einen Revert ausführen."
 
-#: sequencer.c:1115
+#: sequencer.c:1119
 msgid "Can't cherry-pick into empty head"
 msgstr "Kann nicht als allerersten Commit einen Cherry-Pick ausführen."
 
 #: sha1_name.c:440
 msgid ""
 "Git normally never creates a ref that ends with 40 hex characters\n"
@@ -1474,44 +1474,44 @@
 msgstr "Konnte Eintrag '%s' nicht aus .gitmodules entfernen"
 
 #: submodule.c:120
 msgid "staging updated .gitmodules failed"
 msgstr "Konnte aktualisierte .gitmodules-Datei nicht zum Commit vormerken"
 
-#: submodule.c:1111 builtin/init-db.c:363
+#: submodule.c:1111 builtin/init-db.c:371
 #, c-format
 msgid "Could not create git link %s"
 msgstr "Konnte git-Verweis %s nicht erstellen"
 
 #: submodule.c:1122
 #, c-format
 msgid "Could not set core.worktree in %s"
 msgstr "Konnte core.worktree in '%s' nicht setzen."
 
-#: trailer.c:499 trailer.c:503 trailer.c:507 trailer.c:561 trailer.c:565
-#: trailer.c:569
+#: trailer.c:500 trailer.c:504 trailer.c:508 trailer.c:562 trailer.c:566
+#: trailer.c:570
 #, c-format
 msgid "unknown value '%s' for key '%s'"
 msgstr "unbekannter Wert '%s' für Schlüssel %s"
 
-#: trailer.c:551 trailer.c:556 builtin/remote.c:288
+#: trailer.c:552 trailer.c:557 builtin/remote.c:290
 #, c-format
 msgid "more than one %s"
 msgstr "mehr als ein %s"
 
-#: trailer.c:589
+#: trailer.c:590
 #, c-format
 msgid "empty trailer token in trailer '%.*s'"
 msgstr "leerer Anhang-Token in Anhang '%.*s'"
 
-#: trailer.c:709
+#: trailer.c:710
 #, c-format
 msgid "could not read input file '%s'"
 msgstr "Konnte Eingabe-Datei '%s' nicht lesen"
 
-#: trailer.c:712
+#: trailer.c:713
 msgid "could not read from stdin"
 msgstr "konnte nicht von der Standard-Eingabe lesen"
 
 #: unpack-trees.c:202
 msgid "Checking out files"
 msgstr "Checke Dateien aus"
@@ -1628,14 +1628,14 @@
 "  (benutzen Sie \"git checkout -- <Datei>...\", um die Änderungen im "
 "Arbeitsverzeichnis zu verwerfen)"
 
 #: wt-status.c:225
 msgid "  (commit or discard the untracked or modified content in submodules)"
 msgstr ""
-"  (committen oder verwerfen Sie den unbeobachteten oder geänderten Inhalt in "
-"den Submodulen)"
+"  (committen oder verwerfen Sie den unversionierten oder geänderten Inhalt "
+"in den Submodulen)"
 
 #: wt-status.c:237
 #, c-format
 msgid "  (use \"git %s <file>...\" to include in what will be committed)"
 msgstr ""
 "  (benutzen Sie \"git %s <Datei>...\", um die Änderungen zum Commit "
@@ -1713,325 +1713,325 @@
 #: wt-status.c:372
 msgid "modified content, "
 msgstr "geänderter Inhalt, "
 
 #: wt-status.c:374
 msgid "untracked content, "
-msgstr "unbeobachteter Inhalt, "
+msgstr "unversionierter Inhalt, "
 
 #: wt-status.c:391
 #, c-format
 msgid "bug: unhandled diff status %c"
 msgstr "Fehler: unbehandelter Differenz-Status %c"
 
-#: wt-status.c:761
+#: wt-status.c:758
 msgid "Submodules changed but not updated:"
 msgstr "Submodule geändert, aber nicht aktualisiert:"
 
-#: wt-status.c:763
+#: wt-status.c:760
 msgid "Submodule changes to be committed:"
 msgstr "Änderungen in Submodul zum Committen:"
 
-#: wt-status.c:842
+#: wt-status.c:839
 msgid ""
 "Do not touch the line above.\n"
 "Everything below will be removed."
 msgstr ""
 "Ändern Sie nicht die obige Zeile.\n"
 "Alles unterhalb von ihr wird entfernt."
 
-#: wt-status.c:933
+#: wt-status.c:930
 msgid "You have unmerged paths."
 msgstr "Sie haben nicht zusammengeführte Pfade."
 
-#: wt-status.c:936
+#: wt-status.c:933
 msgid "  (fix conflicts and run \"git commit\")"
 msgstr " (beheben Sie die Konflikte und führen Sie \"git commit\" aus)"
 
-#: wt-status.c:939
+#: wt-status.c:936
 msgid "All conflicts fixed but you are still merging."
 msgstr "Alle Konflikte sind behoben, aber Sie sind immer noch beim Merge."
 
-#: wt-status.c:942
+#: wt-status.c:939
 msgid "  (use \"git commit\" to conclude merge)"
 msgstr "  (benutzen Sie \"git commit\", um den Merge abzuschließen)"
 
-#: wt-status.c:952
+#: wt-status.c:949
 msgid "You are in the middle of an am session."
 msgstr "Eine \"am\"-Sitzung ist im Gange."
 
-#: wt-status.c:955
+#: wt-status.c:952
 msgid "The current patch is empty."
 msgstr "Der aktuelle Patch ist leer."
 
-#: wt-status.c:959
+#: wt-status.c:956
 msgid "  (fix conflicts and then run \"git am --continue\")"
 msgstr ""
 "  (beheben Sie die Konflikte und führen Sie dann \"git am --continue\" aus)"
 
-#: wt-status.c:961
+#: wt-status.c:958
 msgid "  (use \"git am --skip\" to skip this patch)"
 msgstr "  (benutzen Sie \"git am --skip\", um diesen Patch auszulassen)"
 
-#: wt-status.c:963
+#: wt-status.c:960
 msgid "  (use \"git am --abort\" to restore the original branch)"
 msgstr ""
 "  (benutzen Sie \"git am --abort\", um den ursprünglichen Branch "
 "wiederherzustellen)"
 
-#: wt-status.c:1023 wt-status.c:1040
+#: wt-status.c:1020 wt-status.c:1037
 #, c-format
 msgid "You are currently rebasing branch '%s' on '%s'."
 msgstr "Sie sind gerade beim Rebase von Branch '%s' auf '%s'."
 
-#: wt-status.c:1028 wt-status.c:1045
+#: wt-status.c:1025 wt-status.c:1042
 msgid "You are currently rebasing."
 msgstr "Sie sind gerade beim Rebase."
 
-#: wt-status.c:1031
+#: wt-status.c:1028
 msgid "  (fix conflicts and then run \"git rebase --continue\")"
 msgstr ""
 "  (beheben Sie die Konflikte und führen Sie dann \"git rebase --continue\" "
 "aus)"
 
-#: wt-status.c:1033
+#: wt-status.c:1030
 msgid "  (use \"git rebase --skip\" to skip this patch)"
 msgstr "  (benutzen Sie \"git rebase --skip\", um diesen Patch auszulassen)"
 
-#: wt-status.c:1035
+#: wt-status.c:1032
 msgid "  (use \"git rebase --abort\" to check out the original branch)"
 msgstr ""
 "  (benutzen Sie \"git rebase --abort\", um den ursprünglichen Branch "
 "auszuchecken)"
 
-#: wt-status.c:1048
+#: wt-status.c:1045
 msgid "  (all conflicts fixed: run \"git rebase --continue\")"
 msgstr "  (alle Konflikte behoben: führen Sie \"git rebase --continue\" aus)"
 
-#: wt-status.c:1052
+#: wt-status.c:1049
 #, c-format
 msgid ""
 "You are currently splitting a commit while rebasing branch '%s' on '%s'."
 msgstr ""
 "Sie teilen gerade einen Commit auf, während ein Rebase von Branch '%s' auf "
 "'%s' im Gange ist."
 
-#: wt-status.c:1057
+#: wt-status.c:1054
 msgid "You are currently splitting a commit during a rebase."
 msgstr "Sie teilen gerade einen Commit während eines Rebase auf."
 
-#: wt-status.c:1060
+#: wt-status.c:1057
 msgid "  (Once your working directory is clean, run \"git rebase --continue\")"
 msgstr ""
 "  (Sobald Ihr Arbeitsverzeichnis unverändert ist, führen Sie \"git rebase --"
 "continue\" aus)"
 
-#: wt-status.c:1064
+#: wt-status.c:1061
 #, c-format
 msgid "You are currently editing a commit while rebasing branch '%s' on '%s'."
 msgstr ""
 "Sie editieren gerade einen Commit während eines Rebase von Branch '%s' auf "
 "'%s'."
 
-#: wt-status.c:1069
+#: wt-status.c:1066
 msgid "You are currently editing a commit during a rebase."
 msgstr "Sie editieren gerade einen Commit während eines Rebase."
 
-#: wt-status.c:1072
+#: wt-status.c:1069
 msgid "  (use \"git commit --amend\" to amend the current commit)"
 msgstr ""
 "  (benutzen Sie \"git commit --amend\", um den aktuellen Commit "
 "nachzubessern)"
 
-#: wt-status.c:1074
+#: wt-status.c:1071
 msgid ""
 "  (use \"git rebase --continue\" once you are satisfied with your changes)"
 msgstr ""
 "  (benutzen Sie \"git rebase --continue\" sobald Ihre Änderungen "
 "abgeschlossen sind)"
 
-#: wt-status.c:1084
+#: wt-status.c:1081
 #, c-format
 msgid "You are currently cherry-picking commit %s."
 msgstr "Sie führen gerade \"cherry-pick\" von Commit %s aus."
 
-#: wt-status.c:1089
+#: wt-status.c:1086
 msgid "  (fix conflicts and run \"git cherry-pick --continue\")"
 msgstr ""
 "  (beheben Sie die Konflikte und führen Sie dann \"git cherry-pick --continue"
 "\" aus)"
 
-#: wt-status.c:1092
+#: wt-status.c:1089
 msgid "  (all conflicts fixed: run \"git cherry-pick --continue\")"
 msgstr ""
 "  (alle Konflikte behoben: führen Sie \"git cherry-pick --continue\" aus)"
 
-#: wt-status.c:1094
+#: wt-status.c:1091
 msgid "  (use \"git cherry-pick --abort\" to cancel the cherry-pick operation)"
 msgstr ""
 "  (benutzen Sie \"git cherry-pick --abort\", um die Cherry-Pick-Operation "
 "abzubrechen)"
 
-#: wt-status.c:1103
+#: wt-status.c:1100
 #, c-format
 msgid "You are currently reverting commit %s."
 msgstr "Sie sind gerade an einem Revert von Commit '%s'."
 
-#: wt-status.c:1108
+#: wt-status.c:1105
 msgid "  (fix conflicts and run \"git revert --continue\")"
 msgstr ""
 "  (beheben Sie die Konflikte und führen Sie dann \"git revert --continue\" "
 "aus)"
 
-#: wt-status.c:1111
+#: wt-status.c:1108
 msgid "  (all conflicts fixed: run \"git revert --continue\")"
 msgstr "  (alle Konflikte behoben: führen Sie \"git revert --continue\" aus)"
 
-#: wt-status.c:1113
+#: wt-status.c:1110
 msgid "  (use \"git revert --abort\" to cancel the revert operation)"
 msgstr ""
 "  (benutzen Sie \"git revert --abort\", um die Revert-Operation abzubrechen)"
 
-#: wt-status.c:1124
+#: wt-status.c:1121
 #, c-format
 msgid "You are currently bisecting, started from branch '%s'."
 msgstr "Sie sind gerade bei einer binären Suche, gestartet von Branch '%s'."
 
-#: wt-status.c:1128
+#: wt-status.c:1125
 msgid "You are currently bisecting."
 msgstr "Sie sind gerade bei einer binären Suche."
 
-#: wt-status.c:1131
+#: wt-status.c:1128
 msgid "  (use \"git bisect reset\" to get back to the original branch)"
 msgstr ""
 "  (benutzen Sie \"git bisect reset\", um zum ursprünglichen Branch "
 "zurückzukehren)"
 
-#: wt-status.c:1306
+#: wt-status.c:1303
 msgid "On branch "
 msgstr "Auf Branch "
 
-#: wt-status.c:1313
+#: wt-status.c:1310
 msgid "rebase in progress; onto "
 msgstr "Rebase im Gange; auf "
 
-#: wt-status.c:1320
+#: wt-status.c:1317
 msgid "HEAD detached at "
 msgstr "HEAD losgelöst bei "
 
-#: wt-status.c:1322
+#: wt-status.c:1319
 msgid "HEAD detached from "
 msgstr "HEAD losgelöst von "
 
-#: wt-status.c:1325
+#: wt-status.c:1322
 msgid "Not currently on any branch."
 msgstr "Im Moment auf keinem Branch."
 
-#: wt-status.c:1342
+#: wt-status.c:1339
 msgid "Initial commit"
 msgstr "Initialer Commit"
 
-#: wt-status.c:1356
+#: wt-status.c:1353
 msgid "Untracked files"
-msgstr "Unbeobachtete Dateien"
+msgstr "Unversionierte Dateien"
 
-#: wt-status.c:1358
+#: wt-status.c:1355
 msgid "Ignored files"
 msgstr "Ignorierte Dateien"
 
-#: wt-status.c:1362
+#: wt-status.c:1359
 #, c-format
 msgid ""
 "It took %.2f seconds to enumerate untracked files. 'status -uno'\n"
 "may speed it up, but you have to be careful not to forget to add\n"
 "new files yourself (see 'git help status')."
 msgstr ""
-"Es dauerte %.2f Sekunden die unbeobachteten Dateien zu bestimmen.\n"
+"Es dauerte %.2f Sekunden die unversionierten Dateien zu bestimmen.\n"
 "'status -uno' könnte das beschleunigen, aber Sie müssen darauf achten,\n"
 "neue Dateien selbstständig hinzuzufügen (siehe 'git help status')."
 
-#: wt-status.c:1368
+#: wt-status.c:1365
 #, c-format
 msgid "Untracked files not listed%s"
-msgstr "Unbeobachtete Dateien nicht aufgelistet%s"
+msgstr "Unversionierte Dateien nicht aufgelistet%s"
 
-#: wt-status.c:1370
+#: wt-status.c:1367
 msgid " (use -u option to show untracked files)"
-msgstr " (benutzen Sie die Option -u, um unbeobachtete Dateien anzuzeigen)"
+msgstr " (benutzen Sie die Option -u, um unversionierte Dateien anzuzeigen)"
 
-#: wt-status.c:1376
+#: wt-status.c:1373
 msgid "No changes"
 msgstr "Keine Änderungen"
 
-#: wt-status.c:1381
+#: wt-status.c:1378
 #, c-format
 msgid "no changes added to commit (use \"git add\" and/or \"git commit -a\")\n"
 msgstr ""
 "keine Änderungen zum Commit vorgemerkt (benutzen Sie \"git add\" und/oder "
 "\"git commit -a\")\n"
 
-#: wt-status.c:1384
+#: wt-status.c:1381
 #, c-format
 msgid "no changes added to commit\n"
 msgstr "keine Änderungen zum Commit vorgemerkt\n"
 
-#: wt-status.c:1387
+#: wt-status.c:1384
 #, c-format
 msgid ""
 "nothing added to commit but untracked files present (use \"git add\" to "
 "track)\n"
 msgstr ""
-"nichts zum Commit vorgemerkt, aber es gibt unbeobachtete Dateien (benutzen "
-"Sie \"git add\" zum Beobachten)\n"
+"nichts zum Commit vorgemerkt, aber es gibt unversionierte Dateien (benutzen "
+"Sie \"git add\" zum Versionieren)\n"
 
-#: wt-status.c:1390
+#: wt-status.c:1387
 #, c-format
 msgid "nothing added to commit but untracked files present\n"
-msgstr "nichts zum Commit vorgemerkt, aber es gibt unbeobachtete Dateien\n"
+msgstr "nichts zum Commit vorgemerkt, aber es gibt unversionierte Dateien\n"
 
-#: wt-status.c:1393
+#: wt-status.c:1390
 #, c-format
 msgid "nothing to commit (create/copy files and use \"git add\" to track)\n"
 msgstr ""
 "nichts zu committen (Erstellen/Kopieren Sie Dateien und benutzen Sie \"git "
-"add\" zum Beobachten)\n"
+"add\" zum Versionieren)\n"
 
-#: wt-status.c:1396 wt-status.c:1401
+#: wt-status.c:1393 wt-status.c:1398
 #, c-format
 msgid "nothing to commit\n"
 msgstr "nichts zu committen\n"
 
-#: wt-status.c:1399
+#: wt-status.c:1396
 #, c-format
 msgid "nothing to commit (use -u to show untracked files)\n"
 msgstr ""
-"nichts zu committen (benutzen Sie die Option -u, um unbeobachtete Dateien "
+"nichts zu committen (benutzen Sie die Option -u, um unversionierte Dateien "
 "anzuzeigen)\n"
 
-#: wt-status.c:1403
+#: wt-status.c:1400
 #, c-format
 msgid "nothing to commit, working directory clean\n"
 msgstr "nichts zu committen, Arbeitsverzeichnis unverändert\n"
 
-#: wt-status.c:1512
+#: wt-status.c:1509
 msgid "HEAD (no branch)"
 msgstr "HEAD (kein Branch)"
 
-#: wt-status.c:1518
+#: wt-status.c:1515
 msgid "Initial commit on "
 msgstr "Initialer Commit auf "
 
-#: wt-status.c:1550
+#: wt-status.c:1547
 msgid "gone"
 msgstr "entfernt"
 
-#: wt-status.c:1552 wt-status.c:1560
+#: wt-status.c:1549 wt-status.c:1557
 msgid "behind "
 msgstr "hinterher "
 
-#: compat/precompose_utf8.c:55 builtin/clone.c:357
+#: compat/precompose_utf8.c:55 builtin/clone.c:360
 #, c-format
 msgid "failed to unlink '%s'"
 msgstr "Konnte '%s' nicht entfernen."
 
 #: builtin/add.c:22
 msgid "git add [options] [--] <pathspec>..."
@@ -2087,28 +2087,28 @@
 msgid "The following paths are ignored by one of your .gitignore files:\n"
 msgstr ""
 "Die folgenden Pfade werden durch eine Ihrer \".gitignore\" Dateien "
 "ignoriert:\n"
 
 #: builtin/add.c:248 builtin/clean.c:875 builtin/fetch.c:108 builtin/mv.c:110
-#: builtin/prune-packed.c:55 builtin/push.c:499 builtin/remote.c:1375
+#: builtin/prune-packed.c:55 builtin/push.c:499 builtin/remote.c:1372
 #: builtin/rm.c:269
 msgid "dry run"
 msgstr "Probelauf"
 
 #: builtin/add.c:249 builtin/apply.c:4415 builtin/check-ignore.c:19
-#: builtin/commit.c:1362 builtin/count-objects.c:63 builtin/fsck.c:608
+#: builtin/commit.c:1326 builtin/count-objects.c:63 builtin/fsck.c:608
 #: builtin/log.c:1617 builtin/mv.c:109 builtin/read-tree.c:114
 msgid "be verbose"
 msgstr "erweiterte Ausgaben"
 
 #: builtin/add.c:251
 msgid "interactive picking"
 msgstr "interaktives Auswählen"
 
-#: builtin/add.c:252 builtin/checkout.c:1108 builtin/reset.c:286
+#: builtin/add.c:252 builtin/checkout.c:1126 builtin/reset.c:286
 msgid "select hunks interactively"
 msgstr "Blöcke interaktiv auswählen"
 
 #: builtin/add.c:253
 msgid "edit current diff and apply"
 msgstr "aktuelle Unterschiede editieren und anwenden"
@@ -2116,22 +2116,22 @@
 #: builtin/add.c:254
 msgid "allow adding otherwise ignored files"
 msgstr "das Hinzufügen andernfalls ignorierter Dateien erlauben"
 
 #: builtin/add.c:255
 msgid "update tracked files"
-msgstr "beobachtete Dateien aktualisieren"
+msgstr "versionierte Dateien aktualisieren"
 
 #: builtin/add.c:256
 msgid "record only the fact that the path will be added later"
 msgstr "nur speichern, dass der Pfad später hinzugefügt werden soll"
 
 #: builtin/add.c:257
 msgid "add changes from all tracked and untracked files"
 msgstr ""
-"Änderungen von allen beobachteten und unbeobachteten Dateien hinzufügen"
+"Änderungen von allen versionierten und unversionierten Dateien hinzufügen"
 
 #: builtin/add.c:260
 msgid "ignore paths removed in the working tree (same as --no-all)"
 msgstr "gelöschte Pfade im Arbeitsverzeichnis ignorieren (genau wie --no-all)"
 
 #: builtin/add.c:262
@@ -2150,16 +2150,12 @@
 
 #: builtin/add.c:286
 #, c-format
 msgid "Use -f if you really want to add them.\n"
 msgstr "Verwenden Sie -f wenn Sie diese wirklich hinzufügen möchten.\n"
 
-#: builtin/add.c:287
-msgid "no files added"
-msgstr "keine Dateien hinzugefügt"
-
 #: builtin/add.c:293
 msgid "adding files failed"
 msgstr "Hinzufügen von Dateien fehlgeschlagen"
 
 #: builtin/add.c:329
 msgid "-A and -u are mutually incompatible"
@@ -2439,13 +2435,13 @@
 
 #: builtin/apply.c:3653
 #, c-format
 msgid "Checking patch %s..."
 msgstr "Prüfe Patch %s..."
 
-#: builtin/apply.c:3746 builtin/checkout.c:213 builtin/reset.c:135
+#: builtin/apply.c:3746 builtin/checkout.c:231 builtin/reset.c:135
 #, c-format
 msgid "make_cache_entry failed for path '%s'"
 msgstr "make_cache_entry für Pfad '%s' fehlgeschlagen"
 
 #: builtin/apply.c:3889
 #, c-format
@@ -2518,13 +2514,13 @@
 msgstr "nicht erkannte Eingabe"
 
 #: builtin/apply.c:4245
 msgid "unable to read index file"
 msgstr "Konnte Staging-Area-Datei nicht lesen"
 
-#: builtin/apply.c:4362 builtin/apply.c:4365 builtin/clone.c:91
+#: builtin/apply.c:4362 builtin/apply.c:4365 builtin/clone.c:92
 #: builtin/fetch.c:93
 msgid "path"
 msgstr "Pfad"
 
 #: builtin/apply.c:4363
 msgid "don't apply changes matching the given path"
@@ -3082,14 +3078,14 @@
 
 #: builtin/branch.c:824
 msgid "act on remote-tracking branches"
 msgstr "auf Remote-Tracking-Branches wirken"
 
 #: builtin/branch.c:827 builtin/branch.c:833 builtin/branch.c:854
-#: builtin/branch.c:860 builtin/commit.c:1622 builtin/commit.c:1623
-#: builtin/commit.c:1624 builtin/commit.c:1625 builtin/tag.c:616
+#: builtin/branch.c:860 builtin/commit.c:1586 builtin/commit.c:1587
+#: builtin/commit.c:1588 builtin/commit.c:1589 builtin/tag.c:616
 #: builtin/tag.c:622
 msgid "commit"
 msgstr "Commit"
 
 #: builtin/branch.c:828 builtin/branch.c:834
 msgid "print only branches that contain the commit"
@@ -3130,14 +3126,14 @@
 
 #: builtin/branch.c:850
 msgid "edit the description for the branch"
 msgstr "die Beschreibung für den Branch bearbeiten"
 
 #: builtin/branch.c:851
-msgid "force creation (when already exists)"
-msgstr "Branch auch erzeugen, wenn dieser bereits existiert"
+msgid "force creation, move/rename, deletion"
+msgstr "Erstellung, Verschiebung/Umbenennung oder Löschung erzwingen"
 
 #: builtin/branch.c:854
 msgid "print only not merged branches"
 msgstr "nur Branches ausgeben, die nicht zusammengeführt sind"
 
 #: builtin/branch.c:860
@@ -3149,120 +3145,120 @@
 msgstr "Branches in Spalten auflisten"
 
 #: builtin/branch.c:877
 msgid "Failed to resolve HEAD as a valid ref."
 msgstr "Konnte HEAD nicht als gültige Referenz auflösen."
 
-#: builtin/branch.c:881 builtin/clone.c:634
+#: builtin/branch.c:881 builtin/clone.c:637
 msgid "HEAD not found below refs/heads!"
 msgstr "HEAD wurde nicht unter \"refs/heads\" gefunden!"
 
 #: builtin/branch.c:903
 msgid "--column and --verbose are incompatible"
 msgstr "Die Optionen --column und --verbose sind inkompatibel."
 
-#: builtin/branch.c:909 builtin/branch.c:948
+#: builtin/branch.c:914 builtin/branch.c:953
 msgid "branch name required"
 msgstr "Branchname erforderlich"
 
-#: builtin/branch.c:924
+#: builtin/branch.c:929
 msgid "Cannot give description to detached HEAD"
 msgstr "zu losgelöstem HEAD kann keine Beschreibung hinterlegt werden"
 
-#: builtin/branch.c:929
+#: builtin/branch.c:934
 msgid "cannot edit description of more than one branch"
 msgstr "Beschreibung von mehr als einem Branch kann nicht bearbeitet werden"
 
-#: builtin/branch.c:936
+#: builtin/branch.c:941
 #, c-format
 msgid "No commit on branch '%s' yet."
 msgstr "Noch kein Commit in Branch '%s'."
 
-#: builtin/branch.c:939
+#: builtin/branch.c:944
 #, c-format
 msgid "No branch named '%s'."
 msgstr "Branch '%s' nicht vorhanden."
 
-#: builtin/branch.c:954
+#: builtin/branch.c:959
 msgid "too many branches for a rename operation"
 msgstr "zu viele Branches für eine Umbenennen-Operation angegeben"
 
-#: builtin/branch.c:959
+#: builtin/branch.c:964
 msgid "too many branches to set new upstream"
 msgstr "zu viele Branches angegeben, um Upstream-Branch zu setzen"
 
-#: builtin/branch.c:963
+#: builtin/branch.c:968
 #, c-format
 msgid ""
 "could not set upstream of HEAD to %s when it does not point to any branch."
 msgstr ""
 "Konnte keinen neuen Upstream-Branch von HEAD zu %s setzen, da dieser auf\n"
 "keinen Branch zeigt."
 
-#: builtin/branch.c:966 builtin/branch.c:988 builtin/branch.c:1009
+#: builtin/branch.c:971 builtin/branch.c:993 builtin/branch.c:1014
 #, c-format
 msgid "no such branch '%s'"
 msgstr "Kein solcher Branch '%s'"
 
-#: builtin/branch.c:970
+#: builtin/branch.c:975
 #, c-format
 msgid "branch '%s' does not exist"
 msgstr "Branch '%s' existiert nicht"
 
-#: builtin/branch.c:982
+#: builtin/branch.c:987
 msgid "too many branches to unset upstream"
 msgstr ""
 "zu viele Branches angegeben, um Konfiguration zu Upstream-Branch zu entfernen"
 
-#: builtin/branch.c:986
+#: builtin/branch.c:991
 msgid "could not unset upstream of HEAD when it does not point to any branch."
 msgstr ""
 "Konnte Konfiguration zu Upstream-Branch von HEAD nicht entfernen, da dieser\n"
 "auf keinen Branch zeigt."
 
-#: builtin/branch.c:992
+#: builtin/branch.c:997
 #, c-format
 msgid "Branch '%s' has no upstream information"
 msgstr "Branch '%s' hat keinen Upstream-Branch gesetzt"
 
-#: builtin/branch.c:1006
+#: builtin/branch.c:1011
 msgid "it does not make sense to create 'HEAD' manually"
 msgstr "'HEAD' darf nicht manuell erstellt werden"
 
-#: builtin/branch.c:1012
+#: builtin/branch.c:1017
 msgid "-a and -r options to 'git branch' do not make sense with a branch name"
 msgstr ""
 "Die Optionen -a und -r bei 'git branch' können nicht gemeimsam mit einem "
 "Branchnamen verwendet werden."
 
-#: builtin/branch.c:1015
+#: builtin/branch.c:1020
 #, c-format
 msgid ""
 "The --set-upstream flag is deprecated and will be removed. Consider using --"
 "track or --set-upstream-to\n"
 msgstr ""
 "Die --set-upstream Option ist veraltet und wird entfernt. Benutzen Sie --"
 "track oder --set-upstream-to\n"
 
-#: builtin/branch.c:1032
+#: builtin/branch.c:1037
 #, c-format
 msgid ""
 "\n"
 "If you wanted to make '%s' track '%s', do this:\n"
 "\n"
 msgstr ""
 "\n"
 "Wenn Sie wollten, dass '%s' den Branch '%s' als Upstream-Branch hat, führen "
 "Sie aus:\n"
 
-#: builtin/branch.c:1033
+#: builtin/branch.c:1038
 #, c-format
 msgid "    git branch -d %s\n"
 msgstr "    git branch -d %s\n"
 
-#: builtin/branch.c:1034
+#: builtin/branch.c:1039
 #, c-format
 msgid "    git branch --set-upstream-to %s\n"
 msgstr "    git branch --set-upstream-to %s\n"
 
 #: builtin/bundle.c:47
 #, c-format
@@ -3274,51 +3270,51 @@
 msgstr "Um ein Paket zu erstellen wird ein Repository benötigt."
 
 #: builtin/bundle.c:60
 msgid "Need a repository to unbundle."
 msgstr "Zum Entpacken wird ein Repository benötigt."
 
-#: builtin/cat-file.c:332
+#: builtin/cat-file.c:328
 msgid "git cat-file (-t|-s|-e|-p|<type>|--textconv) <object>"
 msgstr "git cat-file (-t|-s|-e|-p|<Art>|--textconv) <Objekt>"
 
-#: builtin/cat-file.c:333
+#: builtin/cat-file.c:329
 msgid "git cat-file (--batch|--batch-check) < <list_of_objects>"
 msgstr "git cat-file (--batch|--batch-check) < <Liste_von_Objekten>"
 
-#: builtin/cat-file.c:370
+#: builtin/cat-file.c:366
 msgid "<type> can be one of: blob, tree, commit, tag"
 msgstr "<Art> kann sein: blob, tree, commit, tag"
 
-#: builtin/cat-file.c:371
+#: builtin/cat-file.c:367
 msgid "show object type"
 msgstr "Objektart anzeigen"
 
-#: builtin/cat-file.c:372
+#: builtin/cat-file.c:368
 msgid "show object size"
 msgstr "Objektgröße anzeigen"
 
-#: builtin/cat-file.c:374
+#: builtin/cat-file.c:370
 msgid "exit with zero when there's no error"
 msgstr "mit Rückgabewert 0 beenden, wenn kein Fehler aufgetreten ist"
 
-#: builtin/cat-file.c:375
+#: builtin/cat-file.c:371
 msgid "pretty-print object's content"
 msgstr "ansprechende Anzeige des Objektinhaltes"
 
-#: builtin/cat-file.c:377
+#: builtin/cat-file.c:373
 msgid "for blob objects, run textconv on object's content"
 msgstr "eine Textkonvertierung auf den Inhalt von Blob-Objekten ausführen"
 
-#: builtin/cat-file.c:379
+#: builtin/cat-file.c:375
 msgid "show info and content of objects fed from the standard input"
 msgstr ""
 "Anzeige von Informationen und Inhalt von Objekten, gelesen von der Standard-"
 "Eingabe"
 
-#: builtin/cat-file.c:382
+#: builtin/cat-file.c:378
 msgid "show info about objects fed from the standard input"
 msgstr ""
 "Anzeige von Informationen über Objekte, gelesen von der Standard-Eingabe"
 
 #: builtin/check-attr.c:11
 msgid "git check-attr [-a | --all | attr...] [--] pathname..."
@@ -3342,13 +3338,13 @@
 msgstr "Dateinamen von der Standard-Eingabe lesen"
 
 #: builtin/check-attr.c:23 builtin/check-ignore.c:24
 msgid "terminate input and output records by a NUL character"
 msgstr "Einträge von Ein- und Ausgabe mit NUL-Zeichen abschließen"
 
-#: builtin/check-ignore.c:18 builtin/checkout.c:1089 builtin/gc.c:274
+#: builtin/check-ignore.c:18 builtin/checkout.c:1107 builtin/gc.c:274
 msgid "suppress progress reporting"
 msgstr "Fortschrittsanzeige unterdrücken"
 
 #: builtin/check-ignore.c:26
 msgid "show non-matching input paths"
 msgstr "Eingabe-Pfade ohne Übereinstimmungen anzeigen"
@@ -3451,135 +3447,135 @@
 msgstr "git checkout [Optionen] <Branch>"
 
 #: builtin/checkout.c:26
 msgid "git checkout [options] [<branch>] -- <file>..."
 msgstr "git checkout [Optionen] [<Branch>] -- <Datei>..."
 
-#: builtin/checkout.c:114 builtin/checkout.c:147
+#: builtin/checkout.c:132 builtin/checkout.c:165
 #, c-format
 msgid "path '%s' does not have our version"
 msgstr "Pfad '%s' hat nicht unsere Version."
 
-#: builtin/checkout.c:116 builtin/checkout.c:149
+#: builtin/checkout.c:134 builtin/checkout.c:167
 #, c-format
 msgid "path '%s' does not have their version"
 msgstr "Pfad '%s' hat nicht deren Version."
 
-#: builtin/checkout.c:132
+#: builtin/checkout.c:150
 #, c-format
 msgid "path '%s' does not have all necessary versions"
 msgstr "Pfad '%s' hat nicht alle notwendigen Versionen."
 
-#: builtin/checkout.c:176
+#: builtin/checkout.c:194
 #, c-format
 msgid "path '%s' does not have necessary versions"
 msgstr "Pfad '%s' hat nicht die notwendigen Versionen."
 
-#: builtin/checkout.c:193
+#: builtin/checkout.c:211
 #, c-format
 msgid "path '%s': cannot merge"
 msgstr "Pfad '%s': kann nicht zusammenführen"
 
-#: builtin/checkout.c:210
+#: builtin/checkout.c:228
 #, c-format
 msgid "Unable to add merge result for '%s'"
 msgstr "Konnte Merge-Ergebnis von '%s' nicht hinzufügen."
 
-#: builtin/checkout.c:231 builtin/checkout.c:234 builtin/checkout.c:237
-#: builtin/checkout.c:240
+#: builtin/checkout.c:249 builtin/checkout.c:252 builtin/checkout.c:255
+#: builtin/checkout.c:258
 #, c-format
 msgid "'%s' cannot be used with updating paths"
 msgstr "'%s' kann nicht mit Pfaden verwendet werden"
 
-#: builtin/checkout.c:243 builtin/checkout.c:246
+#: builtin/checkout.c:261 builtin/checkout.c:264
 #, c-format
 msgid "'%s' cannot be used with %s"
 msgstr "'%s' kann nicht mit '%s' verwendet werden"
 
-#: builtin/checkout.c:249
+#: builtin/checkout.c:267
 #, c-format
 msgid "Cannot update paths and switch to branch '%s' at the same time."
 msgstr ""
 "Kann nicht gleichzeitig Pfade aktualisieren und zu Branch '%s' wechseln"
 
-#: builtin/checkout.c:260 builtin/checkout.c:449
+#: builtin/checkout.c:278 builtin/checkout.c:467
 msgid "corrupt index file"
 msgstr "beschädigte Staging-Area-Datei"
 
-#: builtin/checkout.c:320 builtin/checkout.c:327
+#: builtin/checkout.c:338 builtin/checkout.c:345
 #, c-format
 msgid "path '%s' is unmerged"
 msgstr "Pfad '%s' ist nicht zusammengeführt."
 
-#: builtin/checkout.c:471
+#: builtin/checkout.c:489
 msgid "you need to resolve your current index first"
 msgstr "Sie müssen zuerst Ihre aktuelle Staging-Area auflösen."
 
-#: builtin/checkout.c:597
+#: builtin/checkout.c:615
 #, c-format
 msgid "Can not do reflog for '%s'\n"
 msgstr "Konnte \"reflog\" für '%s' nicht durchführen\n"
 
-#: builtin/checkout.c:635
+#: builtin/checkout.c:653
 msgid "HEAD is now at"
 msgstr "HEAD ist jetzt bei"
 
-#: builtin/checkout.c:642
+#: builtin/checkout.c:660
 #, c-format
 msgid "Reset branch '%s'\n"
 msgstr "Setze Branch '%s' neu\n"
 
-#: builtin/checkout.c:645
+#: builtin/checkout.c:663
 #, c-format
 msgid "Already on '%s'\n"
 msgstr "Bereits auf '%s'\n"
 
-#: builtin/checkout.c:649
+#: builtin/checkout.c:667
 #, c-format
 msgid "Switched to and reset branch '%s'\n"
 msgstr "Zu umgesetztem Branch '%s' gewechselt\n"
 
-#: builtin/checkout.c:651 builtin/checkout.c:1032
+#: builtin/checkout.c:669 builtin/checkout.c:1050
 #, c-format
 msgid "Switched to a new branch '%s'\n"
 msgstr "Zu neuem Branch '%s' gewechselt\n"
 
-#: builtin/checkout.c:653
+#: builtin/checkout.c:671
 #, c-format
 msgid "Switched to branch '%s'\n"
 msgstr "Zu Branch '%s' gewechselt\n"
 
-#: builtin/checkout.c:705
+#: builtin/checkout.c:723
 #, c-format
 msgid " ... and %d more.\n"
 msgstr " ... und %d weitere.\n"
 
-#: builtin/checkout.c:711
+#: builtin/checkout.c:729
 #, c-format
 msgid ""
 "Warning: you are leaving %d commit behind, not connected to\n"
 "any of your branches:\n"
 "\n"
 "%s\n"
 msgid_plural ""
 "Warning: you are leaving %d commits behind, not connected to\n"
 "any of your branches:\n"
 "\n"
 "%s\n"
 msgstr[0] ""
-"Warnung: Sie sind um %d Commit hinterher. Folgende Commits sind in\n"
+"Warnung: Sie lassen %d Commit zurück. Folgender Commit ist in\n"
 "keinem Ihrer Branches enthalten:\n"
 "\n"
 "%s\n"
 msgstr[1] ""
-"Warnung: Sie sind um %d Commits hinterher. Folgende Commits sind in\n"
+"Warnung: Sie lassen %d Commits zurück. Folgende Commits sind in\n"
 "keinem Ihrer Branches enthalten:\n"
 "\n"
 "%s\n"
 
-#: builtin/checkout.c:729
+#: builtin/checkout.c:747
 #, c-format
 msgid ""
 "If you want to keep them by creating a new branch, this may be a good time\n"
 "to do so with:\n"
 "\n"
 " git branch new_branch_name %s\n"
@@ -3588,160 +3584,160 @@
 "Wenn Sie diese durch einen neuen Branch behalten möchten, dann könnte jetzt\n"
 "ein guter Zeitpunkt sein dies zu tun mit:\n"
 "\n"
 " git branch neuer_branch_name %s\n"
 "\n"
 
-#: builtin/checkout.c:759
+#: builtin/checkout.c:777
 msgid "internal error in revision walk"
 msgstr "interner Fehler im Revisionsgang"
 
-#: builtin/checkout.c:763
+#: builtin/checkout.c:781
 msgid "Previous HEAD position was"
 msgstr "Vorherige Position von HEAD war"
 
-#: builtin/checkout.c:790 builtin/checkout.c:1027
+#: builtin/checkout.c:808 builtin/checkout.c:1045
 msgid "You are on a branch yet to be born"
 msgstr "Sie sind auf einem Branch, der noch geboren wird"
 
-#: builtin/checkout.c:934
+#: builtin/checkout.c:952
 #, c-format
 msgid "only one reference expected, %d given."
 msgstr "nur eine Referenz erwartet, %d gegeben."
 
-#: builtin/checkout.c:973
+#: builtin/checkout.c:991
 #, c-format
 msgid "invalid reference: %s"
 msgstr "Ungültige Referenz: %s"
 
-#: builtin/checkout.c:1002
+#: builtin/checkout.c:1020
 #, c-format
 msgid "reference is not a tree: %s"
 msgstr "Referenz ist kein \"Tree\"-Objekt: %s"
 
-#: builtin/checkout.c:1041
+#: builtin/checkout.c:1059
 msgid "paths cannot be used with switching branches"
 msgstr "Pfade können nicht beim Wechseln von Branches verwendet werden"
 
-#: builtin/checkout.c:1044 builtin/checkout.c:1048
+#: builtin/checkout.c:1062 builtin/checkout.c:1066
 #, c-format
 msgid "'%s' cannot be used with switching branches"
 msgstr "'%s' kann nicht beim Wechseln von Branches verwendet werden"
 
-#: builtin/checkout.c:1052 builtin/checkout.c:1055 builtin/checkout.c:1060
-#: builtin/checkout.c:1063
+#: builtin/checkout.c:1070 builtin/checkout.c:1073 builtin/checkout.c:1078
+#: builtin/checkout.c:1081
 #, c-format
 msgid "'%s' cannot be used with '%s'"
 msgstr "'%s' kann nicht mit '%s' verwendet werden"
 
-#: builtin/checkout.c:1068
+#: builtin/checkout.c:1086
 #, c-format
 msgid "Cannot switch branch to a non-commit '%s'"
 msgstr "Kann Branch nicht zu Nicht-Commit '%s' wechseln"
 
-#: builtin/checkout.c:1090 builtin/checkout.c:1092 builtin/clone.c:89
+#: builtin/checkout.c:1108 builtin/checkout.c:1110 builtin/clone.c:90
 #: builtin/remote.c:159 builtin/remote.c:161
 msgid "branch"
 msgstr "Branch"
 
-#: builtin/checkout.c:1091
+#: builtin/checkout.c:1109
 msgid "create and checkout a new branch"
 msgstr "einen neuen Branch erzeugen und auschecken"
 
-#: builtin/checkout.c:1093
+#: builtin/checkout.c:1111
 msgid "create/reset and checkout a branch"
 msgstr "einen Branch erstellen/umsetzen und auschecken"
 
-#: builtin/checkout.c:1094
+#: builtin/checkout.c:1112
 msgid "create reflog for new branch"
 msgstr "das Reflog für den neuen Branch erzeugen"
 
-#: builtin/checkout.c:1095
+#: builtin/checkout.c:1113
 msgid "detach the HEAD at named commit"
 msgstr "HEAD zu benanntem Commit setzen"
 
-#: builtin/checkout.c:1096
+#: builtin/checkout.c:1114
 msgid "set upstream info for new branch"
 msgstr "Informationen zum Upstream-Branch für den neuen Branch setzen"
 
-#: builtin/checkout.c:1098
+#: builtin/checkout.c:1116
 msgid "new-branch"
 msgstr "neuer Branch"
 
-#: builtin/checkout.c:1098
+#: builtin/checkout.c:1116
 msgid "new unparented branch"
 msgstr "neuer Branch ohne Eltern-Commit"
 
-#: builtin/checkout.c:1099
+#: builtin/checkout.c:1117
 msgid "checkout our version for unmerged files"
 msgstr "unsere Variante für nicht zusammengeführte Dateien auschecken"
 
-#: builtin/checkout.c:1101
+#: builtin/checkout.c:1119
 msgid "checkout their version for unmerged files"
 msgstr "ihre Variante für nicht zusammengeführte Dateien auschecken"
 
-#: builtin/checkout.c:1103
+#: builtin/checkout.c:1121
 msgid "force checkout (throw away local modifications)"
 msgstr "Auschecken erzwingen (verwirft lokale Änderungen)"
 
-#: builtin/checkout.c:1104
+#: builtin/checkout.c:1122
 msgid "perform a 3-way merge with the new branch"
 msgstr "einen 3-Wege-Merge mit dem neuen Branch ausführen"
 
-#: builtin/checkout.c:1105 builtin/merge.c:226
+#: builtin/checkout.c:1123 builtin/merge.c:227
 msgid "update ignored files (default)"
 msgstr "ignorierte Dateien aktualisieren (Standard)"
 
-#: builtin/checkout.c:1106 builtin/log.c:1239 parse-options.h:245
+#: builtin/checkout.c:1124 builtin/log.c:1239 parse-options.h:245
 msgid "style"
 msgstr "Stil"
 
-#: builtin/checkout.c:1107
+#: builtin/checkout.c:1125
 msgid "conflict style (merge or diff3)"
 msgstr "Konfliktstil (merge oder diff3)"
 
-#: builtin/checkout.c:1110
+#: builtin/checkout.c:1128
 msgid "do not limit pathspecs to sparse entries only"
 msgstr "keine Einschränkung bei Pfadspezifikationen zum partiellen Auschecken"
 
-#: builtin/checkout.c:1112
+#: builtin/checkout.c:1130
 msgid "second guess 'git checkout no-such-branch'"
 msgstr "second guess 'git checkout no-such-branch'"
 
-#: builtin/checkout.c:1135
+#: builtin/checkout.c:1153
 msgid "-b, -B and --orphan are mutually exclusive"
 msgstr "Die Optionen -b, -B und --orphan schließen sich gegenseitig aus."
 
-#: builtin/checkout.c:1152
+#: builtin/checkout.c:1170
 msgid "--track needs a branch name"
 msgstr "Bei der Option --track muss ein Branchname angegeben werden."
 
-#: builtin/checkout.c:1157
+#: builtin/checkout.c:1175
 msgid "Missing branch name; try -b"
 msgstr "Vermisse Branchnamen; versuchen Sie -b"
 
-#: builtin/checkout.c:1194
+#: builtin/checkout.c:1212
 msgid "invalid path specification"
 msgstr "ungültige Pfadspezifikation"
 
-#: builtin/checkout.c:1201
+#: builtin/checkout.c:1219
 #, c-format
 msgid ""
 "Cannot update paths and switch to branch '%s' at the same time.\n"
 "Did you intend to checkout '%s' which can not be resolved as commit?"
 msgstr ""
 "Kann nicht gleichzeitig Pfade aktualisieren und zu Branch '%s' wechseln.\n"
 "Haben Sie beabsichtigt '%s' auszuchecken, welcher nicht als Commit aufgelöst "
 "werden kann?"
 
-#: builtin/checkout.c:1206
+#: builtin/checkout.c:1224
 #, c-format
 msgid "git checkout: --detach does not take a path argument '%s'"
 msgstr "git checkout: --detach nimmt kein Pfad-Argument '%s'"
 
-#: builtin/checkout.c:1210
+#: builtin/checkout.c:1228
 msgid ""
 "git checkout: --ours/--theirs, --force and --merge are incompatible when\n"
 "checking out of the index."
 msgstr ""
 "git checkout: --ours/--theirs, --force und --merge sind inkompatibel wenn\n"
 "Sie aus der Staging-Area auschecken."
@@ -3927,273 +3923,289 @@
 "f gegeben; \"clean\" verweigert"
 
 #: builtin/clone.c:37
 msgid "git clone [options] [--] <repo> [<dir>]"
 msgstr "git clone [Optionen] [--] <Repository> [<Verzeichnis>]"
 
-#: builtin/clone.c:65 builtin/fetch.c:112 builtin/merge.c:223
+#: builtin/clone.c:66 builtin/fetch.c:112 builtin/merge.c:224
 #: builtin/push.c:514
 msgid "force progress reporting"
 msgstr "Fortschrittsanzeige erzwingen"
 
-#: builtin/clone.c:67
+#: builtin/clone.c:68
 msgid "don't create a checkout"
 msgstr "kein Auschecken"
 
-#: builtin/clone.c:68 builtin/clone.c:70 builtin/init-db.c:488
+#: builtin/clone.c:69 builtin/clone.c:71 builtin/init-db.c:496
 msgid "create a bare repository"
 msgstr "ein Bare-Repository erstellen"
 
-#: builtin/clone.c:72
+#: builtin/clone.c:73
 msgid "create a mirror repository (implies bare)"
 msgstr "ein Spiegelarchiv erstellen (impliziert --bare)"
 
-#: builtin/clone.c:74
+#: builtin/clone.c:75
 msgid "to clone from a local repository"
 msgstr "von einem lokalen Repository klonen"
 
-#: builtin/clone.c:76
+#: builtin/clone.c:77
 msgid "don't use local hardlinks, always copy"
 msgstr "lokal keine harten Verweise verwenden, immer Kopien"
 
-#: builtin/clone.c:78
+#: builtin/clone.c:79
 msgid "setup as shared repository"
 msgstr "als verteiltes Repository einrichten"
 
-#: builtin/clone.c:80 builtin/clone.c:82
+#: builtin/clone.c:81 builtin/clone.c:83
 msgid "initialize submodules in the clone"
 msgstr "Submodule im Klon initialisieren"
 
-#: builtin/clone.c:83 builtin/init-db.c:485
+#: builtin/clone.c:84 builtin/init-db.c:493
 msgid "template-directory"
 msgstr "Vorlagenverzeichnis"
 
-#: builtin/clone.c:84 builtin/init-db.c:486
+#: builtin/clone.c:85 builtin/init-db.c:494
 msgid "directory from which templates will be used"
 msgstr "Verzeichnis, von welchem die Vorlagen verwendet werden"
 
-#: builtin/clone.c:86
+#: builtin/clone.c:87
 msgid "reference repository"
 msgstr "Repository referenzieren"
 
-#: builtin/clone.c:87 builtin/column.c:26 builtin/merge-file.c:44
+#: builtin/clone.c:88 builtin/column.c:26 builtin/merge-file.c:44
 msgid "name"
 msgstr "Name"
 
-#: builtin/clone.c:88
+#: builtin/clone.c:89
 msgid "use <name> instead of 'origin' to track upstream"
 msgstr "<Name> statt 'origin' für Upstream-Repository verwenden"
 
-#: builtin/clone.c:90
+#: builtin/clone.c:91
 msgid "checkout <branch> instead of the remote's HEAD"
 msgstr "<Branch> auschecken, anstatt HEAD des Remote-Repositories"
 
-#: builtin/clone.c:92
+#: builtin/clone.c:93
 msgid "path to git-upload-pack on the remote"
 msgstr "Pfad zu \"git-upload-pack\" auf der Gegenseite"
 
-#: builtin/clone.c:93 builtin/fetch.c:113 builtin/grep.c:659
+#: builtin/clone.c:94 builtin/fetch.c:113 builtin/grep.c:659
 msgid "depth"
 msgstr "Tiefe"
 
-#: builtin/clone.c:94
+#: builtin/clone.c:95
 msgid "create a shallow clone of that depth"
 msgstr ""
 "einen Klon mit unvollständiger Historie (shallow) in dieser Tiefe erstellen"
 
-#: builtin/clone.c:96
+#: builtin/clone.c:97
 msgid "clone only one branch, HEAD or --branch"
 msgstr "nur einen Branch klonen, HEAD oder --branch"
 
-#: builtin/clone.c:97 builtin/init-db.c:494
+#: builtin/clone.c:99
+msgid "use --reference only while cloning"
+msgstr "--reference nur während des Klonens benutzen"
+
+#: builtin/clone.c:100 builtin/init-db.c:502
 msgid "gitdir"
 msgstr ".git-Verzeichnis"
 
-#: builtin/clone.c:98 builtin/init-db.c:495
+#: builtin/clone.c:101 builtin/init-db.c:503
 msgid "separate git dir from working tree"
 msgstr "Git-Verzeichnis vom Arbeitsverzeichnis separieren"
 
-#: builtin/clone.c:99
+#: builtin/clone.c:102
 msgid "key=value"
 msgstr "Schlüssel=Wert"
 
-#: builtin/clone.c:100
+#: builtin/clone.c:103
 msgid "set config inside the new repository"
 msgstr "Konfiguration innerhalb des neuen Repositories setzen"
 
-#: builtin/clone.c:253
+#: builtin/clone.c:256
 #, c-format
 msgid "reference repository '%s' is not a local repository."
 msgstr "Referenziertes Repository '%s' ist kein lokales Repository."
 
-#: builtin/clone.c:257
+#: builtin/clone.c:260
 #, c-format
 msgid "reference repository '%s' is shallow"
 msgstr ""
 "Referenziertes Repository '%s' hat eine unvollständige Historie (shallow)."
 
-#: builtin/clone.c:260
+#: builtin/clone.c:263
 #, c-format
 msgid "reference repository '%s' is grafted"
 msgstr ""
 "Referenziertes Repository '%s' ist mit künstlichen Vorgängern (\"grafts\") "
 "eingehängt."
 
-#: builtin/clone.c:322
+#: builtin/clone.c:325
 #, c-format
 msgid "failed to create directory '%s'"
 msgstr "Fehler beim Erstellen von Verzeichnis '%s'"
 
-#: builtin/clone.c:324 builtin/diff.c:84
+#: builtin/clone.c:327 builtin/diff.c:84
 #, c-format
 msgid "failed to stat '%s'"
 msgstr "Konnte '%s' nicht lesen"
 
-#: builtin/clone.c:326
+#: builtin/clone.c:329
 #, c-format
 msgid "%s exists and is not a directory"
 msgstr "%s existiert und ist kein Verzeichnis"
 
-#: builtin/clone.c:340
+#: builtin/clone.c:343
 #, c-format
 msgid "failed to stat %s\n"
 msgstr "Konnte %s nicht lesen\n"
 
-#: builtin/clone.c:362
+#: builtin/clone.c:365
 #, c-format
 msgid "failed to create link '%s'"
 msgstr "Konnte Verweis '%s' nicht erstellen"
 
-#: builtin/clone.c:366
+#: builtin/clone.c:369
 #, c-format
 msgid "failed to copy file to '%s'"
 msgstr "Konnte Datei nicht nach '%s' kopieren"
 
-#: builtin/clone.c:389 builtin/clone.c:563
+#: builtin/clone.c:392 builtin/clone.c:566
 #, c-format
 msgid "done.\n"
 msgstr "Fertig.\n"
 
-#: builtin/clone.c:401
+#: builtin/clone.c:404
 msgid ""
 "Clone succeeded, but checkout failed.\n"
 "You can inspect what was checked out with 'git status'\n"
 "and retry the checkout with 'git checkout -f HEAD'\n"
 msgstr ""
 "Klonen erfolgreich, Auschecken ist aber fehlgeschlagen.\n"
 "Sie können mit 'git status' prüfen, was ausgecheckt worden ist\n"
 "und das Auschecken mit 'git checkout -f HEAD' erneut versuchen.\n"
 
-#: builtin/clone.c:478
+#: builtin/clone.c:481
 #, c-format
 msgid "Could not find remote branch %s to clone."
 msgstr "Konnte zu klonenden Remote-Branch %s nicht finden."
 
-#: builtin/clone.c:558
+#: builtin/clone.c:561
 #, c-format
 msgid "Checking connectivity... "
 msgstr "Prüfe Konnektivität... "
 
-#: builtin/clone.c:561
+#: builtin/clone.c:564
 msgid "remote did not send all necessary objects"
 msgstr "Remote-Repository hat nicht alle erforderlichen Objekte gesendet."
 
-#: builtin/clone.c:625
+#: builtin/clone.c:628
 msgid "remote HEAD refers to nonexistent ref, unable to checkout.\n"
 msgstr ""
 "Externer HEAD bezieht sich auf eine nicht existierende Referenz und kann "
 "nicht ausgecheckt werden.\n"
 
-#: builtin/clone.c:656
+#: builtin/clone.c:659
 msgid "unable to checkout working tree"
 msgstr "Arbeitsverzeichnis konnte nicht ausgecheckt werden"
 
-#: builtin/clone.c:765
+#: builtin/clone.c:746
+msgid "cannot repack to clean up"
+msgstr "Kann \"repack\" zum Aufräumen nicht aufrufen"
+
+#: builtin/clone.c:748
+msgid "cannot unlink temporary alternates file"
+msgstr "Kann temporäre \"alternates\"-Datei nicht entfernen"
+
+#: builtin/clone.c:778
 msgid "Too many arguments."
 msgstr "Zu viele Argumente."
 
-#: builtin/clone.c:769
+#: builtin/clone.c:782
 msgid "You must specify a repository to clone."
 msgstr "Sie müssen ein Repository zum Klonen angeben."
 
-#: builtin/clone.c:780
+#: builtin/clone.c:793
 #, c-format
 msgid "--bare and --origin %s options are incompatible."
 msgstr "Die Optionen --bare und --origin %s sind inkompatibel."
 
-#: builtin/clone.c:783
+#: builtin/clone.c:796
 msgid "--bare and --separate-git-dir are incompatible."
 msgstr "Die Optionen --bare und --separate-git-dir sind inkompatibel."
 
-#: builtin/clone.c:796
+#: builtin/clone.c:809
 #, c-format
 msgid "repository '%s' does not exist"
 msgstr "Repository '%s' existiert nicht."
 
-#: builtin/clone.c:802 builtin/fetch.c:1155
+#: builtin/clone.c:815 builtin/fetch.c:1155
 #, c-format
 msgid "depth %s is not a positive number"
 msgstr "Tiefe %s ist keine positive Zahl"
 
-#: builtin/clone.c:812
+#: builtin/clone.c:825
 #, c-format
 msgid "destination path '%s' already exists and is not an empty directory."
 msgstr "Zielpfad '%s' existiert bereits und ist kein leeres Verzeichnis."
 
-#: builtin/clone.c:822
+#: builtin/clone.c:835
 #, c-format
 msgid "working tree '%s' already exists."
 msgstr "Arbeitsverzeichnis '%s' existiert bereits."
 
-#: builtin/clone.c:835 builtin/clone.c:847
+#: builtin/clone.c:848 builtin/clone.c:860
 #, c-format
 msgid "could not create leading directories of '%s'"
 msgstr "Konnte führende Verzeichnisse von '%s' nicht erstellen."
 
-#: builtin/clone.c:838
+#: builtin/clone.c:851
 #, c-format
 msgid "could not create work tree dir '%s'."
 msgstr "Konnte Arbeitsverzeichnis '%s' nicht erstellen."
 
-#: builtin/clone.c:857
+#: builtin/clone.c:870
 #, c-format
 msgid "Cloning into bare repository '%s'...\n"
 msgstr "Klone in Bare-Repository '%s'...\n"
 
-#: builtin/clone.c:859
+#: builtin/clone.c:872
 #, c-format
 msgid "Cloning into '%s'...\n"
 msgstr "Klone nach '%s'...\n"
 
-#: builtin/clone.c:895
+#: builtin/clone.c:897
+msgid "--dissociate given, but there is no --reference"
+msgstr "--dissociate ohne --reference angegeben"
+
+#: builtin/clone.c:912
 msgid "--depth is ignored in local clones; use file:// instead."
 msgstr ""
 "Die Option --depth wird in lokalen Klonen ignoriert; benutzen Sie "
 "stattdessen file://"
 
-#: builtin/clone.c:898
+#: builtin/clone.c:915
 msgid "source repository is shallow, ignoring --local"
 msgstr ""
 "Quelle ist ein Repository mit unvollständiger Historie (shallow),ignoriere --"
 "local"
 
-#: builtin/clone.c:903
+#: builtin/clone.c:920
 msgid "--local is ignored"
 msgstr "--local wird ignoriert"
 
-#: builtin/clone.c:907
+#: builtin/clone.c:924
 #, c-format
 msgid "Don't know how to clone %s"
 msgstr "Weiß nicht wie %s zu klonen ist."
 
-#: builtin/clone.c:958 builtin/clone.c:966
+#: builtin/clone.c:975 builtin/clone.c:983
 #, c-format
 msgid "Remote branch %s not found in upstream %s"
 msgstr "Remote-Branch %s nicht im Upstream-Repository %s gefunden"
 
-#: builtin/clone.c:969
+#: builtin/clone.c:986
 msgid "You appear to have cloned an empty repository."
 msgstr "Sie scheinen ein leeres Repository geklont zu haben."
 
 #: builtin/column.c:9
 msgid "git column [options]"
 msgstr "git column [Optionen]"
@@ -4280,14 +4292,14 @@
 "diese zutreffend sind. Sie können diese Meldung unterdrücken, indem Sie\n"
 "diese explizit setzen:\n"
 "\n"
 "    git config --global user.name \"Ihr Name\"\n"
 "    git config --global user.email ihre@emailadresse.de\n"
 "\n"
-"Nachdem Sie das getan hast, können Sie Ihre Identität für diesen Commit "
-"ändern mit:\n"
+"Nachdem Sie das getan haben, können Sie Ihre Identität für diesen Commit "
+"ändern:\n"
 "\n"
 "    git commit --amend --reset-author\n"
 
 #: builtin/commit.c:72
 msgid ""
 "You asked to amend the most recent commit, but doing so would make\n"
@@ -4375,81 +4387,76 @@
 msgstr "Kann Staging-Area nicht lesen"
 
 #: builtin/commit.c:473
 msgid "unable to write temporary index file"
 msgstr "Konnte temporäre Staging-Area-Datei nicht schreiben."
 
-#: builtin/commit.c:592
+#: builtin/commit.c:584
 #, c-format
 msgid "commit '%s' lacks author header"
 msgstr "Commit '%s' fehlt Autor-Kopfbereich"
 
-#: builtin/commit.c:594
+#: builtin/commit.c:586
 #, c-format
 msgid "commit '%s' has malformed author line"
 msgstr "Commit '%s' hat fehlerhafte Autor-Zeile"
 
-#: builtin/commit.c:613
+#: builtin/commit.c:605
 msgid "malformed --author parameter"
 msgstr "Fehlerhafter --author Parameter"
 
-#: builtin/commit.c:621
+#: builtin/commit.c:613
 #, c-format
 msgid "invalid date format: %s"
 msgstr "Ungültiges Datumsformat: %s"
 
-#: builtin/commit.c:642
-#, c-format
-msgid "Malformed ident string: '%s'"
-msgstr "Fehlerhafter Ident-String: '%s'"
-
-#: builtin/commit.c:675
+#: builtin/commit.c:657
 msgid ""
 "unable to select a comment character that is not used\n"
 "in the current commit message"
 msgstr ""
 "Konnte kein Kommentar-Zeichen auswählen, das nicht in\n"
 "der aktuellen Commit-Beschreibung verwendet wird."
 
-#: builtin/commit.c:712 builtin/commit.c:745 builtin/commit.c:1120
+#: builtin/commit.c:694 builtin/commit.c:727 builtin/commit.c:1084
 #, c-format
 msgid "could not lookup commit %s"
 msgstr "Konnte Commit %s nicht nachschlagen"
 
-#: builtin/commit.c:724 builtin/shortlog.c:273
+#: builtin/commit.c:706 builtin/shortlog.c:273
 #, c-format
 msgid "(reading log message from standard input)\n"
 msgstr "(lese Log-Nachricht von Standard-Eingabe)\n"
 
-#: builtin/commit.c:726
+#: builtin/commit.c:708
 msgid "could not read log from standard input"
 msgstr "Konnte Log nicht von Standard-Eingabe lesen."
 
-#: builtin/commit.c:730
+#: builtin/commit.c:712
 #, c-format
 msgid "could not read log file '%s'"
 msgstr "Konnte Log-Datei '%s' nicht lesen"
 
-#: builtin/commit.c:752
+#: builtin/commit.c:734
 msgid "could not read MERGE_MSG"
 msgstr "Konnte MERGE_MSG nicht lesen"
 
-#: builtin/commit.c:756
+#: builtin/commit.c:738
 msgid "could not read SQUASH_MSG"
 msgstr "Konnte SQUASH_MSG nicht lesen"
 
-#: builtin/commit.c:760
+#: builtin/commit.c:742
 #, c-format
 msgid "could not read '%s'"
 msgstr "Konnte '%s' nicht lesen"
 
-#: builtin/commit.c:831
+#: builtin/commit.c:789
 msgid "could not write commit template"
 msgstr "Konnte Commit-Vorlage nicht schreiben"
 
-#: builtin/commit.c:849
+#: builtin/commit.c:807
 #, c-format
 msgid ""
 "\n"
 "It looks like you may be committing a merge.\n"
 "If this is not correct, please remove the file\n"
 "\t%s\n"
@@ -4458,13 +4465,13 @@
 "\n"
 "Es sieht so aus, als committen Sie einen Merge.\n"
 "Falls das nicht korrekt ist, löschen Sie bitte die Datei\n"
 "\t%s\n"
 "und versuchen Sie es erneut.\n"
 
-#: builtin/commit.c:854
+#: builtin/commit.c:812
 #, c-format
 msgid ""
 "\n"
 "It looks like you may be committing a cherry-pick.\n"
 "If this is not correct, please remove the file\n"
 "\t%s\n"
@@ -4473,396 +4480,396 @@
 "\n"
 "Es sieht so aus, als committen Sie einen \"cherry-pick\".\n"
 "Falls das nicht korrekt ist, löschen Sie bitte die Datei\n"
 "\t%s\n"
 "und versuchen Sie es erneut.\n"
 
-#: builtin/commit.c:867
+#: builtin/commit.c:825
 #, c-format
 msgid ""
 "Please enter the commit message for your changes. Lines starting\n"
 "with '%c' will be ignored, and an empty message aborts the commit.\n"
 msgstr ""
 "Bitte geben Sie eine Commit-Beschreibung für Ihre Änderungen ein. Zeilen,\n"
 "die mit '%c' beginnen, werden ignoriert, und eine leere Beschreibung\n"
 "bricht den Commit ab.\n"
 
-#: builtin/commit.c:874
+#: builtin/commit.c:832
 #, c-format
 msgid ""
 "Please enter the commit message for your changes. Lines starting\n"
 "with '%c' will be kept; you may remove them yourself if you want to.\n"
 "An empty message aborts the commit.\n"
 msgstr ""
 "Bitte geben Sie eine Commit-Beschreibung für Ihre Änderungen ein. Zeilen, "
 "die\n"
 "mit '%c' beginnen, werden beibehalten; wenn Sie möchten, können Sie diese "
 "entfernen.\n"
 "Eine leere Beschreibung bricht den Commit ab.\n"
 
-#: builtin/commit.c:888
+#: builtin/commit.c:852
 #, c-format
 msgid "%sAuthor:    %.*s <%.*s>"
 msgstr "%sAutor:           %.*s <%.*s>"
 
-#: builtin/commit.c:896
+#: builtin/commit.c:860
 #, c-format
 msgid "%sDate:      %s"
 msgstr "%sDatum:            %s"
 
-#: builtin/commit.c:903
+#: builtin/commit.c:867
 #, c-format
 msgid "%sCommitter: %.*s <%.*s>"
 msgstr "%sCommit-Ersteller: %.*s <%.*s>"
 
-#: builtin/commit.c:921
+#: builtin/commit.c:885
 msgid "Cannot read index"
 msgstr "Kann Staging-Area nicht lesen"
 
-#: builtin/commit.c:978
+#: builtin/commit.c:942
 msgid "Error building trees"
 msgstr "Fehler beim Erzeugen der \"Tree\"-Objekte"
 
-#: builtin/commit.c:993 builtin/tag.c:495
+#: builtin/commit.c:957 builtin/tag.c:495
 #, c-format
 msgid "Please supply the message using either -m or -F option.\n"
 msgstr ""
 "Bitte liefern Sie eine Beschreibung entweder mit der Option -m oder -F.\n"
 
-#: builtin/commit.c:1095
+#: builtin/commit.c:1059
 #, c-format
 msgid "No existing author found with '%s'"
 msgstr "Kein existierender Autor mit '%s' gefunden."
 
-#: builtin/commit.c:1110 builtin/commit.c:1350
+#: builtin/commit.c:1074 builtin/commit.c:1314
 #, c-format
 msgid "Invalid untracked files mode '%s'"
-msgstr "Ungültiger Modus '%s' für unbeobachtete Dateien"
+msgstr "Ungültiger Modus '%s' für unversionierte Dateien"
 
-#: builtin/commit.c:1147
+#: builtin/commit.c:1111
 msgid "--long and -z are incompatible"
 msgstr "Die Optionen --long und -z sind inkompatibel."
 
-#: builtin/commit.c:1177
+#: builtin/commit.c:1141
 msgid "Using both --reset-author and --author does not make sense"
 msgstr ""
 "Die Optionen --reset-author und --author können nicht gemeinsam verwendet "
 "werden."
 
-#: builtin/commit.c:1186
+#: builtin/commit.c:1150
 msgid "You have nothing to amend."
 msgstr "Sie haben nichts für \"--amend\"."
 
-#: builtin/commit.c:1189
+#: builtin/commit.c:1153
 msgid "You are in the middle of a merge -- cannot amend."
 msgstr "Ein Merge ist im Gange -- kann \"--amend\" nicht ausführen."
 
-#: builtin/commit.c:1191
+#: builtin/commit.c:1155
 msgid "You are in the middle of a cherry-pick -- cannot amend."
 msgstr "\"cherry-pick\" ist im Gange -- kann \"--amend\" nicht ausführen."
 
-#: builtin/commit.c:1194
+#: builtin/commit.c:1158
 msgid "Options --squash and --fixup cannot be used together"
 msgstr ""
 "Die Optionen --squash und --fixup können nicht gemeinsam verwendet werden."
 
-#: builtin/commit.c:1204
+#: builtin/commit.c:1168
 msgid "Only one of -c/-C/-F/--fixup can be used."
 msgstr "Es kann nur eine Option von -c/-C/-F/--fixup verwendet werden."
 
-#: builtin/commit.c:1206
+#: builtin/commit.c:1170
 msgid "Option -m cannot be combined with -c/-C/-F/--fixup."
 msgstr "Die Option -m kann nicht mit -c/-C/-F/--fixup kombiniert werden."
 
-#: builtin/commit.c:1214
+#: builtin/commit.c:1178
 msgid "--reset-author can be used only with -C, -c or --amend."
 msgstr ""
 "Die Option --reset--author kann nur mit -C, -c oder --amend verwendet werden."
 
-#: builtin/commit.c:1231
+#: builtin/commit.c:1195
 msgid "Only one of --include/--only/--all/--interactive/--patch can be used."
 msgstr ""
 "Es kann nur eine Option von --include/--only/--all/--interactive/--patch "
 "verwendet werden."
 
-#: builtin/commit.c:1233
+#: builtin/commit.c:1197
 msgid "No paths with --include/--only does not make sense."
 msgstr ""
 "Die Optionen --include und --only können nur mit der Angabe von Pfaden "
 "verwendet werden."
 
-#: builtin/commit.c:1235
+#: builtin/commit.c:1199
 msgid "Clever... amending the last one with dirty index."
 msgstr ""
 "Klug... den letzten Commit mit einer geänderten Staging-Area nachbessern."
 
-#: builtin/commit.c:1237
+#: builtin/commit.c:1201
 msgid "Explicit paths specified without -i or -o; assuming --only paths..."
 msgstr "Explizite Pfade ohne -i oder -o angegeben; nehme --only an"
 
-#: builtin/commit.c:1249 builtin/tag.c:728
+#: builtin/commit.c:1213 builtin/tag.c:728
 #, c-format
 msgid "Invalid cleanup mode %s"
 msgstr "Ungültiger \"cleanup\" Modus %s"
 
-#: builtin/commit.c:1254
+#: builtin/commit.c:1218
 msgid "Paths with -a does not make sense."
 msgstr "Die Option -a kann nur mit der Angabe von Pfaden verwendet werden."
 
-#: builtin/commit.c:1364 builtin/commit.c:1644
+#: builtin/commit.c:1328 builtin/commit.c:1608
 msgid "show status concisely"
 msgstr "Status im Kurzformat anzeigen"
 
-#: builtin/commit.c:1366 builtin/commit.c:1646
+#: builtin/commit.c:1330 builtin/commit.c:1610
 msgid "show branch information"
 msgstr "Branchinformationen anzeigen"
 
-#: builtin/commit.c:1368 builtin/commit.c:1648 builtin/push.c:500
+#: builtin/commit.c:1332 builtin/commit.c:1612 builtin/push.c:500
 msgid "machine-readable output"
 msgstr "maschinenlesbare Ausgabe"
 
-#: builtin/commit.c:1371 builtin/commit.c:1650
+#: builtin/commit.c:1335 builtin/commit.c:1614
 msgid "show status in long format (default)"
 msgstr "Status im Langformat anzeigen (Standard)"
 
-#: builtin/commit.c:1374 builtin/commit.c:1653
+#: builtin/commit.c:1338 builtin/commit.c:1617
 msgid "terminate entries with NUL"
 msgstr "Einträge mit NUL-Zeichen abschließen"
 
-#: builtin/commit.c:1376 builtin/commit.c:1656 builtin/fast-export.c:980
+#: builtin/commit.c:1340 builtin/commit.c:1620 builtin/fast-export.c:980
 #: builtin/fast-export.c:983 builtin/tag.c:603
 msgid "mode"
 msgstr "Modus"
 
-#: builtin/commit.c:1377 builtin/commit.c:1656
+#: builtin/commit.c:1341 builtin/commit.c:1620
 msgid "show untracked files, optional modes: all, normal, no. (Default: all)"
 msgstr ""
-"nicht beobachtete Dateien anzeigen, optionale Modi: all, normal, no. "
-"(Standard: all)"
+"unversionierte Dateien anzeigen, optionale Modi: all, normal, no. (Standard: "
+"all)"
 
-#: builtin/commit.c:1380
+#: builtin/commit.c:1344
 msgid "show ignored files"
 msgstr "ignorierte Dateien anzeigen"
 
-#: builtin/commit.c:1381 parse-options.h:153
+#: builtin/commit.c:1345 parse-options.h:153
 msgid "when"
 msgstr "wann"
 
-#: builtin/commit.c:1382
+#: builtin/commit.c:1346
 msgid ""
 "ignore changes to submodules, optional when: all, dirty, untracked. "
 "(Default: all)"
 msgstr ""
 "Änderungen in Submodulen ignorieren, optional wenn: all, dirty, untracked. "
 "(Standard: all)"
 
-#: builtin/commit.c:1384
+#: builtin/commit.c:1348
 msgid "list untracked files in columns"
-msgstr "unbeobachtete Dateien in Spalten auflisten"
+msgstr "unversionierte Dateien in Spalten auflisten"
 
-#: builtin/commit.c:1471
+#: builtin/commit.c:1435
 msgid "couldn't look up newly created commit"
 msgstr "Konnte neu erstellten Commit nicht nachschlagen."
 
-#: builtin/commit.c:1473
+#: builtin/commit.c:1437
 msgid "could not parse newly created commit"
 msgstr "Konnte neulich erstellten Commit nicht analysieren."
 
-#: builtin/commit.c:1518
+#: builtin/commit.c:1482
 msgid "detached HEAD"
 msgstr "losgelöster HEAD"
 
-#: builtin/commit.c:1521
+#: builtin/commit.c:1485
 msgid " (root-commit)"
 msgstr " (Basis-Commit)"
 
-#: builtin/commit.c:1614
+#: builtin/commit.c:1578
 msgid "suppress summary after successful commit"
 msgstr "Zusammenfassung nach erfolgreichem Commit unterdrücken"
 
-#: builtin/commit.c:1615
+#: builtin/commit.c:1579
 msgid "show diff in commit message template"
 msgstr "Unterschiede in Commit-Beschreibungsvorlage anzeigen"
 
-#: builtin/commit.c:1617
+#: builtin/commit.c:1581
 msgid "Commit message options"
 msgstr "Optionen für Commit-Beschreibung"
 
-#: builtin/commit.c:1618 builtin/tag.c:601
+#: builtin/commit.c:1582 builtin/tag.c:601
 msgid "read message from file"
 msgstr "Beschreibung von Datei lesen"
 
-#: builtin/commit.c:1619
+#: builtin/commit.c:1583
 msgid "author"
 msgstr "Autor"
 
-#: builtin/commit.c:1619
+#: builtin/commit.c:1583
 msgid "override author for commit"
 msgstr "Autor eines Commits überschreiben"
 
-#: builtin/commit.c:1620 builtin/gc.c:275
+#: builtin/commit.c:1584 builtin/gc.c:275
 msgid "date"
 msgstr "Datum"
 
-#: builtin/commit.c:1620
+#: builtin/commit.c:1584
 msgid "override date for commit"
 msgstr "Datum eines Commits überschreiben"
 
-#: builtin/commit.c:1621 builtin/merge.c:217 builtin/notes.c:408
-#: builtin/notes.c:565 builtin/tag.c:599
+#: builtin/commit.c:1585 builtin/merge.c:218 builtin/notes.c:391
+#: builtin/notes.c:554 builtin/tag.c:599
 msgid "message"
 msgstr "Beschreibung"
 
-#: builtin/commit.c:1621
+#: builtin/commit.c:1585
 msgid "commit message"
 msgstr "Commit-Beschreibung"
 
-#: builtin/commit.c:1622
+#: builtin/commit.c:1586
 msgid "reuse and edit message from specified commit"
 msgstr "Beschreibung des angegebenen Commits wiederverwenden und editieren"
 
-#: builtin/commit.c:1623
+#: builtin/commit.c:1587
 msgid "reuse message from specified commit"
 msgstr "Beschreibung des angegebenen Commits wiederverwenden"
 
-#: builtin/commit.c:1624
+#: builtin/commit.c:1588
 msgid "use autosquash formatted message to fixup specified commit"
 msgstr ""
 "eine automatisch zusammengesetzte Beschreibung zum Nachbessern des "
 "angegebenen Commits verwenden"
 
-#: builtin/commit.c:1625
+#: builtin/commit.c:1589
 msgid "use autosquash formatted message to squash specified commit"
 msgstr ""
 "eine automatisch zusammengesetzte Beschreibung beim \"squash\" des "
 "angegebenen Commits verwenden"
 
-#: builtin/commit.c:1626
+#: builtin/commit.c:1590
 msgid "the commit is authored by me now (used with -C/-c/--amend)"
 msgstr "Sie als Autor des Commits setzen (verwendet mit -C/-c/--amend)"
 
-#: builtin/commit.c:1627 builtin/log.c:1191 builtin/revert.c:86
+#: builtin/commit.c:1591 builtin/log.c:1191 builtin/revert.c:86
 msgid "add Signed-off-by:"
 msgstr "'Signed-off-by:'-Zeile hinzufügen"
 
-#: builtin/commit.c:1628
+#: builtin/commit.c:1592
 msgid "use specified template file"
 msgstr "angegebene Vorlagendatei verwenden"
 
-#: builtin/commit.c:1629
+#: builtin/commit.c:1593
 msgid "force edit of commit"
 msgstr "Bearbeitung des Commits erzwingen"
 
-#: builtin/commit.c:1630
+#: builtin/commit.c:1594
 msgid "default"
 msgstr "Standard"
 
-#: builtin/commit.c:1630 builtin/tag.c:604
+#: builtin/commit.c:1594 builtin/tag.c:604
 msgid "how to strip spaces and #comments from message"
 msgstr ""
 "wie Leerzeichen und #Kommentare von der Beschreibung getrennt werden sollen"
 
-#: builtin/commit.c:1631
+#: builtin/commit.c:1595
 msgid "include status in commit message template"
 msgstr "Status in die Commit-Beschreibungsvorlage einfügen"
 
-#: builtin/commit.c:1632 builtin/merge.c:224 builtin/revert.c:92
+#: builtin/commit.c:1596 builtin/merge.c:225 builtin/revert.c:92
 #: builtin/tag.c:605
 msgid "key-id"
 msgstr "GPG-Schlüsselkennung"
 
-#: builtin/commit.c:1633 builtin/merge.c:225 builtin/revert.c:93
+#: builtin/commit.c:1597 builtin/merge.c:226 builtin/revert.c:93
 msgid "GPG sign commit"
 msgstr "Commit mit GPG signieren"
 
-#: builtin/commit.c:1636
+#: builtin/commit.c:1600
 msgid "Commit contents options"
 msgstr "Optionen für Commit-Inhalt"
 
-#: builtin/commit.c:1637
+#: builtin/commit.c:1601
 msgid "commit all changed files"
 msgstr "alle geänderten Dateien committen"
 
-#: builtin/commit.c:1638
+#: builtin/commit.c:1602
 msgid "add specified files to index for commit"
 msgstr "die angegebenen Dateien zusätzlich zum Commit vormerken"
 
-#: builtin/commit.c:1639
+#: builtin/commit.c:1603
 msgid "interactively add files"
 msgstr "interaktives Hinzufügen von Dateien"
 
-#: builtin/commit.c:1640
+#: builtin/commit.c:1604
 msgid "interactively add changes"
 msgstr "interaktives Hinzufügen von Änderungen"
 
-#: builtin/commit.c:1641
+#: builtin/commit.c:1605
 msgid "commit only specified files"
 msgstr "nur die angegebenen Dateien committen"
 
-#: builtin/commit.c:1642
+#: builtin/commit.c:1606
 msgid "bypass pre-commit hook"
 msgstr "\"pre-commit hook\" umgehen"
 
-#: builtin/commit.c:1643
+#: builtin/commit.c:1607
 msgid "show what would be committed"
 msgstr "anzeigen, was committet werden würde"
 
-#: builtin/commit.c:1654
+#: builtin/commit.c:1618
 msgid "amend previous commit"
 msgstr "vorherigen Commit ändern"
 
-#: builtin/commit.c:1655
+#: builtin/commit.c:1619
 msgid "bypass post-rewrite hook"
 msgstr "\"post-rewrite hook\" umgehen"
 
-#: builtin/commit.c:1660
+#: builtin/commit.c:1624
 msgid "ok to record an empty change"
 msgstr "Aufzeichnung einer leeren Änderung erlauben"
 
-#: builtin/commit.c:1662
+#: builtin/commit.c:1626
 msgid "ok to record a change with an empty message"
 msgstr "Aufzeichnung einer Änderung mit einer leeren Beschreibung erlauben"
 
-#: builtin/commit.c:1691
+#: builtin/commit.c:1655
 msgid "could not parse HEAD commit"
 msgstr "Konnte Commit von HEAD nicht analysieren."
 
-#: builtin/commit.c:1730 builtin/merge.c:518
+#: builtin/commit.c:1694 builtin/merge.c:519
 #, c-format
 msgid "could not open '%s' for reading"
 msgstr "Konnte '%s' nicht zum Lesen öffnen."
 
-#: builtin/commit.c:1737
+#: builtin/commit.c:1701
 #, c-format
 msgid "Corrupt MERGE_HEAD file (%s)"
 msgstr "Beschädigte MERGE_HEAD-Datei (%s)"
 
-#: builtin/commit.c:1744
+#: builtin/commit.c:1708
 msgid "could not read MERGE_MODE"
 msgstr "Konnte MERGE_MODE nicht lesen"
 
-#: builtin/commit.c:1763
+#: builtin/commit.c:1727
 #, c-format
 msgid "could not read commit message: %s"
 msgstr "Konnte Commit-Beschreibung nicht lesen: %s"
 
-#: builtin/commit.c:1774
+#: builtin/commit.c:1738
 #, c-format
 msgid "Aborting commit; you did not edit the message.\n"
 msgstr "Commit abgebrochen; Sie haben die Beschreibung nicht editiert.\n"
 
-#: builtin/commit.c:1779
+#: builtin/commit.c:1743
 #, c-format
 msgid "Aborting commit due to empty commit message.\n"
 msgstr "Commit aufgrund leerer Beschreibung abgebrochen.\n"
 
-#: builtin/commit.c:1794 builtin/merge.c:850 builtin/merge.c:875
+#: builtin/commit.c:1758 builtin/merge.c:851 builtin/merge.c:876
 msgid "failed to write commit object"
 msgstr "Fehler beim Schreiben des Commit-Objektes."
 
-#: builtin/commit.c:1827
+#: builtin/commit.c:1791
 msgid ""
 "Repository has been updated, but unable to write\n"
 "new_index file. Check that disk is not full and quota is\n"
 "not exceeded, and then \"git reset HEAD\" to recover."
 msgstr ""
 "Das Repository wurde aktualisiert, aber die \"new_index\"-Datei\n"
@@ -4951,23 +4958,19 @@
 msgstr "alles auflisten"
 
 #: builtin/config.c:71
 msgid "open an editor"
 msgstr "einen Editor öffnen"
 
-#: builtin/config.c:72 builtin/config.c:73
-msgid "slot"
-msgstr "Slot"
-
 #: builtin/config.c:72
-msgid "find the color configured: [default]"
-msgstr "die konfigurierte Farbe finden: [Standard]"
+msgid "find the color configured: slot [default]"
+msgstr "die konfigurierte Farbe finden: Slot [Standard]"
 
 #: builtin/config.c:73
-msgid "find the color setting: [stdout-is-tty]"
-msgstr "die Farbeinstellung finden: [Standard-Ausgabe-ist-Terminal]"
+msgid "find the color setting: slot [stdout-is-tty]"
+msgstr "die Farbeinstellung finden: Slot [Standard-Ausgabe-ist-Terminal]"
 
 #: builtin/config.c:74
 msgid "Type"
 msgstr "Typ"
 
 #: builtin/config.c:75
@@ -4995,17 +4998,17 @@
 msgstr "schließt Werte mit NUL-Byte ab"
 
 #: builtin/config.c:81
 msgid "respect include directives on lookup"
 msgstr "beachtet \"include\"-Direktiven beim Nachschlagen"
 
-#: builtin/config.c:315
+#: builtin/config.c:316
 msgid "unable to parse default color value"
 msgstr "konnte Standard-Farbwert nicht parsen"
 
-#: builtin/config.c:455
+#: builtin/config.c:457
 #, c-format
 msgid ""
 "# This is Git's per-user configuration file.\n"
 "[core]\n"
 "# Please adapt and uncomment the following lines:\n"
 "#\tuser = %s\n"
@@ -5014,13 +5017,13 @@
 "# Das ist Git's benutzerspezifische Konfiguraionsdatei.\n"
 "[core]\n"
 "# Bitte passen Sie die folgenden Zeilen an und kommentieren Sie diese aus:\n"
 "#\tuser = %s\n"
 "#\temail = %s\n"
 
-#: builtin/config.c:590
+#: builtin/config.c:589
 #, c-format
 msgid "cannot create configuration file %s"
 msgstr "Konnte Konfigurationsdatei '%s' nicht erstellen."
 
 #: builtin/count-objects.c:55
 msgid "git count-objects [-v] [-H | --human-readable]"
@@ -5449,13 +5452,13 @@
 msgstr "   (%s wurde unreferenziert)"
 
 #: builtin/fetch.c:798
 msgid "[deleted]"
 msgstr "[gelöscht]"
 
-#: builtin/fetch.c:799 builtin/remote.c:1063
+#: builtin/fetch.c:799 builtin/remote.c:1060
 msgid "(none)"
 msgstr "(nichts)"
 
 #: builtin/fetch.c:818
 #, c-format
 msgid "Refusing to fetch into current branch %s of non-bare repository"
@@ -5533,80 +5536,80 @@
 
 #: builtin/fmt-merge-msg.c:13
 msgid "git fmt-merge-msg [-m <message>] [--log[=<n>]|--no-log] [--file <file>]"
 msgstr ""
 "git fmt-merge-msg [-m <Beschreibung>] [--log[=<n>]|--no-log] [--file <Datei>]"
 
-#: builtin/fmt-merge-msg.c:663 builtin/fmt-merge-msg.c:666 builtin/grep.c:698
-#: builtin/merge.c:197 builtin/repack.c:179 builtin/repack.c:183
-#: builtin/show-branch.c:654 builtin/show-ref.c:178 builtin/tag.c:590
+#: builtin/fmt-merge-msg.c:662 builtin/fmt-merge-msg.c:665 builtin/grep.c:698
+#: builtin/merge.c:198 builtin/repack.c:178 builtin/repack.c:182
+#: builtin/show-branch.c:657 builtin/show-ref.c:178 builtin/tag.c:590
 #: parse-options.h:132 parse-options.h:239
 msgid "n"
 msgstr "Anzahl"
 
-#: builtin/fmt-merge-msg.c:664
+#: builtin/fmt-merge-msg.c:663
 msgid "populate log with at most <n> entries from shortlog"
 msgstr "Historie mit höchstens <n> Einträgen von \"shortlog\" hinzufügen"
 
-#: builtin/fmt-merge-msg.c:667
+#: builtin/fmt-merge-msg.c:666
 msgid "alias for --log (deprecated)"
 msgstr "Alias für --log (veraltet)"
 
-#: builtin/fmt-merge-msg.c:670
+#: builtin/fmt-merge-msg.c:669
 msgid "text"
 msgstr "Text"
 
-#: builtin/fmt-merge-msg.c:671
+#: builtin/fmt-merge-msg.c:670
 msgid "use <text> as start of message"
 msgstr "<Text> als Beschreibungsanfang verwenden"
 
-#: builtin/fmt-merge-msg.c:672
+#: builtin/fmt-merge-msg.c:671
 msgid "file to read from"
 msgstr "Datei zum Einlesen"
 
 #: builtin/for-each-ref.c:676
 msgid "unable to parse format"
 msgstr "Konnte Format nicht parsen."
 
-#: builtin/for-each-ref.c:1057
+#: builtin/for-each-ref.c:1064
 msgid "git for-each-ref [options] [<pattern>]"
 msgstr "git for-each-ref [Optionen] [<Muster>]"
 
-#: builtin/for-each-ref.c:1072
+#: builtin/for-each-ref.c:1079
 msgid "quote placeholders suitably for shells"
 msgstr "Platzhalter als Shell-String formatieren"
 
-#: builtin/for-each-ref.c:1074
+#: builtin/for-each-ref.c:1081
 msgid "quote placeholders suitably for perl"
 msgstr "Platzhalter als Perl-String formatieren"
 
-#: builtin/for-each-ref.c:1076
+#: builtin/for-each-ref.c:1083
 msgid "quote placeholders suitably for python"
 msgstr "Platzhalter als Python-String formatieren"
 
-#: builtin/for-each-ref.c:1078
-msgid "quote placeholders suitably for tcl"
+#: builtin/for-each-ref.c:1085
+msgid "quote placeholders suitably for Tcl"
 msgstr "Platzhalter als Tcl-String formatieren"
 
-#: builtin/for-each-ref.c:1081
+#: builtin/for-each-ref.c:1088
 msgid "show only <n> matched refs"
 msgstr "nur <n> passende Referenzen anzeigen"
 
-#: builtin/for-each-ref.c:1082 builtin/replace.c:438
+#: builtin/for-each-ref.c:1089 builtin/replace.c:438
 msgid "format"
 msgstr "Format"
 
-#: builtin/for-each-ref.c:1082
+#: builtin/for-each-ref.c:1089
 msgid "format to use for the output"
 msgstr "für die Ausgabe zu verwendendes Format"
 
-#: builtin/for-each-ref.c:1083
+#: builtin/for-each-ref.c:1090
 msgid "key"
 msgstr "Schüssel"
 
-#: builtin/for-each-ref.c:1084
+#: builtin/for-each-ref.c:1091
 msgid "field name to sort on"
 msgstr "sortiere nach diesem Feld"
 
 #: builtin/fsck.c:147 builtin/prune.c:136
 msgid "Checking connectivity"
 msgstr "Prüfe Konnektivität"
@@ -5765,13 +5768,13 @@
 #: builtin/grep.c:640
 msgid "find in contents not managed by git"
 msgstr "auch in Inhalten finden, die nicht von Git verwaltet werden"
 
 #: builtin/grep.c:642
 msgid "search in both tracked and untracked files"
-msgstr "in beobachteten und unbeobachteten Dateien suchen"
+msgstr "in versionierten und unversionierten Dateien suchen"
 
 #: builtin/grep.c:644
 msgid "search also in ignored files"
 msgstr "auch in ignorierten Dateien suchen"
 
 #: builtin/grep.c:647
@@ -5956,13 +5959,13 @@
 "Die Optionen --no-index und --untracked können nicht mit Commits verwendet "
 "werden."
 
 #: builtin/grep.c:900
 msgid "--[no-]exclude-standard cannot be used for tracked contents."
 msgstr ""
-"Die Option --[no-]exclude-standard kann nicht mit beobachteten Inhalten "
+"Die Option --[no-]exclude-standard kann nicht mit versionierten Inhalten "
 "verwendet werden."
 
 #: builtin/grep.c:908
 msgid "both --cached and trees are given."
 msgstr "Die Option --cached kann nicht mit \"Tree\"-Objekten verwendet werden."
 
@@ -6071,67 +6074,67 @@
 "'%s': cmd for supported man viewer.\n"
 "Please consider using 'man.<tool>.path' instead."
 msgstr ""
 "'%s': Kommando für unterstützten Handbuchbetrachter.\n"
 "Sie könnten stattdessen 'man.<Werkzeug>.path' benutzen."
 
-#: builtin/help.c:352
+#: builtin/help.c:354
 #, c-format
 msgid "'%s': unknown man viewer."
 msgstr "'%s': unbekannter Handbuch-Betrachter."
 
-#: builtin/help.c:369
+#: builtin/help.c:371
 msgid "no man viewer handled the request"
 msgstr "kein Handbuch-Betrachter konnte mit dieser Anfrage umgehen"
 
-#: builtin/help.c:377
+#: builtin/help.c:379
 msgid "no info viewer handled the request"
 msgstr "kein Informations-Betrachter konnte mit dieser Anfrage umgehen"
 
-#: builtin/help.c:423
+#: builtin/help.c:428
 msgid "Defining attributes per path"
 msgstr "Definition von Attributen pro Pfad"
 
-#: builtin/help.c:424
+#: builtin/help.c:429
 msgid "Everyday Git With 20 Commands Or So"
 msgstr "Tägliche Benutzung von Git mit ungefähr 20 Kommandos"
 
-#: builtin/help.c:425
+#: builtin/help.c:430
 msgid "A Git glossary"
 msgstr "Ein Git-Glossar"
 
-#: builtin/help.c:426
+#: builtin/help.c:431
 msgid "Specifies intentionally untracked files to ignore"
-msgstr "Spezifikation von bewusst ignorierten, unbeobachteten Dateien"
+msgstr "Spezifikation von bewusst ignorierten, unversionierten Dateien"
 
-#: builtin/help.c:427
+#: builtin/help.c:432
 msgid "Defining submodule properties"
 msgstr "Definition von Submodul-Eigenschaften"
 
-#: builtin/help.c:428
+#: builtin/help.c:433
 msgid "Specifying revisions and ranges for Git"
 msgstr "Spezifikation von Commits und Bereichen für Git"
 
-#: builtin/help.c:429
+#: builtin/help.c:434
 msgid "A tutorial introduction to Git (for version 1.5.1 or newer)"
 msgstr "Eine einführende Anleitung zu Git (für Version 1.5.1 oder neuer)"
 
-#: builtin/help.c:430
+#: builtin/help.c:435
 msgid "An overview of recommended workflows with Git"
 msgstr "Eine Übersicht über empfohlene Arbeitsabläufe mit Git"
 
-#: builtin/help.c:442
+#: builtin/help.c:447
 msgid "The common Git guides are:\n"
 msgstr "Die allgemein verwendeten Git-Anleitungen sind:\n"
 
-#: builtin/help.c:463 builtin/help.c:480
+#: builtin/help.c:468 builtin/help.c:485
 #, c-format
 msgid "usage: %s%s"
 msgstr "Verwendung: %s%s"
 
-#: builtin/help.c:496
+#: builtin/help.c:501
 #, c-format
 msgid "`git %s' is aliased to `%s'"
 msgstr "für `git %s' wurde der Alias `%s' angelegt"
 
 #: builtin/index-pack.c:150
 #, c-format
@@ -6469,107 +6472,107 @@
 
 #: builtin/init-db.c:110
 #, c-format
 msgid "ignoring template %s"
 msgstr "ignoriere Vorlage %s"
 
-#: builtin/init-db.c:133
+#: builtin/init-db.c:136
 #, c-format
 msgid "insanely long template path %s"
 msgstr "zu langer Vorlagen-Pfad %s"
 
-#: builtin/init-db.c:141
+#: builtin/init-db.c:144
 #, c-format
 msgid "templates not found %s"
 msgstr "keine Vorlagen in '%s' gefunden"
 
-#: builtin/init-db.c:154
+#: builtin/init-db.c:157
 #, c-format
 msgid "not copying templates of a wrong format version %d from '%s'"
 msgstr "kopiere keine Vorlagen mit einer falschen Formatversion %d von '%s'"
 
-#: builtin/init-db.c:192
+#: builtin/init-db.c:197
 #, c-format
 msgid "insane git directory %s"
 msgstr "ungültiges Git-Verzeichnis %s"
 
-#: builtin/init-db.c:323 builtin/init-db.c:326
+#: builtin/init-db.c:331 builtin/init-db.c:334
 #, c-format
 msgid "%s already exists"
 msgstr "%s existiert bereits"
 
-#: builtin/init-db.c:355
+#: builtin/init-db.c:363
 #, c-format
 msgid "unable to handle file type %d"
 msgstr "kann nicht mit Dateityp %d umgehen"
 
-#: builtin/init-db.c:358
+#: builtin/init-db.c:366
 #, c-format
 msgid "unable to move %s to %s"
 msgstr "Konnte %s nicht nach %s verschieben"
 
 #. TRANSLATORS: The first '%s' is either "Reinitialized
 #. existing" or "Initialized empty", the second " shared" or
 #. "", and the last '%s%s' is the verbatim directory name.
-#: builtin/init-db.c:418
+#: builtin/init-db.c:426
 #, c-format
 msgid "%s%s Git repository in %s%s\n"
 msgstr "%s%s Git-Repository in %s%s\n"
 
-#: builtin/init-db.c:419
+#: builtin/init-db.c:427
 msgid "Reinitialized existing"
 msgstr "Reinitialisierte existierendes"
 
-#: builtin/init-db.c:419
+#: builtin/init-db.c:427
 msgid "Initialized empty"
 msgstr "Initialisierte leeres"
 
-#: builtin/init-db.c:420
+#: builtin/init-db.c:428
 msgid " shared"
 msgstr " gemeinsames"
 
-#: builtin/init-db.c:467
+#: builtin/init-db.c:475
 msgid ""
 "git init [-q | --quiet] [--bare] [--template=<template-directory>] [--"
 "shared[=<permissions>]] [directory]"
 msgstr ""
 "git init [-q | --quiet] [--bare] [--template=<Vorlagenverzeichnis>] [--"
 "shared[=<Berechtigungen>]] [Verzeichnis]"
 
-#: builtin/init-db.c:490
+#: builtin/init-db.c:498
 msgid "permissions"
 msgstr "Berechtigungen"
 
-#: builtin/init-db.c:491
+#: builtin/init-db.c:499
 msgid "specify that the git repository is to be shared amongst several users"
 msgstr "angeben, dass das Git-Repository mit mehreren Benutzern geteilt wird"
 
-#: builtin/init-db.c:493 builtin/prune-packed.c:57 builtin/repack.c:172
+#: builtin/init-db.c:501 builtin/prune-packed.c:57 builtin/repack.c:171
 msgid "be quiet"
 msgstr "weniger Ausgaben"
 
-#: builtin/init-db.c:525 builtin/init-db.c:530
+#: builtin/init-db.c:533 builtin/init-db.c:538
 #, c-format
 msgid "cannot mkdir %s"
 msgstr "kann Verzeichnis %s nicht erstellen"
 
-#: builtin/init-db.c:534
+#: builtin/init-db.c:542
 #, c-format
 msgid "cannot chdir to %s"
 msgstr "kann nicht in Verzeichnis %s wechseln"
 
-#: builtin/init-db.c:555
+#: builtin/init-db.c:563
 #, c-format
 msgid ""
 "%s (or --work-tree=<directory>) not allowed without specifying %s (or --git-"
 "dir=<directory>)"
 msgstr ""
 "%s (oder --work-tree=<Verzeichnis>) nicht erlaubt ohne Spezifizierung von %s "
 "(oder --git-dir=<Verzeichnis>)"
 
-#: builtin/init-db.c:583
+#: builtin/init-db.c:591
 #, c-format
 msgid "Cannot access work tree '%s'"
 msgstr "Kann nicht auf Arbeitsverzeichnis '%s' zugreifen."
 
 #: builtin/interpret-trailers.c:15
 msgid ""
@@ -6589,18 +6592,18 @@
 
 #: builtin/interpret-trailers.c:27
 msgid "trailer(s) to add"
 msgstr "Anhang/Anhänge hinzufügen"
 
 #: builtin/log.c:41
-msgid "git log [<options>] [<revision range>] [[--] <path>...]\n"
-msgstr "git log [<Optionen>] [Commitbereich>] [[--] <Pfad>...]\n"
+msgid "git log [<options>] [<revision range>] [[--] <path>...]"
+msgstr "git log [<Optionen>] [<Commitbereich>] [[--] <Pfad>...]"
 
 #: builtin/log.c:42
-msgid "   or: git show [options] <object>..."
-msgstr "   oder: git show [Optionen] <Objekt>..."
+msgid "git show [options] <object>..."
+msgstr "git show [Optionen] <Objekt>..."
 
 #: builtin/log.c:81
 #, c-format
 msgid "invalid --decorate option: %s"
 msgstr "Ungültige Option für --decorate: %s"
 
@@ -6977,224 +6980,224 @@
 msgstr "Ausgaben zur Fehlersuche anzeigen"
 
 #: builtin/ls-tree.c:28
 msgid "git ls-tree [<options>] <tree-ish> [<path>...]"
 msgstr "git ls-tree [<Optionen>] <Commit-Referenz> [<Pfad>...]"
 
-#: builtin/ls-tree.c:126
+#: builtin/ls-tree.c:127
 msgid "only show trees"
 msgstr "nur Verzeichnisse anzeigen"
 
-#: builtin/ls-tree.c:128
+#: builtin/ls-tree.c:129
 msgid "recurse into subtrees"
 msgstr "Rekursion in Unterverzeichnissen durchführen"
 
-#: builtin/ls-tree.c:130
+#: builtin/ls-tree.c:131
 msgid "show trees when recursing"
 msgstr "Verzeichnisse bei Rekursion anzeigen"
 
-#: builtin/ls-tree.c:133
+#: builtin/ls-tree.c:134
 msgid "terminate entries with NUL byte"
 msgstr "Einträge mit NUL-Byte abschließen"
 
-#: builtin/ls-tree.c:134
+#: builtin/ls-tree.c:135
 msgid "include object size"
 msgstr "Objektgröße einschließen"
 
-#: builtin/ls-tree.c:136 builtin/ls-tree.c:138
+#: builtin/ls-tree.c:137 builtin/ls-tree.c:139
 msgid "list only filenames"
 msgstr "nur Dateinamen auflisten"
 
-#: builtin/ls-tree.c:141
+#: builtin/ls-tree.c:142
 msgid "use full path names"
 msgstr "vollständige Pfadnamen verwenden"
 
-#: builtin/ls-tree.c:143
+#: builtin/ls-tree.c:144
 msgid "list entire tree; not just current directory (implies --full-name)"
 msgstr ""
 "das gesamte Verzeichnis auflisten; nicht nur das aktuelle Verzeichnis "
 "(impliziert --full-name)"
 
-#: builtin/merge.c:44
+#: builtin/merge.c:45
 msgid "git merge [options] [<commit>...]"
 msgstr "git merge [Optionen] [<Commit>...]"
 
-#: builtin/merge.c:45
+#: builtin/merge.c:46
 msgid "git merge [options] <msg> HEAD <commit>"
 msgstr "git merge [Optionen] <Beschreibung> HEAD <Commit>"
 
-#: builtin/merge.c:46
+#: builtin/merge.c:47
 msgid "git merge --abort"
 msgstr "git merge --abort"
 
-#: builtin/merge.c:99
+#: builtin/merge.c:100
 msgid "switch `m' requires a value"
 msgstr "Schalter 'm' erfordert einen Wert."
 
-#: builtin/merge.c:136
+#: builtin/merge.c:137
 #, c-format
 msgid "Could not find merge strategy '%s'.\n"
 msgstr "Konnte Merge-Strategie '%s' nicht finden.\n"
 
-#: builtin/merge.c:137
+#: builtin/merge.c:138
 #, c-format
 msgid "Available strategies are:"
 msgstr "Verfügbare Strategien sind:"
 
-#: builtin/merge.c:142
+#: builtin/merge.c:143
 #, c-format
 msgid "Available custom strategies are:"
 msgstr "Verfügbare benutzerdefinierte Strategien sind:"
 
-#: builtin/merge.c:192
+#: builtin/merge.c:193
 msgid "do not show a diffstat at the end of the merge"
 msgstr "keine Zusammenfassung der Unterschiede am Schluss des Merges anzeigen"
 
-#: builtin/merge.c:195
+#: builtin/merge.c:196
 msgid "show a diffstat at the end of the merge"
 msgstr "eine Zusammenfassung der Unterschiede am Schluss des Merges anzeigen"
 
-#: builtin/merge.c:196
+#: builtin/merge.c:197
 msgid "(synonym to --stat)"
 msgstr "(Synonym für --stat)"
 
-#: builtin/merge.c:198
+#: builtin/merge.c:199
 msgid "add (at most <n>) entries from shortlog to merge commit message"
 msgstr ""
 "(höchstens <n>) Einträge von \"shortlog\" zur Beschreibung des Merge-Commits "
 "hinzufügen"
 
-#: builtin/merge.c:201
+#: builtin/merge.c:202
 msgid "create a single commit instead of doing a merge"
 msgstr "einen einzelnen Commit anstatt eines Merges erzeugen"
 
-#: builtin/merge.c:203
+#: builtin/merge.c:204
 msgid "perform a commit if the merge succeeds (default)"
 msgstr "einen Commit durchführen, wenn der Merge erfolgreich war (Standard)"
 
-#: builtin/merge.c:205
+#: builtin/merge.c:206
 msgid "edit message before committing"
 msgstr "Bearbeitung der Beschreibung vor dem Commit"
 
-#: builtin/merge.c:206
+#: builtin/merge.c:207
 msgid "allow fast-forward (default)"
 msgstr "Vorspulen erlauben (Standard)"
 
-#: builtin/merge.c:208
+#: builtin/merge.c:209
 msgid "abort if fast-forward is not possible"
 msgstr "abbrechen, wenn kein Vorspulen möglich ist"
 
-#: builtin/merge.c:212
+#: builtin/merge.c:213
 msgid "Verify that the named commit has a valid GPG signature"
 msgstr "den genannten Commit auf eine gültige GPG-Signatur überprüfen"
 
-#: builtin/merge.c:213 builtin/notes.c:741 builtin/revert.c:89
+#: builtin/merge.c:214 builtin/notes.c:753 builtin/revert.c:89
 msgid "strategy"
 msgstr "Strategie"
 
-#: builtin/merge.c:214
+#: builtin/merge.c:215
 msgid "merge strategy to use"
 msgstr "zu verwendende Merge-Strategie"
 
-#: builtin/merge.c:215
+#: builtin/merge.c:216
 msgid "option=value"
 msgstr "Option=Wert"
 
-#: builtin/merge.c:216
+#: builtin/merge.c:217
 msgid "option for selected merge strategy"
 msgstr "Option für ausgewählte Merge-Strategie"
 
-#: builtin/merge.c:218
+#: builtin/merge.c:219
 msgid "merge commit message (for a non-fast-forward merge)"
 msgstr ""
 "Commit-Beschreibung zusammenführen (für einen Merge, der kein Vorspulen war)"
 
-#: builtin/merge.c:222
+#: builtin/merge.c:223
 msgid "abort the current in-progress merge"
 msgstr "den sich im Gange befindlichen Merge abbrechen"
 
-#: builtin/merge.c:250
+#: builtin/merge.c:251
 msgid "could not run stash."
 msgstr "Konnte \"stash\" nicht ausführen."
 
-#: builtin/merge.c:255
+#: builtin/merge.c:256
 msgid "stash failed"
 msgstr "\"stash\" fehlgeschlagen"
 
-#: builtin/merge.c:260
+#: builtin/merge.c:261
 #, c-format
 msgid "not a valid object: %s"
 msgstr "kein gültiges Objekt: %s"
 
-#: builtin/merge.c:279 builtin/merge.c:296
+#: builtin/merge.c:280 builtin/merge.c:297
 msgid "read-tree failed"
 msgstr "read-tree fehlgeschlagen"
 
-#: builtin/merge.c:326
+#: builtin/merge.c:327
 msgid " (nothing to squash)"
 msgstr " (nichts zu quetschen)"
 
-#: builtin/merge.c:339
+#: builtin/merge.c:340
 #, c-format
 msgid "Squash commit -- not updating HEAD\n"
 msgstr "Quetsche Commit -- HEAD wird nicht aktualisiert\n"
 
-#: builtin/merge.c:371
+#: builtin/merge.c:372
 msgid "Writing SQUASH_MSG"
 msgstr "Schreibe SQUASH_MSG"
 
-#: builtin/merge.c:373
+#: builtin/merge.c:374
 msgid "Finishing SQUASH_MSG"
 msgstr "Schließe SQUASH_MSG ab"
 
-#: builtin/merge.c:396
+#: builtin/merge.c:397
 #, c-format
 msgid "No merge message -- not updating HEAD\n"
 msgstr "Keine Merge-Commit-Beschreibung -- HEAD wird nicht aktualisiert\n"
 
-#: builtin/merge.c:446
+#: builtin/merge.c:447
 #, c-format
 msgid "'%s' does not point to a commit"
 msgstr "'%s' zeigt auf keinen Commit"
 
-#: builtin/merge.c:558
+#: builtin/merge.c:559
 #, c-format
 msgid "Bad branch.%s.mergeoptions string: %s"
 msgstr "Ungültiger branch.%s.mergeoptions String: %s"
 
-#: builtin/merge.c:653
+#: builtin/merge.c:654
 msgid "git write-tree failed to write a tree"
 msgstr "\"git write-tree\" schlug beim Schreiben eines \"Tree\"-Objektes fehl"
 
-#: builtin/merge.c:677
+#: builtin/merge.c:678
 msgid "Not handling anything other than two heads merge."
 msgstr "Es wird nur der Merge von zwei Branches behandelt."
 
-#: builtin/merge.c:691
+#: builtin/merge.c:692
 #, c-format
 msgid "Unknown option for merge-recursive: -X%s"
 msgstr "Unbekannte Option für merge-recursive: -X%s"
 
-#: builtin/merge.c:704
+#: builtin/merge.c:705
 #, c-format
 msgid "unable to write %s"
 msgstr "konnte %s nicht schreiben"
 
-#: builtin/merge.c:793
+#: builtin/merge.c:794
 #, c-format
 msgid "Could not read from '%s'"
 msgstr "konnte nicht von '%s' lesen"
 
-#: builtin/merge.c:802
+#: builtin/merge.c:803
 #, c-format
 msgid "Not committing merge; use 'git commit' to complete the merge.\n"
 msgstr ""
 "Merge wurde nicht committet; benutzen Sie 'git commit', um den Merge "
 "abzuschließen.\n"
 
-#: builtin/merge.c:808
+#: builtin/merge.c:809
 #, c-format
 msgid ""
 "Please enter a commit message to explain why this merge is necessary,\n"
 "especially if it merges an updated upstream into a topic branch.\n"
 "\n"
 "Lines starting with '%c' will be ignored, and an empty message aborts\n"
@@ -7204,174 +7207,174 @@
 "Merge erforderlich ist, insbesondere wenn es einen aktualisierten\n"
 "Upstream-Branch mit einem Thema-Branch zusammenführt.\n"
 "\n"
 "Zeilen beginnend mit '%c' werden ignoriert, und eine leere Beschreibung\n"
 "bricht den Commit ab.\n"
 
-#: builtin/merge.c:832
+#: builtin/merge.c:833
 msgid "Empty commit message."
 msgstr "Leere Commit-Beschreibung"
 
-#: builtin/merge.c:844
+#: builtin/merge.c:845
 #, c-format
 msgid "Wonderful.\n"
 msgstr "Wunderbar.\n"
 
-#: builtin/merge.c:907
+#: builtin/merge.c:900
 #, c-format
 msgid "Automatic merge failed; fix conflicts and then commit the result.\n"
 msgstr ""
 "Automatischer Merge fehlgeschlagen; beheben Sie die Konflikte und committen "
 "Sie dann das Ergebnis.\n"
 
-#: builtin/merge.c:923
+#: builtin/merge.c:916
 #, c-format
 msgid "'%s' is not a commit"
 msgstr "'%s' ist kein Commit"
 
-#: builtin/merge.c:964
+#: builtin/merge.c:957
 msgid "No current branch."
 msgstr "Sie befinden sich auf keinem Branch."
 
-#: builtin/merge.c:966
+#: builtin/merge.c:959
 msgid "No remote for the current branch."
 msgstr "Kein Remote-Repository für den aktuellen Branch."
 
-#: builtin/merge.c:968
+#: builtin/merge.c:961
 msgid "No default upstream defined for the current branch."
 msgstr ""
 "Es ist kein Standard-Upstream-Branch für den aktuellen Branch definiert."
 
-#: builtin/merge.c:973
+#: builtin/merge.c:966
 #, c-format
 msgid "No remote-tracking branch for %s from %s"
 msgstr "Kein Remote-Tracking-Branch für %s von %s"
 
-#: builtin/merge.c:1129
+#: builtin/merge.c:1122
 msgid "There is no merge to abort (MERGE_HEAD missing)."
 msgstr "Es gibt keinen Merge zum Abbrechen (MERGE_HEAD fehlt)"
 
-#: builtin/merge.c:1145
+#: builtin/merge.c:1138
 msgid ""
 "You have not concluded your merge (MERGE_HEAD exists).\n"
 "Please, commit your changes before you merge."
 msgstr ""
 "Sie haben Ihren Merge nicht abgeschlossen (MERGE_HEAD existiert).\n"
 "Bitte committen Sie Ihre Änderungen, bevor Sie \"merge\" ausführen."
 
-#: builtin/merge.c:1148 git-pull.sh:34
+#: builtin/merge.c:1141 git-pull.sh:34
 msgid "You have not concluded your merge (MERGE_HEAD exists)."
 msgstr "Sie haben Ihren Merge nicht abgeschlossen (MERGE_HEAD existiert)."
 
-#: builtin/merge.c:1152
+#: builtin/merge.c:1145
 msgid ""
 "You have not concluded your cherry-pick (CHERRY_PICK_HEAD exists).\n"
 "Please, commit your changes before you merge."
 msgstr ""
 "Sie haben \"cherry-pick\" nicht abgeschlossen (CHERRY_PICK_HEAD existiert).\n"
 "Bitte committen Sie Ihre Änderungen, bevor Sie \"merge\" ausführen."
 
-#: builtin/merge.c:1155
+#: builtin/merge.c:1148
 msgid "You have not concluded your cherry-pick (CHERRY_PICK_HEAD exists)."
 msgstr ""
 "Sie haben \"cherry-pick\" nicht abgeschlossen (CHERRY_PICK_HEAD existiert)."
 
-#: builtin/merge.c:1164
+#: builtin/merge.c:1157
 msgid "You cannot combine --squash with --no-ff."
 msgstr "Sie können --squash nicht mit --no-ff kombinieren."
 
-#: builtin/merge.c:1173
+#: builtin/merge.c:1166
 msgid "No commit specified and merge.defaultToUpstream not set."
 msgstr "Kein Commit angegeben und merge.defaultToUpstream ist nicht gesetzt."
 
-#: builtin/merge.c:1205
+#: builtin/merge.c:1198
 msgid "Can merge only exactly one commit into empty head"
 msgstr "Kann nur exakt einen Commit in einem leeren Branch zusammenführen."
 
-#: builtin/merge.c:1208
+#: builtin/merge.c:1201
 msgid "Squash commit into empty head not supported yet"
 msgstr ""
 "Bin auf einem Commit, der noch geboren wird; kann \"squash\" nicht ausführen."
 
-#: builtin/merge.c:1210
+#: builtin/merge.c:1203
 msgid "Non-fast-forward commit does not make sense into an empty head"
 msgstr ""
 "Nicht vorzuspulender Commit kann nicht in einem leeren Branch verwendet "
 "werden."
 
-#: builtin/merge.c:1215
+#: builtin/merge.c:1208
 #, c-format
 msgid "%s - not something we can merge"
 msgstr "%s - nichts was wir zusammenführen können"
 
-#: builtin/merge.c:1266
+#: builtin/merge.c:1259
 #, c-format
 msgid "Commit %s has an untrusted GPG signature, allegedly by %s."
 msgstr ""
 "Commit %s hat eine nicht vertrauenswürdige GPG-Signatur, angeblich von %s."
 
-#: builtin/merge.c:1269
+#: builtin/merge.c:1262
 #, c-format
 msgid "Commit %s has a bad GPG signature allegedly by %s."
 msgstr "Commit %s hat eine ungültige GPG-Signatur, angeblich von %s."
 
-#: builtin/merge.c:1272
+#: builtin/merge.c:1265
 #, c-format
 msgid "Commit %s does not have a GPG signature."
 msgstr "Commit %s hat keine GPG-Signatur."
 
-#: builtin/merge.c:1275
+#: builtin/merge.c:1268
 #, c-format
 msgid "Commit %s has a good GPG signature by %s\n"
 msgstr "Commit %s hat eine gültige GPG-Signatur von %s\n"
 
-#: builtin/merge.c:1356
+#: builtin/merge.c:1349
 #, c-format
 msgid "Updating %s..%s\n"
 msgstr "Aktualisiere %s..%s\n"
 
-#: builtin/merge.c:1395
+#: builtin/merge.c:1388
 #, c-format
 msgid "Trying really trivial in-index merge...\n"
 msgstr "Probiere wirklich trivialen \"in-index\"-Merge...\n"
 
-#: builtin/merge.c:1402
+#: builtin/merge.c:1395
 #, c-format
 msgid "Nope.\n"
 msgstr "Nein.\n"
 
-#: builtin/merge.c:1434
+#: builtin/merge.c:1427
 msgid "Not possible to fast-forward, aborting."
 msgstr "Vorspulen nicht möglich, breche ab."
 
-#: builtin/merge.c:1457 builtin/merge.c:1536
+#: builtin/merge.c:1450 builtin/merge.c:1529
 #, c-format
 msgid "Rewinding the tree to pristine...\n"
 msgstr "Rücklauf des Verzeichnisses bis zum Ursprung...\n"
 
-#: builtin/merge.c:1461
+#: builtin/merge.c:1454
 #, c-format
 msgid "Trying merge strategy %s...\n"
 msgstr "Probiere Merge-Strategie %s...\n"
 
-#: builtin/merge.c:1527
+#: builtin/merge.c:1520
 #, c-format
 msgid "No merge strategy handled the merge.\n"
 msgstr "Keine Merge-Strategie behandelt diesen Merge.\n"
 
-#: builtin/merge.c:1529
+#: builtin/merge.c:1522
 #, c-format
 msgid "Merge with strategy %s failed.\n"
 msgstr "Merge mit Strategie %s fehlgeschlagen.\n"
 
-#: builtin/merge.c:1538
+#: builtin/merge.c:1531
 #, c-format
 msgid "Using the %s to prepare resolving by hand.\n"
 msgstr "Benutzen Sie \"%s\", um die Auflösung per Hand vorzubereiten.\n"
 
-#: builtin/merge.c:1550
+#: builtin/merge.c:1543
 #, c-format
 msgid "Automatic merge went well; stopped before committing as requested\n"
 msgstr ""
 "Automatischer Merge abgeschlossen; halte, wie gewünscht, vor dem Commit an\n"
 
 #: builtin/merge-base.c:29
@@ -7557,13 +7560,13 @@
 
 #: builtin/mv.c:253
 #, c-format
 msgid "Renaming %s to %s\n"
 msgstr "Benenne %s nach %s um\n"
 
-#: builtin/mv.c:256 builtin/remote.c:726 builtin/repack.c:358
+#: builtin/mv.c:256 builtin/remote.c:728 builtin/repack.c:355
 #, c-format
 msgid "renaming '%s' failed"
 msgstr "Umbenennung von '%s' fehlgeschlagen"
 
 #: builtin/name-rev.c:255
 msgid "git name-rev [options] <commit>..."
@@ -7608,34 +7611,34 @@
 #: builtin/notes.c:24
 msgid "git notes [--ref <notes_ref>] [list [<object>]]"
 msgstr "git notes [--ref <Notiz-Referenz>] [list [<Objekt>]]"
 
 #: builtin/notes.c:25
 msgid ""
-"git notes [--ref <notes_ref>] add [-f] [-m <msg> | -F <file> | (-c | -C) "
-"<object>] [<object>]"
+"git notes [--ref <notes_ref>] add [-f] [--allow-empty] [-m <msg> | -F <file> "
+"| (-c | -C) <object>] [<object>]"
 msgstr ""
-"git notes [--ref <Notiz-Referenz>] add [-f] [-m <Nachricht> | -F <Datei> | (-"
-"c | -C) <Objekt>] [<Objekt>]"
+"git notes [--ref <Notiz-Referenz>] add [-f] [--allow-empty] [-m "
+"<Beschreibung> | -F <Datei> | (-c | -C) <Objekt>] [<Objekt>]"
 
 #: builtin/notes.c:26
 msgid "git notes [--ref <notes_ref>] copy [-f] <from-object> <to-object>"
 msgstr ""
 "git notes [--ref <Notiz-Referenz>] copy [-f] <von-Objekt> <nach-Objekt>"
 
 #: builtin/notes.c:27
 msgid ""
-"git notes [--ref <notes_ref>] append [-m <msg> | -F <file> | (-c | -C) "
-"<object>] [<object>]"
+"git notes [--ref <notes_ref>] append [--allow-empty] [-m <msg> | -F <file> | "
+"(-c | -C) <object>] [<object>]"
 msgstr ""
-"git notes [--ref <Notiz-Referenz>] append [-m <Nachricht> | -F <Datei> | (-c "
-"| -C) <Objekt>] [<Objekt>]"
+"git notes [--ref <Notiz-Referenz>] append [--allow-empty] [-m <Beschreibung> "
+"| -F <Datei> | (-c | -C) <Objekt>] [<Objekt>]"
 
 #: builtin/notes.c:28
-msgid "git notes [--ref <notes_ref>] edit [<object>]"
-msgstr "git notes [--ref <Notiz-Referenz>] edit [<Objekt>]"
+msgid "git notes [--ref <notes_ref>] edit [--allow-empty] [<object>]"
+msgstr "git notes [--ref <Notiz-Referenz>] edit [--allow-empty] [<Objekt>]"
 
 #: builtin/notes.c:29
 msgid "git notes [--ref <notes_ref>] show [<object>]"
 msgstr "git notes [--ref <Notiz-Referenz>] show [<Objekt>]"
 
 #: builtin/notes.c:30
@@ -7714,231 +7717,235 @@
 msgstr "git notes prune [<Optionen>]"
 
 #: builtin/notes.c:88
 msgid "git notes get-ref"
 msgstr "git notes get-ref"
 
-#: builtin/notes.c:136
+#: builtin/notes.c:146
 #, c-format
 msgid "unable to start 'show' for object '%s'"
 msgstr "konnte 'show' für Objekt '%s' nicht starten"
 
-#: builtin/notes.c:140
+#: builtin/notes.c:150
 msgid "could not read 'show' output"
 msgstr "Konnte Ausgabe von 'show' nicht lesen."
 
-#: builtin/notes.c:148
+#: builtin/notes.c:158
 #, c-format
 msgid "failed to finish 'show' for object '%s'"
 msgstr "konnte 'show' für Objekt '%s' nicht abschließen"
 
-#: builtin/notes.c:166 builtin/tag.c:477
+#: builtin/notes.c:173 builtin/tag.c:477
 #, c-format
 msgid "could not create file '%s'"
 msgstr "konnte Datei '%s' nicht erstellen"
 
-#: builtin/notes.c:185
+#: builtin/notes.c:192
 msgid "Please supply the note contents using either -m or -F option"
 msgstr ""
 "Bitte liefern Sie den Notiz-Inhalt unter Verwendung der Option -m oder -F."
 
-#: builtin/notes.c:206 builtin/notes.c:847
-#, c-format
-msgid "Removing note for object %s\n"
-msgstr "Entferne Notiz für Objekt %s\n"
-
-#: builtin/notes.c:211
+#: builtin/notes.c:201
 msgid "unable to write note object"
 msgstr "Konnte Notiz-Objekt nicht schreiben"
 
-#: builtin/notes.c:213
+#: builtin/notes.c:203
 #, c-format
 msgid "The note contents have been left in %s"
 msgstr "Die Notiz-Inhalte wurden in %s belassen"
 
-#: builtin/notes.c:247 builtin/tag.c:693
+#: builtin/notes.c:231 builtin/tag.c:693
 #, c-format
 msgid "cannot read '%s'"
 msgstr "kann '%s' nicht lesen"
 
-#: builtin/notes.c:249 builtin/tag.c:696
+#: builtin/notes.c:233 builtin/tag.c:696
 #, c-format
 msgid "could not open or read '%s'"
 msgstr "konnte '%s' nicht öffnen oder lesen"
 
-#: builtin/notes.c:268 builtin/notes.c:319 builtin/notes.c:321
-#: builtin/notes.c:381 builtin/notes.c:435 builtin/notes.c:518
-#: builtin/notes.c:523 builtin/notes.c:598 builtin/notes.c:640
-#: builtin/notes.c:842 builtin/tag.c:709
+#: builtin/notes.c:252 builtin/notes.c:303 builtin/notes.c:305
+#: builtin/notes.c:365 builtin/notes.c:420 builtin/notes.c:506
+#: builtin/notes.c:511 builtin/notes.c:589 builtin/notes.c:652
+#: builtin/notes.c:854 builtin/tag.c:709
 #, c-format
 msgid "Failed to resolve '%s' as a valid ref."
 msgstr "Konnte '%s' nicht als gültige Referenz auflösen."
 
-#: builtin/notes.c:271
+#: builtin/notes.c:255
 #, c-format
 msgid "Failed to read object '%s'."
 msgstr "Fehler beim Lesen des Objektes '%s'."
 
-#: builtin/notes.c:275
+#: builtin/notes.c:259
 #, c-format
 msgid "Cannot read note data from non-blob object '%s'."
 msgstr "Kann Notiz-Daten nicht von Nicht-Blob Objekt '%s' lesen."
 
-#: builtin/notes.c:315
+#: builtin/notes.c:299
 #, c-format
 msgid "Malformed input line: '%s'."
 msgstr "Fehlerhafte Eingabezeile: '%s'."
 
-#: builtin/notes.c:330
+#: builtin/notes.c:314
 #, c-format
 msgid "Failed to copy notes from '%s' to '%s'"
 msgstr "Fehler beim Kopieren der Notizen von '%s' nach '%s'"
 
-#: builtin/notes.c:374 builtin/notes.c:428 builtin/notes.c:501
-#: builtin/notes.c:513 builtin/notes.c:586 builtin/notes.c:633
-#: builtin/notes.c:907
+#: builtin/notes.c:358 builtin/notes.c:413 builtin/notes.c:489
+#: builtin/notes.c:501 builtin/notes.c:577 builtin/notes.c:645
+#: builtin/notes.c:919
 msgid "too many parameters"
 msgstr "zu viele Parameter"
 
-#: builtin/notes.c:387 builtin/notes.c:646
+#: builtin/notes.c:371 builtin/notes.c:658
 #, c-format
 msgid "No note found for object %s."
-msgstr "Kein Notiz für Objekt %s gefunden."
+msgstr "Keine Notiz für Objekt %s gefunden."
 
-#: builtin/notes.c:409 builtin/notes.c:566
+#: builtin/notes.c:392 builtin/notes.c:555
 msgid "note contents as a string"
 msgstr "Notizinhalte als Zeichenkette"
 
-#: builtin/notes.c:412 builtin/notes.c:569
+#: builtin/notes.c:395 builtin/notes.c:558
 msgid "note contents in a file"
 msgstr "Notizinhalte in einer Datei"
 
-#: builtin/notes.c:414 builtin/notes.c:417 builtin/notes.c:571
-#: builtin/notes.c:574 builtin/tag.c:628
+#: builtin/notes.c:397 builtin/notes.c:400 builtin/notes.c:560
+#: builtin/notes.c:563 builtin/tag.c:628
 msgid "object"
 msgstr "Objekt"
 
-#: builtin/notes.c:415 builtin/notes.c:572
+#: builtin/notes.c:398 builtin/notes.c:561
 msgid "reuse and edit specified note object"
 msgstr "Wiederverwendung und Bearbeitung des angegebenen Notiz-Objektes"
 
-#: builtin/notes.c:418 builtin/notes.c:575
+#: builtin/notes.c:401 builtin/notes.c:564
 msgid "reuse specified note object"
 msgstr "Wiederverwendung des angegebenen Notiz-Objektes"
 
-#: builtin/notes.c:420 builtin/notes.c:488
+#: builtin/notes.c:404 builtin/notes.c:567
+msgid "allow storing empty note"
+msgstr "Speichern leerer Notiz erlauben"
+
+#: builtin/notes.c:405 builtin/notes.c:476
 msgid "replace existing notes"
 msgstr "existierende Notizen ersetzen"
 
-#: builtin/notes.c:454
+#: builtin/notes.c:430
 #, c-format
 msgid ""
 "Cannot add notes. Found existing notes for object %s. Use '-f' to overwrite "
 "existing notes"
 msgstr ""
 "Konnte Notizen nicht hinzufügen. Existierende Notizen für Objekt %s "
 "gefunden. Verwenden Sie '-f', um die existierenden Notizen zu überschreiben."
 
-#: builtin/notes.c:459 builtin/notes.c:536
+#: builtin/notes.c:445 builtin/notes.c:524
 #, c-format
 msgid "Overwriting existing notes for object %s\n"
 msgstr "Überschreibe existierende Notizen für Objekt %s\n"
 
-#: builtin/notes.c:489
+#: builtin/notes.c:456 builtin/notes.c:617 builtin/notes.c:859
+#, c-format
+msgid "Removing note for object %s\n"
+msgstr "Entferne Notiz für Objekt %s\n"
+
+#: builtin/notes.c:477
 msgid "read objects from stdin"
 msgstr "Objekte von der Standard-Eingabe lesen"
 
-#: builtin/notes.c:491
+#: builtin/notes.c:479
 msgid "load rewriting config for <command> (implies --stdin)"
 msgstr ""
 "Konfiguration für <Kommando> beim Umschreiben von Versionen laden "
 "(impliziert --stdin)"
 
-#: builtin/notes.c:509
+#: builtin/notes.c:497
 msgid "too few parameters"
 msgstr "zu wenig Parameter"
 
-#: builtin/notes.c:530
+#: builtin/notes.c:518
 #, c-format
 msgid ""
 "Cannot copy notes. Found existing notes for object %s. Use '-f' to overwrite "
 "existing notes"
 msgstr ""
 "Kann Notizen nicht kopieren. Existierende Notizen für Objekt %s gefunden. "
 "Verwenden Sie '-f', um die existierenden Notizen zu überschreiben."
 
-#: builtin/notes.c:542
+#: builtin/notes.c:530
 #, c-format
 msgid "Missing notes on source object %s. Cannot copy."
 msgstr "Keine Notizen für Quell-Objekt %s. Kopie nicht möglich."
 
-#: builtin/notes.c:591
+#: builtin/notes.c:582
 #, c-format
 msgid ""
 "The -m/-F/-c/-C options have been deprecated for the 'edit' subcommand.\n"
 "Please use 'git notes add -f -m/-F/-c/-C' instead.\n"
 msgstr ""
 "Die Optionen -m/-F/-c/-C sind für das Unterkommando 'edit' veraltet.\n"
 "Bitte benutzen Sie stattdessen 'git notes add -f -m/-F/-c/-C'.\n"
 
-#: builtin/notes.c:738
+#: builtin/notes.c:750
 msgid "General options"
 msgstr "Allgemeine Optionen"
 
-#: builtin/notes.c:740
+#: builtin/notes.c:752
 msgid "Merge options"
 msgstr "Merge-Optionen"
 
-#: builtin/notes.c:742
+#: builtin/notes.c:754
 msgid ""
 "resolve notes conflicts using the given strategy (manual/ours/theirs/union/"
 "cat_sort_uniq)"
 msgstr ""
 "löst Konflikte bei Notizen mit der angegebenen Strategie auf (manual/ours/"
 "theirs/union/cat_sort_uniq)"
 
-#: builtin/notes.c:744
+#: builtin/notes.c:756
 msgid "Committing unmerged notes"
 msgstr "nicht zusammengeführte Notizen eintragen"
 
-#: builtin/notes.c:746
+#: builtin/notes.c:758
 msgid "finalize notes merge by committing unmerged notes"
 msgstr ""
 "Merge von Notizen abschließen, in dem nicht zusammengeführte Notizen "
 "committet werden"
 
-#: builtin/notes.c:748
+#: builtin/notes.c:760
 msgid "Aborting notes merge resolution"
 msgstr "Konfliktauflösung beim Merge von Notizen abbrechen"
 
-#: builtin/notes.c:750
+#: builtin/notes.c:762
 msgid "abort notes merge"
 msgstr "Merge von Notizen abbrechen"
 
-#: builtin/notes.c:845
+#: builtin/notes.c:857
 #, c-format
 msgid "Object %s has no note\n"
 msgstr "Objekt %s hat keine Notiz\n"
 
-#: builtin/notes.c:857
+#: builtin/notes.c:869
 msgid "attempt to remove non-existent note is not an error"
 msgstr "der Versuch, eine nicht existierende Notiz zu löschen, ist kein Fehler"
 
-#: builtin/notes.c:860
+#: builtin/notes.c:872
 msgid "read object names from the standard input"
 msgstr "Objektnamen von der Standard-Eingabe lesen"
 
-#: builtin/notes.c:941
+#: builtin/notes.c:953
 msgid "notes-ref"
 msgstr "Notiz-Referenz"
 
-#: builtin/notes.c:942
+#: builtin/notes.c:954
 msgid "use notes from <notes_ref>"
 msgstr "Notizen von <Notiz-Referenz> verwenden"
 
-#: builtin/notes.c:977 builtin/remote.c:1624
+#: builtin/notes.c:989 builtin/remote.c:1621
 #, c-format
 msgid "Unknown subcommand: %s"
 msgstr "Unbekanntes Unterkommando: %s"
 
 #: builtin/pack-objects.c:28
 msgid "git pack-objects --stdout [options...] [< ref-list | < object-list]"
@@ -7986,154 +7993,158 @@
 
 #: builtin/pack-objects.c:2603
 #, c-format
 msgid "unable to parse value '%s' for option %s"
 msgstr "konnte Wert '%s' für Option %s nicht parsen"
 
-#: builtin/pack-objects.c:2622
+#: builtin/pack-objects.c:2623
 msgid "do not show progress meter"
 msgstr "keine Fortschrittsanzeige anzeigen"
 
-#: builtin/pack-objects.c:2624
+#: builtin/pack-objects.c:2625
 msgid "show progress meter"
 msgstr "Fortschrittsanzeige anzeigen"
 
-#: builtin/pack-objects.c:2626
+#: builtin/pack-objects.c:2627
 msgid "show progress meter during object writing phase"
 msgstr ""
 "Forschrittsanzeige während der Phase des Schreibens der Objekte anzeigen"
 
-#: builtin/pack-objects.c:2629
+#: builtin/pack-objects.c:2630
 msgid "similar to --all-progress when progress meter is shown"
 msgstr "ähnlich zu --all-progress wenn Fortschrittsanzeige darstellt wird"
 
-#: builtin/pack-objects.c:2630
+#: builtin/pack-objects.c:2631
 msgid "version[,offset]"
 msgstr "version[,offset]"
 
-#: builtin/pack-objects.c:2631
+#: builtin/pack-objects.c:2632
 msgid "write the pack index file in the specified idx format version"
 msgstr ""
 "die Index-Datei des Paketes in der angegebenen Indexformat-Version schreiben"
 
-#: builtin/pack-objects.c:2634
+#: builtin/pack-objects.c:2635
 msgid "maximum size of each output pack file"
 msgstr "maximale Größe für jede ausgegebene Paketdatei"
 
-#: builtin/pack-objects.c:2636
+#: builtin/pack-objects.c:2637
 msgid "ignore borrowed objects from alternate object store"
 msgstr "geliehene Objekte von alternativem Objektspeicher ignorieren"
 
-#: builtin/pack-objects.c:2638
+#: builtin/pack-objects.c:2639
 msgid "ignore packed objects"
 msgstr "gepackte Objekte ignorieren"
 
-#: builtin/pack-objects.c:2640
+#: builtin/pack-objects.c:2641
 msgid "limit pack window by objects"
 msgstr "Paketfenster durch Objekte begrenzen"
 
-#: builtin/pack-objects.c:2642
+#: builtin/pack-objects.c:2643
 msgid "limit pack window by memory in addition to object limit"
 msgstr ""
 "Paketfenster, zusätzlich zur Objektbegrenzung, durch Speicher begrenzen"
 
-#: builtin/pack-objects.c:2644
+#: builtin/pack-objects.c:2645
 msgid "maximum length of delta chain allowed in the resulting pack"
 msgstr ""
 "maximale Länge der erlaubten Differenzverkettung im resultierenden Paket"
 
-#: builtin/pack-objects.c:2646
+#: builtin/pack-objects.c:2647
 msgid "reuse existing deltas"
 msgstr "existierende Unterschiede wiederverwenden"
 
-#: builtin/pack-objects.c:2648
+#: builtin/pack-objects.c:2649
 msgid "reuse existing objects"
 msgstr "existierende Objekte wiederverwenden"
 
-#: builtin/pack-objects.c:2650
+#: builtin/pack-objects.c:2651
 msgid "use OFS_DELTA objects"
 msgstr "OFS_DELTA Objekte verwenden"
 
-#: builtin/pack-objects.c:2652
+#: builtin/pack-objects.c:2653
 msgid "use threads when searching for best delta matches"
 msgstr ""
 "Threads bei der Suche nach den besten Übereinstimmungen bei Unterschieden "
 "verwenden"
 
-#: builtin/pack-objects.c:2654
+#: builtin/pack-objects.c:2655
 msgid "do not create an empty pack output"
 msgstr "keine leeren Pakete erzeugen"
 
-#: builtin/pack-objects.c:2656
+#: builtin/pack-objects.c:2657
 msgid "read revision arguments from standard input"
 msgstr "Argumente bezüglich Commits von der Standard-Eingabe lesen"
 
-#: builtin/pack-objects.c:2658
+#: builtin/pack-objects.c:2659
 msgid "limit the objects to those that are not yet packed"
 msgstr "die Objekte zu solchen, die noch nicht gepackt wurden, begrenzen"
 
-#: builtin/pack-objects.c:2661
+#: builtin/pack-objects.c:2662
 msgid "include objects reachable from any reference"
 msgstr "Objekte einschließen, die von jeder Referenz erreichbar sind"
 
-#: builtin/pack-objects.c:2664
+#: builtin/pack-objects.c:2665
 msgid "include objects referred by reflog entries"
 msgstr ""
 "Objekte einschließen, die von Einträgen des Reflogs referenziert werden"
 
-#: builtin/pack-objects.c:2667
+#: builtin/pack-objects.c:2668
 msgid "include objects referred to by the index"
-msgstr ""
-"Objekte einschließen, die von der Staging-Area referenziert werden"
+msgstr "Objekte einschließen, die von der Staging-Area referenziert werden"
 
-#: builtin/pack-objects.c:2670
+#: builtin/pack-objects.c:2671
 msgid "output pack to stdout"
 msgstr "Paket in die Standard-Ausgabe schreiben"
 
-#: builtin/pack-objects.c:2672
+#: builtin/pack-objects.c:2673
 msgid "include tag objects that refer to objects to be packed"
 msgstr "Tag-Objekte einschließen, die auf gepackte Objekte referenzieren"
 
-#: builtin/pack-objects.c:2674
+#: builtin/pack-objects.c:2675
 msgid "keep unreachable objects"
 msgstr "nicht erreichbare Objekte behalten"
 
-#: builtin/pack-objects.c:2675 parse-options.h:140
+#: builtin/pack-objects.c:2676 parse-options.h:140
 msgid "time"
 msgstr "Zeit"
 
-#: builtin/pack-objects.c:2676
+#: builtin/pack-objects.c:2677
 msgid "unpack unreachable objects newer than <time>"
 msgstr "nicht erreichbare Objekte entpacken, die neuer als <Zeit> sind"
 
-#: builtin/pack-objects.c:2679
+#: builtin/pack-objects.c:2680
 msgid "create thin packs"
 msgstr "dünnere Pakete erzeugen"
 
-#: builtin/pack-objects.c:2681
+#: builtin/pack-objects.c:2682
+msgid "create packs suitable for shallow fetches"
+msgstr ""
+"Pakete geeignet für Abholung mit unvollständiger Historie (shallow) erzeugen"
+
+#: builtin/pack-objects.c:2684
 msgid "ignore packs that have companion .keep file"
 msgstr "Pakete ignorieren, die .keep Dateien haben"
 
-#: builtin/pack-objects.c:2683
+#: builtin/pack-objects.c:2686
 msgid "pack compression level"
 msgstr "Komprimierungsgrad für Paketierung"
 
-#: builtin/pack-objects.c:2685
+#: builtin/pack-objects.c:2688
 msgid "do not hide commits by grafts"
 msgstr "keine künstlichen Vorgänger-Commits (\"grafts\") verbergen"
 
-#: builtin/pack-objects.c:2687
+#: builtin/pack-objects.c:2690
 msgid "use a bitmap index if available to speed up counting objects"
 msgstr ""
 "Bitmap-Index (falls verfügbar) zur Optimierung der Objektzählung benutzen"
 
-#: builtin/pack-objects.c:2689
+#: builtin/pack-objects.c:2692
 msgid "write a bitmap index together with the pack index"
 msgstr "Bitmap-Index zusammen mit Pack-Index schreiben"
 
-#: builtin/pack-objects.c:2778
+#: builtin/pack-objects.c:2783
 msgid "Counting objects"
 msgstr "Zähle Objekte"
 
 #: builtin/pack-refs.c:6
 msgid "git pack-refs [options]"
 msgstr "git pack-refs [Optionen]"
@@ -8470,16 +8481,12 @@
 msgstr "Referenzname>:<Erwartungswert"
 
 #: builtin/push.c:504
 msgid "require old value of ref to be at this value"
 msgstr "Referenz muss sich auf dem angegebenen Wert befinden"
 
-#: builtin/push.c:506
-msgid "check"
-msgstr "check|on-demand"
-
 #: builtin/push.c:507
 msgid "control recursive pushing of submodules"
 msgstr "rekursiven \"push\" von Submodulen steuern"
 
 #: builtin/push.c:509
 msgid "use thin pack"
@@ -8741,97 +8748,97 @@
 #: builtin/remote.c:177
 msgid "specifying branches to track makes sense only with fetch mirrors"
 msgstr ""
 "Die Angabe von zu folgenden Branches kann nur mit dem Anfordern von "
 "Spiegelarchiven verwendet werden."
 
-#: builtin/remote.c:185 builtin/remote.c:641
+#: builtin/remote.c:187 builtin/remote.c:643
 #, c-format
 msgid "remote %s already exists."
 msgstr "externes Repository %s existiert bereits"
 
-#: builtin/remote.c:189 builtin/remote.c:645
+#: builtin/remote.c:191 builtin/remote.c:647
 #, c-format
 msgid "'%s' is not a valid remote name"
 msgstr "'%s' ist kein gültiger Name für ein Remote-Repository"
 
-#: builtin/remote.c:233
+#: builtin/remote.c:235
 #, c-format
 msgid "Could not setup master '%s'"
 msgstr "Konnte symbolische Referenz für Hauptbranch von '%s' nicht einrichten"
 
-#: builtin/remote.c:333
+#: builtin/remote.c:335
 #, c-format
 msgid "Could not get fetch map for refspec %s"
 msgstr "Konnte Fetch-Map für Refspec %s nicht bekommen"
 
-#: builtin/remote.c:434 builtin/remote.c:442
+#: builtin/remote.c:436 builtin/remote.c:444
 msgid "(matching)"
 msgstr "(übereinstimmend)"
 
-#: builtin/remote.c:446
+#: builtin/remote.c:448
 msgid "(delete)"
 msgstr "(lösche)"
 
-#: builtin/remote.c:590 builtin/remote.c:596 builtin/remote.c:602
+#: builtin/remote.c:592 builtin/remote.c:598 builtin/remote.c:604
 #, c-format
 msgid "Could not append '%s' to '%s'"
 msgstr "Konnte '%s' nicht an '%s' anhängen."
 
-#: builtin/remote.c:634 builtin/remote.c:798 builtin/remote.c:898
+#: builtin/remote.c:636 builtin/remote.c:795 builtin/remote.c:895
 #, c-format
 msgid "No such remote: %s"
 msgstr "Kein solches Remote-Repository: %s"
 
-#: builtin/remote.c:651
+#: builtin/remote.c:653
 #, c-format
 msgid "Could not rename config section '%s' to '%s'"
 msgstr "Konnte Sektion '%s' in Konfiguration nicht nach '%s' umbenennen"
 
-#: builtin/remote.c:657 builtin/remote.c:850
+#: builtin/remote.c:659 builtin/remote.c:847
 #, c-format
 msgid "Could not remove config section '%s'"
 msgstr "Konnte Sektion '%s' nicht aus Konfiguration entfernen"
 
-#: builtin/remote.c:672
+#: builtin/remote.c:674
 #, c-format
 msgid ""
 "Not updating non-default fetch refspec\n"
 "\t%s\n"
 "\tPlease update the configuration manually if necessary."
 msgstr ""
 "Keine Aktualisierung der nicht standardmäßigen Refspec für \"fetch\"\n"
 "\t%s\n"
 "\tBitte aktualisieren Sie, falls notwendig, die Konfiguration manuell."
 
-#: builtin/remote.c:678
+#: builtin/remote.c:680
 #, c-format
 msgid "Could not append '%s'"
 msgstr "Konnte '%s' nicht anhängen."
 
-#: builtin/remote.c:689
+#: builtin/remote.c:691
 #, c-format
 msgid "Could not set '%s'"
 msgstr "Konnte '%s' nicht setzen"
 
-#: builtin/remote.c:711
+#: builtin/remote.c:713
 #, c-format
 msgid "deleting '%s' failed"
 msgstr "Konnte '%s' nicht löschen"
 
-#: builtin/remote.c:745
+#: builtin/remote.c:747
 #, c-format
 msgid "creating '%s' failed"
 msgstr "Konnte '%s' nicht erstellen"
 
-#: builtin/remote.c:769
+#: builtin/remote.c:766
 #, c-format
 msgid "Could not remove branch %s"
 msgstr "Konnte Branch %s nicht löschen"
 
-#: builtin/remote.c:836
+#: builtin/remote.c:833
 msgid ""
 "Note: A branch outside the refs/remotes/ hierarchy was not removed;\n"
 "to delete it, use:"
 msgid_plural ""
 "Note: Some branches outside the refs/remotes/ hierarchy were not removed;\n"
 "to delete them, use:"
@@ -8841,348 +8848,348 @@
 "um diesen zu löschen, benutzen Sie:"
 msgstr[1] ""
 "Hinweis: Einige Branches außer der refs/remotes/ Hierarchie wurden nicht "
 "entfernt;\n"
 "um diese zu entfernen, benutzen Sie:"
 
-#: builtin/remote.c:951
+#: builtin/remote.c:948
 #, c-format
 msgid " new (next fetch will store in remotes/%s)"
 msgstr " neu (wird bei nächstem \"fetch\" in remotes/%s gespeichert)"
 
-#: builtin/remote.c:954
+#: builtin/remote.c:951
 msgid " tracked"
 msgstr " gefolgt"
 
-#: builtin/remote.c:956
+#: builtin/remote.c:953
 msgid " stale (use 'git remote prune' to remove)"
 msgstr " veraltet (benutzen Sie 'git remote prune' zum Löschen)"
 
-#: builtin/remote.c:958
+#: builtin/remote.c:955
 msgid " ???"
 msgstr " ???"
 
-#: builtin/remote.c:999
+#: builtin/remote.c:996
 #, c-format
 msgid "invalid branch.%s.merge; cannot rebase onto > 1 branch"
 msgstr "ungültiges branch.%s.merge; kann Rebase nicht auf > 1 Branch ausführen"
 
-#: builtin/remote.c:1006
+#: builtin/remote.c:1003
 #, c-format
 msgid "rebases onto remote %s"
 msgstr "Rebase auf Remote-Branch %s"
 
-#: builtin/remote.c:1009
+#: builtin/remote.c:1006
 #, c-format
 msgid " merges with remote %s"
 msgstr " führt mit Remote-Branch %s zusammen"
 
-#: builtin/remote.c:1010
+#: builtin/remote.c:1007
 msgid "    and with remote"
 msgstr "    und mit Remote-Branch"
 
-#: builtin/remote.c:1012
+#: builtin/remote.c:1009
 #, c-format
 msgid "merges with remote %s"
 msgstr "führt mit Remote-Branch %s zusammen"
 
-#: builtin/remote.c:1013
+#: builtin/remote.c:1010
 msgid "   and with remote"
 msgstr "   und mit Remote-Branch"
 
-#: builtin/remote.c:1059
+#: builtin/remote.c:1056
 msgid "create"
 msgstr "erstellt"
 
-#: builtin/remote.c:1062
+#: builtin/remote.c:1059
 msgid "delete"
 msgstr "gelöscht"
 
-#: builtin/remote.c:1066
+#: builtin/remote.c:1063
 msgid "up to date"
 msgstr "aktuell"
 
-#: builtin/remote.c:1069
+#: builtin/remote.c:1066
 msgid "fast-forwardable"
 msgstr "vorspulbar"
 
-#: builtin/remote.c:1072
+#: builtin/remote.c:1069
 msgid "local out of date"
 msgstr "lokal nicht aktuell"
 
-#: builtin/remote.c:1079
+#: builtin/remote.c:1076
 #, c-format
 msgid "    %-*s forces to %-*s (%s)"
 msgstr "    %-*s erzwingt Versandt nach %-*s (%s)"
 
-#: builtin/remote.c:1082
+#: builtin/remote.c:1079
 #, c-format
 msgid "    %-*s pushes to %-*s (%s)"
 msgstr "    %-*s versendet nach %-*s (%s)"
 
-#: builtin/remote.c:1086
+#: builtin/remote.c:1083
 #, c-format
 msgid "    %-*s forces to %s"
 msgstr "    %-*s erzwingt Versand nach %s"
 
-#: builtin/remote.c:1089
+#: builtin/remote.c:1086
 #, c-format
 msgid "    %-*s pushes to %s"
 msgstr "    %-*s versendet nach %s"
 
-#: builtin/remote.c:1157
+#: builtin/remote.c:1154
 msgid "do not query remotes"
 msgstr "keine Abfrage von Remote-Repositories"
 
-#: builtin/remote.c:1184
+#: builtin/remote.c:1181
 #, c-format
 msgid "* remote %s"
 msgstr "* Remote-Repository %s"
 
-#: builtin/remote.c:1185
+#: builtin/remote.c:1182
 #, c-format
 msgid "  Fetch URL: %s"
 msgstr "  URL zum Abholen: %s"
 
-#: builtin/remote.c:1186 builtin/remote.c:1333
+#: builtin/remote.c:1183 builtin/remote.c:1334
 msgid "(no URL)"
 msgstr "(keine URL)"
 
-#: builtin/remote.c:1195 builtin/remote.c:1197
+#: builtin/remote.c:1192 builtin/remote.c:1194
 #, c-format
 msgid "  Push  URL: %s"
 msgstr "  URL zum Versenden: %s"
 
-#: builtin/remote.c:1199 builtin/remote.c:1201 builtin/remote.c:1203
+#: builtin/remote.c:1196 builtin/remote.c:1198 builtin/remote.c:1200
 #, c-format
 msgid "  HEAD branch: %s"
 msgstr "  Hauptbranch: %s"
 
-#: builtin/remote.c:1205
+#: builtin/remote.c:1202
 #, c-format
 msgid ""
 "  HEAD branch (remote HEAD is ambiguous, may be one of the following):\n"
 msgstr ""
 "  Hauptbranch (externer HEAD ist mehrdeutig, könnte einer der folgenden "
 "sein):\n"
 
-#: builtin/remote.c:1217
+#: builtin/remote.c:1214
 #, c-format
 msgid "  Remote branch:%s"
 msgid_plural "  Remote branches:%s"
 msgstr[0] "  Remote-Branch:%s"
 msgstr[1] "  Remote-Branches:%s"
 
-#: builtin/remote.c:1220 builtin/remote.c:1247
+#: builtin/remote.c:1217 builtin/remote.c:1244
 msgid " (status not queried)"
 msgstr " (Zustand nicht abgefragt)"
 
-#: builtin/remote.c:1229
+#: builtin/remote.c:1226
 msgid "  Local branch configured for 'git pull':"
 msgid_plural "  Local branches configured for 'git pull':"
 msgstr[0] "  Lokaler Branch konfiguriert für 'git pull':"
 msgstr[1] "  Lokale Branches konfiguriert für 'git pull':"
 
-#: builtin/remote.c:1237
+#: builtin/remote.c:1234
 msgid "  Local refs will be mirrored by 'git push'"
 msgstr "  Lokale Referenzen werden von 'git push' gespiegelt"
 
-#: builtin/remote.c:1244
+#: builtin/remote.c:1241
 #, c-format
 msgid "  Local ref configured for 'git push'%s:"
 msgid_plural "  Local refs configured for 'git push'%s:"
 msgstr[0] "  Lokale Referenz konfiguriert für 'git push'%s:"
 msgstr[1] "  Lokale Referenzen konfiguriert für 'git push'%s:"
 
-#: builtin/remote.c:1265
+#: builtin/remote.c:1262
 msgid "set refs/remotes/<name>/HEAD according to remote"
 msgstr "setzt refs/remotes/<Name>/HEAD gemäß dem Remote-Repository"
 
-#: builtin/remote.c:1267
+#: builtin/remote.c:1264
 msgid "delete refs/remotes/<name>/HEAD"
 msgstr "entfernt refs/remotes/<Name>/HEAD"
 
-#: builtin/remote.c:1282
+#: builtin/remote.c:1279
 msgid "Cannot determine remote HEAD"
 msgstr "Kann HEAD des Remote-Repositories nicht bestimmen"
 
-#: builtin/remote.c:1284
+#: builtin/remote.c:1281
 msgid "Multiple remote HEAD branches. Please choose one explicitly with:"
 msgstr ""
 "Mehrere Hauptbranches im Remote-Repository. Bitte wählen Sie explizit einen "
 "aus mit:"
 
-#: builtin/remote.c:1294
+#: builtin/remote.c:1291
 #, c-format
 msgid "Could not delete %s"
 msgstr "Konnte %s nicht entfernen"
 
-#: builtin/remote.c:1302
+#: builtin/remote.c:1299
 #, c-format
 msgid "Not a valid ref: %s"
 msgstr "keine gültige Referenz: %s"
 
-#: builtin/remote.c:1304
+#: builtin/remote.c:1301
 #, c-format
 msgid "Could not setup %s"
 msgstr "Konnte %s nicht einrichten"
 
-#: builtin/remote.c:1322
+#: builtin/remote.c:1319
 #, c-format
 msgid " %s will become dangling!"
 msgstr " %s wird unreferenziert!"
 
-#: builtin/remote.c:1323
+#: builtin/remote.c:1320
 #, c-format
 msgid " %s has become dangling!"
 msgstr " %s wurde unreferenziert!"
 
-#: builtin/remote.c:1329
+#: builtin/remote.c:1330
 #, c-format
 msgid "Pruning %s"
 msgstr "entferne veraltete Branches von %s"
 
-#: builtin/remote.c:1330
+#: builtin/remote.c:1331
 #, c-format
 msgid "URL: %s"
 msgstr "URL: %s"
 
-#: builtin/remote.c:1357
+#: builtin/remote.c:1354
 #, c-format
 msgid " * [would prune] %s"
 msgstr " * [würde veralteten Branch entfernen] %s"
 
-#: builtin/remote.c:1360
+#: builtin/remote.c:1357
 #, c-format
 msgid " * [pruned] %s"
 msgstr "* [veralteten Branch entfernt] %s"
 
-#: builtin/remote.c:1405
+#: builtin/remote.c:1402
 msgid "prune remotes after fetching"
 msgstr "entferne veraltete Branches im Remote-Repository nach \"fetch\""
 
-#: builtin/remote.c:1471 builtin/remote.c:1545
+#: builtin/remote.c:1468 builtin/remote.c:1542
 #, c-format
 msgid "No such remote '%s'"
 msgstr "Kein solches Remote-Repository '%s'"
 
-#: builtin/remote.c:1491
+#: builtin/remote.c:1488
 msgid "add branch"
 msgstr "Branch hinzufügen"
 
-#: builtin/remote.c:1498
+#: builtin/remote.c:1495
 msgid "no remote specified"
 msgstr "kein Remote-Repository angegeben"
 
-#: builtin/remote.c:1520
+#: builtin/remote.c:1517
 msgid "manipulate push URLs"
 msgstr "URLs für \"push\" manipulieren"
 
-#: builtin/remote.c:1522
+#: builtin/remote.c:1519
 msgid "add URL"
 msgstr "URL hinzufügen"
 
-#: builtin/remote.c:1524
+#: builtin/remote.c:1521
 msgid "delete URLs"
 msgstr "URLs löschen"
 
-#: builtin/remote.c:1531
+#: builtin/remote.c:1528
 msgid "--add --delete doesn't make sense"
 msgstr ""
 "Die Optionen --add und --delete können nicht gemeinsam verwendet werden."
 
-#: builtin/remote.c:1571
+#: builtin/remote.c:1568
 #, c-format
 msgid "Invalid old URL pattern: %s"
 msgstr "ungültiges altes URL Format: %s"
 
-#: builtin/remote.c:1579
+#: builtin/remote.c:1576
 #, c-format
 msgid "No such URL found: %s"
 msgstr "Keine solche URL gefunden: %s"
 
-#: builtin/remote.c:1581
+#: builtin/remote.c:1578
 msgid "Will not delete all non-push URLs"
 msgstr "Werde keine URLs entfernen, die nicht für \"push\" bestimmt sind"
 
-#: builtin/remote.c:1595
+#: builtin/remote.c:1592
 msgid "be verbose; must be placed before a subcommand"
 msgstr "erweiterte Ausgaben; muss vor einem Unterkommando angegeben werden"
 
 #: builtin/repack.c:17
 msgid "git repack [options]"
 msgstr "git repack [Optionen]"
 
-#: builtin/repack.c:160
+#: builtin/repack.c:159
 msgid "pack everything in a single pack"
 msgstr "alles in eine einzige Pack-Datei packen"
 
-#: builtin/repack.c:162
+#: builtin/repack.c:161
 msgid "same as -a, and turn unreachable objects loose"
 msgstr "genau wie -a, unerreichbare Objekte werden aber nicht gelöscht"
 
-#: builtin/repack.c:165
+#: builtin/repack.c:164
 msgid "remove redundant packs, and run git-prune-packed"
 msgstr "redundante Pakete entfernen und \"git-prune-packed\" ausführen"
 
-#: builtin/repack.c:167
+#: builtin/repack.c:166
 msgid "pass --no-reuse-delta to git-pack-objects"
 msgstr "--no-reuse-delta an git-pack-objects übergeben"
 
-#: builtin/repack.c:169
+#: builtin/repack.c:168
 msgid "pass --no-reuse-object to git-pack-objects"
 msgstr "--no-reuse-object an git-pack-objects übergeben"
 
-#: builtin/repack.c:171
+#: builtin/repack.c:170
 msgid "do not run git-update-server-info"
 msgstr "git-update-server-info nicht ausführen"
 
-#: builtin/repack.c:174
+#: builtin/repack.c:173
 msgid "pass --local to git-pack-objects"
 msgstr "--local an git-pack-objects übergeben"
 
-#: builtin/repack.c:176
+#: builtin/repack.c:175
 msgid "write bitmap index"
 msgstr "Bitmap-Index schreiben"
 
-#: builtin/repack.c:177
+#: builtin/repack.c:176
 msgid "approxidate"
 msgstr "Datumsangabe"
 
-#: builtin/repack.c:178
+#: builtin/repack.c:177
 msgid "with -A, do not loosen objects older than this"
 msgstr "mit -A, keine Objekte älter als dieses Datum löschen"
 
-#: builtin/repack.c:180
+#: builtin/repack.c:179
 msgid "size of the window used for delta compression"
 msgstr "Größe des Fensters für die Delta-Kompression"
 
-#: builtin/repack.c:181 builtin/repack.c:185
+#: builtin/repack.c:180 builtin/repack.c:184
 msgid "bytes"
 msgstr "Bytes"
 
-#: builtin/repack.c:182
+#: builtin/repack.c:181
 msgid "same as the above, but limit memory size instead of entries count"
 msgstr ""
 "gleiches wie oben, aber die Speichergröße anstatt der\n"
 "Anzahl der Einträge limitieren"
 
-#: builtin/repack.c:184
+#: builtin/repack.c:183
 msgid "limits the maximum delta depth"
 msgstr "die maximale Delta-Tiefe limitieren"
 
-#: builtin/repack.c:186
+#: builtin/repack.c:185
 msgid "maximum size of each packfile"
 msgstr "maximale Größe für jede Paketdatei"
 
-#: builtin/repack.c:188
+#: builtin/repack.c:187
 msgid "repack objects in packs marked with .keep"
 msgstr ""
 "Objekte umpacken, die sich in mit .keep markierten Pack-Dateien befinden"
 
-#: builtin/repack.c:374
+#: builtin/repack.c:371
 #, c-format
 msgid "removing '%s' failed"
 msgstr "Löschen von '%s' fehlgeschlagen"
 
 #: builtin/replace.c:19
 msgid "git replace [-f] <object> <replacement>"
@@ -9668,88 +9675,88 @@
 #: builtin/shortlog.c:236
 msgid "Linewrap output"
 msgstr "Ausgabe mit Zeilenumbrüchen"
 
 #: builtin/show-branch.c:9
 msgid ""
-"git show-branch [-a|--all] [-r|--remotes] [--topo-order | --date-order] [--"
-"current] [--color[=<when>] | --no-color] [--sparse] [--more=<n> | --list | --"
-"independent | --merge-base] [--no-name | --sha1-name] [--topics] [(<rev> | "
-"<glob>)...]"
-msgstr ""
-"git show-branch [-a|--all] [-r|--remotes] [--topo-order | --date-order] [--"
-"current] [--color[=<Wann>] | --no-color] [--sparse] [--more=<n> | --list | --"
-"independent | --merge-base] [--no-name | --sha1-name] [--topics] [(<Commit> "
-"| <glob>)...]"
+"git show-branch [-a|--all] [-r|--remotes] [--topo-order | --date-order]\n"
+"\t\t[--current] [--color[=<when>] | --no-color] [--sparse]\n"
+"\t\t[--more=<n> | --list | --independent | --merge-base]\n"
+"\t\t[--no-name | --sha1-name] [--topics] [(<rev> | <glob>)...]"
+msgstr ""
+"git show-branch [-a|--all] [-r|--remotes] [--topo-order | --date-order]\n"
+"\t\t[--current] [--color[=<Wann>] | --no-color] [--sparse]\n"
+"\t\t[--more=<n> | --list | --independent | --merge-base]\n"
+"\t\t[--no-name | --sha1-name] [--topics] [(<Commit> | <glob>)...]"
 
-#: builtin/show-branch.c:10
+#: builtin/show-branch.c:13
 msgid "git show-branch (-g|--reflog)[=<n>[,<base>]] [--list] [<ref>]"
 msgstr "git show-branch (-g|--reflog)[=<n>[,<Basis>]] [--list] [<Referenz>]"
 
-#: builtin/show-branch.c:649
+#: builtin/show-branch.c:652
 msgid "show remote-tracking and local branches"
 msgstr "Remote-Tracking und lokale Branches anzeigen"
 
-#: builtin/show-branch.c:651
+#: builtin/show-branch.c:654
 msgid "show remote-tracking branches"
 msgstr "Remote-Tracking-Branches anzeigen"
 
-#: builtin/show-branch.c:653
+#: builtin/show-branch.c:656
 msgid "color '*!+-' corresponding to the branch"
 msgstr "'*!+-' entsprechend des Branches einfärben"
 
-#: builtin/show-branch.c:655
+#: builtin/show-branch.c:658
 msgid "show <n> more commits after the common ancestor"
 msgstr "<n> weitere Commits nach dem gemeinsamen Vorgänger-Commit anzeigen"
 
-#: builtin/show-branch.c:657
+#: builtin/show-branch.c:660
 msgid "synonym to more=-1"
 msgstr "Synonym für more=-1"
 
-#: builtin/show-branch.c:658
+#: builtin/show-branch.c:661
 msgid "suppress naming strings"
 msgstr "Namen unterdrücken"
 
-#: builtin/show-branch.c:660
+#: builtin/show-branch.c:663
 msgid "include the current branch"
 msgstr "den aktuellen Branch einbeziehen"
 
-#: builtin/show-branch.c:662
+#: builtin/show-branch.c:665
 msgid "name commits with their object names"
 msgstr "Commits nach ihren Objektnamen benennen"
 
-#: builtin/show-branch.c:664
+#: builtin/show-branch.c:667
 msgid "show possible merge bases"
 msgstr "mögliche Merge-Basen anzeigen"
 
-#: builtin/show-branch.c:666
+#: builtin/show-branch.c:669
 msgid "show refs unreachable from any other ref"
 msgstr ""
 "Referenzen, die unerreichbar von allen anderen Referenzen sind, anzeigen"
 
-#: builtin/show-branch.c:668
+#: builtin/show-branch.c:671
 msgid "show commits in topological order"
 msgstr "Commits in topologischer Ordnung anzeigen"
 
-#: builtin/show-branch.c:671
+#: builtin/show-branch.c:674
 msgid "show only commits not on the first branch"
 msgstr "nur Commits anzeigen, die sich nicht im ersten Branch befinden"
 
-#: builtin/show-branch.c:673
+#: builtin/show-branch.c:676
 msgid "show merges reachable from only one tip"
 msgstr "Merges anzeigen, die nur von einem Branch aus erreichbar sind"
 
-#: builtin/show-branch.c:675
+#: builtin/show-branch.c:678
 msgid "topologically sort, maintaining date order where possible"
 msgstr "topologische Sortierung, Beibehaltung Datumsordnung wo möglich"
 
-#: builtin/show-branch.c:678
+#: builtin/show-branch.c:681
 msgid "<n>[,<base>]"
 msgstr "<n>[,<Basis>]"
 
-#: builtin/show-branch.c:679
+#: builtin/show-branch.c:682
 msgid "show <n> most recent ref-log entries starting at base"
 msgstr "die <n> jüngsten Einträge im Reflog, beginnend an der Basis, anzeigen"
 
 #: builtin/show-ref.c:10
 msgid ""
 "git show-ref [-q|--quiet] [--verify] [--head] [-d|--dereference] [-s|--"
@@ -9816,26 +9823,26 @@
 msgstr "symbolische Referenzen löschen"
 
 #: builtin/symbolic-ref.c:42
 msgid "shorten ref output"
 msgstr "verkürzte Ausgabe der Referenzen"
 
-#: builtin/symbolic-ref.c:43 builtin/update-ref.c:362
+#: builtin/symbolic-ref.c:43 builtin/update-ref.c:358
 msgid "reason"
 msgstr "Grund"
 
-#: builtin/symbolic-ref.c:43 builtin/update-ref.c:362
+#: builtin/symbolic-ref.c:43 builtin/update-ref.c:358
 msgid "reason of the update"
 msgstr "Grund für die Aktualisierung"
 
 #: builtin/tag.c:22
 msgid ""
 "git tag [-a|-s|-u <key-id>] [-f] [-m <msg>|-F <file>] <tagname> [<head>]"
 msgstr ""
-"git tag [-a|-s|-u <Schlüssel-id>] [-f] [-m <Nachricht>|-F <Datei>] <Tagname> "
-"[<Commit>]"
+"git tag [-a|-s|-u <Schlüssel-id>] [-f] [-m <Beschreibung>|-F <Datei>] "
+"<Tagname> [<Commit>]"
 
 #: builtin/tag.c:23
 msgid "git tag -d <tagname>..."
 msgstr "git tag -d <Tagname>..."
 
 #: builtin/tag.c:24
@@ -10187,25 +10194,25 @@
 msgstr "git update-ref [Optionen]    <Referenzname> <neuerWert> [<alterWert>]"
 
 #: builtin/update-ref.c:11
 msgid "git update-ref [options] --stdin [-z]"
 msgstr "git update-ref [Optionen] --stdin [-z]"
 
-#: builtin/update-ref.c:363
+#: builtin/update-ref.c:359
 msgid "delete the reference"
 msgstr "diese Referenz löschen"
 
-#: builtin/update-ref.c:365
+#: builtin/update-ref.c:361
 msgid "update <refname> not the one it points to"
 msgstr "<Referenzname> aktualisieren, nicht den Verweis"
 
-#: builtin/update-ref.c:366
+#: builtin/update-ref.c:362
 msgid "stdin has NUL-terminated arguments"
 msgstr "Standard-Eingabe hat durch NUL-Zeichen abgeschlossene Argumente"
 
-#: builtin/update-ref.c:367
+#: builtin/update-ref.c:363
 msgid "read updates from stdin"
 msgstr "Aktualisierungen von der Standard-Eingabe lesen"
 
 #: builtin/update-server-info.c:6
 msgid "git update-server-info [--force]"
 msgstr "git update-server-info [--force]"
@@ -10259,13 +10266,13 @@
 msgstr "nur nützlich für Fehlersuche"
 
 #: credential-cache--daemon.c:267
 msgid "print debugging messages to stderr"
 msgstr "Meldungen zur Fehlersuche in Standard-Fehlerausgabe ausgeben"
 
-#: git.c:17
+#: git.c:14
 msgid ""
 "'git help -a' and 'git help -g' list available subcommands and some\n"
 "concept guides. See 'git help <command>' or 'git help <concept>'\n"
 "to read about a specific subcommand or concept."
 msgstr ""
 "'git help -a' und 'git help -g' listet verfügbare Unterkommandos und\n"
@@ -10389,119 +10396,119 @@
 #: rerere.h:27
 msgid "update the index with reused conflict resolution if possible"
 msgstr ""
 "Staging-Area, wenn möglich, mit wiederverwendeter Konfliktauflösung "
 "aktualisieren"
 
-#: git-am.sh:52
+#: git-am.sh:53
 msgid "You need to set your committer info first"
 msgstr "Sie müssen zuerst die Informationen zum Commit-Ersteller setzen."
 
-#: git-am.sh:97
+#: git-am.sh:98
 msgid ""
 "You seem to have moved HEAD since the last 'am' failure.\n"
 "Not rewinding to ORIG_HEAD"
 msgstr ""
 "Sie scheinen seit dem letzten gescheiterten 'am' HEAD geändert zu haben.\n"
 "Keine Zurücksetzung zu ORIG_HEAD."
 
-#: git-am.sh:107
+#: git-am.sh:108
 #, sh-format
 msgid ""
 "When you have resolved this problem, run \"$cmdline --continue\".\n"
 "If you prefer to skip this patch, run \"$cmdline --skip\" instead.\n"
 "To restore the original branch and stop patching, run \"$cmdline --abort\"."
 msgstr ""
 "Wenn Sie das Problem gelöst haben, führen Sie \"$cmdline --continue\" aus.\n"
 "Falls Sie diesen Patch auslassen möchten, führen Sie stattdessen\n"
 "\"$cmdline --skip\" aus.\n"
 "Um den ursprünglichen Branch wiederherzustellen und die Anwendung der\n"
 "Patches abzubrechen, führen Sie \"$cmdline --abort\" aus."
 
-#: git-am.sh:123
+#: git-am.sh:124
 msgid "Cannot fall back to three-way merge."
 msgstr "Kann nicht zu 3-Wege-Merge zurückfallen."
 
-#: git-am.sh:139
+#: git-am.sh:140
 msgid "Repository lacks necessary blobs to fall back on 3-way merge."
 msgstr ""
 "Dem Repository fehlen notwendige Blobs um auf einen 3-Wege-Merge "
 "zurückzufallen."
 
-#: git-am.sh:141
+#: git-am.sh:142
 msgid "Using index info to reconstruct a base tree..."
 msgstr ""
 "Verwende Informationen aus der Staging-Area, um einen Basisverzeichnis "
 "nachzustellen"
 
-#: git-am.sh:156
+#: git-am.sh:157
 msgid ""
 "Did you hand edit your patch?\n"
 "It does not apply to blobs recorded in its index."
 msgstr ""
 "Haben Sie den Patch per Hand editiert?\n"
 "Er kann nicht auf die Blobs in seiner 'index' Zeile angewendet werden."
 
-#: git-am.sh:165
+#: git-am.sh:166
 msgid "Falling back to patching base and 3-way merge..."
 msgstr "Falle zurück zum Patchen der Basis und des 3-Wege-Merges..."
 
-#: git-am.sh:181
+#: git-am.sh:182
 msgid "Failed to merge in the changes."
 msgstr "Merge der Änderungen fehlgeschlagen"
 
-#: git-am.sh:276
+#: git-am.sh:277
 msgid "Only one StGIT patch series can be applied at once"
 msgstr "Es kann nur eine StGIT Patch-Serie auf einmal angewendet werden."
 
-#: git-am.sh:363
+#: git-am.sh:364
 #, sh-format
 msgid "Patch format $patch_format is not supported."
 msgstr "Patch-Format $patch_format wird nicht unterstützt."
 
-#: git-am.sh:365
+#: git-am.sh:366
 msgid "Patch format detection failed."
 msgstr "Patch-Formaterkennung fehlgeschlagen."
 
-#: git-am.sh:392
+#: git-am.sh:398
 msgid ""
 "The -b/--binary option has been a no-op for long time, and\n"
 "it will be removed. Please do not use it anymore."
 msgstr ""
 "Die -b/--binary Option hat seit Langem keinen Effekt und wird\n"
 "entfernt. Bitte nicht mehr verwenden."
 
-#: git-am.sh:486
+#: git-am.sh:496
 #, sh-format
 msgid "previous rebase directory $dotest still exists but mbox given."
 msgstr ""
 "Vorheriges Rebase-Verzeichnis $dotest existiert noch, aber mbox gegeben."
 
-#: git-am.sh:491
+#: git-am.sh:501
 msgid "Please make up your mind. --skip or --abort?"
 msgstr "Bitte werden Sie sich klar. --skip oder --abort?"
 
-#: git-am.sh:527
+#: git-am.sh:537
 #, sh-format
 msgid ""
 "Stray $dotest directory found.\n"
 "Use \"git am --abort\" to remove it."
 msgstr ""
 "Stray $dotest Verzeichnis gefunden.\n"
 "Benutzen Sie \"git am --abort\", um es zu entfernen."
 
-#: git-am.sh:535
+#: git-am.sh:545
 msgid "Resolve operation not in progress, we are not resuming."
 msgstr "Es ist keine Auflösung im Gange, es wird nicht fortgesetzt."
 
-#: git-am.sh:601
+#: git-am.sh:612
 #, sh-format
 msgid "Dirty index: cannot apply patches (dirty: $files)"
 msgstr "Geänderte Staging-Area: kann Patches nicht anwenden (geändert: $files)"
 
-#: git-am.sh:705
+#: git-am.sh:722
 #, sh-format
 msgid ""
 "Patch is empty.  Was it split wrong?\n"
 "If you would prefer to skip this patch, instead run \"$cmdline --skip\".\n"
 "To restore the original branch and stop patching run \"$cmdline --abort\"."
 msgstr ""
@@ -10509,76 +10516,76 @@
 "Wenn Sie diesen Patch auslassen möchten, führen Sie stattdessen\n"
 "\"$cmdline --skip\" aus.\n"
 "Um den ursprünglichen Branch wiederherzustellen und die Anwendung der "
 "Patches\n"
 "abzubrechen, führen Sie \"$cmdline --abort\" aus."
 
-#: git-am.sh:732
+#: git-am.sh:749
 msgid "Patch does not have a valid e-mail address."
 msgstr "Patch enthält keine gültige E-Mail-Adresse."
 
-#: git-am.sh:779
+#: git-am.sh:796
 msgid "cannot be interactive without stdin connected to a terminal."
 msgstr ""
 "Kann nicht interaktiv sein, ohne dass die Standard-Eingabe mit einem "
 "Terminal verbunden ist."
 
-#: git-am.sh:783
+#: git-am.sh:800
 msgid "Commit Body is:"
 msgstr "Commit-Beschreibung ist:"
 
 #. TRANSLATORS: Make sure to include [y], [n], [e], [v] and [a]
 #. in your translation. The program will only accept English
 #. input at this point.
-#: git-am.sh:790
+#: git-am.sh:807
 msgid "Apply? [y]es/[n]o/[e]dit/[v]iew patch/[a]ccept all "
 msgstr "Anwenden? [y]es/[n]o/[e]dit/[v]iew patch/[a]ccept all "
 
-#: git-am.sh:826
+#: git-am.sh:843
 #, sh-format
 msgid "Applying: $FIRSTLINE"
 msgstr "Wende an: $FIRSTLINE"
 
-#: git-am.sh:847
+#: git-am.sh:864
 msgid ""
 "No changes - did you forget to use 'git add'?\n"
 "If there is nothing left to stage, chances are that something else\n"
 "already introduced the same changes; you might want to skip this patch."
 msgstr ""
 "Keine Änderungen - haben Sie vergessen 'git add' zu benutzen?\n"
 "Wenn keine Änderungen mehr zum Commit vorzumerken sind, könnten\n"
 "diese bereits anderweitig eingefügt worden sein; Sie könnten diesen Patch\n"
 "auslassen."
 
-#: git-am.sh:855
+#: git-am.sh:872
 msgid ""
 "You still have unmerged paths in your index\n"
 "did you forget to use 'git add'?"
 msgstr ""
 "Sie haben immer noch nicht zusammengeführte Pfade in der Staging-Area.\n"
 "Haben Sie vergessen 'git add' zu benutzen?"
 
-#: git-am.sh:871
+#: git-am.sh:888
 msgid "No changes -- Patch already applied."
 msgstr "Keine Änderungen -- Patches bereits angewendet."
 
-#: git-am.sh:881
+#: git-am.sh:898
 #, sh-format
 msgid "Patch failed at $msgnum $FIRSTLINE"
 msgstr "Anwendung des Patches fehlgeschlagen bei $msgnum $FIRSTLINE"
 
-#: git-am.sh:884
+#: git-am.sh:901
 #, sh-format
 msgid ""
 "The copy of the patch that failed is found in:\n"
 "   $dotest/patch"
 msgstr ""
 "Die Kopie des fehlgeschlagenen Patches befindet sich in:\n"
 "   $dotest/patch"
 
-#: git-am.sh:902
+#: git-am.sh:919
 msgid "applying to an empty history"
 msgstr "auf leere Historie anwenden"
 
 #: git-bisect.sh:48
 msgid "You need to start by \"git bisect start\""
 msgstr "Sie müssen mit \"git bisect start\" beginnen."
@@ -10637,106 +10644,106 @@
 
 #: git-bisect.sh:244
 #, sh-format
 msgid "Bad rev input: $rev"
 msgstr "Ungültige Referenz-Eingabe: $rev"
 
-#: git-bisect.sh:250
+#: git-bisect.sh:253
 msgid "'git bisect bad' can take only one argument."
 msgstr "'git bisect bad' kann nur ein Argument entgegennehmen."
 
-#: git-bisect.sh:273
+#: git-bisect.sh:276
 msgid "Warning: bisecting only with a bad commit."
 msgstr "Warnung: binäre Suche nur mit einem fehlerhaften Commit"
 
 #. TRANSLATORS: Make sure to include [Y] and [n] in your
 #. translation. The program will only accept English input
 #. at this point.
-#: git-bisect.sh:279
+#: git-bisect.sh:282
 msgid "Are you sure [Y/n]? "
 msgstr "Sind Sie sicher [Y/n]? "
 
-#: git-bisect.sh:289
+#: git-bisect.sh:292
 msgid ""
 "You need to give me at least one good and one bad revision.\n"
 "(You can use \"git bisect bad\" and \"git bisect good\" for that.)"
 msgstr ""
 "Sie müssen mindestens einen korrekten und einen fehlerhaften Commit "
 "angeben.\n"
 "(Sie können dafür \"git bisect bad\" und \"git bisect good\" benutzen.)"
 
-#: git-bisect.sh:292
+#: git-bisect.sh:295
 msgid ""
 "You need to start by \"git bisect start\".\n"
 "You then need to give me at least one good and one bad revision.\n"
 "(You can use \"git bisect bad\" and \"git bisect good\" for that.)"
 msgstr ""
 "Sie müssen mit \"git bisect start\" beginnen.\n"
 "Danach müssen Sie mindestens einen korrekten und einen fehlerhaften Commit "
 "angeben.\n"
 "(Sie können dafür \"git bisect bad\" und \"git bisect good\" benutzen.)"
 
-#: git-bisect.sh:363 git-bisect.sh:490
+#: git-bisect.sh:366 git-bisect.sh:493
 msgid "We are not bisecting."
 msgstr "keine binäre Suche im Gange"
 
-#: git-bisect.sh:370
+#: git-bisect.sh:373
 #, sh-format
 msgid "'$invalid' is not a valid commit"
 msgstr "'$invalid' ist kein gültiger Commit"
 
-#: git-bisect.sh:379
+#: git-bisect.sh:382
 #, sh-format
 msgid ""
 "Could not check out original HEAD '$branch'.\n"
 "Try 'git bisect reset <commit>'."
 msgstr ""
 "Konnte den ursprünglichen HEAD '$branch' nicht auschecken.\n"
 "Versuchen Sie 'git bisect reset <Commit>'."
 
-#: git-bisect.sh:406
+#: git-bisect.sh:409
 msgid "No logfile given"
 msgstr "Keine Log-Datei gegeben"
 
-#: git-bisect.sh:407
+#: git-bisect.sh:410
 #, sh-format
 msgid "cannot read $file for replaying"
 msgstr "kann $file nicht für das Abspielen lesen"
 
-#: git-bisect.sh:424
+#: git-bisect.sh:427
 msgid "?? what are you talking about?"
 msgstr "?? Was reden Sie da?"
 
-#: git-bisect.sh:436
+#: git-bisect.sh:439
 #, sh-format
 msgid "running $command"
 msgstr "führe $command aus"
 
-#: git-bisect.sh:443
+#: git-bisect.sh:446
 #, sh-format
 msgid ""
 "bisect run failed:\n"
 "exit code $res from '$command' is < 0 or >= 128"
 msgstr ""
 "'bisect run' fehlgeschlagen:\n"
 "Rückkehrwert $res von '$command' ist < 0 oder >= 128"
 
-#: git-bisect.sh:469
+#: git-bisect.sh:472
 msgid "bisect run cannot continue any more"
 msgstr "'bisect run' kann nicht mehr fortgesetzt werden"
 
-#: git-bisect.sh:475
+#: git-bisect.sh:478
 #, sh-format
 msgid ""
 "bisect run failed:\n"
 "'bisect_state $state' exited with error code $res"
 msgstr ""
 "'bisect run' fehlgeschlagen:\n"
 "'bisect_state $state' wurde mit Fehlerwert $res beendet"
 
-#: git-bisect.sh:482
+#: git-bisect.sh:485
 msgid "bisect run success"
 msgstr "'bisect run' erfolgreich ausgeführt"
 
 #: git-pull.sh:21
 msgid ""
 "Pull is not possible because you have unmerged files.\n"
@@ -11387,12 +11394,27 @@
 
 #: git-submodule.sh:1331
 #, sh-format
 msgid "Synchronizing submodule url for '$displaypath'"
 msgstr "Synchronisiere Submodul-URL für '$displaypath'"
 
+#~ msgid "no files added"
+#~ msgstr "keine Dateien hinzugefügt"
+
+#~ msgid "force creation (when already exists)"
+#~ msgstr "Branch auch erzeugen, wenn dieser bereits existiert"
+
+#~ msgid "Malformed ident string: '%s'"
+#~ msgstr "Fehlerhafter Ident-String: '%s'"
+
+#~ msgid "slot"
+#~ msgstr "Slot"
+
+#~ msgid "check"
+#~ msgstr "check|on-demand"
+
 #~ msgid "Failed to lock ref for update"
 #~ msgstr "Fehler beim Sperren der Referenz zur Aktualisierung."
 
 #~ msgid "Failed to write ref"
 #~ msgstr "Fehler beim Schreiben der Referenz."
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/po/fr.po /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/po/fr.po
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/po/fr.po	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/po/fr.po	2015-02-06 05:40:08.000000000 +0800
@@ -70,14 +70,14 @@
 #   work(ing) tree   |  copie de travail
 #
 msgid ""
 msgstr ""
 "Project-Id-Version: git\n"
 "Report-Msgid-Bugs-To: Git Mailing List <git@vger.kernel.org>\n"
-"POT-Creation-Date: 2014-11-20 09:42+0800\n"
-"PO-Revision-Date: 2014-11-20 16:10+0800\n"
+"POT-Creation-Date: 2015-01-21 14:21+0800\n"
+"PO-Revision-Date: 2015-01-21 14:57+0800\n"
 "Last-Translator: Jean-Noël Avila <jn.avila@free.fr>\n"
 "Language-Team: Jean-Noël Avila <jn.avila@free.fr>\n"
 "Language: fr\n"
 "MIME-Version: 1.0\n"
 "Content-Type: text/plain; charset=UTF-8\n"
 "Content-Transfer-Encoding: 8bit\n"
@@ -113,82 +113,82 @@
 "apparenté> [<chemin>...]"
 
 #: archive.c:14
 msgid "git archive --remote <repo> [--exec <cmd>] --list"
 msgstr "git archive --remote <dépôt> [--exec <commande>] --list"
 
-#: archive.c:334 builtin/add.c:137 builtin/add.c:427 builtin/rm.c:328
+#: archive.c:342 builtin/add.c:137 builtin/add.c:427 builtin/rm.c:328
 #, c-format
 msgid "pathspec '%s' did not match any files"
 msgstr "le chemin '%s' ne correspond à aucun fichier"
 
-#: archive.c:419
+#: archive.c:427
 msgid "fmt"
 msgstr "fmt"
 
-#: archive.c:419
+#: archive.c:427
 msgid "archive format"
 msgstr "format d'archive"
 
-#: archive.c:420 builtin/log.c:1204
+#: archive.c:428 builtin/log.c:1204
 msgid "prefix"
 msgstr "préfixe"
 
-#: archive.c:421
+#: archive.c:429
 msgid "prepend prefix to each pathname in the archive"
 msgstr "préfixer chaque chemin de fichier dans l'archive"
 
-#: archive.c:422 builtin/archive.c:88 builtin/blame.c:2517
+#: archive.c:430 builtin/archive.c:88 builtin/blame.c:2517
 #: builtin/blame.c:2518 builtin/config.c:57 builtin/fast-export.c:986
 #: builtin/fast-export.c:988 builtin/grep.c:712 builtin/hash-object.c:101
-#: builtin/ls-files.c:489 builtin/ls-files.c:492 builtin/notes.c:411
-#: builtin/notes.c:568 builtin/read-tree.c:109 parse-options.h:151
+#: builtin/ls-files.c:489 builtin/ls-files.c:492 builtin/notes.c:394
+#: builtin/notes.c:557 builtin/read-tree.c:109 parse-options.h:151
 msgid "file"
 msgstr "fichier"
 
-#: archive.c:423 builtin/archive.c:89
+#: archive.c:431 builtin/archive.c:89
 msgid "write the archive to this file"
 msgstr "écrire l'archive dans ce fichier"
 
-#: archive.c:425
+#: archive.c:433
 msgid "read .gitattributes in working directory"
 msgstr "lire .gitattributes dans le répertoire de travail"
 
-#: archive.c:426
+#: archive.c:434
 msgid "report archived files on stderr"
 msgstr "afficher les fichiers archivés sur stderr"
 
-#: archive.c:427
+#: archive.c:435
 msgid "store only"
 msgstr "stockage seulement"
 
-#: archive.c:428
+#: archive.c:436
 msgid "compress faster"
 msgstr "compression rapide"
 
-#: archive.c:436
+#: archive.c:444
 msgid "compress better"
 msgstr "compression efficace"
 
-#: archive.c:439
+#: archive.c:447
 msgid "list supported archive formats"
 msgstr "afficher les formats d'archive supportés"
 
-#: archive.c:441 builtin/archive.c:90 builtin/clone.c:85
+#: archive.c:449 builtin/archive.c:90 builtin/clone.c:86
 msgid "repo"
 msgstr "dépôt"
 
-#: archive.c:442 builtin/archive.c:91
+#: archive.c:450 builtin/archive.c:91
 msgid "retrieve the archive from remote repository <repo>"
 msgstr "récupérer l'archive depuis le dépôt distant <dépôt>"
 
-#: archive.c:443 builtin/archive.c:92 builtin/notes.c:490
+#: archive.c:451 builtin/archive.c:92 builtin/notes.c:478
 msgid "command"
 msgstr "commande"
 
-#: archive.c:444 builtin/archive.c:93
+#: archive.c:452 builtin/archive.c:93
 msgid "path to the remote git-upload-archive command"
 msgstr "chemin vers la commande distante git-upload-archive"
 
 #: attr.c:258
 msgid ""
 "Negative patterns are ignored in git attributes\n"
@@ -322,24 +322,24 @@
 
 #: bundle.c:61
 #, c-format
 msgid "unrecognized header: %s%s (%d)"
 msgstr "en-tête non reconnu : %s%s (%d)"
 
-#: bundle.c:87 builtin/commit.c:788
+#: bundle.c:87 builtin/commit.c:770
 #, c-format
 msgid "could not open '%s'"
 msgstr "impossible d'ouvrir '%s'"
 
 #: bundle.c:139
 msgid "Repository lacks these prerequisite commits:"
 msgstr "Le dépôt ne dispose pas des commits prérequis suivants :"
 
-#: bundle.c:163 sequencer.c:641 sequencer.c:1096 builtin/blame.c:2706
-#: builtin/branch.c:652 builtin/commit.c:1085 builtin/log.c:330
-#: builtin/log.c:823 builtin/log.c:1432 builtin/log.c:1669 builtin/merge.c:357
+#: bundle.c:163 sequencer.c:645 sequencer.c:1100 builtin/blame.c:2706
+#: builtin/branch.c:652 builtin/commit.c:1049 builtin/log.c:330
+#: builtin/log.c:823 builtin/log.c:1432 builtin/log.c:1669 builtin/merge.c:358
 #: builtin/shortlog.c:158
 msgid "revision walk setup failed"
 msgstr "échec de la préparation du parcours des révisions"
 
 #: bundle.c:185
 #, c-format
@@ -391,13 +391,13 @@
 msgstr "impossible de créer '%s'"
 
 #: bundle.c:475
 msgid "index-pack died"
 msgstr "l'index de groupe a disparu"
 
-#: color.c:157
+#: color.c:260
 #, c-format
 msgid "invalid color value: %.*s"
 msgstr "Valeur invalide de couleur : %.*s"
 
 #: commit.c:40
 #, c-format
@@ -441,33 +441,33 @@
 
 #: config.c:885
 #, c-format
 msgid "invalid mode for object creation: %s"
 msgstr "mode invalide pour la création d'objet : %s"
 
-#: config.c:1201
+#: config.c:1211
 msgid "unable to parse command-line config"
 msgstr "lecture de la configuration de ligne de commande impossible"
 
-#: config.c:1262
+#: config.c:1272
 msgid "unknown error occured while reading the configuration files"
 msgstr "erreur inconnue pendant la lecture des fichiers de configuration"
 
-#: config.c:1586
+#: config.c:1596
 #, c-format
 msgid "unable to parse '%s' from command-line config"
 msgstr ""
 "impossible d'analyser '%s' depuis le configuration en ligne de commande"
 
-#: config.c:1588
+#: config.c:1598
 #, c-format
 msgid "bad config variable '%s' in file '%s' at line %d"
 msgstr ""
 "variable de configuration '%s' incorrecte dans le fichier '%s' à la ligne %d"
 
-#: config.c:1647
+#: config.c:1657
 #, c-format
 msgid "%s has multiple values"
 msgstr "%s a des valeurs multiples"
 
 #: connected.c:69
 msgid "Could not run 'git rev-list'"
@@ -708,26 +708,26 @@
 
 #: help.c:440
 #, c-format
 msgid "%s: %s - %s"
 msgstr "%s: %s - %s"
 
-#: lockfile.c:275
+#: lockfile.c:283
 msgid "BUG: reopen a lockfile that is still open"
 msgstr "BUG: réouverture d'un fichier verrou déjà ouvert"
 
-#: lockfile.c:277
+#: lockfile.c:285
 msgid "BUG: reopen a lockfile that has been committed"
 msgstr "BUG: réouverture d'un fichier verrou validé"
 
 #: merge.c:41
 msgid "failed to read the cache"
 msgstr "impossible de lire le cache"
 
-#: merge.c:94 builtin/checkout.c:356 builtin/checkout.c:562
-#: builtin/clone.c:659
+#: merge.c:94 builtin/checkout.c:374 builtin/checkout.c:580
+#: builtin/clone.c:662
 msgid "unable to write new index file"
 msgstr "impossible d'écrire le nouveau fichier d'index"
 
 #: merge-recursive.c:189
 #, c-format
 msgid "(bad commit)\n"
@@ -739,269 +739,269 @@
 msgstr "échec de addinfo_cache pour le chemin '%s'"
 
 #: merge-recursive.c:270
 msgid "error building trees"
 msgstr "erreur de construction des arbres"
 
-#: merge-recursive.c:691
+#: merge-recursive.c:688
 #, c-format
 msgid "failed to create path '%s'%s"
 msgstr "impossible de créer le chemin '%s' %s"
 
-#: merge-recursive.c:702
+#: merge-recursive.c:699
 #, c-format
 msgid "Removing %s to make room for subdirectory\n"
 msgstr "Suppression de %s pour faire de la place pour le sous-répertoire\n"
 
-#: merge-recursive.c:716 merge-recursive.c:737
+#: merge-recursive.c:713 merge-recursive.c:734
 msgid ": perhaps a D/F conflict?"
 msgstr ": peut-être un conflit D/F ?"
 
-#: merge-recursive.c:727
+#: merge-recursive.c:724
 #, c-format
 msgid "refusing to lose untracked file at '%s'"
 msgstr "refus de perdre le fichier non suivi '%s'"
 
-#: merge-recursive.c:767
+#: merge-recursive.c:764
 #, c-format
 msgid "cannot read object %s '%s'"
 msgstr "impossible de lire l'objet %s '%s'"
 
-#: merge-recursive.c:769
+#: merge-recursive.c:766
 #, c-format
 msgid "blob expected for %s '%s'"
 msgstr "blob attendu pour %s '%s'"
 
-#: merge-recursive.c:792 builtin/clone.c:318
+#: merge-recursive.c:789 builtin/clone.c:321
 #, c-format
 msgid "failed to open '%s'"
 msgstr "échec à l'ouverture de '%s'"
 
-#: merge-recursive.c:800
+#: merge-recursive.c:797
 #, c-format
 msgid "failed to symlink '%s'"
 msgstr "échec à la création du lien symbolique '%s'"
 
-#: merge-recursive.c:803
+#: merge-recursive.c:800
 #, c-format
 msgid "do not know what to do with %06o %s '%s'"
 msgstr "ne sait pas traiter %06o %s '%s'"
 
-#: merge-recursive.c:941
+#: merge-recursive.c:938
 msgid "Failed to execute internal merge"
 msgstr "Échec à l'exécution de la fusion interne"
 
-#: merge-recursive.c:945
+#: merge-recursive.c:942
 #, c-format
 msgid "Unable to add %s to database"
 msgstr "Impossible d'ajouter %s à la base de données"
 
-#: merge-recursive.c:961
+#: merge-recursive.c:958
 msgid "unsupported object type in the tree"
 msgstr "type d'objet non supporté dans l'arbre"
 
-#: merge-recursive.c:1036 merge-recursive.c:1050
+#: merge-recursive.c:1033 merge-recursive.c:1047
 #, c-format
 msgid ""
 "CONFLICT (%s/delete): %s deleted in %s and %s in %s. Version %s of %s left "
 "in tree."
 msgstr ""
 "CONFLIT (%s/suppression) : %s supprimé dans %s et %s dans %s. Version %s de "
 "%s laissée dans l'arbre."
 
-#: merge-recursive.c:1042 merge-recursive.c:1055
+#: merge-recursive.c:1039 merge-recursive.c:1052
 #, c-format
 msgid ""
 "CONFLICT (%s/delete): %s deleted in %s and %s in %s. Version %s of %s left "
 "in tree at %s."
 msgstr ""
 "CONFLIT (%s/suppression) : %s supprimé dans %s et %s dans %s. Version %s de "
 "%s laissée dans l'arbre dans le fichier %s."
 
-#: merge-recursive.c:1096
+#: merge-recursive.c:1093
 msgid "rename"
 msgstr "renommage"
 
-#: merge-recursive.c:1096
+#: merge-recursive.c:1093
 msgid "renamed"
 msgstr "renommé"
 
-#: merge-recursive.c:1152
+#: merge-recursive.c:1149
 #, c-format
 msgid "%s is a directory in %s adding as %s instead"
 msgstr "%s est un répertoire dans %s ajouté plutôt comme %s"
 
-#: merge-recursive.c:1174
+#: merge-recursive.c:1171
 #, c-format
 msgid ""
 "CONFLICT (rename/rename): Rename \"%s\"->\"%s\" in branch \"%s\" rename \"%s"
 "\"->\"%s\" in \"%s\"%s"
 msgstr ""
 "CONFLIT (renommage/renommage) : Renommage de \"%s\"->\"%s\" dans la branche "
 "\"%s\" et renommage \"%s\"->\"%s\" dans \"%s\"%s"
 
-#: merge-recursive.c:1179
+#: merge-recursive.c:1176
 msgid " (left unresolved)"
 msgstr " (laissé non résolu)"
 
-#: merge-recursive.c:1233
+#: merge-recursive.c:1230
 #, c-format
 msgid "CONFLICT (rename/rename): Rename %s->%s in %s. Rename %s->%s in %s"
 msgstr ""
 "CONFLIT (renommage/renommage) : renommage '%s'->'%s' dans %s. Renommage '%s'-"
 ">'%s' dans %s"
 
-#: merge-recursive.c:1263
+#: merge-recursive.c:1260
 #, c-format
 msgid "Renaming %s to %s and %s to %s instead"
 msgstr "Renommage de %s en %s et de %s en %s à la place"
 
-#: merge-recursive.c:1462
+#: merge-recursive.c:1459
 #, c-format
 msgid "CONFLICT (rename/add): Rename %s->%s in %s. %s added in %s"
 msgstr ""
 "CONFLIT (renommage/ajout) : Renommage de %s->%s dans %s. %s ajouté dans %s"
 
-#: merge-recursive.c:1472
+#: merge-recursive.c:1469
 #, c-format
 msgid "Adding merged %s"
 msgstr "Ajout de %s fusionné"
 
-#: merge-recursive.c:1477 merge-recursive.c:1675
+#: merge-recursive.c:1474 merge-recursive.c:1672
 #, c-format
 msgid "Adding as %s instead"
 msgstr "Ajout plutôt comme %s"
 
-#: merge-recursive.c:1528
+#: merge-recursive.c:1525
 #, c-format
 msgid "cannot read object %s"
 msgstr "impossible de lire l'objet %s"
 
-#: merge-recursive.c:1531
+#: merge-recursive.c:1528
 #, c-format
 msgid "object %s is not a blob"
 msgstr "l'objet %s n'est pas un blob"
 
-#: merge-recursive.c:1579
+#: merge-recursive.c:1576
 msgid "modify"
 msgstr "modification"
 
-#: merge-recursive.c:1579
+#: merge-recursive.c:1576
 msgid "modified"
 msgstr "modifié"
 
-#: merge-recursive.c:1589
+#: merge-recursive.c:1586
 msgid "content"
 msgstr "contenu"
 
-#: merge-recursive.c:1596
+#: merge-recursive.c:1593
 msgid "add/add"
 msgstr "ajout/ajout"
 
-#: merge-recursive.c:1630
+#: merge-recursive.c:1627
 #, c-format
 msgid "Skipped %s (merged same as existing)"
 msgstr "%s sauté (fusion identique à l'existant)"
 
-#: merge-recursive.c:1644
+#: merge-recursive.c:1641
 #, c-format
 msgid "Auto-merging %s"
 msgstr "Fusion automatique de %s"
 
-#: merge-recursive.c:1648 git-submodule.sh:1150
+#: merge-recursive.c:1645 git-submodule.sh:1150
 msgid "submodule"
 msgstr "sous-module"
 
-#: merge-recursive.c:1649
+#: merge-recursive.c:1646
 #, c-format
 msgid "CONFLICT (%s): Merge conflict in %s"
 msgstr "CONFLIT (%s) : Conflit de fusion dans %s"
 
-#: merge-recursive.c:1735
+#: merge-recursive.c:1732
 #, c-format
 msgid "Removing %s"
 msgstr "Suppression de %s"
 
-#: merge-recursive.c:1760
+#: merge-recursive.c:1757
 msgid "file/directory"
 msgstr "fichier/répertoire"
 
-#: merge-recursive.c:1766
+#: merge-recursive.c:1763
 msgid "directory/file"
 msgstr "répertoire/fichier"
 
-#: merge-recursive.c:1771
+#: merge-recursive.c:1768
 #, c-format
 msgid "CONFLICT (%s): There is a directory with name %s in %s. Adding %s as %s"
 msgstr ""
 "CONFLIT (%s) : Il y a un répertoire nommé %s dans %s. Ajout de %s comme %s"
 
-#: merge-recursive.c:1781
+#: merge-recursive.c:1778
 #, c-format
 msgid "Adding %s"
 msgstr "Ajout de %s"
 
-#: merge-recursive.c:1798
+#: merge-recursive.c:1795
 msgid "Fatal merge failure, shouldn't happen."
 msgstr "Échec fatal de fusion, qui ne devrait jamais arriver."
 
-#: merge-recursive.c:1817
+#: merge-recursive.c:1814
 msgid "Already up-to-date!"
 msgstr "Déjà à jour !"
 
-#: merge-recursive.c:1826
+#: merge-recursive.c:1823
 #, c-format
 msgid "merging of trees %s and %s failed"
 msgstr "échec de fusion des arbres %s et %s"
 
-#: merge-recursive.c:1856
+#: merge-recursive.c:1853
 #, c-format
 msgid "Unprocessed path??? %s"
 msgstr "Chemin non traité ??? %s"
 
-#: merge-recursive.c:1901
+#: merge-recursive.c:1898
 msgid "Merging:"
 msgstr "Fusion :"
 
-#: merge-recursive.c:1914
+#: merge-recursive.c:1911
 #, c-format
 msgid "found %u common ancestor:"
 msgid_plural "found %u common ancestors:"
 msgstr[0] "%u ancêtre commun trouvé :"
 msgstr[1] "%u ancêtres communs trouvés :"
 
-#: merge-recursive.c:1951
+#: merge-recursive.c:1948
 msgid "merge returned no commit"
 msgstr "la fusion n'a pas retourné de commit"
 
-#: merge-recursive.c:2008
+#: merge-recursive.c:2005
 #, c-format
 msgid "Could not parse object '%s'"
 msgstr "Impossible d'analyser l'objet '%s'"
 
-#: merge-recursive.c:2019 builtin/merge.c:666
+#: merge-recursive.c:2016 builtin/merge.c:667
 msgid "Unable to write index."
 msgstr "Impossible d'écrire l'index."
 
 #: notes-utils.c:41
 msgid "Cannot commit uninitialized/unreferenced notes tree"
 msgstr "Impossible de valider un arbre de notes non initialisé/référencé"
 
-#: notes-utils.c:83
+#: notes-utils.c:82
 #, c-format
 msgid "Bad notes.rewriteMode value: '%s'"
 msgstr "Mauvaise valeur de notes.rewriteMode : '%s'"
 
-#: notes-utils.c:93
+#: notes-utils.c:92
 #, c-format
 msgid "Refusing to rewrite notes in %s (outside of refs/notes/)"
 msgstr "Refus de réécrire des notes dans %s (hors de refs/notes/)"
 
 #. TRANSLATORS: The first %s is the name of the
 #. environment variable, the second %s is its value
-#: notes-utils.c:120
+#: notes-utils.c:119
 #, c-format
 msgid "Bad %s value: '%s'"
 msgstr "Mauvaise valeur de %s : '%s'"
 
 #: object.c:241
 #, c-format
@@ -1106,22 +1106,22 @@
 msgstr "impossible d'analyser le format --pretty"
 
 #: progress.c:225
 msgid "done"
 msgstr "fait"
 
-#: read-cache.c:1261
+#: read-cache.c:1267
 #, c-format
 msgid ""
 "index.version set, but the value is invalid.\n"
 "Using version %i"
 msgstr ""
 "version d'index renseignée, mais la valeur est invalide.\n"
 "Utilisation de la version %i"
 
-#: read-cache.c:1271
+#: read-cache.c:1277
 #, c-format
 msgid ""
 "GIT_INDEX_VERSION set, but the value is invalid.\n"
 "Using version %i"
 msgstr ""
 "GIT_INDEX_VERSION est renseigné, mais la valeur est invalide.\n"
@@ -1143,54 +1143,54 @@
 msgstr "%s suit à la fois %s et %s"
 
 #: remote.c:798
 msgid "Internal error"
 msgstr "Erreur interne"
 
-#: remote.c:1968
+#: remote.c:1980
 #, c-format
 msgid "Your branch is based on '%s', but the upstream is gone.\n"
 msgstr "Votre branche est basée sur '%s', mais la branche amont a disparu.\n"
 
-#: remote.c:1972
+#: remote.c:1984
 msgid "  (use \"git branch --unset-upstream\" to fixup)\n"
 msgstr "  (utilisez \"git branch --unset-upstream\" pour corriger)\n"
 
-#: remote.c:1975
+#: remote.c:1987
 #, c-format
 msgid "Your branch is up-to-date with '%s'.\n"
 msgstr "Votre branche est à jour avec '%s'.\n"
 
-#: remote.c:1979
+#: remote.c:1991
 #, c-format
 msgid "Your branch is ahead of '%s' by %d commit.\n"
 msgid_plural "Your branch is ahead of '%s' by %d commits.\n"
 msgstr[0] "Votre branche est en avance sur '%s' de %d commit.\n"
 msgstr[1] "Votre branche est en avance sur '%s' de %d commits.\n"
 
-#: remote.c:1985
+#: remote.c:1997
 msgid "  (use \"git push\" to publish your local commits)\n"
 msgstr "  (utilisez \"git push\" pour publier vos commits locaux)\n"
 
-#: remote.c:1988
+#: remote.c:2000
 #, c-format
 msgid "Your branch is behind '%s' by %d commit, and can be fast-forwarded.\n"
 msgid_plural ""
 "Your branch is behind '%s' by %d commits, and can be fast-forwarded.\n"
 msgstr[0] ""
 "Votre branche est en retard sur '%s' de %d commit, et peut être mise à jour "
 "en avance rapide.\n"
 msgstr[1] ""
 "Votre branche est en retard sur '%s' de %d commits, et peut être mise à jour "
 "en avance rapide.\n"
 
-#: remote.c:1996
+#: remote.c:2008
 msgid "  (use \"git pull\" to update your local branch)\n"
 msgstr "  (utilisez \"git pull\" pour mettre à jour votre branche locale)\n"
 
-#: remote.c:1999
+#: remote.c:2011
 #, c-format
 msgid ""
 "Your branch and '%s' have diverged,\n"
 "and have %d and %d different commit each, respectively.\n"
 msgid_plural ""
 "Your branch and '%s' have diverged,\n"
@@ -1199,13 +1199,13 @@
 "Votre branche et '%s' ont divergé,\n"
 "et ont %d et %d commit différent chacune respectivement.\n"
 msgstr[1] ""
 "Votre branche et '%s' ont divergé,\n"
 "et ont %d et %d commits différents chacune respectivement.\n"
 
-#: remote.c:2009
+#: remote.c:2021
 msgid "  (use \"git pull\" to merge the remote branch into yours)\n"
 msgstr ""
 "  (utilisez \"git pull\" pour fusionner la branche distante dans la vôtre)\n"
 
 #: run-command.c:87
 msgid "open /dev/null failed"
@@ -1213,28 +1213,28 @@
 
 #: run-command.c:89
 #, c-format
 msgid "dup2(%d,%d) failed"
 msgstr "échec de dup2(%d,%d)"
 
-#: send-pack.c:265
+#: send-pack.c:268
 msgid "failed to sign the push certificate"
 msgstr "impossible de signer le certificat de poussée"
 
-#: send-pack.c:322
+#: send-pack.c:325
 msgid "the receiving end does not support --signed push"
 msgstr "Le receveur ne gère pas les poussées avec --signed"
 
-#: sequencer.c:172 builtin/merge.c:781 builtin/merge.c:892
-#: builtin/merge.c:1002 builtin/merge.c:1012
+#: sequencer.c:172 builtin/merge.c:782 builtin/merge.c:893 builtin/merge.c:995
+#: builtin/merge.c:1005
 #, c-format
 msgid "Could not open '%s' for writing"
 msgstr "Impossible d'ouvrir '%s' en écriture"
 
-#: sequencer.c:174 builtin/merge.c:343 builtin/merge.c:784
-#: builtin/merge.c:1004 builtin/merge.c:1017
+#: sequencer.c:174 builtin/merge.c:344 builtin/merge.c:785 builtin/merge.c:997
+#: builtin/merge.c:1010
 #, c-format
 msgid "Could not write to '%s'"
 msgstr "Impossible d'écrire dans '%s'"
 
 #: sequencer.c:195
 msgid ""
@@ -1251,13 +1251,13 @@
 "and commit the result with 'git commit'"
 msgstr ""
 "après résolution des conflits, marquez les chemins corrigés\n"
 "avec 'git add <chemins>' ou 'git rm <chemins>'\n"
 "puis validez le résultat avec 'git commit'"
 
-#: sequencer.c:211 sequencer.c:852 sequencer.c:935
+#: sequencer.c:211 sequencer.c:856 sequencer.c:939
 #, c-format
 msgid "Could not write to %s"
 msgstr "Impossible d'écrire dans %s"
 
 #: sequencer.c:214
 #, c-format
@@ -1274,205 +1274,205 @@
 
 #: sequencer.c:234
 msgid "Commit your changes or stash them to proceed."
 msgstr "Validez vos modifications ou les remiser pour continuer."
 
 #. TRANSLATORS: %s will be "revert" or "cherry-pick"
-#: sequencer.c:304
+#: sequencer.c:321
 #, c-format
 msgid "%s: Unable to write new index file"
 msgstr "%s: Impossible d'écrire le nouveau fichier index"
 
-#: sequencer.c:335
+#: sequencer.c:339
 msgid "Could not resolve HEAD commit\n"
 msgstr "Impossible de résoudre le commit HEAD\n"
 
-#: sequencer.c:355
+#: sequencer.c:359
 msgid "Unable to update cache tree\n"
 msgstr "Impossible de mettre à jour l'arbre de cache\n"
 
-#: sequencer.c:402
+#: sequencer.c:406
 #, c-format
 msgid "Could not parse commit %s\n"
 msgstr "Impossible d'analyser le commit %s\n"
 
-#: sequencer.c:407
+#: sequencer.c:411
 #, c-format
 msgid "Could not parse parent commit %s\n"
 msgstr "Impossible d'analyser le commit parent %s\n"
 
-#: sequencer.c:473
+#: sequencer.c:477
 msgid "Your index file is unmerged."
 msgstr "Votre fichier d'index n'est pas fusionné."
 
-#: sequencer.c:492
+#: sequencer.c:496
 #, c-format
 msgid "Commit %s is a merge but no -m option was given."
 msgstr "Le commit %s est une fusion mais l'option -m n'a pas été spécifiée."
 
-#: sequencer.c:500
+#: sequencer.c:504
 #, c-format
 msgid "Commit %s does not have parent %d"
 msgstr "Le commit %s n'a pas le parent %d"
 
-#: sequencer.c:504
+#: sequencer.c:508
 #, c-format
 msgid "Mainline was specified but commit %s is not a merge."
 msgstr ""
 "Une branche principale a été spécifiée mais le commit %s n'est pas une "
 "fusion."
 
 #. TRANSLATORS: The first %s will be "revert" or
 #. "cherry-pick", the second %s a SHA1
-#: sequencer.c:517
+#: sequencer.c:521
 #, c-format
 msgid "%s: cannot parse parent commit %s"
 msgstr "%s : impossible d'analyser le commit parent %s"
 
-#: sequencer.c:521
+#: sequencer.c:525
 #, c-format
 msgid "Cannot get commit message for %s"
 msgstr "Impossible d'obtenir un message de validation pour %s"
 
-#: sequencer.c:607
+#: sequencer.c:611
 #, c-format
 msgid "could not revert %s... %s"
 msgstr "impossible d'annuler %s... %s"
 
-#: sequencer.c:608
+#: sequencer.c:612
 #, c-format
 msgid "could not apply %s... %s"
 msgstr "impossible d'appliquer %s... %s"
 
-#: sequencer.c:644
+#: sequencer.c:648
 msgid "empty commit set passed"
 msgstr "l'ensemble de commits spécifié est vide"
 
-#: sequencer.c:652
+#: sequencer.c:656
 #, c-format
 msgid "git %s: failed to read the index"
 msgstr "git %s : échec à la lecture de l'index"
 
-#: sequencer.c:656
+#: sequencer.c:660
 #, c-format
 msgid "git %s: failed to refresh the index"
 msgstr "git %s : échec du rafraîchissement de l'index"
 
-#: sequencer.c:716
+#: sequencer.c:720
 #, c-format
 msgid "Cannot %s during a %s"
 msgstr "Impossible de %s pendant un %s"
 
-#: sequencer.c:738
+#: sequencer.c:742
 #, c-format
 msgid "Could not parse line %d."
 msgstr "Impossible d'analyser la ligne %d."
 
-#: sequencer.c:743
+#: sequencer.c:747
 msgid "No commits parsed."
 msgstr "Aucun commit analysé."
 
-#: sequencer.c:756
+#: sequencer.c:760
 #, c-format
 msgid "Could not open %s"
 msgstr "Impossible d'ouvrir %s"
 
-#: sequencer.c:760
+#: sequencer.c:764
 #, c-format
 msgid "Could not read %s."
 msgstr "Impossible de lire %s."
 
-#: sequencer.c:767
+#: sequencer.c:771
 #, c-format
 msgid "Unusable instruction sheet: %s"
 msgstr "Feuille d'instruction inutilisable : %s"
 
-#: sequencer.c:797
+#: sequencer.c:801
 #, c-format
 msgid "Invalid key: %s"
 msgstr "Clé invalide: %s"
 
-#: sequencer.c:800
+#: sequencer.c:804
 #, c-format
 msgid "Invalid value for %s: %s"
 msgstr "Valeur invalide pour %s : %s"
 
-#: sequencer.c:812
+#: sequencer.c:816
 #, c-format
 msgid "Malformed options sheet: %s"
 msgstr "Feuille d'options malformée : %s"
 
-#: sequencer.c:833
+#: sequencer.c:837
 msgid "a cherry-pick or revert is already in progress"
 msgstr "un picorage ou un retour est déjà en cours"
 
-#: sequencer.c:834
+#: sequencer.c:838
 msgid "try \"git cherry-pick (--continue | --quit | --abort)\""
 msgstr "essayez \"git cherry-pick (--continue|--quit|-- abort)\""
 
-#: sequencer.c:838
+#: sequencer.c:842
 #, c-format
 msgid "Could not create sequencer directory %s"
 msgstr "Impossible de créer le répertoire de séquenceur %s"
 
-#: sequencer.c:854 sequencer.c:939
+#: sequencer.c:858 sequencer.c:943
 #, c-format
 msgid "Error wrapping up %s."
 msgstr "Erreur lors de l'emballage de %s."
 
-#: sequencer.c:873 sequencer.c:1009
+#: sequencer.c:877 sequencer.c:1013
 msgid "no cherry-pick or revert in progress"
 msgstr "aucun picorage ou retour en cours"
 
-#: sequencer.c:875
+#: sequencer.c:879
 msgid "cannot resolve HEAD"
 msgstr "impossible de résoudre HEAD"
 
-#: sequencer.c:877
+#: sequencer.c:881
 msgid "cannot abort from a branch yet to be born"
 msgstr "impossible d'abandonner depuis une branche non encore créée"
 
-#: sequencer.c:899 builtin/apply.c:4128
+#: sequencer.c:903 builtin/apply.c:4128
 #, c-format
 msgid "cannot open %s: %s"
 msgstr "impossible d'ouvrir %s : %s"
 
-#: sequencer.c:902
+#: sequencer.c:906
 #, c-format
 msgid "cannot read %s: %s"
 msgstr "impossible de lire %s : %s"
 
-#: sequencer.c:903
+#: sequencer.c:907
 msgid "unexpected end of file"
 msgstr "fin de fichier inattendue"
 
-#: sequencer.c:909
+#: sequencer.c:913
 #, c-format
 msgid "stored pre-cherry-pick HEAD file '%s' is corrupt"
 msgstr "le fichier HEAD de préparation de picorage '%s' est corrompu"
 
-#: sequencer.c:932
+#: sequencer.c:936
 #, c-format
 msgid "Could not format %s."
 msgstr "Impossible de formater %s."
 
-#: sequencer.c:1077
+#: sequencer.c:1081
 #, c-format
 msgid "%s: can't cherry-pick a %s"
 msgstr "%s : impossible de picorer un %s"
 
-#: sequencer.c:1080
+#: sequencer.c:1084
 #, c-format
 msgid "%s: bad revision"
 msgstr "%s : mauvaise révision"
 
-#: sequencer.c:1114
+#: sequencer.c:1118
 msgid "Can't revert as initial commit"
 msgstr "Impossible d'annuler en tant que commit initial"
 
-#: sequencer.c:1115
+#: sequencer.c:1119
 msgid "Can't cherry-pick into empty head"
 msgstr "Impossible de picorer vers une HEAD vide"
 
 #: sha1_name.c:440
 msgid ""
 "Git normally never creates a ref that ends with 40 hex characters\n"
@@ -1540,44 +1540,44 @@
 msgstr "Impossible de supprimer l'élément de .gitmodules pour %s"
 
 #: submodule.c:120
 msgid "staging updated .gitmodules failed"
 msgstr "échec de la mise en index du .gitmodules mis à jour"
 
-#: submodule.c:1111 builtin/init-db.c:363
+#: submodule.c:1111 builtin/init-db.c:371
 #, c-format
 msgid "Could not create git link %s"
 msgstr "Impossible de créer le lien git %s"
 
 #: submodule.c:1122
 #, c-format
 msgid "Could not set core.worktree in %s"
 msgstr "Impossible de paramétrer core.worktree dans %s"
 
-#: trailer.c:499 trailer.c:503 trailer.c:507 trailer.c:561 trailer.c:565
-#: trailer.c:569
+#: trailer.c:500 trailer.c:504 trailer.c:508 trailer.c:562 trailer.c:566
+#: trailer.c:570
 #, c-format
 msgid "unknown value '%s' for key '%s'"
 msgstr "valeur inconnue '%s' pour la clé '%s'"
 
-#: trailer.c:551 trailer.c:556 builtin/remote.c:288
+#: trailer.c:552 trailer.c:557 builtin/remote.c:290
 #, c-format
 msgid "more than one %s"
 msgstr "plus d'un %s"
 
-#: trailer.c:589
+#: trailer.c:590
 #, c-format
 msgid "empty trailer token in trailer '%.*s'"
 msgstr "symbole vide dans la ligne de fin '%.*s'"
 
-#: trailer.c:709
+#: trailer.c:710
 #, c-format
 msgid "could not read input file '%s'"
 msgstr "impossible de lire le fichier d'entrée '%s'"
 
-#: trailer.c:712
+#: trailer.c:713
 msgid "could not read from stdin"
 msgstr "Impossible de lire depuis l'entrée standard"
 
 #: unpack-trees.c:202
 msgid "Checking out files"
 msgstr "Extraction des fichiers"
@@ -1779,303 +1779,303 @@
 
 #: wt-status.c:391
 #, c-format
 msgid "bug: unhandled diff status %c"
 msgstr "bogue : état de diff non géré %c"
 
-#: wt-status.c:761
+#: wt-status.c:758
 msgid "Submodules changed but not updated:"
 msgstr "Sous-modules modifiés mais non mis à jour :"
 
-#: wt-status.c:763
+#: wt-status.c:760
 msgid "Submodule changes to be committed:"
 msgstr "Changements du sous-module à valider :"
 
-#: wt-status.c:842
+#: wt-status.c:839
 msgid ""
 "Do not touch the line above.\n"
 "Everything below will be removed."
 msgstr ""
 "Ne touchez pas à la ligne ci-dessus\n"
 "Tout se qui suit sera éliminé."
 
-#: wt-status.c:933
+#: wt-status.c:930
 msgid "You have unmerged paths."
 msgstr "Vous avez des chemins non fusionnés."
 
-#: wt-status.c:936
+#: wt-status.c:933
 msgid "  (fix conflicts and run \"git commit\")"
 msgstr "  (réglez les conflits puis lancez \"git commit\")"
 
-#: wt-status.c:939
+#: wt-status.c:936
 msgid "All conflicts fixed but you are still merging."
 msgstr "Tous les conflits sont réglés mais la fusion n'est pas terminée."
 
-#: wt-status.c:942
+#: wt-status.c:939
 msgid "  (use \"git commit\" to conclude merge)"
 msgstr "  (utilisez \"git commit\" pour terminer la fusion)"
 
-#: wt-status.c:952
+#: wt-status.c:949
 msgid "You are in the middle of an am session."
 msgstr "Vous êtes au milieu d'une session am."
 
-#: wt-status.c:955
+#: wt-status.c:952
 msgid "The current patch is empty."
 msgstr "Le patch actuel est vide."
 
-#: wt-status.c:959
+#: wt-status.c:956
 msgid "  (fix conflicts and then run \"git am --continue\")"
 msgstr "  (réglez les conflits puis lancez \"git am --continue\")"
 
-#: wt-status.c:961
+#: wt-status.c:958
 msgid "  (use \"git am --skip\" to skip this patch)"
 msgstr "  (utilisez \"git am --skip\" pour sauter ce patch)"
 
-#: wt-status.c:963
+#: wt-status.c:960
 msgid "  (use \"git am --abort\" to restore the original branch)"
 msgstr "  (utilisez \"git am --abort\" pour restaurer la branche d'origine)"
 
-#: wt-status.c:1023 wt-status.c:1040
+#: wt-status.c:1020 wt-status.c:1037
 #, c-format
 msgid "You are currently rebasing branch '%s' on '%s'."
 msgstr "Vous êtes en train de rebaser la branche '%s' sur '%s'."
 
-#: wt-status.c:1028 wt-status.c:1045
+#: wt-status.c:1025 wt-status.c:1042
 msgid "You are currently rebasing."
 msgstr "Vous êtes en train de rebaser."
 
-#: wt-status.c:1031
+#: wt-status.c:1028
 msgid "  (fix conflicts and then run \"git rebase --continue\")"
 msgstr "  (réglez les conflits puis lancez \"git rebase --continue\")"
 
-#: wt-status.c:1033
+#: wt-status.c:1030
 msgid "  (use \"git rebase --skip\" to skip this patch)"
 msgstr "  (utilisez \"git rebase --skip\" pour sauter ce patch)"
 
-#: wt-status.c:1035
+#: wt-status.c:1032
 msgid "  (use \"git rebase --abort\" to check out the original branch)"
 msgstr "  (utilisez \"git rebase --abort\" pour extraire la branche d'origine)"
 
-#: wt-status.c:1048
+#: wt-status.c:1045
 msgid "  (all conflicts fixed: run \"git rebase --continue\")"
 msgstr "  (tous les conflits sont réglés : lancez \"git rebase --continue\")"
 
-#: wt-status.c:1052
+#: wt-status.c:1049
 #, c-format
 msgid ""
 "You are currently splitting a commit while rebasing branch '%s' on '%s'."
 msgstr ""
 "Vous êtes actuellement en train de fractionner un commit pendant un rebasage "
 "de la branche '%s' sur '%s'."
 
-#: wt-status.c:1057
+#: wt-status.c:1054
 msgid "You are currently splitting a commit during a rebase."
 msgstr ""
 "Vous êtes actuellement en train de fractionner un commit pendant un rebasage."
 
-#: wt-status.c:1060
+#: wt-status.c:1057
 msgid "  (Once your working directory is clean, run \"git rebase --continue\")"
 msgstr ""
 "  (Une fois la copie de travail nettoyée, lancez \"git rebase --continue\")"
 
-#: wt-status.c:1064
+#: wt-status.c:1061
 #, c-format
 msgid "You are currently editing a commit while rebasing branch '%s' on '%s'."
 msgstr ""
 "Vous êtes actuellement en train d'éditer un commit pendant un rebasage de la "
 "branche '%s' sur '%s'."
 
-#: wt-status.c:1069
+#: wt-status.c:1066
 msgid "You are currently editing a commit during a rebase."
 msgstr ""
 "Vous êtes actuellement en train d'éditer un commit pendant un rebasage."
 
-#: wt-status.c:1072
+#: wt-status.c:1069
 msgid "  (use \"git commit --amend\" to amend the current commit)"
 msgstr "  (utilisez \"git commit --amend\" pour corriger le commit actuel)"
 
-#: wt-status.c:1074
+#: wt-status.c:1071
 msgid ""
 "  (use \"git rebase --continue\" once you are satisfied with your changes)"
 msgstr ""
 "  (utilisez \"git rebase --continue\" quand vous êtes satisfait de vos "
 "modifications)"
 
-#: wt-status.c:1084
+#: wt-status.c:1081
 #, c-format
 msgid "You are currently cherry-picking commit %s."
 msgstr "Vous êtes actuellement en train de picorer le commit %s."
 
-#: wt-status.c:1089
+#: wt-status.c:1086
 msgid "  (fix conflicts and run \"git cherry-pick --continue\")"
 msgstr "  (réglez les conflits puis lancez \"git cherry-pick --continue\")"
 
-#: wt-status.c:1092
+#: wt-status.c:1089
 msgid "  (all conflicts fixed: run \"git cherry-pick --continue\")"
 msgstr ""
 "  (tous les conflits sont réglés : lancez \"git cherry-pick --continue\")"
 
-#: wt-status.c:1094
+#: wt-status.c:1091
 msgid "  (use \"git cherry-pick --abort\" to cancel the cherry-pick operation)"
 msgstr "  (utilisez \"git cherry-pick --abort\" pour annuler le picorage)"
 
-#: wt-status.c:1103
+#: wt-status.c:1100
 #, c-format
 msgid "You are currently reverting commit %s."
 msgstr "Vous êtes actuellement en train de rétablir le commit %s."
 
-#: wt-status.c:1108
+#: wt-status.c:1105
 msgid "  (fix conflicts and run \"git revert --continue\")"
 msgstr "  (réglez les conflits puis lancez \"git revert --continue\")"
 
-#: wt-status.c:1111
+#: wt-status.c:1108
 msgid "  (all conflicts fixed: run \"git revert --continue\")"
 msgstr "  (tous les conflits sont réglés : lancez \"git revert --continue\")"
 
-#: wt-status.c:1113
+#: wt-status.c:1110
 msgid "  (use \"git revert --abort\" to cancel the revert operation)"
 msgstr "  (utilisez \"git revert --abort\" pour annuler le rétablissement)"
 
-#: wt-status.c:1124
+#: wt-status.c:1121
 #, c-format
 msgid "You are currently bisecting, started from branch '%s'."
 msgstr "Vous êtes en cours de bissection, depuis la branche '%s'."
 
-#: wt-status.c:1128
+#: wt-status.c:1125
 msgid "You are currently bisecting."
 msgstr "Vous êtes en cours de bissection."
 
-#: wt-status.c:1131
+#: wt-status.c:1128
 msgid "  (use \"git bisect reset\" to get back to the original branch)"
 msgstr "  (utilisez \"git bisect reset\" pour revenir à la branche d'origine)"
 
-#: wt-status.c:1306
+#: wt-status.c:1303
 msgid "On branch "
 msgstr "Sur la branche "
 
-#: wt-status.c:1313
+#: wt-status.c:1310
 msgid "rebase in progress; onto "
 msgstr "rebasage en cours ; sur "
 
-#: wt-status.c:1320
+#: wt-status.c:1317
 msgid "HEAD detached at "
 msgstr "HEAD détachée sur "
 
-#: wt-status.c:1322
+#: wt-status.c:1319
 msgid "HEAD detached from "
 msgstr "HEAD détachée depuis "
 
-#: wt-status.c:1325
+#: wt-status.c:1322
 msgid "Not currently on any branch."
 msgstr "Actuellement sur aucun branche."
 
-#: wt-status.c:1342
+#: wt-status.c:1339
 msgid "Initial commit"
 msgstr "Validation initiale"
 
-#: wt-status.c:1356
+#: wt-status.c:1353
 msgid "Untracked files"
 msgstr "Fichiers non suivis"
 
-#: wt-status.c:1358
+#: wt-status.c:1355
 msgid "Ignored files"
 msgstr "Fichiers ignorés"
 
-#: wt-status.c:1362
+#: wt-status.c:1359
 #, c-format
 msgid ""
 "It took %.2f seconds to enumerate untracked files. 'status -uno'\n"
 "may speed it up, but you have to be careful not to forget to add\n"
 "new files yourself (see 'git help status')."
 msgstr ""
 "L'énumération des fichiers non suivis a duré %.2f secondes. 'status -uno'\n"
 "peut l'accélérer, mais vous devez alors faire attention à ne pas\n"
 "oublier d'ajouter les nouveaux fichiers par vous-même (voir 'git help "
 "status')."
 
-#: wt-status.c:1368
+#: wt-status.c:1365
 #, c-format
 msgid "Untracked files not listed%s"
 msgstr "Fichiers non suivis non affichés%s"
 
-#: wt-status.c:1370
+#: wt-status.c:1367
 msgid " (use -u option to show untracked files)"
 msgstr " (utilisez -u pour afficher les fichiers non suivis)"
 
-#: wt-status.c:1376
+#: wt-status.c:1373
 msgid "No changes"
 msgstr "Aucune modification"
 
-#: wt-status.c:1381
+#: wt-status.c:1378
 #, c-format
 msgid "no changes added to commit (use \"git add\" and/or \"git commit -a\")\n"
 msgstr ""
 "aucune modification n'a été ajoutée à la validation (utilisez \"git add\" ou "
 "\"git commit -a\")\n"
 
-#: wt-status.c:1384
+#: wt-status.c:1381
 #, c-format
 msgid "no changes added to commit\n"
 msgstr "aucune modification ajoutée à la validation\n"
 
-#: wt-status.c:1387
+#: wt-status.c:1384
 #, c-format
 msgid ""
 "nothing added to commit but untracked files present (use \"git add\" to "
 "track)\n"
 msgstr ""
 "aucune modification ajoutée à la validation mais des fichiers non suivis "
 "sont présents (utilisez \"git add\" pour les suivre)\n"
 
-#: wt-status.c:1390
+#: wt-status.c:1387
 #, c-format
 msgid "nothing added to commit but untracked files present\n"
 msgstr ""
 "aucune modification ajoutée à la validation mais des fichiers non suivis "
 "sont présents\n"
 
-#: wt-status.c:1393
+#: wt-status.c:1390
 #, c-format
 msgid "nothing to commit (create/copy files and use \"git add\" to track)\n"
 msgstr ""
 "rien à valider (créez/copiez des fichiers et utilisez \"git add\" pour les "
 "suivre)\n"
 
-#: wt-status.c:1396 wt-status.c:1401
+#: wt-status.c:1393 wt-status.c:1398
 #, c-format
 msgid "nothing to commit\n"
 msgstr "rien à valider\n"
 
-#: wt-status.c:1399
+#: wt-status.c:1396
 #, c-format
 msgid "nothing to commit (use -u to show untracked files)\n"
 msgstr "rien à valider (utilisez -u pour afficher les fichiers non suivis)\n"
 
-#: wt-status.c:1403
+#: wt-status.c:1400
 #, c-format
 msgid "nothing to commit, working directory clean\n"
 msgstr "rien à valider, la copie de travail est propre\n"
 
-#: wt-status.c:1512
+#: wt-status.c:1509
 msgid "HEAD (no branch)"
 msgstr "HEAD (aucune branche)"
 
-#: wt-status.c:1518
+#: wt-status.c:1515
 msgid "Initial commit on "
 msgstr "Validation initiale sur "
 
 # à priori on parle d'une branche ici
-#: wt-status.c:1550
+#: wt-status.c:1547
 msgid "gone"
 msgstr "disparue"
 
-#: wt-status.c:1552 wt-status.c:1560
+#: wt-status.c:1549 wt-status.c:1557
 msgid "behind "
 msgstr "derrière "
 
-#: compat/precompose_utf8.c:55 builtin/clone.c:357
+#: compat/precompose_utf8.c:55 builtin/clone.c:360
 #, c-format
 msgid "failed to unlink '%s'"
 msgstr "échec lors de l'unlink de '%s'"
 
 #: builtin/add.c:22
 msgid "git add [options] [--] <pathspec>..."
@@ -2129,28 +2129,28 @@
 #: builtin/add.c:231
 msgid "The following paths are ignored by one of your .gitignore files:\n"
 msgstr ""
 "Les chemins suivants sont ignorés par un de vos fichiers .gitignore :\n"
 
 #: builtin/add.c:248 builtin/clean.c:875 builtin/fetch.c:108 builtin/mv.c:110
-#: builtin/prune-packed.c:55 builtin/push.c:499 builtin/remote.c:1375
+#: builtin/prune-packed.c:55 builtin/push.c:499 builtin/remote.c:1372
 #: builtin/rm.c:269
 msgid "dry run"
 msgstr "simuler l'action"
 
 #: builtin/add.c:249 builtin/apply.c:4415 builtin/check-ignore.c:19
-#: builtin/commit.c:1362 builtin/count-objects.c:63 builtin/fsck.c:608
+#: builtin/commit.c:1326 builtin/count-objects.c:63 builtin/fsck.c:608
 #: builtin/log.c:1617 builtin/mv.c:109 builtin/read-tree.c:114
 msgid "be verbose"
 msgstr "mode verbeux"
 
 #: builtin/add.c:251
 msgid "interactive picking"
 msgstr "sélection interactive"
 
-#: builtin/add.c:252 builtin/checkout.c:1108 builtin/reset.c:286
+#: builtin/add.c:252 builtin/checkout.c:1126 builtin/reset.c:286
 msgid "select hunks interactively"
 msgstr "sélection interactive des sections"
 
 #: builtin/add.c:253
 msgid "edit current diff and apply"
 msgstr "édition du diff actuel et application"
@@ -2192,16 +2192,12 @@
 
 #: builtin/add.c:286
 #, c-format
 msgid "Use -f if you really want to add them.\n"
 msgstr "Utilisez -f si vous voulez réellement les ajouter.\n"
 
-#: builtin/add.c:287
-msgid "no files added"
-msgstr "aucun fichier ajouté"
-
 #: builtin/add.c:293
 msgid "adding files failed"
 msgstr "échec de l'ajout de fichiers"
 
 #: builtin/add.c:329
 msgid "-A and -u are mutually incompatible"
@@ -2485,13 +2481,13 @@
 
 #: builtin/apply.c:3653
 #, c-format
 msgid "Checking patch %s..."
 msgstr "Vérification du patch %s..."
 
-#: builtin/apply.c:3746 builtin/checkout.c:213 builtin/reset.c:135
+#: builtin/apply.c:3746 builtin/checkout.c:231 builtin/reset.c:135
 #, c-format
 msgid "make_cache_entry failed for path '%s'"
 msgstr "échec de make_cache_entry pour le chemin '%s'"
 
 #: builtin/apply.c:3889
 #, c-format
@@ -2566,13 +2562,13 @@
 msgstr "entrée non reconnue"
 
 #: builtin/apply.c:4245
 msgid "unable to read index file"
 msgstr "lecture du fichier d'index impossible"
 
-#: builtin/apply.c:4362 builtin/apply.c:4365 builtin/clone.c:91
+#: builtin/apply.c:4362 builtin/apply.c:4365 builtin/clone.c:92
 #: builtin/fetch.c:93
 msgid "path"
 msgstr "chemin"
 
 #: builtin/apply.c:4363
 msgid "don't apply changes matching the given path"
@@ -3120,14 +3116,14 @@
 
 #: builtin/branch.c:824
 msgid "act on remote-tracking branches"
 msgstr "agir sur les branches de suivi distantes"
 
 #: builtin/branch.c:827 builtin/branch.c:833 builtin/branch.c:854
-#: builtin/branch.c:860 builtin/commit.c:1622 builtin/commit.c:1623
-#: builtin/commit.c:1624 builtin/commit.c:1625 builtin/tag.c:616
+#: builtin/branch.c:860 builtin/commit.c:1586 builtin/commit.c:1587
+#: builtin/commit.c:1588 builtin/commit.c:1589 builtin/tag.c:616
 #: builtin/tag.c:622
 msgid "commit"
 msgstr "commit"
 
 #: builtin/branch.c:828 builtin/branch.c:834
 msgid "print only branches that contain the commit"
@@ -3167,14 +3163,14 @@
 
 #: builtin/branch.c:850
 msgid "edit the description for the branch"
 msgstr "éditer la description de la branche"
 
 #: builtin/branch.c:851
-msgid "force creation (when already exists)"
-msgstr "forcer la création (même si la cible existe)"
+msgid "force creation, move/rename, deletion"
+msgstr "forcer la création, le déplacement/renommage, ou la suppression"
 
 #: builtin/branch.c:854
 msgid "print only not merged branches"
 msgstr "afficher seulement les branches non fusionnées"
 
 #: builtin/branch.c:860
@@ -3186,118 +3182,118 @@
 msgstr "afficher les branches en colonnes"
 
 #: builtin/branch.c:877
 msgid "Failed to resolve HEAD as a valid ref."
 msgstr "Échec de résolution de HEAD comme référence valide."
 
-#: builtin/branch.c:881 builtin/clone.c:634
+#: builtin/branch.c:881 builtin/clone.c:637
 msgid "HEAD not found below refs/heads!"
 msgstr "HEAD non trouvée sous refs/heads !"
 
 #: builtin/branch.c:903
 msgid "--column and --verbose are incompatible"
 msgstr "--column et --verbose sont incompatibles"
 
-#: builtin/branch.c:909 builtin/branch.c:948
+#: builtin/branch.c:914 builtin/branch.c:953
 msgid "branch name required"
 msgstr "le nom de branche est requis"
 
-#: builtin/branch.c:924
+#: builtin/branch.c:929
 msgid "Cannot give description to detached HEAD"
 msgstr "Impossible de décrire une HEAD détachée"
 
-#: builtin/branch.c:929
+#: builtin/branch.c:934
 msgid "cannot edit description of more than one branch"
 msgstr "impossible d'éditer la description de plus d'une branche"
 
-#: builtin/branch.c:936
+#: builtin/branch.c:941
 #, c-format
 msgid "No commit on branch '%s' yet."
 msgstr "Aucun commit sur la branche '%s'."
 
-#: builtin/branch.c:939
+#: builtin/branch.c:944
 #, c-format
 msgid "No branch named '%s'."
 msgstr "Aucune branche nommée '%s'."
 
-#: builtin/branch.c:954
+#: builtin/branch.c:959
 msgid "too many branches for a rename operation"
 msgstr "trop de branches pour une opération de renommage"
 
-#: builtin/branch.c:959
+#: builtin/branch.c:964
 msgid "too many branches to set new upstream"
 msgstr "trop de branches pour spécifier une branche amont"
 
-#: builtin/branch.c:963
+#: builtin/branch.c:968
 #, c-format
 msgid ""
 "could not set upstream of HEAD to %s when it does not point to any branch."
 msgstr ""
 "impossible de spécifier une branche amont de HEAD par %s qui ne pointe sur "
 "aucune branche."
 
-#: builtin/branch.c:966 builtin/branch.c:988 builtin/branch.c:1009
+#: builtin/branch.c:971 builtin/branch.c:993 builtin/branch.c:1014
 #, c-format
 msgid "no such branch '%s'"
 msgstr "pas de branche '%s'"
 
-#: builtin/branch.c:970
+#: builtin/branch.c:975
 #, c-format
 msgid "branch '%s' does not exist"
 msgstr "la branche '%s' n'existe pas"
 
-#: builtin/branch.c:982
+#: builtin/branch.c:987
 msgid "too many branches to unset upstream"
 msgstr "trop de branches pour désactiver un amont"
 
-#: builtin/branch.c:986
+#: builtin/branch.c:991
 msgid "could not unset upstream of HEAD when it does not point to any branch."
 msgstr ""
 "impossible de désactiver une branche amont de HEAD quand elle ne pointe sur "
 "aucune branche."
 
-#: builtin/branch.c:992
+#: builtin/branch.c:997
 #, c-format
 msgid "Branch '%s' has no upstream information"
 msgstr "La branche '%s' n'a aucune information de branche amont"
 
-#: builtin/branch.c:1006
+#: builtin/branch.c:1011
 msgid "it does not make sense to create 'HEAD' manually"
 msgstr "créer manuellement 'HEAD' n'a pas de sens"
 
-#: builtin/branch.c:1012
+#: builtin/branch.c:1017
 msgid "-a and -r options to 'git branch' do not make sense with a branch name"
 msgstr ""
 "les options -a et -r de 'git branch' n'ont pas de sens avec un nom de branche"
 
-#: builtin/branch.c:1015
+#: builtin/branch.c:1020
 #, c-format
 msgid ""
 "The --set-upstream flag is deprecated and will be removed. Consider using --"
 "track or --set-upstream-to\n"
 msgstr ""
 "l'option --set-upstream est obsolète et va disparaître. Utilisez plutôt --"
 "track ou --set-upstream-to\n"
 
-#: builtin/branch.c:1032
+#: builtin/branch.c:1037
 #, c-format
 msgid ""
 "\n"
 "If you wanted to make '%s' track '%s', do this:\n"
 "\n"
 msgstr ""
 "\n"
 "Si vous vouliez que '%s' suive '%s', faîtes ceci :\n"
 "\n"
 
-#: builtin/branch.c:1033
+#: builtin/branch.c:1038
 #, c-format
 msgid "    git branch -d %s\n"
 msgstr "    git branch -d %s\n"
 
-#: builtin/branch.c:1034
+#: builtin/branch.c:1039
 #, c-format
 msgid "    git branch --set-upstream-to %s\n"
 msgstr "    git branch --set-upstream-to %s\n"
 
 #: builtin/bundle.c:47
 #, c-format
@@ -3309,50 +3305,50 @@
 msgstr "La création d'un colis requiert un dépôt."
 
 #: builtin/bundle.c:60
 msgid "Need a repository to unbundle."
 msgstr "Le dépaquetage d'un colis requiert un dépôt."
 
-#: builtin/cat-file.c:332
+#: builtin/cat-file.c:328
 msgid "git cat-file (-t|-s|-e|-p|<type>|--textconv) <object>"
 msgstr "git cat-file (-t|-s|-e|-p|<type>|--textconv) <objet>"
 
-#: builtin/cat-file.c:333
+#: builtin/cat-file.c:329
 msgid "git cat-file (--batch|--batch-check) < <list_of_objects>"
 msgstr "git cat-file (--batch|--batch-check) < <liste_d_objets>"
 
-#: builtin/cat-file.c:370
+#: builtin/cat-file.c:366
 msgid "<type> can be one of: blob, tree, commit, tag"
 msgstr "<type> peut être : blob, tree, commit ou tag"
 
-#: builtin/cat-file.c:371
+#: builtin/cat-file.c:367
 msgid "show object type"
 msgstr "afficher le type de l'objet"
 
-#: builtin/cat-file.c:372
+#: builtin/cat-file.c:368
 msgid "show object size"
 msgstr "afficher la taille de l'objet"
 
-#: builtin/cat-file.c:374
+#: builtin/cat-file.c:370
 msgid "exit with zero when there's no error"
 msgstr "sortir avec un code d'erreur nul quand il n'y a aucune erreur"
 
-#: builtin/cat-file.c:375
+#: builtin/cat-file.c:371
 msgid "pretty-print object's content"
 msgstr "afficher avec mise en forme le contenu de l'objet"
 
-#: builtin/cat-file.c:377
+#: builtin/cat-file.c:373
 msgid "for blob objects, run textconv on object's content"
 msgstr "pour les objets blob, lancer textconv sur le contenu de l'objet"
 
-#: builtin/cat-file.c:379
+#: builtin/cat-file.c:375
 msgid "show info and content of objects fed from the standard input"
 msgstr ""
 "afficher l'information et le contenu des objets passés en entrée standard"
 
-#: builtin/cat-file.c:382
+#: builtin/cat-file.c:378
 msgid "show info about objects fed from the standard input"
 msgstr "afficher l'information des objets passés en entrée standard"
 
 #: builtin/check-attr.c:11
 msgid "git check-attr [-a | --all | attr...] [--] pathname..."
 msgstr "git check-attr [-a | --all | attr...] [--] chemin..."
@@ -3376,13 +3372,13 @@
 
 #: builtin/check-attr.c:23 builtin/check-ignore.c:24
 msgid "terminate input and output records by a NUL character"
 msgstr ""
 "terminer les enregistrements en entrée et en sortie par un caractère NUL"
 
-#: builtin/check-ignore.c:18 builtin/checkout.c:1089 builtin/gc.c:274
+#: builtin/check-ignore.c:18 builtin/checkout.c:1107 builtin/gc.c:274
 msgid "suppress progress reporting"
 msgstr "supprimer l'état d'avancement"
 
 #: builtin/check-ignore.c:26
 msgid "show non-matching input paths"
 msgstr "afficher les chemins en entrée qui ne correspondent pas"
@@ -3483,113 +3479,113 @@
 msgstr "git checkout [options] <branche>"
 
 #: builtin/checkout.c:26
 msgid "git checkout [options] [<branch>] -- <file>..."
 msgstr "git checkout [options] [<branche>] -- <fichier>..."
 
-#: builtin/checkout.c:114 builtin/checkout.c:147
+#: builtin/checkout.c:132 builtin/checkout.c:165
 #, c-format
 msgid "path '%s' does not have our version"
 msgstr "le chemin '%s' n'a pas notre version"
 
-#: builtin/checkout.c:116 builtin/checkout.c:149
+#: builtin/checkout.c:134 builtin/checkout.c:167
 #, c-format
 msgid "path '%s' does not have their version"
 msgstr "le chemin '%s' n'a pas leur version"
 
-#: builtin/checkout.c:132
+#: builtin/checkout.c:150
 #, c-format
 msgid "path '%s' does not have all necessary versions"
 msgstr "le chemin '%s' n'a aucune des versions nécessaires"
 
-#: builtin/checkout.c:176
+#: builtin/checkout.c:194
 #, c-format
 msgid "path '%s' does not have necessary versions"
 msgstr "le chemin '%s' n'a pas les versions nécessaires"
 
-#: builtin/checkout.c:193
+#: builtin/checkout.c:211
 #, c-format
 msgid "path '%s': cannot merge"
 msgstr "chemin '%s' : impossible de fusionner"
 
-#: builtin/checkout.c:210
+#: builtin/checkout.c:228
 #, c-format
 msgid "Unable to add merge result for '%s'"
 msgstr "Impossible d'ajouter le résultat de fusion pour '%s'"
 
-#: builtin/checkout.c:231 builtin/checkout.c:234 builtin/checkout.c:237
-#: builtin/checkout.c:240
+#: builtin/checkout.c:249 builtin/checkout.c:252 builtin/checkout.c:255
+#: builtin/checkout.c:258
 #, c-format
 msgid "'%s' cannot be used with updating paths"
 msgstr "'%s' ne peut pas être utilisé avec des mises à jour de chemins"
 
-#: builtin/checkout.c:243 builtin/checkout.c:246
+#: builtin/checkout.c:261 builtin/checkout.c:264
 #, c-format
 msgid "'%s' cannot be used with %s"
 msgstr "'%s' ne peut pas être utilisé avec %s"
 
-#: builtin/checkout.c:249
+#: builtin/checkout.c:267
 #, c-format
 msgid "Cannot update paths and switch to branch '%s' at the same time."
 msgstr ""
 "Impossible de mettre à jour les chemins et basculer sur la branche '%s' en "
 "même temps."
 
-#: builtin/checkout.c:260 builtin/checkout.c:449
+#: builtin/checkout.c:278 builtin/checkout.c:467
 msgid "corrupt index file"
 msgstr "fichier d'index corrompu"
 
-#: builtin/checkout.c:320 builtin/checkout.c:327
+#: builtin/checkout.c:338 builtin/checkout.c:345
 #, c-format
 msgid "path '%s' is unmerged"
 msgstr "le chemin '%s' n'est pas fusionné"
 
-#: builtin/checkout.c:471
+#: builtin/checkout.c:489
 msgid "you need to resolve your current index first"
 msgstr "vous devez d'abord résoudre votre index courant"
 
-#: builtin/checkout.c:597
+#: builtin/checkout.c:615
 #, c-format
 msgid "Can not do reflog for '%s'\n"
 msgstr "Impossible de faire un reflog pour '%s'\n"
 
-#: builtin/checkout.c:635
+#: builtin/checkout.c:653
 msgid "HEAD is now at"
 msgstr "HEAD est maintenant sur"
 
-#: builtin/checkout.c:642
+#: builtin/checkout.c:660
 #, c-format
 msgid "Reset branch '%s'\n"
 msgstr "Remise à zéro de la branche '%s'\n"
 
-#: builtin/checkout.c:645
+#: builtin/checkout.c:663
 #, c-format
 msgid "Already on '%s'\n"
 msgstr "Déjà sur '%s'\n"
 
-#: builtin/checkout.c:649
+#: builtin/checkout.c:667
 #, c-format
 msgid "Switched to and reset branch '%s'\n"
 msgstr "Basculement et remise à zéro de la branche '%s'\n"
 
-#: builtin/checkout.c:651 builtin/checkout.c:1032
+#: builtin/checkout.c:669 builtin/checkout.c:1050
 #, c-format
 msgid "Switched to a new branch '%s'\n"
 msgstr "Basculement sur la nouvelle branche '%s'\n"
 
-#: builtin/checkout.c:653
+#: builtin/checkout.c:671
 #, c-format
 msgid "Switched to branch '%s'\n"
 msgstr "Basculement sur la branche '%s'\n"
 
-#: builtin/checkout.c:705
+#: builtin/checkout.c:723
 #, c-format
 msgid " ... and %d more.\n"
 msgstr " ... et %d en plus.\n"
 
-#: builtin/checkout.c:711
+#: builtin/checkout.c:729
 #, c-format
 msgid ""
 "Warning: you are leaving %d commit behind, not connected to\n"
 "any of your branches:\n"
 "\n"
 "%s\n"
@@ -3606,13 +3602,13 @@
 msgstr[1] ""
 "Attention : vous abandonnez %d commits, non connectés à\n"
 "une branche :\n"
 "\n"
 "%s\n"
 
-#: builtin/checkout.c:729
+#: builtin/checkout.c:747
 #, c-format
 msgid ""
 "If you want to keep them by creating a new branch, this may be a good time\n"
 "to do so with:\n"
 "\n"
 " git branch new_branch_name %s\n"
@@ -3622,160 +3618,160 @@
 "moment\n"
 "pour le faire avec :\n"
 "\n"
 "git branch nouvelle_branche %s\n"
 "\n"
 
-#: builtin/checkout.c:759
+#: builtin/checkout.c:777
 msgid "internal error in revision walk"
 msgstr "erreur interne lors du parcours des révisions"
 
-#: builtin/checkout.c:763
+#: builtin/checkout.c:781
 msgid "Previous HEAD position was"
-msgstr "La position précédente de HEAD était sur "
+msgstr "La position précédente de HEAD était sur"
 
-#: builtin/checkout.c:790 builtin/checkout.c:1027
+#: builtin/checkout.c:808 builtin/checkout.c:1045
 msgid "You are on a branch yet to be born"
 msgstr "Vous êtes sur une branche qui doit encore naître"
 
-#: builtin/checkout.c:934
+#: builtin/checkout.c:952
 #, c-format
 msgid "only one reference expected, %d given."
 msgstr "une seule référence attendue, %d fournies."
 
-#: builtin/checkout.c:973
+#: builtin/checkout.c:991
 #, c-format
 msgid "invalid reference: %s"
 msgstr "référence invalide : %s"
 
-#: builtin/checkout.c:1002
+#: builtin/checkout.c:1020
 #, c-format
 msgid "reference is not a tree: %s"
 msgstr "la référence n'est pas un arbre : %s"
 
-#: builtin/checkout.c:1041
+#: builtin/checkout.c:1059
 msgid "paths cannot be used with switching branches"
 msgstr "impossible d'utiliser des chemins avec un basculement de branches"
 
-#: builtin/checkout.c:1044 builtin/checkout.c:1048
+#: builtin/checkout.c:1062 builtin/checkout.c:1066
 #, c-format
 msgid "'%s' cannot be used with switching branches"
 msgstr "'%s' ne peut pas être utilisé avec un basculement de branches"
 
-#: builtin/checkout.c:1052 builtin/checkout.c:1055 builtin/checkout.c:1060
-#: builtin/checkout.c:1063
+#: builtin/checkout.c:1070 builtin/checkout.c:1073 builtin/checkout.c:1078
+#: builtin/checkout.c:1081
 #, c-format
 msgid "'%s' cannot be used with '%s'"
 msgstr "'%s' ne peut pas être utilisé avec '%s'"
 
-#: builtin/checkout.c:1068
+#: builtin/checkout.c:1086
 #, c-format
 msgid "Cannot switch branch to a non-commit '%s'"
 msgstr "Impossible de basculer de branche vers '%s' qui n'est pas un commit"
 
-#: builtin/checkout.c:1090 builtin/checkout.c:1092 builtin/clone.c:89
+#: builtin/checkout.c:1108 builtin/checkout.c:1110 builtin/clone.c:90
 #: builtin/remote.c:159 builtin/remote.c:161
 msgid "branch"
 msgstr "branche"
 
-#: builtin/checkout.c:1091
+#: builtin/checkout.c:1109
 msgid "create and checkout a new branch"
 msgstr "créer et extraire une nouvelle branche"
 
-#: builtin/checkout.c:1093
+#: builtin/checkout.c:1111
 msgid "create/reset and checkout a branch"
 msgstr "créer/réinitialiser et extraire une branche"
 
-#: builtin/checkout.c:1094
+#: builtin/checkout.c:1112
 msgid "create reflog for new branch"
 msgstr "créer un reflog pour une nouvelle branche"
 
-#: builtin/checkout.c:1095
+#: builtin/checkout.c:1113
 msgid "detach the HEAD at named commit"
 msgstr "détacher la HEAD à la validation nommée"
 
-#: builtin/checkout.c:1096
+#: builtin/checkout.c:1114
 msgid "set upstream info for new branch"
 msgstr "paramétrer les coordonnées de branche amont pour une nouvelle branche"
 
-#: builtin/checkout.c:1098
+#: builtin/checkout.c:1116
 msgid "new-branch"
 msgstr "nouvelle branche"
 
-#: builtin/checkout.c:1098
+#: builtin/checkout.c:1116
 msgid "new unparented branch"
 msgstr "nouvelle branche sans parent"
 
-#: builtin/checkout.c:1099
+#: builtin/checkout.c:1117
 msgid "checkout our version for unmerged files"
 msgstr "extraire notre version pour les fichiers non fusionnés"
 
-#: builtin/checkout.c:1101
+#: builtin/checkout.c:1119
 msgid "checkout their version for unmerged files"
 msgstr "extraire leur version pour les fichiers non fusionnés"
 
-#: builtin/checkout.c:1103
+#: builtin/checkout.c:1121
 msgid "force checkout (throw away local modifications)"
 msgstr "forcer l'extraction (laisser tomber les modifications locales)"
 
-#: builtin/checkout.c:1104
+#: builtin/checkout.c:1122
 msgid "perform a 3-way merge with the new branch"
 msgstr "effectuer une fusion à 3 points avec la nouvelle branche"
 
-#: builtin/checkout.c:1105 builtin/merge.c:226
+#: builtin/checkout.c:1123 builtin/merge.c:227
 msgid "update ignored files (default)"
 msgstr "mettre à jour les fichiers ignorés (par défaut)"
 
-#: builtin/checkout.c:1106 builtin/log.c:1239 parse-options.h:245
+#: builtin/checkout.c:1124 builtin/log.c:1239 parse-options.h:245
 msgid "style"
 msgstr "style"
 
-#: builtin/checkout.c:1107
+#: builtin/checkout.c:1125
 msgid "conflict style (merge or diff3)"
 msgstr "style de conflit (fusion ou diff3)"
 
-#: builtin/checkout.c:1110
+#: builtin/checkout.c:1128
 msgid "do not limit pathspecs to sparse entries only"
 msgstr "ne pas limiter les spécificateurs de chemins aux seuls éléments creux"
 
-#: builtin/checkout.c:1112
+#: builtin/checkout.c:1130
 msgid "second guess 'git checkout no-such-branch'"
 msgstr "deuxième chance 'git checkout branche-inexistante'"
 
-#: builtin/checkout.c:1135
+#: builtin/checkout.c:1153
 msgid "-b, -B and --orphan are mutually exclusive"
 msgstr "-b, -B et --orphan sont mutuellement exclusifs"
 
-#: builtin/checkout.c:1152
+#: builtin/checkout.c:1170
 msgid "--track needs a branch name"
 msgstr "--track requiert un nom de branche"
 
-#: builtin/checkout.c:1157
+#: builtin/checkout.c:1175
 msgid "Missing branch name; try -b"
 msgstr "Nom de branche manquant ; essayez -b"
 
-#: builtin/checkout.c:1194
+#: builtin/checkout.c:1212
 msgid "invalid path specification"
 msgstr "spécification de chemin invalide"
 
-#: builtin/checkout.c:1201
+#: builtin/checkout.c:1219
 #, c-format
 msgid ""
 "Cannot update paths and switch to branch '%s' at the same time.\n"
 "Did you intend to checkout '%s' which can not be resolved as commit?"
 msgstr ""
 "Impossible de mettre à jour les chemins et de basculer sur la branche '%s' "
 "en même temps.\n"
 "Souhaitiez-vous extraire '%s' qui ne peut être résolu comme commit ?"
 
-#: builtin/checkout.c:1206
+#: builtin/checkout.c:1224
 #, c-format
 msgid "git checkout: --detach does not take a path argument '%s'"
 msgstr "git checkout: --detach n'accepte pas un argument de chemin '%s'"
 
-#: builtin/checkout.c:1210
+#: builtin/checkout.c:1228
 msgid ""
 "git checkout: --ours/--theirs, --force and --merge are incompatible when\n"
 "checking out of the index."
 msgstr ""
 "git checkout: --ours/--theirs, --force et --merge sont incompatibles lors\n"
 "de l'extraction de l'index."
@@ -3961,267 +3957,283 @@
 "nettoyer"
 
 #: builtin/clone.c:37
 msgid "git clone [options] [--] <repo> [<dir>]"
 msgstr "git clone [options] [--] <dépôt> [<répertoire>]"
 
-#: builtin/clone.c:65 builtin/fetch.c:112 builtin/merge.c:223
+#: builtin/clone.c:66 builtin/fetch.c:112 builtin/merge.c:224
 #: builtin/push.c:514
 msgid "force progress reporting"
 msgstr "forcer l'affichage de l'état d'avancement"
 
-#: builtin/clone.c:67
+#: builtin/clone.c:68
 msgid "don't create a checkout"
 msgstr "ne pas créer d'extraction"
 
-#: builtin/clone.c:68 builtin/clone.c:70 builtin/init-db.c:488
+#: builtin/clone.c:69 builtin/clone.c:71 builtin/init-db.c:496
 msgid "create a bare repository"
 msgstr "créer un dépôt nu"
 
-#: builtin/clone.c:72
+#: builtin/clone.c:73
 msgid "create a mirror repository (implies bare)"
 msgstr "créer un dépôt miroir (implique dépôt nu)"
 
-#: builtin/clone.c:74
+#: builtin/clone.c:75
 msgid "to clone from a local repository"
 msgstr "pour cloner depuis un dépôt local"
 
-#: builtin/clone.c:76
+#: builtin/clone.c:77
 msgid "don't use local hardlinks, always copy"
 msgstr "ne pas utiliser de liens durs locaux, toujours copier"
 
-#: builtin/clone.c:78
+#: builtin/clone.c:79
 msgid "setup as shared repository"
 msgstr "régler comme dépôt partagé"
 
-#: builtin/clone.c:80 builtin/clone.c:82
+#: builtin/clone.c:81 builtin/clone.c:83
 msgid "initialize submodules in the clone"
 msgstr "initialiser les sous-modules dans le clone"
 
-#: builtin/clone.c:83 builtin/init-db.c:485
+#: builtin/clone.c:84 builtin/init-db.c:493
 msgid "template-directory"
 msgstr "répertoire-modèle"
 
-#: builtin/clone.c:84 builtin/init-db.c:486
+#: builtin/clone.c:85 builtin/init-db.c:494
 msgid "directory from which templates will be used"
 msgstr "répertoire depuis lequel les modèles vont être utilisés"
 
-#: builtin/clone.c:86
+#: builtin/clone.c:87
 msgid "reference repository"
 msgstr "dépôt de référence"
 
-#: builtin/clone.c:87 builtin/column.c:26 builtin/merge-file.c:44
+#: builtin/clone.c:88 builtin/column.c:26 builtin/merge-file.c:44
 msgid "name"
 msgstr "nom"
 
-#: builtin/clone.c:88
+#: builtin/clone.c:89
 msgid "use <name> instead of 'origin' to track upstream"
 msgstr "utiliser <nom> au lieu de 'origin' pour suivre la branche amont"
 
-#: builtin/clone.c:90
+#: builtin/clone.c:91
 msgid "checkout <branch> instead of the remote's HEAD"
 msgstr "extraire <branche> au lieu de la HEAD du répertoire distant"
 
-#: builtin/clone.c:92
+#: builtin/clone.c:93
 msgid "path to git-upload-pack on the remote"
 msgstr "chemin vers git-upload-pack sur le serveur distant"
 
-#: builtin/clone.c:93 builtin/fetch.c:113 builtin/grep.c:659
+#: builtin/clone.c:94 builtin/fetch.c:113 builtin/grep.c:659
 msgid "depth"
 msgstr "profondeur"
 
-#: builtin/clone.c:94
+#: builtin/clone.c:95
 msgid "create a shallow clone of that depth"
 msgstr "créer un clone superficiel de cette profondeur"
 
-#: builtin/clone.c:96
+#: builtin/clone.c:97
 msgid "clone only one branch, HEAD or --branch"
 msgstr "cloner seulement une branche, HEAD ou --branch"
 
-#: builtin/clone.c:97 builtin/init-db.c:494
+#: builtin/clone.c:99
+msgid "use --reference only while cloning"
+msgstr "utiliser seulement --reference pour cloner"
+
+#: builtin/clone.c:100 builtin/init-db.c:502
 msgid "gitdir"
 msgstr "gitdir"
 
-#: builtin/clone.c:98 builtin/init-db.c:495
+#: builtin/clone.c:101 builtin/init-db.c:503
 msgid "separate git dir from working tree"
 msgstr "séparer le répertoire git de la copie de travail"
 
-#: builtin/clone.c:99
+#: builtin/clone.c:102
 msgid "key=value"
 msgstr "clé=valeur"
 
-#: builtin/clone.c:100
+#: builtin/clone.c:103
 msgid "set config inside the new repository"
 msgstr "régler la configuration dans le nouveau dépôt"
 
-#: builtin/clone.c:253
+#: builtin/clone.c:256
 #, c-format
 msgid "reference repository '%s' is not a local repository."
 msgstr "le dépôt de référence '%s' n'est pas un dépôt local."
 
-#: builtin/clone.c:257
+#: builtin/clone.c:260
 #, c-format
 msgid "reference repository '%s' is shallow"
 msgstr "le dépôt de référence '%s' est superficiel"
 
-#: builtin/clone.c:260
+#: builtin/clone.c:263
 #, c-format
 msgid "reference repository '%s' is grafted"
 msgstr "le dépôt de référence '%s' est greffé"
 
-#: builtin/clone.c:322
+#: builtin/clone.c:325
 #, c-format
 msgid "failed to create directory '%s'"
 msgstr "échec de la création du répertoire '%s'"
 
-#: builtin/clone.c:324 builtin/diff.c:84
+#: builtin/clone.c:327 builtin/diff.c:84
 #, c-format
 msgid "failed to stat '%s'"
 msgstr "échec du stat de '%s'"
 
-#: builtin/clone.c:326
+#: builtin/clone.c:329
 #, c-format
 msgid "%s exists and is not a directory"
 msgstr "%s existe et n'est pas un répertoire"
 
-#: builtin/clone.c:340
+#: builtin/clone.c:343
 #, c-format
 msgid "failed to stat %s\n"
 msgstr "échec du stat de %s\n"
 
-#: builtin/clone.c:362
+#: builtin/clone.c:365
 #, c-format
 msgid "failed to create link '%s'"
 msgstr "échec de la création du lien '%s'"
 
-#: builtin/clone.c:366
+#: builtin/clone.c:369
 #, c-format
 msgid "failed to copy file to '%s'"
 msgstr "échec de la copie vers '%s'"
 
-#: builtin/clone.c:389 builtin/clone.c:563
+#: builtin/clone.c:392 builtin/clone.c:566
 #, c-format
 msgid "done.\n"
 msgstr "fait.\n"
 
-#: builtin/clone.c:401
+#: builtin/clone.c:404
 msgid ""
 "Clone succeeded, but checkout failed.\n"
 "You can inspect what was checked out with 'git status'\n"
 "and retry the checkout with 'git checkout -f HEAD'\n"
 msgstr ""
 "Le clone a réussi, mais l'extraction a échoué.\n"
 "Vous pouvez inspecter ce qui a été extrait avec 'git status'\n"
 "et réessayer l'extraction avec 'git checkout -f HEAD'\n"
 
-#: builtin/clone.c:478
+#: builtin/clone.c:481
 #, c-format
 msgid "Could not find remote branch %s to clone."
 msgstr "Impossible de trouver la branche distante '%s' à cloner."
 
-#: builtin/clone.c:558
+#: builtin/clone.c:561
 #, c-format
 msgid "Checking connectivity... "
 msgstr "Vérification de la connectivité... "
 
-#: builtin/clone.c:561
+#: builtin/clone.c:564
 msgid "remote did not send all necessary objects"
 msgstr "le serveur distant n'a pas envoyé tous les objets nécessaires"
 
-#: builtin/clone.c:625
+#: builtin/clone.c:628
 msgid "remote HEAD refers to nonexistent ref, unable to checkout.\n"
 msgstr ""
 "la HEAD distante réfère à une référence non existante, impossible de "
 "l'extraire.\n"
 
-#: builtin/clone.c:656
+#: builtin/clone.c:659
 msgid "unable to checkout working tree"
 msgstr "impossible d'extraire la copie de travail"
 
-#: builtin/clone.c:765
+#: builtin/clone.c:746
+msgid "cannot repack to clean up"
+msgstr "impossible de remballer pour nettoyer"
+
+#: builtin/clone.c:748
+msgid "cannot unlink temporary alternates file"
+msgstr "impossible de unlinker le fichier temporaire alternates"
+
+#: builtin/clone.c:778
 msgid "Too many arguments."
 msgstr "Trop d'arguments."
 
-#: builtin/clone.c:769
+#: builtin/clone.c:782
 msgid "You must specify a repository to clone."
 msgstr "Vous devez spécifier un dépôt à cloner."
 
-#: builtin/clone.c:780
+#: builtin/clone.c:793
 #, c-format
 msgid "--bare and --origin %s options are incompatible."
 msgstr "les options --bare et --origin %s sont incompatibles."
 
-#: builtin/clone.c:783
+#: builtin/clone.c:796
 msgid "--bare and --separate-git-dir are incompatible."
 msgstr "--bare et --separate-git-dir sont incompatibles."
 
-#: builtin/clone.c:796
+#: builtin/clone.c:809
 #, c-format
 msgid "repository '%s' does not exist"
 msgstr "le dépôt '%s' n'existe pas"
 
-#: builtin/clone.c:802 builtin/fetch.c:1155
+#: builtin/clone.c:815 builtin/fetch.c:1155
 #, c-format
 msgid "depth %s is not a positive number"
 msgstr "la profondeur %s n'est pas un entier positif"
 
-#: builtin/clone.c:812
+#: builtin/clone.c:825
 #, c-format
 msgid "destination path '%s' already exists and is not an empty directory."
 msgstr ""
 "le chemin de destination '%s' existe déjà et n'est pas un répertoire vide."
 
-#: builtin/clone.c:822
+#: builtin/clone.c:835
 #, c-format
 msgid "working tree '%s' already exists."
 msgstr "la copie de travail '%s' existe déjà."
 
-#: builtin/clone.c:835 builtin/clone.c:847
+#: builtin/clone.c:848 builtin/clone.c:860
 #, c-format
 msgid "could not create leading directories of '%s'"
 msgstr "impossible de créer les répertoires de premier niveau dans '%s'"
 
-#: builtin/clone.c:838
+#: builtin/clone.c:851
 #, c-format
 msgid "could not create work tree dir '%s'."
 msgstr "impossible de créer le répertoire de la copie de travail '%s'."
 
-#: builtin/clone.c:857
+#: builtin/clone.c:870
 #, c-format
 msgid "Cloning into bare repository '%s'...\n"
 msgstr "Clonage dans le dépôt nu '%s'\n"
 
-#: builtin/clone.c:859
+#: builtin/clone.c:872
 #, c-format
 msgid "Cloning into '%s'...\n"
 msgstr "Clonage dans '%s'...\n"
 
-#: builtin/clone.c:895
+#: builtin/clone.c:897
+msgid "--dissociate given, but there is no --reference"
+msgstr "--dissociate est spécifié, mais --reference est absent"
+
+#: builtin/clone.c:912
 msgid "--depth is ignored in local clones; use file:// instead."
 msgstr ""
 "--depth est ignoré dans les clones locaux : utilisez plutôt \"file://\"."
 
-#: builtin/clone.c:898
+#: builtin/clone.c:915
 msgid "source repository is shallow, ignoring --local"
 msgstr "le dépôt source est superficiel, option --local ignorée"
 
-#: builtin/clone.c:903
+#: builtin/clone.c:920
 msgid "--local is ignored"
 msgstr "--local est ignoré"
 
-#: builtin/clone.c:907
+#: builtin/clone.c:924
 #, c-format
 msgid "Don't know how to clone %s"
 msgstr "Je ne sais pas cloner %s"
 
-#: builtin/clone.c:958 builtin/clone.c:966
+#: builtin/clone.c:975 builtin/clone.c:983
 #, c-format
 msgid "Remote branch %s not found in upstream %s"
 msgstr "La branche distante %s n'a pas été trouvée dans le dépôt amont %s"
 
-#: builtin/clone.c:969
+#: builtin/clone.c:986
 msgid "You appear to have cloned an empty repository."
 msgstr "Vous semblez avoir cloné un dépôt vide."
 
 #: builtin/column.c:9
 msgid "git column [options]"
 msgstr "git column [options]"
@@ -4402,81 +4414,76 @@
 msgstr "impossible de lire l'index"
 
 #: builtin/commit.c:473
 msgid "unable to write temporary index file"
 msgstr "impossible d'écrire le fichier d'index temporaire"
 
-#: builtin/commit.c:592
+#: builtin/commit.c:584
 #, c-format
 msgid "commit '%s' lacks author header"
 msgstr "entête d'auteur manquant dans le commit '%s'"
 
-#: builtin/commit.c:594
+#: builtin/commit.c:586
 #, c-format
 msgid "commit '%s' has malformed author line"
 msgstr "le commit '%s' a une ligne d'auteur malformée"
 
-#: builtin/commit.c:613
+#: builtin/commit.c:605
 msgid "malformed --author parameter"
 msgstr "paramètre --author mal formé"
 
-#: builtin/commit.c:621
+#: builtin/commit.c:613
 #, c-format
 msgid "invalid date format: %s"
 msgstr "format de date invalide : %s"
 
-#: builtin/commit.c:642
-#, c-format
-msgid "Malformed ident string: '%s'"
-msgstr "Chaîne ident mal formée : '%s'"
-
-#: builtin/commit.c:675
+#: builtin/commit.c:657
 msgid ""
 "unable to select a comment character that is not used\n"
 "in the current commit message"
 msgstr ""
 "impossible de sélectionner un caractère de commentaire\n"
 "qui n'est pas utilisé dans le message de validation actuel"
 
-#: builtin/commit.c:712 builtin/commit.c:745 builtin/commit.c:1120
+#: builtin/commit.c:694 builtin/commit.c:727 builtin/commit.c:1084
 #, c-format
 msgid "could not lookup commit %s"
 msgstr "impossible de rechercher le commit %s"
 
-#: builtin/commit.c:724 builtin/shortlog.c:273
+#: builtin/commit.c:706 builtin/shortlog.c:273
 #, c-format
 msgid "(reading log message from standard input)\n"
 msgstr "(lecture du message de journal depuis l'entrée standard)\n"
 
-#: builtin/commit.c:726
+#: builtin/commit.c:708
 msgid "could not read log from standard input"
 msgstr "impossible de lire le journal depuis l'entrée standard"
 
-#: builtin/commit.c:730
+#: builtin/commit.c:712
 #, c-format
 msgid "could not read log file '%s'"
 msgstr "impossible de lire le fichier de journal '%s'"
 
-#: builtin/commit.c:752
+#: builtin/commit.c:734
 msgid "could not read MERGE_MSG"
 msgstr "impossible de lire MERGE_MSG"
 
-#: builtin/commit.c:756
+#: builtin/commit.c:738
 msgid "could not read SQUASH_MSG"
 msgstr "impossible de lire SQUASH_MSG"
 
-#: builtin/commit.c:760
+#: builtin/commit.c:742
 #, c-format
 msgid "could not read '%s'"
 msgstr "impossible de lire '%s'"
 
-#: builtin/commit.c:831
+#: builtin/commit.c:789
 msgid "could not write commit template"
 msgstr "impossible d'écrire le modèle de commit"
 
-#: builtin/commit.c:849
+#: builtin/commit.c:807
 #, c-format
 msgid ""
 "\n"
 "It looks like you may be committing a merge.\n"
 "If this is not correct, please remove the file\n"
 "\t%s\n"
@@ -4485,13 +4492,13 @@
 "\n"
 "Il semble que vous validiez une fusion.\n"
 "Si ce n'est pas le cas, veuillez supprimer le fichier\n"
 "\t%s\n"
 "et essayez à nouveau.\n"
 
-#: builtin/commit.c:854
+#: builtin/commit.c:812
 #, c-format
 msgid ""
 "\n"
 "It looks like you may be committing a cherry-pick.\n"
 "If this is not correct, please remove the file\n"
 "\t%s\n"
@@ -4500,384 +4507,384 @@
 "\n"
 "Il semble que vous validiez un picorage.\n"
 "Si ce n'est pas le cas, veuillez supprimer le fichier\n"
 "\t%s\n"
 "et essayez à nouveau.\n"
 
-#: builtin/commit.c:867
+#: builtin/commit.c:825
 #, c-format
 msgid ""
 "Please enter the commit message for your changes. Lines starting\n"
 "with '%c' will be ignored, and an empty message aborts the commit.\n"
 msgstr ""
 "Veuillez saisir le message de validation pour vos modifications. Les lignes\n"
 "commençant par '%c' seront ignorées, et un message vide abandonne la "
 "validation.\n"
 
-#: builtin/commit.c:874
+#: builtin/commit.c:832
 #, c-format
 msgid ""
 "Please enter the commit message for your changes. Lines starting\n"
 "with '%c' will be kept; you may remove them yourself if you want to.\n"
 "An empty message aborts the commit.\n"
 msgstr ""
 "Veuillez saisir le message de validation pour vos modifications. Les lignes\n"
 "commençant par '%c' seront conservées ; vous pouvez les supprimer vous-même\n"
 "si vous le souhaitez. Un message vide abandonne la validation.\n"
 
-#: builtin/commit.c:888
+#: builtin/commit.c:852
 #, c-format
 msgid "%sAuthor:    %.*s <%.*s>"
 msgstr "%sAuteur :     %.*s <%.*s>"
 
-#: builtin/commit.c:896
+#: builtin/commit.c:860
 #, c-format
 msgid "%sDate:      %s"
 msgstr "%sDate :       %s"
 
-#: builtin/commit.c:903
+#: builtin/commit.c:867
 #, c-format
 msgid "%sCommitter: %.*s <%.*s>"
 msgstr "%sValidateur : %.*s <%.*s>"
 
-#: builtin/commit.c:921
+#: builtin/commit.c:885
 msgid "Cannot read index"
 msgstr "Impossible de lire l'index"
 
-#: builtin/commit.c:978
+#: builtin/commit.c:942
 msgid "Error building trees"
 msgstr "Erreur lors de la construction des arbres"
 
-#: builtin/commit.c:993 builtin/tag.c:495
+#: builtin/commit.c:957 builtin/tag.c:495
 #, c-format
 msgid "Please supply the message using either -m or -F option.\n"
 msgstr "Veuillez fournir le message en utilisant l'option -m ou -F.\n"
 
-#: builtin/commit.c:1095
+#: builtin/commit.c:1059
 #, c-format
 msgid "No existing author found with '%s'"
 msgstr "Aucun auteur existant trouvé avec '%s'"
 
-#: builtin/commit.c:1110 builtin/commit.c:1350
+#: builtin/commit.c:1074 builtin/commit.c:1314
 #, c-format
 msgid "Invalid untracked files mode '%s'"
 msgstr "Mode de fichier non suivi invalide '%s'"
 
-#: builtin/commit.c:1147
+#: builtin/commit.c:1111
 msgid "--long and -z are incompatible"
 msgstr "--long et -z sont incompatibles"
 
-#: builtin/commit.c:1177
+#: builtin/commit.c:1141
 msgid "Using both --reset-author and --author does not make sense"
 msgstr "L'utilisation simultanée de --reset-author et --author n'a pas de sens"
 
-#: builtin/commit.c:1186
+#: builtin/commit.c:1150
 msgid "You have nothing to amend."
 msgstr "Il n'y a rien à corriger."
 
-#: builtin/commit.c:1189
+#: builtin/commit.c:1153
 msgid "You are in the middle of a merge -- cannot amend."
 msgstr "Vous êtes en pleine fusion -- impossible de corriger (amend)."
 
-#: builtin/commit.c:1191
+#: builtin/commit.c:1155
 msgid "You are in the middle of a cherry-pick -- cannot amend."
 msgstr "Vous êtes en plein picorage -- impossible de corriger (amend)."
 
-#: builtin/commit.c:1194
+#: builtin/commit.c:1158
 msgid "Options --squash and --fixup cannot be used together"
 msgstr "Les options --squash et --fixup ne peuvent pas être utilisées ensemble"
 
-#: builtin/commit.c:1204
+#: builtin/commit.c:1168
 msgid "Only one of -c/-C/-F/--fixup can be used."
 msgstr "Une seule option parmi -c/-C/-F/--fixup peut être utilisée."
 
-#: builtin/commit.c:1206
+#: builtin/commit.c:1170
 msgid "Option -m cannot be combined with -c/-C/-F/--fixup."
 msgstr "L'option -m ne peut pas être combinée avec -c/-C/-F/--fixup."
 
-#: builtin/commit.c:1214
+#: builtin/commit.c:1178
 msgid "--reset-author can be used only with -C, -c or --amend."
 msgstr "--reset-author ne peut être utilisé qu'avec -C, -c ou --amend."
 
-#: builtin/commit.c:1231
+#: builtin/commit.c:1195
 msgid "Only one of --include/--only/--all/--interactive/--patch can be used."
 msgstr ""
 "Une seule option parmi --include/--only/--all/--interactive/--patch peut "
 "être utilisée."
 
-#: builtin/commit.c:1233
+#: builtin/commit.c:1197
 msgid "No paths with --include/--only does not make sense."
 msgstr "Aucun chemin avec les options --include/--only n'a pas de sens."
 
-#: builtin/commit.c:1235
+#: builtin/commit.c:1199
 msgid "Clever... amending the last one with dirty index."
 msgstr "Malin... correction du dernier avec un index sale."
 
-#: builtin/commit.c:1237
+#: builtin/commit.c:1201
 msgid "Explicit paths specified without -i or -o; assuming --only paths..."
 msgstr "Chemins explicites spécifiés sans -i ni -o ; --only supposé..."
 
-#: builtin/commit.c:1249 builtin/tag.c:728
+#: builtin/commit.c:1213 builtin/tag.c:728
 #, c-format
 msgid "Invalid cleanup mode %s"
 msgstr "Mode de nettoyage invalide %s"
 
-#: builtin/commit.c:1254
+#: builtin/commit.c:1218
 msgid "Paths with -a does not make sense."
 msgstr "Spécifier des chemins avec l'option -a n'a pas de sens."
 
-#: builtin/commit.c:1364 builtin/commit.c:1644
+#: builtin/commit.c:1328 builtin/commit.c:1608
 msgid "show status concisely"
 msgstr "afficher le statut avec concision"
 
-#: builtin/commit.c:1366 builtin/commit.c:1646
+#: builtin/commit.c:1330 builtin/commit.c:1610
 msgid "show branch information"
 msgstr "afficher l'information de branche"
 
-#: builtin/commit.c:1368 builtin/commit.c:1648 builtin/push.c:500
+#: builtin/commit.c:1332 builtin/commit.c:1612 builtin/push.c:500
 msgid "machine-readable output"
 msgstr "sortie pour traitement automatique"
 
-#: builtin/commit.c:1371 builtin/commit.c:1650
+#: builtin/commit.c:1335 builtin/commit.c:1614
 msgid "show status in long format (default)"
 msgstr "afficher le statut en format long (par défaut)"
 
-#: builtin/commit.c:1374 builtin/commit.c:1653
+#: builtin/commit.c:1338 builtin/commit.c:1617
 msgid "terminate entries with NUL"
 msgstr "terminer les éléments par NUL"
 
-#: builtin/commit.c:1376 builtin/commit.c:1656 builtin/fast-export.c:980
+#: builtin/commit.c:1340 builtin/commit.c:1620 builtin/fast-export.c:980
 #: builtin/fast-export.c:983 builtin/tag.c:603
 msgid "mode"
 msgstr "mode"
 
-#: builtin/commit.c:1377 builtin/commit.c:1656
+#: builtin/commit.c:1341 builtin/commit.c:1620
 msgid "show untracked files, optional modes: all, normal, no. (Default: all)"
 msgstr ""
 "afficher les fichiers non suivis, \"mode\" facultatif : all (tous), normal, "
 "no. (Défaut : all)"
 
-#: builtin/commit.c:1380
+#: builtin/commit.c:1344
 msgid "show ignored files"
 msgstr "afficher les fichiers ignorés"
 
-#: builtin/commit.c:1381 parse-options.h:153
+#: builtin/commit.c:1345 parse-options.h:153
 msgid "when"
 msgstr "quand"
 
-#: builtin/commit.c:1382
+#: builtin/commit.c:1346
 msgid ""
 "ignore changes to submodules, optional when: all, dirty, untracked. "
 "(Default: all)"
 msgstr ""
 "ignorer les modifications dans les sous-modules, \"quand\" facultatif : all "
 "(tous), dirty (sale), untracked (non suivi). (Défaut : all)"
 
-#: builtin/commit.c:1384
+#: builtin/commit.c:1348
 msgid "list untracked files in columns"
 msgstr "afficher les fichiers non suivis en colonnes"
 
-#: builtin/commit.c:1471
+#: builtin/commit.c:1435
 msgid "couldn't look up newly created commit"
 msgstr "impossible de retrouver le commit nouvellement créé"
 
-#: builtin/commit.c:1473
+#: builtin/commit.c:1437
 msgid "could not parse newly created commit"
 msgstr "impossible d'analyser le commit nouvellement créé"
 
-#: builtin/commit.c:1518
+#: builtin/commit.c:1482
 msgid "detached HEAD"
 msgstr "HEAD détachée"
 
-#: builtin/commit.c:1521
+#: builtin/commit.c:1485
 msgid " (root-commit)"
 msgstr " (commit racine)"
 
-#: builtin/commit.c:1614
+#: builtin/commit.c:1578
 msgid "suppress summary after successful commit"
 msgstr "supprimer le résumé après une validation réussie"
 
-#: builtin/commit.c:1615
+#: builtin/commit.c:1579
 msgid "show diff in commit message template"
 msgstr "afficher les diff dans le modèle de message de validation"
 
-#: builtin/commit.c:1617
+#: builtin/commit.c:1581
 msgid "Commit message options"
 msgstr "Options du message de validation"
 
-#: builtin/commit.c:1618 builtin/tag.c:601
+#: builtin/commit.c:1582 builtin/tag.c:601
 msgid "read message from file"
 msgstr "lire le message depuis un fichier"
 
-#: builtin/commit.c:1619
+#: builtin/commit.c:1583
 msgid "author"
 msgstr "auteur"
 
-#: builtin/commit.c:1619
+#: builtin/commit.c:1583
 msgid "override author for commit"
 msgstr "remplacer l'auteur pour la validation"
 
-#: builtin/commit.c:1620 builtin/gc.c:275
+#: builtin/commit.c:1584 builtin/gc.c:275
 msgid "date"
 msgstr "date"
 
-#: builtin/commit.c:1620
+#: builtin/commit.c:1584
 msgid "override date for commit"
 msgstr "remplacer la date pour la validation"
 
-#: builtin/commit.c:1621 builtin/merge.c:217 builtin/notes.c:408
-#: builtin/notes.c:565 builtin/tag.c:599
+#: builtin/commit.c:1585 builtin/merge.c:218 builtin/notes.c:391
+#: builtin/notes.c:554 builtin/tag.c:599
 msgid "message"
 msgstr "message"
 
-#: builtin/commit.c:1621
+#: builtin/commit.c:1585
 msgid "commit message"
 msgstr "message de validation"
 
-#: builtin/commit.c:1622
+#: builtin/commit.c:1586
 msgid "reuse and edit message from specified commit"
 msgstr "réutiliser et éditer le message du commit spécifié"
 
-#: builtin/commit.c:1623
+#: builtin/commit.c:1587
 msgid "reuse message from specified commit"
 msgstr "réutiliser le message du commit spécifié"
 
-#: builtin/commit.c:1624
+#: builtin/commit.c:1588
 msgid "use autosquash formatted message to fixup specified commit"
 msgstr ""
 "utiliser un message au format autosquash pour corriger le commit spécifié"
 
-#: builtin/commit.c:1625
+#: builtin/commit.c:1589
 msgid "use autosquash formatted message to squash specified commit"
 msgstr ""
 "utiliser un message au format autosquash pour compresser le commit spécifié"
 
-#: builtin/commit.c:1626
+#: builtin/commit.c:1590
 msgid "the commit is authored by me now (used with -C/-c/--amend)"
 msgstr ""
 "à présent je suis l'auteur de la validation (utilisé avec -C/-c/--amend)"
 
-#: builtin/commit.c:1627 builtin/log.c:1191 builtin/revert.c:86
+#: builtin/commit.c:1591 builtin/log.c:1191 builtin/revert.c:86
 msgid "add Signed-off-by:"
 msgstr "ajouter une entrée Signed-off-by :"
 
-#: builtin/commit.c:1628
+#: builtin/commit.c:1592
 msgid "use specified template file"
 msgstr "utiliser le fichier de modèle spécifié"
 
-#: builtin/commit.c:1629
+#: builtin/commit.c:1593
 msgid "force edit of commit"
 msgstr "forcer l'édition du commit"
 
-#: builtin/commit.c:1630
+#: builtin/commit.c:1594
 msgid "default"
 msgstr "défaut"
 
-#: builtin/commit.c:1630 builtin/tag.c:604
+#: builtin/commit.c:1594 builtin/tag.c:604
 msgid "how to strip spaces and #comments from message"
 msgstr "comment éliminer les espaces et les commentaires # du message"
 
-#: builtin/commit.c:1631
+#: builtin/commit.c:1595
 msgid "include status in commit message template"
 msgstr "inclure le statut dans le modèle de message de validation"
 
-#: builtin/commit.c:1632 builtin/merge.c:224 builtin/revert.c:92
+#: builtin/commit.c:1596 builtin/merge.c:225 builtin/revert.c:92
 #: builtin/tag.c:605
 msgid "key-id"
 msgstr "id de clé"
 
-#: builtin/commit.c:1633 builtin/merge.c:225 builtin/revert.c:93
+#: builtin/commit.c:1597 builtin/merge.c:226 builtin/revert.c:93
 msgid "GPG sign commit"
 msgstr "signer la validation avec GPG"
 
-#: builtin/commit.c:1636
+#: builtin/commit.c:1600
 msgid "Commit contents options"
 msgstr "Valider les options des contenus"
 
-#: builtin/commit.c:1637
+#: builtin/commit.c:1601
 msgid "commit all changed files"
 msgstr "valider tous les fichiers modifiés"
 
-#: builtin/commit.c:1638
+#: builtin/commit.c:1602
 msgid "add specified files to index for commit"
 msgstr "ajouter les fichiers spécifiés à l'index pour la validation"
 
-#: builtin/commit.c:1639
+#: builtin/commit.c:1603
 msgid "interactively add files"
 msgstr "ajouter des fichiers en mode interactif"
 
-#: builtin/commit.c:1640
+#: builtin/commit.c:1604
 msgid "interactively add changes"
 msgstr "ajouter les modifications en mode interactif"
 
-#: builtin/commit.c:1641
+#: builtin/commit.c:1605
 msgid "commit only specified files"
 msgstr "valider seulement les fichiers spécifiés"
 
-#: builtin/commit.c:1642
+#: builtin/commit.c:1606
 msgid "bypass pre-commit hook"
 msgstr "éviter d'utiliser le crochet pre-commit"
 
-#: builtin/commit.c:1643
+#: builtin/commit.c:1607
 msgid "show what would be committed"
 msgstr "afficher ce qui serait validé"
 
-#: builtin/commit.c:1654
+#: builtin/commit.c:1618
 msgid "amend previous commit"
 msgstr "corriger la validation précédente"
 
-#: builtin/commit.c:1655
+#: builtin/commit.c:1619
 msgid "bypass post-rewrite hook"
 msgstr "éviter d'utiliser le crochet post-rewrite"
 
-#: builtin/commit.c:1660
+#: builtin/commit.c:1624
 msgid "ok to record an empty change"
 msgstr "accepter d'enregistrer une modification vide"
 
-#: builtin/commit.c:1662
+#: builtin/commit.c:1626
 msgid "ok to record a change with an empty message"
 msgstr "accepter d'enregistrer une modification avec un message vide"
 
-#: builtin/commit.c:1691
+#: builtin/commit.c:1655
 msgid "could not parse HEAD commit"
 msgstr "impossible d'analyser le commit HEAD"
 
-#: builtin/commit.c:1730 builtin/merge.c:518
+#: builtin/commit.c:1694 builtin/merge.c:519
 #, c-format
 msgid "could not open '%s' for reading"
 msgstr "impossible d'ouvrir '%s' en lecture"
 
-#: builtin/commit.c:1737
+#: builtin/commit.c:1701
 #, c-format
 msgid "Corrupt MERGE_HEAD file (%s)"
 msgstr "Fichier MERGE_HEAD corrompu (%s)"
 
-#: builtin/commit.c:1744
+#: builtin/commit.c:1708
 msgid "could not read MERGE_MODE"
 msgstr "impossible de lire MERGE_MODE"
 
-#: builtin/commit.c:1763
+#: builtin/commit.c:1727
 #, c-format
 msgid "could not read commit message: %s"
 msgstr "impossible de lire le message de validation : %s"
 
-#: builtin/commit.c:1774
+#: builtin/commit.c:1738
 #, c-format
 msgid "Aborting commit; you did not edit the message.\n"
 msgstr "Abandon de la validation ; vous n'avez pas édité le message\n"
 
-#: builtin/commit.c:1779
+#: builtin/commit.c:1743
 #, c-format
 msgid "Aborting commit due to empty commit message.\n"
 msgstr "Abandon de la validation du à un message de validation vide\n"
 
-#: builtin/commit.c:1794 builtin/merge.c:850 builtin/merge.c:875
+#: builtin/commit.c:1758 builtin/merge.c:851 builtin/merge.c:876
 msgid "failed to write commit object"
 msgstr "échec de l'écriture de l'objet commit"
 
-#: builtin/commit.c:1827
+#: builtin/commit.c:1791
 msgid ""
 "Repository has been updated, but unable to write\n"
 "new_index file. Check that disk is not full and quota is\n"
 "not exceeded, and then \"git reset HEAD\" to recover."
 msgstr ""
 "Le dépôt a été mis à jour, mais impossible d'écrire le fichier\n"
@@ -4966,23 +4973,19 @@
 msgstr "afficher tout"
 
 #: builtin/config.c:71
 msgid "open an editor"
 msgstr "ouvrir un éditeur"
 
-#: builtin/config.c:72 builtin/config.c:73
-msgid "slot"
-msgstr "emplacement"
-
 #: builtin/config.c:72
-msgid "find the color configured: [default]"
-msgstr "trouver la couleur configurée : [par défaut]"
+msgid "find the color configured: slot [default]"
+msgstr "trouver la couleur configurée : slot [par défaut]"
 
 #: builtin/config.c:73
-msgid "find the color setting: [stdout-is-tty]"
-msgstr "trouver le réglage de la couleur : [stdout-est-tty]"
+msgid "find the color setting: slot [stdout-is-tty]"
+msgstr "trouver le réglage de la couleur : slot [stdout-est-tty]"
 
 #: builtin/config.c:74
 msgid "Type"
 msgstr "Type"
 
 #: builtin/config.c:75
@@ -5010,17 +5013,17 @@
 msgstr "terminer les valeurs avec un caractère NUL"
 
 #: builtin/config.c:81
 msgid "respect include directives on lookup"
 msgstr "respecter les directives d'inclusion lors de la recherche"
 
-#: builtin/config.c:315
+#: builtin/config.c:316
 msgid "unable to parse default color value"
 msgstr "impossible de lire la valeur de couleur par défaut"
 
-#: builtin/config.c:455
+#: builtin/config.c:457
 #, c-format
 msgid ""
 "# This is Git's per-user configuration file.\n"
 "[core]\n"
 "# Please adapt and uncomment the following lines:\n"
 "#\tuser = %s\n"
@@ -5029,13 +5032,13 @@
 "# Ceci est le fichier de configuration personnel.\n"
 "[core]\n"
 "# Veuillez adapter et décommenter les lignes suivantes :\n"
 "#\tuser = %s\n"
 "#\temail = %s\n"
 
-#: builtin/config.c:590
+#: builtin/config.c:589
 #, c-format
 msgid "cannot create configuration file %s"
 msgstr "création impossible du fichier de configuration '%s'"
 
 #: builtin/count-objects.c:55
 msgid "git count-objects [-v] [-H | --human-readable]"
@@ -5462,13 +5465,13 @@
 msgstr "   (%s est devenu en suspens)"
 
 #: builtin/fetch.c:798
 msgid "[deleted]"
 msgstr "[supprimé]"
 
-#: builtin/fetch.c:799 builtin/remote.c:1063
+#: builtin/fetch.c:799 builtin/remote.c:1060
 msgid "(none)"
 msgstr "(aucun(e))"
 
 #: builtin/fetch.c:818
 #, c-format
 msgid "Refusing to fetch into current branch %s of non-bare repository"
@@ -5540,80 +5543,80 @@
 
 #: builtin/fmt-merge-msg.c:13
 msgid "git fmt-merge-msg [-m <message>] [--log[=<n>]|--no-log] [--file <file>]"
 msgstr ""
 "git fmt-merge-msg [-m <message>] [--log[=<n>]|--no-log] [--file <fichier>]"
 
-#: builtin/fmt-merge-msg.c:663 builtin/fmt-merge-msg.c:666 builtin/grep.c:698
-#: builtin/merge.c:197 builtin/repack.c:179 builtin/repack.c:183
-#: builtin/show-branch.c:654 builtin/show-ref.c:178 builtin/tag.c:590
+#: builtin/fmt-merge-msg.c:662 builtin/fmt-merge-msg.c:665 builtin/grep.c:698
+#: builtin/merge.c:198 builtin/repack.c:178 builtin/repack.c:182
+#: builtin/show-branch.c:657 builtin/show-ref.c:178 builtin/tag.c:590
 #: parse-options.h:132 parse-options.h:239
 msgid "n"
 msgstr "n"
 
-#: builtin/fmt-merge-msg.c:664
+#: builtin/fmt-merge-msg.c:663
 msgid "populate log with at most <n> entries from shortlog"
 msgstr "peupler le journal avec au plus <n> éléments depuis le journal court"
 
-#: builtin/fmt-merge-msg.c:667
+#: builtin/fmt-merge-msg.c:666
 msgid "alias for --log (deprecated)"
 msgstr "alias pour --log (obsolète)"
 
-#: builtin/fmt-merge-msg.c:670
+#: builtin/fmt-merge-msg.c:669
 msgid "text"
 msgstr "texte"
 
-#: builtin/fmt-merge-msg.c:671
+#: builtin/fmt-merge-msg.c:670
 msgid "use <text> as start of message"
 msgstr "utiliser <texte> comme début de message"
 
-#: builtin/fmt-merge-msg.c:672
+#: builtin/fmt-merge-msg.c:671
 msgid "file to read from"
 msgstr "fichier d'où lire"
 
 #: builtin/for-each-ref.c:676
 msgid "unable to parse format"
 msgstr "impossible d'analyser le format"
 
-#: builtin/for-each-ref.c:1057
+#: builtin/for-each-ref.c:1064
 msgid "git for-each-ref [options] [<pattern>]"
 msgstr "git for-each-ref [options] [<motif>]"
 
-#: builtin/for-each-ref.c:1072
+#: builtin/for-each-ref.c:1079
 msgid "quote placeholders suitably for shells"
 msgstr "échapper les champs réservés pour les interpréteurs de commandes"
 
-#: builtin/for-each-ref.c:1074
+#: builtin/for-each-ref.c:1081
 msgid "quote placeholders suitably for perl"
 msgstr "échapper les champs réservés pour perl"
 
-#: builtin/for-each-ref.c:1076
+#: builtin/for-each-ref.c:1083
 msgid "quote placeholders suitably for python"
 msgstr "échapper les champs réservés pour python"
 
-#: builtin/for-each-ref.c:1078
-msgid "quote placeholders suitably for tcl"
-msgstr "échapper les champs réservés pour tcl"
+#: builtin/for-each-ref.c:1085
+msgid "quote placeholders suitably for Tcl"
+msgstr "échapper les champs réservés pour compatibilité avec Tcl"
 
-#: builtin/for-each-ref.c:1081
+#: builtin/for-each-ref.c:1088
 msgid "show only <n> matched refs"
 msgstr "n'afficher que <n> références correspondant"
 
-#: builtin/for-each-ref.c:1082 builtin/replace.c:438
+#: builtin/for-each-ref.c:1089 builtin/replace.c:438
 msgid "format"
 msgstr "format"
 
-#: builtin/for-each-ref.c:1082
+#: builtin/for-each-ref.c:1089
 msgid "format to use for the output"
 msgstr "format à utiliser pour la sortie"
 
-#: builtin/for-each-ref.c:1083
+#: builtin/for-each-ref.c:1090
 msgid "key"
 msgstr "clé"
 
-#: builtin/for-each-ref.c:1084
+#: builtin/for-each-ref.c:1091
 msgid "field name to sort on"
 msgstr "nom du champ servant à trier"
 
 #: builtin/fsck.c:147 builtin/prune.c:136
 msgid "Checking connectivity"
 msgstr "Vérification de la connectivité"
@@ -6074,68 +6077,68 @@
 "'%s': cmd for supported man viewer.\n"
 "Please consider using 'man.<tool>.path' instead."
 msgstr ""
 "'%s' : chemin pour l'utilitaire de visualisation de manuel supporté.\n"
 "Veuillez utiliser plutôt 'man.<outil>.cmd'."
 
-#: builtin/help.c:352
+#: builtin/help.c:354
 #, c-format
 msgid "'%s': unknown man viewer."
 msgstr "'%s' : visualiseur de manuel inconnu."
 
-#: builtin/help.c:369
+#: builtin/help.c:371
 msgid "no man viewer handled the request"
 msgstr "aucun visualiseur de manuel n'a pris en charge la demande"
 
-#: builtin/help.c:377
+#: builtin/help.c:379
 msgid "no info viewer handled the request"
 msgstr "aucun visualiseur de 'info' n'a pris en charge la demande"
 
-#: builtin/help.c:423
+#: builtin/help.c:428
 msgid "Defining attributes per path"
 msgstr "Définition des attributs par chemin"
 
-#: builtin/help.c:424
+#: builtin/help.c:429
 msgid "Everyday Git With 20 Commands Or So"
 msgstr "Git de tous les jours avec à peu près 20 commandes"
 
-#: builtin/help.c:425
+#: builtin/help.c:430
 msgid "A Git glossary"
 msgstr "Un glossaire Git"
 
-#: builtin/help.c:426
+#: builtin/help.c:431
 msgid "Specifies intentionally untracked files to ignore"
 msgstr "Spécifie les fichiers non-suivis à ignorer intentionnellement"
 
-#: builtin/help.c:427
+#: builtin/help.c:432
 msgid "Defining submodule properties"
 msgstr "Définition des propriétés de sous-module"
 
-#: builtin/help.c:428
+#: builtin/help.c:433
 msgid "Specifying revisions and ranges for Git"
 msgstr "Spécification des révisions et portées pour Git"
 
-#: builtin/help.c:429
+#: builtin/help.c:434
 msgid "A tutorial introduction to Git (for version 1.5.1 or newer)"
 msgstr ""
 "Une introduction pratique à Git (pour les versions 1.5.1 et supérieures)"
 
-#: builtin/help.c:430
+#: builtin/help.c:435
 msgid "An overview of recommended workflows with Git"
 msgstr "Un aperçu des flux de travail recommandés avec Git"
 
-#: builtin/help.c:442
+#: builtin/help.c:447
 msgid "The common Git guides are:\n"
 msgstr "Les guides Git populaires sont : \n"
 
-#: builtin/help.c:463 builtin/help.c:480
+#: builtin/help.c:468 builtin/help.c:485
 #, c-format
 msgid "usage: %s%s"
 msgstr "usage : %s%s"
 
-#: builtin/help.c:496
+#: builtin/help.c:501
 #, c-format
 msgid "`git %s' is aliased to `%s'"
 msgstr "`git %s\" est un alias de `%s'"
 
 #: builtin/index-pack.c:150
 #, c-format
@@ -6473,108 +6476,108 @@
 
 #: builtin/init-db.c:110
 #, c-format
 msgid "ignoring template %s"
 msgstr "modèle %s ignoré"
 
-#: builtin/init-db.c:133
+#: builtin/init-db.c:136
 #, c-format
 msgid "insanely long template path %s"
 msgstr "chemin de modèle %s démentiellement long"
 
-#: builtin/init-db.c:141
+#: builtin/init-db.c:144
 #, c-format
 msgid "templates not found %s"
 msgstr "modèles non trouvés %s"
 
-#: builtin/init-db.c:154
+#: builtin/init-db.c:157
 #, c-format
 msgid "not copying templates of a wrong format version %d from '%s'"
 msgstr ""
 "pas de copie des modèles étant dans une mauvaise version du format %d de '%s'"
 
-#: builtin/init-db.c:192
+#: builtin/init-db.c:197
 #, c-format
 msgid "insane git directory %s"
 msgstr "répertoire git démentiel %s"
 
-#: builtin/init-db.c:323 builtin/init-db.c:326
+#: builtin/init-db.c:331 builtin/init-db.c:334
 #, c-format
 msgid "%s already exists"
 msgstr "%s existe déjà"
 
-#: builtin/init-db.c:355
+#: builtin/init-db.c:363
 #, c-format
 msgid "unable to handle file type %d"
 msgstr "impossible de traiter le fichier de type %d"
 
-#: builtin/init-db.c:358
+#: builtin/init-db.c:366
 #, c-format
 msgid "unable to move %s to %s"
 msgstr "impossible de déplacer %s vers %s"
 
 #. TRANSLATORS: The first '%s' is either "Reinitialized
 #. existing" or "Initialized empty", the second " shared" or
 #. "", and the last '%s%s' is the verbatim directory name.
-#: builtin/init-db.c:418
+#: builtin/init-db.c:426
 #, c-format
 msgid "%s%s Git repository in %s%s\n"
 msgstr "Dépôt Git%2$s %1$s dans %3$s%4$s\n"
 
-#: builtin/init-db.c:419
+#: builtin/init-db.c:427
 msgid "Reinitialized existing"
 msgstr "existant réinitialisé"
 
-#: builtin/init-db.c:419
+#: builtin/init-db.c:427
 msgid "Initialized empty"
 msgstr "vide initialisé"
 
-#: builtin/init-db.c:420
+#: builtin/init-db.c:428
 msgid " shared"
 msgstr " partagé"
 
-#: builtin/init-db.c:467
+#: builtin/init-db.c:475
 msgid ""
 "git init [-q | --quiet] [--bare] [--template=<template-directory>] [--"
 "shared[=<permissions>]] [directory]"
 msgstr ""
 "git init [-q | --quiet] [--bare] [--template=<répertoire-modèle>] [--"
 "shared[=<permissions>]] [répertoire]"
 
-#: builtin/init-db.c:490
+#: builtin/init-db.c:498
 msgid "permissions"
 msgstr "permissions"
 
-#: builtin/init-db.c:491
+#: builtin/init-db.c:499
 msgid "specify that the git repository is to be shared amongst several users"
 msgstr "spécifier que le dépôt git sera partagé entre plusieurs utilisateurs"
 
-#: builtin/init-db.c:493 builtin/prune-packed.c:57 builtin/repack.c:172
+#: builtin/init-db.c:501 builtin/prune-packed.c:57 builtin/repack.c:171
 msgid "be quiet"
 msgstr "être silencieux"
 
-#: builtin/init-db.c:525 builtin/init-db.c:530
+#: builtin/init-db.c:533 builtin/init-db.c:538
 #, c-format
 msgid "cannot mkdir %s"
 msgstr "impossible de créer le répertoire (mkdir) %s"
 
-#: builtin/init-db.c:534
+#: builtin/init-db.c:542
 #, c-format
 msgid "cannot chdir to %s"
 msgstr "impossible de se déplacer vers le répertoire (chdir) %s"
 
-#: builtin/init-db.c:555
+#: builtin/init-db.c:563
 #, c-format
 msgid ""
 "%s (or --work-tree=<directory>) not allowed without specifying %s (or --git-"
 "dir=<directory>)"
 msgstr ""
 "%s (ou --work-tree=<répertoire>) n'est pas autorisé sans spécifier %s (ou --"
 "git-dir=<répertoire>)"
 
-#: builtin/init-db.c:583
+#: builtin/init-db.c:591
 #, c-format
 msgid "Cannot access work tree '%s'"
 msgstr "Impossible d'accéder à l'arbre de travail '%s'"
 
 #: builtin/interpret-trailers.c:15
 msgid ""
@@ -6594,18 +6597,18 @@
 
 #: builtin/interpret-trailers.c:27
 msgid "trailer(s) to add"
 msgstr "ligne(s) de fin à ajouter"
 
 #: builtin/log.c:41
-msgid "git log [<options>] [<revision range>] [[--] <path>...]\n"
-msgstr "git log [<options>] [<page de révisions>] [[--] <chemin>...]\n"
+msgid "git log [<options>] [<revision range>] [[--] <path>...]"
+msgstr "git log [<options>] [<plage de révisions>] [[--] <chemin>...]"
 
 #: builtin/log.c:42
-msgid "   or: git show [options] <object>..."
-msgstr "   ou : git show [options] <objet>..."
+msgid "git show [options] <object>..."
+msgstr "git show [options] <objet>..."
 
 #: builtin/log.c:81
 #, c-format
 msgid "invalid --decorate option: %s"
 msgstr "option --decorate invalide : %s"
 
@@ -6980,224 +6983,224 @@
 msgstr "afficher les données de débogage"
 
 #: builtin/ls-tree.c:28
 msgid "git ls-tree [<options>] <tree-ish> [<path>...]"
 msgstr "git ls-tree [<options>] <arbre ou apparenté> [<chemin>...]"
 
-#: builtin/ls-tree.c:126
+#: builtin/ls-tree.c:127
 msgid "only show trees"
 msgstr "afficher seulement les arbres"
 
-#: builtin/ls-tree.c:128
+#: builtin/ls-tree.c:129
 msgid "recurse into subtrees"
 msgstr "parcourir les sous-arbres"
 
-#: builtin/ls-tree.c:130
+#: builtin/ls-tree.c:131
 msgid "show trees when recursing"
 msgstr "afficher les arbres en les parcourant"
 
-#: builtin/ls-tree.c:133
+#: builtin/ls-tree.c:134
 msgid "terminate entries with NUL byte"
 msgstr "terminer les éléments avec un octet NUL"
 
-#: builtin/ls-tree.c:134
+#: builtin/ls-tree.c:135
 msgid "include object size"
 msgstr "inclure la taille d'objet"
 
-#: builtin/ls-tree.c:136 builtin/ls-tree.c:138
+#: builtin/ls-tree.c:137 builtin/ls-tree.c:139
 msgid "list only filenames"
 msgstr "afficher seulement les noms de fichiers"
 
-#: builtin/ls-tree.c:141
+#: builtin/ls-tree.c:142
 msgid "use full path names"
 msgstr "utiliser les noms de chemins complets"
 
-#: builtin/ls-tree.c:143
+#: builtin/ls-tree.c:144
 msgid "list entire tree; not just current directory (implies --full-name)"
 msgstr ""
 "afficher l'arbre entier ; pas seulement le répertoire courant (implique --"
 "full-name)"
 
-#: builtin/merge.c:44
+#: builtin/merge.c:45
 msgid "git merge [options] [<commit>...]"
 msgstr "git merge [options] [<commit>...]"
 
-#: builtin/merge.c:45
+#: builtin/merge.c:46
 msgid "git merge [options] <msg> HEAD <commit>"
 msgstr "git merge [options] <message> HEAD <commit>"
 
-#: builtin/merge.c:46
+#: builtin/merge.c:47
 msgid "git merge --abort"
 msgstr "git merge --abort"
 
-#: builtin/merge.c:99
+#: builtin/merge.c:100
 msgid "switch `m' requires a value"
 msgstr "le commutateur `m' a besoin d'une valeur"
 
-#: builtin/merge.c:136
+#: builtin/merge.c:137
 #, c-format
 msgid "Could not find merge strategy '%s'.\n"
 msgstr "Impossible de trouver la stratégie de fusion '%s'.\n"
 
-#: builtin/merge.c:137
+#: builtin/merge.c:138
 #, c-format
 msgid "Available strategies are:"
 msgstr "Les stratégies disponibles sont :"
 
-#: builtin/merge.c:142
+#: builtin/merge.c:143
 #, c-format
 msgid "Available custom strategies are:"
 msgstr "Les stratégies personnalisées sont :"
 
-#: builtin/merge.c:192
+#: builtin/merge.c:193
 msgid "do not show a diffstat at the end of the merge"
 msgstr "ne pas afficher un diffstat à la fin de la fusion"
 
-#: builtin/merge.c:195
+#: builtin/merge.c:196
 msgid "show a diffstat at the end of the merge"
 msgstr "afficher un diffstat à la fin de la fusion"
 
-#: builtin/merge.c:196
+#: builtin/merge.c:197
 msgid "(synonym to --stat)"
 msgstr "(synonyme de --stat)"
 
-#: builtin/merge.c:198
+#: builtin/merge.c:199
 msgid "add (at most <n>) entries from shortlog to merge commit message"
 msgstr ""
 "ajouter (au plus <n>) éléments du journal court au message de validation de "
 "la fusion"
 
-#: builtin/merge.c:201
+#: builtin/merge.c:202
 msgid "create a single commit instead of doing a merge"
 msgstr "créer une validation unique au lieu de faire une fusion"
 
-#: builtin/merge.c:203
+#: builtin/merge.c:204
 msgid "perform a commit if the merge succeeds (default)"
 msgstr "effectuer une validation si la fusion réussit (défaut)"
 
-#: builtin/merge.c:205
+#: builtin/merge.c:206
 msgid "edit message before committing"
 msgstr "éditer le message avant la validation"
 
-#: builtin/merge.c:206
+#: builtin/merge.c:207
 msgid "allow fast-forward (default)"
 msgstr "autoriser l'avance rapide (défaut)"
 
-#: builtin/merge.c:208
+#: builtin/merge.c:209
 msgid "abort if fast-forward is not possible"
 msgstr "abandonner si l'avance rapide n'est pas possible"
 
-#: builtin/merge.c:212
+#: builtin/merge.c:213
 msgid "Verify that the named commit has a valid GPG signature"
 msgstr "Vérifier que la validation a une signature GPG valide"
 
-#: builtin/merge.c:213 builtin/notes.c:741 builtin/revert.c:89
+#: builtin/merge.c:214 builtin/notes.c:753 builtin/revert.c:89
 msgid "strategy"
 msgstr "stratégie"
 
-#: builtin/merge.c:214
+#: builtin/merge.c:215
 msgid "merge strategy to use"
 msgstr "stratégie de fusion à utiliser"
 
-#: builtin/merge.c:215
+#: builtin/merge.c:216
 msgid "option=value"
 msgstr "option=valeur"
 
-#: builtin/merge.c:216
+#: builtin/merge.c:217
 msgid "option for selected merge strategy"
 msgstr "option pour la stratégie de fusion sélectionnée"
 
-#: builtin/merge.c:218
+#: builtin/merge.c:219
 msgid "merge commit message (for a non-fast-forward merge)"
 msgstr ""
 "message de validation de la fusion (pour une fusion sans avance rapide)"
 
-#: builtin/merge.c:222
+#: builtin/merge.c:223
 msgid "abort the current in-progress merge"
 msgstr "abandonner la fusion en cours"
 
-#: builtin/merge.c:250
+#: builtin/merge.c:251
 msgid "could not run stash."
 msgstr "impossible de lancer le remisage."
 
-#: builtin/merge.c:255
+#: builtin/merge.c:256
 msgid "stash failed"
 msgstr "échec du remisage"
 
-#: builtin/merge.c:260
+#: builtin/merge.c:261
 #, c-format
 msgid "not a valid object: %s"
 msgstr "pas un objet valide : %s"
 
-#: builtin/merge.c:279 builtin/merge.c:296
+#: builtin/merge.c:280 builtin/merge.c:297
 msgid "read-tree failed"
 msgstr "read-tree a échoué"
 
-#: builtin/merge.c:326
+#: builtin/merge.c:327
 msgid " (nothing to squash)"
 msgstr " (rien à compresser)"
 
-#: builtin/merge.c:339
+#: builtin/merge.c:340
 #, c-format
 msgid "Squash commit -- not updating HEAD\n"
 msgstr "Validation compressée -- HEAD non mise à jour\n"
 
-#: builtin/merge.c:371
+#: builtin/merge.c:372
 msgid "Writing SQUASH_MSG"
 msgstr "Écriture de SQUASH_MSG"
 
-#: builtin/merge.c:373
+#: builtin/merge.c:374
 msgid "Finishing SQUASH_MSG"
 msgstr "Finition de SQUASH_MSG"
 
-#: builtin/merge.c:396
+#: builtin/merge.c:397
 #, c-format
 msgid "No merge message -- not updating HEAD\n"
 msgstr "Pas de message de fusion -- pas de mise à jour de HEAD\n"
 
-#: builtin/merge.c:446
+#: builtin/merge.c:447
 #, c-format
 msgid "'%s' does not point to a commit"
 msgstr "'%s' ne pointe pas sur un commit"
 
-#: builtin/merge.c:558
+#: builtin/merge.c:559
 #, c-format
 msgid "Bad branch.%s.mergeoptions string: %s"
 msgstr "Mauvaise chaîne branch.%s.mergeoptions : %s"
 
-#: builtin/merge.c:653
+#: builtin/merge.c:654
 msgid "git write-tree failed to write a tree"
 msgstr "git write-tree a échoué à écrire un arbre"
 
-#: builtin/merge.c:677
+#: builtin/merge.c:678
 msgid "Not handling anything other than two heads merge."
 msgstr "Impossible de gérer autre chose que la fusion de deux têtes."
 
-#: builtin/merge.c:691
+#: builtin/merge.c:692
 #, c-format
 msgid "Unknown option for merge-recursive: -X%s"
 msgstr "Options inconnue pour merge-recursive : -X%s"
 
-#: builtin/merge.c:704
+#: builtin/merge.c:705
 #, c-format
 msgid "unable to write %s"
 msgstr "impossible d'écrire %s"
 
-#: builtin/merge.c:793
+#: builtin/merge.c:794
 #, c-format
 msgid "Could not read from '%s'"
 msgstr "Impossible de lire depuis '%s'"
 
-#: builtin/merge.c:802
+#: builtin/merge.c:803
 #, c-format
 msgid "Not committing merge; use 'git commit' to complete the merge.\n"
 msgstr ""
 "Pas de validation de la fusion ; utilisez 'git commit' pour terminer la "
 "fusion.\n"
 
-#: builtin/merge.c:808
+#: builtin/merge.c:809
 #, c-format
 msgid ""
 "Please enter a commit message to explain why this merge is necessary,\n"
 "especially if it merges an updated upstream into a topic branch.\n"
 "\n"
 "Lines starting with '%c' will be ignored, and an empty message aborts\n"
@@ -7208,170 +7211,170 @@
 "nécessaire, surtout si cela fusionne une branche amont mise à jour dans une "
 "branche de sujet.\n"
 "\n"
 "Les lignes commençant par '%c' seront ignorées, et un message vide\n"
 "abandonne la validation.\n"
 
-#: builtin/merge.c:832
+#: builtin/merge.c:833
 msgid "Empty commit message."
 msgstr "Message de validation vide."
 
-#: builtin/merge.c:844
+#: builtin/merge.c:845
 #, c-format
 msgid "Wonderful.\n"
 msgstr "Merveilleux.\n"
 
-#: builtin/merge.c:907
+#: builtin/merge.c:900
 #, c-format
 msgid "Automatic merge failed; fix conflicts and then commit the result.\n"
 msgstr ""
 "La fusion automatique a échoué ; réglez les conflits et validez le "
 "résultat.\n"
 
-#: builtin/merge.c:923
+#: builtin/merge.c:916
 #, c-format
 msgid "'%s' is not a commit"
 msgstr "'%s' n'est pas une validation"
 
-#: builtin/merge.c:964
+#: builtin/merge.c:957
 msgid "No current branch."
 msgstr "Pas de branche courante."
 
-#: builtin/merge.c:966
+#: builtin/merge.c:959
 msgid "No remote for the current branch."
 msgstr "Pas de branche distante pour la branche courante."
 
-#: builtin/merge.c:968
+#: builtin/merge.c:961
 msgid "No default upstream defined for the current branch."
 msgstr "Pas de branche amont par défaut définie pour la branche courante."
 
-#: builtin/merge.c:973
+#: builtin/merge.c:966
 #, c-format
 msgid "No remote-tracking branch for %s from %s"
 msgstr "Pas de branche de suivi pour %s depuis %s"
 
-#: builtin/merge.c:1129
+#: builtin/merge.c:1122
 msgid "There is no merge to abort (MERGE_HEAD missing)."
 msgstr "Il n'y a pas de fusion à abandonner (MERGE_HEAD manquant)."
 
-#: builtin/merge.c:1145
+#: builtin/merge.c:1138
 msgid ""
 "You have not concluded your merge (MERGE_HEAD exists).\n"
 "Please, commit your changes before you merge."
 msgstr ""
 "Vous n'avez pas terminé votre fusion (MERGE_HEAD existe).\n"
 "Veuillez valider vos modifications avant de pouvoir fusionner."
 
-#: builtin/merge.c:1148 git-pull.sh:34
+#: builtin/merge.c:1141 git-pull.sh:34
 msgid "You have not concluded your merge (MERGE_HEAD exists)."
 msgstr "Vous n'avez pas terminé votre fusion (MERGE_HEAD existe)."
 
-#: builtin/merge.c:1152
+#: builtin/merge.c:1145
 msgid ""
 "You have not concluded your cherry-pick (CHERRY_PICK_HEAD exists).\n"
 "Please, commit your changes before you merge."
 msgstr ""
 "Vous n'avez pas terminé votre picorage (CHERRY_PICK_HEAD existe).\n"
 "Veuillez valider vos modifications avant de pouvoir fusionner."
 
-#: builtin/merge.c:1155
+#: builtin/merge.c:1148
 msgid "You have not concluded your cherry-pick (CHERRY_PICK_HEAD exists)."
 msgstr "Vous n'avez pas terminé votre picorage (CHERRY_PICK_HEAD existe)."
 
-#: builtin/merge.c:1164
+#: builtin/merge.c:1157
 msgid "You cannot combine --squash with --no-ff."
 msgstr "Vous ne pouvez pas combiner --squash avec --no-ff."
 
-#: builtin/merge.c:1173
+#: builtin/merge.c:1166
 msgid "No commit specified and merge.defaultToUpstream not set."
 msgstr ""
 "Pas de validation spécifiée et merge.defaultToUpstream n'est pas défini."
 
-#: builtin/merge.c:1205
+#: builtin/merge.c:1198
 msgid "Can merge only exactly one commit into empty head"
 msgstr ""
 "Possible de fusionner exactement une seule validation dans une tête vide"
 
-#: builtin/merge.c:1208
+#: builtin/merge.c:1201
 msgid "Squash commit into empty head not supported yet"
 msgstr "La validation compressée vers une tête vide n'est pas encore supportée"
 
-#: builtin/merge.c:1210
+#: builtin/merge.c:1203
 msgid "Non-fast-forward commit does not make sense into an empty head"
 msgstr "Une validation sans avance rapide n'a pas de sens dans une tête vide"
 
-#: builtin/merge.c:1215
+#: builtin/merge.c:1208
 #, c-format
 msgid "%s - not something we can merge"
 msgstr "%s - pas possible de fusionner ceci"
 
-#: builtin/merge.c:1266
+#: builtin/merge.c:1259
 #, c-format
 msgid "Commit %s has an untrusted GPG signature, allegedly by %s."
 msgstr "La validation %s a une signature GPG non fiable, prétendument par %s."
 
-#: builtin/merge.c:1269
+#: builtin/merge.c:1262
 #, c-format
 msgid "Commit %s has a bad GPG signature allegedly by %s."
 msgstr "La validation %s a une mauvaise signature GPG prétendument par %s."
 
-#: builtin/merge.c:1272
+#: builtin/merge.c:1265
 #, c-format
 msgid "Commit %s does not have a GPG signature."
 msgstr "La validation %s n'a pas de signature GPG."
 
-#: builtin/merge.c:1275
+#: builtin/merge.c:1268
 #, c-format
 msgid "Commit %s has a good GPG signature by %s\n"
 msgstr "La validation %s a une signature GPG correcte par %s\n"
 
-#: builtin/merge.c:1356
+#: builtin/merge.c:1349
 #, c-format
 msgid "Updating %s..%s\n"
 msgstr "Mise à jour %s..%s\n"
 
-#: builtin/merge.c:1395
+#: builtin/merge.c:1388
 #, c-format
 msgid "Trying really trivial in-index merge...\n"
 msgstr "Essai de fusion vraiment triviale dans l'index...\n"
 
-#: builtin/merge.c:1402
+#: builtin/merge.c:1395
 #, c-format
 msgid "Nope.\n"
 msgstr "Non.\n"
 
-#: builtin/merge.c:1434
+#: builtin/merge.c:1427
 msgid "Not possible to fast-forward, aborting."
 msgstr "Pas possible d'avancer rapidement, abandon."
 
-#: builtin/merge.c:1457 builtin/merge.c:1536
+#: builtin/merge.c:1450 builtin/merge.c:1529
 #, c-format
 msgid "Rewinding the tree to pristine...\n"
 msgstr "Retour de l'arbre à l'original...\n"
 
-#: builtin/merge.c:1461
+#: builtin/merge.c:1454
 #, c-format
 msgid "Trying merge strategy %s...\n"
 msgstr "Essai de la stratégie de fusion %s...\n"
 
-#: builtin/merge.c:1527
+#: builtin/merge.c:1520
 #, c-format
 msgid "No merge strategy handled the merge.\n"
 msgstr "Aucune stratégie de fusion n'a pris en charge la fusion.\n"
 
-#: builtin/merge.c:1529
+#: builtin/merge.c:1522
 #, c-format
 msgid "Merge with strategy %s failed.\n"
 msgstr "La fusion avec la stratégie %s a échoué.\n"
 
-#: builtin/merge.c:1538
+#: builtin/merge.c:1531
 #, c-format
 msgid "Using the %s to prepare resolving by hand.\n"
 msgstr "Utilisation de %s pour préparer la résolution à la main.\n"
 
-#: builtin/merge.c:1550
+#: builtin/merge.c:1543
 #, c-format
 msgid "Automatic merge went well; stopped before committing as requested\n"
 msgstr ""
 "La fusion automatique a réussi ; stoppée avant la validation comme demandé\n"
 
 #: builtin/merge-base.c:29
@@ -7556,13 +7559,13 @@
 
 #: builtin/mv.c:253
 #, c-format
 msgid "Renaming %s to %s\n"
 msgstr "Renommage de %s en %s\n"
 
-#: builtin/mv.c:256 builtin/remote.c:726 builtin/repack.c:358
+#: builtin/mv.c:256 builtin/remote.c:728 builtin/repack.c:355
 #, c-format
 msgid "renaming '%s' failed"
 msgstr "le renommage de '%s' a échoué"
 
 #: builtin/name-rev.c:255
 msgid "git name-rev [options] <commit>..."
@@ -7608,34 +7611,34 @@
 #: builtin/notes.c:24
 msgid "git notes [--ref <notes_ref>] [list [<object>]]"
 msgstr "git notes [--ref <références_notes>] [list [<object>]]"
 
 #: builtin/notes.c:25
 msgid ""
-"git notes [--ref <notes_ref>] add [-f] [-m <msg> | -F <file> | (-c | -C) "
-"<object>] [<object>]"
+"git notes [--ref <notes_ref>] add [-f] [--allow-empty] [-m <msg> | -F <file> "
+"| (-c | -C) <object>] [<object>]"
 msgstr ""
-"git notes [--ref <références_notes>] add [-f] [-m <message> | -F <fichier> | "
-"(-c | -C) <objet>] [<objet>]"
+"git notes [--ref <références_notes>] add [-f] [--allow-empty] [-m <message> "
+"| -F <fichier> | (-c | -C) <objet>] [<objet>]"
 
 #: builtin/notes.c:26
 msgid "git notes [--ref <notes_ref>] copy [-f] <from-object> <to-object>"
 msgstr ""
 "git notes [--ref <références_notes>] copy [-f] <depuis-objet> <vers-objet>"
 
 #: builtin/notes.c:27
 msgid ""
-"git notes [--ref <notes_ref>] append [-m <msg> | -F <file> | (-c | -C) "
-"<object>] [<object>]"
+"git notes [--ref <notes_ref>] append [--allow-empty] [-m <msg> | -F <file> | "
+"(-c | -C) <object>] [<object>]"
 msgstr ""
-"git notes [--ref <références_notes>] append [-m <message> | -F <fichier> | (-"
-"c | -C) <objet>] [<objet>]"
+"git notes [--ref <références_notes>] append [--allow-empty] [-m <message> | -"
+"F <fichier> | (-c | -C) <objet>] [<objet>]"
 
 #: builtin/notes.c:28
-msgid "git notes [--ref <notes_ref>] edit [<object>]"
-msgstr "git notes [--ref <références_notes>] edit [<objet>]"
+msgid "git notes [--ref <notes_ref>] edit [--allow-empty] [<object>]"
+msgstr "git notes [--ref <références_notes>] edit [--allow-empty] [<objet>]"
 
 #: builtin/notes.c:29
 msgid "git notes [--ref <notes_ref>] show [<object>]"
 msgstr "git notes [--ref <références_notes>] show [<objet>]"
 
 #: builtin/notes.c:30
@@ -7714,228 +7717,232 @@
 msgstr "git notes prune [<options>]"
 
 #: builtin/notes.c:88
 msgid "git notes get-ref"
 msgstr "git notes get-ref"
 
-#: builtin/notes.c:136
+#: builtin/notes.c:146
 #, c-format
 msgid "unable to start 'show' for object '%s'"
 msgstr "impossible de démarrer 'show' pour l'objet '%s'"
 
-#: builtin/notes.c:140
+#: builtin/notes.c:150
 msgid "could not read 'show' output"
 msgstr "impossible de lire la sortie de 'show'"
 
-#: builtin/notes.c:148
+#: builtin/notes.c:158
 #, c-format
 msgid "failed to finish 'show' for object '%s'"
 msgstr "impossible de finir 'show' pour l'objet '%s'"
 
-#: builtin/notes.c:166 builtin/tag.c:477
+#: builtin/notes.c:173 builtin/tag.c:477
 #, c-format
 msgid "could not create file '%s'"
 msgstr "impossible de créer le fichier '%s'"
 
-#: builtin/notes.c:185
+#: builtin/notes.c:192
 msgid "Please supply the note contents using either -m or -F option"
 msgstr "Veuillez fournir le contenu de la note en utilisant l'option -m ou -F"
 
-#: builtin/notes.c:206 builtin/notes.c:847
-#, c-format
-msgid "Removing note for object %s\n"
-msgstr "Suppression de la note pour l'objet %s\n"
-
-#: builtin/notes.c:211
+#: builtin/notes.c:201
 msgid "unable to write note object"
 msgstr "impossible d'écrire l'objet note"
 
-#: builtin/notes.c:213
+#: builtin/notes.c:203
 #, c-format
 msgid "The note contents have been left in %s"
 msgstr "Le contenu de la note a été laissé dans %s"
 
-#: builtin/notes.c:247 builtin/tag.c:693
+#: builtin/notes.c:231 builtin/tag.c:693
 #, c-format
 msgid "cannot read '%s'"
 msgstr "impossible de lire '%s'"
 
-#: builtin/notes.c:249 builtin/tag.c:696
+#: builtin/notes.c:233 builtin/tag.c:696
 #, c-format
 msgid "could not open or read '%s'"
 msgstr "impossible d'ouvrir ou lire '%s'"
 
-#: builtin/notes.c:268 builtin/notes.c:319 builtin/notes.c:321
-#: builtin/notes.c:381 builtin/notes.c:435 builtin/notes.c:518
-#: builtin/notes.c:523 builtin/notes.c:598 builtin/notes.c:640
-#: builtin/notes.c:842 builtin/tag.c:709
+#: builtin/notes.c:252 builtin/notes.c:303 builtin/notes.c:305
+#: builtin/notes.c:365 builtin/notes.c:420 builtin/notes.c:506
+#: builtin/notes.c:511 builtin/notes.c:589 builtin/notes.c:652
+#: builtin/notes.c:854 builtin/tag.c:709
 #, c-format
 msgid "Failed to resolve '%s' as a valid ref."
 msgstr "Impossible de résoudre '%s' comme une référence valide."
 
-#: builtin/notes.c:271
+#: builtin/notes.c:255
 #, c-format
 msgid "Failed to read object '%s'."
 msgstr "Impossible de lire l'objet '%s'."
 
-#: builtin/notes.c:275
+#: builtin/notes.c:259
 #, c-format
 msgid "Cannot read note data from non-blob object '%s'."
 msgstr "Impossible de lire les informations de note d'un objet non-blob '%s'."
 
-#: builtin/notes.c:315
+#: builtin/notes.c:299
 #, c-format
 msgid "Malformed input line: '%s'."
 msgstr "Ligne en entrée malformée : '%s'."
 
-#: builtin/notes.c:330
+#: builtin/notes.c:314
 #, c-format
 msgid "Failed to copy notes from '%s' to '%s'"
 msgstr "Impossible de copier les notes de '%s' vers '%s'"
 
-#: builtin/notes.c:374 builtin/notes.c:428 builtin/notes.c:501
-#: builtin/notes.c:513 builtin/notes.c:586 builtin/notes.c:633
-#: builtin/notes.c:907
+#: builtin/notes.c:358 builtin/notes.c:413 builtin/notes.c:489
+#: builtin/notes.c:501 builtin/notes.c:577 builtin/notes.c:645
+#: builtin/notes.c:919
 msgid "too many parameters"
 msgstr "trop de paramètres"
 
-#: builtin/notes.c:387 builtin/notes.c:646
+#: builtin/notes.c:371 builtin/notes.c:658
 #, c-format
 msgid "No note found for object %s."
 msgstr "Pas de note trouvée pour l'objet %s."
 
-#: builtin/notes.c:409 builtin/notes.c:566
+#: builtin/notes.c:392 builtin/notes.c:555
 msgid "note contents as a string"
 msgstr "contenu de la note sous forme de chaîne"
 
-#: builtin/notes.c:412 builtin/notes.c:569
+#: builtin/notes.c:395 builtin/notes.c:558
 msgid "note contents in a file"
 msgstr "contenu de la note dans un fichier"
 
-#: builtin/notes.c:414 builtin/notes.c:417 builtin/notes.c:571
-#: builtin/notes.c:574 builtin/tag.c:628
+#: builtin/notes.c:397 builtin/notes.c:400 builtin/notes.c:560
+#: builtin/notes.c:563 builtin/tag.c:628
 msgid "object"
 msgstr "objet"
 
-#: builtin/notes.c:415 builtin/notes.c:572
+#: builtin/notes.c:398 builtin/notes.c:561
 msgid "reuse and edit specified note object"
 msgstr "réutiliser et éditer l'objet de note spécifié"
 
-#: builtin/notes.c:418 builtin/notes.c:575
+#: builtin/notes.c:401 builtin/notes.c:564
 msgid "reuse specified note object"
 msgstr "réutiliser l'objet de note spécifié"
 
-#: builtin/notes.c:420 builtin/notes.c:488
+#: builtin/notes.c:404 builtin/notes.c:567
+msgid "allow storing empty note"
+msgstr "permettre de stocker une note vide"
+
+#: builtin/notes.c:405 builtin/notes.c:476
 msgid "replace existing notes"
 msgstr "remplacer les notes existantes"
 
-#: builtin/notes.c:454
+#: builtin/notes.c:430
 #, c-format
 msgid ""
 "Cannot add notes. Found existing notes for object %s. Use '-f' to overwrite "
 "existing notes"
 msgstr ""
 "Impossible d'ajouter des notes. Des notes ont été trouvées pour l'objet %s. "
 "Utilisez '-f' pour écraser les notes existantes"
 
-#: builtin/notes.c:459 builtin/notes.c:536
+#: builtin/notes.c:445 builtin/notes.c:524
 #, c-format
 msgid "Overwriting existing notes for object %s\n"
 msgstr "Écrasement des notes existantes pour l'objet %s\n"
 
-#: builtin/notes.c:489
+#: builtin/notes.c:456 builtin/notes.c:617 builtin/notes.c:859
+#, c-format
+msgid "Removing note for object %s\n"
+msgstr "Suppression de la note pour l'objet %s\n"
+
+#: builtin/notes.c:477
 msgid "read objects from stdin"
 msgstr "lire les objets depuis l'entrée standard"
 
-#: builtin/notes.c:491
+#: builtin/notes.c:479
 msgid "load rewriting config for <command> (implies --stdin)"
 msgstr ""
 "charger la configuration de réécriture pour <commande> (implique --stdin)"
 
-#: builtin/notes.c:509
+#: builtin/notes.c:497
 msgid "too few parameters"
 msgstr "pas assez de paramètres"
 
-#: builtin/notes.c:530
+#: builtin/notes.c:518
 #, c-format
 msgid ""
 "Cannot copy notes. Found existing notes for object %s. Use '-f' to overwrite "
 "existing notes"
 msgstr ""
 "Impossible de copier des notes. Des notes ont été trouvées pour l'objet %s. "
 "Utilisez '-f' pour écraser les notes existantes"
 
-#: builtin/notes.c:542
+#: builtin/notes.c:530
 #, c-format
 msgid "Missing notes on source object %s. Cannot copy."
 msgstr "Notes manquantes sur l'objet source %s. Impossible de copier."
 
-#: builtin/notes.c:591
+#: builtin/notes.c:582
 #, c-format
 msgid ""
 "The -m/-F/-c/-C options have been deprecated for the 'edit' subcommand.\n"
 "Please use 'git notes add -f -m/-F/-c/-C' instead.\n"
 msgstr ""
 "Les options -m/-F/-c/-C sont obsolètes pour la sous-commande 'edit'.\n"
 "Veuillez utiliser 'git notes add -f -m/-F/-c/-C' à la place.\n"
 
-#: builtin/notes.c:738
+#: builtin/notes.c:750
 msgid "General options"
 msgstr "Options générales"
 
-#: builtin/notes.c:740
+#: builtin/notes.c:752
 msgid "Merge options"
 msgstr "Options de fusion"
 
-#: builtin/notes.c:742
+#: builtin/notes.c:754
 msgid ""
 "resolve notes conflicts using the given strategy (manual/ours/theirs/union/"
 "cat_sort_uniq)"
 msgstr ""
 "résoudre les conflits de notes en utilisant la stratégie donnée (manual/ours/"
 "theirs/union/cat_sort_uniq)"
 
-#: builtin/notes.c:744
+#: builtin/notes.c:756
 msgid "Committing unmerged notes"
 msgstr "Validation des notes non fusionnées"
 
-#: builtin/notes.c:746
+#: builtin/notes.c:758
 msgid "finalize notes merge by committing unmerged notes"
 msgstr "finaliser la fusion de notes en validant les notes non fusionnées"
 
-#: builtin/notes.c:748
+#: builtin/notes.c:760
 msgid "Aborting notes merge resolution"
 msgstr "Abandon de la résolution de fusion des notes"
 
-#: builtin/notes.c:750
+#: builtin/notes.c:762
 msgid "abort notes merge"
 msgstr "abandonner la fusion de notes"
 
-#: builtin/notes.c:845
+#: builtin/notes.c:857
 #, c-format
 msgid "Object %s has no note\n"
 msgstr "L'objet %s n'a pas de note\n"
 
-#: builtin/notes.c:857
+#: builtin/notes.c:869
 msgid "attempt to remove non-existent note is not an error"
 msgstr ""
 "la tentative de suppression d'une note non existante n'est pas une erreur"
 
-#: builtin/notes.c:860
+#: builtin/notes.c:872
 msgid "read object names from the standard input"
 msgstr "lire les noms d'objet depuis l'entrée standard"
 
-#: builtin/notes.c:941
+#: builtin/notes.c:953
 msgid "notes-ref"
 msgstr "références-notes"
 
-#: builtin/notes.c:942
+#: builtin/notes.c:954
 msgid "use notes from <notes_ref>"
 msgstr "utiliser les notes depuis <références_notes>"
 
-#: builtin/notes.c:977 builtin/remote.c:1624
+#: builtin/notes.c:989 builtin/remote.c:1621
 #, c-format
 msgid "Unknown subcommand: %s"
 msgstr "Sous-commande inconnue : %s"
 
 #: builtin/pack-objects.c:28
 msgid "git pack-objects --stdout [options...] [< ref-list | < object-list]"
@@ -7983,153 +7990,157 @@
 
 #: builtin/pack-objects.c:2603
 #, c-format
 msgid "unable to parse value '%s' for option %s"
 msgstr "impossible d'analyser la valeur '%s' pour l'option %s"
 
-#: builtin/pack-objects.c:2622
+#: builtin/pack-objects.c:2623
 msgid "do not show progress meter"
 msgstr "ne pas afficher la barre de progression"
 
-#: builtin/pack-objects.c:2624
+#: builtin/pack-objects.c:2625
 msgid "show progress meter"
 msgstr "afficher la barre de progression"
 
-#: builtin/pack-objects.c:2626
+#: builtin/pack-objects.c:2627
 msgid "show progress meter during object writing phase"
 msgstr "afficher la barre de progression durant la phase d'écrite des objets"
 
-#: builtin/pack-objects.c:2629
+#: builtin/pack-objects.c:2630
 msgid "similar to --all-progress when progress meter is shown"
 msgstr "similaire à --all-progress quand la barre de progression est affichée"
 
-#: builtin/pack-objects.c:2630
+#: builtin/pack-objects.c:2631
 msgid "version[,offset]"
 msgstr "version[,offset]"
 
-#: builtin/pack-objects.c:2631
+#: builtin/pack-objects.c:2632
 msgid "write the pack index file in the specified idx format version"
 msgstr ""
 "écrire le fichier d'index du paquet dans le format d'index de version "
 "spécifié"
 
-#: builtin/pack-objects.c:2634
+#: builtin/pack-objects.c:2635
 msgid "maximum size of each output pack file"
 msgstr "taille maximum de chaque fichier paquet en sortie"
 
-#: builtin/pack-objects.c:2636
+#: builtin/pack-objects.c:2637
 msgid "ignore borrowed objects from alternate object store"
 msgstr "ignorer les objets empruntés à un autre magasin d'objets"
 
-#: builtin/pack-objects.c:2638
+#: builtin/pack-objects.c:2639
 msgid "ignore packed objects"
 msgstr "ignorer les objets empaquetés"
 
-#: builtin/pack-objects.c:2640
+#: builtin/pack-objects.c:2641
 msgid "limit pack window by objects"
 msgstr "limiter la fenêtre d'empaquetage par objets"
 
-#: builtin/pack-objects.c:2642
+#: builtin/pack-objects.c:2643
 msgid "limit pack window by memory in addition to object limit"
 msgstr ""
 "limiter la fenêtre d'empaquetage par mémoire en plus de la limite d'objets"
 
-#: builtin/pack-objects.c:2644
+#: builtin/pack-objects.c:2645
 msgid "maximum length of delta chain allowed in the resulting pack"
 msgstr ""
 "longueur maximum de la chaîne de delta autorisée dans le paquet résultant"
 
-#: builtin/pack-objects.c:2646
+#: builtin/pack-objects.c:2647
 msgid "reuse existing deltas"
 msgstr "réutiliser les deltas existants"
 
-#: builtin/pack-objects.c:2648
+#: builtin/pack-objects.c:2649
 msgid "reuse existing objects"
 msgstr "réutiliser les objets existants"
 
-#: builtin/pack-objects.c:2650
+#: builtin/pack-objects.c:2651
 msgid "use OFS_DELTA objects"
 msgstr "utiliser les objets OFS_DELTA"
 
-#: builtin/pack-objects.c:2652
+#: builtin/pack-objects.c:2653
 msgid "use threads when searching for best delta matches"
 msgstr ""
 "utiliser des fils lors de la recherche pour une meilleurs correspondance des "
 "deltas"
 
-#: builtin/pack-objects.c:2654
+#: builtin/pack-objects.c:2655
 msgid "do not create an empty pack output"
 msgstr "ne pas créer un paquet vide"
 
-#: builtin/pack-objects.c:2656
+#: builtin/pack-objects.c:2657
 msgid "read revision arguments from standard input"
 msgstr "lire les paramètres de révision depuis l'entrée standard"
 
-#: builtin/pack-objects.c:2658
+#: builtin/pack-objects.c:2659
 msgid "limit the objects to those that are not yet packed"
 msgstr "limiter les objets à ceux qui ne sont pas encore empaquetés"
 
-#: builtin/pack-objects.c:2661
+#: builtin/pack-objects.c:2662
 msgid "include objects reachable from any reference"
 msgstr "inclure les objets accessibles depuis toute référence"
 
-#: builtin/pack-objects.c:2664
+#: builtin/pack-objects.c:2665
 msgid "include objects referred by reflog entries"
 msgstr "inclure les objets référencés par les éléments de reflog"
 
-#: builtin/pack-objects.c:2667
+#: builtin/pack-objects.c:2668
 msgid "include objects referred to by the index"
 msgstr "inclure les objets référencés par l'index"
 
-#: builtin/pack-objects.c:2670
+#: builtin/pack-objects.c:2671
 msgid "output pack to stdout"
 msgstr "afficher l'empaquetage sur la sortie standard"
 
-#: builtin/pack-objects.c:2672
+#: builtin/pack-objects.c:2673
 msgid "include tag objects that refer to objects to be packed"
 msgstr "inclure les objets d'étiquettes qui réfèrent à des objets à empaqueter"
 
-#: builtin/pack-objects.c:2674
+#: builtin/pack-objects.c:2675
 msgid "keep unreachable objects"
 msgstr "garder les objets inaccessibles"
 
-#: builtin/pack-objects.c:2675 parse-options.h:140
+#: builtin/pack-objects.c:2676 parse-options.h:140
 msgid "time"
 msgstr "heure"
 
-#: builtin/pack-objects.c:2676
+#: builtin/pack-objects.c:2677
 msgid "unpack unreachable objects newer than <time>"
 msgstr "dépaqueter les objets inaccessibles plus récents que <heure>"
 
-#: builtin/pack-objects.c:2679
+#: builtin/pack-objects.c:2680
 msgid "create thin packs"
 msgstr "créer des paquets légers"
 
-#: builtin/pack-objects.c:2681
+#: builtin/pack-objects.c:2682
+msgid "create packs suitable for shallow fetches"
+msgstr "créer des paquets permettant des récupérations superficielles"
+
+#: builtin/pack-objects.c:2684
 msgid "ignore packs that have companion .keep file"
 msgstr "ignorer les paquets qui ont un fichier .keep"
 
-#: builtin/pack-objects.c:2683
+#: builtin/pack-objects.c:2686
 msgid "pack compression level"
 msgstr "niveau de compression du paquet"
 
-#: builtin/pack-objects.c:2685
+#: builtin/pack-objects.c:2688
 msgid "do not hide commits by grafts"
 msgstr "ne pas cacher les validations par greffes"
 
-#: builtin/pack-objects.c:2687
+#: builtin/pack-objects.c:2690
 msgid "use a bitmap index if available to speed up counting objects"
 msgstr ""
 "utiliser un index en bitmap si disponible pour accélerer le décompte des "
 "objets"
 
-#: builtin/pack-objects.c:2689
+#: builtin/pack-objects.c:2692
 msgid "write a bitmap index together with the pack index"
 msgstr "écrire un index en bitmap associé à l'index de paquet"
 
-#: builtin/pack-objects.c:2778
+#: builtin/pack-objects.c:2783
 msgid "Counting objects"
 msgstr "Décompte des objets"
 
 #: builtin/pack-refs.c:6
 msgid "git pack-refs [options]"
 msgstr "git pack-refs [options]"
@@ -8735,99 +8746,99 @@
 #: builtin/remote.c:177
 msgid "specifying branches to track makes sense only with fetch mirrors"
 msgstr ""
 "spécifier les branches à suivre n'a de sens qu'avec des miroirs de "
 "rapatriement"
 
-#: builtin/remote.c:185 builtin/remote.c:641
+#: builtin/remote.c:187 builtin/remote.c:643
 #, c-format
 msgid "remote %s already exists."
 msgstr "la distante %s existe déjà."
 
-#: builtin/remote.c:189 builtin/remote.c:645
+#: builtin/remote.c:191 builtin/remote.c:647
 #, c-format
 msgid "'%s' is not a valid remote name"
 msgstr "'%s' n'est pas un nom valide de distante"
 
-#: builtin/remote.c:233
+#: builtin/remote.c:235
 #, c-format
 msgid "Could not setup master '%s'"
 msgstr "Impossible de paramétrer la maîtresse '%s'"
 
-#: builtin/remote.c:333
+#: builtin/remote.c:335
 #, c-format
 msgid "Could not get fetch map for refspec %s"
 msgstr ""
 "Impossible d'obtenir une correspondance distante pour la spécification de "
 "référence %s"
 
-#: builtin/remote.c:434 builtin/remote.c:442
+#: builtin/remote.c:436 builtin/remote.c:444
 msgid "(matching)"
 msgstr "(correspond)"
 
-#: builtin/remote.c:446
+#: builtin/remote.c:448
 msgid "(delete)"
 msgstr "(supprimer)"
 
-#: builtin/remote.c:590 builtin/remote.c:596 builtin/remote.c:602
+#: builtin/remote.c:592 builtin/remote.c:598 builtin/remote.c:604
 #, c-format
 msgid "Could not append '%s' to '%s'"
 msgstr "Impossible d'ajouter '%s' à '%s'"
 
-#: builtin/remote.c:634 builtin/remote.c:798 builtin/remote.c:898
+#: builtin/remote.c:636 builtin/remote.c:795 builtin/remote.c:895
 #, c-format
 msgid "No such remote: %s"
 msgstr "Distante inconnue : %s"
 
-#: builtin/remote.c:651
+#: builtin/remote.c:653
 #, c-format
 msgid "Could not rename config section '%s' to '%s'"
 msgstr "Impossible de renommer la section de configuration '%s' en '%s'"
 
-#: builtin/remote.c:657 builtin/remote.c:850
+#: builtin/remote.c:659 builtin/remote.c:847
 #, c-format
 msgid "Could not remove config section '%s'"
 msgstr "Impossible de supprimer la section de configuration '%s'"
 
-#: builtin/remote.c:672
+#: builtin/remote.c:674
 #, c-format
 msgid ""
 "Not updating non-default fetch refspec\n"
 "\t%s\n"
 "\tPlease update the configuration manually if necessary."
 msgstr ""
 "Pas de mise à jour du refspec de rapatriement qui n'est pas par défaut\n"
 "\t%s\n"
 "\tVeuillez mettre à jour la configuration manuellement si nécessaire."
 
-#: builtin/remote.c:678
+#: builtin/remote.c:680
 #, c-format
 msgid "Could not append '%s'"
 msgstr "Impossible d'ajouter '%s'"
 
-#: builtin/remote.c:689
+#: builtin/remote.c:691
 #, c-format
 msgid "Could not set '%s'"
 msgstr "Impossible de définir '%s'"
 
-#: builtin/remote.c:711
+#: builtin/remote.c:713
 #, c-format
 msgid "deleting '%s' failed"
 msgstr "échec de suppression de '%s'"
 
-#: builtin/remote.c:745
+#: builtin/remote.c:747
 #, c-format
 msgid "creating '%s' failed"
 msgstr "échec de création de '%s'"
 
-#: builtin/remote.c:769
+#: builtin/remote.c:766
 #, c-format
 msgid "Could not remove branch %s"
 msgstr "Impossible de supprimer la branche %s"
 
-#: builtin/remote.c:836
+#: builtin/remote.c:833
 msgid ""
 "Note: A branch outside the refs/remotes/ hierarchy was not removed;\n"
 "to delete it, use:"
 msgid_plural ""
 "Note: Some branches outside the refs/remotes/ hierarchy were not removed;\n"
 "to delete them, use:"
@@ -8836,345 +8847,345 @@
 "pour la supprimer, utilisez :"
 msgstr[1] ""
 "Note : Plusieurs branches en dehors de refs/remotes/ n'ont pas été "
 "supprimées ;\n"
 "pour les supprimer, utilisez :"
 
-#: builtin/remote.c:951
+#: builtin/remote.c:948
 #, c-format
 msgid " new (next fetch will store in remotes/%s)"
 msgstr " nouveau (le prochain rapatriement (fetch) stockera dans remotes/%s)"
 
-#: builtin/remote.c:954
+#: builtin/remote.c:951
 msgid " tracked"
 msgstr " suivi"
 
-#: builtin/remote.c:956
+#: builtin/remote.c:953
 msgid " stale (use 'git remote prune' to remove)"
 msgstr " dépassé (utilisez 'git remote prune' pour supprimer)"
 
-#: builtin/remote.c:958
+#: builtin/remote.c:955
 msgid " ???"
 msgstr " ???"
 
-#: builtin/remote.c:999
+#: builtin/remote.c:996
 #, c-format
 msgid "invalid branch.%s.merge; cannot rebase onto > 1 branch"
 msgstr "branch.%s.merge invalide ; ne peut pas rebaser sur plus d'une branche"
 
-#: builtin/remote.c:1006
+#: builtin/remote.c:1003
 #, c-format
 msgid "rebases onto remote %s"
 msgstr "rebase sur la distante %s"
 
-#: builtin/remote.c:1009
+#: builtin/remote.c:1006
 #, c-format
 msgid " merges with remote %s"
 msgstr " fusionne avec la distante %s"
 
-#: builtin/remote.c:1010
+#: builtin/remote.c:1007
 msgid "    and with remote"
 msgstr "    et avec la distante"
 
-#: builtin/remote.c:1012
+#: builtin/remote.c:1009
 #, c-format
 msgid "merges with remote %s"
 msgstr "fusionne avec la distante %s"
 
-#: builtin/remote.c:1013
+#: builtin/remote.c:1010
 msgid "   and with remote"
 msgstr "   et avec la distante"
 
-#: builtin/remote.c:1059
+#: builtin/remote.c:1056
 msgid "create"
 msgstr "créer"
 
-#: builtin/remote.c:1062
+#: builtin/remote.c:1059
 msgid "delete"
 msgstr "supprimer"
 
-#: builtin/remote.c:1066
+#: builtin/remote.c:1063
 msgid "up to date"
 msgstr "à jour"
 
-#: builtin/remote.c:1069
+#: builtin/remote.c:1066
 msgid "fast-forwardable"
 msgstr "peut être mis à jour en avance rapide"
 
-#: builtin/remote.c:1072
+#: builtin/remote.c:1069
 msgid "local out of date"
 msgstr "le local n'est pas à jour"
 
-#: builtin/remote.c:1079
+#: builtin/remote.c:1076
 #, c-format
 msgid "    %-*s forces to %-*s (%s)"
 msgstr "    %-*s force vers %-*s (%s)"
 
-#: builtin/remote.c:1082
+#: builtin/remote.c:1079
 #, c-format
 msgid "    %-*s pushes to %-*s (%s)"
 msgstr "    %-*s pousse vers %-*s (%s)"
 
-#: builtin/remote.c:1086
+#: builtin/remote.c:1083
 #, c-format
 msgid "    %-*s forces to %s"
 msgstr "    %-*s force vers %s"
 
-#: builtin/remote.c:1089
+#: builtin/remote.c:1086
 #, c-format
 msgid "    %-*s pushes to %s"
 msgstr "    %-*s pousse vers %s"
 
-#: builtin/remote.c:1157
+#: builtin/remote.c:1154
 msgid "do not query remotes"
 msgstr "ne pas interroger les distantes"
 
-#: builtin/remote.c:1184
+#: builtin/remote.c:1181
 #, c-format
 msgid "* remote %s"
 msgstr "* distante %s"
 
-#: builtin/remote.c:1185
+#: builtin/remote.c:1182
 #, c-format
 msgid "  Fetch URL: %s"
 msgstr "  URL de rapatriement : %s"
 
-#: builtin/remote.c:1186 builtin/remote.c:1333
+#: builtin/remote.c:1183 builtin/remote.c:1334
 msgid "(no URL)"
 msgstr "(pas d'URL)"
 
-#: builtin/remote.c:1195 builtin/remote.c:1197
+#: builtin/remote.c:1192 builtin/remote.c:1194
 #, c-format
 msgid "  Push  URL: %s"
 msgstr "  URL push : %s"
 
-#: builtin/remote.c:1199 builtin/remote.c:1201 builtin/remote.c:1203
+#: builtin/remote.c:1196 builtin/remote.c:1198 builtin/remote.c:1200
 #, c-format
 msgid "  HEAD branch: %s"
 msgstr "  Branche HEAD : %s"
 
-#: builtin/remote.c:1205
+#: builtin/remote.c:1202
 #, c-format
 msgid ""
 "  HEAD branch (remote HEAD is ambiguous, may be one of the following):\n"
 msgstr ""
 "  Branche HEAD (la HEAD distante est ambiguë, peut être l'une des "
 "suivantes) :\n"
 
-#: builtin/remote.c:1217
+#: builtin/remote.c:1214
 #, c-format
 msgid "  Remote branch:%s"
 msgid_plural "  Remote branches:%s"
 msgstr[0] "  Branche distante :%s"
 msgstr[1] "  Branches distantes :%s"
 
-#: builtin/remote.c:1220 builtin/remote.c:1247
+#: builtin/remote.c:1217 builtin/remote.c:1244
 msgid " (status not queried)"
 msgstr " (statut non demandé)"
 
-#: builtin/remote.c:1229
+#: builtin/remote.c:1226
 msgid "  Local branch configured for 'git pull':"
 msgid_plural "  Local branches configured for 'git pull':"
 msgstr[0] "  Branche locale configurée pour 'git pull' :"
 msgstr[1] "  Branches locales configurées pour 'git pull' :"
 
-#: builtin/remote.c:1237
+#: builtin/remote.c:1234
 msgid "  Local refs will be mirrored by 'git push'"
 msgstr "  Les références locales seront reflétées par 'git push'"
 
-#: builtin/remote.c:1244
+#: builtin/remote.c:1241
 #, c-format
 msgid "  Local ref configured for 'git push'%s:"
 msgid_plural "  Local refs configured for 'git push'%s:"
 msgstr[0] "  Référence locale configurée pour 'git push'%s :"
 msgstr[1] "  Références locales configurées pour 'git push'%s :"
 
-#: builtin/remote.c:1265
+#: builtin/remote.c:1262
 msgid "set refs/remotes/<name>/HEAD according to remote"
 msgstr "définir refs/remotes/<nom>/HEAD selon la distante"
 
-#: builtin/remote.c:1267
+#: builtin/remote.c:1264
 msgid "delete refs/remotes/<name>/HEAD"
 msgstr "supprimer refs/remotes/<nom>/HEAD"
 
-#: builtin/remote.c:1282
+#: builtin/remote.c:1279
 msgid "Cannot determine remote HEAD"
 msgstr "Impossible de déterminer la HEAD distante"
 
-#: builtin/remote.c:1284
+#: builtin/remote.c:1281
 msgid "Multiple remote HEAD branches. Please choose one explicitly with:"
 msgstr ""
 "Il y a de multiples branches HEAD distantes. Veuillez en choisir une "
 "explicitement avec :"
 
-#: builtin/remote.c:1294
+#: builtin/remote.c:1291
 #, c-format
 msgid "Could not delete %s"
 msgstr "Impossible de supprimer %s"
 
-#: builtin/remote.c:1302
+#: builtin/remote.c:1299
 #, c-format
 msgid "Not a valid ref: %s"
 msgstr "Référence non valide : %s"
 
-#: builtin/remote.c:1304
+#: builtin/remote.c:1301
 #, c-format
 msgid "Could not setup %s"
 msgstr "Impossible de paramétrer %s"
 
-#: builtin/remote.c:1322
+#: builtin/remote.c:1319
 #, c-format
 msgid " %s will become dangling!"
 msgstr " %s se retrouvera en suspens !"
 
-#: builtin/remote.c:1323
+#: builtin/remote.c:1320
 #, c-format
 msgid " %s has become dangling!"
 msgstr " %s se retrouve en suspens !"
 
-#: builtin/remote.c:1329
+#: builtin/remote.c:1330
 #, c-format
 msgid "Pruning %s"
 msgstr "Élimination de %s"
 
-#: builtin/remote.c:1330
+#: builtin/remote.c:1331
 #, c-format
 msgid "URL: %s"
 msgstr "URL : %s"
 
-#: builtin/remote.c:1357
+#: builtin/remote.c:1354
 #, c-format
 msgid " * [would prune] %s"
 msgstr " * [serait éliminé] %s"
 
-#: builtin/remote.c:1360
+#: builtin/remote.c:1357
 #, c-format
 msgid " * [pruned] %s"
 msgstr " * [éliminé] %s"
 
-#: builtin/remote.c:1405
+#: builtin/remote.c:1402
 msgid "prune remotes after fetching"
 msgstr "éliminer les distants après le rapatriement"
 
-#: builtin/remote.c:1471 builtin/remote.c:1545
+#: builtin/remote.c:1468 builtin/remote.c:1542
 #, c-format
 msgid "No such remote '%s'"
 msgstr "Pas de serveur remote '%s'"
 
-#: builtin/remote.c:1491
+#: builtin/remote.c:1488
 msgid "add branch"
 msgstr "ajouter une branche"
 
-#: builtin/remote.c:1498
+#: builtin/remote.c:1495
 msgid "no remote specified"
 msgstr "pas de serveur distant spécifié"
 
-#: builtin/remote.c:1520
+#: builtin/remote.c:1517
 msgid "manipulate push URLs"
 msgstr "manipuler les URLs push"
 
-#: builtin/remote.c:1522
+#: builtin/remote.c:1519
 msgid "add URL"
 msgstr "ajouter une URL"
 
-#: builtin/remote.c:1524
+#: builtin/remote.c:1521
 msgid "delete URLs"
 msgstr "supprimer des URLs"
 
-#: builtin/remote.c:1531
+#: builtin/remote.c:1528
 msgid "--add --delete doesn't make sense"
 msgstr "--add --delete n'a aucun sens"
 
-#: builtin/remote.c:1571
+#: builtin/remote.c:1568
 #, c-format
 msgid "Invalid old URL pattern: %s"
 msgstr "Motif d'URL ancien invalide : %s"
 
-#: builtin/remote.c:1579
+#: builtin/remote.c:1576
 #, c-format
 msgid "No such URL found: %s"
 msgstr "Pas d'URL trouvée : %s"
 
-#: builtin/remote.c:1581
+#: builtin/remote.c:1578
 msgid "Will not delete all non-push URLs"
 msgstr "Pas de suppression de toutes les URLs non-push"
 
-#: builtin/remote.c:1595
+#: builtin/remote.c:1592
 msgid "be verbose; must be placed before a subcommand"
 msgstr "être verbeux : doit être placé avant une sous-commande"
 
 #: builtin/repack.c:17
 msgid "git repack [options]"
 msgstr "git repack [options]"
 
-#: builtin/repack.c:160
+#: builtin/repack.c:159
 msgid "pack everything in a single pack"
 msgstr "empaqueter tout dans un seul paquet"
 
-#: builtin/repack.c:162
+#: builtin/repack.c:161
 msgid "same as -a, and turn unreachable objects loose"
 msgstr "identique à -a et transformer les objets inaccessibles en suspens"
 
-#: builtin/repack.c:165
+#: builtin/repack.c:164
 msgid "remove redundant packs, and run git-prune-packed"
 msgstr "supprimer les paquets redondants et lancer git-prune-packed"
 
-#: builtin/repack.c:167
+#: builtin/repack.c:166
 msgid "pass --no-reuse-delta to git-pack-objects"
 msgstr "passer --no-reuse-delta à git-pack-objects"
 
-#: builtin/repack.c:169
+#: builtin/repack.c:168
 msgid "pass --no-reuse-object to git-pack-objects"
 msgstr "passer --no-reuse-object à git-pack-objects"
 
-#: builtin/repack.c:171
+#: builtin/repack.c:170
 msgid "do not run git-update-server-info"
 msgstr "ne pas lancer git update-server-info"
 
-#: builtin/repack.c:174
+#: builtin/repack.c:173
 msgid "pass --local to git-pack-objects"
 msgstr "passer --local à git-pack-objects"
 
-#: builtin/repack.c:176
+#: builtin/repack.c:175
 msgid "write bitmap index"
 msgstr "écrire un index en bitmap"
 
-#: builtin/repack.c:177
+#: builtin/repack.c:176
 msgid "approxidate"
 msgstr "date approximative"
 
-#: builtin/repack.c:178
+#: builtin/repack.c:177
 msgid "with -A, do not loosen objects older than this"
 msgstr "avec -A, ne pas suspendre les objets plus vieux que celui-ci"
 
-#: builtin/repack.c:180
+#: builtin/repack.c:179
 msgid "size of the window used for delta compression"
 msgstr "taille de la fenêtre utilisée pour la compression des deltas"
 
-#: builtin/repack.c:181 builtin/repack.c:185
+#: builtin/repack.c:180 builtin/repack.c:184
 msgid "bytes"
 msgstr "octets"
 
-#: builtin/repack.c:182
+#: builtin/repack.c:181
 msgid "same as the above, but limit memory size instead of entries count"
 msgstr ""
 "idem ci-dessus, mais limiter la taille mémoire au lieu du nombre d'éléments"
 
-#: builtin/repack.c:184
+#: builtin/repack.c:183
 msgid "limits the maximum delta depth"
 msgstr "limite la profondeur maximale des deltas"
 
-#: builtin/repack.c:186
+#: builtin/repack.c:185
 msgid "maximum size of each packfile"
 msgstr "taille maximum de chaque fichier paquet"
 
-#: builtin/repack.c:188
+#: builtin/repack.c:187
 msgid "repack objects in packs marked with .keep"
 msgstr "réempaqueter les objets dans des paquets marqués avec .keep"
 
-#: builtin/repack.c:374
+#: builtin/repack.c:371
 #, c-format
 msgid "removing '%s' failed"
 msgstr "la suppression de '%s' a échoué"
 
 #: builtin/replace.c:19
 msgid "git replace [-f] <object> <replacement>"
@@ -9660,88 +9671,88 @@
 #: builtin/shortlog.c:236
 msgid "Linewrap output"
 msgstr "Couper les lignes"
 
 #: builtin/show-branch.c:9
 msgid ""
-"git show-branch [-a|--all] [-r|--remotes] [--topo-order | --date-order] [--"
-"current] [--color[=<when>] | --no-color] [--sparse] [--more=<n> | --list | --"
-"independent | --merge-base] [--no-name | --sha1-name] [--topics] [(<rev> | "
-"<glob>)...]"
-msgstr ""
-"git show-branch [-a|--all] [-r|--remotes] [--topo-order | --date-order] [--"
-"current] [--color[=<quand>] | --no-color] [--sparse] [--more=<n> | --list | "
-"--independent | --merge-base] [--no-name | --sha1-name] [--topics] "
-"[(<révision> | <glob>)...]"
+"git show-branch [-a|--all] [-r|--remotes] [--topo-order | --date-order]\n"
+"\t\t[--current] [--color[=<when>] | --no-color] [--sparse]\n"
+"\t\t[--more=<n> | --list | --independent | --merge-base]\n"
+"\t\t[--no-name | --sha1-name] [--topics] [(<rev> | <glob>)...]"
+msgstr ""
+"git show-branch [-a|--all] [-r|--remotes] [--topo-order | --date-order]\n"
+"\t\t[--current] [--color[=<quand>] | --no-color] [--sparse]\n"
+"\t\t[--more=<n> | --list | --independent | --merge-base]\n"
+"\t\t[--no-name | --sha1-name] [--topics] [(<rév> | <glob>)...]"
 
-#: builtin/show-branch.c:10
+#: builtin/show-branch.c:13
 msgid "git show-branch (-g|--reflog)[=<n>[,<base>]] [--list] [<ref>]"
 msgstr "git show-branch (-g|--reflog)[=<n>[,<base>]] [--list] [<référence>]"
 
-#: builtin/show-branch.c:649
+#: builtin/show-branch.c:652
 msgid "show remote-tracking and local branches"
 msgstr "afficher les branches de suivi distantes et les branches locales"
 
-#: builtin/show-branch.c:651
+#: builtin/show-branch.c:654
 msgid "show remote-tracking branches"
 msgstr "afficher les branches de suivi distantes"
 
-#: builtin/show-branch.c:653
+#: builtin/show-branch.c:656
 msgid "color '*!+-' corresponding to the branch"
 msgstr "couleur '*!+-' correspondant à la branche"
 
-#: builtin/show-branch.c:655
+#: builtin/show-branch.c:658
 msgid "show <n> more commits after the common ancestor"
 msgstr "afficher <n> validations de plus après l'ancêtre commun"
 
-#: builtin/show-branch.c:657
+#: builtin/show-branch.c:660
 msgid "synonym to more=-1"
 msgstr "synonyme de more=-1"
 
-#: builtin/show-branch.c:658
+#: builtin/show-branch.c:661
 msgid "suppress naming strings"
 msgstr "supprimer les chaînes de nommage"
 
-#: builtin/show-branch.c:660
+#: builtin/show-branch.c:663
 msgid "include the current branch"
 msgstr "inclure la branche courante"
 
-#: builtin/show-branch.c:662
+#: builtin/show-branch.c:665
 msgid "name commits with their object names"
 msgstr "nommer les validations avec leurs noms d'objet"
 
-#: builtin/show-branch.c:664
+#: builtin/show-branch.c:667
 msgid "show possible merge bases"
 msgstr "afficher les bases possibles de fusion"
 
-#: builtin/show-branch.c:666
+#: builtin/show-branch.c:669
 msgid "show refs unreachable from any other ref"
 msgstr "afficher les références inaccessibles depuis toute autre référence"
 
-#: builtin/show-branch.c:668
+#: builtin/show-branch.c:671
 msgid "show commits in topological order"
 msgstr "afficher les validations dans l'ordre topologique"
 
-#: builtin/show-branch.c:671
+#: builtin/show-branch.c:674
 msgid "show only commits not on the first branch"
 msgstr ""
 "afficher seulement les validations qui ne sont pas sur la première branche"
 
-#: builtin/show-branch.c:673
+#: builtin/show-branch.c:676
 msgid "show merges reachable from only one tip"
 msgstr "afficher les fusions accessibles depuis une seule pointe"
 
-#: builtin/show-branch.c:675
+#: builtin/show-branch.c:678
 msgid "topologically sort, maintaining date order where possible"
 msgstr "tri topologique, maintenant l'ordre par date si possible"
 
-#: builtin/show-branch.c:678
+#: builtin/show-branch.c:681
 msgid "<n>[,<base>]"
 msgstr "<n>[,<base>]"
 
-#: builtin/show-branch.c:679
+#: builtin/show-branch.c:682
 msgid "show <n> most recent ref-log entries starting at base"
 msgstr ""
 "afficher les <n> plus récents éléments de ref-log en commençant à la base"
 
 #: builtin/show-ref.c:10
 msgid ""
@@ -9810,17 +9821,17 @@
 msgstr "supprimer la référence symbolique"
 
 #: builtin/symbolic-ref.c:42
 msgid "shorten ref output"
 msgstr "raccourcir l'affichage de la référence"
 
-#: builtin/symbolic-ref.c:43 builtin/update-ref.c:362
+#: builtin/symbolic-ref.c:43 builtin/update-ref.c:358
 msgid "reason"
 msgstr "raison"
 
-#: builtin/symbolic-ref.c:43 builtin/update-ref.c:362
+#: builtin/symbolic-ref.c:43 builtin/update-ref.c:358
 msgid "reason of the update"
 msgstr "raison de la mise à jour"
 
 #: builtin/tag.c:22
 msgid ""
 "git tag [-a|-s|-u <key-id>] [-f] [-m <msg>|-F <file>] <tagname> [<head>]"
@@ -10179,25 +10190,25 @@
 "[<anciennevaleur>]"
 
 #: builtin/update-ref.c:11
 msgid "git update-ref [options] --stdin [-z]"
 msgstr "git update-ref [options] --stdin [-z]"
 
-#: builtin/update-ref.c:363
+#: builtin/update-ref.c:359
 msgid "delete the reference"
 msgstr "supprimer la référence"
 
-#: builtin/update-ref.c:365
+#: builtin/update-ref.c:361
 msgid "update <refname> not the one it points to"
 msgstr "mettre à jour <nomréférence> et non la référence pointée par lui"
 
-#: builtin/update-ref.c:366
+#: builtin/update-ref.c:362
 msgid "stdin has NUL-terminated arguments"
 msgstr "l'entrée standard a des arguments qui se terminent par NUL"
 
-#: builtin/update-ref.c:367
+#: builtin/update-ref.c:363
 msgid "read updates from stdin"
 msgstr "lire les mises à jour depuis l'entrée standard"
 
 #: builtin/update-server-info.c:6
 msgid "git update-server-info [--force]"
 msgstr "git update-server-info [--force]"
@@ -10251,13 +10262,13 @@
 msgstr "seulement utile pour le débogage"
 
 #: credential-cache--daemon.c:267
 msgid "print debugging messages to stderr"
 msgstr "afficher les messages de debug sur stderr"
 
-#: git.c:17
+#: git.c:14
 msgid ""
 "'git help -a' and 'git help -g' list available subcommands and some\n"
 "concept guides. See 'git help <command>' or 'git help <concept>'\n"
 "to read about a specific subcommand or concept."
 msgstr ""
 "'git help -a' et 'git help -g' listent les sous-commandes disponibles et\n"
@@ -10374,193 +10385,193 @@
 
 #: rerere.h:27
 msgid "update the index with reused conflict resolution if possible"
 msgstr ""
 "met à jour l'index avec les résolutions de conflit réutilisées si possible"
 
-#: git-am.sh:52
+#: git-am.sh:53
 msgid "You need to set your committer info first"
 msgstr "Vous devez d'abord définir vos informations de validateur"
 
-#: git-am.sh:97
+#: git-am.sh:98
 msgid ""
 "You seem to have moved HEAD since the last 'am' failure.\n"
 "Not rewinding to ORIG_HEAD"
 msgstr ""
 "Vous semblez avoir déplacé la HEAD depuis le dernier échec de 'am'.\n"
 "Pas de retour à ORIG_HEAD"
 
-#: git-am.sh:107
+#: git-am.sh:108
 #, sh-format
 msgid ""
 "When you have resolved this problem, run \"$cmdline --continue\".\n"
 "If you prefer to skip this patch, run \"$cmdline --skip\" instead.\n"
 "To restore the original branch and stop patching, run \"$cmdline --abort\"."
 msgstr ""
 "Lorsque vous aurez résolu ce problème, lancez \"$cmdline --continue\".\n"
 "Si vous préférez sauter ce patch, lancez \"$cmdline --skip\" à la place.\n"
 "Pour restaurer la branche d'origine et stopper le patchage, lancez "
 "\"$cmdline --abort\"."
 
-#: git-am.sh:123
+#: git-am.sh:124
 msgid "Cannot fall back to three-way merge."
 msgstr "Impossible de retourner à une fusion à 3 points."
 
-#: git-am.sh:139
+#: git-am.sh:140
 msgid "Repository lacks necessary blobs to fall back on 3-way merge."
 msgstr ""
 "Le dépôt n'a pas les blobs nécessaires pour un retour à une fusion à 3 "
 "points."
 
-#: git-am.sh:141
+#: git-am.sh:142
 msgid "Using index info to reconstruct a base tree..."
 msgstr ""
 "Utilisation de l'information de l'index pour reconstruire un arbre de base..."
 
-#: git-am.sh:156
+#: git-am.sh:157
 msgid ""
 "Did you hand edit your patch?\n"
 "It does not apply to blobs recorded in its index."
 msgstr ""
 "Avez-vous édité le patch à la main ?\n"
 "Il ne s'applique pas aux blobs enregistrés dans son index."
 
-#: git-am.sh:165
+#: git-am.sh:166
 msgid "Falling back to patching base and 3-way merge..."
 msgstr "Retour à un patch de la base et fusion à 3 points..."
 
-#: git-am.sh:181
+#: git-am.sh:182
 msgid "Failed to merge in the changes."
 msgstr "Échec d'intégration des modifications."
 
-#: git-am.sh:276
+#: git-am.sh:277
 msgid "Only one StGIT patch series can be applied at once"
 msgstr "Seulement une série de patchs StGIT peut être appliquée à la fois"
 
-#: git-am.sh:363
+#: git-am.sh:364
 #, sh-format
 msgid "Patch format $patch_format is not supported."
 msgstr "Le format de patch $patch_format n'est pas supporté."
 
-#: git-am.sh:365
+#: git-am.sh:366
 msgid "Patch format detection failed."
 msgstr "Échec de détection du format du patch."
 
-#: git-am.sh:392
+#: git-am.sh:398
 msgid ""
 "The -b/--binary option has been a no-op for long time, and\n"
 "it will be removed. Please do not use it anymore."
 msgstr ""
 "L'option -b/--binary ne fait plus rien depuis longtemps,\n"
 "et elle sera supprimée. Veuillez ne plus l'utiliser."
 
-#: git-am.sh:486
+#: git-am.sh:496
 #, sh-format
 msgid "previous rebase directory $dotest still exists but mbox given."
 msgstr ""
 "le répertoire précédent de rebasage $dotest existe toujours mais mbox donnée."
 
-#: git-am.sh:491
+#: git-am.sh:501
 msgid "Please make up your mind. --skip or --abort?"
 msgstr "Décidez-vous. --skip ou --abort ?"
 
-#: git-am.sh:527
+#: git-am.sh:537
 #, sh-format
 msgid ""
 "Stray $dotest directory found.\n"
 "Use \"git am --abort\" to remove it."
 msgstr ""
 "Répertoire abandonné $dotest trouvé.\n"
 "Utilisez \"git am --abort\" pour le supprimer."
 
-#: git-am.sh:535
+#: git-am.sh:545
 msgid "Resolve operation not in progress, we are not resuming."
 msgstr ""
 "Pas de résolution de l'opération en cours, nous ne sommes pas dans une "
 "reprise."
 
-#: git-am.sh:601
+#: git-am.sh:612
 #, sh-format
 msgid "Dirty index: cannot apply patches (dirty: $files)"
 msgstr "Index sale : impossible d'appliquer des patchs (sales : $files)"
 
-#: git-am.sh:705
+#: git-am.sh:722
 #, sh-format
 msgid ""
 "Patch is empty.  Was it split wrong?\n"
 "If you would prefer to skip this patch, instead run \"$cmdline --skip\".\n"
 "To restore the original branch and stop patching run \"$cmdline --abort\"."
 msgstr ""
 "Le patch est vide.  Était-il mal découpé ?\n"
 "Si vous préférez sauter ce patch, lancez plutôt \"$cmdline --skip\".\n"
 "Pour restaurer la branche d'origine et stopper le patchage, lancez "
 "\"$cmdline --abort\"."
 
-#: git-am.sh:732
+#: git-am.sh:749
 msgid "Patch does not have a valid e-mail address."
 msgstr "Le patch n'a pas d'adresse e-mail valide."
 
-#: git-am.sh:779
+#: git-am.sh:796
 msgid "cannot be interactive without stdin connected to a terminal."
 msgstr ""
 "impossible d'être interactif sans entrée standard connectée à un terminal."
 
-#: git-am.sh:783
+#: git-am.sh:800
 msgid "Commit Body is:"
 msgstr "Le corps de la validation est :"
 
 #. TRANSLATORS: Make sure to include [y], [n], [e], [v] and [a]
 #. in your translation. The program will only accept English
 #. input at this point.
-#: git-am.sh:790
+#: git-am.sh:807
 msgid "Apply? [y]es/[n]o/[e]dit/[v]iew patch/[a]ccept all "
 msgstr "Appliquer ? [y]es/[n]o/[e]dit/[v]iew patch/[a]ccept all "
 
-#: git-am.sh:826
+#: git-am.sh:843
 #, sh-format
 msgid "Applying: $FIRSTLINE"
 msgstr "Application : $FIRSTLINE"
 
-#: git-am.sh:847
+#: git-am.sh:864
 msgid ""
 "No changes - did you forget to use 'git add'?\n"
 "If there is nothing left to stage, chances are that something else\n"
 "already introduced the same changes; you might want to skip this patch."
 msgstr ""
 "Aucun changement - avez-vous oublié d'utiliser 'git add' ?\n"
 "S'il n'y a plus rien à indexer, il se peut qu'autre chose ait déjà\n"
 "introduit les mêmes changements ; vous pourriez avoir envie de sauter ce "
 "patch."
 
-#: git-am.sh:855
+#: git-am.sh:872
 msgid ""
 "You still have unmerged paths in your index\n"
 "did you forget to use 'git add'?"
 msgstr ""
 "Vous avez toujours des chemins non fusionnés dans votre index\n"
 "auriez-vous oublié de faire 'git add' ?"
 
-#: git-am.sh:871
+#: git-am.sh:888
 msgid "No changes -- Patch already applied."
 msgstr "Pas de changement -- Patch déjà appliqué."
 
-#: git-am.sh:881
+#: git-am.sh:898
 #, sh-format
 msgid "Patch failed at $msgnum $FIRSTLINE"
 msgstr "Le patch a échoué à $msgnum $FIRSTLINE"
 
-#: git-am.sh:884
+#: git-am.sh:901
 #, sh-format
 msgid ""
 "The copy of the patch that failed is found in:\n"
 "   $dotest/patch"
 msgstr ""
 "La copie du patch qui a échoué se trouve dans :\n"
 "   $dotest/patch"
 
-#: git-am.sh:902
+#: git-am.sh:919
 msgid "applying to an empty history"
 msgstr "application à un historique vide"
 
 #: git-bisect.sh:48
 msgid "You need to start by \"git bisect start\""
 msgstr "Vous devez démarrer avec \"git bisect start\""
@@ -10618,104 +10629,104 @@
 
 #: git-bisect.sh:244
 #, sh-format
 msgid "Bad rev input: $rev"
 msgstr "Mauvaise révision en entrée : $rev"
 
-#: git-bisect.sh:250
+#: git-bisect.sh:253
 msgid "'git bisect bad' can take only one argument."
 msgstr "'git bisect bad' n'accepte qu'un seul argument."
 
-#: git-bisect.sh:273
+#: git-bisect.sh:276
 msgid "Warning: bisecting only with a bad commit."
 msgstr "Attention : bissection avec seulement une mauvaise validation."
 
 #. TRANSLATORS: Make sure to include [Y] and [n] in your
 #. translation. The program will only accept English input
 #. at this point.
-#: git-bisect.sh:279
+#: git-bisect.sh:282
 msgid "Are you sure [Y/n]? "
 msgstr "Êtes-vous sûr [Y/n] ? "
 
-#: git-bisect.sh:289
+#: git-bisect.sh:292
 msgid ""
 "You need to give me at least one good and one bad revision.\n"
 "(You can use \"git bisect bad\" and \"git bisect good\" for that.)"
 msgstr ""
 "Vous devez me donner au moins une bonne et une mauvaise révision.\n"
 "(Vous pouvez utiliser \"git bisect bad\" et \"git bisect good\" pour cela.)"
 
-#: git-bisect.sh:292
+#: git-bisect.sh:295
 msgid ""
 "You need to start by \"git bisect start\".\n"
 "You then need to give me at least one good and one bad revision.\n"
 "(You can use \"git bisect bad\" and \"git bisect good\" for that.)"
 msgstr ""
 "Vous devez démarrer avec \"git bisect start\".\n"
 "Puis vous devez me donner au moins une bonne et une mauvaise révision.\n"
 "(Vous pouvez utiliser \"git bisect bad\" et \"git bisect good\" pour cela.)"
 
-#: git-bisect.sh:363 git-bisect.sh:490
+#: git-bisect.sh:366 git-bisect.sh:493
 msgid "We are not bisecting."
 msgstr "Pas de bissection en cours."
 
-#: git-bisect.sh:370
+#: git-bisect.sh:373
 #, sh-format
 msgid "'$invalid' is not a valid commit"
 msgstr "'$invalid' n'est pas une validation valide"
 
-#: git-bisect.sh:379
+#: git-bisect.sh:382
 #, sh-format
 msgid ""
 "Could not check out original HEAD '$branch'.\n"
 "Try 'git bisect reset <commit>'."
 msgstr ""
 "Échec d'extraction de la HEAD d'origine '$branch'.\n"
 "Essayez 'git bisect reset <commit>'."
 
-#: git-bisect.sh:406
+#: git-bisect.sh:409
 msgid "No logfile given"
 msgstr "Pas de fichier de log donné"
 
-#: git-bisect.sh:407
+#: git-bisect.sh:410
 #, sh-format
 msgid "cannot read $file for replaying"
 msgstr "impossible de lire $file pour rejouer"
 
-#: git-bisect.sh:424
+#: git-bisect.sh:427
 msgid "?? what are you talking about?"
 msgstr "?? de quoi parlez-vous ?"
 
-#: git-bisect.sh:436
+#: git-bisect.sh:439
 #, sh-format
 msgid "running $command"
 msgstr "lancement de $command"
 
-#: git-bisect.sh:443
+#: git-bisect.sh:446
 #, sh-format
 msgid ""
 "bisect run failed:\n"
 "exit code $res from '$command' is < 0 or >= 128"
 msgstr ""
 "la bissection a échoué :\n"
 "le code retour $res de '$command' est < 0 ou >= 128"
 
-#: git-bisect.sh:469
+#: git-bisect.sh:472
 msgid "bisect run cannot continue any more"
 msgstr "la bissection ne peut plus continuer"
 
-#: git-bisect.sh:475
+#: git-bisect.sh:478
 #, sh-format
 msgid ""
 "bisect run failed:\n"
 "'bisect_state $state' exited with error code $res"
 msgstr ""
 "la bissection a échoué :\n"
 "'bisect_state $state' a retourné le code erreur $res"
 
-#: git-bisect.sh:482
+#: git-bisect.sh:485
 msgid "bisect run success"
 msgstr "succès de la bissection"
 
 #: git-pull.sh:21
 msgid ""
 "Pull is not possible because you have unmerged files.\n"
@@ -11367,12 +11378,24 @@
 
 #: git-submodule.sh:1331
 #, sh-format
 msgid "Synchronizing submodule url for '$displaypath'"
 msgstr "Synchronisation de l'URL sous-module pour '$displaypath'"
 
+#~ msgid "no files added"
+#~ msgstr "aucun fichier ajouté"
+
+#~ msgid "force creation (when already exists)"
+#~ msgstr "forcer la création (même si la cible existe)"
+
+#~ msgid "Malformed ident string: '%s'"
+#~ msgstr "Chaîne ident mal formée : '%s'"
+
+#~ msgid "slot"
+#~ msgstr "emplacement"
+
 #~ msgid "Failed to lock ref for update"
 #~ msgstr "Échec du verrouillage de la référence pour mise à jour"
 
 #~ msgid "Failed to write ref"
 #~ msgstr "Échec de l'écriture de la référence"
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/po/git.pot /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/po/git.pot
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/po/git.pot	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/po/git.pot	2015-02-06 05:40:08.000000000 +0800
@@ -5,13 +5,13 @@
 #
 #, fuzzy
 msgid ""
 msgstr ""
 "Project-Id-Version: PACKAGE VERSION\n"
 "Report-Msgid-Bugs-To: Git Mailing List <git@vger.kernel.org>\n"
-"POT-Creation-Date: 2014-11-20 09:42+0800\n"
+"POT-Creation-Date: 2015-01-21 14:21+0800\n"
 "PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
 "Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
 "Language-Team: LANGUAGE <LL@li.org>\n"
 "Language: \n"
 "MIME-Version: 1.0\n"
 "Content-Type: text/plain; charset=CHARSET\n"
@@ -43,82 +43,82 @@
 msgstr ""
 
 #: archive.c:14
 msgid "git archive --remote <repo> [--exec <cmd>] --list"
 msgstr ""
 
-#: archive.c:334 builtin/add.c:137 builtin/add.c:427 builtin/rm.c:328
+#: archive.c:342 builtin/add.c:137 builtin/add.c:427 builtin/rm.c:328
 #, c-format
 msgid "pathspec '%s' did not match any files"
 msgstr ""
 
-#: archive.c:419
+#: archive.c:427
 msgid "fmt"
 msgstr ""
 
-#: archive.c:419
+#: archive.c:427
 msgid "archive format"
 msgstr ""
 
-#: archive.c:420 builtin/log.c:1204
+#: archive.c:428 builtin/log.c:1204
 msgid "prefix"
 msgstr ""
 
-#: archive.c:421
+#: archive.c:429
 msgid "prepend prefix to each pathname in the archive"
 msgstr ""
 
-#: archive.c:422 builtin/archive.c:88 builtin/blame.c:2517
+#: archive.c:430 builtin/archive.c:88 builtin/blame.c:2517
 #: builtin/blame.c:2518 builtin/config.c:57 builtin/fast-export.c:986
 #: builtin/fast-export.c:988 builtin/grep.c:712 builtin/hash-object.c:101
-#: builtin/ls-files.c:489 builtin/ls-files.c:492 builtin/notes.c:411
-#: builtin/notes.c:568 builtin/read-tree.c:109 parse-options.h:151
+#: builtin/ls-files.c:489 builtin/ls-files.c:492 builtin/notes.c:394
+#: builtin/notes.c:557 builtin/read-tree.c:109 parse-options.h:151
 msgid "file"
 msgstr ""
 
-#: archive.c:423 builtin/archive.c:89
+#: archive.c:431 builtin/archive.c:89
 msgid "write the archive to this file"
 msgstr ""
 
-#: archive.c:425
+#: archive.c:433
 msgid "read .gitattributes in working directory"
 msgstr ""
 
-#: archive.c:426
+#: archive.c:434
 msgid "report archived files on stderr"
 msgstr ""
 
-#: archive.c:427
+#: archive.c:435
 msgid "store only"
 msgstr ""
 
-#: archive.c:428
+#: archive.c:436
 msgid "compress faster"
 msgstr ""
 
-#: archive.c:436
+#: archive.c:444
 msgid "compress better"
 msgstr ""
 
-#: archive.c:439
+#: archive.c:447
 msgid "list supported archive formats"
 msgstr ""
 
-#: archive.c:441 builtin/archive.c:90 builtin/clone.c:85
+#: archive.c:449 builtin/archive.c:90 builtin/clone.c:86
 msgid "repo"
 msgstr ""
 
-#: archive.c:442 builtin/archive.c:91
+#: archive.c:450 builtin/archive.c:91
 msgid "retrieve the archive from remote repository <repo>"
 msgstr ""
 
-#: archive.c:443 builtin/archive.c:92 builtin/notes.c:490
+#: archive.c:451 builtin/archive.c:92 builtin/notes.c:478
 msgid "command"
 msgstr ""
 
-#: archive.c:444 builtin/archive.c:93
+#: archive.c:452 builtin/archive.c:93
 msgid "path to the remote git-upload-archive command"
 msgstr ""
 
 #: attr.c:258
 msgid ""
 "Negative patterns are ignored in git attributes\n"
@@ -233,24 +233,24 @@
 
 #: bundle.c:61
 #, c-format
 msgid "unrecognized header: %s%s (%d)"
 msgstr ""
 
-#: bundle.c:87 builtin/commit.c:788
+#: bundle.c:87 builtin/commit.c:770
 #, c-format
 msgid "could not open '%s'"
 msgstr ""
 
 #: bundle.c:139
 msgid "Repository lacks these prerequisite commits:"
 msgstr ""
 
-#: bundle.c:163 sequencer.c:641 sequencer.c:1096 builtin/blame.c:2706
-#: builtin/branch.c:652 builtin/commit.c:1085 builtin/log.c:330
-#: builtin/log.c:823 builtin/log.c:1432 builtin/log.c:1669 builtin/merge.c:357
+#: bundle.c:163 sequencer.c:645 sequencer.c:1100 builtin/blame.c:2706
+#: builtin/branch.c:652 builtin/commit.c:1049 builtin/log.c:330
+#: builtin/log.c:823 builtin/log.c:1432 builtin/log.c:1669 builtin/merge.c:358
 #: builtin/shortlog.c:158
 msgid "revision walk setup failed"
 msgstr ""
 
 #: bundle.c:185
 #, c-format
@@ -302,13 +302,13 @@
 msgstr ""
 
 #: bundle.c:475
 msgid "index-pack died"
 msgstr ""
 
-#: color.c:157
+#: color.c:260
 #, c-format
 msgid "invalid color value: %.*s"
 msgstr ""
 
 #: commit.c:40
 #, c-format
@@ -351,31 +351,31 @@
 
 #: config.c:885
 #, c-format
 msgid "invalid mode for object creation: %s"
 msgstr ""
 
-#: config.c:1201
+#: config.c:1211
 msgid "unable to parse command-line config"
 msgstr ""
 
-#: config.c:1262
+#: config.c:1272
 msgid "unknown error occured while reading the configuration files"
 msgstr ""
 
-#: config.c:1586
+#: config.c:1596
 #, c-format
 msgid "unable to parse '%s' from command-line config"
 msgstr ""
 
-#: config.c:1588
+#: config.c:1598
 #, c-format
 msgid "bad config variable '%s' in file '%s' at line %d"
 msgstr ""
 
-#: config.c:1647
+#: config.c:1657
 #, c-format
 msgid "%s has multiple values"
 msgstr ""
 
 #: connected.c:69
 msgid "Could not run 'git rev-list'"
@@ -601,26 +601,26 @@
 
 #: help.c:440
 #, c-format
 msgid "%s: %s - %s"
 msgstr ""
 
-#: lockfile.c:275
+#: lockfile.c:283
 msgid "BUG: reopen a lockfile that is still open"
 msgstr ""
 
-#: lockfile.c:277
+#: lockfile.c:285
 msgid "BUG: reopen a lockfile that has been committed"
 msgstr ""
 
 #: merge.c:41
 msgid "failed to read the cache"
 msgstr ""
 
-#: merge.c:94 builtin/checkout.c:356 builtin/checkout.c:562
-#: builtin/clone.c:659
+#: merge.c:94 builtin/checkout.c:374 builtin/checkout.c:580
+#: builtin/clone.c:662
 msgid "unable to write new index file"
 msgstr ""
 
 #: merge-recursive.c:189
 #, c-format
 msgid "(bad commit)\n"
@@ -632,259 +632,259 @@
 msgstr ""
 
 #: merge-recursive.c:270
 msgid "error building trees"
 msgstr ""
 
-#: merge-recursive.c:691
+#: merge-recursive.c:688
 #, c-format
 msgid "failed to create path '%s'%s"
 msgstr ""
 
-#: merge-recursive.c:702
+#: merge-recursive.c:699
 #, c-format
 msgid "Removing %s to make room for subdirectory\n"
 msgstr ""
 
-#: merge-recursive.c:716 merge-recursive.c:737
+#: merge-recursive.c:713 merge-recursive.c:734
 msgid ": perhaps a D/F conflict?"
 msgstr ""
 
-#: merge-recursive.c:727
+#: merge-recursive.c:724
 #, c-format
 msgid "refusing to lose untracked file at '%s'"
 msgstr ""
 
-#: merge-recursive.c:767
+#: merge-recursive.c:764
 #, c-format
 msgid "cannot read object %s '%s'"
 msgstr ""
 
-#: merge-recursive.c:769
+#: merge-recursive.c:766
 #, c-format
 msgid "blob expected for %s '%s'"
 msgstr ""
 
-#: merge-recursive.c:792 builtin/clone.c:318
+#: merge-recursive.c:789 builtin/clone.c:321
 #, c-format
 msgid "failed to open '%s'"
 msgstr ""
 
-#: merge-recursive.c:800
+#: merge-recursive.c:797
 #, c-format
 msgid "failed to symlink '%s'"
 msgstr ""
 
-#: merge-recursive.c:803
+#: merge-recursive.c:800
 #, c-format
 msgid "do not know what to do with %06o %s '%s'"
 msgstr ""
 
-#: merge-recursive.c:941
+#: merge-recursive.c:938
 msgid "Failed to execute internal merge"
 msgstr ""
 
-#: merge-recursive.c:945
+#: merge-recursive.c:942
 #, c-format
 msgid "Unable to add %s to database"
 msgstr ""
 
-#: merge-recursive.c:961
+#: merge-recursive.c:958
 msgid "unsupported object type in the tree"
 msgstr ""
 
-#: merge-recursive.c:1036 merge-recursive.c:1050
+#: merge-recursive.c:1033 merge-recursive.c:1047
 #, c-format
 msgid ""
 "CONFLICT (%s/delete): %s deleted in %s and %s in %s. Version %s of %s left "
 "in tree."
 msgstr ""
 
-#: merge-recursive.c:1042 merge-recursive.c:1055
+#: merge-recursive.c:1039 merge-recursive.c:1052
 #, c-format
 msgid ""
 "CONFLICT (%s/delete): %s deleted in %s and %s in %s. Version %s of %s left "
 "in tree at %s."
 msgstr ""
 
-#: merge-recursive.c:1096
+#: merge-recursive.c:1093
 msgid "rename"
 msgstr ""
 
-#: merge-recursive.c:1096
+#: merge-recursive.c:1093
 msgid "renamed"
 msgstr ""
 
-#: merge-recursive.c:1152
+#: merge-recursive.c:1149
 #, c-format
 msgid "%s is a directory in %s adding as %s instead"
 msgstr ""
 
-#: merge-recursive.c:1174
+#: merge-recursive.c:1171
 #, c-format
 msgid ""
 "CONFLICT (rename/rename): Rename \"%s\"->\"%s\" in branch \"%s\" rename \"%s"
 "\"->\"%s\" in \"%s\"%s"
 msgstr ""
 
-#: merge-recursive.c:1179
+#: merge-recursive.c:1176
 msgid " (left unresolved)"
 msgstr ""
 
-#: merge-recursive.c:1233
+#: merge-recursive.c:1230
 #, c-format
 msgid "CONFLICT (rename/rename): Rename %s->%s in %s. Rename %s->%s in %s"
 msgstr ""
 
-#: merge-recursive.c:1263
+#: merge-recursive.c:1260
 #, c-format
 msgid "Renaming %s to %s and %s to %s instead"
 msgstr ""
 
-#: merge-recursive.c:1462
+#: merge-recursive.c:1459
 #, c-format
 msgid "CONFLICT (rename/add): Rename %s->%s in %s. %s added in %s"
 msgstr ""
 
-#: merge-recursive.c:1472
+#: merge-recursive.c:1469
 #, c-format
 msgid "Adding merged %s"
 msgstr ""
 
-#: merge-recursive.c:1477 merge-recursive.c:1675
+#: merge-recursive.c:1474 merge-recursive.c:1672
 #, c-format
 msgid "Adding as %s instead"
 msgstr ""
 
-#: merge-recursive.c:1528
+#: merge-recursive.c:1525
 #, c-format
 msgid "cannot read object %s"
 msgstr ""
 
-#: merge-recursive.c:1531
+#: merge-recursive.c:1528
 #, c-format
 msgid "object %s is not a blob"
 msgstr ""
 
-#: merge-recursive.c:1579
+#: merge-recursive.c:1576
 msgid "modify"
 msgstr ""
 
-#: merge-recursive.c:1579
+#: merge-recursive.c:1576
 msgid "modified"
 msgstr ""
 
-#: merge-recursive.c:1589
+#: merge-recursive.c:1586
 msgid "content"
 msgstr ""
 
-#: merge-recursive.c:1596
+#: merge-recursive.c:1593
 msgid "add/add"
 msgstr ""
 
-#: merge-recursive.c:1630
+#: merge-recursive.c:1627
 #, c-format
 msgid "Skipped %s (merged same as existing)"
 msgstr ""
 
-#: merge-recursive.c:1644
+#: merge-recursive.c:1641
 #, c-format
 msgid "Auto-merging %s"
 msgstr ""
 
-#: merge-recursive.c:1648 git-submodule.sh:1150
+#: merge-recursive.c:1645 git-submodule.sh:1150
 msgid "submodule"
 msgstr ""
 
-#: merge-recursive.c:1649
+#: merge-recursive.c:1646
 #, c-format
 msgid "CONFLICT (%s): Merge conflict in %s"
 msgstr ""
 
-#: merge-recursive.c:1735
+#: merge-recursive.c:1732
 #, c-format
 msgid "Removing %s"
 msgstr ""
 
-#: merge-recursive.c:1760
+#: merge-recursive.c:1757
 msgid "file/directory"
 msgstr ""
 
-#: merge-recursive.c:1766
+#: merge-recursive.c:1763
 msgid "directory/file"
 msgstr ""
 
-#: merge-recursive.c:1771
+#: merge-recursive.c:1768
 #, c-format
 msgid "CONFLICT (%s): There is a directory with name %s in %s. Adding %s as %s"
 msgstr ""
 
-#: merge-recursive.c:1781
+#: merge-recursive.c:1778
 #, c-format
 msgid "Adding %s"
 msgstr ""
 
-#: merge-recursive.c:1798
+#: merge-recursive.c:1795
 msgid "Fatal merge failure, shouldn't happen."
 msgstr ""
 
-#: merge-recursive.c:1817
+#: merge-recursive.c:1814
 msgid "Already up-to-date!"
 msgstr ""
 
-#: merge-recursive.c:1826
+#: merge-recursive.c:1823
 #, c-format
 msgid "merging of trees %s and %s failed"
 msgstr ""
 
-#: merge-recursive.c:1856
+#: merge-recursive.c:1853
 #, c-format
 msgid "Unprocessed path??? %s"
 msgstr ""
 
-#: merge-recursive.c:1901
+#: merge-recursive.c:1898
 msgid "Merging:"
 msgstr ""
 
-#: merge-recursive.c:1914
+#: merge-recursive.c:1911
 #, c-format
 msgid "found %u common ancestor:"
 msgid_plural "found %u common ancestors:"
 msgstr[0] ""
 msgstr[1] ""
 
-#: merge-recursive.c:1951
+#: merge-recursive.c:1948
 msgid "merge returned no commit"
 msgstr ""
 
-#: merge-recursive.c:2008
+#: merge-recursive.c:2005
 #, c-format
 msgid "Could not parse object '%s'"
 msgstr ""
 
-#: merge-recursive.c:2019 builtin/merge.c:666
+#: merge-recursive.c:2016 builtin/merge.c:667
 msgid "Unable to write index."
 msgstr ""
 
 #: notes-utils.c:41
 msgid "Cannot commit uninitialized/unreferenced notes tree"
 msgstr ""
 
-#: notes-utils.c:83
+#: notes-utils.c:82
 #, c-format
 msgid "Bad notes.rewriteMode value: '%s'"
 msgstr ""
 
-#: notes-utils.c:93
+#: notes-utils.c:92
 #, c-format
 msgid "Refusing to rewrite notes in %s (outside of refs/notes/)"
 msgstr ""
 
 #. TRANSLATORS: The first %s is the name of the
 #. environment variable, the second %s is its value
-#: notes-utils.c:120
+#: notes-utils.c:119
 #, c-format
 msgid "Bad %s value: '%s'"
 msgstr ""
 
 #: object.c:241
 #, c-format
@@ -981,20 +981,20 @@
 msgstr ""
 
 #: progress.c:225
 msgid "done"
 msgstr ""
 
-#: read-cache.c:1261
+#: read-cache.c:1267
 #, c-format
 msgid ""
 "index.version set, but the value is invalid.\n"
 "Using version %i"
 msgstr ""
 
-#: read-cache.c:1271
+#: read-cache.c:1277
 #, c-format
 msgid ""
 "GIT_INDEX_VERSION set, but the value is invalid.\n"
 "Using version %i"
 msgstr ""
 
@@ -1014,89 +1014,89 @@
 msgstr ""
 
 #: remote.c:798
 msgid "Internal error"
 msgstr ""
 
-#: remote.c:1968
+#: remote.c:1980
 #, c-format
 msgid "Your branch is based on '%s', but the upstream is gone.\n"
 msgstr ""
 
-#: remote.c:1972
+#: remote.c:1984
 msgid "  (use \"git branch --unset-upstream\" to fixup)\n"
 msgstr ""
 
-#: remote.c:1975
+#: remote.c:1987
 #, c-format
 msgid "Your branch is up-to-date with '%s'.\n"
 msgstr ""
 
-#: remote.c:1979
+#: remote.c:1991
 #, c-format
 msgid "Your branch is ahead of '%s' by %d commit.\n"
 msgid_plural "Your branch is ahead of '%s' by %d commits.\n"
 msgstr[0] ""
 msgstr[1] ""
 
-#: remote.c:1985
+#: remote.c:1997
 msgid "  (use \"git push\" to publish your local commits)\n"
 msgstr ""
 
-#: remote.c:1988
+#: remote.c:2000
 #, c-format
 msgid "Your branch is behind '%s' by %d commit, and can be fast-forwarded.\n"
 msgid_plural ""
 "Your branch is behind '%s' by %d commits, and can be fast-forwarded.\n"
 msgstr[0] ""
 msgstr[1] ""
 
-#: remote.c:1996
+#: remote.c:2008
 msgid "  (use \"git pull\" to update your local branch)\n"
 msgstr ""
 
-#: remote.c:1999
+#: remote.c:2011
 #, c-format
 msgid ""
 "Your branch and '%s' have diverged,\n"
 "and have %d and %d different commit each, respectively.\n"
 msgid_plural ""
 "Your branch and '%s' have diverged,\n"
 "and have %d and %d different commits each, respectively.\n"
 msgstr[0] ""
 msgstr[1] ""
 
-#: remote.c:2009
+#: remote.c:2021
 msgid "  (use \"git pull\" to merge the remote branch into yours)\n"
 msgstr ""
 
 #: run-command.c:87
 msgid "open /dev/null failed"
 msgstr ""
 
 #: run-command.c:89
 #, c-format
 msgid "dup2(%d,%d) failed"
 msgstr ""
 
-#: send-pack.c:265
+#: send-pack.c:268
 msgid "failed to sign the push certificate"
 msgstr ""
 
-#: send-pack.c:322
+#: send-pack.c:325
 msgid "the receiving end does not support --signed push"
 msgstr ""
 
-#: sequencer.c:172 builtin/merge.c:781 builtin/merge.c:892
-#: builtin/merge.c:1002 builtin/merge.c:1012
+#: sequencer.c:172 builtin/merge.c:782 builtin/merge.c:893 builtin/merge.c:995
+#: builtin/merge.c:1005
 #, c-format
 msgid "Could not open '%s' for writing"
 msgstr ""
 
-#: sequencer.c:174 builtin/merge.c:343 builtin/merge.c:784
-#: builtin/merge.c:1004 builtin/merge.c:1017
+#: sequencer.c:174 builtin/merge.c:344 builtin/merge.c:785 builtin/merge.c:997
+#: builtin/merge.c:1010
 #, c-format
 msgid "Could not write to '%s'"
 msgstr ""
 
 #: sequencer.c:195
 msgid ""
@@ -1108,13 +1108,13 @@
 msgid ""
 "after resolving the conflicts, mark the corrected paths\n"
 "with 'git add <paths>' or 'git rm <paths>'\n"
 "and commit the result with 'git commit'"
 msgstr ""
 
-#: sequencer.c:211 sequencer.c:852 sequencer.c:935
+#: sequencer.c:211 sequencer.c:856 sequencer.c:939
 #, c-format
 msgid "Could not write to %s"
 msgstr ""
 
 #: sequencer.c:214
 #, c-format
@@ -1131,203 +1131,203 @@
 
 #: sequencer.c:234
 msgid "Commit your changes or stash them to proceed."
 msgstr ""
 
 #. TRANSLATORS: %s will be "revert" or "cherry-pick"
-#: sequencer.c:304
+#: sequencer.c:321
 #, c-format
 msgid "%s: Unable to write new index file"
 msgstr ""
 
-#: sequencer.c:335
+#: sequencer.c:339
 msgid "Could not resolve HEAD commit\n"
 msgstr ""
 
-#: sequencer.c:355
+#: sequencer.c:359
 msgid "Unable to update cache tree\n"
 msgstr ""
 
-#: sequencer.c:402
+#: sequencer.c:406
 #, c-format
 msgid "Could not parse commit %s\n"
 msgstr ""
 
-#: sequencer.c:407
+#: sequencer.c:411
 #, c-format
 msgid "Could not parse parent commit %s\n"
 msgstr ""
 
-#: sequencer.c:473
+#: sequencer.c:477
 msgid "Your index file is unmerged."
 msgstr ""
 
-#: sequencer.c:492
+#: sequencer.c:496
 #, c-format
 msgid "Commit %s is a merge but no -m option was given."
 msgstr ""
 
-#: sequencer.c:500
+#: sequencer.c:504
 #, c-format
 msgid "Commit %s does not have parent %d"
 msgstr ""
 
-#: sequencer.c:504
+#: sequencer.c:508
 #, c-format
 msgid "Mainline was specified but commit %s is not a merge."
 msgstr ""
 
 #. TRANSLATORS: The first %s will be "revert" or
 #. "cherry-pick", the second %s a SHA1
-#: sequencer.c:517
+#: sequencer.c:521
 #, c-format
 msgid "%s: cannot parse parent commit %s"
 msgstr ""
 
-#: sequencer.c:521
+#: sequencer.c:525
 #, c-format
 msgid "Cannot get commit message for %s"
 msgstr ""
 
-#: sequencer.c:607
+#: sequencer.c:611
 #, c-format
 msgid "could not revert %s... %s"
 msgstr ""
 
-#: sequencer.c:608
+#: sequencer.c:612
 #, c-format
 msgid "could not apply %s... %s"
 msgstr ""
 
-#: sequencer.c:644
+#: sequencer.c:648
 msgid "empty commit set passed"
 msgstr ""
 
-#: sequencer.c:652
+#: sequencer.c:656
 #, c-format
 msgid "git %s: failed to read the index"
 msgstr ""
 
-#: sequencer.c:656
+#: sequencer.c:660
 #, c-format
 msgid "git %s: failed to refresh the index"
 msgstr ""
 
-#: sequencer.c:716
+#: sequencer.c:720
 #, c-format
 msgid "Cannot %s during a %s"
 msgstr ""
 
-#: sequencer.c:738
+#: sequencer.c:742
 #, c-format
 msgid "Could not parse line %d."
 msgstr ""
 
-#: sequencer.c:743
+#: sequencer.c:747
 msgid "No commits parsed."
 msgstr ""
 
-#: sequencer.c:756
+#: sequencer.c:760
 #, c-format
 msgid "Could not open %s"
 msgstr ""
 
-#: sequencer.c:760
+#: sequencer.c:764
 #, c-format
 msgid "Could not read %s."
 msgstr ""
 
-#: sequencer.c:767
+#: sequencer.c:771
 #, c-format
 msgid "Unusable instruction sheet: %s"
 msgstr ""
 
-#: sequencer.c:797
+#: sequencer.c:801
 #, c-format
 msgid "Invalid key: %s"
 msgstr ""
 
-#: sequencer.c:800
+#: sequencer.c:804
 #, c-format
 msgid "Invalid value for %s: %s"
 msgstr ""
 
-#: sequencer.c:812
+#: sequencer.c:816
 #, c-format
 msgid "Malformed options sheet: %s"
 msgstr ""
 
-#: sequencer.c:833
+#: sequencer.c:837
 msgid "a cherry-pick or revert is already in progress"
 msgstr ""
 
-#: sequencer.c:834
+#: sequencer.c:838
 msgid "try \"git cherry-pick (--continue | --quit | --abort)\""
 msgstr ""
 
-#: sequencer.c:838
+#: sequencer.c:842
 #, c-format
 msgid "Could not create sequencer directory %s"
 msgstr ""
 
-#: sequencer.c:854 sequencer.c:939
+#: sequencer.c:858 sequencer.c:943
 #, c-format
 msgid "Error wrapping up %s."
 msgstr ""
 
-#: sequencer.c:873 sequencer.c:1009
+#: sequencer.c:877 sequencer.c:1013
 msgid "no cherry-pick or revert in progress"
 msgstr ""
 
-#: sequencer.c:875
+#: sequencer.c:879
 msgid "cannot resolve HEAD"
 msgstr ""
 
-#: sequencer.c:877
+#: sequencer.c:881
 msgid "cannot abort from a branch yet to be born"
 msgstr ""
 
-#: sequencer.c:899 builtin/apply.c:4128
+#: sequencer.c:903 builtin/apply.c:4128
 #, c-format
 msgid "cannot open %s: %s"
 msgstr ""
 
-#: sequencer.c:902
+#: sequencer.c:906
 #, c-format
 msgid "cannot read %s: %s"
 msgstr ""
 
-#: sequencer.c:903
+#: sequencer.c:907
 msgid "unexpected end of file"
 msgstr ""
 
-#: sequencer.c:909
+#: sequencer.c:913
 #, c-format
 msgid "stored pre-cherry-pick HEAD file '%s' is corrupt"
 msgstr ""
 
-#: sequencer.c:932
+#: sequencer.c:936
 #, c-format
 msgid "Could not format %s."
 msgstr ""
 
-#: sequencer.c:1077
+#: sequencer.c:1081
 #, c-format
 msgid "%s: can't cherry-pick a %s"
 msgstr ""
 
-#: sequencer.c:1080
+#: sequencer.c:1084
 #, c-format
 msgid "%s: bad revision"
 msgstr ""
 
-#: sequencer.c:1114
+#: sequencer.c:1118
 msgid "Can't revert as initial commit"
 msgstr ""
 
-#: sequencer.c:1115
+#: sequencer.c:1119
 msgid "Can't cherry-pick into empty head"
 msgstr ""
 
 #: sha1_name.c:440
 msgid ""
 "Git normally never creates a ref that ends with 40 hex characters\n"
@@ -1380,44 +1380,44 @@
 msgstr ""
 
 #: submodule.c:120
 msgid "staging updated .gitmodules failed"
 msgstr ""
 
-#: submodule.c:1111 builtin/init-db.c:363
+#: submodule.c:1111 builtin/init-db.c:371
 #, c-format
 msgid "Could not create git link %s"
 msgstr ""
 
 #: submodule.c:1122
 #, c-format
 msgid "Could not set core.worktree in %s"
 msgstr ""
 
-#: trailer.c:499 trailer.c:503 trailer.c:507 trailer.c:561 trailer.c:565
-#: trailer.c:569
+#: trailer.c:500 trailer.c:504 trailer.c:508 trailer.c:562 trailer.c:566
+#: trailer.c:570
 #, c-format
 msgid "unknown value '%s' for key '%s'"
 msgstr ""
 
-#: trailer.c:551 trailer.c:556 builtin/remote.c:288
+#: trailer.c:552 trailer.c:557 builtin/remote.c:290
 #, c-format
 msgid "more than one %s"
 msgstr ""
 
-#: trailer.c:589
+#: trailer.c:590
 #, c-format
 msgid "empty trailer token in trailer '%.*s'"
 msgstr ""
 
-#: trailer.c:709
+#: trailer.c:710
 #, c-format
 msgid "could not read input file '%s'"
 msgstr ""
 
-#: trailer.c:712
+#: trailer.c:713
 msgid "could not read from stdin"
 msgstr ""
 
 #: unpack-trees.c:202
 msgid "Checking out files"
 msgstr ""
@@ -1608,278 +1608,278 @@
 
 #: wt-status.c:391
 #, c-format
 msgid "bug: unhandled diff status %c"
 msgstr ""
 
-#: wt-status.c:761
+#: wt-status.c:758
 msgid "Submodules changed but not updated:"
 msgstr ""
 
-#: wt-status.c:763
+#: wt-status.c:760
 msgid "Submodule changes to be committed:"
 msgstr ""
 
-#: wt-status.c:842
+#: wt-status.c:839
 msgid ""
 "Do not touch the line above.\n"
 "Everything below will be removed."
 msgstr ""
 
-#: wt-status.c:933
+#: wt-status.c:930
 msgid "You have unmerged paths."
 msgstr ""
 
-#: wt-status.c:936
+#: wt-status.c:933
 msgid "  (fix conflicts and run \"git commit\")"
 msgstr ""
 
-#: wt-status.c:939
+#: wt-status.c:936
 msgid "All conflicts fixed but you are still merging."
 msgstr ""
 
-#: wt-status.c:942
+#: wt-status.c:939
 msgid "  (use \"git commit\" to conclude merge)"
 msgstr ""
 
-#: wt-status.c:952
+#: wt-status.c:949
 msgid "You are in the middle of an am session."
 msgstr ""
 
-#: wt-status.c:955
+#: wt-status.c:952
 msgid "The current patch is empty."
 msgstr ""
 
-#: wt-status.c:959
+#: wt-status.c:956
 msgid "  (fix conflicts and then run \"git am --continue\")"
 msgstr ""
 
-#: wt-status.c:961
+#: wt-status.c:958
 msgid "  (use \"git am --skip\" to skip this patch)"
 msgstr ""
 
-#: wt-status.c:963
+#: wt-status.c:960
 msgid "  (use \"git am --abort\" to restore the original branch)"
 msgstr ""
 
-#: wt-status.c:1023 wt-status.c:1040
+#: wt-status.c:1020 wt-status.c:1037
 #, c-format
 msgid "You are currently rebasing branch '%s' on '%s'."
 msgstr ""
 
-#: wt-status.c:1028 wt-status.c:1045
+#: wt-status.c:1025 wt-status.c:1042
 msgid "You are currently rebasing."
 msgstr ""
 
-#: wt-status.c:1031
+#: wt-status.c:1028
 msgid "  (fix conflicts and then run \"git rebase --continue\")"
 msgstr ""
 
-#: wt-status.c:1033
+#: wt-status.c:1030
 msgid "  (use \"git rebase --skip\" to skip this patch)"
 msgstr ""
 
-#: wt-status.c:1035
+#: wt-status.c:1032
 msgid "  (use \"git rebase --abort\" to check out the original branch)"
 msgstr ""
 
-#: wt-status.c:1048
+#: wt-status.c:1045
 msgid "  (all conflicts fixed: run \"git rebase --continue\")"
 msgstr ""
 
-#: wt-status.c:1052
+#: wt-status.c:1049
 #, c-format
 msgid ""
 "You are currently splitting a commit while rebasing branch '%s' on '%s'."
 msgstr ""
 
-#: wt-status.c:1057
+#: wt-status.c:1054
 msgid "You are currently splitting a commit during a rebase."
 msgstr ""
 
-#: wt-status.c:1060
+#: wt-status.c:1057
 msgid "  (Once your working directory is clean, run \"git rebase --continue\")"
 msgstr ""
 
-#: wt-status.c:1064
+#: wt-status.c:1061
 #, c-format
 msgid "You are currently editing a commit while rebasing branch '%s' on '%s'."
 msgstr ""
 
-#: wt-status.c:1069
+#: wt-status.c:1066
 msgid "You are currently editing a commit during a rebase."
 msgstr ""
 
-#: wt-status.c:1072
+#: wt-status.c:1069
 msgid "  (use \"git commit --amend\" to amend the current commit)"
 msgstr ""
 
-#: wt-status.c:1074
+#: wt-status.c:1071
 msgid ""
 "  (use \"git rebase --continue\" once you are satisfied with your changes)"
 msgstr ""
 
-#: wt-status.c:1084
+#: wt-status.c:1081
 #, c-format
 msgid "You are currently cherry-picking commit %s."
 msgstr ""
 
-#: wt-status.c:1089
+#: wt-status.c:1086
 msgid "  (fix conflicts and run \"git cherry-pick --continue\")"
 msgstr ""
 
-#: wt-status.c:1092
+#: wt-status.c:1089
 msgid "  (all conflicts fixed: run \"git cherry-pick --continue\")"
 msgstr ""
 
-#: wt-status.c:1094
+#: wt-status.c:1091
 msgid "  (use \"git cherry-pick --abort\" to cancel the cherry-pick operation)"
 msgstr ""
 
-#: wt-status.c:1103
+#: wt-status.c:1100
 #, c-format
 msgid "You are currently reverting commit %s."
 msgstr ""
 
-#: wt-status.c:1108
+#: wt-status.c:1105
 msgid "  (fix conflicts and run \"git revert --continue\")"
 msgstr ""
 
-#: wt-status.c:1111
+#: wt-status.c:1108
 msgid "  (all conflicts fixed: run \"git revert --continue\")"
 msgstr ""
 
-#: wt-status.c:1113
+#: wt-status.c:1110
 msgid "  (use \"git revert --abort\" to cancel the revert operation)"
 msgstr ""
 
-#: wt-status.c:1124
+#: wt-status.c:1121
 #, c-format
 msgid "You are currently bisecting, started from branch '%s'."
 msgstr ""
 
-#: wt-status.c:1128
+#: wt-status.c:1125
 msgid "You are currently bisecting."
 msgstr ""
 
-#: wt-status.c:1131
+#: wt-status.c:1128
 msgid "  (use \"git bisect reset\" to get back to the original branch)"
 msgstr ""
 
-#: wt-status.c:1306
+#: wt-status.c:1303
 msgid "On branch "
 msgstr ""
 
-#: wt-status.c:1313
+#: wt-status.c:1310
 msgid "rebase in progress; onto "
 msgstr ""
 
-#: wt-status.c:1320
+#: wt-status.c:1317
 msgid "HEAD detached at "
 msgstr ""
 
-#: wt-status.c:1322
+#: wt-status.c:1319
 msgid "HEAD detached from "
 msgstr ""
 
-#: wt-status.c:1325
+#: wt-status.c:1322
 msgid "Not currently on any branch."
 msgstr ""
 
-#: wt-status.c:1342
+#: wt-status.c:1339
 msgid "Initial commit"
 msgstr ""
 
-#: wt-status.c:1356
+#: wt-status.c:1353
 msgid "Untracked files"
 msgstr ""
 
-#: wt-status.c:1358
+#: wt-status.c:1355
 msgid "Ignored files"
 msgstr ""
 
-#: wt-status.c:1362
+#: wt-status.c:1359
 #, c-format
 msgid ""
 "It took %.2f seconds to enumerate untracked files. 'status -uno'\n"
 "may speed it up, but you have to be careful not to forget to add\n"
 "new files yourself (see 'git help status')."
 msgstr ""
 
-#: wt-status.c:1368
+#: wt-status.c:1365
 #, c-format
 msgid "Untracked files not listed%s"
 msgstr ""
 
-#: wt-status.c:1370
+#: wt-status.c:1367
 msgid " (use -u option to show untracked files)"
 msgstr ""
 
-#: wt-status.c:1376
+#: wt-status.c:1373
 msgid "No changes"
 msgstr ""
 
-#: wt-status.c:1381
+#: wt-status.c:1378
 #, c-format
 msgid "no changes added to commit (use \"git add\" and/or \"git commit -a\")\n"
 msgstr ""
 
-#: wt-status.c:1384
+#: wt-status.c:1381
 #, c-format
 msgid "no changes added to commit\n"
 msgstr ""
 
-#: wt-status.c:1387
+#: wt-status.c:1384
 #, c-format
 msgid ""
 "nothing added to commit but untracked files present (use \"git add\" to "
 "track)\n"
 msgstr ""
 
-#: wt-status.c:1390
+#: wt-status.c:1387
 #, c-format
 msgid "nothing added to commit but untracked files present\n"
 msgstr ""
 
-#: wt-status.c:1393
+#: wt-status.c:1390
 #, c-format
 msgid "nothing to commit (create/copy files and use \"git add\" to track)\n"
 msgstr ""
 
-#: wt-status.c:1396 wt-status.c:1401
+#: wt-status.c:1393 wt-status.c:1398
 #, c-format
 msgid "nothing to commit\n"
 msgstr ""
 
-#: wt-status.c:1399
+#: wt-status.c:1396
 #, c-format
 msgid "nothing to commit (use -u to show untracked files)\n"
 msgstr ""
 
-#: wt-status.c:1403
+#: wt-status.c:1400
 #, c-format
 msgid "nothing to commit, working directory clean\n"
 msgstr ""
 
-#: wt-status.c:1512
+#: wt-status.c:1509
 msgid "HEAD (no branch)"
 msgstr ""
 
-#: wt-status.c:1518
+#: wt-status.c:1515
 msgid "Initial commit on "
 msgstr ""
 
-#: wt-status.c:1550
+#: wt-status.c:1547
 msgid "gone"
 msgstr ""
 
-#: wt-status.c:1552 wt-status.c:1560
+#: wt-status.c:1549 wt-status.c:1557
 msgid "behind "
 msgstr ""
 
-#: compat/precompose_utf8.c:55 builtin/clone.c:357
+#: compat/precompose_utf8.c:55 builtin/clone.c:360
 #, c-format
 msgid "failed to unlink '%s'"
 msgstr ""
 
 #: builtin/add.c:22
 msgid "git add [options] [--] <pathspec>..."
@@ -1932,28 +1932,28 @@
 
 #: builtin/add.c:231
 msgid "The following paths are ignored by one of your .gitignore files:\n"
 msgstr ""
 
 #: builtin/add.c:248 builtin/clean.c:875 builtin/fetch.c:108 builtin/mv.c:110
-#: builtin/prune-packed.c:55 builtin/push.c:499 builtin/remote.c:1375
+#: builtin/prune-packed.c:55 builtin/push.c:499 builtin/remote.c:1372
 #: builtin/rm.c:269
 msgid "dry run"
 msgstr ""
 
 #: builtin/add.c:249 builtin/apply.c:4415 builtin/check-ignore.c:19
-#: builtin/commit.c:1362 builtin/count-objects.c:63 builtin/fsck.c:608
+#: builtin/commit.c:1326 builtin/count-objects.c:63 builtin/fsck.c:608
 #: builtin/log.c:1617 builtin/mv.c:109 builtin/read-tree.c:114
 msgid "be verbose"
 msgstr ""
 
 #: builtin/add.c:251
 msgid "interactive picking"
 msgstr ""
 
-#: builtin/add.c:252 builtin/checkout.c:1108 builtin/reset.c:286
+#: builtin/add.c:252 builtin/checkout.c:1126 builtin/reset.c:286
 msgid "select hunks interactively"
 msgstr ""
 
 #: builtin/add.c:253
 msgid "edit current diff and apply"
 msgstr ""
@@ -1992,16 +1992,12 @@
 
 #: builtin/add.c:286
 #, c-format
 msgid "Use -f if you really want to add them.\n"
 msgstr ""
 
-#: builtin/add.c:287
-msgid "no files added"
-msgstr ""
-
 #: builtin/add.c:293
 msgid "adding files failed"
 msgstr ""
 
 #: builtin/add.c:329
 msgid "-A and -u are mutually incompatible"
@@ -2268,13 +2264,13 @@
 
 #: builtin/apply.c:3653
 #, c-format
 msgid "Checking patch %s..."
 msgstr ""
 
-#: builtin/apply.c:3746 builtin/checkout.c:213 builtin/reset.c:135
+#: builtin/apply.c:3746 builtin/checkout.c:231 builtin/reset.c:135
 #, c-format
 msgid "make_cache_entry failed for path '%s'"
 msgstr ""
 
 #: builtin/apply.c:3889
 #, c-format
@@ -2347,13 +2343,13 @@
 msgstr ""
 
 #: builtin/apply.c:4245
 msgid "unable to read index file"
 msgstr ""
 
-#: builtin/apply.c:4362 builtin/apply.c:4365 builtin/clone.c:91
+#: builtin/apply.c:4362 builtin/apply.c:4365 builtin/clone.c:92
 #: builtin/fetch.c:93
 msgid "path"
 msgstr ""
 
 #: builtin/apply.c:4363
 msgid "don't apply changes matching the given path"
@@ -2880,14 +2876,14 @@
 
 #: builtin/branch.c:824
 msgid "act on remote-tracking branches"
 msgstr ""
 
 #: builtin/branch.c:827 builtin/branch.c:833 builtin/branch.c:854
-#: builtin/branch.c:860 builtin/commit.c:1622 builtin/commit.c:1623
-#: builtin/commit.c:1624 builtin/commit.c:1625 builtin/tag.c:616
+#: builtin/branch.c:860 builtin/commit.c:1586 builtin/commit.c:1587
+#: builtin/commit.c:1588 builtin/commit.c:1589 builtin/tag.c:616
 #: builtin/tag.c:622
 msgid "commit"
 msgstr ""
 
 #: builtin/branch.c:828 builtin/branch.c:834
 msgid "print only branches that contain the commit"
@@ -2927,13 +2923,13 @@
 
 #: builtin/branch.c:850
 msgid "edit the description for the branch"
 msgstr ""
 
 #: builtin/branch.c:851
-msgid "force creation (when already exists)"
+msgid "force creation, move/rename, deletion"
 msgstr ""
 
 #: builtin/branch.c:854
 msgid "print only not merged branches"
 msgstr ""
 
@@ -2946,108 +2942,108 @@
 msgstr ""
 
 #: builtin/branch.c:877
 msgid "Failed to resolve HEAD as a valid ref."
 msgstr ""
 
-#: builtin/branch.c:881 builtin/clone.c:634
+#: builtin/branch.c:881 builtin/clone.c:637
 msgid "HEAD not found below refs/heads!"
 msgstr ""
 
 #: builtin/branch.c:903
 msgid "--column and --verbose are incompatible"
 msgstr ""
 
-#: builtin/branch.c:909 builtin/branch.c:948
+#: builtin/branch.c:914 builtin/branch.c:953
 msgid "branch name required"
 msgstr ""
 
-#: builtin/branch.c:924
+#: builtin/branch.c:929
 msgid "Cannot give description to detached HEAD"
 msgstr ""
 
-#: builtin/branch.c:929
+#: builtin/branch.c:934
 msgid "cannot edit description of more than one branch"
 msgstr ""
 
-#: builtin/branch.c:936
+#: builtin/branch.c:941
 #, c-format
 msgid "No commit on branch '%s' yet."
 msgstr ""
 
-#: builtin/branch.c:939
+#: builtin/branch.c:944
 #, c-format
 msgid "No branch named '%s'."
 msgstr ""
 
-#: builtin/branch.c:954
+#: builtin/branch.c:959
 msgid "too many branches for a rename operation"
 msgstr ""
 
-#: builtin/branch.c:959
+#: builtin/branch.c:964
 msgid "too many branches to set new upstream"
 msgstr ""
 
-#: builtin/branch.c:963
+#: builtin/branch.c:968
 #, c-format
 msgid ""
 "could not set upstream of HEAD to %s when it does not point to any branch."
 msgstr ""
 
-#: builtin/branch.c:966 builtin/branch.c:988 builtin/branch.c:1009
+#: builtin/branch.c:971 builtin/branch.c:993 builtin/branch.c:1014
 #, c-format
 msgid "no such branch '%s'"
 msgstr ""
 
-#: builtin/branch.c:970
+#: builtin/branch.c:975
 #, c-format
 msgid "branch '%s' does not exist"
 msgstr ""
 
-#: builtin/branch.c:982
+#: builtin/branch.c:987
 msgid "too many branches to unset upstream"
 msgstr ""
 
-#: builtin/branch.c:986
+#: builtin/branch.c:991
 msgid "could not unset upstream of HEAD when it does not point to any branch."
 msgstr ""
 
-#: builtin/branch.c:992
+#: builtin/branch.c:997
 #, c-format
 msgid "Branch '%s' has no upstream information"
 msgstr ""
 
-#: builtin/branch.c:1006
+#: builtin/branch.c:1011
 msgid "it does not make sense to create 'HEAD' manually"
 msgstr ""
 
-#: builtin/branch.c:1012
+#: builtin/branch.c:1017
 msgid "-a and -r options to 'git branch' do not make sense with a branch name"
 msgstr ""
 
-#: builtin/branch.c:1015
+#: builtin/branch.c:1020
 #, c-format
 msgid ""
 "The --set-upstream flag is deprecated and will be removed. Consider using --"
 "track or --set-upstream-to\n"
 msgstr ""
 
-#: builtin/branch.c:1032
+#: builtin/branch.c:1037
 #, c-format
 msgid ""
 "\n"
 "If you wanted to make '%s' track '%s', do this:\n"
 "\n"
 msgstr ""
 
-#: builtin/branch.c:1033
+#: builtin/branch.c:1038
 #, c-format
 msgid "    git branch -d %s\n"
 msgstr ""
 
-#: builtin/branch.c:1034
+#: builtin/branch.c:1039
 #, c-format
 msgid "    git branch --set-upstream-to %s\n"
 msgstr ""
 
 #: builtin/bundle.c:47
 #, c-format
@@ -3059,49 +3055,49 @@
 msgstr ""
 
 #: builtin/bundle.c:60
 msgid "Need a repository to unbundle."
 msgstr ""
 
-#: builtin/cat-file.c:332
+#: builtin/cat-file.c:328
 msgid "git cat-file (-t|-s|-e|-p|<type>|--textconv) <object>"
 msgstr ""
 
-#: builtin/cat-file.c:333
+#: builtin/cat-file.c:329
 msgid "git cat-file (--batch|--batch-check) < <list_of_objects>"
 msgstr ""
 
-#: builtin/cat-file.c:370
+#: builtin/cat-file.c:366
 msgid "<type> can be one of: blob, tree, commit, tag"
 msgstr ""
 
-#: builtin/cat-file.c:371
+#: builtin/cat-file.c:367
 msgid "show object type"
 msgstr ""
 
-#: builtin/cat-file.c:372
+#: builtin/cat-file.c:368
 msgid "show object size"
 msgstr ""
 
-#: builtin/cat-file.c:374
+#: builtin/cat-file.c:370
 msgid "exit with zero when there's no error"
 msgstr ""
 
-#: builtin/cat-file.c:375
+#: builtin/cat-file.c:371
 msgid "pretty-print object's content"
 msgstr ""
 
-#: builtin/cat-file.c:377
+#: builtin/cat-file.c:373
 msgid "for blob objects, run textconv on object's content"
 msgstr ""
 
-#: builtin/cat-file.c:379
+#: builtin/cat-file.c:375
 msgid "show info and content of objects fed from the standard input"
 msgstr ""
 
-#: builtin/cat-file.c:382
+#: builtin/cat-file.c:378
 msgid "show info about objects fed from the standard input"
 msgstr ""
 
 #: builtin/check-attr.c:11
 msgid "git check-attr [-a | --all | attr...] [--] pathname..."
 msgstr ""
@@ -3123,13 +3119,13 @@
 msgstr ""
 
 #: builtin/check-attr.c:23 builtin/check-ignore.c:24
 msgid "terminate input and output records by a NUL character"
 msgstr ""
 
-#: builtin/check-ignore.c:18 builtin/checkout.c:1089 builtin/gc.c:274
+#: builtin/check-ignore.c:18 builtin/checkout.c:1107 builtin/gc.c:274
 msgid "suppress progress reporting"
 msgstr ""
 
 #: builtin/check-ignore.c:26
 msgid "show non-matching input paths"
 msgstr ""
@@ -3228,111 +3224,111 @@
 msgstr ""
 
 #: builtin/checkout.c:26
 msgid "git checkout [options] [<branch>] -- <file>..."
 msgstr ""
 
-#: builtin/checkout.c:114 builtin/checkout.c:147
+#: builtin/checkout.c:132 builtin/checkout.c:165
 #, c-format
 msgid "path '%s' does not have our version"
 msgstr ""
 
-#: builtin/checkout.c:116 builtin/checkout.c:149
+#: builtin/checkout.c:134 builtin/checkout.c:167
 #, c-format
 msgid "path '%s' does not have their version"
 msgstr ""
 
-#: builtin/checkout.c:132
+#: builtin/checkout.c:150
 #, c-format
 msgid "path '%s' does not have all necessary versions"
 msgstr ""
 
-#: builtin/checkout.c:176
+#: builtin/checkout.c:194
 #, c-format
 msgid "path '%s' does not have necessary versions"
 msgstr ""
 
-#: builtin/checkout.c:193
+#: builtin/checkout.c:211
 #, c-format
 msgid "path '%s': cannot merge"
 msgstr ""
 
-#: builtin/checkout.c:210
+#: builtin/checkout.c:228
 #, c-format
 msgid "Unable to add merge result for '%s'"
 msgstr ""
 
-#: builtin/checkout.c:231 builtin/checkout.c:234 builtin/checkout.c:237
-#: builtin/checkout.c:240
+#: builtin/checkout.c:249 builtin/checkout.c:252 builtin/checkout.c:255
+#: builtin/checkout.c:258
 #, c-format
 msgid "'%s' cannot be used with updating paths"
 msgstr ""
 
-#: builtin/checkout.c:243 builtin/checkout.c:246
+#: builtin/checkout.c:261 builtin/checkout.c:264
 #, c-format
 msgid "'%s' cannot be used with %s"
 msgstr ""
 
-#: builtin/checkout.c:249
+#: builtin/checkout.c:267
 #, c-format
 msgid "Cannot update paths and switch to branch '%s' at the same time."
 msgstr ""
 
-#: builtin/checkout.c:260 builtin/checkout.c:449
+#: builtin/checkout.c:278 builtin/checkout.c:467
 msgid "corrupt index file"
 msgstr ""
 
-#: builtin/checkout.c:320 builtin/checkout.c:327
+#: builtin/checkout.c:338 builtin/checkout.c:345
 #, c-format
 msgid "path '%s' is unmerged"
 msgstr ""
 
-#: builtin/checkout.c:471
+#: builtin/checkout.c:489
 msgid "you need to resolve your current index first"
 msgstr ""
 
-#: builtin/checkout.c:597
+#: builtin/checkout.c:615
 #, c-format
 msgid "Can not do reflog for '%s'\n"
 msgstr ""
 
-#: builtin/checkout.c:635
+#: builtin/checkout.c:653
 msgid "HEAD is now at"
 msgstr ""
 
-#: builtin/checkout.c:642
+#: builtin/checkout.c:660
 #, c-format
 msgid "Reset branch '%s'\n"
 msgstr ""
 
-#: builtin/checkout.c:645
+#: builtin/checkout.c:663
 #, c-format
 msgid "Already on '%s'\n"
 msgstr ""
 
-#: builtin/checkout.c:649
+#: builtin/checkout.c:667
 #, c-format
 msgid "Switched to and reset branch '%s'\n"
 msgstr ""
 
-#: builtin/checkout.c:651 builtin/checkout.c:1032
+#: builtin/checkout.c:669 builtin/checkout.c:1050
 #, c-format
 msgid "Switched to a new branch '%s'\n"
 msgstr ""
 
-#: builtin/checkout.c:653
+#: builtin/checkout.c:671
 #, c-format
 msgid "Switched to branch '%s'\n"
 msgstr ""
 
-#: builtin/checkout.c:705
+#: builtin/checkout.c:723
 #, c-format
 msgid " ... and %d more.\n"
 msgstr ""
 
-#: builtin/checkout.c:711
+#: builtin/checkout.c:729
 #, c-format
 msgid ""
 "Warning: you are leaving %d commit behind, not connected to\n"
 "any of your branches:\n"
 "\n"
 "%s\n"
@@ -3341,167 +3337,167 @@
 "any of your branches:\n"
 "\n"
 "%s\n"
 msgstr[0] ""
 msgstr[1] ""
 
-#: builtin/checkout.c:729
+#: builtin/checkout.c:747
 #, c-format
 msgid ""
 "If you want to keep them by creating a new branch, this may be a good time\n"
 "to do so with:\n"
 "\n"
 " git branch new_branch_name %s\n"
 "\n"
 msgstr ""
 
-#: builtin/checkout.c:759
+#: builtin/checkout.c:777
 msgid "internal error in revision walk"
 msgstr ""
 
-#: builtin/checkout.c:763
+#: builtin/checkout.c:781
 msgid "Previous HEAD position was"
 msgstr ""
 
-#: builtin/checkout.c:790 builtin/checkout.c:1027
+#: builtin/checkout.c:808 builtin/checkout.c:1045
 msgid "You are on a branch yet to be born"
 msgstr ""
 
-#: builtin/checkout.c:934
+#: builtin/checkout.c:952
 #, c-format
 msgid "only one reference expected, %d given."
 msgstr ""
 
-#: builtin/checkout.c:973
+#: builtin/checkout.c:991
 #, c-format
 msgid "invalid reference: %s"
 msgstr ""
 
-#: builtin/checkout.c:1002
+#: builtin/checkout.c:1020
 #, c-format
 msgid "reference is not a tree: %s"
 msgstr ""
 
-#: builtin/checkout.c:1041
+#: builtin/checkout.c:1059
 msgid "paths cannot be used with switching branches"
 msgstr ""
 
-#: builtin/checkout.c:1044 builtin/checkout.c:1048
+#: builtin/checkout.c:1062 builtin/checkout.c:1066
 #, c-format
 msgid "'%s' cannot be used with switching branches"
 msgstr ""
 
-#: builtin/checkout.c:1052 builtin/checkout.c:1055 builtin/checkout.c:1060
-#: builtin/checkout.c:1063
+#: builtin/checkout.c:1070 builtin/checkout.c:1073 builtin/checkout.c:1078
+#: builtin/checkout.c:1081
 #, c-format
 msgid "'%s' cannot be used with '%s'"
 msgstr ""
 
-#: builtin/checkout.c:1068
+#: builtin/checkout.c:1086
 #, c-format
 msgid "Cannot switch branch to a non-commit '%s'"
 msgstr ""
 
-#: builtin/checkout.c:1090 builtin/checkout.c:1092 builtin/clone.c:89
+#: builtin/checkout.c:1108 builtin/checkout.c:1110 builtin/clone.c:90
 #: builtin/remote.c:159 builtin/remote.c:161
 msgid "branch"
 msgstr ""
 
-#: builtin/checkout.c:1091
+#: builtin/checkout.c:1109
 msgid "create and checkout a new branch"
 msgstr ""
 
-#: builtin/checkout.c:1093
+#: builtin/checkout.c:1111
 msgid "create/reset and checkout a branch"
 msgstr ""
 
-#: builtin/checkout.c:1094
+#: builtin/checkout.c:1112
 msgid "create reflog for new branch"
 msgstr ""
 
-#: builtin/checkout.c:1095
+#: builtin/checkout.c:1113
 msgid "detach the HEAD at named commit"
 msgstr ""
 
-#: builtin/checkout.c:1096
+#: builtin/checkout.c:1114
 msgid "set upstream info for new branch"
 msgstr ""
 
-#: builtin/checkout.c:1098
+#: builtin/checkout.c:1116
 msgid "new-branch"
 msgstr ""
 
-#: builtin/checkout.c:1098
+#: builtin/checkout.c:1116
 msgid "new unparented branch"
 msgstr ""
 
-#: builtin/checkout.c:1099
+#: builtin/checkout.c:1117
 msgid "checkout our version for unmerged files"
 msgstr ""
 
-#: builtin/checkout.c:1101
+#: builtin/checkout.c:1119
 msgid "checkout their version for unmerged files"
 msgstr ""
 
-#: builtin/checkout.c:1103
+#: builtin/checkout.c:1121
 msgid "force checkout (throw away local modifications)"
 msgstr ""
 
-#: builtin/checkout.c:1104
+#: builtin/checkout.c:1122
 msgid "perform a 3-way merge with the new branch"
 msgstr ""
 
-#: builtin/checkout.c:1105 builtin/merge.c:226
+#: builtin/checkout.c:1123 builtin/merge.c:227
 msgid "update ignored files (default)"
 msgstr ""
 
-#: builtin/checkout.c:1106 builtin/log.c:1239 parse-options.h:245
+#: builtin/checkout.c:1124 builtin/log.c:1239 parse-options.h:245
 msgid "style"
 msgstr ""
 
-#: builtin/checkout.c:1107
+#: builtin/checkout.c:1125
 msgid "conflict style (merge or diff3)"
 msgstr ""
 
-#: builtin/checkout.c:1110
+#: builtin/checkout.c:1128
 msgid "do not limit pathspecs to sparse entries only"
 msgstr ""
 
-#: builtin/checkout.c:1112
+#: builtin/checkout.c:1130
 msgid "second guess 'git checkout no-such-branch'"
 msgstr ""
 
-#: builtin/checkout.c:1135
+#: builtin/checkout.c:1153
 msgid "-b, -B and --orphan are mutually exclusive"
 msgstr ""
 
-#: builtin/checkout.c:1152
+#: builtin/checkout.c:1170
 msgid "--track needs a branch name"
 msgstr ""
 
-#: builtin/checkout.c:1157
+#: builtin/checkout.c:1175
 msgid "Missing branch name; try -b"
 msgstr ""
 
-#: builtin/checkout.c:1194
+#: builtin/checkout.c:1212
 msgid "invalid path specification"
 msgstr ""
 
-#: builtin/checkout.c:1201
+#: builtin/checkout.c:1219
 #, c-format
 msgid ""
 "Cannot update paths and switch to branch '%s' at the same time.\n"
 "Did you intend to checkout '%s' which can not be resolved as commit?"
 msgstr ""
 
-#: builtin/checkout.c:1206
+#: builtin/checkout.c:1224
 #, c-format
 msgid "git checkout: --detach does not take a path argument '%s'"
 msgstr ""
 
-#: builtin/checkout.c:1210
+#: builtin/checkout.c:1228
 msgid ""
 "git checkout: --ours/--theirs, --force and --merge are incompatible when\n"
 "checking out of the index."
 msgstr ""
 
 #: builtin/clean.c:26
@@ -3661,260 +3657,276 @@
 msgstr ""
 
 #: builtin/clone.c:37
 msgid "git clone [options] [--] <repo> [<dir>]"
 msgstr ""
 
-#: builtin/clone.c:65 builtin/fetch.c:112 builtin/merge.c:223
+#: builtin/clone.c:66 builtin/fetch.c:112 builtin/merge.c:224
 #: builtin/push.c:514
 msgid "force progress reporting"
 msgstr ""
 
-#: builtin/clone.c:67
+#: builtin/clone.c:68
 msgid "don't create a checkout"
 msgstr ""
 
-#: builtin/clone.c:68 builtin/clone.c:70 builtin/init-db.c:488
+#: builtin/clone.c:69 builtin/clone.c:71 builtin/init-db.c:496
 msgid "create a bare repository"
 msgstr ""
 
-#: builtin/clone.c:72
+#: builtin/clone.c:73
 msgid "create a mirror repository (implies bare)"
 msgstr ""
 
-#: builtin/clone.c:74
+#: builtin/clone.c:75
 msgid "to clone from a local repository"
 msgstr ""
 
-#: builtin/clone.c:76
+#: builtin/clone.c:77
 msgid "don't use local hardlinks, always copy"
 msgstr ""
 
-#: builtin/clone.c:78
+#: builtin/clone.c:79
 msgid "setup as shared repository"
 msgstr ""
 
-#: builtin/clone.c:80 builtin/clone.c:82
+#: builtin/clone.c:81 builtin/clone.c:83
 msgid "initialize submodules in the clone"
 msgstr ""
 
-#: builtin/clone.c:83 builtin/init-db.c:485
+#: builtin/clone.c:84 builtin/init-db.c:493
 msgid "template-directory"
 msgstr ""
 
-#: builtin/clone.c:84 builtin/init-db.c:486
+#: builtin/clone.c:85 builtin/init-db.c:494
 msgid "directory from which templates will be used"
 msgstr ""
 
-#: builtin/clone.c:86
+#: builtin/clone.c:87
 msgid "reference repository"
 msgstr ""
 
-#: builtin/clone.c:87 builtin/column.c:26 builtin/merge-file.c:44
+#: builtin/clone.c:88 builtin/column.c:26 builtin/merge-file.c:44
 msgid "name"
 msgstr ""
 
-#: builtin/clone.c:88
+#: builtin/clone.c:89
 msgid "use <name> instead of 'origin' to track upstream"
 msgstr ""
 
-#: builtin/clone.c:90
+#: builtin/clone.c:91
 msgid "checkout <branch> instead of the remote's HEAD"
 msgstr ""
 
-#: builtin/clone.c:92
+#: builtin/clone.c:93
 msgid "path to git-upload-pack on the remote"
 msgstr ""
 
-#: builtin/clone.c:93 builtin/fetch.c:113 builtin/grep.c:659
+#: builtin/clone.c:94 builtin/fetch.c:113 builtin/grep.c:659
 msgid "depth"
 msgstr ""
 
-#: builtin/clone.c:94
+#: builtin/clone.c:95
 msgid "create a shallow clone of that depth"
 msgstr ""
 
-#: builtin/clone.c:96
+#: builtin/clone.c:97
 msgid "clone only one branch, HEAD or --branch"
 msgstr ""
 
-#: builtin/clone.c:97 builtin/init-db.c:494
+#: builtin/clone.c:99
+msgid "use --reference only while cloning"
+msgstr ""
+
+#: builtin/clone.c:100 builtin/init-db.c:502
 msgid "gitdir"
 msgstr ""
 
-#: builtin/clone.c:98 builtin/init-db.c:495
+#: builtin/clone.c:101 builtin/init-db.c:503
 msgid "separate git dir from working tree"
 msgstr ""
 
-#: builtin/clone.c:99
+#: builtin/clone.c:102
 msgid "key=value"
 msgstr ""
 
-#: builtin/clone.c:100
+#: builtin/clone.c:103
 msgid "set config inside the new repository"
 msgstr ""
 
-#: builtin/clone.c:253
+#: builtin/clone.c:256
 #, c-format
 msgid "reference repository '%s' is not a local repository."
 msgstr ""
 
-#: builtin/clone.c:257
+#: builtin/clone.c:260
 #, c-format
 msgid "reference repository '%s' is shallow"
 msgstr ""
 
-#: builtin/clone.c:260
+#: builtin/clone.c:263
 #, c-format
 msgid "reference repository '%s' is grafted"
 msgstr ""
 
-#: builtin/clone.c:322
+#: builtin/clone.c:325
 #, c-format
 msgid "failed to create directory '%s'"
 msgstr ""
 
-#: builtin/clone.c:324 builtin/diff.c:84
+#: builtin/clone.c:327 builtin/diff.c:84
 #, c-format
 msgid "failed to stat '%s'"
 msgstr ""
 
-#: builtin/clone.c:326
+#: builtin/clone.c:329
 #, c-format
 msgid "%s exists and is not a directory"
 msgstr ""
 
-#: builtin/clone.c:340
+#: builtin/clone.c:343
 #, c-format
 msgid "failed to stat %s\n"
 msgstr ""
 
-#: builtin/clone.c:362
+#: builtin/clone.c:365
 #, c-format
 msgid "failed to create link '%s'"
 msgstr ""
 
-#: builtin/clone.c:366
+#: builtin/clone.c:369
 #, c-format
 msgid "failed to copy file to '%s'"
 msgstr ""
 
-#: builtin/clone.c:389 builtin/clone.c:563
+#: builtin/clone.c:392 builtin/clone.c:566
 #, c-format
 msgid "done.\n"
 msgstr ""
 
-#: builtin/clone.c:401
+#: builtin/clone.c:404
 msgid ""
 "Clone succeeded, but checkout failed.\n"
 "You can inspect what was checked out with 'git status'\n"
 "and retry the checkout with 'git checkout -f HEAD'\n"
 msgstr ""
 
-#: builtin/clone.c:478
+#: builtin/clone.c:481
 #, c-format
 msgid "Could not find remote branch %s to clone."
 msgstr ""
 
-#: builtin/clone.c:558
+#: builtin/clone.c:561
 #, c-format
 msgid "Checking connectivity... "
 msgstr ""
 
-#: builtin/clone.c:561
+#: builtin/clone.c:564
 msgid "remote did not send all necessary objects"
 msgstr ""
 
-#: builtin/clone.c:625
+#: builtin/clone.c:628
 msgid "remote HEAD refers to nonexistent ref, unable to checkout.\n"
 msgstr ""
 
-#: builtin/clone.c:656
+#: builtin/clone.c:659
 msgid "unable to checkout working tree"
 msgstr ""
 
-#: builtin/clone.c:765
+#: builtin/clone.c:746
+msgid "cannot repack to clean up"
+msgstr ""
+
+#: builtin/clone.c:748
+msgid "cannot unlink temporary alternates file"
+msgstr ""
+
+#: builtin/clone.c:778
 msgid "Too many arguments."
 msgstr ""
 
-#: builtin/clone.c:769
+#: builtin/clone.c:782
 msgid "You must specify a repository to clone."
 msgstr ""
 
-#: builtin/clone.c:780
+#: builtin/clone.c:793
 #, c-format
 msgid "--bare and --origin %s options are incompatible."
 msgstr ""
 
-#: builtin/clone.c:783
+#: builtin/clone.c:796
 msgid "--bare and --separate-git-dir are incompatible."
 msgstr ""
 
-#: builtin/clone.c:796
+#: builtin/clone.c:809
 #, c-format
 msgid "repository '%s' does not exist"
 msgstr ""
 
-#: builtin/clone.c:802 builtin/fetch.c:1155
+#: builtin/clone.c:815 builtin/fetch.c:1155
 #, c-format
 msgid "depth %s is not a positive number"
 msgstr ""
 
-#: builtin/clone.c:812
+#: builtin/clone.c:825
 #, c-format
 msgid "destination path '%s' already exists and is not an empty directory."
 msgstr ""
 
-#: builtin/clone.c:822
+#: builtin/clone.c:835
 #, c-format
 msgid "working tree '%s' already exists."
 msgstr ""
 
-#: builtin/clone.c:835 builtin/clone.c:847
+#: builtin/clone.c:848 builtin/clone.c:860
 #, c-format
 msgid "could not create leading directories of '%s'"
 msgstr ""
 
-#: builtin/clone.c:838
+#: builtin/clone.c:851
 #, c-format
 msgid "could not create work tree dir '%s'."
 msgstr ""
 
-#: builtin/clone.c:857
+#: builtin/clone.c:870
 #, c-format
 msgid "Cloning into bare repository '%s'...\n"
 msgstr ""
 
-#: builtin/clone.c:859
+#: builtin/clone.c:872
 #, c-format
 msgid "Cloning into '%s'...\n"
 msgstr ""
 
-#: builtin/clone.c:895
+#: builtin/clone.c:897
+msgid "--dissociate given, but there is no --reference"
+msgstr ""
+
+#: builtin/clone.c:912
 msgid "--depth is ignored in local clones; use file:// instead."
 msgstr ""
 
-#: builtin/clone.c:898
+#: builtin/clone.c:915
 msgid "source repository is shallow, ignoring --local"
 msgstr ""
 
-#: builtin/clone.c:903
+#: builtin/clone.c:920
 msgid "--local is ignored"
 msgstr ""
 
-#: builtin/clone.c:907
+#: builtin/clone.c:924
 #, c-format
 msgid "Don't know how to clone %s"
 msgstr ""
 
-#: builtin/clone.c:958 builtin/clone.c:966
+#: builtin/clone.c:975 builtin/clone.c:983
 #, c-format
 msgid "Remote branch %s not found in upstream %s"
 msgstr ""
 
-#: builtin/clone.c:969
+#: builtin/clone.c:986
 msgid "You appear to have cloned an empty repository."
 msgstr ""
 
 #: builtin/column.c:9
 msgid "git column [options]"
 msgstr ""
@@ -4055,455 +4067,450 @@
 msgstr ""
 
 #: builtin/commit.c:473
 msgid "unable to write temporary index file"
 msgstr ""
 
-#: builtin/commit.c:592
+#: builtin/commit.c:584
 #, c-format
 msgid "commit '%s' lacks author header"
 msgstr ""
 
-#: builtin/commit.c:594
+#: builtin/commit.c:586
 #, c-format
 msgid "commit '%s' has malformed author line"
 msgstr ""
 
-#: builtin/commit.c:613
+#: builtin/commit.c:605
 msgid "malformed --author parameter"
 msgstr ""
 
-#: builtin/commit.c:621
+#: builtin/commit.c:613
 #, c-format
 msgid "invalid date format: %s"
 msgstr ""
 
-#: builtin/commit.c:642
-#, c-format
-msgid "Malformed ident string: '%s'"
-msgstr ""
-
-#: builtin/commit.c:675
+#: builtin/commit.c:657
 msgid ""
 "unable to select a comment character that is not used\n"
 "in the current commit message"
 msgstr ""
 
-#: builtin/commit.c:712 builtin/commit.c:745 builtin/commit.c:1120
+#: builtin/commit.c:694 builtin/commit.c:727 builtin/commit.c:1084
 #, c-format
 msgid "could not lookup commit %s"
 msgstr ""
 
-#: builtin/commit.c:724 builtin/shortlog.c:273
+#: builtin/commit.c:706 builtin/shortlog.c:273
 #, c-format
 msgid "(reading log message from standard input)\n"
 msgstr ""
 
-#: builtin/commit.c:726
+#: builtin/commit.c:708
 msgid "could not read log from standard input"
 msgstr ""
 
-#: builtin/commit.c:730
+#: builtin/commit.c:712
 #, c-format
 msgid "could not read log file '%s'"
 msgstr ""
 
-#: builtin/commit.c:752
+#: builtin/commit.c:734
 msgid "could not read MERGE_MSG"
 msgstr ""
 
-#: builtin/commit.c:756
+#: builtin/commit.c:738
 msgid "could not read SQUASH_MSG"
 msgstr ""
 
-#: builtin/commit.c:760
+#: builtin/commit.c:742
 #, c-format
 msgid "could not read '%s'"
 msgstr ""
 
-#: builtin/commit.c:831
+#: builtin/commit.c:789
 msgid "could not write commit template"
 msgstr ""
 
-#: builtin/commit.c:849
+#: builtin/commit.c:807
 #, c-format
 msgid ""
 "\n"
 "It looks like you may be committing a merge.\n"
 "If this is not correct, please remove the file\n"
 "\t%s\n"
 "and try again.\n"
 msgstr ""
 
-#: builtin/commit.c:854
+#: builtin/commit.c:812
 #, c-format
 msgid ""
 "\n"
 "It looks like you may be committing a cherry-pick.\n"
 "If this is not correct, please remove the file\n"
 "\t%s\n"
 "and try again.\n"
 msgstr ""
 
-#: builtin/commit.c:867
+#: builtin/commit.c:825
 #, c-format
 msgid ""
 "Please enter the commit message for your changes. Lines starting\n"
 "with '%c' will be ignored, and an empty message aborts the commit.\n"
 msgstr ""
 
-#: builtin/commit.c:874
+#: builtin/commit.c:832
 #, c-format
 msgid ""
 "Please enter the commit message for your changes. Lines starting\n"
 "with '%c' will be kept; you may remove them yourself if you want to.\n"
 "An empty message aborts the commit.\n"
 msgstr ""
 
-#: builtin/commit.c:888
+#: builtin/commit.c:852
 #, c-format
 msgid "%sAuthor:    %.*s <%.*s>"
 msgstr ""
 
-#: builtin/commit.c:896
+#: builtin/commit.c:860
 #, c-format
 msgid "%sDate:      %s"
 msgstr ""
 
-#: builtin/commit.c:903
+#: builtin/commit.c:867
 #, c-format
 msgid "%sCommitter: %.*s <%.*s>"
 msgstr ""
 
-#: builtin/commit.c:921
+#: builtin/commit.c:885
 msgid "Cannot read index"
 msgstr ""
 
-#: builtin/commit.c:978
+#: builtin/commit.c:942
 msgid "Error building trees"
 msgstr ""
 
-#: builtin/commit.c:993 builtin/tag.c:495
+#: builtin/commit.c:957 builtin/tag.c:495
 #, c-format
 msgid "Please supply the message using either -m or -F option.\n"
 msgstr ""
 
-#: builtin/commit.c:1095
+#: builtin/commit.c:1059
 #, c-format
 msgid "No existing author found with '%s'"
 msgstr ""
 
-#: builtin/commit.c:1110 builtin/commit.c:1350
+#: builtin/commit.c:1074 builtin/commit.c:1314
 #, c-format
 msgid "Invalid untracked files mode '%s'"
 msgstr ""
 
-#: builtin/commit.c:1147
+#: builtin/commit.c:1111
 msgid "--long and -z are incompatible"
 msgstr ""
 
-#: builtin/commit.c:1177
+#: builtin/commit.c:1141
 msgid "Using both --reset-author and --author does not make sense"
 msgstr ""
 
-#: builtin/commit.c:1186
+#: builtin/commit.c:1150
 msgid "You have nothing to amend."
 msgstr ""
 
-#: builtin/commit.c:1189
+#: builtin/commit.c:1153
 msgid "You are in the middle of a merge -- cannot amend."
 msgstr ""
 
-#: builtin/commit.c:1191
+#: builtin/commit.c:1155
 msgid "You are in the middle of a cherry-pick -- cannot amend."
 msgstr ""
 
-#: builtin/commit.c:1194
+#: builtin/commit.c:1158
 msgid "Options --squash and --fixup cannot be used together"
 msgstr ""
 
-#: builtin/commit.c:1204
+#: builtin/commit.c:1168
 msgid "Only one of -c/-C/-F/--fixup can be used."
 msgstr ""
 
-#: builtin/commit.c:1206
+#: builtin/commit.c:1170
 msgid "Option -m cannot be combined with -c/-C/-F/--fixup."
 msgstr ""
 
-#: builtin/commit.c:1214
+#: builtin/commit.c:1178
 msgid "--reset-author can be used only with -C, -c or --amend."
 msgstr ""
 
-#: builtin/commit.c:1231
+#: builtin/commit.c:1195
 msgid "Only one of --include/--only/--all/--interactive/--patch can be used."
 msgstr ""
 
-#: builtin/commit.c:1233
+#: builtin/commit.c:1197
 msgid "No paths with --include/--only does not make sense."
 msgstr ""
 
-#: builtin/commit.c:1235
+#: builtin/commit.c:1199
 msgid "Clever... amending the last one with dirty index."
 msgstr ""
 
-#: builtin/commit.c:1237
+#: builtin/commit.c:1201
 msgid "Explicit paths specified without -i or -o; assuming --only paths..."
 msgstr ""
 
-#: builtin/commit.c:1249 builtin/tag.c:728
+#: builtin/commit.c:1213 builtin/tag.c:728
 #, c-format
 msgid "Invalid cleanup mode %s"
 msgstr ""
 
-#: builtin/commit.c:1254
+#: builtin/commit.c:1218
 msgid "Paths with -a does not make sense."
 msgstr ""
 
-#: builtin/commit.c:1364 builtin/commit.c:1644
+#: builtin/commit.c:1328 builtin/commit.c:1608
 msgid "show status concisely"
 msgstr ""
 
-#: builtin/commit.c:1366 builtin/commit.c:1646
+#: builtin/commit.c:1330 builtin/commit.c:1610
 msgid "show branch information"
 msgstr ""
 
-#: builtin/commit.c:1368 builtin/commit.c:1648 builtin/push.c:500
+#: builtin/commit.c:1332 builtin/commit.c:1612 builtin/push.c:500
 msgid "machine-readable output"
 msgstr ""
 
-#: builtin/commit.c:1371 builtin/commit.c:1650
+#: builtin/commit.c:1335 builtin/commit.c:1614
 msgid "show status in long format (default)"
 msgstr ""
 
-#: builtin/commit.c:1374 builtin/commit.c:1653
+#: builtin/commit.c:1338 builtin/commit.c:1617
 msgid "terminate entries with NUL"
 msgstr ""
 
-#: builtin/commit.c:1376 builtin/commit.c:1656 builtin/fast-export.c:980
+#: builtin/commit.c:1340 builtin/commit.c:1620 builtin/fast-export.c:980
 #: builtin/fast-export.c:983 builtin/tag.c:603
 msgid "mode"
 msgstr ""
 
-#: builtin/commit.c:1377 builtin/commit.c:1656
+#: builtin/commit.c:1341 builtin/commit.c:1620
 msgid "show untracked files, optional modes: all, normal, no. (Default: all)"
 msgstr ""
 
-#: builtin/commit.c:1380
+#: builtin/commit.c:1344
 msgid "show ignored files"
 msgstr ""
 
-#: builtin/commit.c:1381 parse-options.h:153
+#: builtin/commit.c:1345 parse-options.h:153
 msgid "when"
 msgstr ""
 
-#: builtin/commit.c:1382
+#: builtin/commit.c:1346
 msgid ""
 "ignore changes to submodules, optional when: all, dirty, untracked. "
 "(Default: all)"
 msgstr ""
 
-#: builtin/commit.c:1384
+#: builtin/commit.c:1348
 msgid "list untracked files in columns"
 msgstr ""
 
-#: builtin/commit.c:1471
+#: builtin/commit.c:1435
 msgid "couldn't look up newly created commit"
 msgstr ""
 
-#: builtin/commit.c:1473
+#: builtin/commit.c:1437
 msgid "could not parse newly created commit"
 msgstr ""
 
-#: builtin/commit.c:1518
+#: builtin/commit.c:1482
 msgid "detached HEAD"
 msgstr ""
 
-#: builtin/commit.c:1521
+#: builtin/commit.c:1485
 msgid " (root-commit)"
 msgstr ""
 
-#: builtin/commit.c:1614
+#: builtin/commit.c:1578
 msgid "suppress summary after successful commit"
 msgstr ""
 
-#: builtin/commit.c:1615
+#: builtin/commit.c:1579
 msgid "show diff in commit message template"
 msgstr ""
 
-#: builtin/commit.c:1617
+#: builtin/commit.c:1581
 msgid "Commit message options"
 msgstr ""
 
-#: builtin/commit.c:1618 builtin/tag.c:601
+#: builtin/commit.c:1582 builtin/tag.c:601
 msgid "read message from file"
 msgstr ""
 
-#: builtin/commit.c:1619
+#: builtin/commit.c:1583
 msgid "author"
 msgstr ""
 
-#: builtin/commit.c:1619
+#: builtin/commit.c:1583
 msgid "override author for commit"
 msgstr ""
 
-#: builtin/commit.c:1620 builtin/gc.c:275
+#: builtin/commit.c:1584 builtin/gc.c:275
 msgid "date"
 msgstr ""
 
-#: builtin/commit.c:1620
+#: builtin/commit.c:1584
 msgid "override date for commit"
 msgstr ""
 
-#: builtin/commit.c:1621 builtin/merge.c:217 builtin/notes.c:408
-#: builtin/notes.c:565 builtin/tag.c:599
+#: builtin/commit.c:1585 builtin/merge.c:218 builtin/notes.c:391
+#: builtin/notes.c:554 builtin/tag.c:599
 msgid "message"
 msgstr ""
 
-#: builtin/commit.c:1621
+#: builtin/commit.c:1585
 msgid "commit message"
 msgstr ""
 
-#: builtin/commit.c:1622
+#: builtin/commit.c:1586
 msgid "reuse and edit message from specified commit"
 msgstr ""
 
-#: builtin/commit.c:1623
+#: builtin/commit.c:1587
 msgid "reuse message from specified commit"
 msgstr ""
 
-#: builtin/commit.c:1624
+#: builtin/commit.c:1588
 msgid "use autosquash formatted message to fixup specified commit"
 msgstr ""
 
-#: builtin/commit.c:1625
+#: builtin/commit.c:1589
 msgid "use autosquash formatted message to squash specified commit"
 msgstr ""
 
-#: builtin/commit.c:1626
+#: builtin/commit.c:1590
 msgid "the commit is authored by me now (used with -C/-c/--amend)"
 msgstr ""
 
-#: builtin/commit.c:1627 builtin/log.c:1191 builtin/revert.c:86
+#: builtin/commit.c:1591 builtin/log.c:1191 builtin/revert.c:86
 msgid "add Signed-off-by:"
 msgstr ""
 
-#: builtin/commit.c:1628
+#: builtin/commit.c:1592
 msgid "use specified template file"
 msgstr ""
 
-#: builtin/commit.c:1629
+#: builtin/commit.c:1593
 msgid "force edit of commit"
 msgstr ""
 
-#: builtin/commit.c:1630
+#: builtin/commit.c:1594
 msgid "default"
 msgstr ""
 
-#: builtin/commit.c:1630 builtin/tag.c:604
+#: builtin/commit.c:1594 builtin/tag.c:604
 msgid "how to strip spaces and #comments from message"
 msgstr ""
 
-#: builtin/commit.c:1631
+#: builtin/commit.c:1595
 msgid "include status in commit message template"
 msgstr ""
 
-#: builtin/commit.c:1632 builtin/merge.c:224 builtin/revert.c:92
+#: builtin/commit.c:1596 builtin/merge.c:225 builtin/revert.c:92
 #: builtin/tag.c:605
 msgid "key-id"
 msgstr ""
 
-#: builtin/commit.c:1633 builtin/merge.c:225 builtin/revert.c:93
+#: builtin/commit.c:1597 builtin/merge.c:226 builtin/revert.c:93
 msgid "GPG sign commit"
 msgstr ""
 
-#: builtin/commit.c:1636
+#: builtin/commit.c:1600
 msgid "Commit contents options"
 msgstr ""
 
-#: builtin/commit.c:1637
+#: builtin/commit.c:1601
 msgid "commit all changed files"
 msgstr ""
 
-#: builtin/commit.c:1638
+#: builtin/commit.c:1602
 msgid "add specified files to index for commit"
 msgstr ""
 
-#: builtin/commit.c:1639
+#: builtin/commit.c:1603
 msgid "interactively add files"
 msgstr ""
 
-#: builtin/commit.c:1640
+#: builtin/commit.c:1604
 msgid "interactively add changes"
 msgstr ""
 
-#: builtin/commit.c:1641
+#: builtin/commit.c:1605
 msgid "commit only specified files"
 msgstr ""
 
-#: builtin/commit.c:1642
+#: builtin/commit.c:1606
 msgid "bypass pre-commit hook"
 msgstr ""
 
-#: builtin/commit.c:1643
+#: builtin/commit.c:1607
 msgid "show what would be committed"
 msgstr ""
 
-#: builtin/commit.c:1654
+#: builtin/commit.c:1618
 msgid "amend previous commit"
 msgstr ""
 
-#: builtin/commit.c:1655
+#: builtin/commit.c:1619
 msgid "bypass post-rewrite hook"
 msgstr ""
 
-#: builtin/commit.c:1660
+#: builtin/commit.c:1624
 msgid "ok to record an empty change"
 msgstr ""
 
-#: builtin/commit.c:1662
+#: builtin/commit.c:1626
 msgid "ok to record a change with an empty message"
 msgstr ""
 
-#: builtin/commit.c:1691
+#: builtin/commit.c:1655
 msgid "could not parse HEAD commit"
 msgstr ""
 
-#: builtin/commit.c:1730 builtin/merge.c:518
+#: builtin/commit.c:1694 builtin/merge.c:519
 #, c-format
 msgid "could not open '%s' for reading"
 msgstr ""
 
-#: builtin/commit.c:1737
+#: builtin/commit.c:1701
 #, c-format
 msgid "Corrupt MERGE_HEAD file (%s)"
 msgstr ""
 
-#: builtin/commit.c:1744
+#: builtin/commit.c:1708
 msgid "could not read MERGE_MODE"
 msgstr ""
 
-#: builtin/commit.c:1763
+#: builtin/commit.c:1727
 #, c-format
 msgid "could not read commit message: %s"
 msgstr ""
 
-#: builtin/commit.c:1774
+#: builtin/commit.c:1738
 #, c-format
 msgid "Aborting commit; you did not edit the message.\n"
 msgstr ""
 
-#: builtin/commit.c:1779
+#: builtin/commit.c:1743
 #, c-format
 msgid "Aborting commit due to empty commit message.\n"
 msgstr ""
 
-#: builtin/commit.c:1794 builtin/merge.c:850 builtin/merge.c:875
+#: builtin/commit.c:1758 builtin/merge.c:851 builtin/merge.c:876
 msgid "failed to write commit object"
 msgstr ""
 
-#: builtin/commit.c:1827
+#: builtin/commit.c:1791
 msgid ""
 "Repository has been updated, but unable to write\n"
 "new_index file. Check that disk is not full and quota is\n"
 "not exceeded, and then \"git reset HEAD\" to recover."
 msgstr ""
 
@@ -4588,22 +4595,18 @@
 msgstr ""
 
 #: builtin/config.c:71
 msgid "open an editor"
 msgstr ""
 
-#: builtin/config.c:72 builtin/config.c:73
-msgid "slot"
-msgstr ""
-
 #: builtin/config.c:72
-msgid "find the color configured: [default]"
+msgid "find the color configured: slot [default]"
 msgstr ""
 
 #: builtin/config.c:73
-msgid "find the color setting: [stdout-is-tty]"
+msgid "find the color setting: slot [stdout-is-tty]"
 msgstr ""
 
 #: builtin/config.c:74
 msgid "Type"
 msgstr ""
 
@@ -4632,27 +4635,27 @@
 msgstr ""
 
 #: builtin/config.c:81
 msgid "respect include directives on lookup"
 msgstr ""
 
-#: builtin/config.c:315
+#: builtin/config.c:316
 msgid "unable to parse default color value"
 msgstr ""
 
-#: builtin/config.c:455
+#: builtin/config.c:457
 #, c-format
 msgid ""
 "# This is Git's per-user configuration file.\n"
 "[core]\n"
 "# Please adapt and uncomment the following lines:\n"
 "#\tuser = %s\n"
 "#\temail = %s\n"
 msgstr ""
 
-#: builtin/config.c:590
+#: builtin/config.c:589
 #, c-format
 msgid "cannot create configuration file %s"
 msgstr ""
 
 #: builtin/count-objects.c:55
 msgid "git count-objects [-v] [-H | --human-readable]"
@@ -5065,13 +5068,13 @@
 msgstr ""
 
 #: builtin/fetch.c:798
 msgid "[deleted]"
 msgstr ""
 
-#: builtin/fetch.c:799 builtin/remote.c:1063
+#: builtin/fetch.c:799 builtin/remote.c:1060
 msgid "(none)"
 msgstr ""
 
 #: builtin/fetch.c:818
 #, c-format
 msgid "Refusing to fetch into current branch %s of non-bare repository"
@@ -5138,80 +5141,80 @@
 msgstr ""
 
 #: builtin/fmt-merge-msg.c:13
 msgid "git fmt-merge-msg [-m <message>] [--log[=<n>]|--no-log] [--file <file>]"
 msgstr ""
 
-#: builtin/fmt-merge-msg.c:663 builtin/fmt-merge-msg.c:666 builtin/grep.c:698
-#: builtin/merge.c:197 builtin/repack.c:179 builtin/repack.c:183
-#: builtin/show-branch.c:654 builtin/show-ref.c:178 builtin/tag.c:590
+#: builtin/fmt-merge-msg.c:662 builtin/fmt-merge-msg.c:665 builtin/grep.c:698
+#: builtin/merge.c:198 builtin/repack.c:178 builtin/repack.c:182
+#: builtin/show-branch.c:657 builtin/show-ref.c:178 builtin/tag.c:590
 #: parse-options.h:132 parse-options.h:239
 msgid "n"
 msgstr ""
 
-#: builtin/fmt-merge-msg.c:664
+#: builtin/fmt-merge-msg.c:663
 msgid "populate log with at most <n> entries from shortlog"
 msgstr ""
 
-#: builtin/fmt-merge-msg.c:667
+#: builtin/fmt-merge-msg.c:666
 msgid "alias for --log (deprecated)"
 msgstr ""
 
-#: builtin/fmt-merge-msg.c:670
+#: builtin/fmt-merge-msg.c:669
 msgid "text"
 msgstr ""
 
-#: builtin/fmt-merge-msg.c:671
+#: builtin/fmt-merge-msg.c:670
 msgid "use <text> as start of message"
 msgstr ""
 
-#: builtin/fmt-merge-msg.c:672
+#: builtin/fmt-merge-msg.c:671
 msgid "file to read from"
 msgstr ""
 
 #: builtin/for-each-ref.c:676
 msgid "unable to parse format"
 msgstr ""
 
-#: builtin/for-each-ref.c:1057
+#: builtin/for-each-ref.c:1064
 msgid "git for-each-ref [options] [<pattern>]"
 msgstr ""
 
-#: builtin/for-each-ref.c:1072
+#: builtin/for-each-ref.c:1079
 msgid "quote placeholders suitably for shells"
 msgstr ""
 
-#: builtin/for-each-ref.c:1074
+#: builtin/for-each-ref.c:1081
 msgid "quote placeholders suitably for perl"
 msgstr ""
 
-#: builtin/for-each-ref.c:1076
+#: builtin/for-each-ref.c:1083
 msgid "quote placeholders suitably for python"
 msgstr ""
 
-#: builtin/for-each-ref.c:1078
-msgid "quote placeholders suitably for tcl"
+#: builtin/for-each-ref.c:1085
+msgid "quote placeholders suitably for Tcl"
 msgstr ""
 
-#: builtin/for-each-ref.c:1081
+#: builtin/for-each-ref.c:1088
 msgid "show only <n> matched refs"
 msgstr ""
 
-#: builtin/for-each-ref.c:1082 builtin/replace.c:438
+#: builtin/for-each-ref.c:1089 builtin/replace.c:438
 msgid "format"
 msgstr ""
 
-#: builtin/for-each-ref.c:1082
+#: builtin/for-each-ref.c:1089
 msgid "format to use for the output"
 msgstr ""
 
-#: builtin/for-each-ref.c:1083
+#: builtin/for-each-ref.c:1090
 msgid "key"
 msgstr ""
 
-#: builtin/for-each-ref.c:1084
+#: builtin/for-each-ref.c:1091
 msgid "field name to sort on"
 msgstr ""
 
 #: builtin/fsck.c:147 builtin/prune.c:136
 msgid "Checking connectivity"
 msgstr ""
@@ -5646,67 +5649,67 @@
 #, c-format
 msgid ""
 "'%s': cmd for supported man viewer.\n"
 "Please consider using 'man.<tool>.path' instead."
 msgstr ""
 
-#: builtin/help.c:352
+#: builtin/help.c:354
 #, c-format
 msgid "'%s': unknown man viewer."
 msgstr ""
 
-#: builtin/help.c:369
+#: builtin/help.c:371
 msgid "no man viewer handled the request"
 msgstr ""
 
-#: builtin/help.c:377
+#: builtin/help.c:379
 msgid "no info viewer handled the request"
 msgstr ""
 
-#: builtin/help.c:423
+#: builtin/help.c:428
 msgid "Defining attributes per path"
 msgstr ""
 
-#: builtin/help.c:424
+#: builtin/help.c:429
 msgid "Everyday Git With 20 Commands Or So"
 msgstr ""
 
-#: builtin/help.c:425
+#: builtin/help.c:430
 msgid "A Git glossary"
 msgstr ""
 
-#: builtin/help.c:426
+#: builtin/help.c:431
 msgid "Specifies intentionally untracked files to ignore"
 msgstr ""
 
-#: builtin/help.c:427
+#: builtin/help.c:432
 msgid "Defining submodule properties"
 msgstr ""
 
-#: builtin/help.c:428
+#: builtin/help.c:433
 msgid "Specifying revisions and ranges for Git"
 msgstr ""
 
-#: builtin/help.c:429
+#: builtin/help.c:434
 msgid "A tutorial introduction to Git (for version 1.5.1 or newer)"
 msgstr ""
 
-#: builtin/help.c:430
+#: builtin/help.c:435
 msgid "An overview of recommended workflows with Git"
 msgstr ""
 
-#: builtin/help.c:442
+#: builtin/help.c:447
 msgid "The common Git guides are:\n"
 msgstr ""
 
-#: builtin/help.c:463 builtin/help.c:480
+#: builtin/help.c:468 builtin/help.c:485
 #, c-format
 msgid "usage: %s%s"
 msgstr ""
 
-#: builtin/help.c:496
+#: builtin/help.c:501
 #, c-format
 msgid "`git %s' is aliased to `%s'"
 msgstr ""
 
 #: builtin/index-pack.c:150
 #, c-format
@@ -6043,103 +6046,103 @@
 
 #: builtin/init-db.c:110
 #, c-format
 msgid "ignoring template %s"
 msgstr ""
 
-#: builtin/init-db.c:133
+#: builtin/init-db.c:136
 #, c-format
 msgid "insanely long template path %s"
 msgstr ""
 
-#: builtin/init-db.c:141
+#: builtin/init-db.c:144
 #, c-format
 msgid "templates not found %s"
 msgstr ""
 
-#: builtin/init-db.c:154
+#: builtin/init-db.c:157
 #, c-format
 msgid "not copying templates of a wrong format version %d from '%s'"
 msgstr ""
 
-#: builtin/init-db.c:192
+#: builtin/init-db.c:197
 #, c-format
 msgid "insane git directory %s"
 msgstr ""
 
-#: builtin/init-db.c:323 builtin/init-db.c:326
+#: builtin/init-db.c:331 builtin/init-db.c:334
 #, c-format
 msgid "%s already exists"
 msgstr ""
 
-#: builtin/init-db.c:355
+#: builtin/init-db.c:363
 #, c-format
 msgid "unable to handle file type %d"
 msgstr ""
 
-#: builtin/init-db.c:358
+#: builtin/init-db.c:366
 #, c-format
 msgid "unable to move %s to %s"
 msgstr ""
 
 #. TRANSLATORS: The first '%s' is either "Reinitialized
 #. existing" or "Initialized empty", the second " shared" or
 #. "", and the last '%s%s' is the verbatim directory name.
-#: builtin/init-db.c:418
+#: builtin/init-db.c:426
 #, c-format
 msgid "%s%s Git repository in %s%s\n"
 msgstr ""
 
-#: builtin/init-db.c:419
+#: builtin/init-db.c:427
 msgid "Reinitialized existing"
 msgstr ""
 
-#: builtin/init-db.c:419
+#: builtin/init-db.c:427
 msgid "Initialized empty"
 msgstr ""
 
-#: builtin/init-db.c:420
+#: builtin/init-db.c:428
 msgid " shared"
 msgstr ""
 
-#: builtin/init-db.c:467
+#: builtin/init-db.c:475
 msgid ""
 "git init [-q | --quiet] [--bare] [--template=<template-directory>] [--"
 "shared[=<permissions>]] [directory]"
 msgstr ""
 
-#: builtin/init-db.c:490
+#: builtin/init-db.c:498
 msgid "permissions"
 msgstr ""
 
-#: builtin/init-db.c:491
+#: builtin/init-db.c:499
 msgid "specify that the git repository is to be shared amongst several users"
 msgstr ""
 
-#: builtin/init-db.c:493 builtin/prune-packed.c:57 builtin/repack.c:172
+#: builtin/init-db.c:501 builtin/prune-packed.c:57 builtin/repack.c:171
 msgid "be quiet"
 msgstr ""
 
-#: builtin/init-db.c:525 builtin/init-db.c:530
+#: builtin/init-db.c:533 builtin/init-db.c:538
 #, c-format
 msgid "cannot mkdir %s"
 msgstr ""
 
-#: builtin/init-db.c:534
+#: builtin/init-db.c:542
 #, c-format
 msgid "cannot chdir to %s"
 msgstr ""
 
-#: builtin/init-db.c:555
+#: builtin/init-db.c:563
 #, c-format
 msgid ""
 "%s (or --work-tree=<directory>) not allowed without specifying %s (or --git-"
 "dir=<directory>)"
 msgstr ""
 
-#: builtin/init-db.c:583
+#: builtin/init-db.c:591
 #, c-format
 msgid "Cannot access work tree '%s'"
 msgstr ""
 
 #: builtin/interpret-trailers.c:15
 msgid ""
@@ -6157,17 +6160,17 @@
 
 #: builtin/interpret-trailers.c:27
 msgid "trailer(s) to add"
 msgstr ""
 
 #: builtin/log.c:41
-msgid "git log [<options>] [<revision range>] [[--] <path>...]\n"
+msgid "git log [<options>] [<revision range>] [[--] <path>...]"
 msgstr ""
 
 #: builtin/log.c:42
-msgid "   or: git show [options] <object>..."
+msgid "git show [options] <object>..."
 msgstr ""
 
 #: builtin/log.c:81
 #, c-format
 msgid "invalid --decorate option: %s"
 msgstr ""
@@ -6533,376 +6536,376 @@
 msgstr ""
 
 #: builtin/ls-tree.c:28
 msgid "git ls-tree [<options>] <tree-ish> [<path>...]"
 msgstr ""
 
-#: builtin/ls-tree.c:126
+#: builtin/ls-tree.c:127
 msgid "only show trees"
 msgstr ""
 
-#: builtin/ls-tree.c:128
+#: builtin/ls-tree.c:129
 msgid "recurse into subtrees"
 msgstr ""
 
-#: builtin/ls-tree.c:130
+#: builtin/ls-tree.c:131
 msgid "show trees when recursing"
 msgstr ""
 
-#: builtin/ls-tree.c:133
+#: builtin/ls-tree.c:134
 msgid "terminate entries with NUL byte"
 msgstr ""
 
-#: builtin/ls-tree.c:134
+#: builtin/ls-tree.c:135
 msgid "include object size"
 msgstr ""
 
-#: builtin/ls-tree.c:136 builtin/ls-tree.c:138
+#: builtin/ls-tree.c:137 builtin/ls-tree.c:139
 msgid "list only filenames"
 msgstr ""
 
-#: builtin/ls-tree.c:141
+#: builtin/ls-tree.c:142
 msgid "use full path names"
 msgstr ""
 
-#: builtin/ls-tree.c:143
+#: builtin/ls-tree.c:144
 msgid "list entire tree; not just current directory (implies --full-name)"
 msgstr ""
 
-#: builtin/merge.c:44
+#: builtin/merge.c:45
 msgid "git merge [options] [<commit>...]"
 msgstr ""
 
-#: builtin/merge.c:45
+#: builtin/merge.c:46
 msgid "git merge [options] <msg> HEAD <commit>"
 msgstr ""
 
-#: builtin/merge.c:46
+#: builtin/merge.c:47
 msgid "git merge --abort"
 msgstr ""
 
-#: builtin/merge.c:99
+#: builtin/merge.c:100
 msgid "switch `m' requires a value"
 msgstr ""
 
-#: builtin/merge.c:136
+#: builtin/merge.c:137
 #, c-format
 msgid "Could not find merge strategy '%s'.\n"
 msgstr ""
 
-#: builtin/merge.c:137
+#: builtin/merge.c:138
 #, c-format
 msgid "Available strategies are:"
 msgstr ""
 
-#: builtin/merge.c:142
+#: builtin/merge.c:143
 #, c-format
 msgid "Available custom strategies are:"
 msgstr ""
 
-#: builtin/merge.c:192
+#: builtin/merge.c:193
 msgid "do not show a diffstat at the end of the merge"
 msgstr ""
 
-#: builtin/merge.c:195
+#: builtin/merge.c:196
 msgid "show a diffstat at the end of the merge"
 msgstr ""
 
-#: builtin/merge.c:196
+#: builtin/merge.c:197
 msgid "(synonym to --stat)"
 msgstr ""
 
-#: builtin/merge.c:198
+#: builtin/merge.c:199
 msgid "add (at most <n>) entries from shortlog to merge commit message"
 msgstr ""
 
-#: builtin/merge.c:201
+#: builtin/merge.c:202
 msgid "create a single commit instead of doing a merge"
 msgstr ""
 
-#: builtin/merge.c:203
+#: builtin/merge.c:204
 msgid "perform a commit if the merge succeeds (default)"
 msgstr ""
 
-#: builtin/merge.c:205
+#: builtin/merge.c:206
 msgid "edit message before committing"
 msgstr ""
 
-#: builtin/merge.c:206
+#: builtin/merge.c:207
 msgid "allow fast-forward (default)"
 msgstr ""
 
-#: builtin/merge.c:208
+#: builtin/merge.c:209
 msgid "abort if fast-forward is not possible"
 msgstr ""
 
-#: builtin/merge.c:212
+#: builtin/merge.c:213
 msgid "Verify that the named commit has a valid GPG signature"
 msgstr ""
 
-#: builtin/merge.c:213 builtin/notes.c:741 builtin/revert.c:89
+#: builtin/merge.c:214 builtin/notes.c:753 builtin/revert.c:89
 msgid "strategy"
 msgstr ""
 
-#: builtin/merge.c:214
+#: builtin/merge.c:215
 msgid "merge strategy to use"
 msgstr ""
 
-#: builtin/merge.c:215
+#: builtin/merge.c:216
 msgid "option=value"
 msgstr ""
 
-#: builtin/merge.c:216
+#: builtin/merge.c:217
 msgid "option for selected merge strategy"
 msgstr ""
 
-#: builtin/merge.c:218
+#: builtin/merge.c:219
 msgid "merge commit message (for a non-fast-forward merge)"
 msgstr ""
 
-#: builtin/merge.c:222
+#: builtin/merge.c:223
 msgid "abort the current in-progress merge"
 msgstr ""
 
-#: builtin/merge.c:250
+#: builtin/merge.c:251
 msgid "could not run stash."
 msgstr ""
 
-#: builtin/merge.c:255
+#: builtin/merge.c:256
 msgid "stash failed"
 msgstr ""
 
-#: builtin/merge.c:260
+#: builtin/merge.c:261
 #, c-format
 msgid "not a valid object: %s"
 msgstr ""
 
-#: builtin/merge.c:279 builtin/merge.c:296
+#: builtin/merge.c:280 builtin/merge.c:297
 msgid "read-tree failed"
 msgstr ""
 
-#: builtin/merge.c:326
+#: builtin/merge.c:327
 msgid " (nothing to squash)"
 msgstr ""
 
-#: builtin/merge.c:339
+#: builtin/merge.c:340
 #, c-format
 msgid "Squash commit -- not updating HEAD\n"
 msgstr ""
 
-#: builtin/merge.c:371
+#: builtin/merge.c:372
 msgid "Writing SQUASH_MSG"
 msgstr ""
 
-#: builtin/merge.c:373
+#: builtin/merge.c:374
 msgid "Finishing SQUASH_MSG"
 msgstr ""
 
-#: builtin/merge.c:396
+#: builtin/merge.c:397
 #, c-format
 msgid "No merge message -- not updating HEAD\n"
 msgstr ""
 
-#: builtin/merge.c:446
+#: builtin/merge.c:447
 #, c-format
 msgid "'%s' does not point to a commit"
 msgstr ""
 
-#: builtin/merge.c:558
+#: builtin/merge.c:559
 #, c-format
 msgid "Bad branch.%s.mergeoptions string: %s"
 msgstr ""
 
-#: builtin/merge.c:653
+#: builtin/merge.c:654
 msgid "git write-tree failed to write a tree"
 msgstr ""
 
-#: builtin/merge.c:677
+#: builtin/merge.c:678
 msgid "Not handling anything other than two heads merge."
 msgstr ""
 
-#: builtin/merge.c:691
+#: builtin/merge.c:692
 #, c-format
 msgid "Unknown option for merge-recursive: -X%s"
 msgstr ""
 
-#: builtin/merge.c:704
+#: builtin/merge.c:705
 #, c-format
 msgid "unable to write %s"
 msgstr ""
 
-#: builtin/merge.c:793
+#: builtin/merge.c:794
 #, c-format
 msgid "Could not read from '%s'"
 msgstr ""
 
-#: builtin/merge.c:802
+#: builtin/merge.c:803
 #, c-format
 msgid "Not committing merge; use 'git commit' to complete the merge.\n"
 msgstr ""
 
-#: builtin/merge.c:808
+#: builtin/merge.c:809
 #, c-format
 msgid ""
 "Please enter a commit message to explain why this merge is necessary,\n"
 "especially if it merges an updated upstream into a topic branch.\n"
 "\n"
 "Lines starting with '%c' will be ignored, and an empty message aborts\n"
 "the commit.\n"
 msgstr ""
 
-#: builtin/merge.c:832
+#: builtin/merge.c:833
 msgid "Empty commit message."
 msgstr ""
 
-#: builtin/merge.c:844
+#: builtin/merge.c:845
 #, c-format
 msgid "Wonderful.\n"
 msgstr ""
 
-#: builtin/merge.c:907
+#: builtin/merge.c:900
 #, c-format
 msgid "Automatic merge failed; fix conflicts and then commit the result.\n"
 msgstr ""
 
-#: builtin/merge.c:923
+#: builtin/merge.c:916
 #, c-format
 msgid "'%s' is not a commit"
 msgstr ""
 
-#: builtin/merge.c:964
+#: builtin/merge.c:957
 msgid "No current branch."
 msgstr ""
 
-#: builtin/merge.c:966
+#: builtin/merge.c:959
 msgid "No remote for the current branch."
 msgstr ""
 
-#: builtin/merge.c:968
+#: builtin/merge.c:961
 msgid "No default upstream defined for the current branch."
 msgstr ""
 
-#: builtin/merge.c:973
+#: builtin/merge.c:966
 #, c-format
 msgid "No remote-tracking branch for %s from %s"
 msgstr ""
 
-#: builtin/merge.c:1129
+#: builtin/merge.c:1122
 msgid "There is no merge to abort (MERGE_HEAD missing)."
 msgstr ""
 
-#: builtin/merge.c:1145
+#: builtin/merge.c:1138
 msgid ""
 "You have not concluded your merge (MERGE_HEAD exists).\n"
 "Please, commit your changes before you merge."
 msgstr ""
 
-#: builtin/merge.c:1148 git-pull.sh:34
+#: builtin/merge.c:1141 git-pull.sh:34
 msgid "You have not concluded your merge (MERGE_HEAD exists)."
 msgstr ""
 
-#: builtin/merge.c:1152
+#: builtin/merge.c:1145
 msgid ""
 "You have not concluded your cherry-pick (CHERRY_PICK_HEAD exists).\n"
 "Please, commit your changes before you merge."
 msgstr ""
 
-#: builtin/merge.c:1155
+#: builtin/merge.c:1148
 msgid "You have not concluded your cherry-pick (CHERRY_PICK_HEAD exists)."
 msgstr ""
 
-#: builtin/merge.c:1164
+#: builtin/merge.c:1157
 msgid "You cannot combine --squash with --no-ff."
 msgstr ""
 
-#: builtin/merge.c:1173
+#: builtin/merge.c:1166
 msgid "No commit specified and merge.defaultToUpstream not set."
 msgstr ""
 
-#: builtin/merge.c:1205
+#: builtin/merge.c:1198
 msgid "Can merge only exactly one commit into empty head"
 msgstr ""
 
-#: builtin/merge.c:1208
+#: builtin/merge.c:1201
 msgid "Squash commit into empty head not supported yet"
 msgstr ""
 
-#: builtin/merge.c:1210
+#: builtin/merge.c:1203
 msgid "Non-fast-forward commit does not make sense into an empty head"
 msgstr ""
 
-#: builtin/merge.c:1215
+#: builtin/merge.c:1208
 #, c-format
 msgid "%s - not something we can merge"
 msgstr ""
 
-#: builtin/merge.c:1266
+#: builtin/merge.c:1259
 #, c-format
 msgid "Commit %s has an untrusted GPG signature, allegedly by %s."
 msgstr ""
 
-#: builtin/merge.c:1269
+#: builtin/merge.c:1262
 #, c-format
 msgid "Commit %s has a bad GPG signature allegedly by %s."
 msgstr ""
 
-#: builtin/merge.c:1272
+#: builtin/merge.c:1265
 #, c-format
 msgid "Commit %s does not have a GPG signature."
 msgstr ""
 
-#: builtin/merge.c:1275
+#: builtin/merge.c:1268
 #, c-format
 msgid "Commit %s has a good GPG signature by %s\n"
 msgstr ""
 
-#: builtin/merge.c:1356
+#: builtin/merge.c:1349
 #, c-format
 msgid "Updating %s..%s\n"
 msgstr ""
 
-#: builtin/merge.c:1395
+#: builtin/merge.c:1388
 #, c-format
 msgid "Trying really trivial in-index merge...\n"
 msgstr ""
 
-#: builtin/merge.c:1402
+#: builtin/merge.c:1395
 #, c-format
 msgid "Nope.\n"
 msgstr ""
 
-#: builtin/merge.c:1434
+#: builtin/merge.c:1427
 msgid "Not possible to fast-forward, aborting."
 msgstr ""
 
-#: builtin/merge.c:1457 builtin/merge.c:1536
+#: builtin/merge.c:1450 builtin/merge.c:1529
 #, c-format
 msgid "Rewinding the tree to pristine...\n"
 msgstr ""
 
-#: builtin/merge.c:1461
+#: builtin/merge.c:1454
 #, c-format
 msgid "Trying merge strategy %s...\n"
 msgstr ""
 
-#: builtin/merge.c:1527
+#: builtin/merge.c:1520
 #, c-format
 msgid "No merge strategy handled the merge.\n"
 msgstr ""
 
-#: builtin/merge.c:1529
+#: builtin/merge.c:1522
 #, c-format
 msgid "Merge with strategy %s failed.\n"
 msgstr ""
 
-#: builtin/merge.c:1538
+#: builtin/merge.c:1531
 #, c-format
 msgid "Using the %s to prepare resolving by hand.\n"
 msgstr ""
 
-#: builtin/merge.c:1550
+#: builtin/merge.c:1543
 #, c-format
 msgid "Automatic merge went well; stopped before committing as requested\n"
 msgstr ""
 
 #: builtin/merge-base.c:29
 msgid "git merge-base [-a|--all] <commit> <commit>..."
@@ -7082,13 +7085,13 @@
 
 #: builtin/mv.c:253
 #, c-format
 msgid "Renaming %s to %s\n"
 msgstr ""
 
-#: builtin/mv.c:256 builtin/remote.c:726 builtin/repack.c:358
+#: builtin/mv.c:256 builtin/remote.c:728 builtin/repack.c:355
 #, c-format
 msgid "renaming '%s' failed"
 msgstr ""
 
 #: builtin/name-rev.c:255
 msgid "git name-rev [options] <commit>..."
@@ -7133,28 +7136,28 @@
 #: builtin/notes.c:24
 msgid "git notes [--ref <notes_ref>] [list [<object>]]"
 msgstr ""
 
 #: builtin/notes.c:25
 msgid ""
-"git notes [--ref <notes_ref>] add [-f] [-m <msg> | -F <file> | (-c | -C) "
-"<object>] [<object>]"
+"git notes [--ref <notes_ref>] add [-f] [--allow-empty] [-m <msg> | -F <file> "
+"| (-c | -C) <object>] [<object>]"
 msgstr ""
 
 #: builtin/notes.c:26
 msgid "git notes [--ref <notes_ref>] copy [-f] <from-object> <to-object>"
 msgstr ""
 
 #: builtin/notes.c:27
 msgid ""
-"git notes [--ref <notes_ref>] append [-m <msg> | -F <file> | (-c | -C) "
-"<object>] [<object>]"
+"git notes [--ref <notes_ref>] append [--allow-empty] [-m <msg> | -F <file> | "
+"(-c | -C) <object>] [<object>]"
 msgstr ""
 
 #: builtin/notes.c:28
-msgid "git notes [--ref <notes_ref>] edit [<object>]"
+msgid "git notes [--ref <notes_ref>] edit [--allow-empty] [<object>]"
 msgstr ""
 
 #: builtin/notes.c:29
 msgid "git notes [--ref <notes_ref>] show [<object>]"
 msgstr ""
 
@@ -7232,218 +7235,222 @@
 msgstr ""
 
 #: builtin/notes.c:88
 msgid "git notes get-ref"
 msgstr ""
 
-#: builtin/notes.c:136
+#: builtin/notes.c:146
 #, c-format
 msgid "unable to start 'show' for object '%s'"
 msgstr ""
 
-#: builtin/notes.c:140
+#: builtin/notes.c:150
 msgid "could not read 'show' output"
 msgstr ""
 
-#: builtin/notes.c:148
+#: builtin/notes.c:158
 #, c-format
 msgid "failed to finish 'show' for object '%s'"
 msgstr ""
 
-#: builtin/notes.c:166 builtin/tag.c:477
+#: builtin/notes.c:173 builtin/tag.c:477
 #, c-format
 msgid "could not create file '%s'"
 msgstr ""
 
-#: builtin/notes.c:185
+#: builtin/notes.c:192
 msgid "Please supply the note contents using either -m or -F option"
 msgstr ""
 
-#: builtin/notes.c:206 builtin/notes.c:847
-#, c-format
-msgid "Removing note for object %s\n"
-msgstr ""
-
-#: builtin/notes.c:211
+#: builtin/notes.c:201
 msgid "unable to write note object"
 msgstr ""
 
-#: builtin/notes.c:213
+#: builtin/notes.c:203
 #, c-format
 msgid "The note contents have been left in %s"
 msgstr ""
 
-#: builtin/notes.c:247 builtin/tag.c:693
+#: builtin/notes.c:231 builtin/tag.c:693
 #, c-format
 msgid "cannot read '%s'"
 msgstr ""
 
-#: builtin/notes.c:249 builtin/tag.c:696
+#: builtin/notes.c:233 builtin/tag.c:696
 #, c-format
 msgid "could not open or read '%s'"
 msgstr ""
 
-#: builtin/notes.c:268 builtin/notes.c:319 builtin/notes.c:321
-#: builtin/notes.c:381 builtin/notes.c:435 builtin/notes.c:518
-#: builtin/notes.c:523 builtin/notes.c:598 builtin/notes.c:640
-#: builtin/notes.c:842 builtin/tag.c:709
+#: builtin/notes.c:252 builtin/notes.c:303 builtin/notes.c:305
+#: builtin/notes.c:365 builtin/notes.c:420 builtin/notes.c:506
+#: builtin/notes.c:511 builtin/notes.c:589 builtin/notes.c:652
+#: builtin/notes.c:854 builtin/tag.c:709
 #, c-format
 msgid "Failed to resolve '%s' as a valid ref."
 msgstr ""
 
-#: builtin/notes.c:271
+#: builtin/notes.c:255
 #, c-format
 msgid "Failed to read object '%s'."
 msgstr ""
 
-#: builtin/notes.c:275
+#: builtin/notes.c:259
 #, c-format
 msgid "Cannot read note data from non-blob object '%s'."
 msgstr ""
 
-#: builtin/notes.c:315
+#: builtin/notes.c:299
 #, c-format
 msgid "Malformed input line: '%s'."
 msgstr ""
 
-#: builtin/notes.c:330
+#: builtin/notes.c:314
 #, c-format
 msgid "Failed to copy notes from '%s' to '%s'"
 msgstr ""
 
-#: builtin/notes.c:374 builtin/notes.c:428 builtin/notes.c:501
-#: builtin/notes.c:513 builtin/notes.c:586 builtin/notes.c:633
-#: builtin/notes.c:907
+#: builtin/notes.c:358 builtin/notes.c:413 builtin/notes.c:489
+#: builtin/notes.c:501 builtin/notes.c:577 builtin/notes.c:645
+#: builtin/notes.c:919
 msgid "too many parameters"
 msgstr ""
 
-#: builtin/notes.c:387 builtin/notes.c:646
+#: builtin/notes.c:371 builtin/notes.c:658
 #, c-format
 msgid "No note found for object %s."
 msgstr ""
 
-#: builtin/notes.c:409 builtin/notes.c:566
+#: builtin/notes.c:392 builtin/notes.c:555
 msgid "note contents as a string"
 msgstr ""
 
-#: builtin/notes.c:412 builtin/notes.c:569
+#: builtin/notes.c:395 builtin/notes.c:558
 msgid "note contents in a file"
 msgstr ""
 
-#: builtin/notes.c:414 builtin/notes.c:417 builtin/notes.c:571
-#: builtin/notes.c:574 builtin/tag.c:628
+#: builtin/notes.c:397 builtin/notes.c:400 builtin/notes.c:560
+#: builtin/notes.c:563 builtin/tag.c:628
 msgid "object"
 msgstr ""
 
-#: builtin/notes.c:415 builtin/notes.c:572
+#: builtin/notes.c:398 builtin/notes.c:561
 msgid "reuse and edit specified note object"
 msgstr ""
 
-#: builtin/notes.c:418 builtin/notes.c:575
+#: builtin/notes.c:401 builtin/notes.c:564
 msgid "reuse specified note object"
 msgstr ""
 
-#: builtin/notes.c:420 builtin/notes.c:488
+#: builtin/notes.c:404 builtin/notes.c:567
+msgid "allow storing empty note"
+msgstr ""
+
+#: builtin/notes.c:405 builtin/notes.c:476
 msgid "replace existing notes"
 msgstr ""
 
-#: builtin/notes.c:454
+#: builtin/notes.c:430
 #, c-format
 msgid ""
 "Cannot add notes. Found existing notes for object %s. Use '-f' to overwrite "
 "existing notes"
 msgstr ""
 
-#: builtin/notes.c:459 builtin/notes.c:536
+#: builtin/notes.c:445 builtin/notes.c:524
 #, c-format
 msgid "Overwriting existing notes for object %s\n"
 msgstr ""
 
-#: builtin/notes.c:489
+#: builtin/notes.c:456 builtin/notes.c:617 builtin/notes.c:859
+#, c-format
+msgid "Removing note for object %s\n"
+msgstr ""
+
+#: builtin/notes.c:477
 msgid "read objects from stdin"
 msgstr ""
 
-#: builtin/notes.c:491
+#: builtin/notes.c:479
 msgid "load rewriting config for <command> (implies --stdin)"
 msgstr ""
 
-#: builtin/notes.c:509
+#: builtin/notes.c:497
 msgid "too few parameters"
 msgstr ""
 
-#: builtin/notes.c:530
+#: builtin/notes.c:518
 #, c-format
 msgid ""
 "Cannot copy notes. Found existing notes for object %s. Use '-f' to overwrite "
 "existing notes"
 msgstr ""
 
-#: builtin/notes.c:542
+#: builtin/notes.c:530
 #, c-format
 msgid "Missing notes on source object %s. Cannot copy."
 msgstr ""
 
-#: builtin/notes.c:591
+#: builtin/notes.c:582
 #, c-format
 msgid ""
 "The -m/-F/-c/-C options have been deprecated for the 'edit' subcommand.\n"
 "Please use 'git notes add -f -m/-F/-c/-C' instead.\n"
 msgstr ""
 
-#: builtin/notes.c:738
+#: builtin/notes.c:750
 msgid "General options"
 msgstr ""
 
-#: builtin/notes.c:740
+#: builtin/notes.c:752
 msgid "Merge options"
 msgstr ""
 
-#: builtin/notes.c:742
+#: builtin/notes.c:754
 msgid ""
 "resolve notes conflicts using the given strategy (manual/ours/theirs/union/"
 "cat_sort_uniq)"
 msgstr ""
 
-#: builtin/notes.c:744
+#: builtin/notes.c:756
 msgid "Committing unmerged notes"
 msgstr ""
 
-#: builtin/notes.c:746
+#: builtin/notes.c:758
 msgid "finalize notes merge by committing unmerged notes"
 msgstr ""
 
-#: builtin/notes.c:748
+#: builtin/notes.c:760
 msgid "Aborting notes merge resolution"
 msgstr ""
 
-#: builtin/notes.c:750
+#: builtin/notes.c:762
 msgid "abort notes merge"
 msgstr ""
 
-#: builtin/notes.c:845
+#: builtin/notes.c:857
 #, c-format
 msgid "Object %s has no note\n"
 msgstr ""
 
-#: builtin/notes.c:857
+#: builtin/notes.c:869
 msgid "attempt to remove non-existent note is not an error"
 msgstr ""
 
-#: builtin/notes.c:860
+#: builtin/notes.c:872
 msgid "read object names from the standard input"
 msgstr ""
 
-#: builtin/notes.c:941
+#: builtin/notes.c:953
 msgid "notes-ref"
 msgstr ""
 
-#: builtin/notes.c:942
+#: builtin/notes.c:954
 msgid "use notes from <notes_ref>"
 msgstr ""
 
-#: builtin/notes.c:977 builtin/remote.c:1624
+#: builtin/notes.c:989 builtin/remote.c:1621
 #, c-format
 msgid "Unknown subcommand: %s"
 msgstr ""
 
 #: builtin/pack-objects.c:28
 msgid "git pack-objects --stdout [options...] [< ref-list | < object-list]"
@@ -7487,145 +7494,149 @@
 
 #: builtin/pack-objects.c:2603
 #, c-format
 msgid "unable to parse value '%s' for option %s"
 msgstr ""
 
-#: builtin/pack-objects.c:2622
+#: builtin/pack-objects.c:2623
 msgid "do not show progress meter"
 msgstr ""
 
-#: builtin/pack-objects.c:2624
+#: builtin/pack-objects.c:2625
 msgid "show progress meter"
 msgstr ""
 
-#: builtin/pack-objects.c:2626
+#: builtin/pack-objects.c:2627
 msgid "show progress meter during object writing phase"
 msgstr ""
 
-#: builtin/pack-objects.c:2629
+#: builtin/pack-objects.c:2630
 msgid "similar to --all-progress when progress meter is shown"
 msgstr ""
 
-#: builtin/pack-objects.c:2630
+#: builtin/pack-objects.c:2631
 msgid "version[,offset]"
 msgstr ""
 
-#: builtin/pack-objects.c:2631
+#: builtin/pack-objects.c:2632
 msgid "write the pack index file in the specified idx format version"
 msgstr ""
 
-#: builtin/pack-objects.c:2634
+#: builtin/pack-objects.c:2635
 msgid "maximum size of each output pack file"
 msgstr ""
 
-#: builtin/pack-objects.c:2636
+#: builtin/pack-objects.c:2637
 msgid "ignore borrowed objects from alternate object store"
 msgstr ""
 
-#: builtin/pack-objects.c:2638
+#: builtin/pack-objects.c:2639
 msgid "ignore packed objects"
 msgstr ""
 
-#: builtin/pack-objects.c:2640
+#: builtin/pack-objects.c:2641
 msgid "limit pack window by objects"
 msgstr ""
 
-#: builtin/pack-objects.c:2642
+#: builtin/pack-objects.c:2643
 msgid "limit pack window by memory in addition to object limit"
 msgstr ""
 
-#: builtin/pack-objects.c:2644
+#: builtin/pack-objects.c:2645
 msgid "maximum length of delta chain allowed in the resulting pack"
 msgstr ""
 
-#: builtin/pack-objects.c:2646
+#: builtin/pack-objects.c:2647
 msgid "reuse existing deltas"
 msgstr ""
 
-#: builtin/pack-objects.c:2648
+#: builtin/pack-objects.c:2649
 msgid "reuse existing objects"
 msgstr ""
 
-#: builtin/pack-objects.c:2650
+#: builtin/pack-objects.c:2651
 msgid "use OFS_DELTA objects"
 msgstr ""
 
-#: builtin/pack-objects.c:2652
+#: builtin/pack-objects.c:2653
 msgid "use threads when searching for best delta matches"
 msgstr ""
 
-#: builtin/pack-objects.c:2654
+#: builtin/pack-objects.c:2655
 msgid "do not create an empty pack output"
 msgstr ""
 
-#: builtin/pack-objects.c:2656
+#: builtin/pack-objects.c:2657
 msgid "read revision arguments from standard input"
 msgstr ""
 
-#: builtin/pack-objects.c:2658
+#: builtin/pack-objects.c:2659
 msgid "limit the objects to those that are not yet packed"
 msgstr ""
 
-#: builtin/pack-objects.c:2661
+#: builtin/pack-objects.c:2662
 msgid "include objects reachable from any reference"
 msgstr ""
 
-#: builtin/pack-objects.c:2664
+#: builtin/pack-objects.c:2665
 msgid "include objects referred by reflog entries"
 msgstr ""
 
-#: builtin/pack-objects.c:2667
+#: builtin/pack-objects.c:2668
 msgid "include objects referred to by the index"
 msgstr ""
 
-#: builtin/pack-objects.c:2670
+#: builtin/pack-objects.c:2671
 msgid "output pack to stdout"
 msgstr ""
 
-#: builtin/pack-objects.c:2672
+#: builtin/pack-objects.c:2673
 msgid "include tag objects that refer to objects to be packed"
 msgstr ""
 
-#: builtin/pack-objects.c:2674
+#: builtin/pack-objects.c:2675
 msgid "keep unreachable objects"
 msgstr ""
 
-#: builtin/pack-objects.c:2675 parse-options.h:140
+#: builtin/pack-objects.c:2676 parse-options.h:140
 msgid "time"
 msgstr ""
 
-#: builtin/pack-objects.c:2676
+#: builtin/pack-objects.c:2677
 msgid "unpack unreachable objects newer than <time>"
 msgstr ""
 
-#: builtin/pack-objects.c:2679
+#: builtin/pack-objects.c:2680
 msgid "create thin packs"
 msgstr ""
 
-#: builtin/pack-objects.c:2681
+#: builtin/pack-objects.c:2682
+msgid "create packs suitable for shallow fetches"
+msgstr ""
+
+#: builtin/pack-objects.c:2684
 msgid "ignore packs that have companion .keep file"
 msgstr ""
 
-#: builtin/pack-objects.c:2683
+#: builtin/pack-objects.c:2686
 msgid "pack compression level"
 msgstr ""
 
-#: builtin/pack-objects.c:2685
+#: builtin/pack-objects.c:2688
 msgid "do not hide commits by grafts"
 msgstr ""
 
-#: builtin/pack-objects.c:2687
+#: builtin/pack-objects.c:2690
 msgid "use a bitmap index if available to speed up counting objects"
 msgstr ""
 
-#: builtin/pack-objects.c:2689
+#: builtin/pack-objects.c:2692
 msgid "write a bitmap index together with the pack index"
 msgstr ""
 
-#: builtin/pack-objects.c:2778
+#: builtin/pack-objects.c:2783
 msgid "Counting objects"
 msgstr ""
 
 #: builtin/pack-refs.c:6
 msgid "git pack-refs [options]"
 msgstr ""
@@ -7870,16 +7881,12 @@
 msgstr ""
 
 #: builtin/push.c:504
 msgid "require old value of ref to be at this value"
 msgstr ""
 
-#: builtin/push.c:506
-msgid "check"
-msgstr ""
-
 #: builtin/push.c:507
 msgid "control recursive pushing of submodules"
 msgstr ""
 
 #: builtin/push.c:509
 msgid "use thin pack"
@@ -8126,431 +8133,431 @@
 msgstr ""
 
 #: builtin/remote.c:177
 msgid "specifying branches to track makes sense only with fetch mirrors"
 msgstr ""
 
-#: builtin/remote.c:185 builtin/remote.c:641
+#: builtin/remote.c:187 builtin/remote.c:643
 #, c-format
 msgid "remote %s already exists."
 msgstr ""
 
-#: builtin/remote.c:189 builtin/remote.c:645
+#: builtin/remote.c:191 builtin/remote.c:647
 #, c-format
 msgid "'%s' is not a valid remote name"
 msgstr ""
 
-#: builtin/remote.c:233
+#: builtin/remote.c:235
 #, c-format
 msgid "Could not setup master '%s'"
 msgstr ""
 
-#: builtin/remote.c:333
+#: builtin/remote.c:335
 #, c-format
 msgid "Could not get fetch map for refspec %s"
 msgstr ""
 
-#: builtin/remote.c:434 builtin/remote.c:442
+#: builtin/remote.c:436 builtin/remote.c:444
 msgid "(matching)"
 msgstr ""
 
-#: builtin/remote.c:446
+#: builtin/remote.c:448
 msgid "(delete)"
 msgstr ""
 
-#: builtin/remote.c:590 builtin/remote.c:596 builtin/remote.c:602
+#: builtin/remote.c:592 builtin/remote.c:598 builtin/remote.c:604
 #, c-format
 msgid "Could not append '%s' to '%s'"
 msgstr ""
 
-#: builtin/remote.c:634 builtin/remote.c:798 builtin/remote.c:898
+#: builtin/remote.c:636 builtin/remote.c:795 builtin/remote.c:895
 #, c-format
 msgid "No such remote: %s"
 msgstr ""
 
-#: builtin/remote.c:651
+#: builtin/remote.c:653
 #, c-format
 msgid "Could not rename config section '%s' to '%s'"
 msgstr ""
 
-#: builtin/remote.c:657 builtin/remote.c:850
+#: builtin/remote.c:659 builtin/remote.c:847
 #, c-format
 msgid "Could not remove config section '%s'"
 msgstr ""
 
-#: builtin/remote.c:672
+#: builtin/remote.c:674
 #, c-format
 msgid ""
 "Not updating non-default fetch refspec\n"
 "\t%s\n"
 "\tPlease update the configuration manually if necessary."
 msgstr ""
 
-#: builtin/remote.c:678
+#: builtin/remote.c:680
 #, c-format
 msgid "Could not append '%s'"
 msgstr ""
 
-#: builtin/remote.c:689
+#: builtin/remote.c:691
 #, c-format
 msgid "Could not set '%s'"
 msgstr ""
 
-#: builtin/remote.c:711
+#: builtin/remote.c:713
 #, c-format
 msgid "deleting '%s' failed"
 msgstr ""
 
-#: builtin/remote.c:745
+#: builtin/remote.c:747
 #, c-format
 msgid "creating '%s' failed"
 msgstr ""
 
-#: builtin/remote.c:769
+#: builtin/remote.c:766
 #, c-format
 msgid "Could not remove branch %s"
 msgstr ""
 
-#: builtin/remote.c:836
+#: builtin/remote.c:833
 msgid ""
 "Note: A branch outside the refs/remotes/ hierarchy was not removed;\n"
 "to delete it, use:"
 msgid_plural ""
 "Note: Some branches outside the refs/remotes/ hierarchy were not removed;\n"
 "to delete them, use:"
 msgstr[0] ""
 msgstr[1] ""
 
-#: builtin/remote.c:951
+#: builtin/remote.c:948
 #, c-format
 msgid " new (next fetch will store in remotes/%s)"
 msgstr ""
 
-#: builtin/remote.c:954
+#: builtin/remote.c:951
 msgid " tracked"
 msgstr ""
 
-#: builtin/remote.c:956
+#: builtin/remote.c:953
 msgid " stale (use 'git remote prune' to remove)"
 msgstr ""
 
-#: builtin/remote.c:958
+#: builtin/remote.c:955
 msgid " ???"
 msgstr ""
 
-#: builtin/remote.c:999
+#: builtin/remote.c:996
 #, c-format
 msgid "invalid branch.%s.merge; cannot rebase onto > 1 branch"
 msgstr ""
 
-#: builtin/remote.c:1006
+#: builtin/remote.c:1003
 #, c-format
 msgid "rebases onto remote %s"
 msgstr ""
 
-#: builtin/remote.c:1009
+#: builtin/remote.c:1006
 #, c-format
 msgid " merges with remote %s"
 msgstr ""
 
-#: builtin/remote.c:1010
+#: builtin/remote.c:1007
 msgid "    and with remote"
 msgstr ""
 
-#: builtin/remote.c:1012
+#: builtin/remote.c:1009
 #, c-format
 msgid "merges with remote %s"
 msgstr ""
 
-#: builtin/remote.c:1013
+#: builtin/remote.c:1010
 msgid "   and with remote"
 msgstr ""
 
-#: builtin/remote.c:1059
+#: builtin/remote.c:1056
 msgid "create"
 msgstr ""
 
-#: builtin/remote.c:1062
+#: builtin/remote.c:1059
 msgid "delete"
 msgstr ""
 
-#: builtin/remote.c:1066
+#: builtin/remote.c:1063
 msgid "up to date"
 msgstr ""
 
-#: builtin/remote.c:1069
+#: builtin/remote.c:1066
 msgid "fast-forwardable"
 msgstr ""
 
-#: builtin/remote.c:1072
+#: builtin/remote.c:1069
 msgid "local out of date"
 msgstr ""
 
-#: builtin/remote.c:1079
+#: builtin/remote.c:1076
 #, c-format
 msgid "    %-*s forces to %-*s (%s)"
 msgstr ""
 
-#: builtin/remote.c:1082
+#: builtin/remote.c:1079
 #, c-format
 msgid "    %-*s pushes to %-*s (%s)"
 msgstr ""
 
-#: builtin/remote.c:1086
+#: builtin/remote.c:1083
 #, c-format
 msgid "    %-*s forces to %s"
 msgstr ""
 
-#: builtin/remote.c:1089
+#: builtin/remote.c:1086
 #, c-format
 msgid "    %-*s pushes to %s"
 msgstr ""
 
-#: builtin/remote.c:1157
+#: builtin/remote.c:1154
 msgid "do not query remotes"
 msgstr ""
 
-#: builtin/remote.c:1184
+#: builtin/remote.c:1181
 #, c-format
 msgid "* remote %s"
 msgstr ""
 
-#: builtin/remote.c:1185
+#: builtin/remote.c:1182
 #, c-format
 msgid "  Fetch URL: %s"
 msgstr ""
 
-#: builtin/remote.c:1186 builtin/remote.c:1333
+#: builtin/remote.c:1183 builtin/remote.c:1334
 msgid "(no URL)"
 msgstr ""
 
-#: builtin/remote.c:1195 builtin/remote.c:1197
+#: builtin/remote.c:1192 builtin/remote.c:1194
 #, c-format
 msgid "  Push  URL: %s"
 msgstr ""
 
-#: builtin/remote.c:1199 builtin/remote.c:1201 builtin/remote.c:1203
+#: builtin/remote.c:1196 builtin/remote.c:1198 builtin/remote.c:1200
 #, c-format
 msgid "  HEAD branch: %s"
 msgstr ""
 
-#: builtin/remote.c:1205
+#: builtin/remote.c:1202
 #, c-format
 msgid ""
 "  HEAD branch (remote HEAD is ambiguous, may be one of the following):\n"
 msgstr ""
 
-#: builtin/remote.c:1217
+#: builtin/remote.c:1214
 #, c-format
 msgid "  Remote branch:%s"
 msgid_plural "  Remote branches:%s"
 msgstr[0] ""
 msgstr[1] ""
 
-#: builtin/remote.c:1220 builtin/remote.c:1247
+#: builtin/remote.c:1217 builtin/remote.c:1244
 msgid " (status not queried)"
 msgstr ""
 
-#: builtin/remote.c:1229
+#: builtin/remote.c:1226
 msgid "  Local branch configured for 'git pull':"
 msgid_plural "  Local branches configured for 'git pull':"
 msgstr[0] ""
 msgstr[1] ""
 
-#: builtin/remote.c:1237
+#: builtin/remote.c:1234
 msgid "  Local refs will be mirrored by 'git push'"
 msgstr ""
 
-#: builtin/remote.c:1244
+#: builtin/remote.c:1241
 #, c-format
 msgid "  Local ref configured for 'git push'%s:"
 msgid_plural "  Local refs configured for 'git push'%s:"
 msgstr[0] ""
 msgstr[1] ""
 
-#: builtin/remote.c:1265
+#: builtin/remote.c:1262
 msgid "set refs/remotes/<name>/HEAD according to remote"
 msgstr ""
 
-#: builtin/remote.c:1267
+#: builtin/remote.c:1264
 msgid "delete refs/remotes/<name>/HEAD"
 msgstr ""
 
-#: builtin/remote.c:1282
+#: builtin/remote.c:1279
 msgid "Cannot determine remote HEAD"
 msgstr ""
 
-#: builtin/remote.c:1284
+#: builtin/remote.c:1281
 msgid "Multiple remote HEAD branches. Please choose one explicitly with:"
 msgstr ""
 
-#: builtin/remote.c:1294
+#: builtin/remote.c:1291
 #, c-format
 msgid "Could not delete %s"
 msgstr ""
 
-#: builtin/remote.c:1302
+#: builtin/remote.c:1299
 #, c-format
 msgid "Not a valid ref: %s"
 msgstr ""
 
-#: builtin/remote.c:1304
+#: builtin/remote.c:1301
 #, c-format
 msgid "Could not setup %s"
 msgstr ""
 
-#: builtin/remote.c:1322
+#: builtin/remote.c:1319
 #, c-format
 msgid " %s will become dangling!"
 msgstr ""
 
-#: builtin/remote.c:1323
+#: builtin/remote.c:1320
 #, c-format
 msgid " %s has become dangling!"
 msgstr ""
 
-#: builtin/remote.c:1329
+#: builtin/remote.c:1330
 #, c-format
 msgid "Pruning %s"
 msgstr ""
 
-#: builtin/remote.c:1330
+#: builtin/remote.c:1331
 #, c-format
 msgid "URL: %s"
 msgstr ""
 
-#: builtin/remote.c:1357
+#: builtin/remote.c:1354
 #, c-format
 msgid " * [would prune] %s"
 msgstr ""
 
-#: builtin/remote.c:1360
+#: builtin/remote.c:1357
 #, c-format
 msgid " * [pruned] %s"
 msgstr ""
 
-#: builtin/remote.c:1405
+#: builtin/remote.c:1402
 msgid "prune remotes after fetching"
 msgstr ""
 
-#: builtin/remote.c:1471 builtin/remote.c:1545
+#: builtin/remote.c:1468 builtin/remote.c:1542
 #, c-format
 msgid "No such remote '%s'"
 msgstr ""
 
-#: builtin/remote.c:1491
+#: builtin/remote.c:1488
 msgid "add branch"
 msgstr ""
 
-#: builtin/remote.c:1498
+#: builtin/remote.c:1495
 msgid "no remote specified"
 msgstr ""
 
-#: builtin/remote.c:1520
+#: builtin/remote.c:1517
 msgid "manipulate push URLs"
 msgstr ""
 
-#: builtin/remote.c:1522
+#: builtin/remote.c:1519
 msgid "add URL"
 msgstr ""
 
-#: builtin/remote.c:1524
+#: builtin/remote.c:1521
 msgid "delete URLs"
 msgstr ""
 
-#: builtin/remote.c:1531
+#: builtin/remote.c:1528
 msgid "--add --delete doesn't make sense"
 msgstr ""
 
-#: builtin/remote.c:1571
+#: builtin/remote.c:1568
 #, c-format
 msgid "Invalid old URL pattern: %s"
 msgstr ""
 
-#: builtin/remote.c:1579
+#: builtin/remote.c:1576
 #, c-format
 msgid "No such URL found: %s"
 msgstr ""
 
-#: builtin/remote.c:1581
+#: builtin/remote.c:1578
 msgid "Will not delete all non-push URLs"
 msgstr ""
 
-#: builtin/remote.c:1595
+#: builtin/remote.c:1592
 msgid "be verbose; must be placed before a subcommand"
 msgstr ""
 
 #: builtin/repack.c:17
 msgid "git repack [options]"
 msgstr ""
 
-#: builtin/repack.c:160
+#: builtin/repack.c:159
 msgid "pack everything in a single pack"
 msgstr ""
 
-#: builtin/repack.c:162
+#: builtin/repack.c:161
 msgid "same as -a, and turn unreachable objects loose"
 msgstr ""
 
-#: builtin/repack.c:165
+#: builtin/repack.c:164
 msgid "remove redundant packs, and run git-prune-packed"
 msgstr ""
 
-#: builtin/repack.c:167
+#: builtin/repack.c:166
 msgid "pass --no-reuse-delta to git-pack-objects"
 msgstr ""
 
-#: builtin/repack.c:169
+#: builtin/repack.c:168
 msgid "pass --no-reuse-object to git-pack-objects"
 msgstr ""
 
-#: builtin/repack.c:171
+#: builtin/repack.c:170
 msgid "do not run git-update-server-info"
 msgstr ""
 
-#: builtin/repack.c:174
+#: builtin/repack.c:173
 msgid "pass --local to git-pack-objects"
 msgstr ""
 
-#: builtin/repack.c:176
+#: builtin/repack.c:175
 msgid "write bitmap index"
 msgstr ""
 
-#: builtin/repack.c:177
+#: builtin/repack.c:176
 msgid "approxidate"
 msgstr ""
 
-#: builtin/repack.c:178
+#: builtin/repack.c:177
 msgid "with -A, do not loosen objects older than this"
 msgstr ""
 
-#: builtin/repack.c:180
+#: builtin/repack.c:179
 msgid "size of the window used for delta compression"
 msgstr ""
 
-#: builtin/repack.c:181 builtin/repack.c:185
+#: builtin/repack.c:180 builtin/repack.c:184
 msgid "bytes"
 msgstr ""
 
-#: builtin/repack.c:182
+#: builtin/repack.c:181
 msgid "same as the above, but limit memory size instead of entries count"
 msgstr ""
 
-#: builtin/repack.c:184
+#: builtin/repack.c:183
 msgid "limits the maximum delta depth"
 msgstr ""
 
-#: builtin/repack.c:186
+#: builtin/repack.c:185
 msgid "maximum size of each packfile"
 msgstr ""
 
-#: builtin/repack.c:188
+#: builtin/repack.c:187
 msgid "repack objects in packs marked with .keep"
 msgstr ""
 
-#: builtin/repack.c:374
+#: builtin/repack.c:371
 #, c-format
 msgid "removing '%s' failed"
 msgstr ""
 
 #: builtin/replace.c:19
 msgid "git replace [-f] <object> <replacement>"
@@ -9004,83 +9011,83 @@
 #: builtin/shortlog.c:236
 msgid "Linewrap output"
 msgstr ""
 
 #: builtin/show-branch.c:9
 msgid ""
-"git show-branch [-a|--all] [-r|--remotes] [--topo-order | --date-order] [--"
-"current] [--color[=<when>] | --no-color] [--sparse] [--more=<n> | --list | --"
-"independent | --merge-base] [--no-name | --sha1-name] [--topics] [(<rev> | "
-"<glob>)...]"
+"git show-branch [-a|--all] [-r|--remotes] [--topo-order | --date-order]\n"
+"\t\t[--current] [--color[=<when>] | --no-color] [--sparse]\n"
+"\t\t[--more=<n> | --list | --independent | --merge-base]\n"
+"\t\t[--no-name | --sha1-name] [--topics] [(<rev> | <glob>)...]"
 msgstr ""
 
-#: builtin/show-branch.c:10
+#: builtin/show-branch.c:13
 msgid "git show-branch (-g|--reflog)[=<n>[,<base>]] [--list] [<ref>]"
 msgstr ""
 
-#: builtin/show-branch.c:649
+#: builtin/show-branch.c:652
 msgid "show remote-tracking and local branches"
 msgstr ""
 
-#: builtin/show-branch.c:651
+#: builtin/show-branch.c:654
 msgid "show remote-tracking branches"
 msgstr ""
 
-#: builtin/show-branch.c:653
+#: builtin/show-branch.c:656
 msgid "color '*!+-' corresponding to the branch"
 msgstr ""
 
-#: builtin/show-branch.c:655
+#: builtin/show-branch.c:658
 msgid "show <n> more commits after the common ancestor"
 msgstr ""
 
-#: builtin/show-branch.c:657
+#: builtin/show-branch.c:660
 msgid "synonym to more=-1"
 msgstr ""
 
-#: builtin/show-branch.c:658
+#: builtin/show-branch.c:661
 msgid "suppress naming strings"
 msgstr ""
 
-#: builtin/show-branch.c:660
+#: builtin/show-branch.c:663
 msgid "include the current branch"
 msgstr ""
 
-#: builtin/show-branch.c:662
+#: builtin/show-branch.c:665
 msgid "name commits with their object names"
 msgstr ""
 
-#: builtin/show-branch.c:664
+#: builtin/show-branch.c:667
 msgid "show possible merge bases"
 msgstr ""
 
-#: builtin/show-branch.c:666
+#: builtin/show-branch.c:669
 msgid "show refs unreachable from any other ref"
 msgstr ""
 
-#: builtin/show-branch.c:668
+#: builtin/show-branch.c:671
 msgid "show commits in topological order"
 msgstr ""
 
-#: builtin/show-branch.c:671
+#: builtin/show-branch.c:674
 msgid "show only commits not on the first branch"
 msgstr ""
 
-#: builtin/show-branch.c:673
+#: builtin/show-branch.c:676
 msgid "show merges reachable from only one tip"
 msgstr ""
 
-#: builtin/show-branch.c:675
+#: builtin/show-branch.c:678
 msgid "topologically sort, maintaining date order where possible"
 msgstr ""
 
-#: builtin/show-branch.c:678
+#: builtin/show-branch.c:681
 msgid "<n>[,<base>]"
 msgstr ""
 
-#: builtin/show-branch.c:679
+#: builtin/show-branch.c:682
 msgid "show <n> most recent ref-log entries starting at base"
 msgstr ""
 
 #: builtin/show-ref.c:10
 msgid ""
 "git show-ref [-q|--quiet] [--verify] [--head] [-d|--dereference] [-s|--"
@@ -9140,17 +9147,17 @@
 msgstr ""
 
 #: builtin/symbolic-ref.c:42
 msgid "shorten ref output"
 msgstr ""
 
-#: builtin/symbolic-ref.c:43 builtin/update-ref.c:362
+#: builtin/symbolic-ref.c:43 builtin/update-ref.c:358
 msgid "reason"
 msgstr ""
 
-#: builtin/symbolic-ref.c:43 builtin/update-ref.c:362
+#: builtin/symbolic-ref.c:43 builtin/update-ref.c:358
 msgid "reason of the update"
 msgstr ""
 
 #: builtin/tag.c:22
 msgid ""
 "git tag [-a|-s|-u <key-id>] [-f] [-m <msg>|-F <file>] <tagname> [<head>]"
@@ -9490,25 +9497,25 @@
 msgstr ""
 
 #: builtin/update-ref.c:11
 msgid "git update-ref [options] --stdin [-z]"
 msgstr ""
 
-#: builtin/update-ref.c:363
+#: builtin/update-ref.c:359
 msgid "delete the reference"
 msgstr ""
 
-#: builtin/update-ref.c:365
+#: builtin/update-ref.c:361
 msgid "update <refname> not the one it points to"
 msgstr ""
 
-#: builtin/update-ref.c:366
+#: builtin/update-ref.c:362
 msgid "stdin has NUL-terminated arguments"
 msgstr ""
 
-#: builtin/update-ref.c:367
+#: builtin/update-ref.c:363
 msgid "read updates from stdin"
 msgstr ""
 
 #: builtin/update-server-info.c:6
 msgid "git update-server-info [--force]"
 msgstr ""
@@ -9562,13 +9569,13 @@
 msgstr ""
 
 #: credential-cache--daemon.c:267
 msgid "print debugging messages to stderr"
 msgstr ""
 
-#: git.c:17
+#: git.c:14
 msgid ""
 "'git help -a' and 'git help -g' list available subcommands and some\n"
 "concept guides. See 'git help <command>' or 'git help <concept>'\n"
 "to read about a specific subcommand or concept."
 msgstr ""
 
@@ -9677,162 +9684,162 @@
 msgstr ""
 
 #: rerere.h:27
 msgid "update the index with reused conflict resolution if possible"
 msgstr ""
 
-#: git-am.sh:52
+#: git-am.sh:53
 msgid "You need to set your committer info first"
 msgstr ""
 
-#: git-am.sh:97
+#: git-am.sh:98
 msgid ""
 "You seem to have moved HEAD since the last 'am' failure.\n"
 "Not rewinding to ORIG_HEAD"
 msgstr ""
 
-#: git-am.sh:107
+#: git-am.sh:108
 #, sh-format
 msgid ""
 "When you have resolved this problem, run \"$cmdline --continue\".\n"
 "If you prefer to skip this patch, run \"$cmdline --skip\" instead.\n"
 "To restore the original branch and stop patching, run \"$cmdline --abort\"."
 msgstr ""
 
-#: git-am.sh:123
+#: git-am.sh:124
 msgid "Cannot fall back to three-way merge."
 msgstr ""
 
-#: git-am.sh:139
+#: git-am.sh:140
 msgid "Repository lacks necessary blobs to fall back on 3-way merge."
 msgstr ""
 
-#: git-am.sh:141
+#: git-am.sh:142
 msgid "Using index info to reconstruct a base tree..."
 msgstr ""
 
-#: git-am.sh:156
+#: git-am.sh:157
 msgid ""
 "Did you hand edit your patch?\n"
 "It does not apply to blobs recorded in its index."
 msgstr ""
 
-#: git-am.sh:165
+#: git-am.sh:166
 msgid "Falling back to patching base and 3-way merge..."
 msgstr ""
 
-#: git-am.sh:181
+#: git-am.sh:182
 msgid "Failed to merge in the changes."
 msgstr ""
 
-#: git-am.sh:276
+#: git-am.sh:277
 msgid "Only one StGIT patch series can be applied at once"
 msgstr ""
 
-#: git-am.sh:363
+#: git-am.sh:364
 #, sh-format
 msgid "Patch format $patch_format is not supported."
 msgstr ""
 
-#: git-am.sh:365
+#: git-am.sh:366
 msgid "Patch format detection failed."
 msgstr ""
 
-#: git-am.sh:392
+#: git-am.sh:398
 msgid ""
 "The -b/--binary option has been a no-op for long time, and\n"
 "it will be removed. Please do not use it anymore."
 msgstr ""
 
-#: git-am.sh:486
+#: git-am.sh:496
 #, sh-format
 msgid "previous rebase directory $dotest still exists but mbox given."
 msgstr ""
 
-#: git-am.sh:491
+#: git-am.sh:501
 msgid "Please make up your mind. --skip or --abort?"
 msgstr ""
 
-#: git-am.sh:527
+#: git-am.sh:537
 #, sh-format
 msgid ""
 "Stray $dotest directory found.\n"
 "Use \"git am --abort\" to remove it."
 msgstr ""
 
-#: git-am.sh:535
+#: git-am.sh:545
 msgid "Resolve operation not in progress, we are not resuming."
 msgstr ""
 
-#: git-am.sh:601
+#: git-am.sh:612
 #, sh-format
 msgid "Dirty index: cannot apply patches (dirty: $files)"
 msgstr ""
 
-#: git-am.sh:705
+#: git-am.sh:722
 #, sh-format
 msgid ""
 "Patch is empty.  Was it split wrong?\n"
 "If you would prefer to skip this patch, instead run \"$cmdline --skip\".\n"
 "To restore the original branch and stop patching run \"$cmdline --abort\"."
 msgstr ""
 
-#: git-am.sh:732
+#: git-am.sh:749
 msgid "Patch does not have a valid e-mail address."
 msgstr ""
 
-#: git-am.sh:779
+#: git-am.sh:796
 msgid "cannot be interactive without stdin connected to a terminal."
 msgstr ""
 
-#: git-am.sh:783
+#: git-am.sh:800
 msgid "Commit Body is:"
 msgstr ""
 
 #. TRANSLATORS: Make sure to include [y], [n], [e], [v] and [a]
 #. in your translation. The program will only accept English
 #. input at this point.
-#: git-am.sh:790
+#: git-am.sh:807
 msgid "Apply? [y]es/[n]o/[e]dit/[v]iew patch/[a]ccept all "
 msgstr ""
 
-#: git-am.sh:826
+#: git-am.sh:843
 #, sh-format
 msgid "Applying: $FIRSTLINE"
 msgstr ""
 
-#: git-am.sh:847
+#: git-am.sh:864
 msgid ""
 "No changes - did you forget to use 'git add'?\n"
 "If there is nothing left to stage, chances are that something else\n"
 "already introduced the same changes; you might want to skip this patch."
 msgstr ""
 
-#: git-am.sh:855
+#: git-am.sh:872
 msgid ""
 "You still have unmerged paths in your index\n"
 "did you forget to use 'git add'?"
 msgstr ""
 
-#: git-am.sh:871
+#: git-am.sh:888
 msgid "No changes -- Patch already applied."
 msgstr ""
 
-#: git-am.sh:881
+#: git-am.sh:898
 #, sh-format
 msgid "Patch failed at $msgnum $FIRSTLINE"
 msgstr ""
 
-#: git-am.sh:884
+#: git-am.sh:901
 #, sh-format
 msgid ""
 "The copy of the patch that failed is found in:\n"
 "   $dotest/patch"
 msgstr ""
 
-#: git-am.sh:902
+#: git-am.sh:919
 msgid "applying to an empty history"
 msgstr ""
 
 #: git-bisect.sh:48
 msgid "You need to start by \"git bisect start\""
 msgstr ""
@@ -9888,93 +9895,93 @@
 
 #: git-bisect.sh:244
 #, sh-format
 msgid "Bad rev input: $rev"
 msgstr ""
 
-#: git-bisect.sh:250
+#: git-bisect.sh:253
 msgid "'git bisect bad' can take only one argument."
 msgstr ""
 
-#: git-bisect.sh:273
+#: git-bisect.sh:276
 msgid "Warning: bisecting only with a bad commit."
 msgstr ""
 
 #. TRANSLATORS: Make sure to include [Y] and [n] in your
 #. translation. The program will only accept English input
 #. at this point.
-#: git-bisect.sh:279
+#: git-bisect.sh:282
 msgid "Are you sure [Y/n]? "
 msgstr ""
 
-#: git-bisect.sh:289
+#: git-bisect.sh:292
 msgid ""
 "You need to give me at least one good and one bad revision.\n"
 "(You can use \"git bisect bad\" and \"git bisect good\" for that.)"
 msgstr ""
 
-#: git-bisect.sh:292
+#: git-bisect.sh:295
 msgid ""
 "You need to start by \"git bisect start\".\n"
 "You then need to give me at least one good and one bad revision.\n"
 "(You can use \"git bisect bad\" and \"git bisect good\" for that.)"
 msgstr ""
 
-#: git-bisect.sh:363 git-bisect.sh:490
+#: git-bisect.sh:366 git-bisect.sh:493
 msgid "We are not bisecting."
 msgstr ""
 
-#: git-bisect.sh:370
+#: git-bisect.sh:373
 #, sh-format
 msgid "'$invalid' is not a valid commit"
 msgstr ""
 
-#: git-bisect.sh:379
+#: git-bisect.sh:382
 #, sh-format
 msgid ""
 "Could not check out original HEAD '$branch'.\n"
 "Try 'git bisect reset <commit>'."
 msgstr ""
 
-#: git-bisect.sh:406
+#: git-bisect.sh:409
 msgid "No logfile given"
 msgstr ""
 
-#: git-bisect.sh:407
+#: git-bisect.sh:410
 #, sh-format
 msgid "cannot read $file for replaying"
 msgstr ""
 
-#: git-bisect.sh:424
+#: git-bisect.sh:427
 msgid "?? what are you talking about?"
 msgstr ""
 
-#: git-bisect.sh:436
+#: git-bisect.sh:439
 #, sh-format
 msgid "running $command"
 msgstr ""
 
-#: git-bisect.sh:443
+#: git-bisect.sh:446
 #, sh-format
 msgid ""
 "bisect run failed:\n"
 "exit code $res from '$command' is < 0 or >= 128"
 msgstr ""
 
-#: git-bisect.sh:469
+#: git-bisect.sh:472
 msgid "bisect run cannot continue any more"
 msgstr ""
 
-#: git-bisect.sh:475
+#: git-bisect.sh:478
 #, sh-format
 msgid ""
 "bisect run failed:\n"
 "'bisect_state $state' exited with error code $res"
 msgstr ""
 
-#: git-bisect.sh:482
+#: git-bisect.sh:485
 msgid "bisect run success"
 msgstr ""
 
 #: git-pull.sh:21
 msgid ""
 "Pull is not possible because you have unmerged files.\n"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/po/sv.po /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/po/sv.po
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/po/sv.po	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/po/sv.po	2015-02-06 05:40:08.000000000 +0800
@@ -1,17 +1,17 @@
 # Swedish translations for Git.
-# Copyright (C) 2010-2014 Peter krefting <peter@softwolves.pp.se>
+# Copyright (C) 2010-2015 Peter krefting <peter@softwolves.pp.se>
 # This file is distributed under the same license as the Git package.
-# Peter Krefting <peter@softwolves.pp.se>, 2010, 2011, 2012, 2013, 2014.
+# Peter Krefting <peter@softwolves.pp.se>, 2010, 2011, 2012, 2013, 2014, 2015.
 #
 msgid ""
 msgstr ""
 "Project-Id-Version: git 2.0.0\n"
 "Report-Msgid-Bugs-To: Git Mailing List <git@vger.kernel.org>\n"
-"POT-Creation-Date: 2014-11-20 09:42+0800\n"
-"PO-Revision-Date: 2014-11-20 16:10+0800\n"
+"POT-Creation-Date: 2015-01-21 14:21+0800\n"
+"PO-Revision-Date: 2015-01-21 14:57+0800\n"
 "Last-Translator: Peter Krefting <peter@softwolves.pp.se>\n"
 "Language-Team: Swedish <tp-sv@listor.tp-sv.se>\n"
 "Language: sv\n"
 "MIME-Version: 1.0\n"
 "Content-Type: text/plain; charset=UTF-8\n"
 "Content-Transfer-Encoding: 8bit\n"
@@ -46,82 +46,82 @@
 "[<sökväg>...]"
 
 #: archive.c:14
 msgid "git archive --remote <repo> [--exec <cmd>] --list"
 msgstr "git archive --remote <arkiv> [--exec <kmd>] --list"
 
-#: archive.c:334 builtin/add.c:137 builtin/add.c:427 builtin/rm.c:328
+#: archive.c:342 builtin/add.c:137 builtin/add.c:427 builtin/rm.c:328
 #, c-format
 msgid "pathspec '%s' did not match any files"
 msgstr "sökvägsangivelsen \"%s\" motsvarade inte några filer"
 
-#: archive.c:419
+#: archive.c:427
 msgid "fmt"
 msgstr "fmt"
 
-#: archive.c:419
+#: archive.c:427
 msgid "archive format"
 msgstr "arkivformat"
 
-#: archive.c:420 builtin/log.c:1204
+#: archive.c:428 builtin/log.c:1204
 msgid "prefix"
 msgstr "prefix"
 
-#: archive.c:421
+#: archive.c:429
 msgid "prepend prefix to each pathname in the archive"
 msgstr "lägg till prefix till varje sökväg i arkivet"
 
-#: archive.c:422 builtin/archive.c:88 builtin/blame.c:2517
+#: archive.c:430 builtin/archive.c:88 builtin/blame.c:2517
 #: builtin/blame.c:2518 builtin/config.c:57 builtin/fast-export.c:986
 #: builtin/fast-export.c:988 builtin/grep.c:712 builtin/hash-object.c:101
-#: builtin/ls-files.c:489 builtin/ls-files.c:492 builtin/notes.c:411
-#: builtin/notes.c:568 builtin/read-tree.c:109 parse-options.h:151
+#: builtin/ls-files.c:489 builtin/ls-files.c:492 builtin/notes.c:394
+#: builtin/notes.c:557 builtin/read-tree.c:109 parse-options.h:151
 msgid "file"
 msgstr "fil"
 
-#: archive.c:423 builtin/archive.c:89
+#: archive.c:431 builtin/archive.c:89
 msgid "write the archive to this file"
 msgstr "skriv arkivet till filen"
 
-#: archive.c:425
+#: archive.c:433
 msgid "read .gitattributes in working directory"
 msgstr "läs .gitattributes i arbetskatalogen"
 
-#: archive.c:426
+#: archive.c:434
 msgid "report archived files on stderr"
 msgstr "rapportera arkiverade filer på standard fel"
 
-#: archive.c:427
+#: archive.c:435
 msgid "store only"
 msgstr "endast spara"
 
-#: archive.c:428
+#: archive.c:436
 msgid "compress faster"
 msgstr "komprimera snabbare"
 
-#: archive.c:436
+#: archive.c:444
 msgid "compress better"
 msgstr "komprimera bättre"
 
-#: archive.c:439
+#: archive.c:447
 msgid "list supported archive formats"
 msgstr "visa understödda arkivformat"
 
-#: archive.c:441 builtin/archive.c:90 builtin/clone.c:85
+#: archive.c:449 builtin/archive.c:90 builtin/clone.c:86
 msgid "repo"
 msgstr "arkiv"
 
-#: archive.c:442 builtin/archive.c:91
+#: archive.c:450 builtin/archive.c:91
 msgid "retrieve the archive from remote repository <repo>"
 msgstr "hämta arkivet från fjärrarkivet <arkiv>"
 
-#: archive.c:443 builtin/archive.c:92 builtin/notes.c:490
+#: archive.c:451 builtin/archive.c:92 builtin/notes.c:478
 msgid "command"
 msgstr "kommando"
 
-#: archive.c:444 builtin/archive.c:93
+#: archive.c:452 builtin/archive.c:93
 msgid "path to the remote git-upload-archive command"
 msgstr "sökväg till kommandot git-upload-archive på fjärren"
 
 #: attr.c:258
 msgid ""
 "Negative patterns are ignored in git attributes\n"
@@ -248,24 +248,24 @@
 
 #: bundle.c:61
 #, c-format
 msgid "unrecognized header: %s%s (%d)"
 msgstr "okänt huvud: %s%s (%d)"
 
-#: bundle.c:87 builtin/commit.c:788
+#: bundle.c:87 builtin/commit.c:770
 #, c-format
 msgid "could not open '%s'"
 msgstr "kunde inte öppna \"%s\""
 
 #: bundle.c:139
 msgid "Repository lacks these prerequisite commits:"
 msgstr "Arkivet saknar dessa nödvändiga incheckningar:"
 
-#: bundle.c:163 sequencer.c:641 sequencer.c:1096 builtin/blame.c:2706
-#: builtin/branch.c:652 builtin/commit.c:1085 builtin/log.c:330
-#: builtin/log.c:823 builtin/log.c:1432 builtin/log.c:1669 builtin/merge.c:357
+#: bundle.c:163 sequencer.c:645 sequencer.c:1100 builtin/blame.c:2706
+#: builtin/branch.c:652 builtin/commit.c:1049 builtin/log.c:330
+#: builtin/log.c:823 builtin/log.c:1432 builtin/log.c:1669 builtin/merge.c:358
 #: builtin/shortlog.c:158
 msgid "revision walk setup failed"
 msgstr "misslyckades skapa revisionstraversering"
 
 #: bundle.c:185
 #, c-format
@@ -317,13 +317,13 @@
 msgstr "kan inte skapa \"%s\""
 
 #: bundle.c:475
 msgid "index-pack died"
 msgstr "index-pack dog"
 
-#: color.c:157
+#: color.c:260
 #, c-format
 msgid "invalid color value: %.*s"
 msgstr "felaktigt färgvärde: %.*s"
 
 #: commit.c:40
 #, c-format
@@ -366,31 +366,31 @@
 
 #: config.c:885
 #, c-format
 msgid "invalid mode for object creation: %s"
 msgstr "felaktigt läge för skapande av objekt: %s"
 
-#: config.c:1201
+#: config.c:1211
 msgid "unable to parse command-line config"
 msgstr "kan inte tolka kommandoradskonfiguration"
 
-#: config.c:1262
+#: config.c:1272
 msgid "unknown error occured while reading the configuration files"
 msgstr "okänt fel uppstod vid läsning av konfigurationsfilerna"
 
-#: config.c:1586
+#: config.c:1596
 #, c-format
 msgid "unable to parse '%s' from command-line config"
 msgstr "kunde inte tolka värdet \"%s\" från kommandoradskonfiguration"
 
-#: config.c:1588
+#: config.c:1598
 #, c-format
 msgid "bad config variable '%s' in file '%s' at line %d"
 msgstr "felaktig konfigurationsvariabel \"%s\" i filen \"%s\" på rad %d"
 
-#: config.c:1647
+#: config.c:1657
 #, c-format
 msgid "%s has multiple values"
 msgstr "%s har flera värden"
 
 #: connected.c:69
 msgid "Could not run 'git rev-list'"
@@ -628,26 +628,26 @@
 
 #: help.c:440
 #, c-format
 msgid "%s: %s - %s"
 msgstr "%s: %s - %s"
 
-#: lockfile.c:275
+#: lockfile.c:283
 msgid "BUG: reopen a lockfile that is still open"
 msgstr "FEL: återöppna en låsfil som fortfarande är öppen"
 
-#: lockfile.c:277
+#: lockfile.c:285
 msgid "BUG: reopen a lockfile that has been committed"
 msgstr "FEL: återöppna en låsfil som har överlämnats"
 
 #: merge.c:41
 msgid "failed to read the cache"
 msgstr "misslyckades läsa cachen"
 
-#: merge.c:94 builtin/checkout.c:356 builtin/checkout.c:562
-#: builtin/clone.c:659
+#: merge.c:94 builtin/checkout.c:374 builtin/checkout.c:580
+#: builtin/clone.c:662
 msgid "unable to write new index file"
 msgstr "kunde inte skriva ny indexfil"
 
 #: merge-recursive.c:189
 #, c-format
 msgid "(bad commit)\n"
@@ -659,267 +659,267 @@
 msgstr "addinfo_cache misslyckades för sökvägen \"%s\""
 
 #: merge-recursive.c:270
 msgid "error building trees"
 msgstr "fel vid byggande av träd"
 
-#: merge-recursive.c:691
+#: merge-recursive.c:688
 #, c-format
 msgid "failed to create path '%s'%s"
 msgstr "misslyckades skapa sökvägen \"%s\"%s"
 
-#: merge-recursive.c:702
+#: merge-recursive.c:699
 #, c-format
 msgid "Removing %s to make room for subdirectory\n"
 msgstr "Tar bort %s för att göra plats för underkatalog\n"
 
-#: merge-recursive.c:716 merge-recursive.c:737
+#: merge-recursive.c:713 merge-recursive.c:734
 msgid ": perhaps a D/F conflict?"
 msgstr ": kanske en K/F-konflikt?"
 
-#: merge-recursive.c:727
+#: merge-recursive.c:724
 #, c-format
 msgid "refusing to lose untracked file at '%s'"
 msgstr "vägrar förlora ospårad fil vid \"%s\""
 
-#: merge-recursive.c:767
+#: merge-recursive.c:764
 #, c-format
 msgid "cannot read object %s '%s'"
 msgstr "kan inte läsa objektet %s: \"%s\""
 
-#: merge-recursive.c:769
+#: merge-recursive.c:766
 #, c-format
 msgid "blob expected for %s '%s'"
 msgstr "blob förväntades för %s \"%s\""
 
-#: merge-recursive.c:792 builtin/clone.c:318
+#: merge-recursive.c:789 builtin/clone.c:321
 #, c-format
 msgid "failed to open '%s'"
 msgstr "misslyckades öppna \"%s\""
 
-#: merge-recursive.c:800
+#: merge-recursive.c:797
 #, c-format
 msgid "failed to symlink '%s'"
 msgstr "misslyckades skapa symboliska länken \"%s\""
 
-#: merge-recursive.c:803
+#: merge-recursive.c:800
 #, c-format
 msgid "do not know what to do with %06o %s '%s'"
 msgstr "vet inte hur %06o %s \"%s\" skall hanteras"
 
-#: merge-recursive.c:941
+#: merge-recursive.c:938
 msgid "Failed to execute internal merge"
 msgstr "Misslyckades exekvera intern sammanslagning"
 
-#: merge-recursive.c:945
+#: merge-recursive.c:942
 #, c-format
 msgid "Unable to add %s to database"
 msgstr "Kunde inte lägga till %s till databasen"
 
-#: merge-recursive.c:961
+#: merge-recursive.c:958
 msgid "unsupported object type in the tree"
 msgstr "objekttyp som ej stöds upptäcktes i trädet"
 
-#: merge-recursive.c:1036 merge-recursive.c:1050
+#: merge-recursive.c:1033 merge-recursive.c:1047
 #, c-format
 msgid ""
 "CONFLICT (%s/delete): %s deleted in %s and %s in %s. Version %s of %s left "
 "in tree."
 msgstr ""
 "KONFLIKT (%s/radera): %s raderad i %s och %s i %s. Versionen %s av %s lämnad "
 "i trädet."
 
-#: merge-recursive.c:1042 merge-recursive.c:1055
+#: merge-recursive.c:1039 merge-recursive.c:1052
 #, c-format
 msgid ""
 "CONFLICT (%s/delete): %s deleted in %s and %s in %s. Version %s of %s left "
 "in tree at %s."
 msgstr ""
 "KONFLIKT (%s/radera): %s raderad i %s och %s i %s. Versionen %s av %s lämnad "
 "i trädet vid %s."
 
-#: merge-recursive.c:1096
+#: merge-recursive.c:1093
 msgid "rename"
 msgstr "namnbyte"
 
-#: merge-recursive.c:1096
+#: merge-recursive.c:1093
 msgid "renamed"
 msgstr "namnbytt"
 
-#: merge-recursive.c:1152
+#: merge-recursive.c:1149
 #, c-format
 msgid "%s is a directory in %s adding as %s instead"
 msgstr "%s är en katalog i %s lägger till som %s istället"
 
-#: merge-recursive.c:1174
+#: merge-recursive.c:1171
 #, c-format
 msgid ""
 "CONFLICT (rename/rename): Rename \"%s\"->\"%s\" in branch \"%s\" rename \"%s"
 "\"->\"%s\" in \"%s\"%s"
 msgstr ""
 "KONFLIKT (namnbyte/namnbyte): Namnbyte \"%s\"->\"%s\" på grenen \"%s\" "
 "namnbyte \"%s\"->\"%s\" i \"%s\"%s"
 
-#: merge-recursive.c:1179
+#: merge-recursive.c:1176
 msgid " (left unresolved)"
 msgstr " (lämnad olöst)"
 
-#: merge-recursive.c:1233
+#: merge-recursive.c:1230
 #, c-format
 msgid "CONFLICT (rename/rename): Rename %s->%s in %s. Rename %s->%s in %s"
 msgstr ""
 "KONFLIKT (namnbyte/namnbyte): Namnbyte %s->%s i %s. Namnbyte %s->%s i %s"
 
-#: merge-recursive.c:1263
+#: merge-recursive.c:1260
 #, c-format
 msgid "Renaming %s to %s and %s to %s instead"
 msgstr "Byter namn på %s till %s och %s till %s istället"
 
-#: merge-recursive.c:1462
+#: merge-recursive.c:1459
 #, c-format
 msgid "CONFLICT (rename/add): Rename %s->%s in %s. %s added in %s"
 msgstr "KONFLIKT (namnbyte/tillägg): Namnbyte %s->%s i %s. %s tillagd i %s"
 
-#: merge-recursive.c:1472
+#: merge-recursive.c:1469
 #, c-format
 msgid "Adding merged %s"
 msgstr "Lägger till sammanslagen %s"
 
-#: merge-recursive.c:1477 merge-recursive.c:1675
+#: merge-recursive.c:1474 merge-recursive.c:1672
 #, c-format
 msgid "Adding as %s instead"
 msgstr "Lägger till som %s istället"
 
-#: merge-recursive.c:1528
+#: merge-recursive.c:1525
 #, c-format
 msgid "cannot read object %s"
 msgstr "kan inte läsa objektet %s"
 
-#: merge-recursive.c:1531
+#: merge-recursive.c:1528
 #, c-format
 msgid "object %s is not a blob"
 msgstr "objektet %s är inte en blob"
 
-#: merge-recursive.c:1579
+#: merge-recursive.c:1576
 msgid "modify"
 msgstr "ändra"
 
-#: merge-recursive.c:1579
+#: merge-recursive.c:1576
 msgid "modified"
 msgstr "ändrad"
 
-#: merge-recursive.c:1589
+#: merge-recursive.c:1586
 msgid "content"
 msgstr "innehåll"
 
-#: merge-recursive.c:1596
+#: merge-recursive.c:1593
 msgid "add/add"
 msgstr "tillägg/tillägg"
 
-#: merge-recursive.c:1630
+#: merge-recursive.c:1627
 #, c-format
 msgid "Skipped %s (merged same as existing)"
 msgstr "Hoppade över %s (sammanslagen samma som befintlig)"
 
-#: merge-recursive.c:1644
+#: merge-recursive.c:1641
 #, c-format
 msgid "Auto-merging %s"
 msgstr "Slår ihop %s automatiskt"
 
-#: merge-recursive.c:1648 git-submodule.sh:1150
+#: merge-recursive.c:1645 git-submodule.sh:1150
 msgid "submodule"
 msgstr "undermodul"
 
-#: merge-recursive.c:1649
+#: merge-recursive.c:1646
 #, c-format
 msgid "CONFLICT (%s): Merge conflict in %s"
 msgstr "KONFLIKT (%s): Sammanslagningskonflikt i %s"
 
-#: merge-recursive.c:1735
+#: merge-recursive.c:1732
 #, c-format
 msgid "Removing %s"
 msgstr "Tar bort %s"
 
-#: merge-recursive.c:1760
+#: merge-recursive.c:1757
 msgid "file/directory"
 msgstr "fil/katalog"
 
-#: merge-recursive.c:1766
+#: merge-recursive.c:1763
 msgid "directory/file"
 msgstr "katalog/fil"
 
-#: merge-recursive.c:1771
+#: merge-recursive.c:1768
 #, c-format
 msgid "CONFLICT (%s): There is a directory with name %s in %s. Adding %s as %s"
 msgstr ""
 "KONFLIKT (%s): Det finns en katalog med namnet %s i %s. Lägger till %s som %s"
 
-#: merge-recursive.c:1781
+#: merge-recursive.c:1778
 #, c-format
 msgid "Adding %s"
 msgstr "Lägger till %s"
 
-#: merge-recursive.c:1798
+#: merge-recursive.c:1795
 msgid "Fatal merge failure, shouldn't happen."
 msgstr "Ödesdigert sammanslagningsfel, borde inte inträffa."
 
-#: merge-recursive.c:1817
+#: merge-recursive.c:1814
 msgid "Already up-to-date!"
 msgstr "Redan à jour!"
 
-#: merge-recursive.c:1826
+#: merge-recursive.c:1823
 #, c-format
 msgid "merging of trees %s and %s failed"
 msgstr "sammanslagning av träden %s och %s misslyckades"
 
-#: merge-recursive.c:1856
+#: merge-recursive.c:1853
 #, c-format
 msgid "Unprocessed path??? %s"
 msgstr "Obehandlad sökväg??? %s"
 
-#: merge-recursive.c:1901
+#: merge-recursive.c:1898
 msgid "Merging:"
 msgstr "Slår ihop:"
 
-#: merge-recursive.c:1914
+#: merge-recursive.c:1911
 #, c-format
 msgid "found %u common ancestor:"
 msgid_plural "found %u common ancestors:"
 msgstr[0] "hittade %u gemensam förfader:"
 msgstr[1] "hittade %u gemensamma förfäder:"
 
-#: merge-recursive.c:1951
+#: merge-recursive.c:1948
 msgid "merge returned no commit"
 msgstr "sammanslagningen returnerade ingen incheckning"
 
-#: merge-recursive.c:2008
+#: merge-recursive.c:2005
 #, c-format
 msgid "Could not parse object '%s'"
 msgstr "Kunde inte tolka objektet \"%s\""
 
-#: merge-recursive.c:2019 builtin/merge.c:666
+#: merge-recursive.c:2016 builtin/merge.c:667
 msgid "Unable to write index."
 msgstr "Kunde inte skriva indexet."
 
 #: notes-utils.c:41
 msgid "Cannot commit uninitialized/unreferenced notes tree"
 msgstr "Kan inte checka in oinitierat/orefererat anteckningsträd"
 
-#: notes-utils.c:83
+#: notes-utils.c:82
 #, c-format
 msgid "Bad notes.rewriteMode value: '%s'"
 msgstr "Felaktigt värde för notes.rewriteMode: '%s'"
 
-#: notes-utils.c:93
+#: notes-utils.c:92
 #, c-format
 msgid "Refusing to rewrite notes in %s (outside of refs/notes/)"
 msgstr "Vägrar skriva över anteckningar i %s (utanför refs/notes/)"
 
 #. TRANSLATORS: The first %s is the name of the
 #. environment variable, the second %s is its value
-#: notes-utils.c:120
+#: notes-utils.c:119
 #, c-format
 msgid "Bad %s value: '%s'"
 msgstr "Felaktigt värde på %s: \"%s\""
 
 #: object.c:241
 #, c-format
@@ -1021,22 +1021,22 @@
 msgstr "kunde inte tolka format för --pretty"
 
 #: progress.c:225
 msgid "done"
 msgstr "klart"
 
-#: read-cache.c:1261
+#: read-cache.c:1267
 #, c-format
 msgid ""
 "index.version set, but the value is invalid.\n"
 "Using version %i"
 msgstr ""
 "index.version satt, men värdet är ogiltigt.\n"
 "Använder version %i"
 
-#: read-cache.c:1271
+#: read-cache.c:1277
 #, c-format
 msgid ""
 "GIT_INDEX_VERSION set, but the value is invalid.\n"
 "Using version %i"
 msgstr ""
 "GIT_INDEX_VERSION satt, men värdet är ogiltigt.\n"
@@ -1058,52 +1058,52 @@
 msgstr "%s spårar både %s och %s"
 
 #: remote.c:798
 msgid "Internal error"
 msgstr "Internt fel"
 
-#: remote.c:1968
+#: remote.c:1980
 #, c-format
 msgid "Your branch is based on '%s', but the upstream is gone.\n"
 msgstr "Din gren är baserad på \"%s\", men den har försvunnit uppströms.\n"
 
-#: remote.c:1972
+#: remote.c:1984
 msgid "  (use \"git branch --unset-upstream\" to fixup)\n"
 msgstr "  (använd \"git branch --unset-upstream\" för att rätta)\n"
 
-#: remote.c:1975
+#: remote.c:1987
 #, c-format
 msgid "Your branch is up-to-date with '%s'.\n"
 msgstr "Din gren är à jour med \"%s\".\n"
 
-#: remote.c:1979
+#: remote.c:1991
 #, c-format
 msgid "Your branch is ahead of '%s' by %d commit.\n"
 msgid_plural "Your branch is ahead of '%s' by %d commits.\n"
 msgstr[0] "Din gren ligger före \"%s\" med %d incheckning.\n"
 msgstr[1] "Din gren ligger före \"%s\" med %d incheckningar.\n"
 
-#: remote.c:1985
+#: remote.c:1997
 msgid "  (use \"git push\" to publish your local commits)\n"
 msgstr "  (använd \"git push\" för att publicera dina lokala incheckningar)\n"
 
-#: remote.c:1988
+#: remote.c:2000
 #, c-format
 msgid "Your branch is behind '%s' by %d commit, and can be fast-forwarded.\n"
 msgid_plural ""
 "Your branch is behind '%s' by %d commits, and can be fast-forwarded.\n"
 msgstr[0] ""
 "Din gren ligger efter \"%s\" med %d incheckning, och kan snabbspolas.\n"
 msgstr[1] ""
 "Din gren ligger efter \"%s\" med %d incheckningar, och kan snabbspolas.\n"
 
-#: remote.c:1996
+#: remote.c:2008
 msgid "  (use \"git pull\" to update your local branch)\n"
 msgstr "  (använd \"git pull\" för att uppdatera din lokala gren)\n"
 
-#: remote.c:1999
+#: remote.c:2011
 #, c-format
 msgid ""
 "Your branch and '%s' have diverged,\n"
 "and have %d and %d different commit each, respectively.\n"
 msgid_plural ""
 "Your branch and '%s' have diverged,\n"
@@ -1112,41 +1112,41 @@
 "Din gren och \"%s\" har divergerat,\n"
 "och har %d respektive %d olika incheckning.\n"
 msgstr[1] ""
 "Din gren och \"%s\" har divergerat,\n"
 "och har %d respektive %d olika incheckningar.\n"
 
-#: remote.c:2009
+#: remote.c:2021
 msgid "  (use \"git pull\" to merge the remote branch into yours)\n"
 msgstr "  (använd \"git pull\" för att slå ihop fjärrgrenen med din egen)\n"
 
 #: run-command.c:87
 msgid "open /dev/null failed"
 msgstr "misslyckades öppna /dev/null"
 
 #: run-command.c:89
 #, c-format
 msgid "dup2(%d,%d) failed"
 msgstr "dup2(%d,%d) misslyckades"
 
-#: send-pack.c:265
+#: send-pack.c:268
 msgid "failed to sign the push certificate"
 msgstr "misslyckades underteckna push-certifikatet"
 
-#: send-pack.c:322
+#: send-pack.c:325
 msgid "the receiving end does not support --signed push"
 msgstr "mottagarsidan stöder inte push med --signed"
 
-#: sequencer.c:172 builtin/merge.c:781 builtin/merge.c:892
-#: builtin/merge.c:1002 builtin/merge.c:1012
+#: sequencer.c:172 builtin/merge.c:782 builtin/merge.c:893 builtin/merge.c:995
+#: builtin/merge.c:1005
 #, c-format
 msgid "Could not open '%s' for writing"
 msgstr "Kunde inte öppna \"%s\" för skrivning"
 
-#: sequencer.c:174 builtin/merge.c:343 builtin/merge.c:784
-#: builtin/merge.c:1004 builtin/merge.c:1017
+#: sequencer.c:174 builtin/merge.c:344 builtin/merge.c:785 builtin/merge.c:997
+#: builtin/merge.c:1010
 #, c-format
 msgid "Could not write to '%s'"
 msgstr "Kunde inte skriva till \"%s\""
 
 #: sequencer.c:195
 msgid ""
@@ -1163,13 +1163,13 @@
 "and commit the result with 'git commit'"
 msgstr ""
 "efter att ha löst konflikterna, markera de rättade sökvägarna\n"
 "med \"git add <sökvägar>\" eller \"git rm <sökvägar>\"\n"
 "och checka in resultatet med \"git commit\""
 
-#: sequencer.c:211 sequencer.c:852 sequencer.c:935
+#: sequencer.c:211 sequencer.c:856 sequencer.c:939
 #, c-format
 msgid "Could not write to %s"
 msgstr "Kunde inte skriva till %s"
 
 #: sequencer.c:214
 #, c-format
@@ -1186,203 +1186,203 @@
 
 #: sequencer.c:234
 msgid "Commit your changes or stash them to proceed."
 msgstr "Checka in dina ändringar eller använd \"stash\" för att fortsätta."
 
 #. TRANSLATORS: %s will be "revert" or "cherry-pick"
-#: sequencer.c:304
+#: sequencer.c:321
 #, c-format
 msgid "%s: Unable to write new index file"
 msgstr "%s: Kunde inte skriva ny indexfil"
 
-#: sequencer.c:335
+#: sequencer.c:339
 msgid "Could not resolve HEAD commit\n"
 msgstr "Kunde inte bestämma HEAD:s incheckning\n"
 
-#: sequencer.c:355
+#: sequencer.c:359
 msgid "Unable to update cache tree\n"
 msgstr "Kan inte uppdatera cacheträd\n"
 
-#: sequencer.c:402
+#: sequencer.c:406
 #, c-format
 msgid "Could not parse commit %s\n"
 msgstr "Kunde inte tolka incheckningen %s\n"
 
-#: sequencer.c:407
+#: sequencer.c:411
 #, c-format
 msgid "Could not parse parent commit %s\n"
 msgstr "Kunde inte tolka föräldraincheckningen %s\n"
 
-#: sequencer.c:473
+#: sequencer.c:477
 msgid "Your index file is unmerged."
 msgstr "Din indexfil har inte slagits ihop."
 
-#: sequencer.c:492
+#: sequencer.c:496
 #, c-format
 msgid "Commit %s is a merge but no -m option was given."
 msgstr "Incheckning %s är en sammanslagning, men flaggan -m angavs inte."
 
-#: sequencer.c:500
+#: sequencer.c:504
 #, c-format
 msgid "Commit %s does not have parent %d"
 msgstr "Incheckning %s har inte förälder %d"
 
-#: sequencer.c:504
+#: sequencer.c:508
 #, c-format
 msgid "Mainline was specified but commit %s is not a merge."
 msgstr "Huvudlinje angavs, men incheckningen %s är inte en sammanslagning"
 
 #. TRANSLATORS: The first %s will be "revert" or
 #. "cherry-pick", the second %s a SHA1
-#: sequencer.c:517
+#: sequencer.c:521
 #, c-format
 msgid "%s: cannot parse parent commit %s"
 msgstr "%s: kan inte tolka föräldraincheckningen %s"
 
-#: sequencer.c:521
+#: sequencer.c:525
 #, c-format
 msgid "Cannot get commit message for %s"
 msgstr "Kan inte hämta incheckningsmeddelande för %s"
 
-#: sequencer.c:607
+#: sequencer.c:611
 #, c-format
 msgid "could not revert %s... %s"
 msgstr "kunde inte ångra %s... %s"
 
-#: sequencer.c:608
+#: sequencer.c:612
 #, c-format
 msgid "could not apply %s... %s"
 msgstr "kunde inte tillämpa %s... %s"
 
-#: sequencer.c:644
+#: sequencer.c:648
 msgid "empty commit set passed"
 msgstr "den angivna uppsättningen incheckningar är tom"
 
-#: sequencer.c:652
+#: sequencer.c:656
 #, c-format
 msgid "git %s: failed to read the index"
 msgstr "git %s: misslyckades läsa indexet"
 
-#: sequencer.c:656
+#: sequencer.c:660
 #, c-format
 msgid "git %s: failed to refresh the index"
 msgstr "git %s: misslyckades uppdatera indexet"
 
-#: sequencer.c:716
+#: sequencer.c:720
 #, c-format
 msgid "Cannot %s during a %s"
 msgstr "kan inte %s under en %s"
 
-#: sequencer.c:738
+#: sequencer.c:742
 #, c-format
 msgid "Could not parse line %d."
 msgstr "Kan inte tolka rad %d."
 
-#: sequencer.c:743
+#: sequencer.c:747
 msgid "No commits parsed."
 msgstr "Inga incheckningar lästes."
 
-#: sequencer.c:756
+#: sequencer.c:760
 #, c-format
 msgid "Could not open %s"
 msgstr "Kunde inte öppna %s"
 
-#: sequencer.c:760
+#: sequencer.c:764
 #, c-format
 msgid "Could not read %s."
 msgstr "kunde inte läsa %s."
 
-#: sequencer.c:767
+#: sequencer.c:771
 #, c-format
 msgid "Unusable instruction sheet: %s"
 msgstr "Oanvändbart manus: %s"
 
-#: sequencer.c:797
+#: sequencer.c:801
 #, c-format
 msgid "Invalid key: %s"
 msgstr "Felaktig nyckel: %s"
 
-#: sequencer.c:800
+#: sequencer.c:804
 #, c-format
 msgid "Invalid value for %s: %s"
 msgstr "Felaktigt värde för %s: %s"
 
-#: sequencer.c:812
+#: sequencer.c:816
 #, c-format
 msgid "Malformed options sheet: %s"
 msgstr "Trasigt manus: %s"
 
-#: sequencer.c:833
+#: sequencer.c:837
 msgid "a cherry-pick or revert is already in progress"
 msgstr "en \"cherry-pick\" eller \"revert\" pågår redan"
 
-#: sequencer.c:834
+#: sequencer.c:838
 msgid "try \"git cherry-pick (--continue | --quit | --abort)\""
 msgstr "testa \"git cherry-pick (--continue | --quit | --abort)\""
 
-#: sequencer.c:838
+#: sequencer.c:842
 #, c-format
 msgid "Could not create sequencer directory %s"
 msgstr "Kunde inte skapa \"sequencer\"-katalogen \"%s\""
 
-#: sequencer.c:854 sequencer.c:939
+#: sequencer.c:858 sequencer.c:943
 #, c-format
 msgid "Error wrapping up %s."
 msgstr "Fel vid ombrytning av %s."
 
-#: sequencer.c:873 sequencer.c:1009
+#: sequencer.c:877 sequencer.c:1013
 msgid "no cherry-pick or revert in progress"
 msgstr "ingen \"cherry-pick\" eller \"revert\" pågår"
 
-#: sequencer.c:875
+#: sequencer.c:879
 msgid "cannot resolve HEAD"
 msgstr "kan inte bestämma HEAD"
 
-#: sequencer.c:877
+#: sequencer.c:881
 msgid "cannot abort from a branch yet to be born"
 msgstr "kan inte avbryta från en gren som ännu inte är född"
 
-#: sequencer.c:899 builtin/apply.c:4128
+#: sequencer.c:903 builtin/apply.c:4128
 #, c-format
 msgid "cannot open %s: %s"
 msgstr "kan inte öppna %s: %s"
 
-#: sequencer.c:902
+#: sequencer.c:906
 #, c-format
 msgid "cannot read %s: %s"
 msgstr "kan inte läsa %s: %s"
 
-#: sequencer.c:903
+#: sequencer.c:907
 msgid "unexpected end of file"
 msgstr "oväntat filslut"
 
-#: sequencer.c:909
+#: sequencer.c:913
 #, c-format
 msgid "stored pre-cherry-pick HEAD file '%s' is corrupt"
 msgstr "sparad HEAD-fil från före \"cherry-pick\", \"%s\", är trasig"
 
-#: sequencer.c:932
+#: sequencer.c:936
 #, c-format
 msgid "Could not format %s."
 msgstr "Kunde inte formatera %s."
 
-#: sequencer.c:1077
+#: sequencer.c:1081
 #, c-format
 msgid "%s: can't cherry-pick a %s"
 msgstr "%s: kan inte göra \"cherry-pick\" på typen \"%s\""
 
-#: sequencer.c:1080
+#: sequencer.c:1084
 #, c-format
 msgid "%s: bad revision"
 msgstr "%s: felaktig revision"
 
-#: sequencer.c:1114
+#: sequencer.c:1118
 msgid "Can't revert as initial commit"
 msgstr "Kan inte ångra som första incheckning"
 
-#: sequencer.c:1115
+#: sequencer.c:1119
 msgid "Can't cherry-pick into empty head"
 msgstr "Kan inte göra \"cherry-pick\" i ett tomt huvud"
 
 #: sha1_name.c:440
 msgid ""
 "Git normally never creates a ref that ends with 40 hex characters\n"
@@ -1446,44 +1446,44 @@
 msgstr "Kunde inte ta bort .gitmodules-posten för %s"
 
 #: submodule.c:120
 msgid "staging updated .gitmodules failed"
 msgstr "misslyckades köa uppdaterad .gitmodules"
 
-#: submodule.c:1111 builtin/init-db.c:363
+#: submodule.c:1111 builtin/init-db.c:371
 #, c-format
 msgid "Could not create git link %s"
 msgstr "Kunde inte skapa gitlänk %s"
 
 #: submodule.c:1122
 #, c-format
 msgid "Could not set core.worktree in %s"
 msgstr "Kunde inte sätta core.worktree i %s"
 
-#: trailer.c:499 trailer.c:503 trailer.c:507 trailer.c:561 trailer.c:565
-#: trailer.c:569
+#: trailer.c:500 trailer.c:504 trailer.c:508 trailer.c:562 trailer.c:566
+#: trailer.c:570
 #, c-format
 msgid "unknown value '%s' for key '%s'"
 msgstr "okänt värde \"%s\" för nyckeln \"%s\""
 
-#: trailer.c:551 trailer.c:556 builtin/remote.c:288
+#: trailer.c:552 trailer.c:557 builtin/remote.c:290
 #, c-format
 msgid "more than one %s"
 msgstr "mer än en %s"
 
-#: trailer.c:589
+#: trailer.c:590
 #, c-format
 msgid "empty trailer token in trailer '%.*s'"
 msgstr "tom släpradssymbol i släpraden \"%.*s\""
 
-#: trailer.c:709
+#: trailer.c:710
 #, c-format
 msgid "could not read input file '%s'"
 msgstr "kunde inte läsa indatafilen \"%s\""
 
-#: trailer.c:712
+#: trailer.c:713
 msgid "could not read from stdin"
 msgstr "Kunde inte läsa från standard in"
 
 #: unpack-trees.c:202
 msgid "Checking out files"
 msgstr "Checkar ut filer"
@@ -1680,296 +1680,296 @@
 
 #: wt-status.c:391
 #, c-format
 msgid "bug: unhandled diff status %c"
 msgstr "programfel: diff-status %c ej hanterad"
 
-#: wt-status.c:761
+#: wt-status.c:758
 msgid "Submodules changed but not updated:"
 msgstr "Undermoduler ändrade men inte uppdaterade:"
 
-#: wt-status.c:763
+#: wt-status.c:760
 msgid "Submodule changes to be committed:"
 msgstr "Undermodulers ändringar att checka in:"
 
-#: wt-status.c:842
+#: wt-status.c:839
 msgid ""
 "Do not touch the line above.\n"
 "Everything below will be removed."
 msgstr ""
 "Rör inte raden ovan.\n"
 "Allt nedan kommer tas bort."
 
-#: wt-status.c:933
+#: wt-status.c:930
 msgid "You have unmerged paths."
 msgstr "Du har ej sammanslagna sökvägar."
 
-#: wt-status.c:936
+#: wt-status.c:933
 msgid "  (fix conflicts and run \"git commit\")"
 msgstr "  (rätta konflikter och kör \"git commit\")"
 
-#: wt-status.c:939
+#: wt-status.c:936
 msgid "All conflicts fixed but you are still merging."
 msgstr "Alla konflikter har rättats men du är fortfarande i en sammanslagning."
 
-#: wt-status.c:942
+#: wt-status.c:939
 msgid "  (use \"git commit\" to conclude merge)"
 msgstr "  (använd \"git commit\" för att slutföra sammanslagningen)"
 
-#: wt-status.c:952
+#: wt-status.c:949
 msgid "You are in the middle of an am session."
 msgstr "Du är i mitten av en körning av \"git am\"."
 
-#: wt-status.c:955
+#: wt-status.c:952
 msgid "The current patch is empty."
 msgstr "Aktuell patch är tom."
 
-#: wt-status.c:959
+#: wt-status.c:956
 msgid "  (fix conflicts and then run \"git am --continue\")"
 msgstr "  (rätta konflikter och kör sedan \"git am --continue\")"
 
-#: wt-status.c:961
+#: wt-status.c:958
 msgid "  (use \"git am --skip\" to skip this patch)"
 msgstr "  (använd \"git am --skip\" för att hoppa över patchen)"
 
-#: wt-status.c:963
+#: wt-status.c:960
 msgid "  (use \"git am --abort\" to restore the original branch)"
 msgstr "  (använd \"git am --abort\" för att återställa ursprungsgrenen)"
 
-#: wt-status.c:1023 wt-status.c:1040
+#: wt-status.c:1020 wt-status.c:1037
 #, c-format
 msgid "You are currently rebasing branch '%s' on '%s'."
 msgstr "Du håller på att ombasera grenen \"%s\" ovanpå \"%s\"."
 
-#: wt-status.c:1028 wt-status.c:1045
+#: wt-status.c:1025 wt-status.c:1042
 msgid "You are currently rebasing."
 msgstr "Du håller på med en ombasering."
 
-#: wt-status.c:1031
+#: wt-status.c:1028
 msgid "  (fix conflicts and then run \"git rebase --continue\")"
 msgstr "  (rätta konflikter och kör sedan \"git rebase --continue\")"
 
-#: wt-status.c:1033
+#: wt-status.c:1030
 msgid "  (use \"git rebase --skip\" to skip this patch)"
 msgstr "  (använd \"git rebase --skip\" för att hoppa över patchen)"
 
-#: wt-status.c:1035
+#: wt-status.c:1032
 msgid "  (use \"git rebase --abort\" to check out the original branch)"
 msgstr "  (använd \"git rebase --abort\" för att checka ut ursprungsgrenen)"
 
-#: wt-status.c:1048
+#: wt-status.c:1045
 msgid "  (all conflicts fixed: run \"git rebase --continue\")"
 msgstr "  (alla konflikter rättade: kör \"git rebase --continue\")"
 
-#: wt-status.c:1052
+#: wt-status.c:1049
 #, c-format
 msgid ""
 "You are currently splitting a commit while rebasing branch '%s' on '%s'."
 msgstr ""
 "Du håller på att dela upp en incheckning medan du ombaserar grenen \"%s\" "
 "ovanpå \"%s\"."
 
-#: wt-status.c:1057
+#: wt-status.c:1054
 msgid "You are currently splitting a commit during a rebase."
 msgstr "Du håller på att dela upp en incheckning i en ombasering."
 
-#: wt-status.c:1060
+#: wt-status.c:1057
 msgid "  (Once your working directory is clean, run \"git rebase --continue\")"
 msgstr "  (Så fort din arbetskatalog är ren, kör \"git rebase --continue\")"
 
-#: wt-status.c:1064
+#: wt-status.c:1061
 #, c-format
 msgid "You are currently editing a commit while rebasing branch '%s' on '%s'."
 msgstr ""
 "Du håller på att redigera en incheckning medan du ombaserar grenen \"%s\" "
 "ovanpå \"%s\"."
 
-#: wt-status.c:1069
+#: wt-status.c:1066
 msgid "You are currently editing a commit during a rebase."
 msgstr "Du håller på att redigera en incheckning under en ombasering."
 
-#: wt-status.c:1072
+#: wt-status.c:1069
 msgid "  (use \"git commit --amend\" to amend the current commit)"
 msgstr ""
 "  (använd \"git commit --amend\" för att lägga till på aktuell incheckning)"
 
-#: wt-status.c:1074
+#: wt-status.c:1071
 msgid ""
 "  (use \"git rebase --continue\" once you are satisfied with your changes)"
 msgstr "  (använd \"git rebase --continue\" när du är nöjd med dina ändringar)"
 
-#: wt-status.c:1084
+#: wt-status.c:1081
 #, c-format
 msgid "You are currently cherry-picking commit %s."
 msgstr "Du håller på med en \"cherry-pick\" av incheckningen %s."
 
-#: wt-status.c:1089
+#: wt-status.c:1086
 msgid "  (fix conflicts and run \"git cherry-pick --continue\")"
 msgstr "  (rätta konflikter och kör sedan \"git cherry-pick --continue\")"
 
-#: wt-status.c:1092
+#: wt-status.c:1089
 msgid "  (all conflicts fixed: run \"git cherry-pick --continue\")"
 msgstr "  (alla konflikter rättade: kör \"git cherry-pick --continue\")"
 
-#: wt-status.c:1094
+#: wt-status.c:1091
 msgid "  (use \"git cherry-pick --abort\" to cancel the cherry-pick operation)"
 msgstr ""
 "  (använd \"git cherry-pick --abort\" för att avbryta \"cherry-pick\"-"
 "operationen)"
 
-#: wt-status.c:1103
+#: wt-status.c:1100
 #, c-format
 msgid "You are currently reverting commit %s."
 msgstr "Du håller på med att ångra incheckningen %s."
 
-#: wt-status.c:1108
+#: wt-status.c:1105
 msgid "  (fix conflicts and run \"git revert --continue\")"
 msgstr "  (rätta konflikter och kör sedan \"git revert --continue\")"
 
-#: wt-status.c:1111
+#: wt-status.c:1108
 msgid "  (all conflicts fixed: run \"git revert --continue\")"
 msgstr "  (alla konflikter rättade: kör \"git revert --continue\")"
 
-#: wt-status.c:1113
+#: wt-status.c:1110
 msgid "  (use \"git revert --abort\" to cancel the revert operation)"
 msgstr "  (använd \"git revert --abort\" för att avbryta ångrandet)"
 
-#: wt-status.c:1124
+#: wt-status.c:1121
 #, c-format
 msgid "You are currently bisecting, started from branch '%s'."
 msgstr "Du håller på med en \"bisect\", startad från grenen \"%s\"."
 
-#: wt-status.c:1128
+#: wt-status.c:1125
 msgid "You are currently bisecting."
 msgstr "Du håller på med en \"bisect\"."
 
-#: wt-status.c:1131
+#: wt-status.c:1128
 msgid "  (use \"git bisect reset\" to get back to the original branch)"
 msgstr ""
 "  (använd \"git bisect reset\" för att komma tillbaka till ursprungsgrenen)"
 
-#: wt-status.c:1306
+#: wt-status.c:1303
 msgid "On branch "
 msgstr "På grenen "
 
-#: wt-status.c:1313
+#: wt-status.c:1310
 msgid "rebase in progress; onto "
 msgstr "ombasering pågår; ovanpå"
 
-#: wt-status.c:1320
+#: wt-status.c:1317
 msgid "HEAD detached at "
 msgstr "HEAD frånkopplad vid "
 
-#: wt-status.c:1322
+#: wt-status.c:1319
 msgid "HEAD detached from "
 msgstr "HEAD frånkopplad från "
 
-#: wt-status.c:1325
+#: wt-status.c:1322
 msgid "Not currently on any branch."
 msgstr "Inte på någon gren för närvarande."
 
-#: wt-status.c:1342
+#: wt-status.c:1339
 msgid "Initial commit"
 msgstr "Första incheckning"
 
-#: wt-status.c:1356
+#: wt-status.c:1353
 msgid "Untracked files"
 msgstr "Ospårade filer"
 
-#: wt-status.c:1358
+#: wt-status.c:1355
 msgid "Ignored files"
 msgstr "Ignorerade filer"
 
-#: wt-status.c:1362
+#: wt-status.c:1359
 #, c-format
 msgid ""
 "It took %.2f seconds to enumerate untracked files. 'status -uno'\n"
 "may speed it up, but you have to be careful not to forget to add\n"
 "new files yourself (see 'git help status')."
 msgstr ""
 "Det tog %.2f sekunder att räkna upp ospårade filer. \"status -uno\"\n"
 "kan gå snabbare, men du måste vara försiktig så du inte glömmer\n"
 "lägga till nya filer själv (se \"git help status\")."
 
 # %s är nästa sträng eller tom.
-#: wt-status.c:1368
+#: wt-status.c:1365
 #, c-format
 msgid "Untracked files not listed%s"
 msgstr "Ospårade filer visas ej%s"
 
-#: wt-status.c:1370
+#: wt-status.c:1367
 msgid " (use -u option to show untracked files)"
 msgstr " (använd flaggan -u för att visa ospårade filer)"
 
-#: wt-status.c:1376
+#: wt-status.c:1373
 msgid "No changes"
 msgstr "Inga ändringar"
 
-#: wt-status.c:1381
+#: wt-status.c:1378
 #, c-format
 msgid "no changes added to commit (use \"git add\" and/or \"git commit -a\")\n"
 msgstr ""
 "inga ändringar att checka in (använd \"git add\" och/eller \"git commit -a"
 "\")\n"
 
-#: wt-status.c:1384
+#: wt-status.c:1381
 #, c-format
 msgid "no changes added to commit\n"
 msgstr "inga ändringar att checka in\n"
 
-#: wt-status.c:1387
+#: wt-status.c:1384
 #, c-format
 msgid ""
 "nothing added to commit but untracked files present (use \"git add\" to "
 "track)\n"
 msgstr ""
 "inget köat för incheckning, men ospårade filer finns (spåra med \"git add"
 "\")\n"
 
-#: wt-status.c:1390
+#: wt-status.c:1387
 #, c-format
 msgid "nothing added to commit but untracked files present\n"
 msgstr "inget köat för incheckning, men ospårade filer finns\n"
 
-#: wt-status.c:1393
+#: wt-status.c:1390
 #, c-format
 msgid "nothing to commit (create/copy files and use \"git add\" to track)\n"
 msgstr "inget att checka in (skapa/kopiera filer och spåra med \"git add\")\n"
 
-#: wt-status.c:1396 wt-status.c:1401
+#: wt-status.c:1393 wt-status.c:1398
 #, c-format
 msgid "nothing to commit\n"
 msgstr "inget att checka in\n"
 
-#: wt-status.c:1399
+#: wt-status.c:1396
 #, c-format
 msgid "nothing to commit (use -u to show untracked files)\n"
 msgstr "inget att checka in (använd -u för att visa ospårade filer)\n"
 
-#: wt-status.c:1403
+#: wt-status.c:1400
 #, c-format
 msgid "nothing to commit, working directory clean\n"
 msgstr "inget att checka in, arbetskatalogen ren\n"
 
-#: wt-status.c:1512
+#: wt-status.c:1509
 msgid "HEAD (no branch)"
 msgstr "HEAD (ingen gren)"
 
-#: wt-status.c:1518
+#: wt-status.c:1515
 msgid "Initial commit on "
 msgstr "Första incheckning på "
 
-#: wt-status.c:1550
+#: wt-status.c:1547
 msgid "gone"
 msgstr "försvunnen"
 
-#: wt-status.c:1552 wt-status.c:1560
+#: wt-status.c:1549 wt-status.c:1557
 msgid "behind "
 msgstr "efter "
 
-#: compat/precompose_utf8.c:55 builtin/clone.c:357
+#: compat/precompose_utf8.c:55 builtin/clone.c:360
 #, c-format
 msgid "failed to unlink '%s'"
 msgstr "misslyckades ta bort länken \"%s\""
 
 #: builtin/add.c:22
 msgid "git add [options] [--] <pathspec>..."
@@ -2022,28 +2022,28 @@
 
 #: builtin/add.c:231
 msgid "The following paths are ignored by one of your .gitignore files:\n"
 msgstr "Följande sökvägar ignoreras av en av dina .gitignore-filer:\n"
 
 #: builtin/add.c:248 builtin/clean.c:875 builtin/fetch.c:108 builtin/mv.c:110
-#: builtin/prune-packed.c:55 builtin/push.c:499 builtin/remote.c:1375
+#: builtin/prune-packed.c:55 builtin/push.c:499 builtin/remote.c:1372
 #: builtin/rm.c:269
 msgid "dry run"
 msgstr "testkörning"
 
 #: builtin/add.c:249 builtin/apply.c:4415 builtin/check-ignore.c:19
-#: builtin/commit.c:1362 builtin/count-objects.c:63 builtin/fsck.c:608
+#: builtin/commit.c:1326 builtin/count-objects.c:63 builtin/fsck.c:608
 #: builtin/log.c:1617 builtin/mv.c:109 builtin/read-tree.c:114
 msgid "be verbose"
 msgstr "var pratsam"
 
 #: builtin/add.c:251
 msgid "interactive picking"
 msgstr "plocka interaktivt"
 
-#: builtin/add.c:252 builtin/checkout.c:1108 builtin/reset.c:286
+#: builtin/add.c:252 builtin/checkout.c:1126 builtin/reset.c:286
 msgid "select hunks interactively"
 msgstr "välj stycken interaktivt"
 
 #: builtin/add.c:253
 msgid "edit current diff and apply"
 msgstr "redigera aktuell diff och applicera"
@@ -2082,16 +2082,12 @@
 
 #: builtin/add.c:286
 #, c-format
 msgid "Use -f if you really want to add them.\n"
 msgstr "Använd -f om du verkligen vill lägga till dem.\n"
 
-#: builtin/add.c:287
-msgid "no files added"
-msgstr "inga filer har lagts till"
-
 #: builtin/add.c:293
 msgid "adding files failed"
 msgstr "misslyckades lägga till filer"
 
 #: builtin/add.c:329
 msgid "-A and -u are mutually incompatible"
@@ -2365,13 +2361,13 @@
 
 #: builtin/apply.c:3653
 #, c-format
 msgid "Checking patch %s..."
 msgstr "Kontrollerar patchen %s..."
 
-#: builtin/apply.c:3746 builtin/checkout.c:213 builtin/reset.c:135
+#: builtin/apply.c:3746 builtin/checkout.c:231 builtin/reset.c:135
 #, c-format
 msgid "make_cache_entry failed for path '%s'"
 msgstr "make_cache_entry misslyckades för sökvägen \"%s\""
 
 #: builtin/apply.c:3889
 #, c-format
@@ -2444,13 +2440,13 @@
 msgstr "indata känns inte igen"
 
 #: builtin/apply.c:4245
 msgid "unable to read index file"
 msgstr "kan inte läsa indexfilen"
 
-#: builtin/apply.c:4362 builtin/apply.c:4365 builtin/clone.c:91
+#: builtin/apply.c:4362 builtin/apply.c:4365 builtin/clone.c:92
 #: builtin/fetch.c:93
 msgid "path"
 msgstr "sökväg"
 
 #: builtin/apply.c:4363
 msgid "don't apply changes matching the given path"
@@ -2984,14 +2980,14 @@
 
 #: builtin/branch.c:824
 msgid "act on remote-tracking branches"
 msgstr "arbeta på fjärrspårande grenar"
 
 #: builtin/branch.c:827 builtin/branch.c:833 builtin/branch.c:854
-#: builtin/branch.c:860 builtin/commit.c:1622 builtin/commit.c:1623
-#: builtin/commit.c:1624 builtin/commit.c:1625 builtin/tag.c:616
+#: builtin/branch.c:860 builtin/commit.c:1586 builtin/commit.c:1587
+#: builtin/commit.c:1588 builtin/commit.c:1589 builtin/tag.c:616
 #: builtin/tag.c:622
 msgid "commit"
 msgstr "incheckning"
 
 #: builtin/branch.c:828 builtin/branch.c:834
 msgid "print only branches that contain the commit"
@@ -3031,14 +3027,14 @@
 
 #: builtin/branch.c:850
 msgid "edit the description for the branch"
 msgstr "redigera beskrivning för grenen"
 
 #: builtin/branch.c:851
-msgid "force creation (when already exists)"
-msgstr "tvinga skapande (när den redan finns)"
+msgid "force creation, move/rename, deletion"
+msgstr "tvinga skapande, flytt/namnändring, borttagande"
 
 #: builtin/branch.c:854
 msgid "print only not merged branches"
 msgstr "visa endast ej sammanslagna grenar"
 
 #: builtin/branch.c:860
@@ -3050,117 +3046,117 @@
 msgstr "visa grenar i spalter"
 
 #: builtin/branch.c:877
 msgid "Failed to resolve HEAD as a valid ref."
 msgstr "Misslyckades slå upp HEAD som giltig referens"
 
-#: builtin/branch.c:881 builtin/clone.c:634
+#: builtin/branch.c:881 builtin/clone.c:637
 msgid "HEAD not found below refs/heads!"
 msgstr "HEAD hittades inte under refs/heads!"
 
 #: builtin/branch.c:903
 msgid "--column and --verbose are incompatible"
 msgstr "--column och --verbose är inkompatibla"
 
-#: builtin/branch.c:909 builtin/branch.c:948
+#: builtin/branch.c:914 builtin/branch.c:953
 msgid "branch name required"
 msgstr "grennamn krävs"
 
-#: builtin/branch.c:924
+#: builtin/branch.c:929
 msgid "Cannot give description to detached HEAD"
 msgstr "Kan inte beskriva frånkopplad HEAD"
 
-#: builtin/branch.c:929
+#: builtin/branch.c:934
 msgid "cannot edit description of more than one branch"
 msgstr "kan inte redigera beskrivning för mer än en gren"
 
-#: builtin/branch.c:936
+#: builtin/branch.c:941
 #, c-format
 msgid "No commit on branch '%s' yet."
 msgstr "Inga incheckningar på grenen \"%s\" ännu"
 
-#: builtin/branch.c:939
+#: builtin/branch.c:944
 #, c-format
 msgid "No branch named '%s'."
 msgstr "Ingen gren vid namnet \"%s\"."
 
-#: builtin/branch.c:954
+#: builtin/branch.c:959
 msgid "too many branches for a rename operation"
 msgstr "för många grenar för namnbyte"
 
-#: builtin/branch.c:959
+#: builtin/branch.c:964
 msgid "too many branches to set new upstream"
 msgstr "för många grenar för att byta uppström"
 
-#: builtin/branch.c:963
+#: builtin/branch.c:968
 #, c-format
 msgid ""
 "could not set upstream of HEAD to %s when it does not point to any branch."
 msgstr ""
 "kunde inte sätta uppström för HEAD till %s när det inte pekar mot någon gren."
 
-#: builtin/branch.c:966 builtin/branch.c:988 builtin/branch.c:1009
+#: builtin/branch.c:971 builtin/branch.c:993 builtin/branch.c:1014
 #, c-format
 msgid "no such branch '%s'"
 msgstr "okänd gren \"%s\""
 
-#: builtin/branch.c:970
+#: builtin/branch.c:975
 #, c-format
 msgid "branch '%s' does not exist"
 msgstr "grenen \"%s\" finns inte"
 
-#: builtin/branch.c:982
+#: builtin/branch.c:987
 msgid "too many branches to unset upstream"
 msgstr "för många grenar för att ta bort uppström"
 
-#: builtin/branch.c:986
+#: builtin/branch.c:991
 msgid "could not unset upstream of HEAD when it does not point to any branch."
 msgstr ""
 "kunde inte ta bort uppström för HEAD när det inte pekar mot någon gren."
 
-#: builtin/branch.c:992
+#: builtin/branch.c:997
 #, c-format
 msgid "Branch '%s' has no upstream information"
 msgstr "Grenen \"%s\" har ingen uppströmsinformation"
 
-#: builtin/branch.c:1006
+#: builtin/branch.c:1011
 msgid "it does not make sense to create 'HEAD' manually"
 msgstr "kan inte skapa \"HEAD\" manuellt"
 
-#: builtin/branch.c:1012
+#: builtin/branch.c:1017
 msgid "-a and -r options to 'git branch' do not make sense with a branch name"
 msgstr ""
 "flaggorna -a och -r på \"git branch\" kan inte anges tillsammans med ett "
 "grennamn"
 
-#: builtin/branch.c:1015
+#: builtin/branch.c:1020
 #, c-format
 msgid ""
 "The --set-upstream flag is deprecated and will be removed. Consider using --"
 "track or --set-upstream-to\n"
 msgstr ""
 "Flaggan --set-upstream rekommenderas ej och kommer tas bort. Använd --track "
 "eller --set-upstream-to\n"
 
-#: builtin/branch.c:1032
+#: builtin/branch.c:1037
 #, c-format
 msgid ""
 "\n"
 "If you wanted to make '%s' track '%s', do this:\n"
 "\n"
 msgstr ""
 "\n"
 "Om du vill göra så att \"%s\" spårar \"%s\" gör du så här:\n"
 "\n"
 
-#: builtin/branch.c:1033
+#: builtin/branch.c:1038
 #, c-format
 msgid "    git branch -d %s\n"
 msgstr "    git branch -d %s\n"
 
-#: builtin/branch.c:1034
+#: builtin/branch.c:1039
 #, c-format
 msgid "    git branch --set-upstream-to %s\n"
 msgstr "    git branch --set-upstream-to %s\n"
 
 #: builtin/bundle.c:47
 #, c-format
@@ -3172,49 +3168,49 @@
 msgstr "Behöver ett arkiv för att skapa ett paket (bundle)."
 
 #: builtin/bundle.c:60
 msgid "Need a repository to unbundle."
 msgstr "Behöver ett arkiv för att packa upp ett paket (bundle)."
 
-#: builtin/cat-file.c:332
+#: builtin/cat-file.c:328
 msgid "git cat-file (-t|-s|-e|-p|<type>|--textconv) <object>"
 msgstr "git cat-file (-t|-s|-e|-p|<typ>|--textconv) <objekt>"
 
-#: builtin/cat-file.c:333
+#: builtin/cat-file.c:329
 msgid "git cat-file (--batch|--batch-check) < <list_of_objects>"
 msgstr "git cat-file (--batch|--batch-check) < <objektlista>"
 
-#: builtin/cat-file.c:370
+#: builtin/cat-file.c:366
 msgid "<type> can be one of: blob, tree, commit, tag"
 msgstr "<typ> kan vara en av: blob, tree, commit, tag"
 
-#: builtin/cat-file.c:371
+#: builtin/cat-file.c:367
 msgid "show object type"
 msgstr "visa objekttyp"
 
-#: builtin/cat-file.c:372
+#: builtin/cat-file.c:368
 msgid "show object size"
 msgstr "visa objektstorlek"
 
-#: builtin/cat-file.c:374
+#: builtin/cat-file.c:370
 msgid "exit with zero when there's no error"
 msgstr "avsluta med noll när det inte uppstått något fel"
 
-#: builtin/cat-file.c:375
+#: builtin/cat-file.c:371
 msgid "pretty-print object's content"
 msgstr "visa objektets innehåll snyggt"
 
-#: builtin/cat-file.c:377
+#: builtin/cat-file.c:373
 msgid "for blob objects, run textconv on object's content"
 msgstr "för blob-objekt, kör textconv på objektets innehåll"
 
-#: builtin/cat-file.c:379
+#: builtin/cat-file.c:375
 msgid "show info and content of objects fed from the standard input"
 msgstr "visa information och innehåll för objekt som listas på standard in"
 
-#: builtin/cat-file.c:382
+#: builtin/cat-file.c:378
 msgid "show info about objects fed from the standard input"
 msgstr "visa information för objekt som listas på standard in"
 
 #: builtin/check-attr.c:11
 msgid "git check-attr [-a | --all | attr...] [--] pathname..."
 msgstr "git check-attr [-a | --all | attr...] [--] sökväg..."
@@ -3236,13 +3232,13 @@
 msgstr "läs filnamn från standard in"
 
 #: builtin/check-attr.c:23 builtin/check-ignore.c:24
 msgid "terminate input and output records by a NUL character"
 msgstr "avsluta in- och utdataposter med NUL-tecken"
 
-#: builtin/check-ignore.c:18 builtin/checkout.c:1089 builtin/gc.c:274
+#: builtin/check-ignore.c:18 builtin/checkout.c:1107 builtin/gc.c:274
 msgid "suppress progress reporting"
 msgstr "undertryck förloppsrapportering"
 
 #: builtin/check-ignore.c:26
 msgid "show non-matching input paths"
 msgstr "visa indatasökvägar som inte träffas"
@@ -3341,111 +3337,111 @@
 msgstr "git checkout [flaggor] <gren>"
 
 #: builtin/checkout.c:26
 msgid "git checkout [options] [<branch>] -- <file>..."
 msgstr "git checkout [flaggor] [<gren>] -- <fil>..."
 
-#: builtin/checkout.c:114 builtin/checkout.c:147
+#: builtin/checkout.c:132 builtin/checkout.c:165
 #, c-format
 msgid "path '%s' does not have our version"
 msgstr "sökvägen \"%s\" har inte vår version"
 
-#: builtin/checkout.c:116 builtin/checkout.c:149
+#: builtin/checkout.c:134 builtin/checkout.c:167
 #, c-format
 msgid "path '%s' does not have their version"
 msgstr "sökvägen \"%s\" har inte deras version"
 
-#: builtin/checkout.c:132
+#: builtin/checkout.c:150
 #, c-format
 msgid "path '%s' does not have all necessary versions"
 msgstr "sökvägen \"%s\" innehåller inte alla nödvändiga versioner"
 
-#: builtin/checkout.c:176
+#: builtin/checkout.c:194
 #, c-format
 msgid "path '%s' does not have necessary versions"
 msgstr "sökvägen \"%s\" innehåller inte nödvändiga versioner"
 
-#: builtin/checkout.c:193
+#: builtin/checkout.c:211
 #, c-format
 msgid "path '%s': cannot merge"
 msgstr "sökväg \"%s\": kan inte slå ihop"
 
-#: builtin/checkout.c:210
+#: builtin/checkout.c:228
 #, c-format
 msgid "Unable to add merge result for '%s'"
 msgstr "Kunde inte lägga till sammanslagningsresultat för \"%s\""
 
-#: builtin/checkout.c:231 builtin/checkout.c:234 builtin/checkout.c:237
-#: builtin/checkout.c:240
+#: builtin/checkout.c:249 builtin/checkout.c:252 builtin/checkout.c:255
+#: builtin/checkout.c:258
 #, c-format
 msgid "'%s' cannot be used with updating paths"
 msgstr "\"%s\" kan inte användas vid uppdatering av sökvägar"
 
-#: builtin/checkout.c:243 builtin/checkout.c:246
+#: builtin/checkout.c:261 builtin/checkout.c:264
 #, c-format
 msgid "'%s' cannot be used with %s"
 msgstr "\"%s\" kan inte användas med %s"
 
-#: builtin/checkout.c:249
+#: builtin/checkout.c:267
 #, c-format
 msgid "Cannot update paths and switch to branch '%s' at the same time."
 msgstr "Kan inte uppdatera sökvägar och växla till grenen \"%s\" samtidigt."
 
-#: builtin/checkout.c:260 builtin/checkout.c:449
+#: builtin/checkout.c:278 builtin/checkout.c:467
 msgid "corrupt index file"
 msgstr "indexfilen är trasig"
 
-#: builtin/checkout.c:320 builtin/checkout.c:327
+#: builtin/checkout.c:338 builtin/checkout.c:345
 #, c-format
 msgid "path '%s' is unmerged"
 msgstr "sökvägen \"%s\" har inte slagits ihop"
 
-#: builtin/checkout.c:471
+#: builtin/checkout.c:489
 msgid "you need to resolve your current index first"
 msgstr "du måste lösa ditt befintliga index först"
 
-#: builtin/checkout.c:597
+#: builtin/checkout.c:615
 #, c-format
 msgid "Can not do reflog for '%s'\n"
 msgstr "Kan inte skapa referenslog för \"%s\"\n"
 
-#: builtin/checkout.c:635
+#: builtin/checkout.c:653
 msgid "HEAD is now at"
 msgstr "HEAD är nu på"
 
-#: builtin/checkout.c:642
+#: builtin/checkout.c:660
 #, c-format
 msgid "Reset branch '%s'\n"
 msgstr "Återställ gren \"%s\"\n"
 
-#: builtin/checkout.c:645
+#: builtin/checkout.c:663
 #, c-format
 msgid "Already on '%s'\n"
 msgstr "Redan på \"%s\"\n"
 
-#: builtin/checkout.c:649
+#: builtin/checkout.c:667
 #, c-format
 msgid "Switched to and reset branch '%s'\n"
 msgstr "Växlade till och nollställde grenen \"%s\"\n"
 
-#: builtin/checkout.c:651 builtin/checkout.c:1032
+#: builtin/checkout.c:669 builtin/checkout.c:1050
 #, c-format
 msgid "Switched to a new branch '%s'\n"
 msgstr "Växlade till en ny gren \"%s\"\n"
 
-#: builtin/checkout.c:653
+#: builtin/checkout.c:671
 #, c-format
 msgid "Switched to branch '%s'\n"
 msgstr "Växlade till grenen \"%s\"\n"
 
-#: builtin/checkout.c:705
+#: builtin/checkout.c:723
 #, c-format
 msgid " ... and %d more.\n"
 msgstr " ... och %d till.\n"
 
-#: builtin/checkout.c:711
+#: builtin/checkout.c:729
 #, c-format
 msgid ""
 "Warning: you are leaving %d commit behind, not connected to\n"
 "any of your branches:\n"
 "\n"
 "%s\n"
@@ -3462,13 +3458,13 @@
 msgstr[1] ""
 "Varning: du lämnar %d incheckningar bakom dig som inte är ansluta till\n"
 "någon av dina grenar:\n"
 "\n"
 "%s\n"
 
-#: builtin/checkout.c:729
+#: builtin/checkout.c:747
 #, c-format
 msgid ""
 "If you want to keep them by creating a new branch, this may be a good time\n"
 "to do so with:\n"
 "\n"
 " git branch new_branch_name %s\n"
@@ -3477,159 +3473,159 @@
 "Om du vill behålla dem genom att skapa en ny gren är nu en bra tidpunkt\n"
 "att göra så, med:\n"
 "\n"
 " git branch nytt_grennamn %s\n"
 "\n"
 
-#: builtin/checkout.c:759
+#: builtin/checkout.c:777
 msgid "internal error in revision walk"
 msgstr "internt fel vid genomgång av revisioner (revision walk)"
 
-#: builtin/checkout.c:763
+#: builtin/checkout.c:781
 msgid "Previous HEAD position was"
 msgstr "Tidigare position för HEAD var"
 
-#: builtin/checkout.c:790 builtin/checkout.c:1027
+#: builtin/checkout.c:808 builtin/checkout.c:1045
 msgid "You are on a branch yet to be born"
 msgstr "Du är på en gren som ännu inte är född"
 
-#: builtin/checkout.c:934
+#: builtin/checkout.c:952
 #, c-format
 msgid "only one reference expected, %d given."
 msgstr "endast en referens förväntades, %d gavs."
 
-#: builtin/checkout.c:973
+#: builtin/checkout.c:991
 #, c-format
 msgid "invalid reference: %s"
 msgstr "felaktig referens: %s"
 
-#: builtin/checkout.c:1002
+#: builtin/checkout.c:1020
 #, c-format
 msgid "reference is not a tree: %s"
 msgstr "referensen är inte ett träd: %s"
 
-#: builtin/checkout.c:1041
+#: builtin/checkout.c:1059
 msgid "paths cannot be used with switching branches"
 msgstr "sökvägar kan inte användas vid byte av gren"
 
-#: builtin/checkout.c:1044 builtin/checkout.c:1048
+#: builtin/checkout.c:1062 builtin/checkout.c:1066
 #, c-format
 msgid "'%s' cannot be used with switching branches"
 msgstr "\"%s\" kan inte användas vid byte av gren"
 
-#: builtin/checkout.c:1052 builtin/checkout.c:1055 builtin/checkout.c:1060
-#: builtin/checkout.c:1063
+#: builtin/checkout.c:1070 builtin/checkout.c:1073 builtin/checkout.c:1078
+#: builtin/checkout.c:1081
 #, c-format
 msgid "'%s' cannot be used with '%s'"
 msgstr "\"%s\" kan inte användas med \"%s\""
 
-#: builtin/checkout.c:1068
+#: builtin/checkout.c:1086
 #, c-format
 msgid "Cannot switch branch to a non-commit '%s'"
 msgstr "Kan inte växla gren till icke-incheckningen \"%s\""
 
-#: builtin/checkout.c:1090 builtin/checkout.c:1092 builtin/clone.c:89
+#: builtin/checkout.c:1108 builtin/checkout.c:1110 builtin/clone.c:90
 #: builtin/remote.c:159 builtin/remote.c:161
 msgid "branch"
 msgstr "gren"
 
-#: builtin/checkout.c:1091
+#: builtin/checkout.c:1109
 msgid "create and checkout a new branch"
 msgstr "skapa och checka ut en ny gren"
 
-#: builtin/checkout.c:1093
+#: builtin/checkout.c:1111
 msgid "create/reset and checkout a branch"
 msgstr "skapa/nollställ och checka ut en gren"
 
-#: builtin/checkout.c:1094
+#: builtin/checkout.c:1112
 msgid "create reflog for new branch"
 msgstr "skapa reflogg för ny gren"
 
-#: builtin/checkout.c:1095
+#: builtin/checkout.c:1113
 msgid "detach the HEAD at named commit"
 msgstr "koppla från HEAD vid namngiven incheckning"
 
-#: builtin/checkout.c:1096
+#: builtin/checkout.c:1114
 msgid "set upstream info for new branch"
 msgstr "sätt uppströmsinformation för ny gren"
 
-#: builtin/checkout.c:1098
+#: builtin/checkout.c:1116
 msgid "new-branch"
 msgstr "ny-gren"
 
-#: builtin/checkout.c:1098
+#: builtin/checkout.c:1116
 msgid "new unparented branch"
 msgstr "ny gren utan förälder"
 
-#: builtin/checkout.c:1099
+#: builtin/checkout.c:1117
 msgid "checkout our version for unmerged files"
 msgstr "checka ut vår version för ej sammanslagna filer"
 
-#: builtin/checkout.c:1101
+#: builtin/checkout.c:1119
 msgid "checkout their version for unmerged files"
 msgstr "checka ut deras version för ej sammanslagna filer"
 
-#: builtin/checkout.c:1103
+#: builtin/checkout.c:1121
 msgid "force checkout (throw away local modifications)"
 msgstr "tvinga utcheckning (kasta bort lokala ändringar)"
 
-#: builtin/checkout.c:1104
+#: builtin/checkout.c:1122
 msgid "perform a 3-way merge with the new branch"
 msgstr "utför en 3-vägssammanslagning för den nya grenen"
 
-#: builtin/checkout.c:1105 builtin/merge.c:226
+#: builtin/checkout.c:1123 builtin/merge.c:227
 msgid "update ignored files (default)"
 msgstr "uppdatera ignorerade filer (standard)"
 
-#: builtin/checkout.c:1106 builtin/log.c:1239 parse-options.h:245
+#: builtin/checkout.c:1124 builtin/log.c:1239 parse-options.h:245
 msgid "style"
 msgstr "stil"
 
-#: builtin/checkout.c:1107
+#: builtin/checkout.c:1125
 msgid "conflict style (merge or diff3)"
 msgstr "konfliktstil (merge eller diff3)"
 
-#: builtin/checkout.c:1110
+#: builtin/checkout.c:1128
 msgid "do not limit pathspecs to sparse entries only"
 msgstr "begränsa inte sökvägar till endast glesa poster"
 
-#: builtin/checkout.c:1112
+#: builtin/checkout.c:1130
 msgid "second guess 'git checkout no-such-branch'"
 msgstr "förutspå \"git checkout gren-saknas\""
 
-#: builtin/checkout.c:1135
+#: builtin/checkout.c:1153
 msgid "-b, -B and --orphan are mutually exclusive"
 msgstr "-b, -B och --orphan är ömsesidigt uteslutande"
 
-#: builtin/checkout.c:1152
+#: builtin/checkout.c:1170
 msgid "--track needs a branch name"
 msgstr "--track behöver ett namn på en gren"
 
-#: builtin/checkout.c:1157
+#: builtin/checkout.c:1175
 msgid "Missing branch name; try -b"
 msgstr "Grennamn saknas; försök med -b"
 
-#: builtin/checkout.c:1194
+#: builtin/checkout.c:1212
 msgid "invalid path specification"
 msgstr "felaktig sökvägsangivelse"
 
-#: builtin/checkout.c:1201
+#: builtin/checkout.c:1219
 #, c-format
 msgid ""
 "Cannot update paths and switch to branch '%s' at the same time.\n"
 "Did you intend to checkout '%s' which can not be resolved as commit?"
 msgstr ""
 "Kan inte uppdatera sökvägar och växla till grenen \"%s\" samtidigt.\n"
 "Ville du checka ut \"%s\" som inte kan lösas som en utcheckning?"
 
-#: builtin/checkout.c:1206
+#: builtin/checkout.c:1224
 #, c-format
 msgid "git checkout: --detach does not take a path argument '%s'"
 msgstr "git checkout: --detach tar inte en sökväg som argument \"%s\""
 
-#: builtin/checkout.c:1210
+#: builtin/checkout.c:1228
 msgid ""
 "git checkout: --ours/--theirs, --force and --merge are incompatible when\n"
 "checking out of the index."
 msgstr ""
 "git checkout: --ours/--theirs, --force och --merge är inkompatibla när\n"
 "du checkar ut från indexet."
@@ -3816,266 +3812,282 @@
 "angavs; vägrar städa"
 
 #: builtin/clone.c:37
 msgid "git clone [options] [--] <repo> [<dir>]"
 msgstr "git clone [flaggor] [--] <arkiv> [<kat>]"
 
-#: builtin/clone.c:65 builtin/fetch.c:112 builtin/merge.c:223
+#: builtin/clone.c:66 builtin/fetch.c:112 builtin/merge.c:224
 #: builtin/push.c:514
 msgid "force progress reporting"
 msgstr "tvinga förloppsrapportering"
 
-#: builtin/clone.c:67
+#: builtin/clone.c:68
 msgid "don't create a checkout"
 msgstr "skapa inte någon utcheckning"
 
-#: builtin/clone.c:68 builtin/clone.c:70 builtin/init-db.c:488
+#: builtin/clone.c:69 builtin/clone.c:71 builtin/init-db.c:496
 msgid "create a bare repository"
 msgstr "skapa ett naket (\"bare\") arkiv"
 
-#: builtin/clone.c:72
+#: builtin/clone.c:73
 msgid "create a mirror repository (implies bare)"
 msgstr "skapa ett spegelarkiv (implicerar \"bare\")"
 
-#: builtin/clone.c:74
+#: builtin/clone.c:75
 msgid "to clone from a local repository"
 msgstr "för att klona från ett lokalt arkiv"
 
-#: builtin/clone.c:76
+#: builtin/clone.c:77
 msgid "don't use local hardlinks, always copy"
 msgstr "skapa inte lokala hårda länkar, kopiera alltid"
 
-#: builtin/clone.c:78
+#: builtin/clone.c:79
 msgid "setup as shared repository"
 msgstr "skapa som ett delat arkiv"
 
-#: builtin/clone.c:80 builtin/clone.c:82
+#: builtin/clone.c:81 builtin/clone.c:83
 msgid "initialize submodules in the clone"
 msgstr "initiera undermoduler i klonen"
 
-#: builtin/clone.c:83 builtin/init-db.c:485
+#: builtin/clone.c:84 builtin/init-db.c:493
 msgid "template-directory"
 msgstr "mallkatalog"
 
-#: builtin/clone.c:84 builtin/init-db.c:486
+#: builtin/clone.c:85 builtin/init-db.c:494
 msgid "directory from which templates will be used"
 msgstr "katalog att använda mallar från"
 
-#: builtin/clone.c:86
+#: builtin/clone.c:87
 msgid "reference repository"
 msgstr "referensarkiv"
 
-#: builtin/clone.c:87 builtin/column.c:26 builtin/merge-file.c:44
+#: builtin/clone.c:88 builtin/column.c:26 builtin/merge-file.c:44
 msgid "name"
 msgstr "namn"
 
-#: builtin/clone.c:88
+#: builtin/clone.c:89
 msgid "use <name> instead of 'origin' to track upstream"
 msgstr "använd <namn> istället för \"origin\" för att spåra uppströms"
 
-#: builtin/clone.c:90
+#: builtin/clone.c:91
 msgid "checkout <branch> instead of the remote's HEAD"
 msgstr "checka ut <gren> istället för fjärrens HEAD"
 
-#: builtin/clone.c:92
+#: builtin/clone.c:93
 msgid "path to git-upload-pack on the remote"
 msgstr "sökväg till git-upload-pack på fjärren"
 
-#: builtin/clone.c:93 builtin/fetch.c:113 builtin/grep.c:659
+#: builtin/clone.c:94 builtin/fetch.c:113 builtin/grep.c:659
 msgid "depth"
 msgstr "djup"
 
-#: builtin/clone.c:94
+#: builtin/clone.c:95
 msgid "create a shallow clone of that depth"
 msgstr "skapa en grund klon på detta djup"
 
-#: builtin/clone.c:96
+#: builtin/clone.c:97
 msgid "clone only one branch, HEAD or --branch"
 msgstr "klona endast en gren, HEAD eller --branch"
 
-#: builtin/clone.c:97 builtin/init-db.c:494
+#: builtin/clone.c:99
+msgid "use --reference only while cloning"
+msgstr "använd --reference endast under kloningen"
+
+#: builtin/clone.c:100 builtin/init-db.c:502
 msgid "gitdir"
 msgstr "gitkat"
 
-#: builtin/clone.c:98 builtin/init-db.c:495
+#: builtin/clone.c:101 builtin/init-db.c:503
 msgid "separate git dir from working tree"
 msgstr "separera gitkatalogen från arbetskatalogen"
 
-#: builtin/clone.c:99
+#: builtin/clone.c:102
 msgid "key=value"
 msgstr "nyckel=värde"
 
-#: builtin/clone.c:100
+#: builtin/clone.c:103
 msgid "set config inside the new repository"
 msgstr "ställ in konfiguration i det nya arkivet"
 
-#: builtin/clone.c:253
+#: builtin/clone.c:256
 #, c-format
 msgid "reference repository '%s' is not a local repository."
 msgstr "referensarkivet \"%s\" är inte ett lokalt arkiv."
 
-#: builtin/clone.c:257
+#: builtin/clone.c:260
 #, c-format
 msgid "reference repository '%s' is shallow"
 msgstr "referensarkivet \"%s\" är grunt"
 
-#: builtin/clone.c:260
+#: builtin/clone.c:263
 #, c-format
 msgid "reference repository '%s' is grafted"
 msgstr "referensarkivet \"%s\" är ympat"
 
-#: builtin/clone.c:322
+#: builtin/clone.c:325
 #, c-format
 msgid "failed to create directory '%s'"
 msgstr "misslyckades skapa katalogen \"%s\""
 
-#: builtin/clone.c:324 builtin/diff.c:84
+#: builtin/clone.c:327 builtin/diff.c:84
 #, c-format
 msgid "failed to stat '%s'"
 msgstr "misslyckades ta status på \"%s\""
 
-#: builtin/clone.c:326
+#: builtin/clone.c:329
 #, c-format
 msgid "%s exists and is not a directory"
 msgstr "%s finns och är ingen katalog"
 
-#: builtin/clone.c:340
+#: builtin/clone.c:343
 #, c-format
 msgid "failed to stat %s\n"
 msgstr "misslyckades ta status på %s\n"
 
-#: builtin/clone.c:362
+#: builtin/clone.c:365
 #, c-format
 msgid "failed to create link '%s'"
 msgstr "misslyckades skapa länken \"%s\""
 
-#: builtin/clone.c:366
+#: builtin/clone.c:369
 #, c-format
 msgid "failed to copy file to '%s'"
 msgstr "misslyckades kopiera filen till \"%s\""
 
-#: builtin/clone.c:389 builtin/clone.c:563
+#: builtin/clone.c:392 builtin/clone.c:566
 #, c-format
 msgid "done.\n"
 msgstr "klart.\n"
 
-#: builtin/clone.c:401
+#: builtin/clone.c:404
 msgid ""
 "Clone succeeded, but checkout failed.\n"
 "You can inspect what was checked out with 'git status'\n"
 "and retry the checkout with 'git checkout -f HEAD'\n"
 msgstr ""
 "Klonen lyckades, men utcheckningen misslyckades.\n"
 "Du kan inspektera det som checkades ut med \"git status\"\n"
 "och försöka checka ut igen med \"git checkout -f HEAD\"\n"
 
-#: builtin/clone.c:478
+#: builtin/clone.c:481
 #, c-format
 msgid "Could not find remote branch %s to clone."
 msgstr "Kunde inte hitta fjärrgrenen %s för att klona."
 
 # Vague original, not networking-related, but rather related to the actual
 # objects in the database.
-#: builtin/clone.c:558
+#: builtin/clone.c:561
 #, c-format
 msgid "Checking connectivity... "
 msgstr "Kontrollerar konnektivitet..."
 
-#: builtin/clone.c:561
+#: builtin/clone.c:564
 msgid "remote did not send all necessary objects"
 msgstr "fjärren sände inte alla nödvändiga objekt"
 
-#: builtin/clone.c:625
+#: builtin/clone.c:628
 msgid "remote HEAD refers to nonexistent ref, unable to checkout.\n"
 msgstr ""
 "HEAD hos fjärren pekar på en obefintlig referens, kan inte checka ut.\n"
 
-#: builtin/clone.c:656
+#: builtin/clone.c:659
 msgid "unable to checkout working tree"
 msgstr "kunde inte checka ut arbetskatalogen"
 
-#: builtin/clone.c:765
+#: builtin/clone.c:746
+msgid "cannot repack to clean up"
+msgstr "kan inte packa om för att städa upp"
+
+#: builtin/clone.c:748
+msgid "cannot unlink temporary alternates file"
+msgstr "kunde inte ta bort temporär \"alternates\"-fil"
+
+#: builtin/clone.c:778
 msgid "Too many arguments."
 msgstr "För många argument."
 
-#: builtin/clone.c:769
+#: builtin/clone.c:782
 msgid "You must specify a repository to clone."
 msgstr "Du måste ange ett arkiv att klona."
 
-#: builtin/clone.c:780
+#: builtin/clone.c:793
 #, c-format
 msgid "--bare and --origin %s options are incompatible."
 msgstr "flaggorna --bare och --origin %s är inkompatibla."
 
-#: builtin/clone.c:783
+#: builtin/clone.c:796
 msgid "--bare and --separate-git-dir are incompatible."
 msgstr "flaggorna --bare och --separate-git-dir är inkompatibla."
 
-#: builtin/clone.c:796
+#: builtin/clone.c:809
 #, c-format
 msgid "repository '%s' does not exist"
 msgstr "arkivet \"%s\" finns inte"
 
-#: builtin/clone.c:802 builtin/fetch.c:1155
+#: builtin/clone.c:815 builtin/fetch.c:1155
 #, c-format
 msgid "depth %s is not a positive number"
 msgstr "djupet %s är inte ett positivt tal"
 
-#: builtin/clone.c:812
+#: builtin/clone.c:825
 #, c-format
 msgid "destination path '%s' already exists and is not an empty directory."
 msgstr "destinationssökvägen \"%s\" finns redan och är inte en tom katalog."
 
-#: builtin/clone.c:822
+#: builtin/clone.c:835
 #, c-format
 msgid "working tree '%s' already exists."
 msgstr "arbetsträdet \"%s\" finns redan."
 
-#: builtin/clone.c:835 builtin/clone.c:847
+#: builtin/clone.c:848 builtin/clone.c:860
 #, c-format
 msgid "could not create leading directories of '%s'"
 msgstr "kunde inte skapa inledande kataloger för \"%s\""
 
-#: builtin/clone.c:838
+#: builtin/clone.c:851
 #, c-format
 msgid "could not create work tree dir '%s'."
 msgstr "kunde inte skapa arbetskatalogen \"%s\""
 
-#: builtin/clone.c:857
+#: builtin/clone.c:870
 #, c-format
 msgid "Cloning into bare repository '%s'...\n"
 msgstr "Klonar till ett naket arkiv \"%s\"...\n"
 
-#: builtin/clone.c:859
+#: builtin/clone.c:872
 #, c-format
 msgid "Cloning into '%s'...\n"
 msgstr "Klonar till \"%s\"...\n"
 
-#: builtin/clone.c:895
+#: builtin/clone.c:897
+msgid "--dissociate given, but there is no --reference"
+msgstr "--dissociate angavs, men --reference har inte angivits"
+
+#: builtin/clone.c:912
 msgid "--depth is ignored in local clones; use file:// instead."
 msgstr "--depth ignoreras i lokala kloningar; använd file:// istället"
 
-#: builtin/clone.c:898
+#: builtin/clone.c:915
 msgid "source repository is shallow, ignoring --local"
 msgstr "källarkivet är grunt, ignorerar --local"
 
-#: builtin/clone.c:903
+#: builtin/clone.c:920
 msgid "--local is ignored"
 msgstr "--local ignoreras"
 
-#: builtin/clone.c:907
+#: builtin/clone.c:924
 #, c-format
 msgid "Don't know how to clone %s"
 msgstr "Vet inte hur man klonar %s"
 
-#: builtin/clone.c:958 builtin/clone.c:966
+#: builtin/clone.c:975 builtin/clone.c:983
 #, c-format
 msgid "Remote branch %s not found in upstream %s"
 msgstr "Fjärrgrenen %s hittades inte i uppströmsarkivet %s"
 
-#: builtin/clone.c:969
+#: builtin/clone.c:986
 msgid "You appear to have cloned an empty repository."
 msgstr "Du verkar ha klonat ett tomt arkiv."
 
 #: builtin/column.c:9
 msgid "git column [options]"
 msgstr "git column [flaggor]"
@@ -4253,81 +4265,76 @@
 msgstr "kan inte läsa indexet"
 
 #: builtin/commit.c:473
 msgid "unable to write temporary index file"
 msgstr "kunde inte skriva temporär indexfil"
 
-#: builtin/commit.c:592
+#: builtin/commit.c:584
 #, c-format
 msgid "commit '%s' lacks author header"
 msgstr "incheckningen \"%s\" saknar författarhuvud"
 
-#: builtin/commit.c:594
+#: builtin/commit.c:586
 #, c-format
 msgid "commit '%s' has malformed author line"
 msgstr "incheckningen \"%s\" har felformaterat författarhuvud"
 
-#: builtin/commit.c:613
+#: builtin/commit.c:605
 msgid "malformed --author parameter"
 msgstr "felformad \"--author\"-flagga"
 
-#: builtin/commit.c:621
+#: builtin/commit.c:613
 #, c-format
 msgid "invalid date format: %s"
 msgstr "felaktigt datumformat: %s"
 
-#: builtin/commit.c:642
-#, c-format
-msgid "Malformed ident string: '%s'"
-msgstr "Felaktig indragningssträng: \"%s\""
-
-#: builtin/commit.c:675
+#: builtin/commit.c:657
 msgid ""
 "unable to select a comment character that is not used\n"
 "in the current commit message"
 msgstr ""
 "kunde inte välja ett kommentarstecken som inte använts\n"
 "i det befintliga incheckningsmeddelandet"
 
-#: builtin/commit.c:712 builtin/commit.c:745 builtin/commit.c:1120
+#: builtin/commit.c:694 builtin/commit.c:727 builtin/commit.c:1084
 #, c-format
 msgid "could not lookup commit %s"
 msgstr "kunde inte slå upp incheckningen %s"
 
-#: builtin/commit.c:724 builtin/shortlog.c:273
+#: builtin/commit.c:706 builtin/shortlog.c:273
 #, c-format
 msgid "(reading log message from standard input)\n"
 msgstr "(läser loggmeddelande från standard in)\n"
 
-#: builtin/commit.c:726
+#: builtin/commit.c:708
 msgid "could not read log from standard input"
 msgstr "kunde inte läsa logg från standard in"
 
-#: builtin/commit.c:730
+#: builtin/commit.c:712
 #, c-format
 msgid "could not read log file '%s'"
 msgstr "kunde inte läsa loggfilen \"%s\""
 
-#: builtin/commit.c:752
+#: builtin/commit.c:734
 msgid "could not read MERGE_MSG"
 msgstr "kunde inte läsa MERGE_MSG"
 
-#: builtin/commit.c:756
+#: builtin/commit.c:738
 msgid "could not read SQUASH_MSG"
 msgstr "kunde inte läsa SQUASH_MSG"
 
-#: builtin/commit.c:760
+#: builtin/commit.c:742
 #, c-format
 msgid "could not read '%s'"
 msgstr "kunde inte läsa \"%s\""
 
-#: builtin/commit.c:831
+#: builtin/commit.c:789
 msgid "could not write commit template"
 msgstr "kunde inte skriva incheckningsmall"
 
-#: builtin/commit.c:849
+#: builtin/commit.c:807
 #, c-format
 msgid ""
 "\n"
 "It looks like you may be committing a merge.\n"
 "If this is not correct, please remove the file\n"
 "\t%s\n"
@@ -4336,13 +4343,13 @@
 "\n"
 "Det verkar som du checkar in en sammanslagning.\n"
 "Om det inte stämmer tar du bort filen\n"
 "\t%s\n"
 "och försöker igen.\n"
 
-#: builtin/commit.c:854
+#: builtin/commit.c:812
 #, c-format
 msgid ""
 "\n"
 "It looks like you may be committing a cherry-pick.\n"
 "If this is not correct, please remove the file\n"
 "\t%s\n"
@@ -4351,381 +4358,381 @@
 "\n"
 "Det verkar som du checkar in en cherry-pick.\n"
 "Om det inte stämmer tar du bort filen\n"
 "\t%s\n"
 "och försöker igen.\n"
 
-#: builtin/commit.c:867
+#: builtin/commit.c:825
 #, c-format
 msgid ""
 "Please enter the commit message for your changes. Lines starting\n"
 "with '%c' will be ignored, and an empty message aborts the commit.\n"
 msgstr ""
 "Ange incheckningsmeddelandet för dina ändringar. Rader som inleds\n"
 "med \"%c\" kommer ignoreras, och ett tomt meddelande avbryter "
 "incheckningen.\n"
 
-#: builtin/commit.c:874
+#: builtin/commit.c:832
 #, c-format
 msgid ""
 "Please enter the commit message for your changes. Lines starting\n"
 "with '%c' will be kept; you may remove them yourself if you want to.\n"
 "An empty message aborts the commit.\n"
 msgstr ""
 "Ange incheckningsmeddelandet för dina ändringar. Rader som inleds\n"
 "med \"%c\" kommer behållas; du kan själv ta bort dem om du vill.\n"
 "Ett tomt meddelande avbryter incheckningen.\n"
 
-#: builtin/commit.c:888
+#: builtin/commit.c:852
 #, c-format
 msgid "%sAuthor:    %.*s <%.*s>"
 msgstr "%sFörfattare: %.*s <%.*s>"
 
-#: builtin/commit.c:896
+#: builtin/commit.c:860
 #, c-format
 msgid "%sDate:      %s"
 msgstr "%sDatum:      %s"
 
-#: builtin/commit.c:903
+#: builtin/commit.c:867
 #, c-format
 msgid "%sCommitter: %.*s <%.*s>"
 msgstr "%sIncheckare: %.*s <%.*s>"
 
-#: builtin/commit.c:921
+#: builtin/commit.c:885
 msgid "Cannot read index"
 msgstr "Kan inte läsa indexet"
 
-#: builtin/commit.c:978
+#: builtin/commit.c:942
 msgid "Error building trees"
 msgstr "Fel vid byggande av träd"
 
-#: builtin/commit.c:993 builtin/tag.c:495
+#: builtin/commit.c:957 builtin/tag.c:495
 #, c-format
 msgid "Please supply the message using either -m or -F option.\n"
 msgstr "Ange meddelandet en av flaggorna -m eller -F.\n"
 
-#: builtin/commit.c:1095
+#: builtin/commit.c:1059
 #, c-format
 msgid "No existing author found with '%s'"
 msgstr "Hittade ingen befintlig författare med \"%s\""
 
-#: builtin/commit.c:1110 builtin/commit.c:1350
+#: builtin/commit.c:1074 builtin/commit.c:1314
 #, c-format
 msgid "Invalid untracked files mode '%s'"
 msgstr "Ogiltigt läge för ospårade filer: \"%s\""
 
-#: builtin/commit.c:1147
+#: builtin/commit.c:1111
 msgid "--long and -z are incompatible"
 msgstr "--long och -z är inkompatibla"
 
-#: builtin/commit.c:1177
+#: builtin/commit.c:1141
 msgid "Using both --reset-author and --author does not make sense"
 msgstr "Kan inte använda både --reset-author och --author"
 
-#: builtin/commit.c:1186
+#: builtin/commit.c:1150
 msgid "You have nothing to amend."
 msgstr "Du har inget att utöka."
 
-#: builtin/commit.c:1189
+#: builtin/commit.c:1153
 msgid "You are in the middle of a merge -- cannot amend."
 msgstr "Du är i mitten av en sammanslagning -- kan inte utöka."
 
-#: builtin/commit.c:1191
+#: builtin/commit.c:1155
 msgid "You are in the middle of a cherry-pick -- cannot amend."
 msgstr "Du är i mitten av en cherry-pick -- kan inte utöka."
 
-#: builtin/commit.c:1194
+#: builtin/commit.c:1158
 msgid "Options --squash and --fixup cannot be used together"
 msgstr "Flaggorna --squash och --fixup kan inte användas samtidigt"
 
-#: builtin/commit.c:1204
+#: builtin/commit.c:1168
 msgid "Only one of -c/-C/-F/--fixup can be used."
 msgstr "Endast en av -c/-C/-F/--fixup kan användas."
 
-#: builtin/commit.c:1206
+#: builtin/commit.c:1170
 msgid "Option -m cannot be combined with -c/-C/-F/--fixup."
 msgstr "Flaggan -m kan inte kombineras med -c/-C/-F/--fixup."
 
-#: builtin/commit.c:1214
+#: builtin/commit.c:1178
 msgid "--reset-author can be used only with -C, -c or --amend."
 msgstr "--reset-author kan endast användas med -C, -c eller --amend."
 
-#: builtin/commit.c:1231
+#: builtin/commit.c:1195
 msgid "Only one of --include/--only/--all/--interactive/--patch can be used."
 msgstr ""
 "Endast en av --include/--only/--all/--interactive/--patch kan användas."
 
-#: builtin/commit.c:1233
+#: builtin/commit.c:1197
 msgid "No paths with --include/--only does not make sense."
 msgstr "Du måste ange sökvägar tillsammans med --include/--only."
 
-#: builtin/commit.c:1235
+#: builtin/commit.c:1199
 msgid "Clever... amending the last one with dirty index."
 msgstr "Smart... utöka den senaste med smutsigt index."
 
-#: builtin/commit.c:1237
+#: builtin/commit.c:1201
 msgid "Explicit paths specified without -i or -o; assuming --only paths..."
 msgstr "Explicita sökvägar angavs utan -i eller -o; antar --only sökvägar..."
 
-#: builtin/commit.c:1249 builtin/tag.c:728
+#: builtin/commit.c:1213 builtin/tag.c:728
 #, c-format
 msgid "Invalid cleanup mode %s"
 msgstr "Felaktigt städningsläge %s"
 
-#: builtin/commit.c:1254
+#: builtin/commit.c:1218
 msgid "Paths with -a does not make sense."
 msgstr "Kan inte ange sökvägar med -a."
 
-#: builtin/commit.c:1364 builtin/commit.c:1644
+#: builtin/commit.c:1328 builtin/commit.c:1608
 msgid "show status concisely"
 msgstr "visa koncis status"
 
-#: builtin/commit.c:1366 builtin/commit.c:1646
+#: builtin/commit.c:1330 builtin/commit.c:1610
 msgid "show branch information"
 msgstr "visa information om gren"
 
-#: builtin/commit.c:1368 builtin/commit.c:1648 builtin/push.c:500
+#: builtin/commit.c:1332 builtin/commit.c:1612 builtin/push.c:500
 msgid "machine-readable output"
 msgstr "maskinläsbar utdata"
 
-#: builtin/commit.c:1371 builtin/commit.c:1650
+#: builtin/commit.c:1335 builtin/commit.c:1614
 msgid "show status in long format (default)"
 msgstr "visa status i långt format (standard)"
 
-#: builtin/commit.c:1374 builtin/commit.c:1653
+#: builtin/commit.c:1338 builtin/commit.c:1617
 msgid "terminate entries with NUL"
 msgstr "terminera poster med NUL"
 
-#: builtin/commit.c:1376 builtin/commit.c:1656 builtin/fast-export.c:980
+#: builtin/commit.c:1340 builtin/commit.c:1620 builtin/fast-export.c:980
 #: builtin/fast-export.c:983 builtin/tag.c:603
 msgid "mode"
 msgstr "läge"
 
-#: builtin/commit.c:1377 builtin/commit.c:1656
+#: builtin/commit.c:1341 builtin/commit.c:1620
 msgid "show untracked files, optional modes: all, normal, no. (Default: all)"
 msgstr "visa ospårade filer, valfria lägen: alla, normal, no. (Standard: all)"
 
-#: builtin/commit.c:1380
+#: builtin/commit.c:1344
 msgid "show ignored files"
 msgstr "visa ignorerade filer"
 
-#: builtin/commit.c:1381 parse-options.h:153
+#: builtin/commit.c:1345 parse-options.h:153
 msgid "when"
 msgstr "när"
 
-#: builtin/commit.c:1382
+#: builtin/commit.c:1346
 msgid ""
 "ignore changes to submodules, optional when: all, dirty, untracked. "
 "(Default: all)"
 msgstr ""
 "ignorera ändringar i undermoduler, valfritt när: all, dirty, untracked. "
 "(Default: all)"
 
-#: builtin/commit.c:1384
+#: builtin/commit.c:1348
 msgid "list untracked files in columns"
 msgstr "visa ospårade filer i spalter"
 
-#: builtin/commit.c:1471
+#: builtin/commit.c:1435
 msgid "couldn't look up newly created commit"
 msgstr "kunde inte slå upp en precis skapad incheckning"
 
-#: builtin/commit.c:1473
+#: builtin/commit.c:1437
 msgid "could not parse newly created commit"
 msgstr "kunde inte tolka en precis skapad incheckning"
 
-#: builtin/commit.c:1518
+#: builtin/commit.c:1482
 msgid "detached HEAD"
 msgstr "frånkopplad HEAD"
 
-#: builtin/commit.c:1521
+#: builtin/commit.c:1485
 msgid " (root-commit)"
 msgstr " (rotincheckning)"
 
-#: builtin/commit.c:1614
+#: builtin/commit.c:1578
 msgid "suppress summary after successful commit"
 msgstr "undertryck sammanfattning efter framgångsrik incheckning"
 
-#: builtin/commit.c:1615
+#: builtin/commit.c:1579
 msgid "show diff in commit message template"
 msgstr "visa diff i mallen för incheckningsmeddelandet"
 
-#: builtin/commit.c:1617
+#: builtin/commit.c:1581
 msgid "Commit message options"
 msgstr "Alternativ för incheckningsmeddelande"
 
-#: builtin/commit.c:1618 builtin/tag.c:601
+#: builtin/commit.c:1582 builtin/tag.c:601
 msgid "read message from file"
 msgstr "läs meddelande från fil"
 
-#: builtin/commit.c:1619
+#: builtin/commit.c:1583
 msgid "author"
 msgstr "författare"
 
-#: builtin/commit.c:1619
+#: builtin/commit.c:1583
 msgid "override author for commit"
 msgstr "överstyr författare för incheckningen"
 
-#: builtin/commit.c:1620 builtin/gc.c:275
+#: builtin/commit.c:1584 builtin/gc.c:275
 msgid "date"
 msgstr "datum"
 
-#: builtin/commit.c:1620
+#: builtin/commit.c:1584
 msgid "override date for commit"
 msgstr "överstyr datum för incheckningen"
 
-#: builtin/commit.c:1621 builtin/merge.c:217 builtin/notes.c:408
-#: builtin/notes.c:565 builtin/tag.c:599
+#: builtin/commit.c:1585 builtin/merge.c:218 builtin/notes.c:391
+#: builtin/notes.c:554 builtin/tag.c:599
 msgid "message"
 msgstr "meddelande"
 
-#: builtin/commit.c:1621
+#: builtin/commit.c:1585
 msgid "commit message"
 msgstr "incheckningsmeddelande"
 
-#: builtin/commit.c:1622
+#: builtin/commit.c:1586
 msgid "reuse and edit message from specified commit"
 msgstr "återanvänd och redigera meddelande från angiven incheckning"
 
-#: builtin/commit.c:1623
+#: builtin/commit.c:1587
 msgid "reuse message from specified commit"
 msgstr "återanvänd meddelande från angiven incheckning"
 
-#: builtin/commit.c:1624
+#: builtin/commit.c:1588
 msgid "use autosquash formatted message to fixup specified commit"
 msgstr ""
 "använd autosquash-formaterat meddelande för att fixa angiven incheckning"
 
-#: builtin/commit.c:1625
+#: builtin/commit.c:1589
 msgid "use autosquash formatted message to squash specified commit"
 msgstr ""
 "använd autosquash-formaterat meddelande för att slå ihop med angiven "
 "incheckning"
 
-#: builtin/commit.c:1626
+#: builtin/commit.c:1590
 msgid "the commit is authored by me now (used with -C/-c/--amend)"
 msgstr "jag är nu författare av incheckningen (används med -C/-c/--amend)"
 
-#: builtin/commit.c:1627 builtin/log.c:1191 builtin/revert.c:86
+#: builtin/commit.c:1591 builtin/log.c:1191 builtin/revert.c:86
 msgid "add Signed-off-by:"
 msgstr "lägg till Signed-off-by:"
 
-#: builtin/commit.c:1628
+#: builtin/commit.c:1592
 msgid "use specified template file"
 msgstr "använd angiven mallfil"
 
-#: builtin/commit.c:1629
+#: builtin/commit.c:1593
 msgid "force edit of commit"
 msgstr "tvinga redigering av incheckning"
 
-#: builtin/commit.c:1630
+#: builtin/commit.c:1594
 msgid "default"
 msgstr "standard"
 
-#: builtin/commit.c:1630 builtin/tag.c:604
+#: builtin/commit.c:1594 builtin/tag.c:604
 msgid "how to strip spaces and #comments from message"
 msgstr "hur blanksteg och #kommentarer skall tas bort från meddelande"
 
-#: builtin/commit.c:1631
+#: builtin/commit.c:1595
 msgid "include status in commit message template"
 msgstr "inkludera status i mallen för incheckningsmeddelandet"
 
-#: builtin/commit.c:1632 builtin/merge.c:224 builtin/revert.c:92
+#: builtin/commit.c:1596 builtin/merge.c:225 builtin/revert.c:92
 #: builtin/tag.c:605
 msgid "key-id"
 msgstr "nyckel-id"
 
-#: builtin/commit.c:1633 builtin/merge.c:225 builtin/revert.c:93
+#: builtin/commit.c:1597 builtin/merge.c:226 builtin/revert.c:93
 msgid "GPG sign commit"
 msgstr "GPG-signera incheckning"
 
-#: builtin/commit.c:1636
+#: builtin/commit.c:1600
 msgid "Commit contents options"
 msgstr "Alternativ för incheckningens innehåll"
 
-#: builtin/commit.c:1637
+#: builtin/commit.c:1601
 msgid "commit all changed files"
 msgstr "checka in alla ändrade filer"
 
-#: builtin/commit.c:1638
+#: builtin/commit.c:1602
 msgid "add specified files to index for commit"
 msgstr "lägg till angivna filer till indexet för incheckning"
 
-#: builtin/commit.c:1639
+#: builtin/commit.c:1603
 msgid "interactively add files"
 msgstr "lägg till filer interaktivt"
 
-#: builtin/commit.c:1640
+#: builtin/commit.c:1604
 msgid "interactively add changes"
 msgstr "lägg till ändringar interaktivt"
 
-#: builtin/commit.c:1641
+#: builtin/commit.c:1605
 msgid "commit only specified files"
 msgstr "checka endast in angivna filer"
 
-#: builtin/commit.c:1642
+#: builtin/commit.c:1606
 msgid "bypass pre-commit hook"
 msgstr "förbigå pre-commit-krok"
 
-#: builtin/commit.c:1643
+#: builtin/commit.c:1607
 msgid "show what would be committed"
 msgstr "visa vad som skulle checkas in"
 
-#: builtin/commit.c:1654
+#: builtin/commit.c:1618
 msgid "amend previous commit"
 msgstr "lägg till föregående incheckning"
 
-#: builtin/commit.c:1655
+#: builtin/commit.c:1619
 msgid "bypass post-rewrite hook"
 msgstr "förbigå post-rewrite-krok"
 
-#: builtin/commit.c:1660
+#: builtin/commit.c:1624
 msgid "ok to record an empty change"
 msgstr "ok att registrera en tom ändring"
 
-#: builtin/commit.c:1662
+#: builtin/commit.c:1626
 msgid "ok to record a change with an empty message"
 msgstr "ok att registrera en ändring med tomt meddelande"
 
-#: builtin/commit.c:1691
+#: builtin/commit.c:1655
 msgid "could not parse HEAD commit"
 msgstr "kunde inte tolka HEAD:s incheckning"
 
-#: builtin/commit.c:1730 builtin/merge.c:518
+#: builtin/commit.c:1694 builtin/merge.c:519
 #, c-format
 msgid "could not open '%s' for reading"
 msgstr "kunde inte öppna \"%s\" för läsning"
 
-#: builtin/commit.c:1737
+#: builtin/commit.c:1701
 #, c-format
 msgid "Corrupt MERGE_HEAD file (%s)"
 msgstr "Trasig MERGE_HEAD-fil (%s)"
 
-#: builtin/commit.c:1744
+#: builtin/commit.c:1708
 msgid "could not read MERGE_MODE"
 msgstr "kunde inte läsa MERGE_MODE"
 
-#: builtin/commit.c:1763
+#: builtin/commit.c:1727
 #, c-format
 msgid "could not read commit message: %s"
 msgstr "kunde inte läsa incheckningsmeddelande: %s"
 
-#: builtin/commit.c:1774
+#: builtin/commit.c:1738
 #, c-format
 msgid "Aborting commit; you did not edit the message.\n"
 msgstr "Avbryter incheckning; meddelandet inte redigerat.\n"
 
-#: builtin/commit.c:1779
+#: builtin/commit.c:1743
 #, c-format
 msgid "Aborting commit due to empty commit message.\n"
 msgstr "Avbryter på grund av tomt incheckningsmeddelande.\n"
 
-#: builtin/commit.c:1794 builtin/merge.c:850 builtin/merge.c:875
+#: builtin/commit.c:1758 builtin/merge.c:851 builtin/merge.c:876
 msgid "failed to write commit object"
 msgstr "kunde inte skriva incheckningsobjekt"
 
-#: builtin/commit.c:1827
+#: builtin/commit.c:1791
 msgid ""
 "Repository has been updated, but unable to write\n"
 "new_index file. Check that disk is not full and quota is\n"
 "not exceeded, and then \"git reset HEAD\" to recover."
 msgstr ""
 "Arkivet har uppdaterats, men kunde inte skriva filen\n"
@@ -4814,23 +4821,19 @@
 msgstr "visa alla"
 
 #: builtin/config.c:71
 msgid "open an editor"
 msgstr "öppna textredigeringsprogram"
 
-#: builtin/config.c:72 builtin/config.c:73
-msgid "slot"
-msgstr "plats"
-
 #: builtin/config.c:72
-msgid "find the color configured: [default]"
-msgstr "hitta den inställda färgen: [default]"
+msgid "find the color configured: slot [default]"
+msgstr "hitta den inställda färgen: slot [default]"
 
 #: builtin/config.c:73
-msgid "find the color setting: [stdout-is-tty]"
-msgstr "hitta färginställningen: [stdout-is-tty]"
+msgid "find the color setting: slot [stdout-is-tty]"
+msgstr "hitta färginställningen: slot [stdout-is-tty]"
 
 #: builtin/config.c:74
 msgid "Type"
 msgstr "Typ"
 
 #: builtin/config.c:75
@@ -4858,17 +4861,17 @@
 msgstr "terminera värden med NUL-byte"
 
 #: builtin/config.c:81
 msgid "respect include directives on lookup"
 msgstr "respektera inkluderingsdirektiv vid uppslag"
 
-#: builtin/config.c:315
+#: builtin/config.c:316
 msgid "unable to parse default color value"
 msgstr "kan inte tolka standardfärgvärde"
 
-#: builtin/config.c:455
+#: builtin/config.c:457
 #, c-format
 msgid ""
 "# This is Git's per-user configuration file.\n"
 "[core]\n"
 "# Please adapt and uncomment the following lines:\n"
 "#\tuser = %s\n"
@@ -4877,13 +4880,13 @@
 "# Detta är Gits användarspecifika konfigurationsfil\n"
 "[core]\n"
 "# Justera och ta bort kommenteringsmärket från följande rader:\n"
 "#\tuser = %s\n"
 "#\temail = %s\n"
 
-#: builtin/config.c:590
+#: builtin/config.c:589
 #, c-format
 msgid "cannot create configuration file %s"
 msgstr "kan inte skapa konfigurationsfilen \"%s\""
 
 #: builtin/count-objects.c:55
 msgid "git count-objects [-v] [-H | --human-readable]"
@@ -5304,13 +5307,13 @@
 msgstr "   (%s har blivit dinglande)"
 
 #: builtin/fetch.c:798
 msgid "[deleted]"
 msgstr "[borttagen]"
 
-#: builtin/fetch.c:799 builtin/remote.c:1063
+#: builtin/fetch.c:799 builtin/remote.c:1060
 msgid "(none)"
 msgstr "(ingen)"
 
 #: builtin/fetch.c:818
 #, c-format
 msgid "Refusing to fetch into current branch %s of non-bare repository"
@@ -5380,80 +5383,80 @@
 
 #: builtin/fmt-merge-msg.c:13
 msgid "git fmt-merge-msg [-m <message>] [--log[=<n>]|--no-log] [--file <file>]"
 msgstr ""
 "git fmt-merge-msg [-m <meddelande>] [--log[=<n>]|--no-log] [--file <fil>]"
 
-#: builtin/fmt-merge-msg.c:663 builtin/fmt-merge-msg.c:666 builtin/grep.c:698
-#: builtin/merge.c:197 builtin/repack.c:179 builtin/repack.c:183
-#: builtin/show-branch.c:654 builtin/show-ref.c:178 builtin/tag.c:590
+#: builtin/fmt-merge-msg.c:662 builtin/fmt-merge-msg.c:665 builtin/grep.c:698
+#: builtin/merge.c:198 builtin/repack.c:178 builtin/repack.c:182
+#: builtin/show-branch.c:657 builtin/show-ref.c:178 builtin/tag.c:590
 #: parse-options.h:132 parse-options.h:239
 msgid "n"
 msgstr "n"
 
-#: builtin/fmt-merge-msg.c:664
+#: builtin/fmt-merge-msg.c:663
 msgid "populate log with at most <n> entries from shortlog"
 msgstr "fyll i loggen med som mest <n> poster från shortlog"
 
-#: builtin/fmt-merge-msg.c:667
+#: builtin/fmt-merge-msg.c:666
 msgid "alias for --log (deprecated)"
 msgstr "alias för --log (avråds)"
 
-#: builtin/fmt-merge-msg.c:670
+#: builtin/fmt-merge-msg.c:669
 msgid "text"
 msgstr "text"
 
-#: builtin/fmt-merge-msg.c:671
+#: builtin/fmt-merge-msg.c:670
 msgid "use <text> as start of message"
 msgstr "inled meddelande med <text>"
 
-#: builtin/fmt-merge-msg.c:672
+#: builtin/fmt-merge-msg.c:671
 msgid "file to read from"
 msgstr "fil att läsa från"
 
 #: builtin/for-each-ref.c:676
 msgid "unable to parse format"
 msgstr "kan inte tolka formatet"
 
-#: builtin/for-each-ref.c:1057
+#: builtin/for-each-ref.c:1064
 msgid "git for-each-ref [options] [<pattern>]"
 msgstr "git for-each-ref [flaggor] [<mönster>]"
 
-#: builtin/for-each-ref.c:1072
+#: builtin/for-each-ref.c:1079
 msgid "quote placeholders suitably for shells"
 msgstr "citera platshållare passande för skal"
 
-#: builtin/for-each-ref.c:1074
+#: builtin/for-each-ref.c:1081
 msgid "quote placeholders suitably for perl"
 msgstr "citera platshållare passande för perl"
 
-#: builtin/for-each-ref.c:1076
+#: builtin/for-each-ref.c:1083
 msgid "quote placeholders suitably for python"
 msgstr "citera platshållare passande för python"
 
-#: builtin/for-each-ref.c:1078
-msgid "quote placeholders suitably for tcl"
-msgstr "citera platshållare passande för tcl"
+#: builtin/for-each-ref.c:1085
+msgid "quote placeholders suitably for Tcl"
+msgstr "citera platshållare passande för Tcl"
 
-#: builtin/for-each-ref.c:1081
+#: builtin/for-each-ref.c:1088
 msgid "show only <n> matched refs"
 msgstr "visa endast <n> träffade refs"
 
-#: builtin/for-each-ref.c:1082 builtin/replace.c:438
+#: builtin/for-each-ref.c:1089 builtin/replace.c:438
 msgid "format"
 msgstr "format"
 
-#: builtin/for-each-ref.c:1082
+#: builtin/for-each-ref.c:1089
 msgid "format to use for the output"
 msgstr "format att använda för utdata"
 
-#: builtin/for-each-ref.c:1083
+#: builtin/for-each-ref.c:1090
 msgid "key"
 msgstr "nyckel"
 
-#: builtin/for-each-ref.c:1084
+#: builtin/for-each-ref.c:1091
 msgid "field name to sort on"
 msgstr "fältnamn att sortera på"
 
 # Vague original, not networking-related, but rather related to the actual
 # objects in the database.
 #: builtin/fsck.c:147 builtin/prune.c:136
@@ -5901,67 +5904,67 @@
 "'%s': cmd for supported man viewer.\n"
 "Please consider using 'man.<tool>.path' instead."
 msgstr ""
 "\"%s\": kommando för man-visare som stöds.\n"
 "Använd \"man.<verktyg>.path\" istället."
 
-#: builtin/help.c:352
+#: builtin/help.c:354
 #, c-format
 msgid "'%s': unknown man viewer."
 msgstr "\"%s\": okänd man-visare."
 
-#: builtin/help.c:369
+#: builtin/help.c:371
 msgid "no man viewer handled the request"
 msgstr "ingen man-visare hanterade förfrågan"
 
-#: builtin/help.c:377
+#: builtin/help.c:379
 msgid "no info viewer handled the request"
 msgstr "ingen info-visare hanterade förfrågan"
 
-#: builtin/help.c:423
+#: builtin/help.c:428
 msgid "Defining attributes per path"
 msgstr "Definierar attribut per sökväg"
 
-#: builtin/help.c:424
+#: builtin/help.c:429
 msgid "Everyday Git With 20 Commands Or So"
 msgstr "Git för dagligt bruk i ungefär 20 kommandon"
 
-#: builtin/help.c:425
+#: builtin/help.c:430
 msgid "A Git glossary"
 msgstr "En Git-ordlista"
 
-#: builtin/help.c:426
+#: builtin/help.c:431
 msgid "Specifies intentionally untracked files to ignore"
 msgstr "Ange avsiktligen ospårade filer att ignorera"
 
-#: builtin/help.c:427
+#: builtin/help.c:432
 msgid "Defining submodule properties"
 msgstr "Ange egenskaper för undermoduler"
 
-#: builtin/help.c:428
+#: builtin/help.c:433
 msgid "Specifying revisions and ranges for Git"
 msgstr "Ange versioner och intervall i Git"
 
-#: builtin/help.c:429
+#: builtin/help.c:434
 msgid "A tutorial introduction to Git (for version 1.5.1 or newer)"
 msgstr "Introduktion till Git (för version 1.5.1 och senare)"
 
-#: builtin/help.c:430
+#: builtin/help.c:435
 msgid "An overview of recommended workflows with Git"
 msgstr "Översikt över rekommenderade arbetsflöden med Git"
 
-#: builtin/help.c:442
+#: builtin/help.c:447
 msgid "The common Git guides are:\n"
 msgstr "De vanliga Git-vägledningarna är:\n"
 
-#: builtin/help.c:463 builtin/help.c:480
+#: builtin/help.c:468 builtin/help.c:485
 #, c-format
 msgid "usage: %s%s"
 msgstr "användning: %s%s"
 
-#: builtin/help.c:496
+#: builtin/help.c:501
 #, c-format
 msgid "`git %s' is aliased to `%s'"
 msgstr "\"git %s\" är ett alias för \"%s\""
 
 #: builtin/index-pack.c:150
 #, c-format
@@ -6298,107 +6301,107 @@
 
 #: builtin/init-db.c:110
 #, c-format
 msgid "ignoring template %s"
 msgstr "ignorerar mallen %s"
 
-#: builtin/init-db.c:133
+#: builtin/init-db.c:136
 #, c-format
 msgid "insanely long template path %s"
 msgstr "tokigt lång mallsökväg %s"
 
-#: builtin/init-db.c:141
+#: builtin/init-db.c:144
 #, c-format
 msgid "templates not found %s"
 msgstr "mallarna hittades inte %s"
 
-#: builtin/init-db.c:154
+#: builtin/init-db.c:157
 #, c-format
 msgid "not copying templates of a wrong format version %d from '%s'"
 msgstr "kopierade inte mallar från felaktig formatversion %d från \"%s\""
 
-#: builtin/init-db.c:192
+#: builtin/init-db.c:197
 #, c-format
 msgid "insane git directory %s"
 msgstr "tokig git-katalog %s"
 
-#: builtin/init-db.c:323 builtin/init-db.c:326
+#: builtin/init-db.c:331 builtin/init-db.c:334
 #, c-format
 msgid "%s already exists"
 msgstr "%s finns redan"
 
-#: builtin/init-db.c:355
+#: builtin/init-db.c:363
 #, c-format
 msgid "unable to handle file type %d"
 msgstr "kan inte hantera filtyp %d"
 
-#: builtin/init-db.c:358
+#: builtin/init-db.c:366
 #, c-format
 msgid "unable to move %s to %s"
 msgstr "kan inte flytta %s till %s"
 
 #. TRANSLATORS: The first '%s' is either "Reinitialized
 #. existing" or "Initialized empty", the second " shared" or
 #. "", and the last '%s%s' is the verbatim directory name.
-#: builtin/init-db.c:418
+#: builtin/init-db.c:426
 #, c-format
 msgid "%s%s Git repository in %s%s\n"
 msgstr "%s%s Git-arkiv i %s%s\n"
 
-#: builtin/init-db.c:419
+#: builtin/init-db.c:427
 msgid "Reinitialized existing"
 msgstr "Ominitierade befintligt"
 
-#: builtin/init-db.c:419
+#: builtin/init-db.c:427
 msgid "Initialized empty"
 msgstr "Initierade tomt"
 
-#: builtin/init-db.c:420
+#: builtin/init-db.c:428
 msgid " shared"
 msgstr " delat"
 
-#: builtin/init-db.c:467
+#: builtin/init-db.c:475
 msgid ""
 "git init [-q | --quiet] [--bare] [--template=<template-directory>] [--"
 "shared[=<permissions>]] [directory]"
 msgstr ""
 "git init [-q | --quiet] [--bare] [--template=<mallkatalog>] [--"
 "shared[=<behörigheter>]] [katalog]"
 
-#: builtin/init-db.c:490
+#: builtin/init-db.c:498
 msgid "permissions"
 msgstr "behörigheter"
 
-#: builtin/init-db.c:491
+#: builtin/init-db.c:499
 msgid "specify that the git repository is to be shared amongst several users"
 msgstr "ange att git-arkivet skall delas bland flera användare"
 
-#: builtin/init-db.c:493 builtin/prune-packed.c:57 builtin/repack.c:172
+#: builtin/init-db.c:501 builtin/prune-packed.c:57 builtin/repack.c:171
 msgid "be quiet"
 msgstr "var tyst"
 
-#: builtin/init-db.c:525 builtin/init-db.c:530
+#: builtin/init-db.c:533 builtin/init-db.c:538
 #, c-format
 msgid "cannot mkdir %s"
 msgstr "kan inte skapa katalogen (mkdir) %s"
 
-#: builtin/init-db.c:534
+#: builtin/init-db.c:542
 #, c-format
 msgid "cannot chdir to %s"
 msgstr "kan inte byta katalog (chdir) till %s"
 
-#: builtin/init-db.c:555
+#: builtin/init-db.c:563
 #, c-format
 msgid ""
 "%s (or --work-tree=<directory>) not allowed without specifying %s (or --git-"
 "dir=<directory>)"
 msgstr ""
 "%s (eller --work-tree=<katalog>) inte tillåtet utan att ange %s (eller --git-"
 "dir=<katalog>)"
 
-#: builtin/init-db.c:583
+#: builtin/init-db.c:591
 #, c-format
 msgid "Cannot access work tree '%s'"
 msgstr "Kan inte komma åt arbetskatalogen \"%s\""
 
 #: builtin/interpret-trailers.c:15
 msgid ""
@@ -6418,18 +6421,18 @@
 
 #: builtin/interpret-trailers.c:27
 msgid "trailer(s) to add"
 msgstr "släprad(er) att lägga till"
 
 #: builtin/log.c:41
-msgid "git log [<options>] [<revision range>] [[--] <path>...]\n"
-msgstr "git log [<flaggor>] [<versionsintervall>] [[--] <sökväg>...]\n"
+msgid "git log [<options>] [<revision range>] [[--] <path>...]"
+msgstr "git log [<flaggor>] [<versionsintervall>] [[--] <sökväg>...]"
 
 #: builtin/log.c:42
-msgid "   or: git show [options] <object>..."
-msgstr "     eller: git show [flaggor] <objekt>..."
+msgid "git show [options] <object>..."
+msgstr "git show [flaggor] <objekt>..."
 
 #: builtin/log.c:81
 #, c-format
 msgid "invalid --decorate option: %s"
 msgstr "ogiltig flagga för --decorate: %s"
 
@@ -6794,220 +6797,220 @@
 msgstr "visa felsökningsutdata"
 
 #: builtin/ls-tree.c:28
 msgid "git ls-tree [<options>] <tree-ish> [<path>...]"
 msgstr "git ls-tree [<flaggor>] <träd-igt> [<sökväg>...]"
 
-#: builtin/ls-tree.c:126
+#: builtin/ls-tree.c:127
 msgid "only show trees"
 msgstr "visa endast träd"
 
-#: builtin/ls-tree.c:128
+#: builtin/ls-tree.c:129
 msgid "recurse into subtrees"
 msgstr "rekursera ner i underträd"
 
-#: builtin/ls-tree.c:130
+#: builtin/ls-tree.c:131
 msgid "show trees when recursing"
 msgstr "visa träd medan rekursering"
 
-#: builtin/ls-tree.c:133
+#: builtin/ls-tree.c:134
 msgid "terminate entries with NUL byte"
 msgstr "terminera poster med NUL-byte"
 
-#: builtin/ls-tree.c:134
+#: builtin/ls-tree.c:135
 msgid "include object size"
 msgstr "inkludera objektstorlek"
 
-#: builtin/ls-tree.c:136 builtin/ls-tree.c:138
+#: builtin/ls-tree.c:137 builtin/ls-tree.c:139
 msgid "list only filenames"
 msgstr "visa endast filnamn"
 
-#: builtin/ls-tree.c:141
+#: builtin/ls-tree.c:142
 msgid "use full path names"
 msgstr "använd fullständiga sökvägsnamn"
 
-#: builtin/ls-tree.c:143
+#: builtin/ls-tree.c:144
 msgid "list entire tree; not just current directory (implies --full-name)"
 msgstr "visa hela trädet; inte bara aktuell katalog (implicerar --full-name)"
 
-#: builtin/merge.c:44
+#: builtin/merge.c:45
 msgid "git merge [options] [<commit>...]"
 msgstr "git merge [flaggor] [<incheckning>...]"
 
-#: builtin/merge.c:45
+#: builtin/merge.c:46
 msgid "git merge [options] <msg> HEAD <commit>"
 msgstr "git merge [flaggor] <meddelande> HEAD <incheckning>"
 
-#: builtin/merge.c:46
+#: builtin/merge.c:47
 msgid "git merge --abort"
 msgstr "git merge --abort"
 
-#: builtin/merge.c:99
+#: builtin/merge.c:100
 msgid "switch `m' requires a value"
 msgstr "flaggan \"m\" behöver ett värde"
 
-#: builtin/merge.c:136
+#: builtin/merge.c:137
 #, c-format
 msgid "Could not find merge strategy '%s'.\n"
 msgstr "Kunde inte hitta sammanslagningsstrategin \"%s\".\n"
 
-#: builtin/merge.c:137
+#: builtin/merge.c:138
 #, c-format
 msgid "Available strategies are:"
 msgstr "Tillgängliga strategier är:"
 
-#: builtin/merge.c:142
+#: builtin/merge.c:143
 #, c-format
 msgid "Available custom strategies are:"
 msgstr "Tillgängliga skräddarsydda strategier är:"
 
-#: builtin/merge.c:192
+#: builtin/merge.c:193
 msgid "do not show a diffstat at the end of the merge"
 msgstr "visa inte en diffstat när sammanslagningen är färdig"
 
-#: builtin/merge.c:195
+#: builtin/merge.c:196
 msgid "show a diffstat at the end of the merge"
 msgstr "visa en diffstat när sammanslagningen är färdig"
 
-#: builtin/merge.c:196
+#: builtin/merge.c:197
 msgid "(synonym to --stat)"
 msgstr "(synonym till --stat)"
 
-#: builtin/merge.c:198
+#: builtin/merge.c:199
 msgid "add (at most <n>) entries from shortlog to merge commit message"
 msgstr ""
 "lägg till (som mest <n>) poster från shortlog till incheckningsmeddelandet"
 
-#: builtin/merge.c:201
+#: builtin/merge.c:202
 msgid "create a single commit instead of doing a merge"
 msgstr "skapa en ensam incheckning istället för en sammanslagning"
 
-#: builtin/merge.c:203
+#: builtin/merge.c:204
 msgid "perform a commit if the merge succeeds (default)"
 msgstr "utför en incheckning om sammanslagningen lyckades (standard)"
 
-#: builtin/merge.c:205
+#: builtin/merge.c:206
 msgid "edit message before committing"
 msgstr "redigera meddelande innan incheckning"
 
-#: builtin/merge.c:206
+#: builtin/merge.c:207
 msgid "allow fast-forward (default)"
 msgstr "tillåt snabbspolning (standard)"
 
-#: builtin/merge.c:208
+#: builtin/merge.c:209
 msgid "abort if fast-forward is not possible"
 msgstr "avbryt om snabbspolning inte är möjlig"
 
-#: builtin/merge.c:212
+#: builtin/merge.c:213
 msgid "Verify that the named commit has a valid GPG signature"
 msgstr "Bekräfta att den namngivna incheckningen har en giltig GPG-signatur"
 
-#: builtin/merge.c:213 builtin/notes.c:741 builtin/revert.c:89
+#: builtin/merge.c:214 builtin/notes.c:753 builtin/revert.c:89
 msgid "strategy"
 msgstr "strategi"
 
-#: builtin/merge.c:214
+#: builtin/merge.c:215
 msgid "merge strategy to use"
 msgstr "sammanslagningsstrategi att använda"
 
-#: builtin/merge.c:215
+#: builtin/merge.c:216
 msgid "option=value"
 msgstr "alternativ=värde"
 
-#: builtin/merge.c:216
+#: builtin/merge.c:217
 msgid "option for selected merge strategy"
 msgstr "alternativ för vald sammanslagningsstrategi"
 
-#: builtin/merge.c:218
+#: builtin/merge.c:219
 msgid "merge commit message (for a non-fast-forward merge)"
 msgstr "incheckningsmeddelande för (icke snabbspolande) sammanslagning"
 
-#: builtin/merge.c:222
+#: builtin/merge.c:223
 msgid "abort the current in-progress merge"
 msgstr "avbryt den pågående sammanslagningen"
 
-#: builtin/merge.c:250
+#: builtin/merge.c:251
 msgid "could not run stash."
 msgstr "kunde köra stash."
 
-#: builtin/merge.c:255
+#: builtin/merge.c:256
 msgid "stash failed"
 msgstr "stash misslyckades"
 
-#: builtin/merge.c:260
+#: builtin/merge.c:261
 #, c-format
 msgid "not a valid object: %s"
 msgstr "inte ett giltigt objekt: %s"
 
-#: builtin/merge.c:279 builtin/merge.c:296
+#: builtin/merge.c:280 builtin/merge.c:297
 msgid "read-tree failed"
 msgstr "read-tree misslyckades"
 
-#: builtin/merge.c:326
+#: builtin/merge.c:327
 msgid " (nothing to squash)"
 msgstr " (inget att platta till)"
 
-#: builtin/merge.c:339
+#: builtin/merge.c:340
 #, c-format
 msgid "Squash commit -- not updating HEAD\n"
 msgstr "Tillplattningsincheckning -- uppdaterar inte HEAD\n"
 
-#: builtin/merge.c:371
+#: builtin/merge.c:372
 msgid "Writing SQUASH_MSG"
 msgstr "Skriver SQUASH_MSG"
 
-#: builtin/merge.c:373
+#: builtin/merge.c:374
 msgid "Finishing SQUASH_MSG"
 msgstr "Avslutar SQUASH_MSG"
 
-#: builtin/merge.c:396
+#: builtin/merge.c:397
 #, c-format
 msgid "No merge message -- not updating HEAD\n"
 msgstr "Inget sammanslagningsmeddelande -- uppdaterar inte HEAD\n"
 
-#: builtin/merge.c:446
+#: builtin/merge.c:447
 #, c-format
 msgid "'%s' does not point to a commit"
 msgstr "\"%s\" verkar inte peka på en incheckning"
 
-#: builtin/merge.c:558
+#: builtin/merge.c:559
 #, c-format
 msgid "Bad branch.%s.mergeoptions string: %s"
 msgstr "Felaktig branch.%s.mergeoptions-sträng: %s"
 
-#: builtin/merge.c:653
+#: builtin/merge.c:654
 msgid "git write-tree failed to write a tree"
 msgstr "git write-tree misslyckades skriva ett träd"
 
-#: builtin/merge.c:677
+#: builtin/merge.c:678
 msgid "Not handling anything other than two heads merge."
 msgstr "Hanterar inte något annat än en sammanslagning av två huvuden."
 
-#: builtin/merge.c:691
+#: builtin/merge.c:692
 #, c-format
 msgid "Unknown option for merge-recursive: -X%s"
 msgstr "Felaktig flagga för merge-recursive: -X%s"
 
-#: builtin/merge.c:704
+#: builtin/merge.c:705
 #, c-format
 msgid "unable to write %s"
 msgstr "kunde inte skriva %s"
 
-#: builtin/merge.c:793
+#: builtin/merge.c:794
 #, c-format
 msgid "Could not read from '%s'"
 msgstr "Kunde inte läsa från \"%s\""
 
-#: builtin/merge.c:802
+#: builtin/merge.c:803
 #, c-format
 msgid "Not committing merge; use 'git commit' to complete the merge.\n"
 msgstr ""
 "Checkar inte in sammanslagningen; använd \"git commit\" för att slutföra "
 "den.\n"
 
-#: builtin/merge.c:808
+#: builtin/merge.c:809
 #, c-format
 msgid ""
 "Please enter a commit message to explain why this merge is necessary,\n"
 "especially if it merges an updated upstream into a topic branch.\n"
 "\n"
 "Lines starting with '%c' will be ignored, and an empty message aborts\n"
@@ -7017,169 +7020,169 @@
 "är nödvändig, speciellt om den slår in en uppdaterad uppström i en\n"
 "temagren.\n"
 "\n"
 "Rader som inleds med \"%c\" kommer ignoreras, och ett tomt meddelande\n"
 "avbryter incheckningen.\n"
 
-#: builtin/merge.c:832
+#: builtin/merge.c:833
 msgid "Empty commit message."
 msgstr "Tomt incheckningsmeddelande."
 
-#: builtin/merge.c:844
+#: builtin/merge.c:845
 #, c-format
 msgid "Wonderful.\n"
 msgstr "Underbart.\n"
 
-#: builtin/merge.c:907
+#: builtin/merge.c:900
 #, c-format
 msgid "Automatic merge failed; fix conflicts and then commit the result.\n"
 msgstr ""
 "Kunde inte slå ihop automatiskt; fixa konflikter och checka in resultatet.\n"
 
-#: builtin/merge.c:923
+#: builtin/merge.c:916
 #, c-format
 msgid "'%s' is not a commit"
 msgstr "\"%s\" är inte en incheckning"
 
-#: builtin/merge.c:964
+#: builtin/merge.c:957
 msgid "No current branch."
 msgstr "Inte på någon gren."
 
-#: builtin/merge.c:966
+#: builtin/merge.c:959
 msgid "No remote for the current branch."
 msgstr "Ingen fjärr för aktuell gren."
 
-#: builtin/merge.c:968
+#: builtin/merge.c:961
 msgid "No default upstream defined for the current branch."
 msgstr "Ingen standarduppström angiven för aktuell gren."
 
-#: builtin/merge.c:973
+#: builtin/merge.c:966
 #, c-format
 msgid "No remote-tracking branch for %s from %s"
 msgstr "Ingen fjärrspårande gren för %s från %s"
 
-#: builtin/merge.c:1129
+#: builtin/merge.c:1122
 msgid "There is no merge to abort (MERGE_HEAD missing)."
 msgstr "Det finns ingen sammanslagning att avbryta (MERGE_HEAD saknas)."
 
-#: builtin/merge.c:1145
+#: builtin/merge.c:1138
 msgid ""
 "You have not concluded your merge (MERGE_HEAD exists).\n"
 "Please, commit your changes before you merge."
 msgstr ""
 "Du har inte avslutat sammanslagningen (MERGE_HEAD finns).\n"
 "Checka in dina ändringar innan du slår ihop."
 
-#: builtin/merge.c:1148 git-pull.sh:34
+#: builtin/merge.c:1141 git-pull.sh:34
 msgid "You have not concluded your merge (MERGE_HEAD exists)."
 msgstr "Du har inte avslutat sammanslagningen (MERGE_HEAD finns)."
 
-#: builtin/merge.c:1152
+#: builtin/merge.c:1145
 msgid ""
 "You have not concluded your cherry-pick (CHERRY_PICK_HEAD exists).\n"
 "Please, commit your changes before you merge."
 msgstr ""
 "Du har inte avslutat din \"cherry-pick\" (CHERRY_PICK_HEAD finns).\n"
 "Checka in dina ändringar innan du slår ihop."
 
-#: builtin/merge.c:1155
+#: builtin/merge.c:1148
 msgid "You have not concluded your cherry-pick (CHERRY_PICK_HEAD exists)."
 msgstr "Du har inte avslutat din \"cherry-pick\" (CHERRY_PICK_HEAD finns)."
 
-#: builtin/merge.c:1164
+#: builtin/merge.c:1157
 msgid "You cannot combine --squash with --no-ff."
 msgstr "Du kan inte kombinera --squash med --no-ff."
 
-#: builtin/merge.c:1173
+#: builtin/merge.c:1166
 msgid "No commit specified and merge.defaultToUpstream not set."
 msgstr "Ingen incheckning angiven och merge.defaultToUpstream är ej satt."
 
-#: builtin/merge.c:1205
+#: builtin/merge.c:1198
 msgid "Can merge only exactly one commit into empty head"
 msgstr "Kan endast slå ihop en enda incheckning i ett tomt huvud."
 
-#: builtin/merge.c:1208
+#: builtin/merge.c:1201
 msgid "Squash commit into empty head not supported yet"
 msgstr "Stöder inte en tillplattningsincheckning på ett tomt huvud ännu"
 
-#: builtin/merge.c:1210
+#: builtin/merge.c:1203
 msgid "Non-fast-forward commit does not make sense into an empty head"
 msgstr "Icke-snabbspolad incheckning kan inte användas med ett tomt huvud"
 
-#: builtin/merge.c:1215
+#: builtin/merge.c:1208
 #, c-format
 msgid "%s - not something we can merge"
 msgstr "%s - inte något vi kan slå ihop"
 
-#: builtin/merge.c:1266
+#: builtin/merge.c:1259
 #, c-format
 msgid "Commit %s has an untrusted GPG signature, allegedly by %s."
 msgstr ""
 "Incheckningen %s har en obetrodd GPG-signatur som påstås vara gjord av %s."
 
-#: builtin/merge.c:1269
+#: builtin/merge.c:1262
 #, c-format
 msgid "Commit %s has a bad GPG signature allegedly by %s."
 msgstr ""
 "Incheckningen %s har en felaktig GPG-signatur som påstås vara gjord av %s."
 
-#: builtin/merge.c:1272
+#: builtin/merge.c:1265
 #, c-format
 msgid "Commit %s does not have a GPG signature."
 msgstr "Incheckning %s har inte någon GPG-signatur."
 
-#: builtin/merge.c:1275
+#: builtin/merge.c:1268
 #, c-format
 msgid "Commit %s has a good GPG signature by %s\n"
 msgstr "Incheckningen %s har en korrekt GPG-signatur av %s\n"
 
-#: builtin/merge.c:1356
+#: builtin/merge.c:1349
 #, c-format
 msgid "Updating %s..%s\n"
 msgstr "Uppdaterar %s..%s\n"
 
-#: builtin/merge.c:1395
+#: builtin/merge.c:1388
 #, c-format
 msgid "Trying really trivial in-index merge...\n"
 msgstr "Försöker riktigt enkel sammanslagning i indexet...\n"
 
-#: builtin/merge.c:1402
+#: builtin/merge.c:1395
 #, c-format
 msgid "Nope.\n"
 msgstr "Nej.\n"
 
-#: builtin/merge.c:1434
+#: builtin/merge.c:1427
 msgid "Not possible to fast-forward, aborting."
 msgstr "Kan inte snabbspola, avbryter."
 
-#: builtin/merge.c:1457 builtin/merge.c:1536
+#: builtin/merge.c:1450 builtin/merge.c:1529
 #, c-format
 msgid "Rewinding the tree to pristine...\n"
 msgstr "Återspolar trädet till orört...\n"
 
-#: builtin/merge.c:1461
+#: builtin/merge.c:1454
 #, c-format
 msgid "Trying merge strategy %s...\n"
 msgstr "Försöker sammanslagningsstrategin %s...\n"
 
-#: builtin/merge.c:1527
+#: builtin/merge.c:1520
 #, c-format
 msgid "No merge strategy handled the merge.\n"
 msgstr "Ingen sammanslagningsstrategi hanterade sammanslagningen.\n"
 
-#: builtin/merge.c:1529
+#: builtin/merge.c:1522
 #, c-format
 msgid "Merge with strategy %s failed.\n"
 msgstr "Sammanslagning med strategin %s misslyckades.\n"
 
-#: builtin/merge.c:1538
+#: builtin/merge.c:1531
 #, c-format
 msgid "Using the %s to prepare resolving by hand.\n"
 msgstr "Använder %s för att förbereda lösning för hand.\n"
 
-#: builtin/merge.c:1550
+#: builtin/merge.c:1543
 #, c-format
 msgid "Automatic merge went well; stopped before committing as requested\n"
 msgstr ""
 "Automatisk sammanslagning lyckades; stoppar före incheckning som önskat\n"
 
 #: builtin/merge-base.c:29
@@ -7362,13 +7365,13 @@
 
 #: builtin/mv.c:253
 #, c-format
 msgid "Renaming %s to %s\n"
 msgstr "Byter namn på %s till %s\n"
 
-#: builtin/mv.c:256 builtin/remote.c:726 builtin/repack.c:358
+#: builtin/mv.c:256 builtin/remote.c:728 builtin/repack.c:355
 #, c-format
 msgid "renaming '%s' failed"
 msgstr "misslyckades byta namn på \"%s\""
 
 #: builtin/name-rev.c:255
 msgid "git name-rev [options] <commit>..."
@@ -7413,34 +7416,34 @@
 #: builtin/notes.c:24
 msgid "git notes [--ref <notes_ref>] [list [<object>]]"
 msgstr "git notes [--ref <anteckningsref>] [list [<objekt>]]"
 
 #: builtin/notes.c:25
 msgid ""
-"git notes [--ref <notes_ref>] add [-f] [-m <msg> | -F <file> | (-c | -C) "
-"<object>] [<object>]"
+"git notes [--ref <notes_ref>] add [-f] [--allow-empty] [-m <msg> | -F <file> "
+"| (-c | -C) <object>] [<object>]"
 msgstr ""
-"git notes [--ref <anteckningsref>] add [-f] [-m <medd> | -F <fil> | (-c | -"
-"C) <objekt>] [<objekt>]"
+"git notes [--ref <anteckningsref>] add [-f] [--allow-empty] [-m <medd> | -F "
+"<fil> | (-c | -C) <objekt>] [<objekt>]"
 
 #: builtin/notes.c:26
 msgid "git notes [--ref <notes_ref>] copy [-f] <from-object> <to-object>"
 msgstr ""
 "git notes [--ref <anteckningsref>] copy [-f] <från-objekt> <till-objekt>"
 
 #: builtin/notes.c:27
 msgid ""
-"git notes [--ref <notes_ref>] append [-m <msg> | -F <file> | (-c | -C) "
-"<object>] [<object>]"
+"git notes [--ref <notes_ref>] append [--allow-empty] [-m <msg> | -F <file> | "
+"(-c | -C) <object>] [<object>]"
 msgstr ""
-"git notes [--ref <anteckningsref>] append [-m <medd> | -F <fil> | (-c | -C) "
-"<objekt>] [<objekt>]"
+"git notes [--ref <anteckningsref>] append [--allow-empty] [-m <medd> | -F "
+"<fil> | (-c | -C) <objekt>] [<objekt>]"
 
 #: builtin/notes.c:28
-msgid "git notes [--ref <notes_ref>] edit [<object>]"
-msgstr "git notes [--ref <anteckningsref>] edit [<objekt>]"
+msgid "git notes [--ref <notes_ref>] edit [--allow-empty] [<object>]"
+msgstr "git notes [--ref <anteckningsref>] edit [--allow-empty] [<objekt>]"
 
 #: builtin/notes.c:29
 msgid "git notes [--ref <notes_ref>] show [<object>]"
 msgstr "git notes [--ref <anteckningsref>] show [<objekt>]"
 
 #: builtin/notes.c:30
@@ -7519,228 +7522,232 @@
 msgstr "git notes prune [<flaggor>]"
 
 #: builtin/notes.c:88
 msgid "git notes get-ref"
 msgstr "git notes get-ref"
 
-#: builtin/notes.c:136
+#: builtin/notes.c:146
 #, c-format
 msgid "unable to start 'show' for object '%s'"
 msgstr "kunde inte starta \"show\" för objektet \"%s\""
 
-#: builtin/notes.c:140
+#: builtin/notes.c:150
 msgid "could not read 'show' output"
 msgstr "kunde inte läsa utdata från \"show\""
 
-#: builtin/notes.c:148
+#: builtin/notes.c:158
 #, c-format
 msgid "failed to finish 'show' for object '%s'"
 msgstr "kunde inte avsluta \"show\" för objektet \"%s\""
 
-#: builtin/notes.c:166 builtin/tag.c:477
+#: builtin/notes.c:173 builtin/tag.c:477
 #, c-format
 msgid "could not create file '%s'"
 msgstr "kunde inte skapa filen \"%s\""
 
-#: builtin/notes.c:185
+#: builtin/notes.c:192
 msgid "Please supply the note contents using either -m or -F option"
 msgstr "Ange innehåll för anteckningen med antingen -m eller -F"
 
-#: builtin/notes.c:206 builtin/notes.c:847
-#, c-format
-msgid "Removing note for object %s\n"
-msgstr "Tar bort anteckning för objektet %s\n"
-
-#: builtin/notes.c:211
+#: builtin/notes.c:201
 msgid "unable to write note object"
 msgstr "kunde inte skriva anteckningsobjekt"
 
-#: builtin/notes.c:213
+#: builtin/notes.c:203
 #, c-format
 msgid "The note contents have been left in %s"
 msgstr "Anteckningens innehåll har lämnats kvar i %s"
 
-#: builtin/notes.c:247 builtin/tag.c:693
+#: builtin/notes.c:231 builtin/tag.c:693
 #, c-format
 msgid "cannot read '%s'"
 msgstr "kunde inte läsa \"%s\""
 
-#: builtin/notes.c:249 builtin/tag.c:696
+#: builtin/notes.c:233 builtin/tag.c:696
 #, c-format
 msgid "could not open or read '%s'"
 msgstr "kunde inte öppna eller läsa \"%s\""
 
-#: builtin/notes.c:268 builtin/notes.c:319 builtin/notes.c:321
-#: builtin/notes.c:381 builtin/notes.c:435 builtin/notes.c:518
-#: builtin/notes.c:523 builtin/notes.c:598 builtin/notes.c:640
-#: builtin/notes.c:842 builtin/tag.c:709
+#: builtin/notes.c:252 builtin/notes.c:303 builtin/notes.c:305
+#: builtin/notes.c:365 builtin/notes.c:420 builtin/notes.c:506
+#: builtin/notes.c:511 builtin/notes.c:589 builtin/notes.c:652
+#: builtin/notes.c:854 builtin/tag.c:709
 #, c-format
 msgid "Failed to resolve '%s' as a valid ref."
 msgstr "Kunde inte slå upp \"%s\" som en giltig referens."
 
-#: builtin/notes.c:271
+#: builtin/notes.c:255
 #, c-format
 msgid "Failed to read object '%s'."
 msgstr "Kunde inte läsa objektet \"%s\"."
 
-#: builtin/notes.c:275
+#: builtin/notes.c:259
 #, c-format
 msgid "Cannot read note data from non-blob object '%s'."
 msgstr "kan inte läsa anteckningsdata från icke-blob-objektet \"%s\"."
 
-#: builtin/notes.c:315
+#: builtin/notes.c:299
 #, c-format
 msgid "Malformed input line: '%s'."
 msgstr "Felaktig indatarad: \"%s\"."
 
-#: builtin/notes.c:330
+#: builtin/notes.c:314
 #, c-format
 msgid "Failed to copy notes from '%s' to '%s'"
 msgstr "Misslyckades kopiera anteckningar från \"%s\" till \"%s\""
 
-#: builtin/notes.c:374 builtin/notes.c:428 builtin/notes.c:501
-#: builtin/notes.c:513 builtin/notes.c:586 builtin/notes.c:633
-#: builtin/notes.c:907
+#: builtin/notes.c:358 builtin/notes.c:413 builtin/notes.c:489
+#: builtin/notes.c:501 builtin/notes.c:577 builtin/notes.c:645
+#: builtin/notes.c:919
 msgid "too many parameters"
 msgstr "för många parametrar"
 
-#: builtin/notes.c:387 builtin/notes.c:646
+#: builtin/notes.c:371 builtin/notes.c:658
 #, c-format
 msgid "No note found for object %s."
 msgstr "Inga anteckningar hittades för objektet %s."
 
-#: builtin/notes.c:409 builtin/notes.c:566
+#: builtin/notes.c:392 builtin/notes.c:555
 msgid "note contents as a string"
 msgstr "anteckningsinnehåll som sträng"
 
-#: builtin/notes.c:412 builtin/notes.c:569
+#: builtin/notes.c:395 builtin/notes.c:558
 msgid "note contents in a file"
 msgstr "anteckningsinnehåll i en fil"
 
-#: builtin/notes.c:414 builtin/notes.c:417 builtin/notes.c:571
-#: builtin/notes.c:574 builtin/tag.c:628
+#: builtin/notes.c:397 builtin/notes.c:400 builtin/notes.c:560
+#: builtin/notes.c:563 builtin/tag.c:628
 msgid "object"
 msgstr "objekt"
 
-#: builtin/notes.c:415 builtin/notes.c:572
+#: builtin/notes.c:398 builtin/notes.c:561
 msgid "reuse and edit specified note object"
 msgstr "återanvänd och redigera angivet anteckningsobjekt"
 
-#: builtin/notes.c:418 builtin/notes.c:575
+#: builtin/notes.c:401 builtin/notes.c:564
 msgid "reuse specified note object"
 msgstr "återanvänd angivet anteckningsobjekt"
 
-#: builtin/notes.c:420 builtin/notes.c:488
+#: builtin/notes.c:404 builtin/notes.c:567
+msgid "allow storing empty note"
+msgstr "tillåt lagra tom anteckning"
+
+#: builtin/notes.c:405 builtin/notes.c:476
 msgid "replace existing notes"
 msgstr "ersätt befintliga anteckningar"
 
-#: builtin/notes.c:454
+#: builtin/notes.c:430
 #, c-format
 msgid ""
 "Cannot add notes. Found existing notes for object %s. Use '-f' to overwrite "
 "existing notes"
 msgstr ""
 "Kan inte lägga till anteckningar. Hittade befintliga anteckningar för "
 "objektet %s. Använd \"-f\" för att skriva över befintliga anteckningar"
 
-#: builtin/notes.c:459 builtin/notes.c:536
+#: builtin/notes.c:445 builtin/notes.c:524
 #, c-format
 msgid "Overwriting existing notes for object %s\n"
 msgstr "Skriver över befintliga anteckningar för objektet %s\n"
 
-#: builtin/notes.c:489
+#: builtin/notes.c:456 builtin/notes.c:617 builtin/notes.c:859
+#, c-format
+msgid "Removing note for object %s\n"
+msgstr "Tar bort anteckning för objektet %s\n"
+
+#: builtin/notes.c:477
 msgid "read objects from stdin"
 msgstr "läs objekt från standard in"
 
-#: builtin/notes.c:491
+#: builtin/notes.c:479
 msgid "load rewriting config for <command> (implies --stdin)"
 msgstr "läs omskrivningsinställning för <kommando> (implicerar --stdin)"
 
-#: builtin/notes.c:509
+#: builtin/notes.c:497
 msgid "too few parameters"
 msgstr "för få parametrar"
 
-#: builtin/notes.c:530
+#: builtin/notes.c:518
 #, c-format
 msgid ""
 "Cannot copy notes. Found existing notes for object %s. Use '-f' to overwrite "
 "existing notes"
 msgstr ""
 "Kan inte kopiera anteckningar. Hittade befintliga anteckningar för objektet "
 "%s. Använd \"-f\" för att skriva över befintliga anteckningar"
 
-#: builtin/notes.c:542
+#: builtin/notes.c:530
 #, c-format
 msgid "Missing notes on source object %s. Cannot copy."
 msgstr "Anteckningar på källobjektet %s saknas. Kan inte kopiera."
 
-#: builtin/notes.c:591
+#: builtin/notes.c:582
 #, c-format
 msgid ""
 "The -m/-F/-c/-C options have been deprecated for the 'edit' subcommand.\n"
 "Please use 'git notes add -f -m/-F/-c/-C' instead.\n"
 msgstr ""
 "Flaggorna -m/-F/-c/-C rekommenderas inte för underkommandot \"edit\".\n"
 "Använd \"git notes add -f -m/-F/-c/-C\" istället.\n"
 
-#: builtin/notes.c:738
+#: builtin/notes.c:750
 msgid "General options"
 msgstr "Allmänna flaggor"
 
-#: builtin/notes.c:740
+#: builtin/notes.c:752
 msgid "Merge options"
 msgstr "Flaggor för sammanslagning"
 
-#: builtin/notes.c:742
+#: builtin/notes.c:754
 msgid ""
 "resolve notes conflicts using the given strategy (manual/ours/theirs/union/"
 "cat_sort_uniq)"
 msgstr ""
 "läs konflikter i anteckningar med angiven strategi (manual/ours/theirs/union/"
 "cat_sort_uniq)"
 
-#: builtin/notes.c:744
+#: builtin/notes.c:756
 msgid "Committing unmerged notes"
 msgstr "Checkar in ej sammanslagna anteckningar"
 
-#: builtin/notes.c:746
+#: builtin/notes.c:758
 msgid "finalize notes merge by committing unmerged notes"
 msgstr ""
 "färdigställ sammanslagning av anteckningar genom att checka in ej "
 "sammanslagna anteckningar"
 
-#: builtin/notes.c:748
+#: builtin/notes.c:760
 msgid "Aborting notes merge resolution"
 msgstr "Avbryt lösning av sammanslagning av anteckningar"
 
-#: builtin/notes.c:750
+#: builtin/notes.c:762
 msgid "abort notes merge"
 msgstr "avbryt sammanslagning av anteckningar"
 
-#: builtin/notes.c:845
+#: builtin/notes.c:857
 #, c-format
 msgid "Object %s has no note\n"
 msgstr "Objektet %s har ingen anteckning\n"
 
-#: builtin/notes.c:857
+#: builtin/notes.c:869
 msgid "attempt to remove non-existent note is not an error"
 msgstr "försök att ta bort icke-existerande anteckningar är inte ett fel"
 
-#: builtin/notes.c:860
+#: builtin/notes.c:872
 msgid "read object names from the standard input"
 msgstr "läs objektnamn från standard in"
 
-#: builtin/notes.c:941
+#: builtin/notes.c:953
 msgid "notes-ref"
 msgstr "anteckningar-ref"
 
-#: builtin/notes.c:942
+#: builtin/notes.c:954
 msgid "use notes from <notes_ref>"
 msgstr "använd anteckningar från <anteckningsref>"
 
-#: builtin/notes.c:977 builtin/remote.c:1624
+#: builtin/notes.c:989 builtin/remote.c:1621
 #, c-format
 msgid "Unknown subcommand: %s"
 msgstr "Okänt underkommando: %s"
 
 #: builtin/pack-objects.c:28
 msgid "git pack-objects --stdout [options...] [< ref-list | < object-list]"
@@ -7784,145 +7791,149 @@
 
 #: builtin/pack-objects.c:2603
 #, c-format
 msgid "unable to parse value '%s' for option %s"
 msgstr "kunde inte tolka värdet \"%s\" för flaggan %s"
 
-#: builtin/pack-objects.c:2622
+#: builtin/pack-objects.c:2623
 msgid "do not show progress meter"
 msgstr "visa inte förloppsindikator"
 
-#: builtin/pack-objects.c:2624
+#: builtin/pack-objects.c:2625
 msgid "show progress meter"
 msgstr "visa förloppsindikator"
 
-#: builtin/pack-objects.c:2626
+#: builtin/pack-objects.c:2627
 msgid "show progress meter during object writing phase"
 msgstr "visa förloppsindikator under objektskrivningsfasen"
 
-#: builtin/pack-objects.c:2629
+#: builtin/pack-objects.c:2630
 msgid "similar to --all-progress when progress meter is shown"
 msgstr "som --all-progress när förloppsmätaren visas"
 
-#: builtin/pack-objects.c:2630
+#: builtin/pack-objects.c:2631
 msgid "version[,offset]"
 msgstr "version[,offset]"
 
-#: builtin/pack-objects.c:2631
+#: builtin/pack-objects.c:2632
 msgid "write the pack index file in the specified idx format version"
 msgstr "skriv paketindexfilen i angiven indexformatversion"
 
-#: builtin/pack-objects.c:2634
+#: builtin/pack-objects.c:2635
 msgid "maximum size of each output pack file"
 msgstr "maximal storlek på varje utdatapaketfil"
 
-#: builtin/pack-objects.c:2636
+#: builtin/pack-objects.c:2637
 msgid "ignore borrowed objects from alternate object store"
 msgstr "ignorera lånade objekt från alternativa objektlager"
 
-#: builtin/pack-objects.c:2638
+#: builtin/pack-objects.c:2639
 msgid "ignore packed objects"
 msgstr "ignorera packade objekt"
 
-#: builtin/pack-objects.c:2640
+#: builtin/pack-objects.c:2641
 msgid "limit pack window by objects"
 msgstr "begränsa paketfönster efter objekt"
 
-#: builtin/pack-objects.c:2642
+#: builtin/pack-objects.c:2643
 msgid "limit pack window by memory in addition to object limit"
 msgstr "begränsa paketfönster efter minne förutom objektgräns"
 
-#: builtin/pack-objects.c:2644
+#: builtin/pack-objects.c:2645
 msgid "maximum length of delta chain allowed in the resulting pack"
 msgstr "maximal längd på deltakedja tillåten i slutligt paket"
 
-#: builtin/pack-objects.c:2646
+#: builtin/pack-objects.c:2647
 msgid "reuse existing deltas"
 msgstr "återanvänd befintliga delta"
 
-#: builtin/pack-objects.c:2648
+#: builtin/pack-objects.c:2649
 msgid "reuse existing objects"
 msgstr "återanvänd befintliga objekt"
 
-#: builtin/pack-objects.c:2650
+#: builtin/pack-objects.c:2651
 msgid "use OFS_DELTA objects"
 msgstr "använd OFS_DELTA-objekt"
 
-#: builtin/pack-objects.c:2652
+#: builtin/pack-objects.c:2653
 msgid "use threads when searching for best delta matches"
 msgstr "använd trådar vid sökning efter bästa deltaträffar"
 
-#: builtin/pack-objects.c:2654
+#: builtin/pack-objects.c:2655
 msgid "do not create an empty pack output"
 msgstr "försök inte skapa tom paketutdata"
 
-#: builtin/pack-objects.c:2656
+#: builtin/pack-objects.c:2657
 msgid "read revision arguments from standard input"
 msgstr "läs revisionsargument från standard in"
 
-#: builtin/pack-objects.c:2658
+#: builtin/pack-objects.c:2659
 msgid "limit the objects to those that are not yet packed"
 msgstr "begränsa objekt till de som ännu inte packats"
 
-#: builtin/pack-objects.c:2661
+#: builtin/pack-objects.c:2662
 msgid "include objects reachable from any reference"
 msgstr "inkludera objekt som kan nås från någon referens"
 
-#: builtin/pack-objects.c:2664
+#: builtin/pack-objects.c:2665
 msgid "include objects referred by reflog entries"
 msgstr "inkludera objekt som refereras från referensloggposter"
 
-#: builtin/pack-objects.c:2667
+#: builtin/pack-objects.c:2668
 msgid "include objects referred to by the index"
 msgstr "inkludera objekt som refereras från indexet"
 
-#: builtin/pack-objects.c:2670
+#: builtin/pack-objects.c:2671
 msgid "output pack to stdout"
 msgstr "skriv paket på standard ut"
 
-#: builtin/pack-objects.c:2672
+#: builtin/pack-objects.c:2673
 msgid "include tag objects that refer to objects to be packed"
 msgstr "inkludera taggobjekt som refererar objekt som skall packas"
 
-#: builtin/pack-objects.c:2674
+#: builtin/pack-objects.c:2675
 msgid "keep unreachable objects"
 msgstr "behåll onåbara objekt"
 
-#: builtin/pack-objects.c:2675 parse-options.h:140
+#: builtin/pack-objects.c:2676 parse-options.h:140
 msgid "time"
 msgstr "tid"
 
-#: builtin/pack-objects.c:2676
+#: builtin/pack-objects.c:2677
 msgid "unpack unreachable objects newer than <time>"
 msgstr "packa upp onåbara objekt nyare än <tid>"
 
-#: builtin/pack-objects.c:2679
+#: builtin/pack-objects.c:2680
 msgid "create thin packs"
 msgstr "skapa tunna paket"
 
-#: builtin/pack-objects.c:2681
+#: builtin/pack-objects.c:2682
+msgid "create packs suitable for shallow fetches"
+msgstr "skapa packfiler lämpade för grunda hämtningar"
+
+#: builtin/pack-objects.c:2684
 msgid "ignore packs that have companion .keep file"
 msgstr "ignorera paket som har tillhörande .keep-fil"
 
-#: builtin/pack-objects.c:2683
+#: builtin/pack-objects.c:2686
 msgid "pack compression level"
 msgstr "komprimeringsgrad för paket"
 
-#: builtin/pack-objects.c:2685
+#: builtin/pack-objects.c:2688
 msgid "do not hide commits by grafts"
 msgstr "göm inte incheckningar med ympningar (\"grafts\")"
 
-#: builtin/pack-objects.c:2687
+#: builtin/pack-objects.c:2690
 msgid "use a bitmap index if available to speed up counting objects"
 msgstr "använd bitkartindex om tillgängligt för att räkna objekt snabbare"
 
-#: builtin/pack-objects.c:2689
+#: builtin/pack-objects.c:2692
 msgid "write a bitmap index together with the pack index"
 msgstr "använd bitkartindex tillsammans med packindexet"
 
-#: builtin/pack-objects.c:2778
+#: builtin/pack-objects.c:2783
 msgid "Counting objects"
 msgstr "Räknar objekt"
 
 #: builtin/pack-refs.c:6
 msgid "git pack-refs [options]"
 msgstr "git pack-refs [flaggor]"
@@ -8502,97 +8513,97 @@
 msgstr "att ange en master-gren ger ingen mening med --mirror"
 
 #: builtin/remote.c:177
 msgid "specifying branches to track makes sense only with fetch mirrors"
 msgstr "att ange grenar att spåra ger mening bara med hämtningsspeglar"
 
-#: builtin/remote.c:185 builtin/remote.c:641
+#: builtin/remote.c:187 builtin/remote.c:643
 #, c-format
 msgid "remote %s already exists."
 msgstr "fjärrarkivet %s finns redan."
 
-#: builtin/remote.c:189 builtin/remote.c:645
+#: builtin/remote.c:191 builtin/remote.c:647
 #, c-format
 msgid "'%s' is not a valid remote name"
 msgstr "\"%s\" är inte ett giltigt namn på fjärrarkiv"
 
-#: builtin/remote.c:233
+#: builtin/remote.c:235
 #, c-format
 msgid "Could not setup master '%s'"
 msgstr "Kunde inte skapa master \"%s\""
 
-#: builtin/remote.c:333
+#: builtin/remote.c:335
 #, c-format
 msgid "Could not get fetch map for refspec %s"
 msgstr "Kunde inte hämta mappning för referensspecifikation %s"
 
-#: builtin/remote.c:434 builtin/remote.c:442
+#: builtin/remote.c:436 builtin/remote.c:444
 msgid "(matching)"
 msgstr "(matchande)"
 
-#: builtin/remote.c:446
+#: builtin/remote.c:448
 msgid "(delete)"
 msgstr "(ta bort)"
 
-#: builtin/remote.c:590 builtin/remote.c:596 builtin/remote.c:602
+#: builtin/remote.c:592 builtin/remote.c:598 builtin/remote.c:604
 #, c-format
 msgid "Could not append '%s' to '%s'"
 msgstr "Kunde inte tillämpa \"%s\" på \"%s\""
 
-#: builtin/remote.c:634 builtin/remote.c:798 builtin/remote.c:898
+#: builtin/remote.c:636 builtin/remote.c:795 builtin/remote.c:895
 #, c-format
 msgid "No such remote: %s"
 msgstr "Inget sådant fjärrarkiv: %s"
 
-#: builtin/remote.c:651
+#: builtin/remote.c:653
 #, c-format
 msgid "Could not rename config section '%s' to '%s'"
 msgstr "Kunde inte byta namn på konfigurationssektionen \"%s\" till \"%s\""
 
-#: builtin/remote.c:657 builtin/remote.c:850
+#: builtin/remote.c:659 builtin/remote.c:847
 #, c-format
 msgid "Could not remove config section '%s'"
 msgstr "Kunde inte ta bort konfigurationssektionen \"%s\""
 
-#: builtin/remote.c:672
+#: builtin/remote.c:674
 #, c-format
 msgid ""
 "Not updating non-default fetch refspec\n"
 "\t%s\n"
 "\tPlease update the configuration manually if necessary."
 msgstr ""
 "Uppdaterar inte icke-standard hämtningsreferensspecifikation\n"
 "\t%s\n"
 "\tUppdatera konfigurationen manuellt om nödvändigt."
 
-#: builtin/remote.c:678
+#: builtin/remote.c:680
 #, c-format
 msgid "Could not append '%s'"
 msgstr "Kunde inte lägga till på \"%s\""
 
-#: builtin/remote.c:689
+#: builtin/remote.c:691
 #, c-format
 msgid "Could not set '%s'"
 msgstr "Kunde inte sätta \"%s\""
 
-#: builtin/remote.c:711
+#: builtin/remote.c:713
 #, c-format
 msgid "deleting '%s' failed"
 msgstr "misslyckades ta bort \"%s\""
 
-#: builtin/remote.c:745
+#: builtin/remote.c:747
 #, c-format
 msgid "creating '%s' failed"
 msgstr "misslyckades skapa \"%s\""
 
-#: builtin/remote.c:769
+#: builtin/remote.c:766
 #, c-format
 msgid "Could not remove branch %s"
 msgstr "Kunde inte ta bort grenen %s"
 
-#: builtin/remote.c:836
+#: builtin/remote.c:833
 msgid ""
 "Note: A branch outside the refs/remotes/ hierarchy was not removed;\n"
 "to delete it, use:"
 msgid_plural ""
 "Note: Some branches outside the refs/remotes/ hierarchy were not removed;\n"
 "to delete them, use:"
@@ -8600,340 +8611,340 @@
 "Observera: En gren utanför hierarkin refs/remotes/ togs inte bort;\n"
 "för att ta bort den, använd:"
 msgstr[1] ""
 "Observera: Några grenar utanför hierarkin refs/remotes/ togs inte bort;\n"
 "för att ta bort dem, använd:"
 
-#: builtin/remote.c:951
+#: builtin/remote.c:948
 #, c-format
 msgid " new (next fetch will store in remotes/%s)"
 msgstr " ny (nästa hämtning sparar i remotes/%s)"
 
-#: builtin/remote.c:954
+#: builtin/remote.c:951
 msgid " tracked"
 msgstr " spårad"
 
-#: builtin/remote.c:956
+#: builtin/remote.c:953
 msgid " stale (use 'git remote prune' to remove)"
 msgstr " förlegad (använd \"git remote prune\" för att ta bort)"
 
-#: builtin/remote.c:958
+#: builtin/remote.c:955
 msgid " ???"
 msgstr " ???"
 
-#: builtin/remote.c:999
+#: builtin/remote.c:996
 #, c-format
 msgid "invalid branch.%s.merge; cannot rebase onto > 1 branch"
 msgstr "ogiltig branch.%s.merge; kan inte ombasera över > 1 gren"
 
-#: builtin/remote.c:1006
+#: builtin/remote.c:1003
 #, c-format
 msgid "rebases onto remote %s"
 msgstr "ombaseras på fjärren %s"
 
-#: builtin/remote.c:1009
+#: builtin/remote.c:1006
 #, c-format
 msgid " merges with remote %s"
 msgstr " sammanslås med fjärren %s"
 
-#: builtin/remote.c:1010
+#: builtin/remote.c:1007
 msgid "    and with remote"
 msgstr "    och med fjärren"
 
-#: builtin/remote.c:1012
+#: builtin/remote.c:1009
 #, c-format
 msgid "merges with remote %s"
 msgstr "sammanslås med fjärren %s"
 
-#: builtin/remote.c:1013
+#: builtin/remote.c:1010
 msgid "   and with remote"
 msgstr "   och med fjärren"
 
-#: builtin/remote.c:1059
+#: builtin/remote.c:1056
 msgid "create"
 msgstr "skapa"
 
-#: builtin/remote.c:1062
+#: builtin/remote.c:1059
 msgid "delete"
 msgstr "ta bort"
 
-#: builtin/remote.c:1066
+#: builtin/remote.c:1063
 msgid "up to date"
 msgstr "àjour"
 
-#: builtin/remote.c:1069
+#: builtin/remote.c:1066
 msgid "fast-forwardable"
 msgstr "kan snabbspolas"
 
-#: builtin/remote.c:1072
+#: builtin/remote.c:1069
 msgid "local out of date"
 msgstr "lokal föråldrad"
 
-#: builtin/remote.c:1079
+#: builtin/remote.c:1076
 #, c-format
 msgid "    %-*s forces to %-*s (%s)"
 msgstr "    %-*s tvingar till %-*s (%s)"
 
-#: builtin/remote.c:1082
+#: builtin/remote.c:1079
 #, c-format
 msgid "    %-*s pushes to %-*s (%s)"
 msgstr "    %-*s sänder till %-*s (%s)"
 
-#: builtin/remote.c:1086
+#: builtin/remote.c:1083
 #, c-format
 msgid "    %-*s forces to %s"
 msgstr "    %-*s tvingar till %s"
 
-#: builtin/remote.c:1089
+#: builtin/remote.c:1086
 #, c-format
 msgid "    %-*s pushes to %s"
 msgstr "    %-*s sänder till %s"
 
-#: builtin/remote.c:1157
+#: builtin/remote.c:1154
 msgid "do not query remotes"
 msgstr "fråga inte fjärrar"
 
-#: builtin/remote.c:1184
+#: builtin/remote.c:1181
 #, c-format
 msgid "* remote %s"
 msgstr "* fjärr %s"
 
-#: builtin/remote.c:1185
+#: builtin/remote.c:1182
 #, c-format
 msgid "  Fetch URL: %s"
 msgstr "  Hämt-URL: %s"
 
-#: builtin/remote.c:1186 builtin/remote.c:1333
+#: builtin/remote.c:1183 builtin/remote.c:1334
 msgid "(no URL)"
 msgstr "(ingen URL)"
 
-#: builtin/remote.c:1195 builtin/remote.c:1197
+#: builtin/remote.c:1192 builtin/remote.c:1194
 #, c-format
 msgid "  Push  URL: %s"
 msgstr "  Sänd-URL: %s"
 
-#: builtin/remote.c:1199 builtin/remote.c:1201 builtin/remote.c:1203
+#: builtin/remote.c:1196 builtin/remote.c:1198 builtin/remote.c:1200
 #, c-format
 msgid "  HEAD branch: %s"
 msgstr "  HEAD-gren: %s"
 
-#: builtin/remote.c:1205
+#: builtin/remote.c:1202
 #, c-format
 msgid ""
 "  HEAD branch (remote HEAD is ambiguous, may be one of the following):\n"
 msgstr "  HEAD-gren (HEAD på fjärr är tvetydig, kan vara en av följande):\n"
 
-#: builtin/remote.c:1217
+#: builtin/remote.c:1214
 #, c-format
 msgid "  Remote branch:%s"
 msgid_plural "  Remote branches:%s"
 msgstr[0] "  Fjärrgren:%s"
 msgstr[1] "  Fjärrgrenar:%s"
 
-#: builtin/remote.c:1220 builtin/remote.c:1247
+#: builtin/remote.c:1217 builtin/remote.c:1244
 msgid " (status not queried)"
 msgstr " (status inte förfrågad)"
 
-#: builtin/remote.c:1229
+#: builtin/remote.c:1226
 msgid "  Local branch configured for 'git pull':"
 msgid_plural "  Local branches configured for 'git pull':"
 msgstr[0] "  Lokal gren konfigurerad för \"git pull\":"
 msgstr[1] "  Lokala grenar konfigurerade för \"git pull\":"
 
-#: builtin/remote.c:1237
+#: builtin/remote.c:1234
 msgid "  Local refs will be mirrored by 'git push'"
 msgstr "  Lokala referenser speglas av \"git push\""
 
-#: builtin/remote.c:1244
+#: builtin/remote.c:1241
 #, c-format
 msgid "  Local ref configured for 'git push'%s:"
 msgid_plural "  Local refs configured for 'git push'%s:"
 msgstr[0] "  Lokal referens konfigurerad för \"git push\"%s:"
 msgstr[1] "  Lokala referenser konfigurerade för \"git push\"%s:"
 
-#: builtin/remote.c:1265
+#: builtin/remote.c:1262
 msgid "set refs/remotes/<name>/HEAD according to remote"
 msgstr "sätt refs/remotes/<namn>/HEAD enligt fjärren"
 
-#: builtin/remote.c:1267
+#: builtin/remote.c:1264
 msgid "delete refs/remotes/<name>/HEAD"
 msgstr "ta bort refs/remotes/<namn>/HEAD"
 
-#: builtin/remote.c:1282
+#: builtin/remote.c:1279
 msgid "Cannot determine remote HEAD"
 msgstr "Kan inte bestämma HEAD på fjärren"
 
-#: builtin/remote.c:1284
+#: builtin/remote.c:1281
 msgid "Multiple remote HEAD branches. Please choose one explicitly with:"
 msgstr "Flera HEAD-grenar på fjärren. Välj en explicit med:"
 
-#: builtin/remote.c:1294
+#: builtin/remote.c:1291
 #, c-format
 msgid "Could not delete %s"
 msgstr "Kunde inte ta bort %s"
 
-#: builtin/remote.c:1302
+#: builtin/remote.c:1299
 #, c-format
 msgid "Not a valid ref: %s"
 msgstr "Inte en giltig referens: %s"
 
-#: builtin/remote.c:1304
+#: builtin/remote.c:1301
 #, c-format
 msgid "Could not setup %s"
 msgstr "Kunde inte ställa in %s"
 
-#: builtin/remote.c:1322
+#: builtin/remote.c:1319
 #, c-format
 msgid " %s will become dangling!"
 msgstr " %s kommer bli dinglande!"
 
-#: builtin/remote.c:1323
+#: builtin/remote.c:1320
 #, c-format
 msgid " %s has become dangling!"
 msgstr " %s har blivit dinglande!"
 
-#: builtin/remote.c:1329
+#: builtin/remote.c:1330
 #, c-format
 msgid "Pruning %s"
 msgstr "Rensar %s"
 
-#: builtin/remote.c:1330
+#: builtin/remote.c:1331
 #, c-format
 msgid "URL: %s"
 msgstr "URL: %s"
 
-#: builtin/remote.c:1357
+#: builtin/remote.c:1354
 #, c-format
 msgid " * [would prune] %s"
 msgstr " * [skulle rensa] %s"
 
-#: builtin/remote.c:1360
+#: builtin/remote.c:1357
 #, c-format
 msgid " * [pruned] %s"
 msgstr " * [rensad] %s"
 
-#: builtin/remote.c:1405
+#: builtin/remote.c:1402
 msgid "prune remotes after fetching"
 msgstr "rensa fjärrar efter hämtning"
 
-#: builtin/remote.c:1471 builtin/remote.c:1545
+#: builtin/remote.c:1468 builtin/remote.c:1542
 #, c-format
 msgid "No such remote '%s'"
 msgstr "Ingen sådan fjärr \"%s\""
 
-#: builtin/remote.c:1491
+#: builtin/remote.c:1488
 msgid "add branch"
 msgstr "lägg till gren"
 
-#: builtin/remote.c:1498
+#: builtin/remote.c:1495
 msgid "no remote specified"
 msgstr "ingen fjärr angavs"
 
-#: builtin/remote.c:1520
+#: builtin/remote.c:1517
 msgid "manipulate push URLs"
 msgstr "manipulera URL:ar för sändning"
 
-#: builtin/remote.c:1522
+#: builtin/remote.c:1519
 msgid "add URL"
 msgstr "lägg till URL"
 
-#: builtin/remote.c:1524
+#: builtin/remote.c:1521
 msgid "delete URLs"
 msgstr "ta bort URL:ar"
 
-#: builtin/remote.c:1531
+#: builtin/remote.c:1528
 msgid "--add --delete doesn't make sense"
 msgstr "--add --delete ger ingen mening"
 
-#: builtin/remote.c:1571
+#: builtin/remote.c:1568
 #, c-format
 msgid "Invalid old URL pattern: %s"
 msgstr "Felaktig gammalt URL-mönster: %s"
 
-#: builtin/remote.c:1579
+#: builtin/remote.c:1576
 #, c-format
 msgid "No such URL found: %s"
 msgstr "Ingen sådan URL hittades: %s"
 
-#: builtin/remote.c:1581
+#: builtin/remote.c:1578
 msgid "Will not delete all non-push URLs"
 msgstr "Kommer inte ta bort alla icke-sänd-URL:er"
 
-#: builtin/remote.c:1595
+#: builtin/remote.c:1592
 msgid "be verbose; must be placed before a subcommand"
 msgstr "var pratsam; måste skrivas före ett underkommando"
 
 #: builtin/repack.c:17
 msgid "git repack [options]"
 msgstr "git repack [flaggor]"
 
-#: builtin/repack.c:160
+#: builtin/repack.c:159
 msgid "pack everything in a single pack"
 msgstr "packa allt i ett enda paket"
 
-#: builtin/repack.c:162
+#: builtin/repack.c:161
 msgid "same as -a, and turn unreachable objects loose"
 msgstr "samma som -a, och gör onåbara objekt lösa"
 
-#: builtin/repack.c:165
+#: builtin/repack.c:164
 msgid "remove redundant packs, and run git-prune-packed"
 msgstr "ta bort överflödiga paket, och kör git-prune-packed"
 
-#: builtin/repack.c:167
+#: builtin/repack.c:166
 msgid "pass --no-reuse-delta to git-pack-objects"
 msgstr "sänd --no-reuse-delta till git-pack-objects"
 
-#: builtin/repack.c:169
+#: builtin/repack.c:168
 msgid "pass --no-reuse-object to git-pack-objects"
 msgstr "sänd --no-reuse-object till git-pack-objects"
 
-#: builtin/repack.c:171
+#: builtin/repack.c:170
 msgid "do not run git-update-server-info"
 msgstr "kör inte git-update-server-info"
 
-#: builtin/repack.c:174
+#: builtin/repack.c:173
 msgid "pass --local to git-pack-objects"
 msgstr "sänd --local till git-pack-objects"
 
-#: builtin/repack.c:176
+#: builtin/repack.c:175
 msgid "write bitmap index"
 msgstr "skriv bitkartindex"
 
-#: builtin/repack.c:177
+#: builtin/repack.c:176
 msgid "approxidate"
 msgstr "cirkadatum"
 
-#: builtin/repack.c:178
+#: builtin/repack.c:177
 msgid "with -A, do not loosen objects older than this"
 msgstr "med -A, lös inte upp objekt äldre än detta"
 
-#: builtin/repack.c:180
+#: builtin/repack.c:179
 msgid "size of the window used for delta compression"
 msgstr "storlek på fönster använt för deltakomprimering"
 
-#: builtin/repack.c:181 builtin/repack.c:185
+#: builtin/repack.c:180 builtin/repack.c:184
 msgid "bytes"
 msgstr "byte"
 
-#: builtin/repack.c:182
+#: builtin/repack.c:181
 msgid "same as the above, but limit memory size instead of entries count"
 msgstr "samma som ovan, men begränsa minnesstorleken istället för postantal"
 
-#: builtin/repack.c:184
+#: builtin/repack.c:183
 msgid "limits the maximum delta depth"
 msgstr "begränsa maximalt deltadjup"
 
-#: builtin/repack.c:186
+#: builtin/repack.c:185
 msgid "maximum size of each packfile"
 msgstr "maximal storlek på varje paketfil"
 
-#: builtin/repack.c:188
+#: builtin/repack.c:187
 msgid "repack objects in packs marked with .keep"
 msgstr "packa om objekt i paket märkta med .keep"
 
-#: builtin/repack.c:374
+#: builtin/repack.c:371
 #, c-format
 msgid "removing '%s' failed"
 msgstr "misslyckades ta bort \"%s\""
 
 #: builtin/replace.c:19
 msgid "git replace [-f] <object> <replacement>"
@@ -9410,87 +9421,87 @@
 #: builtin/shortlog.c:236
 msgid "Linewrap output"
 msgstr "Radbryt utdata"
 
 #: builtin/show-branch.c:9
 msgid ""
-"git show-branch [-a|--all] [-r|--remotes] [--topo-order | --date-order] [--"
-"current] [--color[=<when>] | --no-color] [--sparse] [--more=<n> | --list | --"
-"independent | --merge-base] [--no-name | --sha1-name] [--topics] [(<rev> | "
-"<glob>)...]"
-msgstr ""
-"git show-branch [-a|--all] [-r|--remotes] [--topo-order | --date-order] [--"
-"current] [--color[=<när>] | --no-color] [--sparse] [--more=<n> | --list | --"
-"independent | --merge-base] [--no-name | --sha1-name] [--topics] [(<rev> | "
-"<mönster>)...]"
+"git show-branch [-a|--all] [-r|--remotes] [--topo-order | --date-order]\n"
+"\t\t[--current] [--color[=<when>] | --no-color] [--sparse]\n"
+"\t\t[--more=<n> | --list | --independent | --merge-base]\n"
+"\t\t[--no-name | --sha1-name] [--topics] [(<rev> | <glob>)...]"
+msgstr ""
+"git show-branch [-a|--all] [-r|--remotes] [--topo-order | --date-order]\n"
+"\t\t[--current] [--color[=<när>] | --no-color] [--sparse]\n"
+"\t\t[--more=<n> | --list | --independent | --merge-base]\n"
+"\t\t[--no-name | --sha1-name] [--topics] [(<rev> | <mönster>)...]"
 
-#: builtin/show-branch.c:10
+#: builtin/show-branch.c:13
 msgid "git show-branch (-g|--reflog)[=<n>[,<base>]] [--list] [<ref>]"
 msgstr "git show-branch (-g|--reflog)[=<n>[,<bas>]] [--list] [<ref>]"
 
-#: builtin/show-branch.c:649
+#: builtin/show-branch.c:652
 msgid "show remote-tracking and local branches"
 msgstr "visa fjärrspårande och lokala grenar"
 
-#: builtin/show-branch.c:651
+#: builtin/show-branch.c:654
 msgid "show remote-tracking branches"
 msgstr "visa fjärrspårande grenar"
 
-#: builtin/show-branch.c:653
+#: builtin/show-branch.c:656
 msgid "color '*!+-' corresponding to the branch"
 msgstr "färga \"*!+-\" enligt grenen"
 
-#: builtin/show-branch.c:655
+#: builtin/show-branch.c:658
 msgid "show <n> more commits after the common ancestor"
 msgstr "visa <n> ytterligare incheckningar efter gemensam anfader"
 
-#: builtin/show-branch.c:657
+#: builtin/show-branch.c:660
 msgid "synonym to more=-1"
 msgstr "synonym till more=-1"
 
-#: builtin/show-branch.c:658
+#: builtin/show-branch.c:661
 msgid "suppress naming strings"
 msgstr "undertyck namnsträngar"
 
-#: builtin/show-branch.c:660
+#: builtin/show-branch.c:663
 msgid "include the current branch"
 msgstr "inkludera aktuell gren"
 
-#: builtin/show-branch.c:662
+#: builtin/show-branch.c:665
 msgid "name commits with their object names"
 msgstr "namnge incheckningar med deras objektnamn"
 
-#: builtin/show-branch.c:664
+#: builtin/show-branch.c:667
 msgid "show possible merge bases"
 msgstr "visa möjliga sammanslagningsbaser"
 
-#: builtin/show-branch.c:666
+#: builtin/show-branch.c:669
 msgid "show refs unreachable from any other ref"
 msgstr "visa referenser som inte kan nås från någon annan referens"
 
-#: builtin/show-branch.c:668
+#: builtin/show-branch.c:671
 msgid "show commits in topological order"
 msgstr "visa incheckningar i topologisk ordning"
 
-#: builtin/show-branch.c:671
+#: builtin/show-branch.c:674
 msgid "show only commits not on the first branch"
 msgstr "visa endast incheckningar inte på den första grenen"
 
-#: builtin/show-branch.c:673
+#: builtin/show-branch.c:676
 msgid "show merges reachable from only one tip"
 msgstr "visa sammanslagningar som endast kan nås från en spets"
 
-#: builtin/show-branch.c:675
+#: builtin/show-branch.c:678
 msgid "topologically sort, maintaining date order where possible"
 msgstr "sortera topologiskt, behåll datumordning när möjligt"
 
-#: builtin/show-branch.c:678
+#: builtin/show-branch.c:681
 msgid "<n>[,<base>]"
 msgstr "<n>[,<bas>]"
 
-#: builtin/show-branch.c:679
+#: builtin/show-branch.c:682
 msgid "show <n> most recent ref-log entries starting at base"
 msgstr "visa <n> nyaste refloggposter med början på bas"
 
 #: builtin/show-ref.c:10
 msgid ""
 "git show-ref [-q|--quiet] [--verify] [--head] [-d|--dereference] [-s|--"
@@ -9553,17 +9564,17 @@
 msgstr "ta bort symbolisk referens"
 
 #: builtin/symbolic-ref.c:42
 msgid "shorten ref output"
 msgstr "förkorta ref-utdata"
 
-#: builtin/symbolic-ref.c:43 builtin/update-ref.c:362
+#: builtin/symbolic-ref.c:43 builtin/update-ref.c:358
 msgid "reason"
 msgstr "skäl"
 
-#: builtin/symbolic-ref.c:43 builtin/update-ref.c:362
+#: builtin/symbolic-ref.c:43 builtin/update-ref.c:358
 msgid "reason of the update"
 msgstr "skäl till uppdateringen"
 
 #: builtin/tag.c:22
 msgid ""
 "git tag [-a|-s|-u <key-id>] [-f] [-m <msg>|-F <file>] <tagname> [<head>]"
@@ -9915,25 +9926,25 @@
 msgstr "git update-ref [flaggor]    <refnamn> <gammaltvärde> [<nyttvärde>]"
 
 #: builtin/update-ref.c:11
 msgid "git update-ref [options] --stdin [-z]"
 msgstr "git update-ref [flaggor] --stdin [-z]"
 
-#: builtin/update-ref.c:363
+#: builtin/update-ref.c:359
 msgid "delete the reference"
 msgstr "ta bort referensen"
 
-#: builtin/update-ref.c:365
+#: builtin/update-ref.c:361
 msgid "update <refname> not the one it points to"
 msgstr "uppdatera <refnamn> inte det den pekar på"
 
-#: builtin/update-ref.c:366
+#: builtin/update-ref.c:362
 msgid "stdin has NUL-terminated arguments"
 msgstr "standard in har NUL-terminerade argument"
 
-#: builtin/update-ref.c:367
+#: builtin/update-ref.c:363
 msgid "read updates from stdin"
 msgstr "läs uppdateringar från standard in"
 
 #: builtin/update-server-info.c:6
 msgid "git update-server-info [--force]"
 msgstr "git update-server-info [--force]"
@@ -9987,13 +9998,13 @@
 msgstr "endast användbart vid felsökning"
 
 #: credential-cache--daemon.c:267
 msgid "print debugging messages to stderr"
 msgstr "skriv felsökningsmeddelanden på standard fel"
 
-#: git.c:17
+#: git.c:14
 msgid ""
 "'git help -a' and 'git help -g' list available subcommands and some\n"
 "concept guides. See 'git help <command>' or 'git help <concept>'\n"
 "to read about a specific subcommand or concept."
 msgstr ""
 "\"git help -a\" och \"git help -g\" visar tillgängliga underkommandon och\n"
@@ -10105,187 +10116,187 @@
 msgstr "använd <n> siffror för att visa SHA-1:or"
 
 #: rerere.h:27
 msgid "update the index with reused conflict resolution if possible"
 msgstr "uppdatera indexet med återanvänd konfliktlösning om möjligt"
 
-#: git-am.sh:52
+#: git-am.sh:53
 msgid "You need to set your committer info first"
 msgstr "Du måste ställa in din incheckarinformation först"
 
-#: git-am.sh:97
+#: git-am.sh:98
 msgid ""
 "You seem to have moved HEAD since the last 'am' failure.\n"
 "Not rewinding to ORIG_HEAD"
 msgstr ""
 "Du verkar ha flyttat HEAD sedan \"am\" sist misslyckades.\n"
 "Återställer inte till ORIG_HEAD"
 
-#: git-am.sh:107
+#: git-am.sh:108
 #, sh-format
 msgid ""
 "When you have resolved this problem, run \"$cmdline --continue\".\n"
 "If you prefer to skip this patch, run \"$cmdline --skip\" instead.\n"
 "To restore the original branch and stop patching, run \"$cmdline --abort\"."
 msgstr ""
 "När du har löst problemet kör du \"$cmdline --continue\".\n"
 "Om du vill hoppa över patchen kör du istället \"$cmdline --skip\".\n"
 "För att återställa originalgrenen och avbryta kör du \"$cmdline --abort\"."
 
-#: git-am.sh:123
+#: git-am.sh:124
 msgid "Cannot fall back to three-way merge."
 msgstr "Kan inte falla tillbaka på trevägssammanslagning."
 
-#: git-am.sh:139
+#: git-am.sh:140
 msgid "Repository lacks necessary blobs to fall back on 3-way merge."
 msgstr ""
 "Arkivet saknar objekt som behövs för att falla tillbaka på 3-"
 "vägssammanslagning."
 
-#: git-am.sh:141
+#: git-am.sh:142
 msgid "Using index info to reconstruct a base tree..."
 msgstr "Använder indexinfo för att återskapa ett basträd..."
 
-#: git-am.sh:156
+#: git-am.sh:157
 msgid ""
 "Did you hand edit your patch?\n"
 "It does not apply to blobs recorded in its index."
 msgstr ""
 "Har du handredigerat din patch?\n"
 "Den kan inte tillämpas på blobbar som antecknats i dess index."
 
-#: git-am.sh:165
+#: git-am.sh:166
 msgid "Falling back to patching base and 3-way merge..."
 msgstr ""
 "Faller tillbaka på att patcha grundversionen och trevägssammanslagning..."
 
-#: git-am.sh:181
+#: git-am.sh:182
 msgid "Failed to merge in the changes."
 msgstr "Misslyckades slå ihop ändringarna."
 
-#: git-am.sh:276
+#: git-am.sh:277
 msgid "Only one StGIT patch series can be applied at once"
 msgstr "Endast en StGIT-patchserie kan tillämpas åt gången"
 
-#: git-am.sh:363
+#: git-am.sh:364
 #, sh-format
 msgid "Patch format $patch_format is not supported."
 msgstr "Patchformatet $patch_format stöds inte."
 
-#: git-am.sh:365
+#: git-am.sh:366
 msgid "Patch format detection failed."
 msgstr "Misslyckades detektera patchformat."
 
-#: git-am.sh:392
+#: git-am.sh:398
 msgid ""
 "The -b/--binary option has been a no-op for long time, and\n"
 "it will be removed. Please do not use it anymore."
 msgstr ""
 "Flaggan -b/--binary har varit utan funktion länge, och\n"
 "kommer tas bort. Vi ber dig att inte använda den längre."
 
-#: git-am.sh:486
+#: git-am.sh:496
 #, sh-format
 msgid "previous rebase directory $dotest still exists but mbox given."
 msgstr "tidigare rebase-katalog $dotest finns fortfarande, men mbox angavs."
 
-#: git-am.sh:491
+#: git-am.sh:501
 msgid "Please make up your mind. --skip or --abort?"
 msgstr "Bestäm dig. --skip eller --abort?"
 
-#: git-am.sh:527
+#: git-am.sh:537
 #, sh-format
 msgid ""
 "Stray $dotest directory found.\n"
 "Use \"git am --abort\" to remove it."
 msgstr ""
 "Kvarbliven katalog $dotest hittades.\n"
 "Använd \"git am --abort\" för att ta bort den."
 
-#: git-am.sh:535
+#: git-am.sh:545
 msgid "Resolve operation not in progress, we are not resuming."
 msgstr "Lösningsoperation pågår inte, vi återupptar inte."
 
-#: git-am.sh:601
+#: git-am.sh:612
 #, sh-format
 msgid "Dirty index: cannot apply patches (dirty: $files)"
 msgstr "Smutsigt index: kan inte tillämpa patchar (smutsiga: $files)"
 
-#: git-am.sh:705
+#: git-am.sh:722
 #, sh-format
 msgid ""
 "Patch is empty.  Was it split wrong?\n"
 "If you would prefer to skip this patch, instead run \"$cmdline --skip\".\n"
 "To restore the original branch and stop patching run \"$cmdline --abort\"."
 msgstr ""
 "Patchen är tom. Delades den upp felaktigt?\n"
 "Om du vill hoppa över patchen kör du istället \"$cmdline --skip\".\n"
 "För att återställa originalgrenen och avbryta kör du \"$cmdline --abort\"."
 
-#: git-am.sh:732
+#: git-am.sh:749
 msgid "Patch does not have a valid e-mail address."
 msgstr "Patchen har inte någon giltig e-postadress."
 
-#: git-am.sh:779
+#: git-am.sh:796
 msgid "cannot be interactive without stdin connected to a terminal."
 msgstr ""
 "kan inte vara interaktiv om standard in inte är ansluten till en terminal."
 
-#: git-am.sh:783
+#: git-am.sh:800
 msgid "Commit Body is:"
 msgstr "Incheckningskroppen är:"
 
 #. TRANSLATORS: Make sure to include [y], [n], [e], [v] and [a]
 #. in your translation. The program will only accept English
 #. input at this point.
-#: git-am.sh:790
+#: git-am.sh:807
 msgid "Apply? [y]es/[n]o/[e]dit/[v]iew patch/[a]ccept all "
 msgstr "Tillämpa? Y=ja/N=nej/E=redigera/V=visa patch/A=godta alla "
 
-#: git-am.sh:826
+#: git-am.sh:843
 #, sh-format
 msgid "Applying: $FIRSTLINE"
 msgstr "Tillämpar: $FIRSTLINE"
 
-#: git-am.sh:847
+#: git-am.sh:864
 msgid ""
 "No changes - did you forget to use 'git add'?\n"
 "If there is nothing left to stage, chances are that something else\n"
 "already introduced the same changes; you might want to skip this patch."
 msgstr ""
 "Inga ändringar - glömde du använda \"git add\"?\n"
 "Om det inte är något kvar att köa kan det hända att något annat redan\n"
 "introducerat samma ändringar; kanske du bör hoppa över patchen."
 
-#: git-am.sh:855
+#: git-am.sh:872
 msgid ""
 "You still have unmerged paths in your index\n"
 "did you forget to use 'git add'?"
 msgstr ""
 "Du har fortfarande sökvägar som inte slagits samman i ditt index\n"
 "glömde du använda \"git add\"?"
 
-#: git-am.sh:871
+#: git-am.sh:888
 msgid "No changes -- Patch already applied."
 msgstr "Inga ändringar -- Patchen har redan tillämpats."
 
-#: git-am.sh:881
+#: git-am.sh:898
 #, sh-format
 msgid "Patch failed at $msgnum $FIRSTLINE"
 msgstr "Patchen misslyckades vid $msgnum $FIRSTLINE"
 
-#: git-am.sh:884
+#: git-am.sh:901
 #, sh-format
 msgid ""
 "The copy of the patch that failed is found in:\n"
 "   $dotest/patch"
 msgstr ""
 "En kopia av patchen som misslyckades finns i:\n"
 "   $dotest/patch"
 
-#: git-am.sh:902
+#: git-am.sh:919
 msgid "applying to an empty history"
 msgstr "tillämpar på en tom historik"
 
 #: git-bisect.sh:48
 msgid "You need to start by \"git bisect start\""
 msgstr "Du måste starta med \"git bisect start\""
@@ -10344,104 +10355,104 @@
 
 #: git-bisect.sh:244
 #, sh-format
 msgid "Bad rev input: $rev"
 msgstr "Felaktig rev-indata: $rev"
 
-#: git-bisect.sh:250
+#: git-bisect.sh:253
 msgid "'git bisect bad' can take only one argument."
 msgstr "\"git bisect bad\" kan bara ta ett argument."
 
-#: git-bisect.sh:273
+#: git-bisect.sh:276
 msgid "Warning: bisecting only with a bad commit."
 msgstr "Varning: utför \"bisect\" med endast en dålig incheckning"
 
 #. TRANSLATORS: Make sure to include [Y] and [n] in your
 #. translation. The program will only accept English input
 #. at this point.
-#: git-bisect.sh:279
+#: git-bisect.sh:282
 msgid "Are you sure [Y/n]? "
 msgstr "Är du säker [Y=ja/N=nej]? "
 
-#: git-bisect.sh:289
+#: git-bisect.sh:292
 msgid ""
 "You need to give me at least one good and one bad revision.\n"
 "(You can use \"git bisect bad\" and \"git bisect good\" for that.)"
 msgstr ""
 "Du måste ange åtminstone en bra och en dålig version.\n"
 "(Du kan använda \"git bisect bad\" och \"git bisect good\" för detta.)"
 
-#: git-bisect.sh:292
+#: git-bisect.sh:295
 msgid ""
 "You need to start by \"git bisect start\".\n"
 "You then need to give me at least one good and one bad revision.\n"
 "(You can use \"git bisect bad\" and \"git bisect good\" for that.)"
 msgstr ""
 "Du måste starta med \"git bisect start\".\n"
 "Du måste sedan ange åtminstone en bra och en dålig version.\n"
 "(Du kan använda \"git bisect bad\" och \"git bisect good\" för detta.)"
 
-#: git-bisect.sh:363 git-bisect.sh:490
+#: git-bisect.sh:366 git-bisect.sh:493
 msgid "We are not bisecting."
 msgstr "Vi utför ingen bisect för tillfället."
 
-#: git-bisect.sh:370
+#: git-bisect.sh:373
 #, sh-format
 msgid "'$invalid' is not a valid commit"
 msgstr "\"$invalid\" är inte en giltig incheckning"
 
-#: git-bisect.sh:379
+#: git-bisect.sh:382
 #, sh-format
 msgid ""
 "Could not check out original HEAD '$branch'.\n"
 "Try 'git bisect reset <commit>'."
 msgstr ""
 "Kunde inte checka ut original-HEAD \"$branch\".\n"
 "Försök \"git bisect reset <incheckning>\"."
 
-#: git-bisect.sh:406
+#: git-bisect.sh:409
 msgid "No logfile given"
 msgstr "Ingen loggfil angiven"
 
-#: git-bisect.sh:407
+#: git-bisect.sh:410
 #, sh-format
 msgid "cannot read $file for replaying"
 msgstr "kan inte läsa $file för uppspelning"
 
-#: git-bisect.sh:424
+#: git-bisect.sh:427
 msgid "?? what are you talking about?"
 msgstr "?? vad menar du?"
 
-#: git-bisect.sh:436
+#: git-bisect.sh:439
 #, sh-format
 msgid "running $command"
 msgstr "kör $command"
 
-#: git-bisect.sh:443
+#: git-bisect.sh:446
 #, sh-format
 msgid ""
 "bisect run failed:\n"
 "exit code $res from '$command' is < 0 or >= 128"
 msgstr ""
 "\"bisect\"-körningen misslyckades:\n"
 "felkod $res från \"$command\" är < 0 eller >= 128"
 
-#: git-bisect.sh:469
+#: git-bisect.sh:472
 msgid "bisect run cannot continue any more"
 msgstr "\"bisect\"-körningen kan inte fortsätta längre"
 
-#: git-bisect.sh:475
+#: git-bisect.sh:478
 #, sh-format
 msgid ""
 "bisect run failed:\n"
 "'bisect_state $state' exited with error code $res"
 msgstr ""
 "\"bisect\"-körningen misslyckades:\n"
 "\"bisect_state $state\" avslutades med felkoden $res"
 
-#: git-bisect.sh:482
+#: git-bisect.sh:485
 msgid "bisect run success"
 msgstr "\"bisect\"-körningen lyckades"
 
 #: git-pull.sh:21
 msgid ""
 "Pull is not possible because you have unmerged files.\n"
@@ -11069,12 +11080,24 @@
 
 #: git-submodule.sh:1331
 #, sh-format
 msgid "Synchronizing submodule url for '$displaypath'"
 msgstr "Synkroniserar undermodul-url för \"$displaypath\""
 
+#~ msgid "no files added"
+#~ msgstr "inga filer har lagts till"
+
+#~ msgid "force creation (when already exists)"
+#~ msgstr "tvinga skapande (när den redan finns)"
+
+#~ msgid "Malformed ident string: '%s'"
+#~ msgstr "Felaktig indragningssträng: \"%s\""
+
+#~ msgid "slot"
+#~ msgstr "plats"
+
 #~ msgid "Failed to lock ref for update"
 #~ msgstr "Misslyckades låsa referens för uppdatering"
 
 #~ msgid "Failed to write ref"
 #~ msgstr "Misslyckades skriva referens"
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/po/vi.po /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/po/vi.po
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/po/vi.po	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/po/vi.po	2015-02-06 05:40:08.000000000 +0800
@@ -1,25 +1,25 @@
 # Vietnamese translation for GIT-CORE.
 # Bản dịch tiếng Việt dành cho GIT-CORE.
 # This file is distributed under the same license as the git-core package.
-# First translated by Trần Ngọc Quân <vnwildman@gmail.com>, 2012-2014.
 # Nguyễn Thái Ngọc Duy <pclouds@gmail.com>, 2012.
+# Trần Ngọc Quân <vnwildman@gmail.com>, 2012, 2013, 2014, 2015.
 #
 msgid ""
 msgstr ""
-"Project-Id-Version: git v2.2.0\n"
+"Project-Id-Version: git v2.3.0\n"
 "Report-Msgid-Bugs-To: Git Mailing List <git@vger.kernel.org>\n"
-"POT-Creation-Date: 2014-11-20 09:42+0800\n"
-"PO-Revision-Date: 2014-11-20 16:10+0800\n"
+"POT-Creation-Date: 2015-01-21 14:21+0800\n"
+"PO-Revision-Date: 2015-01-21 14:58+0800\n"
 "Last-Translator: Trần Ngọc Quân <vnwildman@gmail.com>\n"
 "Language-Team: Vietnamese <translation-team-vi@lists.sourceforge.net>\n"
 "Language: vi\n"
 "MIME-Version: 1.0\n"
 "Content-Type: text/plain; charset=UTF-8\n"
 "Content-Transfer-Encoding: 8bit\n"
-"Plural-Forms: nplurals=2; plural=1;\n"
+"Plural-Forms: nplurals=1; plural=0;\n"
 "X-Language-Team-Website: <http://translationproject.org/team/vi.html>\n"
 "X-Poedit-SourceCharset: UTF-8\n"
 "X-Poedit-Basepath: ../\n"
 "X-Generator: Poedit 1.5.5\n"
 
 #: advice.c:55
@@ -35,99 +35,99 @@
 "Sửa chúng trong cây làm việc,\n"
 "và sau đó dùng lệnh “git add/rm <tập-tin>”\n"
 "dành riêng cho việc đánh dấu cần giải quyết và tạo lần chuyển giao."
 
 #: archive.c:11
 msgid "git archive [options] <tree-ish> [<path>...]"
-msgstr "git archive [các-tùy-chọn] <tree-ish> [<đường-dẫn>...]"
+msgstr "git archive [các-tùy-chọn] <tree-ish> [<đường-dẫn>…]"
 
 #: archive.c:12
 msgid "git archive --list"
 msgstr "git archive --list"
 
 #: archive.c:13
 msgid ""
 "git archive --remote <repo> [--exec <cmd>] [options] <tree-ish> [<path>...]"
 msgstr ""
 "git archive --remote <kho> [--exec <lệnh>] [các-tùy-chọn] <tree-ish> [<đường-"
-"dẫn>...]"
+"dẫn>…]"
 
 #: archive.c:14
 msgid "git archive --remote <repo> [--exec <cmd>] --list"
 msgstr "git archive --remote <kho> [--exec <lệnh>] --list"
 
-#: archive.c:334 builtin/add.c:137 builtin/add.c:427 builtin/rm.c:328
+#: archive.c:342 builtin/add.c:137 builtin/add.c:427 builtin/rm.c:328
 #, c-format
 msgid "pathspec '%s' did not match any files"
 msgstr "đặc tả đường dẫn “%s” không khớp với bất kỳ tập tin nào"
 
-#: archive.c:419
+#: archive.c:427
 msgid "fmt"
 msgstr "định_dạng"
 
-#: archive.c:419
+#: archive.c:427
 msgid "archive format"
 msgstr "định dạng lưu trữ"
 
-#: archive.c:420 builtin/log.c:1204
+#: archive.c:428 builtin/log.c:1204
 msgid "prefix"
 msgstr "tiền_tố"
 
-#: archive.c:421
+#: archive.c:429
 msgid "prepend prefix to each pathname in the archive"
 msgstr "nối thêm tiền tố vào từng đường dẫn tập tin trong kho lưu"
 
-#: archive.c:422 builtin/archive.c:88 builtin/blame.c:2517
+#: archive.c:430 builtin/archive.c:88 builtin/blame.c:2517
 #: builtin/blame.c:2518 builtin/config.c:57 builtin/fast-export.c:986
 #: builtin/fast-export.c:988 builtin/grep.c:712 builtin/hash-object.c:101
-#: builtin/ls-files.c:489 builtin/ls-files.c:492 builtin/notes.c:411
-#: builtin/notes.c:568 builtin/read-tree.c:109 parse-options.h:151
+#: builtin/ls-files.c:489 builtin/ls-files.c:492 builtin/notes.c:394
+#: builtin/notes.c:557 builtin/read-tree.c:109 parse-options.h:151
 msgid "file"
 msgstr "tập_tin"
 
-#: archive.c:423 builtin/archive.c:89
+#: archive.c:431 builtin/archive.c:89
 msgid "write the archive to this file"
 msgstr "ghi kho lưu vào tập tin này"
 
-#: archive.c:425
+#: archive.c:433
 msgid "read .gitattributes in working directory"
 msgstr "đọc .gitattributes trong thư mục làm việc"
 
-#: archive.c:426
+#: archive.c:434
 msgid "report archived files on stderr"
 msgstr "liệt kê các tập tin được lưu trữ vào stderr (đầu ra lỗi tiêu chuẩn)"
 
-#: archive.c:427
+#: archive.c:435
 msgid "store only"
 msgstr "chỉ lưu (không nén)"
 
-#: archive.c:428
+#: archive.c:436
 msgid "compress faster"
 msgstr "nén nhanh hơn"
 
-#: archive.c:436
+#: archive.c:444
 msgid "compress better"
 msgstr "nén nhỏ hơn"
 
-#: archive.c:439
+#: archive.c:447
 msgid "list supported archive formats"
 msgstr "liệt kê các kiểu nén được hỗ trợ"
 
-#: archive.c:441 builtin/archive.c:90 builtin/clone.c:85
+#: archive.c:449 builtin/archive.c:90 builtin/clone.c:86
 msgid "repo"
 msgstr "kho"
 
-#: archive.c:442 builtin/archive.c:91
+#: archive.c:450 builtin/archive.c:91
 msgid "retrieve the archive from remote repository <repo>"
 msgstr "nhận kho nén từ kho chứa <kho> trên máy chủ"
 
-#: archive.c:443 builtin/archive.c:92 builtin/notes.c:490
+#: archive.c:451 builtin/archive.c:92 builtin/notes.c:478
 msgid "command"
 msgstr "lệnh"
 
-#: archive.c:444 builtin/archive.c:93
+#: archive.c:452 builtin/archive.c:93
 msgid "path to the remote git-upload-archive command"
 msgstr "đường dẫn đến lệnh git-upload-pack trên máy chủ"
 
 #: attr.c:258
 msgid ""
 "Negative patterns are ignored in git attributes\n"
@@ -226,13 +226,13 @@
 msgstr ""
 "\n"
 "Nếu bạn có ý định “cải tổ” công việc của bạn trên nhánh thượng nguồn\n"
 "(upstream) cái mà đã sẵn có trên máy chủ, bạn cần chạy\n"
 "lệnh \"git fetch\" để lấy nó về.\n"
 "\n"
-"Nếu bạn có ý định push lên một nhánh nội bộ mới cái mà\n"
+"Nếu bạn có ý định đẩy lên lên một nhánh nội bộ mới cái mà\n"
 "sẽ theo dõi bản đối chiếu máy chủ của nó, bạn cần dùng lệnh\n"
 "\"git push -u\" để đặt cấu hình thượng nguồn bạn muốn push."
 
 #: branch.c:243
 #, c-format
 msgid "Not a valid object name: '%s'."
@@ -255,45 +255,43 @@
 
 #: bundle.c:61
 #, c-format
 msgid "unrecognized header: %s%s (%d)"
 msgstr "phần đầu không được thừa nhận: %s%s (%d)"
 
-#: bundle.c:87 builtin/commit.c:788
+#: bundle.c:87 builtin/commit.c:770
 #, c-format
 msgid "could not open '%s'"
 msgstr "không thể mở “%s”"
 
 #: bundle.c:139
 msgid "Repository lacks these prerequisite commits:"
 msgstr "Kho chứa thiếu những lần chuyển giao tiên quyết này:"
 
-#: bundle.c:163 sequencer.c:641 sequencer.c:1096 builtin/blame.c:2706
-#: builtin/branch.c:652 builtin/commit.c:1085 builtin/log.c:330
-#: builtin/log.c:823 builtin/log.c:1432 builtin/log.c:1669 builtin/merge.c:357
+#: bundle.c:163 sequencer.c:645 sequencer.c:1100 builtin/blame.c:2706
+#: builtin/branch.c:652 builtin/commit.c:1049 builtin/log.c:330
+#: builtin/log.c:823 builtin/log.c:1432 builtin/log.c:1669 builtin/merge.c:358
 #: builtin/shortlog.c:158
 msgid "revision walk setup failed"
 msgstr "cài đặt việc di chuyển qua các điểm xét duyệt gặp lỗi"
 
 #: bundle.c:185
 #, c-format
 msgid "The bundle contains this ref:"
 msgid_plural "The bundle contains these %d refs:"
-msgstr[0] "Bundle chứa tham chiếu này:"
-msgstr[1] "Bundle chứa %d tham chiếu:"
+msgstr[0] "Bundle chứa %d tham chiếu:"
 
 #: bundle.c:192
 msgid "The bundle records a complete history."
 msgstr "Lệnh bundle ghi lại toàn bộ lịch sử."
 
 #: bundle.c:194
 #, c-format
 msgid "The bundle requires this ref:"
 msgid_plural "The bundle requires these %d refs:"
-msgstr[0] "Lệnh bundle yêu cầu tham chiếu này:"
-msgstr[1] "Lệnh bundle yêu cầu %d tham chiếu này:"
+msgstr[0] "Lệnh bundle yêu cầu %d tham chiếu này:"
 
 #: bundle.c:251
 msgid "Could not spawn pack-objects"
 msgstr "Không thể sản sinh đối tượng gói"
 
 #: bundle.c:269
@@ -324,13 +322,13 @@
 msgstr "không thể tạo “%s”"
 
 #: bundle.c:475
 msgid "index-pack died"
 msgstr "mục lục gói đã chết"
 
-#: color.c:157
+#: color.c:260
 #, c-format
 msgid "invalid color value: %.*s"
 msgstr "giá trị màu không hợp lệ: %.*s"
 
 #: commit.c:40
 #, c-format
@@ -373,31 +371,31 @@
 
 #: config.c:885
 #, c-format
 msgid "invalid mode for object creation: %s"
 msgstr "chế độ không hợp lệ đối với việc tạo đối tượng: %s"
 
-#: config.c:1201
+#: config.c:1211
 msgid "unable to parse command-line config"
 msgstr "không thể phân tích cấu hình dòng lệnh"
 
-#: config.c:1262
+#: config.c:1272
 msgid "unknown error occured while reading the configuration files"
 msgstr "đã có lỗi chưa biết xảy ra trong khi đọc các tập tin cấu hình"
 
-#: config.c:1586
+#: config.c:1596
 #, c-format
 msgid "unable to parse '%s' from command-line config"
 msgstr "không thể phân tích “%s” từ cấu hình dòng lệnh"
 
-#: config.c:1588
+#: config.c:1598
 #, c-format
 msgid "bad config variable '%s' in file '%s' at line %d"
 msgstr "sai biến cấu hình “%s” trong tập tin “%s” tại dòng %d"
 
-#: config.c:1647
+#: config.c:1657
 #, c-format
 msgid "%s has multiple values"
 msgstr "%s có đa giá trị"
 
 #: connected.c:69
 msgid "Could not run 'git rev-list'"
@@ -419,70 +417,61 @@
 
 #: date.c:101
 #, c-format
 msgid "%lu second ago"
 msgid_plural "%lu seconds ago"
 msgstr[0] "%lu giây trước"
-msgstr[1] "%lu giây trước"
 
 #: date.c:108
 #, c-format
 msgid "%lu minute ago"
 msgid_plural "%lu minutes ago"
 msgstr[0] "%lu phút trước"
-msgstr[1] "%lu phút trước"
 
 #: date.c:115
 #, c-format
 msgid "%lu hour ago"
 msgid_plural "%lu hours ago"
 msgstr[0] "%lu giờ trước"
-msgstr[1] "%lu giờ trước"
 
 #: date.c:122
 #, c-format
 msgid "%lu day ago"
 msgid_plural "%lu days ago"
 msgstr[0] "%lu ngày trước"
-msgstr[1] "%lu ngày trước"
 
 #: date.c:128
 #, c-format
 msgid "%lu week ago"
 msgid_plural "%lu weeks ago"
 msgstr[0] "%lu tuần trước"
-msgstr[1] "%lu tuần trước"
 
 #: date.c:135
 #, c-format
 msgid "%lu month ago"
 msgid_plural "%lu months ago"
 msgstr[0] "%lu tháng trước"
-msgstr[1] "%lu tháng trước"
 
 #: date.c:146
 #, c-format
 msgid "%lu year"
 msgid_plural "%lu years"
 msgstr[0] "%lu năm"
-msgstr[1] "%lu năm"
 
 #. TRANSLATORS: "%s" is "<n> years"
 #: date.c:149
 #, c-format
 msgid "%s, %lu month ago"
 msgid_plural "%s, %lu months ago"
 msgstr[0] "%s, %lu tháng trước"
-msgstr[1] "%s, %lu tháng trước"
 
 #: date.c:154 date.c:159
 #, c-format
 msgid "%lu year ago"
 msgid_plural "%lu years ago"
 msgstr[0] "%lu năm trước"
-msgstr[1] "%lu năm trước"
 
 #: diffcore-order.c:24
 #, c-format
 msgid "failed to read orderfile '%s'"
 msgstr "gặp lỗi khi đọc tập-tin-thứ-tự “%s”"
 
@@ -609,13 +598,13 @@
 "CẢNH BÁO: Bạn đã gọi lệnh Git có tên “%s”, mà nó lại không có sẵn.\n"
 "Tiếp tục và coi rằng ý bạn là “%s”"
 
 #: help.c:373
 #, c-format
 msgid "in %0.1f seconds automatically..."
-msgstr "trong %0.1f giây một cách tự động..."
+msgstr "trong %0.1f giây một cách tự động…"
 
 #: help.c:380
 #, c-format
 msgid "git: '%s' is not a git command. See 'git --help'."
 msgstr "git: “%s” không phải là một lệnh của git. Xem “git --help”."
 
@@ -625,36 +614,33 @@
 "Did you mean this?"
 msgid_plural ""
 "\n"
 "Did you mean one of these?"
 msgstr[0] ""
 "\n"
-"Có phải ý bạn là cái này không?"
-msgstr[1] ""
-"\n"
 "Có phải ý bạn là một trong số những cái này không?"
 
 #: help.c:440
 #, c-format
 msgid "%s: %s - %s"
 msgstr "%s: %s - %s"
 
-#: lockfile.c:275
+#: lockfile.c:283
 msgid "BUG: reopen a lockfile that is still open"
 msgstr "LỖI: mở lại tập tin khóa mà nó lại đang được mở"
 
-#: lockfile.c:277
+#: lockfile.c:285
 msgid "BUG: reopen a lockfile that has been committed"
 msgstr "LỖI: mở lại tập tin khóa mà nó đã được chuyển giao"
 
 #: merge.c:41
 msgid "failed to read the cache"
 msgstr "gặp lỗi khi đọc bộ nhớ đệm"
 
-#: merge.c:94 builtin/checkout.c:356 builtin/checkout.c:562
-#: builtin/clone.c:659
+#: merge.c:94 builtin/checkout.c:374 builtin/checkout.c:580
+#: builtin/clone.c:662
 msgid "unable to write new index file"
 msgstr "không thể ghi tập tin lưu bảng mục lục mới"
 
 #: merge-recursive.c:189
 #, c-format
 msgid "(bad commit)\n"
@@ -666,283 +652,282 @@
 msgstr "addinfo_cache gặp lỗi đối với đường dẫn “%s”"
 
 #: merge-recursive.c:270
 msgid "error building trees"
 msgstr "gặp lỗi khi xây dựng cây"
 
-#: merge-recursive.c:691
+#: merge-recursive.c:688
 #, c-format
 msgid "failed to create path '%s'%s"
 msgstr "gặp lỗi khi tạo đường dẫn “%s”%s"
 
-#: merge-recursive.c:702
+#: merge-recursive.c:699
 #, c-format
 msgid "Removing %s to make room for subdirectory\n"
 msgstr "Gỡ bỏ %s để tạo chỗ (room) cho thư mục con\n"
 
-#: merge-recursive.c:716 merge-recursive.c:737
+#: merge-recursive.c:713 merge-recursive.c:734
 msgid ": perhaps a D/F conflict?"
 msgstr ": có lẽ là một xung đột D/F?"
 
-#: merge-recursive.c:727
+#: merge-recursive.c:724
 #, c-format
 msgid "refusing to lose untracked file at '%s'"
 msgstr "từ chối đóng tập tin không được theo dõi tại “%s”"
 
-#: merge-recursive.c:767
+#: merge-recursive.c:764
 #, c-format
 msgid "cannot read object %s '%s'"
 msgstr "không thể đọc đối tượng %s “%s”"
 
-#: merge-recursive.c:769
+#: merge-recursive.c:766
 #, c-format
 msgid "blob expected for %s '%s'"
 msgstr "đối tượng blob được mong đợi cho %s “%s”"
 
-#: merge-recursive.c:792 builtin/clone.c:318
+#: merge-recursive.c:789 builtin/clone.c:321
 #, c-format
 msgid "failed to open '%s'"
 msgstr "gặp lỗi khi mở “%s”"
 
-#: merge-recursive.c:800
+#: merge-recursive.c:797
 #, c-format
 msgid "failed to symlink '%s'"
 msgstr "gặp lỗi khi tạo liên kết mềm (symlink) “%s”"
 
-#: merge-recursive.c:803
+#: merge-recursive.c:800
 #, c-format
 msgid "do not know what to do with %06o %s '%s'"
 msgstr "không hiểu phải làm gì với %06o %s “%s”"
 
-#: merge-recursive.c:941
+#: merge-recursive.c:938
 msgid "Failed to execute internal merge"
 msgstr "Gặp lỗi khi thực hiện trộn nội bộ"
 
-#: merge-recursive.c:945
+#: merge-recursive.c:942
 #, c-format
 msgid "Unable to add %s to database"
 msgstr "Không thể thêm %s vào cơ sở dữ liệu"
 
-#: merge-recursive.c:961
+#: merge-recursive.c:958
 msgid "unsupported object type in the tree"
 msgstr "kiểu đối tượng không được hỗ trợ trong cây (tree)"
 
-#: merge-recursive.c:1036 merge-recursive.c:1050
+#: merge-recursive.c:1033 merge-recursive.c:1047
 #, c-format
 msgid ""
 "CONFLICT (%s/delete): %s deleted in %s and %s in %s. Version %s of %s left "
 "in tree."
 msgstr ""
 "XUNG ĐỘT (%s/xóa): %s bị xóa trong %s và %s trong %s. Phiên bản %s của %s "
 "còn lại trong cây (tree)."
 
-#: merge-recursive.c:1042 merge-recursive.c:1055
+#: merge-recursive.c:1039 merge-recursive.c:1052
 #, c-format
 msgid ""
 "CONFLICT (%s/delete): %s deleted in %s and %s in %s. Version %s of %s left "
 "in tree at %s."
 msgstr ""
 "XUNG ĐỘT (%s/xóa): %s bị xóa trong %s và %s trong %s. Phiên bản %s của %s "
 "còn lại trong cây (tree) tại %s."
 
-#: merge-recursive.c:1096
+#: merge-recursive.c:1093
 msgid "rename"
 msgstr "đổi tên"
 
-#: merge-recursive.c:1096
+#: merge-recursive.c:1093
 msgid "renamed"
 msgstr "đã đổi tên"
 
-#: merge-recursive.c:1152
+#: merge-recursive.c:1149
 #, c-format
 msgid "%s is a directory in %s adding as %s instead"
 msgstr "%s là một thư mục trong %s thay vào đó thêm vào như là %s"
 
-#: merge-recursive.c:1174
+#: merge-recursive.c:1171
 #, c-format
 msgid ""
 "CONFLICT (rename/rename): Rename \"%s\"->\"%s\" in branch \"%s\" rename \"%s"
 "\"->\"%s\" in \"%s\"%s"
 msgstr ""
 "XUNG ĐỘT (đổi-tên/đổi-tên): Đổi tên \"%s\"->\"%s\" trong nhánh \"%s\" đổi "
 "tên \"%s\"->\"%s\" trong \"%s\"%s"
 
-#: merge-recursive.c:1179
+#: merge-recursive.c:1176
 msgid " (left unresolved)"
 msgstr " (cần giải quyết)"
 
-#: merge-recursive.c:1233
+#: merge-recursive.c:1230
 #, c-format
 msgid "CONFLICT (rename/rename): Rename %s->%s in %s. Rename %s->%s in %s"
 msgstr ""
 "XUNG ĐỘT (đổi-tên/đổi-tên): Đổi tên %s->%s trong %s. Đổi tên %s->%s trong %s"
 
-#: merge-recursive.c:1263
+#: merge-recursive.c:1260
 #, c-format
 msgid "Renaming %s to %s and %s to %s instead"
 msgstr "Đang đổi tên %s thành %s thay vì %s thành %s"
 
-#: merge-recursive.c:1462
+#: merge-recursive.c:1459
 #, c-format
 msgid "CONFLICT (rename/add): Rename %s->%s in %s. %s added in %s"
 msgstr ""
 "XUNG ĐỘT (đổi-tên/thêm): Đổi tên %s->%s trong %s. %s được thêm vào trong %s"
 
-#: merge-recursive.c:1472
+#: merge-recursive.c:1469
 #, c-format
 msgid "Adding merged %s"
 msgstr "Thêm hòa trộn %s"
 
-#: merge-recursive.c:1477 merge-recursive.c:1675
+#: merge-recursive.c:1474 merge-recursive.c:1672
 #, c-format
 msgid "Adding as %s instead"
 msgstr "Thay vào đó thêm vào %s"
 
-#: merge-recursive.c:1528
+#: merge-recursive.c:1525
 #, c-format
 msgid "cannot read object %s"
 msgstr "không thể đọc đối tượng %s"
 
-#: merge-recursive.c:1531
+#: merge-recursive.c:1528
 #, c-format
 msgid "object %s is not a blob"
 msgstr "đối tượng %s không phải là một blob"
 
-#: merge-recursive.c:1579
+#: merge-recursive.c:1576
 msgid "modify"
 msgstr "sửa đổi"
 
-#: merge-recursive.c:1579
+#: merge-recursive.c:1576
 msgid "modified"
 msgstr "đã sửa"
 
-#: merge-recursive.c:1589
+#: merge-recursive.c:1586
 msgid "content"
 msgstr "nội dung"
 
-#: merge-recursive.c:1596
+#: merge-recursive.c:1593
 msgid "add/add"
 msgstr "thêm/thêm"
 
-#: merge-recursive.c:1630
+#: merge-recursive.c:1627
 #, c-format
 msgid "Skipped %s (merged same as existing)"
 msgstr "Đã bỏ qua %s (đã có sẵn lần hòa trộn này)"
 
-#: merge-recursive.c:1644
+#: merge-recursive.c:1641
 #, c-format
 msgid "Auto-merging %s"
 msgstr "Tự-động-hòa-trộn %s"
 
-#: merge-recursive.c:1648 git-submodule.sh:1150
+#: merge-recursive.c:1645 git-submodule.sh:1150
 msgid "submodule"
 msgstr "mô-đun-con"
 
-#: merge-recursive.c:1649
+#: merge-recursive.c:1646
 #, c-format
 msgid "CONFLICT (%s): Merge conflict in %s"
 msgstr "XUNG ĐỘT (%s): Xung đột hòa trộn trong %s"
 
-#: merge-recursive.c:1735
+#: merge-recursive.c:1732
 #, c-format
 msgid "Removing %s"
 msgstr "Đang xóa %s"
 
-#: merge-recursive.c:1760
+#: merge-recursive.c:1757
 msgid "file/directory"
 msgstr "tập-tin/thư-mục"
 
-#: merge-recursive.c:1766
+#: merge-recursive.c:1763
 msgid "directory/file"
-msgstr "thư-mục/tập tin"
+msgstr "thư-mục/tập-tin"
 
-#: merge-recursive.c:1771
+#: merge-recursive.c:1768
 #, c-format
 msgid "CONFLICT (%s): There is a directory with name %s in %s. Adding %s as %s"
 msgstr ""
 "XUNG ĐỘT (%s): Ở đây không có thư mục nào có tên %s trong %s. Thêm %s như là "
 "%s"
 
-#: merge-recursive.c:1781
+#: merge-recursive.c:1778
 #, c-format
 msgid "Adding %s"
 msgstr "Thêm \"%s\""
 
-#: merge-recursive.c:1798
+#: merge-recursive.c:1795
 msgid "Fatal merge failure, shouldn't happen."
 msgstr "Việc hòa trộn hỏng nghiêm trọng, không nên để xảy ra."
 
-#: merge-recursive.c:1817
+#: merge-recursive.c:1814
 msgid "Already up-to-date!"
 msgstr "Đã cập nhật rồi!"
 
-#: merge-recursive.c:1826
+#: merge-recursive.c:1823
 #, c-format
 msgid "merging of trees %s and %s failed"
 msgstr "hòa trộn cây (tree) %s và %s gặp lỗi"
 
-#: merge-recursive.c:1856
+#: merge-recursive.c:1853
 #, c-format
 msgid "Unprocessed path??? %s"
 msgstr "Đường dẫn chưa được xử lý??? %s"
 
-#: merge-recursive.c:1901
+#: merge-recursive.c:1898
 msgid "Merging:"
 msgstr "Đang trộn:"
 
-#: merge-recursive.c:1914
+#: merge-recursive.c:1911
 #, c-format
 msgid "found %u common ancestor:"
 msgid_plural "found %u common ancestors:"
 msgstr[0] "tìm thấy %u tổ tiên chung:"
-msgstr[1] "tìm thấy %u tổ tiên chung:"
 
-#: merge-recursive.c:1951
+#: merge-recursive.c:1948
 msgid "merge returned no commit"
 msgstr "hòa trộn không trả về lần chuyển giao nào"
 
-#: merge-recursive.c:2008
+#: merge-recursive.c:2005
 #, c-format
 msgid "Could not parse object '%s'"
 msgstr "Không thể phân tích đối tượng “%s”"
 
-#: merge-recursive.c:2019 builtin/merge.c:666
+#: merge-recursive.c:2016 builtin/merge.c:667
 msgid "Unable to write index."
 msgstr "Không thể ghi bảng mục lục"
 
 #: notes-utils.c:41
 msgid "Cannot commit uninitialized/unreferenced notes tree"
 msgstr ""
 "Không thể chuyển giao cây ghi chú chưa được khởi tạo hoặc không được tham "
 "chiếu"
 
-#: notes-utils.c:83
+#: notes-utils.c:82
 #, c-format
 msgid "Bad notes.rewriteMode value: '%s'"
 msgstr "Giá trị notes.rewriteMode sai: “%s”"
 
-#: notes-utils.c:93
+#: notes-utils.c:92
 #, c-format
 msgid "Refusing to rewrite notes in %s (outside of refs/notes/)"
 msgstr "Từ chối ghi đè ghi chú trong %s (nằm ngoài refs/notes/)"
 
 #. TRANSLATORS: The first %s is the name of the
 #. environment variable, the second %s is its value
-#: notes-utils.c:120
+#: notes-utils.c:119
 #, c-format
 msgid "Bad %s value: '%s'"
 msgstr "Giá trị %s sai: “%s”"
 
 #: object.c:241
 #, c-format
 msgid "unable to parse object: %s"
 msgstr "không thể phân tích đối tượng: “%s”"
 
 #: parse-options.c:546
 msgid "..."
-msgstr "..."
+msgstr "…"
 
 #: parse-options.c:564
 #, c-format
 msgid "usage: %s"
 msgstr "cách dùng: %s"
 
@@ -1032,22 +1017,22 @@
 msgstr "không thể phân tích định dạng --pretty"
 
 #: progress.c:225
 msgid "done"
 msgstr "xong"
 
-#: read-cache.c:1261
+#: read-cache.c:1267
 #, c-format
 msgid ""
 "index.version set, but the value is invalid.\n"
 "Using version %i"
 msgstr ""
 "index.version được đặt, nhưng giá trị của nó lại không hợp lệ.\n"
 "Dùng phiên bản %i"
 
-#: read-cache.c:1271
+#: read-cache.c:1277
 #, c-format
 msgid ""
 "GIT_INDEX_VERSION set, but the value is invalid.\n"
 "Using version %i"
 msgstr ""
 "GIT_INDEX_VERSION được đặt, nhưng giá trị của nó lại không hợp lệ.\n"
@@ -1069,72 +1054,64 @@
 msgstr "%s theo dõi cả %s và %s"
 
 #: remote.c:798
 msgid "Internal error"
 msgstr "Lỗi nội bộ"
 
-#: remote.c:1968
+#: remote.c:1980
 #, c-format
 msgid "Your branch is based on '%s', but the upstream is gone.\n"
 msgstr ""
 "Nhánh của bạn dựa trên cơ sở là “%s”, nhưng trên thượng nguồn không còn.\n"
 
-#: remote.c:1972
+#: remote.c:1984
 msgid "  (use \"git branch --unset-upstream\" to fixup)\n"
 msgstr "   (dùng \" git branch --unset-upstream\" để sửa)\n"
 
-#: remote.c:1975
+#: remote.c:1987
 #, c-format
 msgid "Your branch is up-to-date with '%s'.\n"
 msgstr "Nhánh của bạn đã cập nhật với “%s”.\n"
 
-#: remote.c:1979
+#: remote.c:1991
 #, c-format
 msgid "Your branch is ahead of '%s' by %d commit.\n"
 msgid_plural "Your branch is ahead of '%s' by %d commits.\n"
 msgstr[0] "Nhánh của bạn đứng trước “%s” %d lần chuyển giao.\n"
-msgstr[1] "Nhánh của bạn đứng trước “%s” %d lần chuyển giao.\n"
 
-#: remote.c:1985
+#: remote.c:1997
 msgid "  (use \"git push\" to publish your local commits)\n"
 msgstr "  (dùng \"git push\" để xuất bản các lần chuyển giao nội bộ của bạn)\n"
 
-#: remote.c:1988
+#: remote.c:2000
 #, c-format
 msgid "Your branch is behind '%s' by %d commit, and can be fast-forwarded.\n"
 msgid_plural ""
 "Your branch is behind '%s' by %d commits, and can be fast-forwarded.\n"
 msgstr[0] ""
 "Nhánh của bạn ở đằng sau “%s” %d lần chuyển giao, và có thể được fast-"
 "forward.\n"
-msgstr[1] ""
-"Nhánh của bạn ở đằng sau “%s” %d lần chuyển giao, và có thể được fast-"
-"forward.\n"
 
-#: remote.c:1996
+#: remote.c:2008
 msgid "  (use \"git pull\" to update your local branch)\n"
 msgstr "  (dùng \"git pull\" để cập nhật nhánh nội bộ của bạn)\n"
 
-#: remote.c:1999
+#: remote.c:2011
 #, c-format
 msgid ""
 "Your branch and '%s' have diverged,\n"
 "and have %d and %d different commit each, respectively.\n"
 msgid_plural ""
 "Your branch and '%s' have diverged,\n"
 "and have %d and %d different commits each, respectively.\n"
 msgstr[0] ""
 "Nhánh của bạn và “%s” bị phân kỳ,\n"
 "và có %d và %d lần chuyển giao khác nhau cho từng cái,\n"
 "tương ứng với mỗi lần.\n"
-msgstr[1] ""
-"Nhánh của bạn và “%s” bị phân kỳ,\n"
-"và có %d và %d lần chuyển giao khác nhau cho từng cái,\n"
-"tương ứng với mỗi lần.\n"
 
-#: remote.c:2009
+#: remote.c:2021
 msgid "  (use \"git pull\" to merge the remote branch into yours)\n"
 msgstr ""
 "  (dùng \"git pull\" để hòa trộn nhánh trên máy chủ vào trong nhánh của "
 "bạn)\n"
 
 #: run-command.c:87
@@ -1143,28 +1120,28 @@
 
 #: run-command.c:89
 #, c-format
 msgid "dup2(%d,%d) failed"
 msgstr "dup2(%d,%d) gặp lỗi"
 
-#: send-pack.c:265
+#: send-pack.c:268
 msgid "failed to sign the push certificate"
 msgstr "gặp lỗi khi ký chứng thực đẩy"
 
-#: send-pack.c:322
+#: send-pack.c:325
 msgid "the receiving end does not support --signed push"
 msgstr "kết thúc nhận không hỗ trợ đẩy --signed"
 
-#: sequencer.c:172 builtin/merge.c:781 builtin/merge.c:892
-#: builtin/merge.c:1002 builtin/merge.c:1012
+#: sequencer.c:172 builtin/merge.c:782 builtin/merge.c:893 builtin/merge.c:995
+#: builtin/merge.c:1005
 #, c-format
 msgid "Could not open '%s' for writing"
 msgstr "Không thể mở “%s” để ghi"
 
-#: sequencer.c:174 builtin/merge.c:343 builtin/merge.c:784
-#: builtin/merge.c:1004 builtin/merge.c:1017
+#: sequencer.c:174 builtin/merge.c:344 builtin/merge.c:785 builtin/merge.c:997
+#: builtin/merge.c:1010
 #, c-format
 msgid "Could not write to '%s'"
 msgstr "Không thể ghi vào “%s”"
 
 #: sequencer.c:195
 msgid ""
@@ -1181,13 +1158,13 @@
 "and commit the result with 'git commit'"
 msgstr ""
 "sau khi giải quyết các xung đột, đánh dấu đường dẫn đã sửa\n"
 "với lệnh “git add <đường_dẫn>” hoặc “git rm <đường_dẫn>”\n"
 "và chuyển giao kết quả bằng lệnh “git commit”"
 
-#: sequencer.c:211 sequencer.c:852 sequencer.c:935
+#: sequencer.c:211 sequencer.c:856 sequencer.c:939
 #, c-format
 msgid "Could not write to %s"
 msgstr "Không thể ghi vào %s"
 
 #: sequencer.c:214
 #, c-format
@@ -1204,205 +1181,205 @@
 
 #: sequencer.c:234
 msgid "Commit your changes or stash them to proceed."
 msgstr "Chuyển giao các thay đổi của bạn hay tạm cất (stash) chúng để xử lý."
 
 #. TRANSLATORS: %s will be "revert" or "cherry-pick"
-#: sequencer.c:304
+#: sequencer.c:321
 #, c-format
 msgid "%s: Unable to write new index file"
 msgstr "%s: Không thể ghi tập tin lưu bảng mục lục mới"
 
-#: sequencer.c:335
+#: sequencer.c:339
 msgid "Could not resolve HEAD commit\n"
 msgstr "Không thể phân giải commit (lần chuyển giao) HEAD\n"
 
-#: sequencer.c:355
+#: sequencer.c:359
 msgid "Unable to update cache tree\n"
 msgstr "Không thể cập nhật cây bộ nhớ đệm\n"
 
-#: sequencer.c:402
+#: sequencer.c:406
 #, c-format
 msgid "Could not parse commit %s\n"
 msgstr "Không thể phân tích commit (lần chuyển giao) %s\n"
 
-#: sequencer.c:407
+#: sequencer.c:411
 #, c-format
 msgid "Could not parse parent commit %s\n"
 msgstr "Không thể phân tích lần chuyển giao cha mẹ “%s”\n"
 
-#: sequencer.c:473
+#: sequencer.c:477
 msgid "Your index file is unmerged."
 msgstr "Tập tin lưu mục lục của bạn không được hòa trộn."
 
-#: sequencer.c:492
+#: sequencer.c:496
 #, c-format
 msgid "Commit %s is a merge but no -m option was given."
 msgstr "Lần chuyển giao %s là một lần hòa trộn nhưng không đưa ra tùy chọn -m."
 
-#: sequencer.c:500
+#: sequencer.c:504
 #, c-format
 msgid "Commit %s does not have parent %d"
 msgstr "Lần chuyển giao %s không có cha mẹ %d"
 
-#: sequencer.c:504
+#: sequencer.c:508
 #, c-format
 msgid "Mainline was specified but commit %s is not a merge."
 msgstr ""
 "Luồng chính đã được chỉ ra nhưng lần chuyển giao %s không phải là một lần "
 "hòa trộn."
 
 #. TRANSLATORS: The first %s will be "revert" or
 #. "cherry-pick", the second %s a SHA1
-#: sequencer.c:517
+#: sequencer.c:521
 #, c-format
 msgid "%s: cannot parse parent commit %s"
 msgstr "%s: không thể phân tích lần chuyển giao mẹ của %s"
 
-#: sequencer.c:521
+#: sequencer.c:525
 #, c-format
 msgid "Cannot get commit message for %s"
 msgstr "Không thể lấy ghi chú lần chuyển giao cho %s"
 
-#: sequencer.c:607
+#: sequencer.c:611
 #, c-format
 msgid "could not revert %s... %s"
-msgstr "không thể revert %s... %s"
+msgstr "không thể revert %s… %s"
 
-#: sequencer.c:608
+#: sequencer.c:612
 #, c-format
 msgid "could not apply %s... %s"
-msgstr "không thể apply (áp dụng miếng vá) %s... %s"
+msgstr "không thể apply (áp dụng miếng vá) %s… %s"
 
-#: sequencer.c:644
+#: sequencer.c:648
 msgid "empty commit set passed"
 msgstr "lần chuyển giao trống rỗng đặt là hợp quy cách"
 
-#: sequencer.c:652
+#: sequencer.c:656
 #, c-format
 msgid "git %s: failed to read the index"
 msgstr "git %s: gặp lỗi đọc bảng mục lục"
 
-#: sequencer.c:656
+#: sequencer.c:660
 #, c-format
 msgid "git %s: failed to refresh the index"
 msgstr "git %s: gặp lỗi khi làm tươi mới bảng mục lục"
 
-#: sequencer.c:716
+#: sequencer.c:720
 #, c-format
 msgid "Cannot %s during a %s"
 msgstr "Không thể %s trong khi %s"
 
-#: sequencer.c:738
+#: sequencer.c:742
 #, c-format
 msgid "Could not parse line %d."
 msgstr "Không phân tích được dòng %d."
 
-#: sequencer.c:743
+#: sequencer.c:747
 msgid "No commits parsed."
 msgstr "Không có lần chuyển giao nào được phân tích."
 
-#: sequencer.c:756
+#: sequencer.c:760
 #, c-format
 msgid "Could not open %s"
 msgstr "Không thể mở %s"
 
-#: sequencer.c:760
+#: sequencer.c:764
 #, c-format
 msgid "Could not read %s."
 msgstr "Không thể đọc %s."
 
-#: sequencer.c:767
+#: sequencer.c:771
 #, c-format
 msgid "Unusable instruction sheet: %s"
 msgstr "Bảng chỉ thị không thể dùng được: %s"
 
-#: sequencer.c:797
+#: sequencer.c:801
 #, c-format
 msgid "Invalid key: %s"
 msgstr "Khóa không đúng: %s"
 
-#: sequencer.c:800
+#: sequencer.c:804
 #, c-format
 msgid "Invalid value for %s: %s"
 msgstr "Giá trị không hợp lệ %s: %s"
 
-#: sequencer.c:812
+#: sequencer.c:816
 #, c-format
 msgid "Malformed options sheet: %s"
 msgstr "Bảng tùy chọn dị hình: %s"
 
-#: sequencer.c:833
+#: sequencer.c:837
 msgid "a cherry-pick or revert is already in progress"
 msgstr "có một thao tác “cherry-pick” hoặc “revert” đang được thực hiện"
 
-#: sequencer.c:834
+#: sequencer.c:838
 msgid "try \"git cherry-pick (--continue | --quit | --abort)\""
 msgstr "hãy thử \"git cherry-pick (--continue | --quit | --abort)\""
 
-#: sequencer.c:838
+#: sequencer.c:842
 #, c-format
 msgid "Could not create sequencer directory %s"
 msgstr "Không thể tạo thư mục xếp dãy %s"
 
-#: sequencer.c:854 sequencer.c:939
+#: sequencer.c:858 sequencer.c:943
 #, c-format
 msgid "Error wrapping up %s."
 msgstr "Lỗi bao bọc %s."
 
-#: sequencer.c:873 sequencer.c:1009
+#: sequencer.c:877 sequencer.c:1013
 msgid "no cherry-pick or revert in progress"
 msgstr "không cherry-pick hay revert trong tiến trình"
 
-#: sequencer.c:875
+#: sequencer.c:879
 msgid "cannot resolve HEAD"
 msgstr "không thể phân giải HEAD"
 
-#: sequencer.c:877
+#: sequencer.c:881
 msgid "cannot abort from a branch yet to be born"
 msgstr "không thể hủy bỏ từ một nhánh mà nó còn chưa được tạo ra"
 
-#: sequencer.c:899 builtin/apply.c:4128
+#: sequencer.c:903 builtin/apply.c:4128
 #, c-format
 msgid "cannot open %s: %s"
 msgstr "không thể mở %s: %s"
 
-#: sequencer.c:902
+#: sequencer.c:906
 #, c-format
 msgid "cannot read %s: %s"
 msgstr "không thể đọc %s: %s"
 
-#: sequencer.c:903
+#: sequencer.c:907
 msgid "unexpected end of file"
 msgstr "gặp kết thúc tập tin đột xuất"
 
-#: sequencer.c:909
+#: sequencer.c:913
 #, c-format
 msgid "stored pre-cherry-pick HEAD file '%s' is corrupt"
 msgstr "tập tin HEAD “pre-cherry-pick” đã lưu “%s” bị hỏng"
 
-#: sequencer.c:932
+#: sequencer.c:936
 #, c-format
 msgid "Could not format %s."
 msgstr "Không thể định dạng “%s”."
 
-#: sequencer.c:1077
+#: sequencer.c:1081
 #, c-format
 msgid "%s: can't cherry-pick a %s"
 msgstr "%s: không thể cherry-pick một %s"
 
-#: sequencer.c:1080
+#: sequencer.c:1084
 #, c-format
 msgid "%s: bad revision"
 msgstr "%s: điểm xét duyệt sai"
 
-#: sequencer.c:1114
+#: sequencer.c:1118
 msgid "Can't revert as initial commit"
 msgstr "Không thể revert một lần chuyển giao khởi tạo"
 
-#: sequencer.c:1115
+#: sequencer.c:1119
 msgid "Can't cherry-pick into empty head"
 msgstr "Không thể cherry-pick vào một đầu (head) trống rỗng"
 
 #: sha1_name.c:440
 msgid ""
 "Git normally never creates a ref that ends with 40 hex characters\n"
@@ -1416,13 +1393,13 @@
 "running \"git config advice.objectNameWarning false\""
 msgstr ""
 "Git thường không bao giờ tạo tham chiếu mà nó kết thúc với 40 ký tự hex\n"
 "bởi vì nó sẽ bị bỏ qua khi bạn chỉ định 40-hex. Những tham chiếu này\n"
 "có lẽ được tạo ra bởi một sai sót nào đó. Ví dụ,\n"
 "\n"
-"  git checkout -b $br $(git rev-parse ...)\n"
+"  git checkout -b $br $(git rev-parse …)\n"
 "\n"
 "với \"$br\" không hiểu lý do vì sao trống rỗng và một tham chiếu 40-hex được "
 "tạo ra.\n"
 "Xin hãy kiểm tra những tham chiếu này và có thể xóa chúng đi. Tắt lời nhắn "
 "này\n"
 "bằng cách chạy lệnh \"git config advice.objectNameWarning false\""
@@ -1469,44 +1446,44 @@
 msgstr "Không thể gỡ bỏ mục .gitmodules dành cho %s"
 
 #: submodule.c:120
 msgid "staging updated .gitmodules failed"
 msgstr "gặp lỗi khi tổ chức .gitmodules đã cập nhật"
 
-#: submodule.c:1111 builtin/init-db.c:363
+#: submodule.c:1111 builtin/init-db.c:371
 #, c-format
 msgid "Could not create git link %s"
 msgstr "Không thể tạo liên kết git “%s”"
 
 #: submodule.c:1122
 #, c-format
 msgid "Could not set core.worktree in %s"
 msgstr "Không thể đặt “core.worktree” trong “%s”."
 
-#: trailer.c:499 trailer.c:503 trailer.c:507 trailer.c:561 trailer.c:565
-#: trailer.c:569
+#: trailer.c:500 trailer.c:504 trailer.c:508 trailer.c:562 trailer.c:566
+#: trailer.c:570
 #, c-format
 msgid "unknown value '%s' for key '%s'"
 msgstr "không hiểu giá trị “%s” cho khóa “%s”"
 
-#: trailer.c:551 trailer.c:556 builtin/remote.c:288
+#: trailer.c:552 trailer.c:557 builtin/remote.c:290
 #, c-format
 msgid "more than one %s"
 msgstr "nhiều hơn một %s"
 
-#: trailer.c:589
+#: trailer.c:590
 #, c-format
 msgid "empty trailer token in trailer '%.*s'"
 msgstr "thẻ thừa trống rỗng trong phần thừa “%.*s”"
 
-#: trailer.c:709
+#: trailer.c:710
 #, c-format
 msgid "could not read input file '%s'"
 msgstr "không đọc được tập tin đầu vào “%s”"
 
-#: trailer.c:712
+#: trailer.c:713
 msgid "could not read from stdin"
 msgstr "không thể đọc từ đầu vào tiêu chuẩn"
 
 #: unpack-trees.c:202
 msgid "Checking out files"
 msgstr "Đang lấy ra các tập tin"
@@ -1567,67 +1544,67 @@
 msgid "Unmerged paths:"
 msgstr "Những đường dẫn chưa được hòa trộn:"
 
 #: wt-status.c:177 wt-status.c:204
 #, c-format
 msgid "  (use \"git reset %s <file>...\" to unstage)"
-msgstr "  (dùng \"git reset %s <tập-tin>...\" để bỏ ra khỏi bệ phóng)"
+msgstr "  (dùng \"git reset %s <tập-tin>…\" để bỏ ra khỏi bệ phóng)"
 
 #: wt-status.c:179 wt-status.c:206
 msgid "  (use \"git rm --cached <file>...\" to unstage)"
-msgstr "  (dùng \"git rm --cached <tập-tin>...\" để bỏ ra khỏi bệ phóng)"
+msgstr "  (dùng \"git rm --cached <tập-tin>…\" để bỏ ra khỏi bệ phóng)"
 
 #: wt-status.c:183
 msgid "  (use \"git add <file>...\" to mark resolution)"
-msgstr "  (dùng \"git add <tập-tin>...\" để đánh dấu là cần giải quyết)"
+msgstr "  (dùng \"git add <tập-tin>…\" để đánh dấu là cần giải quyết)"
 
 #: wt-status.c:185 wt-status.c:189
 msgid "  (use \"git add/rm <file>...\" as appropriate to mark resolution)"
 msgstr ""
-"  (dùng \"git add/rm <tập-tin>...\" như là một cách thích hợp để đánh dấu là "
+"  (dùng \"git add/rm <tập-tin>…\" như là một cách thích hợp để đánh dấu là "
 "cần được giải quyết)"
 
 #: wt-status.c:187
 msgid "  (use \"git rm <file>...\" to mark resolution)"
-msgstr "  (dùng \"git rm <tập-tin>...\" để đánh dấu là cần giải quyết)"
+msgstr "  (dùng \"git rm <tập-tin>…\" để đánh dấu là cần giải quyết)"
 
 #: wt-status.c:198
 msgid "Changes to be committed:"
 msgstr "Những thay đổi sẽ được chuyển giao:"
 
 #: wt-status.c:216
 msgid "Changes not staged for commit:"
 msgstr "Các thay đổi chưa được đặt lên bệ phóng để chuyển giao:"
 
 #: wt-status.c:220
 msgid "  (use \"git add <file>...\" to update what will be committed)"
-msgstr "  (dùng \"git add <tập-tin>...\" để cập nhật những gì sẽ chuyển giao)"
+msgstr "  (dùng \"git add <tập-tin>…\" để cập nhật những gì sẽ chuyển giao)"
 
 #: wt-status.c:222
 msgid "  (use \"git add/rm <file>...\" to update what will be committed)"
 msgstr ""
-"  (dùng \"git add/rm <tập-tin>...\" để cập nhật những gì sẽ được chuyển giao)"
+"  (dùng \"git add/rm <tập-tin>…\" để cập nhật những gì sẽ được chuyển giao)"
 
 #: wt-status.c:223
 msgid ""
 "  (use \"git checkout -- <file>...\" to discard changes in working directory)"
 msgstr ""
-"  (dùng \"git checkout -- <tập-tin>...\" để loại bỏ các thay đổi trong thư "
-"mục làm việc)"
+"  (dùng \"git checkout -- <tập-tin>…\" để loại bỏ các thay đổi trong thư mục "
+"làm việc)"
 
 #: wt-status.c:225
 msgid "  (commit or discard the untracked or modified content in submodules)"
 msgstr ""
 "  (chuyển giao hoặc là loại bỏ các nội dung chưa được theo dõi hay đã sửa "
 "chữa trong mô-đun-con)"
 
 #: wt-status.c:237
 #, c-format
 msgid "  (use \"git %s <file>...\" to include in what will be committed)"
 msgstr ""
-"  (dùng \"git %s <tập-tin>...\" để thêm vào những gì cần được chuyển giao)"
+"  (dùng \"git %s <tập-tin>…\" để thêm vào những gì cần được chuyển giao)"
 
 #: wt-status.c:252
 msgid "both deleted:"
 msgstr "bị xóa bởi cả hai:"
 
 #: wt-status.c:254
@@ -1666,13 +1643,13 @@
 #: wt-status.c:276
 msgid "copied:"
 msgstr "đã chép:"
 
 #: wt-status.c:278
 msgid "deleted:"
-msgstr "đã xoá:"
+msgstr "đã xóa:"
 
 #: wt-status.c:280
 msgid "modified:"
 msgstr "đã sửa:"
 
 #: wt-status.c:282
@@ -1705,320 +1682,320 @@
 
 #: wt-status.c:391
 #, c-format
 msgid "bug: unhandled diff status %c"
 msgstr "lỗi: không thể tiếp nhận trạng thái lệnh diff %c"
 
-#: wt-status.c:761
+#: wt-status.c:758
 msgid "Submodules changed but not updated:"
 msgstr "Những mô-đun-con đã bị thay đổi nhưng chưa được cập nhật:"
 
-#: wt-status.c:763
+#: wt-status.c:760
 msgid "Submodule changes to be committed:"
 msgstr "Những mô-đun-con thay đổi đã được chuyển giao:"
 
-#: wt-status.c:842
+#: wt-status.c:839
 msgid ""
 "Do not touch the line above.\n"
 "Everything below will be removed."
 msgstr ""
 "Không động đến đường ở trên.\n"
 "Mọi thứ phía dưới sẽ được xóa bỏ."
 
-#: wt-status.c:933
+#: wt-status.c:930
 msgid "You have unmerged paths."
 msgstr "Bạn có những đường dẫn chưa được hòa trộn."
 
-#: wt-status.c:936
+#: wt-status.c:933
 msgid "  (fix conflicts and run \"git commit\")"
 msgstr "  (sửa các xung đột rồi chạy \"git commit\")"
 
-#: wt-status.c:939
+#: wt-status.c:936
 msgid "All conflicts fixed but you are still merging."
 msgstr "Tất cả các xung đột đã được giải quyết nhưng bạn vẫn đang hòa trộn."
 
-#: wt-status.c:942
+#: wt-status.c:939
 msgid "  (use \"git commit\" to conclude merge)"
 msgstr "  (dùng \"git commit\" để hoàn tất việc hòa trộn)"
 
-#: wt-status.c:952
+#: wt-status.c:949
 msgid "You are in the middle of an am session."
 msgstr "Bạn đang ở giữa của một phiên “am”."
 
-#: wt-status.c:955
+#: wt-status.c:952
 msgid "The current patch is empty."
 msgstr "Miếng vá hiện tại bị trống rỗng."
 
-#: wt-status.c:959
+#: wt-status.c:956
 msgid "  (fix conflicts and then run \"git am --continue\")"
 msgstr "  (sửa các xung đột và sau đó chạy lệnh \"git am --continue\")"
 
-#: wt-status.c:961
+#: wt-status.c:958
 msgid "  (use \"git am --skip\" to skip this patch)"
 msgstr "  (dùng \"git am --skip\" để bỏ qua miếng vá này)"
 
-#: wt-status.c:963
+#: wt-status.c:960
 msgid "  (use \"git am --abort\" to restore the original branch)"
 msgstr "  (dùng \"git am --abort\" để phục hồi lại nhánh nguyên thủy)"
 
-#: wt-status.c:1023 wt-status.c:1040
+#: wt-status.c:1020 wt-status.c:1037
 #, c-format
 msgid "You are currently rebasing branch '%s' on '%s'."
 msgstr "Bạn hiện nay đang thực hiện việc “rebase” nhánh “%s” trên “%s”."
 
-#: wt-status.c:1028 wt-status.c:1045
+#: wt-status.c:1025 wt-status.c:1042
 msgid "You are currently rebasing."
 msgstr "Bạn hiện nay đang thực hiện việc “rebase” (“cải tổ”)."
 
-#: wt-status.c:1031
+#: wt-status.c:1028
 msgid "  (fix conflicts and then run \"git rebase --continue\")"
 msgstr ""
 "  (sửa các xung đột và sau đó chạy lệnh “cải tổ” \"git rebase --continue\")"
 
-#: wt-status.c:1033
+#: wt-status.c:1030
 msgid "  (use \"git rebase --skip\" to skip this patch)"
 msgstr "  (dùng lệnh “cải tổ” \"git rebase --skip\" để bỏ qua lần vá này)"
 
-#: wt-status.c:1035
+#: wt-status.c:1032
 msgid "  (use \"git rebase --abort\" to check out the original branch)"
 msgstr ""
 "  (dùng lệnh “cải tổ” \"git rebase --abort\" để check-out nhánh nguyên thủy)"
 
-#: wt-status.c:1048
+#: wt-status.c:1045
 msgid "  (all conflicts fixed: run \"git rebase --continue\")"
 msgstr ""
 "  (khi tất cả các xung đột đã sửa xong: chạy lệnh “cải tổ” \"git rebase --"
 "continue\")"
 
-#: wt-status.c:1052
+#: wt-status.c:1049
 #, c-format
 msgid ""
 "You are currently splitting a commit while rebasing branch '%s' on '%s'."
 msgstr ""
 "Bạn hiện nay đang thực hiện việc chia tách một lần chuyển giao trong khi "
 "đang “rebase” nhánh “%s” trên “%s”."
 
-#: wt-status.c:1057
+#: wt-status.c:1054
 msgid "You are currently splitting a commit during a rebase."
 msgstr ""
 "Bạn hiện tại đang cắt đôi một lần chuyển giao trong khi đang thực hiện việc "
 "rebase."
 
-#: wt-status.c:1060
+#: wt-status.c:1057
 msgid "  (Once your working directory is clean, run \"git rebase --continue\")"
 msgstr ""
 "  (Một khi thư mục làm việc của bạn đã gọn gàng, chạy lệnh “cải tổ” \"git "
 "rebase --continue\")"
 
-#: wt-status.c:1064
+#: wt-status.c:1061
 #, c-format
 msgid "You are currently editing a commit while rebasing branch '%s' on '%s'."
 msgstr ""
 "Bạn hiện nay đang thực hiện việc sửa chữa một lần chuyển giao trong khi đang "
 "rebase nhánh “%s” trên “%s”."
 
-#: wt-status.c:1069
+#: wt-status.c:1066
 msgid "You are currently editing a commit during a rebase."
 msgstr "Bạn hiện đang sửa một lần chuyển giao trong khi bạn thực hiện rebase."
 
-#: wt-status.c:1072
+#: wt-status.c:1069
 msgid "  (use \"git commit --amend\" to amend the current commit)"
 msgstr "  (dùng \"git commit --amend\" để “tu bổ” lần chuyển giao hiện tại)"
 
-#: wt-status.c:1074
+#: wt-status.c:1071
 msgid ""
 "  (use \"git rebase --continue\" once you are satisfied with your changes)"
 msgstr ""
 "  (chạy lệnh “cải tổ” \"git rebase --continue\" một khi bạn cảm thấy hài "
 "lòng về những thay đổi của mình)"
 
-#: wt-status.c:1084
+#: wt-status.c:1081
 #, c-format
 msgid "You are currently cherry-picking commit %s."
 msgstr "Bạn hiện nay đang thực hiện việc cherry-pick lần chuyển giao %s."
 
-#: wt-status.c:1089
+#: wt-status.c:1086
 msgid "  (fix conflicts and run \"git cherry-pick --continue\")"
 msgstr ""
 "  (sửa các xung đột và sau đó chạy lệnh \"git cherry-pick --continue\")"
 
-#: wt-status.c:1092
+#: wt-status.c:1089
 msgid "  (all conflicts fixed: run \"git cherry-pick --continue\")"
 msgstr ""
 "  (khi tất cả các xung đột đã sửa xong: chạy lệnh \"git cherry-pick --"
 "continue\")"
 
-#: wt-status.c:1094
+#: wt-status.c:1091
 msgid "  (use \"git cherry-pick --abort\" to cancel the cherry-pick operation)"
 msgstr "  (dùng \"git cherry-pick --abort\" để hủy bỏ thao tác cherry-pick)"
 
-#: wt-status.c:1103
+#: wt-status.c:1100
 #, c-format
 msgid "You are currently reverting commit %s."
 msgstr "Bạn hiện nay đang thực hiện thao tác revert lần chuyển giao “%s”."
 
-#: wt-status.c:1108
+#: wt-status.c:1105
 msgid "  (fix conflicts and run \"git revert --continue\")"
 msgstr "  (sửa các xung đột và sau đó chạy lệnh \"git revert --continue\")"
 
-#: wt-status.c:1111
+#: wt-status.c:1108
 msgid "  (all conflicts fixed: run \"git revert --continue\")"
 msgstr ""
 "  (khi tất cả các xung đột đã sửa xong: chạy lệnh \"git revert --continue\")"
 
-#: wt-status.c:1113
+#: wt-status.c:1110
 msgid "  (use \"git revert --abort\" to cancel the revert operation)"
 msgstr "  (dùng \"git revert --abort\" để hủy bỏ thao tác revert)"
 
-#: wt-status.c:1124
+#: wt-status.c:1121
 #, c-format
 msgid "You are currently bisecting, started from branch '%s'."
 msgstr ""
 "Bạn hiện nay đang thực hiện thao tác di chuyển nửa bước (bisect), bắt đầu từ "
 "nhánh “%s”."
 
-#: wt-status.c:1128
+#: wt-status.c:1125
 msgid "You are currently bisecting."
 msgstr "Bạn hiện tại đang thực hiện việc bisect (di chuyển nửa bước)."
 
-#: wt-status.c:1131
+#: wt-status.c:1128
 msgid "  (use \"git bisect reset\" to get back to the original branch)"
 msgstr "  (dùng \"git bisect reset\" để quay trở lại nhánh nguyên thủy)"
 
-#: wt-status.c:1306
+#: wt-status.c:1303
 msgid "On branch "
 msgstr "Trên nhánh "
 
-#: wt-status.c:1313
+#: wt-status.c:1310
 msgid "rebase in progress; onto "
 msgstr "rebase đang được thực hiện: lên trên "
 
-#: wt-status.c:1320
+#: wt-status.c:1317
 msgid "HEAD detached at "
 msgstr "HEAD được tách rời tại "
 
-#: wt-status.c:1322
+#: wt-status.c:1319
 msgid "HEAD detached from "
 msgstr "HEAD được tách rời từ "
 
-#: wt-status.c:1325
+#: wt-status.c:1322
 msgid "Not currently on any branch."
 msgstr "Hiện tại chẳng ở nhánh nào cả."
 
-#: wt-status.c:1342
+#: wt-status.c:1339
 msgid "Initial commit"
 msgstr "Lần chuyển giao khởi tạo"
 
-#: wt-status.c:1356
+#: wt-status.c:1353
 msgid "Untracked files"
 msgstr "Những tập tin chưa được theo dõi"
 
-#: wt-status.c:1358
+#: wt-status.c:1355
 msgid "Ignored files"
 msgstr "Những tập tin bị lờ đi"
 
-#: wt-status.c:1362
+#: wt-status.c:1359
 #, c-format
 msgid ""
 "It took %.2f seconds to enumerate untracked files. 'status -uno'\n"
 "may speed it up, but you have to be careful not to forget to add\n"
 "new files yourself (see 'git help status')."
 msgstr ""
 "Cần %.2f giây để liệt kê tất cả các tập tin chưa được theo dõi. “status -"
 "uno”\n"
 "có lẽ làm nó nhanh hơn, nhưng bạn phải cẩn thận đừng quên mình phải\n"
 "tự thêm các tập tin mới (xem “git help status”.."
 
-#: wt-status.c:1368
+#: wt-status.c:1365
 #, c-format
 msgid "Untracked files not listed%s"
 msgstr "Những tập tin chưa được theo dõi không được liệt kê ra %s"
 
-#: wt-status.c:1370
+#: wt-status.c:1367
 msgid " (use -u option to show untracked files)"
 msgstr " (dùng tùy chọn -u để hiển thị các tập tin chưa được theo dõi)"
 
-#: wt-status.c:1376
+#: wt-status.c:1373
 msgid "No changes"
 msgstr "Không có thay đổi nào"
 
-#: wt-status.c:1381
+#: wt-status.c:1378
 #, c-format
 msgid "no changes added to commit (use \"git add\" and/or \"git commit -a\")\n"
 msgstr ""
 "không có thay đổi nào được thêm vào để chuyển giao (dùng \"git add\" và/hoặc "
 "\"git commit -a\")\n"
 
-#: wt-status.c:1384
+#: wt-status.c:1381
 #, c-format
 msgid "no changes added to commit\n"
 msgstr "không có thay đổi nào được thêm vào để chuyển giao\n"
 
-#: wt-status.c:1387
+#: wt-status.c:1384
 #, c-format
 msgid ""
 "nothing added to commit but untracked files present (use \"git add\" to "
 "track)\n"
 msgstr ""
 "không có gì được thêm vào lần chuyển giao nhưng có những tập tin chưa được "
 "theo dõi hiện diện (dùng \"git add\" để đưa vào theo dõi)\n"
 
-#: wt-status.c:1390
+#: wt-status.c:1387
 #, c-format
 msgid "nothing added to commit but untracked files present\n"
 msgstr ""
 "không có gì được thêm vào lần chuyển giao nhưng có những tập tin chưa được "
 "theo dõi hiện diện\n"
 
-#: wt-status.c:1393
+#: wt-status.c:1390
 #, c-format
 msgid "nothing to commit (create/copy files and use \"git add\" to track)\n"
 msgstr ""
 "không có gì để chuyển giao (tạo/sao-chép các tập tin và dùng \"git add\" để "
 "đưa vào theo dõi)\n"
 
-#: wt-status.c:1396 wt-status.c:1401
+#: wt-status.c:1393 wt-status.c:1398
 #, c-format
 msgid "nothing to commit\n"
 msgstr "không có gì để chuyển giao\n"
 
-#: wt-status.c:1399
+#: wt-status.c:1396
 #, c-format
 msgid "nothing to commit (use -u to show untracked files)\n"
 msgstr ""
 "không có gì để chuyển giao (dùng -u xem các tập tin chưa được theo dõi)\n"
 
-#: wt-status.c:1403
+#: wt-status.c:1400
 #, c-format
 msgid "nothing to commit, working directory clean\n"
 msgstr "không có gì để chuyển giao, thư mục làm việc sạch sẽ\n"
 
-#: wt-status.c:1512
+#: wt-status.c:1509
 msgid "HEAD (no branch)"
 msgstr "HEAD (không nhánh)"
 
-#: wt-status.c:1518
+#: wt-status.c:1515
 msgid "Initial commit on "
 msgstr "Lần chuyển giao khởi tạo trên "
 
-#: wt-status.c:1550
+#: wt-status.c:1547
 msgid "gone"
 msgstr "đã ra đi"
 
-#: wt-status.c:1552 wt-status.c:1560
+#: wt-status.c:1549 wt-status.c:1557
 msgid "behind "
 msgstr "đằng sau "
 
-#: compat/precompose_utf8.c:55 builtin/clone.c:357
+#: compat/precompose_utf8.c:55 builtin/clone.c:360
 #, c-format
 msgid "failed to unlink '%s'"
 msgstr "gặp lỗi khi bỏ liên kết (unlink) “%s”"
 
 #: builtin/add.c:22
 msgid "git add [options] [--] <pathspec>..."
-msgstr "git add [các-tùy-chọn] [--]  <pathspec>..."
+msgstr "git add [các-tùy-chọn] [--]  <pathspec>…"
 
 #: builtin/add.c:65
 #, c-format
 msgid "unexpected diff status %c"
 msgstr "trạng thái lệnh diff không như mong đợi %c"
 
@@ -2067,28 +2044,28 @@
 msgid "The following paths are ignored by one of your .gitignore files:\n"
 msgstr ""
 "Các đường dẫn theo sau đây sẽ bị lờ đi bởi một trong các tập tin .gitignore "
 "của bạn:\n"
 
 #: builtin/add.c:248 builtin/clean.c:875 builtin/fetch.c:108 builtin/mv.c:110
-#: builtin/prune-packed.c:55 builtin/push.c:499 builtin/remote.c:1375
+#: builtin/prune-packed.c:55 builtin/push.c:499 builtin/remote.c:1372
 #: builtin/rm.c:269
 msgid "dry run"
 msgstr "chạy thử"
 
 #: builtin/add.c:249 builtin/apply.c:4415 builtin/check-ignore.c:19
-#: builtin/commit.c:1362 builtin/count-objects.c:63 builtin/fsck.c:608
+#: builtin/commit.c:1326 builtin/count-objects.c:63 builtin/fsck.c:608
 #: builtin/log.c:1617 builtin/mv.c:109 builtin/read-tree.c:114
 msgid "be verbose"
 msgstr "chi tiết"
 
 #: builtin/add.c:251
 msgid "interactive picking"
 msgstr "sửa bằng cách tương tác"
 
-#: builtin/add.c:252 builtin/checkout.c:1108 builtin/reset.c:286
+#: builtin/add.c:252 builtin/checkout.c:1126 builtin/reset.c:286
 msgid "select hunks interactively"
 msgstr "chọn “hunks” theo kiểu tương tác"
 
 #: builtin/add.c:253
 msgid "edit current diff and apply"
 msgstr "sửa diff hiện nay và áp dụng nó"
@@ -2131,16 +2108,12 @@
 
 #: builtin/add.c:286
 #, c-format
 msgid "Use -f if you really want to add them.\n"
 msgstr "Sử dụng tùy chọn -f nếu bạn thực sự muốn thêm chúng vào.\n"
 
-#: builtin/add.c:287
-msgid "no files added"
-msgstr "chưa có tập tin nào được thêm vào"
-
 #: builtin/add.c:293
 msgid "adding files failed"
 msgstr "thêm tập tin gặp lỗi"
 
 #: builtin/add.c:329
 msgid "-A and -u are mutually incompatible"
@@ -2168,13 +2141,13 @@
 #: builtin/add.c:446 builtin/apply.c:4510 builtin/mv.c:279 builtin/rm.c:431
 msgid "Unable to write new index file"
 msgstr "Không thể ghi tập tin lưu bảng mục lục mới"
 
 #: builtin/apply.c:58
 msgid "git apply [options] [<patch>...]"
-msgstr "git apply [các-tùy-chọn] [<miếng-vá>...]"
+msgstr "git apply [các-tùy-chọn] [<miếng-vá>…]"
 
 #: builtin/apply.c:111
 #, c-format
 msgid "unrecognized whitespace option '%s'"
 msgstr "không nhận ra tùy chọn về khoảng trắng “%s”"
 
@@ -2239,15 +2212,12 @@
 msgid_plural ""
 "git diff header lacks filename information when removing %d leading pathname "
 "components (line %d)"
 msgstr[0] ""
 "phần đầu diff cho git  thiếu thông tin tên tập tin khi gỡ bỏ đi %d trong "
 "thành phần dẫn đầu tên của đường dẫn (dòng %d)"
-msgstr[1] ""
-"phần đầu diff cho git  thiếu thông tin tên tập tin khi gỡ bỏ đi %d trong "
-"thành phần dẫn đầu tên của đường dẫn (dòng %d)"
 
 #: builtin/apply.c:1657
 msgid "new file depends on old contents"
 msgstr "tập tin mới phụ thuộc vào nội dung cũ"
 
 #: builtin/apply.c:1659
@@ -2306,13 +2276,12 @@
 
 #: builtin/apply.c:2872
 #, c-format
 msgid "Hunk #%d succeeded at %d (offset %d line)."
 msgid_plural "Hunk #%d succeeded at %d (offset %d lines)."
 msgstr[0] "Khối dữ liệu #%d thành công tại %d (offset %d dòng)."
-msgstr[1] "Khối dữ liệu #%d thành công tại %d (offset %d dòng)."
 
 #: builtin/apply.c:2884
 #, c-format
 msgid "Context reduced to (%ld/%ld) to apply fragment at %d"
 msgstr "Nội dung bị giảm xuống còn (%ld/%ld) để áp dụng mảnh dữ liệu tại %d"
 
@@ -2416,15 +2385,15 @@
 msgid "%s: patch does not apply"
 msgstr "%s: miếng vá không được áp dụng"
 
 #: builtin/apply.c:3653
 #, c-format
 msgid "Checking patch %s..."
-msgstr "Đang kiểm tra miếng vá %s..."
+msgstr "Đang kiểm tra miếng vá %s…"
 
-#: builtin/apply.c:3746 builtin/checkout.c:213 builtin/reset.c:135
+#: builtin/apply.c:3746 builtin/checkout.c:231 builtin/reset.c:135
 #, c-format
 msgid "make_cache_entry failed for path '%s'"
 msgstr "make_cache_entry gặp lỗi đối với đường dẫn “%s”"
 
 #: builtin/apply.c:3889
 #, c-format
@@ -2471,14 +2440,13 @@
 msgstr "lỗi nội bộ"
 
 #: builtin/apply.c:4110
 #, c-format
 msgid "Applying patch %%s with %d reject..."
 msgid_plural "Applying patch %%s with %d rejects..."
-msgstr[0] "Đang áp dụng miếng vá %%s với %d lần từ chối..."
-msgstr[1] "Đang áp dụng miếng vá %%s với %d lần từ chối..."
+msgstr[0] "Đang áp dụng miếng vá %%s với %d lần từ chối…"
 
 #: builtin/apply.c:4120
 #, c-format
 msgid "truncating .rej filename to %.*s.rej"
 msgstr "đang cắt ngắn tên tập tin .rej thành %.*s.rej"
 
@@ -2497,13 +2465,13 @@
 msgstr "không thừa nhận đầu vào"
 
 #: builtin/apply.c:4245
 msgid "unable to read index file"
 msgstr "không thể đọc tập tin lưu bảng mục lục"
 
-#: builtin/apply.c:4362 builtin/apply.c:4365 builtin/clone.c:91
+#: builtin/apply.c:4362 builtin/apply.c:4365 builtin/clone.c:92
 #: builtin/fetch.c:93
 msgid "path"
 msgstr "đường-dẫn"
 
 #: builtin/apply.c:4363
 msgid "don't apply changes matching the given path"
@@ -2637,20 +2605,18 @@
 
 #: builtin/apply.c:4486
 #, c-format
 msgid "squelched %d whitespace error"
 msgid_plural "squelched %d whitespace errors"
 msgstr[0] "đã chấm dứt %d lỗi khoảng trắng"
-msgstr[1] "đã chấm dứt %d lỗi khoảng trắng"
 
 #: builtin/apply.c:4492 builtin/apply.c:4502
 #, c-format
 msgid "%d line adds whitespace errors."
 msgid_plural "%d lines add whitespace errors."
 msgstr[0] "%d dòng thêm khoảng trắng lỗi."
-msgstr[1] "%d dòng thêm khoảng trắng lỗi."
 
 #: builtin/archive.c:17
 #, c-format
 msgid "could not create archive file '%s'"
 msgstr "không thể tạo tập tin kho (lưu trữ, nén) “%s”"
 
@@ -2816,13 +2782,13 @@
 #: builtin/branch.c:25
 msgid "git branch [options] [-l] [-f] <branchname> [<start-point>]"
 msgstr "git branch [các-tùy-chọn] [-l] [-f] <tên-nhánh> [<điểm-đầu>]"
 
 #: builtin/branch.c:26
 msgid "git branch [options] [-r] (-d | -D) <branchname>..."
-msgstr "git branch [các-tùy-chọn] [-r] (-d | -D) <tên-nhánh> ..."
+msgstr "git branch [các-tùy-chọn] [-r] (-d | -D) <tên-nhánh> …"
 
 #: builtin/branch.c:27
 msgid "git branch [options] (-m | -M) [<oldbranch>] <newbranch>"
 msgstr "git branch [các-tùy-chọn] (-m | -M) [<nhánh-cũ>] <nhánh-mới>"
 
 #: builtin/branch.c:152
@@ -2889,13 +2855,13 @@
 msgid "Error deleting remote branch '%s'"
 msgstr "Gặp lỗi khi đang xóa nhánh trên máy chủ “%s”"
 
 #: builtin/branch.c:261
 #, c-format
 msgid "Error deleting branch '%s'"
-msgstr "Gặp lỗi khi xoá bỏ nhánh “%s”"
+msgstr "Gặp lỗi khi xóa bỏ nhánh “%s”"
 
 #: builtin/branch.c:268
 #, c-format
 msgid "Deleted remote branch %s (was %s).\n"
 msgstr "Nhánh trên máy chủ \"%s\" đã bị xóa (từng là %s).\n"
 
@@ -3044,14 +3010,14 @@
 
 #: builtin/branch.c:824
 msgid "act on remote-tracking branches"
 msgstr "thao tác trên nhánh “remote-tracking”"
 
 #: builtin/branch.c:827 builtin/branch.c:833 builtin/branch.c:854
-#: builtin/branch.c:860 builtin/commit.c:1622 builtin/commit.c:1623
-#: builtin/commit.c:1624 builtin/commit.c:1625 builtin/tag.c:616
+#: builtin/branch.c:860 builtin/commit.c:1586 builtin/commit.c:1587
+#: builtin/commit.c:1588 builtin/commit.c:1589 builtin/tag.c:616
 #: builtin/tag.c:622
 msgid "commit"
 msgstr "lần_chuyển_giao"
 
 #: builtin/branch.c:828 builtin/branch.c:834
 msgid "print only branches that contain the commit"
@@ -3068,13 +3034,13 @@
 #: builtin/branch.c:843
 msgid "delete fully merged branch"
 msgstr "xóa một toàn bộ nhánh đã hòa trộn"
 
 #: builtin/branch.c:844
 msgid "delete branch (even if not merged)"
-msgstr "xoá nhánh (cho dù là chưa được hòa trộn)"
+msgstr "xóa nhánh (cho dù là chưa được hòa trộn)"
 
 #: builtin/branch.c:845
 msgid "move/rename a branch and its reflog"
 msgstr "di chuyển hay đổi tên một nhánh và reflog của nó"
 
 #: builtin/branch.c:846
@@ -3091,14 +3057,14 @@
 
 #: builtin/branch.c:850
 msgid "edit the description for the branch"
 msgstr "sửa mô tả cho nhánh"
 
 #: builtin/branch.c:851
-msgid "force creation (when already exists)"
-msgstr "ép buộc tạo (khi đã có nhánh cùng tên)"
+msgid "force creation, move/rename, deletion"
+msgstr "buộc tạo, di chuyển/đổi tên, xóa"
 
 #: builtin/branch.c:854
 msgid "print only not merged branches"
 msgstr "chỉ hiển thị các nhánh chưa được hòa trộn"
 
 #: builtin/branch.c:860
@@ -3110,117 +3076,117 @@
 msgstr "liệt kê các nhánh trong các cột"
 
 #: builtin/branch.c:877
 msgid "Failed to resolve HEAD as a valid ref."
 msgstr "Gặp lỗi khi phân giải HEAD như là một tham chiếu hợp lệ."
 
-#: builtin/branch.c:881 builtin/clone.c:634
+#: builtin/branch.c:881 builtin/clone.c:637
 msgid "HEAD not found below refs/heads!"
 msgstr "không tìm thấy HEAD ở dưới refs/heads!"
 
 #: builtin/branch.c:903
 msgid "--column and --verbose are incompatible"
 msgstr "tùy chọn --column và --verbose xung khắc nhau"
 
-#: builtin/branch.c:909 builtin/branch.c:948
+#: builtin/branch.c:914 builtin/branch.c:953
 msgid "branch name required"
 msgstr "cần chỉ ra tên nhánh"
 
-#: builtin/branch.c:924
+#: builtin/branch.c:929
 msgid "Cannot give description to detached HEAD"
 msgstr "Không thể đưa ra mô tả HEAD đã tách rời"
 
-#: builtin/branch.c:929
+#: builtin/branch.c:934
 msgid "cannot edit description of more than one branch"
 msgstr "không thể sửa mô tả cho nhiều hơn một nhánh"
 
-#: builtin/branch.c:936
+#: builtin/branch.c:941
 #, c-format
 msgid "No commit on branch '%s' yet."
 msgstr "Vẫn chưa chuyển giao trên nhánh “%s”."
 
-#: builtin/branch.c:939
+#: builtin/branch.c:944
 #, c-format
 msgid "No branch named '%s'."
 msgstr "Không có nhánh nào có tên “%s”."
 
-#: builtin/branch.c:954
+#: builtin/branch.c:959
 msgid "too many branches for a rename operation"
 msgstr "quá nhiều nhánh dành cho thao tác đổi tên"
 
-#: builtin/branch.c:959
+#: builtin/branch.c:964
 msgid "too many branches to set new upstream"
 msgstr "quá nhiều nhánh được đặt cho thượng nguồn mới"
 
-#: builtin/branch.c:963
+#: builtin/branch.c:968
 #, c-format
 msgid ""
 "could not set upstream of HEAD to %s when it does not point to any branch."
 msgstr ""
 "không thể đặt thượng nguồn của HEAD thành %s khi mà nó chẳng chỉ đến nhánh "
 "nào cả."
 
-#: builtin/branch.c:966 builtin/branch.c:988 builtin/branch.c:1009
+#: builtin/branch.c:971 builtin/branch.c:993 builtin/branch.c:1014
 #, c-format
 msgid "no such branch '%s'"
 msgstr "không có nhánh nào như thế “%s”"
 
-#: builtin/branch.c:970
+#: builtin/branch.c:975
 #, c-format
 msgid "branch '%s' does not exist"
 msgstr "chưa có nhánh “%s”"
 
-#: builtin/branch.c:982
+#: builtin/branch.c:987
 msgid "too many branches to unset upstream"
 msgstr "quá nhiều nhánh để bỏ đặt thượng nguồn"
 
-#: builtin/branch.c:986
+#: builtin/branch.c:991
 msgid "could not unset upstream of HEAD when it does not point to any branch."
 msgstr "không thể bỏ đặt thượng nguồn của HEAD không chỉ đến một nhánh nào cả."
 
-#: builtin/branch.c:992
+#: builtin/branch.c:997
 #, c-format
 msgid "Branch '%s' has no upstream information"
 msgstr "Nhánh “%s” không có thông tin thượng nguồn"
 
-#: builtin/branch.c:1006
+#: builtin/branch.c:1011
 msgid "it does not make sense to create 'HEAD' manually"
 msgstr "không hợp lý khi tạo “HEAD” thủ công"
 
-#: builtin/branch.c:1012
+#: builtin/branch.c:1017
 msgid "-a and -r options to 'git branch' do not make sense with a branch name"
 msgstr ""
 "hai tùy chọn -a và -r áp dụng cho lệnh “git branch” không hợp lý đối với tên "
 "nhánh"
 
-#: builtin/branch.c:1015
+#: builtin/branch.c:1020
 #, c-format
 msgid ""
 "The --set-upstream flag is deprecated and will be removed. Consider using --"
 "track or --set-upstream-to\n"
 msgstr ""
 "Cờ --set-upstream đã lạc hậu và sẽ bị xóa bỏ. Nên dùng --track hoặc --set-"
 "upstream-to\n"
 
-#: builtin/branch.c:1032
+#: builtin/branch.c:1037
 #, c-format
 msgid ""
 "\n"
 "If you wanted to make '%s' track '%s', do this:\n"
 "\n"
 msgstr ""
 "\n"
 "Nếu bạn muốn “%s” theo dõi “%s”, thực hiện lệnh sau:\n"
 "\n"
 
-#: builtin/branch.c:1033
+#: builtin/branch.c:1038
 #, c-format
 msgid "    git branch -d %s\n"
 msgstr "    git branch -d %s\n"
 
-#: builtin/branch.c:1034
+#: builtin/branch.c:1039
 #, c-format
 msgid "    git branch --set-upstream-to %s\n"
 msgstr "    git branch --set-upstream-to %s\n"
 
 #: builtin/bundle.c:47
 #, c-format
@@ -3232,61 +3198,61 @@
 msgstr "Cần một kho chứa để có thể tạo một bundle."
 
 #: builtin/bundle.c:60
 msgid "Need a repository to unbundle."
 msgstr "Cần một kho chứa để có thể giải nén một bundle."
 
-#: builtin/cat-file.c:332
+#: builtin/cat-file.c:328
 msgid "git cat-file (-t|-s|-e|-p|<type>|--textconv) <object>"
 msgstr "git cat-file (-t|-s|-e|-p|<kiểu>|--textconv) <đối_tượng>"
 
-#: builtin/cat-file.c:333
+#: builtin/cat-file.c:329
 msgid "git cat-file (--batch|--batch-check) < <list_of_objects>"
 msgstr "git cat-file (--batch|--batch-check) < <danh-sách-đối-tượng>"
 
-#: builtin/cat-file.c:370
+#: builtin/cat-file.c:366
 msgid "<type> can be one of: blob, tree, commit, tag"
 msgstr "<kiểu> là một trong số: blob, tree, commit hoặc tag"
 
-#: builtin/cat-file.c:371
+#: builtin/cat-file.c:367
 msgid "show object type"
 msgstr "hiển thị kiểu đối tượng"
 
-#: builtin/cat-file.c:372
+#: builtin/cat-file.c:368
 msgid "show object size"
 msgstr "hiển thị kích thước đối tượng"
 
-#: builtin/cat-file.c:374
+#: builtin/cat-file.c:370
 msgid "exit with zero when there's no error"
 msgstr "thoát với 0 khi không có lỗi"
 
-#: builtin/cat-file.c:375
+#: builtin/cat-file.c:371
 msgid "pretty-print object's content"
 msgstr "in nội dung đối tượng dạng dễ đọc"
 
-#: builtin/cat-file.c:377
+#: builtin/cat-file.c:373
 msgid "for blob objects, run textconv on object's content"
 msgstr "với đối tượng blob, chạy lệnh textconv trên nội dung của đối tượng"
 
-#: builtin/cat-file.c:379
+#: builtin/cat-file.c:375
 msgid "show info and content of objects fed from the standard input"
 msgstr ""
 "hiển thị thông tin và nội dung của các đối tượng lấy từ đầu vào tiêu chuẩn"
 
-#: builtin/cat-file.c:382
+#: builtin/cat-file.c:378
 msgid "show info about objects fed from the standard input"
 msgstr "hiển thị các thông tin về đối tượng fed  từ đầu vào tiêu chuẩn"
 
 #: builtin/check-attr.c:11
 msgid "git check-attr [-a | --all | attr...] [--] pathname..."
-msgstr "git check-attr [-a | --all | attr...] [--] tên-đường-dẫn..."
+msgstr "git check-attr [-a | --all | attr…] [--] tên-đường-dẫn…"
 
 #: builtin/check-attr.c:12
 msgid "git check-attr --stdin [-z] [-a | --all | attr...] < <list-of-paths>"
 msgstr ""
-"git check-attr --stdin [-z] [-a | --all | attr...] < <danh-sách-đường-dẫn>"
+"git check-attr --stdin [-z] [-a | --all | attr…] < <danh-sách-đường-dẫn>"
 
 #: builtin/check-attr.c:19
 msgid "report all attributes set on file"
 msgstr "báo cáo tất cả các thuộc tính đặt trên tập tin"
 
 #: builtin/check-attr.c:20
@@ -3298,13 +3264,13 @@
 msgstr "đọc tên tập tin từ đầu vào tiêu chuẩn"
 
 #: builtin/check-attr.c:23 builtin/check-ignore.c:24
 msgid "terminate input and output records by a NUL character"
 msgstr "chấm dứt các bản ghi vào và ra bằng ký tự NULL"
 
-#: builtin/check-ignore.c:18 builtin/checkout.c:1089 builtin/gc.c:274
+#: builtin/check-ignore.c:18 builtin/checkout.c:1107 builtin/gc.c:274
 msgid "suppress progress reporting"
 msgstr "chặn các báo cáo tiến trình hoạt động"
 
 #: builtin/check-ignore.c:26
 msgid "show non-matching input paths"
 msgstr "hiển thị những đường dẫn đầu vào không khớp với mẫu"
@@ -3336,13 +3302,13 @@
 #: builtin/check-ignore.c:168
 msgid "--non-matching is only valid with --verbose"
 msgstr "tùy-chọn --non-matching chỉ hợp lệ khi dùng với --verbose"
 
 #: builtin/check-mailmap.c:8
 msgid "git check-mailmap [options] <contact>..."
-msgstr "git check-mailmap [các-tùy-chọn] <danh-bạ>..."
+msgstr "git check-mailmap [các-tùy-chọn] <danh-bạ>…"
 
 #: builtin/check-mailmap.c:13
 msgid "also read contacts from stdin"
 msgstr "đồng thời đọc các danh bạ từ đầu vào tiêu chuẩn"
 
 #: builtin/check-mailmap.c:24
@@ -3353,13 +3319,13 @@
 #: builtin/check-mailmap.c:47
 msgid "no contacts specified"
 msgstr "chưa chỉ ra danh bạ"
 
 #: builtin/checkout-index.c:126
 msgid "git checkout-index [options] [--] [<file>...]"
-msgstr "git checkout-index [các-tùy-chọn] [--] [<tập-tin>...]"
+msgstr "git checkout-index [các-tùy-chọn] [--] [<tập-tin>…]"
 
 #: builtin/checkout-index.c:188
 msgid "check out all files in the index"
 msgstr "lấy ra toàn bộ các tập tin trong bảng mục lục"
 
 #: builtin/checkout-index.c:189
@@ -3402,114 +3368,114 @@
 #: builtin/checkout.c:25
 msgid "git checkout [options] <branch>"
 msgstr "git checkout [các-tùy-chọn] <nhánh>"
 
 #: builtin/checkout.c:26
 msgid "git checkout [options] [<branch>] -- <file>..."
-msgstr "git checkout [các-tùy-chọn] [<nhánh>] -- <tập-tin>..."
+msgstr "git checkout [các-tùy-chọn] [<nhánh>] -- <tập-tin>…"
 
-#: builtin/checkout.c:114 builtin/checkout.c:147
+#: builtin/checkout.c:132 builtin/checkout.c:165
 #, c-format
 msgid "path '%s' does not have our version"
 msgstr "đường dẫn “%s” không có các phiên bản của chúng ta"
 
-#: builtin/checkout.c:116 builtin/checkout.c:149
+#: builtin/checkout.c:134 builtin/checkout.c:167
 #, c-format
 msgid "path '%s' does not have their version"
 msgstr "đường dẫn “%s” không có các phiên bản của chúng"
 
-#: builtin/checkout.c:132
+#: builtin/checkout.c:150
 #, c-format
 msgid "path '%s' does not have all necessary versions"
 msgstr "đường dẫn “%s” không có tất cả các phiên bản cần thiết"
 
-#: builtin/checkout.c:176
+#: builtin/checkout.c:194
 #, c-format
 msgid "path '%s' does not have necessary versions"
 msgstr "đường dẫn “%s” không có các phiên bản cần thiết"
 
-#: builtin/checkout.c:193
+#: builtin/checkout.c:211
 #, c-format
 msgid "path '%s': cannot merge"
 msgstr "đường dẫn “%s”: không thể hòa trộn"
 
-#: builtin/checkout.c:210
+#: builtin/checkout.c:228
 #, c-format
 msgid "Unable to add merge result for '%s'"
 msgstr "Không thể thêm kết quả hòa trộn cho “%s”"
 
-#: builtin/checkout.c:231 builtin/checkout.c:234 builtin/checkout.c:237
-#: builtin/checkout.c:240
+#: builtin/checkout.c:249 builtin/checkout.c:252 builtin/checkout.c:255
+#: builtin/checkout.c:258
 #, c-format
 msgid "'%s' cannot be used with updating paths"
 msgstr "không được dùng “%s” với các đường dẫn cập nhật"
 
-#: builtin/checkout.c:243 builtin/checkout.c:246
+#: builtin/checkout.c:261 builtin/checkout.c:264
 #, c-format
 msgid "'%s' cannot be used with %s"
 msgstr "không được dùng “%s” với %s"
 
-#: builtin/checkout.c:249
+#: builtin/checkout.c:267
 #, c-format
 msgid "Cannot update paths and switch to branch '%s' at the same time."
 msgstr ""
 "Không thể cập nhật các đường dẫn và chuyển đến nhánh “%s” cùng một lúc."
 
-#: builtin/checkout.c:260 builtin/checkout.c:449
+#: builtin/checkout.c:278 builtin/checkout.c:467
 msgid "corrupt index file"
 msgstr "tập tin ghi bảng mục lục bị hỏng"
 
-#: builtin/checkout.c:320 builtin/checkout.c:327
+#: builtin/checkout.c:338 builtin/checkout.c:345
 #, c-format
 msgid "path '%s' is unmerged"
 msgstr "đường dẫn “%s” không được hòa trộn"
 
-#: builtin/checkout.c:471
+#: builtin/checkout.c:489
 msgid "you need to resolve your current index first"
 msgstr "bạn cần phải giải quyết bảng mục lục hiện tại của bạn trước đã"
 
-#: builtin/checkout.c:597
+#: builtin/checkout.c:615
 #, c-format
 msgid "Can not do reflog for '%s'\n"
 msgstr "Không thể thực hiện reflog cho “%s”\n"
 
-#: builtin/checkout.c:635
+#: builtin/checkout.c:653
 msgid "HEAD is now at"
 msgstr "HEAD hiện giờ tại"
 
-#: builtin/checkout.c:642
+#: builtin/checkout.c:660
 #, c-format
 msgid "Reset branch '%s'\n"
 msgstr "Đặt lại nhánh “%s”\n"
 
-#: builtin/checkout.c:645
+#: builtin/checkout.c:663
 #, c-format
 msgid "Already on '%s'\n"
 msgstr "Đã sẵn sàng trên “%s”\n"
 
-#: builtin/checkout.c:649
+#: builtin/checkout.c:667
 #, c-format
 msgid "Switched to and reset branch '%s'\n"
 msgstr "Đã chuyển tới và đặt lại nhánh “%s”\n"
 
-#: builtin/checkout.c:651 builtin/checkout.c:1032
+#: builtin/checkout.c:669 builtin/checkout.c:1050
 #, c-format
 msgid "Switched to a new branch '%s'\n"
 msgstr "Đã chuyển đến nhánh mới “%s”\n"
 
-#: builtin/checkout.c:653
+#: builtin/checkout.c:671
 #, c-format
 msgid "Switched to branch '%s'\n"
 msgstr "Đã chuyển đến nhánh “%s”\n"
 
-#: builtin/checkout.c:705
+#: builtin/checkout.c:723
 #, c-format
 msgid " ... and %d more.\n"
-msgstr " ... và nhiều hơn %d.\n"
+msgstr " … và nhiều hơn %d.\n"
 
-#: builtin/checkout.c:711
+#: builtin/checkout.c:729
 #, c-format
 msgid ""
 "Warning: you are leaving %d commit behind, not connected to\n"
 "any of your branches:\n"
 "\n"
 "%s\n"
@@ -3521,20 +3487,14 @@
 msgstr[0] ""
 "Cảnh báo: bạn đã rời bỏ %d lần chuyển giao lại đằng sau, không được kết nối "
 "đến\n"
 "bất kỳ nhánh nào của bạn:\n"
 "\n"
 "%s\n"
-msgstr[1] ""
-"Cảnh báo: bạn đã rời bỏ %d lần chuyển giao lại đằng sau, không được kết nối "
-"đến\n"
-"bất kỳ nhánh nào của bạn:\n"
-"\n"
-"%s\n"
 
-#: builtin/checkout.c:729
+#: builtin/checkout.c:747
 #, c-format
 msgid ""
 "If you want to keep them by creating a new branch, this may be a good time\n"
 "to do so with:\n"
 "\n"
 " git branch new_branch_name %s\n"
@@ -3544,174 +3504,174 @@
 "điểm thích hợp\n"
 "để làm thế bằng lệnh:\n"
 "\n"
 " git branch tên_nhánh_mới %s\n"
 "\n"
 
-#: builtin/checkout.c:759
+#: builtin/checkout.c:777
 msgid "internal error in revision walk"
 msgstr "lỗi nội bộ trong khi di chuyển qua các điểm xét duyệt"
 
-#: builtin/checkout.c:763
+#: builtin/checkout.c:781
 msgid "Previous HEAD position was"
 msgstr "Vị trí trước kia của HEAD là"
 
-#: builtin/checkout.c:790 builtin/checkout.c:1027
+#: builtin/checkout.c:808 builtin/checkout.c:1045
 msgid "You are on a branch yet to be born"
 msgstr "Bạn tại nhánh mà nó chưa hề được sinh ra"
 
-#: builtin/checkout.c:934
+#: builtin/checkout.c:952
 #, c-format
 msgid "only one reference expected, %d given."
 msgstr "chỉ cần một tham chiếu, nhưng lại đưa ra %d."
 
-#: builtin/checkout.c:973
+#: builtin/checkout.c:991
 #, c-format
 msgid "invalid reference: %s"
 msgstr "tham chiếu không hợp lệ: %s"
 
-#: builtin/checkout.c:1002
+#: builtin/checkout.c:1020
 #, c-format
 msgid "reference is not a tree: %s"
 msgstr "tham chiếu không phải là một cây:%s"
 
-#: builtin/checkout.c:1041
+#: builtin/checkout.c:1059
 msgid "paths cannot be used with switching branches"
 msgstr "các đường dẫn không thể dùng cùng với các nhánh chuyển"
 
-#: builtin/checkout.c:1044 builtin/checkout.c:1048
+#: builtin/checkout.c:1062 builtin/checkout.c:1066
 #, c-format
 msgid "'%s' cannot be used with switching branches"
 msgstr "“%s” không thể được sử dụng với các nhánh chuyển"
 
-#: builtin/checkout.c:1052 builtin/checkout.c:1055 builtin/checkout.c:1060
-#: builtin/checkout.c:1063
+#: builtin/checkout.c:1070 builtin/checkout.c:1073 builtin/checkout.c:1078
+#: builtin/checkout.c:1081
 #, c-format
 msgid "'%s' cannot be used with '%s'"
 msgstr "“%s” không thể được dùng với “%s”"
 
-#: builtin/checkout.c:1068
+#: builtin/checkout.c:1086
 #, c-format
 msgid "Cannot switch branch to a non-commit '%s'"
-msgstr "Không thể chuyển nhánh đến một non-commit “%s”"
+msgstr "Không thể chuyển nhánh đến một thứ không phải là lần chuyển giao “%s”"
 
-#: builtin/checkout.c:1090 builtin/checkout.c:1092 builtin/clone.c:89
+#: builtin/checkout.c:1108 builtin/checkout.c:1110 builtin/clone.c:90
 #: builtin/remote.c:159 builtin/remote.c:161
 msgid "branch"
 msgstr "nhánh"
 
-#: builtin/checkout.c:1091
+#: builtin/checkout.c:1109
 msgid "create and checkout a new branch"
 msgstr "tạo và checkout một nhánh mới"
 
-#: builtin/checkout.c:1093
+#: builtin/checkout.c:1111
 msgid "create/reset and checkout a branch"
 msgstr "tạo/đặt_lại và checkout một nhánh"
 
-#: builtin/checkout.c:1094
+#: builtin/checkout.c:1112
 msgid "create reflog for new branch"
 msgstr "tạo reflog cho nhánh mới"
 
-#: builtin/checkout.c:1095
+#: builtin/checkout.c:1113
 msgid "detach the HEAD at named commit"
 msgstr "rời bỏ HEAD tại lần chuyển giao danh nghĩa"
 
-#: builtin/checkout.c:1096
+#: builtin/checkout.c:1114
 msgid "set upstream info for new branch"
 msgstr "đặt thông tin thượng nguồn cho nhánh mới"
 
-#: builtin/checkout.c:1098
+#: builtin/checkout.c:1116
 msgid "new-branch"
 msgstr "nhánh-mới"
 
-#: builtin/checkout.c:1098
+#: builtin/checkout.c:1116
 msgid "new unparented branch"
 msgstr "nhánh không cha mới"
 
-#: builtin/checkout.c:1099
+#: builtin/checkout.c:1117
 msgid "checkout our version for unmerged files"
 msgstr ""
 "lấy ra (checkout) phiên bản của chúng ta cho các tập tin chưa được hòa trộn"
 
-#: builtin/checkout.c:1101
+#: builtin/checkout.c:1119
 msgid "checkout their version for unmerged files"
 msgstr ""
 "lấy ra (checkout) phiên bản của chúng họ cho các tập tin chưa được hòa trộn"
 
-#: builtin/checkout.c:1103
+#: builtin/checkout.c:1121
 msgid "force checkout (throw away local modifications)"
 msgstr "ép buộc lấy ra (bỏ đi những thay đổi nội bộ)"
 
-#: builtin/checkout.c:1104
+#: builtin/checkout.c:1122
 msgid "perform a 3-way merge with the new branch"
 msgstr "thực hiện hòa trộn kiểu 3-way với nhánh mới"
 
-#: builtin/checkout.c:1105 builtin/merge.c:226
+#: builtin/checkout.c:1123 builtin/merge.c:227
 msgid "update ignored files (default)"
 msgstr "cập nhật các tập tin bị bỏ qua (mặc định)"
 
-#: builtin/checkout.c:1106 builtin/log.c:1239 parse-options.h:245
+#: builtin/checkout.c:1124 builtin/log.c:1239 parse-options.h:245
 msgid "style"
 msgstr "kiểu"
 
-#: builtin/checkout.c:1107
+#: builtin/checkout.c:1125
 msgid "conflict style (merge or diff3)"
 msgstr "xung đột kiểu (hòa trộn hoặc diff3)"
 
-#: builtin/checkout.c:1110
+#: builtin/checkout.c:1128
 msgid "do not limit pathspecs to sparse entries only"
 msgstr "không giới hạn đặc tả đường dẫn thành chỉ các mục thưa thớt"
 
-#: builtin/checkout.c:1112
+#: builtin/checkout.c:1130
 msgid "second guess 'git checkout no-such-branch'"
 msgstr "gợi ý thứ hai “git checkout không-nhánh-nào-như-vậy”"
 
-#: builtin/checkout.c:1135
+#: builtin/checkout.c:1153
 msgid "-b, -B and --orphan are mutually exclusive"
 msgstr "Các tùy chọn -b, -B và --orphan loại từ lẫn nhau"
 
-#: builtin/checkout.c:1152
+#: builtin/checkout.c:1170
 msgid "--track needs a branch name"
 msgstr "--track cần tên một nhánh"
 
-#: builtin/checkout.c:1157
+#: builtin/checkout.c:1175
 msgid "Missing branch name; try -b"
 msgstr "Thiếu tên nhánh; hãy thử -b"
 
-#: builtin/checkout.c:1194
+#: builtin/checkout.c:1212
 msgid "invalid path specification"
 msgstr "đường dẫn đã cho không hợp lệ"
 
-#: builtin/checkout.c:1201
+#: builtin/checkout.c:1219
 #, c-format
 msgid ""
 "Cannot update paths and switch to branch '%s' at the same time.\n"
 "Did you intend to checkout '%s' which can not be resolved as commit?"
 msgstr ""
 "Không thể cập nhật và chuyển thành nhánh “%s” cùng lúc\n"
 "Bạn đã có ý định checkout “%s” cái mà không thể được phân giải như là lần "
 "chuyển giao?"
 
-#: builtin/checkout.c:1206
+#: builtin/checkout.c:1224
 #, c-format
 msgid "git checkout: --detach does not take a path argument '%s'"
 msgstr "git checkout: --detach không nhận một đối số đường dẫn “%s”"
 
-#: builtin/checkout.c:1210
+#: builtin/checkout.c:1228
 msgid ""
 "git checkout: --ours/--theirs, --force and --merge are incompatible when\n"
 "checking out of the index."
 msgstr ""
 "git checkout: --ours/--theirs, --force và --merge là xung khắc với nhau khi\n"
 "checkout bảng mục lục (index)."
 
 #: builtin/clean.c:26
 msgid ""
 "git clean [-d] [-f] [-i] [-n] [-q] [-e <pattern>] [-x | -X] [--] <paths>..."
 msgstr ""
-"git clean [-d] [-f] [-i] [-n] [-q] [-e <mẫu>] [-x | -X] [--] <đường-dẫn>..."
+"git clean [-d] [-f] [-i] [-n] [-q] [-e <mẫu>] [-x | -X] [--] <đường-dẫn>…"
 
 #: builtin/clean.c:30
 #, c-format
 msgid "Removing %s\n"
 msgstr "Đang gỡ bỏ %s\n"
 
@@ -3742,13 +3702,13 @@
 "foo        - select item based on unique prefix\n"
 "           - (empty) select nothing"
 msgstr ""
 "Trợ giúp về nhắc:\n"
 "1          - chọn một mục được đánh số\n"
 "foo        - chọn mục trên cơ sở tiền tố duy nhất\n"
-"           - (trống rỗng) không chọn gì cả"
+"           - (để trống) không chọn gì cả"
 
 #: builtin/clean.c:299
 msgid ""
 "Prompt help:\n"
 "1          - select a single item\n"
 "3-5        - select a range of items\n"
@@ -3760,13 +3720,13 @@
 msgstr ""
 "Trợ giúp về nhắc:\n"
 "1          - chọn một mục đơn\n"
 "3-5        - chọn một vùng\n"
 "2-3,6-9    - chọn nhiều vùng\n"
 "foo        - chọn mục dựa trên tiền tố duy nhất\n"
-"-...       - không chọn các mục đã chỉ ra\n"
+"-…       - không chọn các mục đã chỉ ra\n"
 "*          - chọn tất\n"
 "           - (để trống) kết thúc việc chọn"
 
 #: builtin/clean.c:517
 #, c-format
 msgid "Huh (%s)?"
@@ -3821,14 +3781,13 @@
 msgid "What now"
 msgstr "Giờ thì sao"
 
 #: builtin/clean.c:826
 msgid "Would remove the following item:"
 msgid_plural "Would remove the following items:"
-msgstr[0] "Có muốn gỡ bỏ mục sau đây không:"
-msgstr[1] "Có muốn gỡ bỏ các mục sau đây không:"
+msgstr[0] "Có muốn gỡ bỏ (các) mục sau đây không:"
 
 #: builtin/clean.c:843
 msgid "No more files to clean, exiting."
 msgstr "Không còn tập-tin nào để dọn dẹp, đang thoát ra."
 
 #: builtin/clean.c:874
@@ -3885,263 +3844,279 @@
 "mà cũng không -f; từ chối lệnh dọn dẹp (clean)"
 
 #: builtin/clone.c:37
 msgid "git clone [options] [--] <repo> [<dir>]"
 msgstr "git clone [các-tùy-chọn] [--] <kho> [<t.mục>]"
 
-#: builtin/clone.c:65 builtin/fetch.c:112 builtin/merge.c:223
+#: builtin/clone.c:66 builtin/fetch.c:112 builtin/merge.c:224
 #: builtin/push.c:514
 msgid "force progress reporting"
 msgstr "ép buộc báo cáo tiến triển công việc"
 
-#: builtin/clone.c:67
+#: builtin/clone.c:68
 msgid "don't create a checkout"
 msgstr "không tạo một checkout"
 
-#: builtin/clone.c:68 builtin/clone.c:70 builtin/init-db.c:488
+#: builtin/clone.c:69 builtin/clone.c:71 builtin/init-db.c:496
 msgid "create a bare repository"
 msgstr "tạo kho thuần"
 
-#: builtin/clone.c:72
+#: builtin/clone.c:73
 msgid "create a mirror repository (implies bare)"
 msgstr "tạo kho bản sao (ý là kho thuần)"
 
-#: builtin/clone.c:74
+#: builtin/clone.c:75
 msgid "to clone from a local repository"
 msgstr "để nhân bản từ kho nội bộ"
 
-#: builtin/clone.c:76
+#: builtin/clone.c:77
 msgid "don't use local hardlinks, always copy"
 msgstr "không sử dụng liên kết cứng nội bộ, luôn sao chép"
 
-#: builtin/clone.c:78
+#: builtin/clone.c:79
 msgid "setup as shared repository"
 msgstr "cài đặt đây là kho chia sẻ"
 
-#: builtin/clone.c:80 builtin/clone.c:82
+#: builtin/clone.c:81 builtin/clone.c:83
 msgid "initialize submodules in the clone"
 msgstr "khởi tạo mô-đun-con trong bản sao"
 
-#: builtin/clone.c:83 builtin/init-db.c:485
+#: builtin/clone.c:84 builtin/init-db.c:493
 msgid "template-directory"
 msgstr "thư-mục-mẫu"
 
-#: builtin/clone.c:84 builtin/init-db.c:486
+#: builtin/clone.c:85 builtin/init-db.c:494
 msgid "directory from which templates will be used"
 msgstr "thư mục mà tại đó các mẫu sẽ được dùng"
 
-#: builtin/clone.c:86
+#: builtin/clone.c:87
 msgid "reference repository"
 msgstr "kho tham chiếu"
 
-#: builtin/clone.c:87 builtin/column.c:26 builtin/merge-file.c:44
+#: builtin/clone.c:88 builtin/column.c:26 builtin/merge-file.c:44
 msgid "name"
 msgstr "tên"
 
-#: builtin/clone.c:88
+#: builtin/clone.c:89
 msgid "use <name> instead of 'origin' to track upstream"
 msgstr "dùng <tên> thay cho “origin” để theo dõi thượng nguồn"
 
-#: builtin/clone.c:90
+#: builtin/clone.c:91
 msgid "checkout <branch> instead of the remote's HEAD"
 msgstr "lấy ra <nhánh> thay cho HEAD của máy chủ"
 
-#: builtin/clone.c:92
+#: builtin/clone.c:93
 msgid "path to git-upload-pack on the remote"
 msgstr "đường dẫn đến git-upload-pack trên máy chủ"
 
-#: builtin/clone.c:93 builtin/fetch.c:113 builtin/grep.c:659
+#: builtin/clone.c:94 builtin/fetch.c:113 builtin/grep.c:659
 msgid "depth"
 msgstr "độ-sâu"
 
-#: builtin/clone.c:94
+#: builtin/clone.c:95
 msgid "create a shallow clone of that depth"
 msgstr "tạo bản sao không đầy đủ cho mức sâu đã cho"
 
-#: builtin/clone.c:96
+#: builtin/clone.c:97
 msgid "clone only one branch, HEAD or --branch"
 msgstr "chỉ nhân bản một nhánh, HEAD hoặc --branch"
 
-#: builtin/clone.c:97 builtin/init-db.c:494
+#: builtin/clone.c:99
+msgid "use --reference only while cloning"
+msgstr "chỉ dùng --reference khi nhân bản"
+
+#: builtin/clone.c:100 builtin/init-db.c:502
 msgid "gitdir"
 msgstr "gitdir"
 
-#: builtin/clone.c:98 builtin/init-db.c:495
+#: builtin/clone.c:101 builtin/init-db.c:503
 msgid "separate git dir from working tree"
 msgstr "không dùng chung thư mục dành riêng cho git và thư mục làm việc"
 
-#: builtin/clone.c:99
+#: builtin/clone.c:102
 msgid "key=value"
 msgstr "khóa=giá_trị"
 
-#: builtin/clone.c:100
+#: builtin/clone.c:103
 msgid "set config inside the new repository"
 msgstr "đặt cấu hình bên trong một kho chứa mới"
 
-#: builtin/clone.c:253
+#: builtin/clone.c:256
 #, c-format
 msgid "reference repository '%s' is not a local repository."
 msgstr "kho tham chiếu “%s” không phải là một kho nội bộ."
 
-#: builtin/clone.c:257
+#: builtin/clone.c:260
 #, c-format
 msgid "reference repository '%s' is shallow"
 msgstr "kho tham chiếu “%s” là nông"
 
-#: builtin/clone.c:260
+#: builtin/clone.c:263
 #, c-format
 msgid "reference repository '%s' is grafted"
 msgstr "kho tham chiếu “%s” bị cấy ghép"
 
-#: builtin/clone.c:322
+#: builtin/clone.c:325
 #, c-format
 msgid "failed to create directory '%s'"
 msgstr "tạo thư mục \"%s\" gặp lỗi"
 
-#: builtin/clone.c:324 builtin/diff.c:84
+#: builtin/clone.c:327 builtin/diff.c:84
 #, c-format
 msgid "failed to stat '%s'"
 msgstr "gặp lỗi khi lấy thống kê về “%s”"
 
-#: builtin/clone.c:326
+#: builtin/clone.c:329
 #, c-format
 msgid "%s exists and is not a directory"
-msgstr "%s tồn tại nhưng không phải là một thư mục"
+msgstr "%s có tồn tại nhưng lại không phải là một thư mục"
 
-#: builtin/clone.c:340
+#: builtin/clone.c:343
 #, c-format
 msgid "failed to stat %s\n"
 msgstr "gặp lỗi khi lấy thông tin thống kê về %s\n"
 
-#: builtin/clone.c:362
+#: builtin/clone.c:365
 #, c-format
 msgid "failed to create link '%s'"
 msgstr "gặp lỗi khi tạo được liên kết mềm %s"
 
-#: builtin/clone.c:366
+#: builtin/clone.c:369
 #, c-format
 msgid "failed to copy file to '%s'"
 msgstr "gặp lỗi khi sao chép tập tin và “%s”"
 
-#: builtin/clone.c:389 builtin/clone.c:563
+#: builtin/clone.c:392 builtin/clone.c:566
 #, c-format
 msgid "done.\n"
 msgstr "hoàn tất.\n"
 
-#: builtin/clone.c:401
+#: builtin/clone.c:404
 msgid ""
 "Clone succeeded, but checkout failed.\n"
 "You can inspect what was checked out with 'git status'\n"
 "and retry the checkout with 'git checkout -f HEAD'\n"
 msgstr ""
 "Việc nhân bản thành công, nhưng checkout gặp lỗi.\n"
 "Bạn kiểm tra kỹ xem cái gì được lấy ra bằng lệnh “git status”\n"
-"và thử checkout với lệnh “git checkout -f HEAD”\n"
+"và thử lấy ra với lệnh “git checkout -f HEAD”\n"
 
-#: builtin/clone.c:478
+#: builtin/clone.c:481
 #, c-format
 msgid "Could not find remote branch %s to clone."
 msgstr "Không tìm thấy nhánh máy chủ %s để nhân bản (clone)."
 
-#: builtin/clone.c:558
+#: builtin/clone.c:561
 #, c-format
 msgid "Checking connectivity... "
-msgstr "Đang kiểm tra kết nối... "
+msgstr "Đang kiểm tra kết nối… "
 
-#: builtin/clone.c:561
+#: builtin/clone.c:564
 msgid "remote did not send all necessary objects"
 msgstr "máy chủ đã không gửi tất cả các đối tượng cần thiết"
 
-#: builtin/clone.c:625
+#: builtin/clone.c:628
 msgid "remote HEAD refers to nonexistent ref, unable to checkout.\n"
 msgstr "refers HEAD máy chủ  chỉ đến ref không tồn tại, không thể lấy ra.\n"
 
-#: builtin/clone.c:656
+#: builtin/clone.c:659
 msgid "unable to checkout working tree"
 msgstr "không thể lấy ra (checkout) cây làm việc"
 
-#: builtin/clone.c:765
+#: builtin/clone.c:746
+msgid "cannot repack to clean up"
+msgstr "không thể đóng gói để dọn dẹp"
+
+#: builtin/clone.c:748
+msgid "cannot unlink temporary alternates file"
+msgstr "không thể bỏ liên kết tập tin thay thế tạm thời"
+
+#: builtin/clone.c:778
 msgid "Too many arguments."
 msgstr "Có quá nhiều đối số."
 
-#: builtin/clone.c:769
+#: builtin/clone.c:782
 msgid "You must specify a repository to clone."
 msgstr "Bạn phải chỉ định một kho để mà nhân bản (clone)."
 
-#: builtin/clone.c:780
+#: builtin/clone.c:793
 #, c-format
 msgid "--bare and --origin %s options are incompatible."
 msgstr "tùy chọn --bare và --origin %s xung khắc nhau."
 
-#: builtin/clone.c:783
+#: builtin/clone.c:796
 msgid "--bare and --separate-git-dir are incompatible."
 msgstr "tùy chọn --bare và --separate-git-dir xung khắc nhau."
 
-#: builtin/clone.c:796
+#: builtin/clone.c:809
 #, c-format
 msgid "repository '%s' does not exist"
 msgstr "kho chứa “%s” chưa tồn tại"
 
-#: builtin/clone.c:802 builtin/fetch.c:1155
+#: builtin/clone.c:815 builtin/fetch.c:1155
 #, c-format
 msgid "depth %s is not a positive number"
 msgstr "độ sâu %s không phải là một số nguyên dương"
 
-#: builtin/clone.c:812
+#: builtin/clone.c:825
 #, c-format
 msgid "destination path '%s' already exists and is not an empty directory."
 msgstr "đường dẫn đích “%s” đã có từ trước và không phải là một thư mục rỗng."
 
-#: builtin/clone.c:822
+#: builtin/clone.c:835
 #, c-format
 msgid "working tree '%s' already exists."
 msgstr "cây làm việc “%s” đã sẵn tồn tại rồi."
 
-#: builtin/clone.c:835 builtin/clone.c:847
+#: builtin/clone.c:848 builtin/clone.c:860
 #, c-format
 msgid "could not create leading directories of '%s'"
 msgstr "không thể tạo các thư mục dẫn đầu của “%s”"
 
-#: builtin/clone.c:838
+#: builtin/clone.c:851
 #, c-format
 msgid "could not create work tree dir '%s'."
 msgstr "không thể tạo cây thư mục làm việc dir “%s”."
 
-#: builtin/clone.c:857
+#: builtin/clone.c:870
 #, c-format
 msgid "Cloning into bare repository '%s'...\n"
-msgstr "Đang nhân bản thành kho chứa bare “%s”...\n"
+msgstr "Đang nhân bản thành kho chứa bare “%s”…\n"
 
-#: builtin/clone.c:859
+#: builtin/clone.c:872
 #, c-format
 msgid "Cloning into '%s'...\n"
-msgstr "Đang nhân bản thành “%s”...\n"
+msgstr "Đang nhân bản thành “%s”…\n"
+
+#: builtin/clone.c:897
+msgid "--dissociate given, but there is no --reference"
+msgstr "đã đưa ra --dissociate, nhưng ở đây lại không có --reference"
 
-#: builtin/clone.c:895
+#: builtin/clone.c:912
 msgid "--depth is ignored in local clones; use file:// instead."
 msgstr "--depth bị lờ đi khi nhân bản nội bộ; hãy sử dụng file:// để thay thế."
 
-#: builtin/clone.c:898
+#: builtin/clone.c:915
 msgid "source repository is shallow, ignoring --local"
 msgstr "kho nguồn là nông, nên bỏ qua --local"
 
-#: builtin/clone.c:903
+#: builtin/clone.c:920
 msgid "--local is ignored"
 msgstr "--local bị lờ đi"
 
-#: builtin/clone.c:907
+#: builtin/clone.c:924
 #, c-format
 msgid "Don't know how to clone %s"
 msgstr "Không biết làm cách nào để nhân bản (clone) %s"
 
-#: builtin/clone.c:958 builtin/clone.c:966
+#: builtin/clone.c:975 builtin/clone.c:983
 #, c-format
 msgid "Remote branch %s not found in upstream %s"
 msgstr "Nhánh máy chủ %s không tìm thấy trong thượng nguồn %s"
 
-#: builtin/clone.c:969
+#: builtin/clone.c:986
 msgid "You appear to have cloned an empty repository."
 msgstr "Bạn hình như là đã nhân bản một kho trống rỗng."
 
 #: builtin/column.c:9
 msgid "git column [options]"
 msgstr "git column [các-tùy-chọn]"
@@ -4173,17 +4148,17 @@
 #: builtin/column.c:51
 msgid "--command must be the first argument"
 msgstr "--command phải là đối số đầu tiên"
 
 #: builtin/commit.c:37
 msgid "git commit [options] [--] <pathspec>..."
-msgstr "git commit [các-tùy-chọn] [--] <pathspec>..."
+msgstr "git commit [các-tùy-chọn] [--] <pathspec>…"
 
 #: builtin/commit.c:42
 msgid "git status [options] [--] <pathspec>..."
-msgstr "git status [các-tùy-chọn] [--] <pathspec>..."
+msgstr "git status [các-tùy-chọn] [--] <pathspec>…"
 
 #: builtin/commit.c:47
 msgid ""
 "Your name and email address were configured automatically based\n"
 "on your username and hostname. Please check that they are accurate.\n"
 "You can suppress this message by setting them explicitly. Run the\n"
@@ -4332,81 +4307,76 @@
 msgstr "không đọc được bảng mục lục"
 
 #: builtin/commit.c:473
 msgid "unable to write temporary index file"
 msgstr "không thể ghi tập tin lưu bảng mục lục tạm thời"
 
-#: builtin/commit.c:592
+#: builtin/commit.c:584
 #, c-format
 msgid "commit '%s' lacks author header"
 msgstr "lần chuyển giao “%s” thiếu phần tác giả ở đầu"
 
-#: builtin/commit.c:594
+#: builtin/commit.c:586
 #, c-format
 msgid "commit '%s' has malformed author line"
 msgstr "lần chuyển giao “%s” có phần tác giả ở đầu dị dạng"
 
-#: builtin/commit.c:613
+#: builtin/commit.c:605
 msgid "malformed --author parameter"
 msgstr "đối số cho --author bị dị hình"
 
-#: builtin/commit.c:621
+#: builtin/commit.c:613
 #, c-format
 msgid "invalid date format: %s"
 msgstr "ngày tháng không hợp lệ: %s"
 
-#: builtin/commit.c:642
-#, c-format
-msgid "Malformed ident string: '%s'"
-msgstr "Chuỗi thụt lề đầu dòng dị hình: “%s”"
-
-#: builtin/commit.c:675
+#: builtin/commit.c:657
 msgid ""
 "unable to select a comment character that is not used\n"
 "in the current commit message"
 msgstr ""
 "không thể chọn một ký tự ghi chú cái mà không được dùng\n"
 "trong phần ghi chú hiện tại"
 
-#: builtin/commit.c:712 builtin/commit.c:745 builtin/commit.c:1120
+#: builtin/commit.c:694 builtin/commit.c:727 builtin/commit.c:1084
 #, c-format
 msgid "could not lookup commit %s"
 msgstr "không thể tìm kiếm commit (lần chuyển giao) %s"
 
-#: builtin/commit.c:724 builtin/shortlog.c:273
+#: builtin/commit.c:706 builtin/shortlog.c:273
 #, c-format
 msgid "(reading log message from standard input)\n"
 msgstr "(đang đọc thông điệp nhật ký từ đầu vào tiêu chuẩn)\n"
 
-#: builtin/commit.c:726
+#: builtin/commit.c:708
 msgid "could not read log from standard input"
 msgstr "không thể đọc nhật ký từ đầu vào tiêu chuẩn"
 
-#: builtin/commit.c:730
+#: builtin/commit.c:712
 #, c-format
 msgid "could not read log file '%s'"
 msgstr "không đọc được tệp nhật ký “%s”"
 
-#: builtin/commit.c:752
+#: builtin/commit.c:734
 msgid "could not read MERGE_MSG"
 msgstr "không thể đọc MERGE_MSG"
 
-#: builtin/commit.c:756
+#: builtin/commit.c:738
 msgid "could not read SQUASH_MSG"
 msgstr "không thể đọc SQUASH_MSG"
 
-#: builtin/commit.c:760
+#: builtin/commit.c:742
 #, c-format
 msgid "could not read '%s'"
 msgstr "Không thể đọc “%s”."
 
-#: builtin/commit.c:831
+#: builtin/commit.c:789
 msgid "could not write commit template"
 msgstr "không thể ghi mẫu chuyển giao"
 
-#: builtin/commit.c:849
+#: builtin/commit.c:807
 #, c-format
 msgid ""
 "\n"
 "It looks like you may be committing a merge.\n"
 "If this is not correct, please remove the file\n"
 "\t%s\n"
@@ -4415,13 +4385,13 @@
 "\n"
 "Nó trông giống với việc bạn đang chuyển giao một lần hòa trộn.\n"
 "Nếu không phải vậy, xin hãy gỡ bỏ tập tin\n"
 "\t%s\n"
 "và thử lại.\n"
 
-#: builtin/commit.c:854
+#: builtin/commit.c:812
 #, c-format
 msgid ""
 "\n"
 "It looks like you may be committing a cherry-pick.\n"
 "If this is not correct, please remove the file\n"
 "\t%s\n"
@@ -4430,397 +4400,397 @@
 "\n"
 "Nó trông giống với việc bạn đang chuyển giao một lần cherry-pick.\n"
 "Nếu không phải vậy, xin hãy gỡ bỏ tập tin\n"
 "\t%s\n"
 "và thử lại.\n"
 
-#: builtin/commit.c:867
+#: builtin/commit.c:825
 #, c-format
 msgid ""
 "Please enter the commit message for your changes. Lines starting\n"
 "with '%c' will be ignored, and an empty message aborts the commit.\n"
 msgstr ""
 "Hãy nhập vào các thông tin để giải thích các thay đổi của bạn. Những dòng "
 "được\n"
 "bắt đầu bằng “%c” sẽ được bỏ qua, nếu phần chú thích rỗng sẽ hủy bỏ lần "
 "chuyển giao.\n"
 
-#: builtin/commit.c:874
+#: builtin/commit.c:832
 #, c-format
 msgid ""
 "Please enter the commit message for your changes. Lines starting\n"
 "with '%c' will be kept; you may remove them yourself if you want to.\n"
 "An empty message aborts the commit.\n"
 msgstr ""
 "Hãy nhập vào các thông tin để giải thích các thay đổi của bạn. Những dòng "
 "được\n"
 "bắt đầu bằng “%c” sẽ được bỏ qua; bạn có thể xóa chúng đi nếu muốn thế.\n"
 "Phần chú thích này nếu trống rỗng sẽ hủy bỏ lần chuyển giao.\n"
 
-#: builtin/commit.c:888
+#: builtin/commit.c:852
 #, c-format
 msgid "%sAuthor:    %.*s <%.*s>"
 msgstr "%sTác giả:           %.*s <%.*s>"
 
-#: builtin/commit.c:896
+#: builtin/commit.c:860
 #, c-format
 msgid "%sDate:      %s"
 msgstr "%sNgày tháng:        %s"
 
-#: builtin/commit.c:903
+#: builtin/commit.c:867
 #, c-format
 msgid "%sCommitter: %.*s <%.*s>"
 msgstr "%sNgười chuyển giao: %.*s <%.*s>"
 
-#: builtin/commit.c:921
+#: builtin/commit.c:885
 msgid "Cannot read index"
 msgstr "Không đọc được bảng mục lục"
 
-#: builtin/commit.c:978
+#: builtin/commit.c:942
 msgid "Error building trees"
 msgstr "Gặp lỗi khi xây dựng cây"
 
-#: builtin/commit.c:993 builtin/tag.c:495
+#: builtin/commit.c:957 builtin/tag.c:495
 #, c-format
 msgid "Please supply the message using either -m or -F option.\n"
 msgstr "Xin hãy cung cấp lời chú giải hoặc là dùng tùy chọn -m hoặc là -F.\n"
 
-#: builtin/commit.c:1095
+#: builtin/commit.c:1059
 #, c-format
 msgid "No existing author found with '%s'"
 msgstr "Không tìm thấy tác giả có sẵn với “%s”"
 
-#: builtin/commit.c:1110 builtin/commit.c:1350
+#: builtin/commit.c:1074 builtin/commit.c:1314
 #, c-format
 msgid "Invalid untracked files mode '%s'"
 msgstr "Chế độ cho các tập tin chưa được theo dõi không hợp lệ “%s”"
 
-#: builtin/commit.c:1147
+#: builtin/commit.c:1111
 msgid "--long and -z are incompatible"
 msgstr "hai tùy chọn -long và -z không tương thích với nhau"
 
-#: builtin/commit.c:1177
+#: builtin/commit.c:1141
 msgid "Using both --reset-author and --author does not make sense"
 msgstr "Sử dụng cả hai tùy chọn --reset-author và --author không hợp lý"
 
-#: builtin/commit.c:1186
+#: builtin/commit.c:1150
 msgid "You have nothing to amend."
 msgstr "Không có gì để mà “tu bổ” cả."
 
-#: builtin/commit.c:1189
+#: builtin/commit.c:1153
 msgid "You are in the middle of a merge -- cannot amend."
 msgstr ""
 "Bạn đang ở giữa của quá trình hòa trộn -- không thể thực hiện việc “tu bổ”."
 
-#: builtin/commit.c:1191
+#: builtin/commit.c:1155
 msgid "You are in the middle of a cherry-pick -- cannot amend."
 msgstr ""
 "Bạn đang ở giữa của quá trình cherry-pick -- không thể thực hiện việc “tu "
 "bổ”."
 
-#: builtin/commit.c:1194
+#: builtin/commit.c:1158
 msgid "Options --squash and --fixup cannot be used together"
 msgstr "Các tùy chọn --squash và --fixup không thể sử dụng cùng với nhau"
 
-#: builtin/commit.c:1204
+#: builtin/commit.c:1168
 msgid "Only one of -c/-C/-F/--fixup can be used."
 msgstr ""
 "Chỉ được dùng một trong số tùy chọn trong số các tùy chọn -c/-C/-F/--fixup"
 
-#: builtin/commit.c:1206
+#: builtin/commit.c:1170
 msgid "Option -m cannot be combined with -c/-C/-F/--fixup."
 msgstr "Tùy chọn -m không thể được tổ hợp cùng với -c/-C/-F/--fixup."
 
-#: builtin/commit.c:1214
+#: builtin/commit.c:1178
 msgid "--reset-author can be used only with -C, -c or --amend."
 msgstr ""
 "--reset-author chỉ có thể được sử dụng với tùy chọn -C, -c hay --amend."
 
-#: builtin/commit.c:1231
+#: builtin/commit.c:1195
 msgid "Only one of --include/--only/--all/--interactive/--patch can be used."
 msgstr ""
 "Chỉ một trong các tùy chọn --include/--only/--all/--interactive/--patch được "
 "sử dụng."
 
-#: builtin/commit.c:1233
+#: builtin/commit.c:1197
 msgid "No paths with --include/--only does not make sense."
 msgstr "Không đường dẫn với các tùy chọn --include/--only không hợp lý."
 
-#: builtin/commit.c:1235
+#: builtin/commit.c:1199
 msgid "Clever... amending the last one with dirty index."
-msgstr "Giỏi...  “tu bổ” cái cuối với bảng mục lục bẩn."
+msgstr "Giỏi…  “tu bổ” cái cuối với bảng mục lục bẩn."
 
-#: builtin/commit.c:1237
+#: builtin/commit.c:1201
 msgid "Explicit paths specified without -i or -o; assuming --only paths..."
 msgstr ""
 "Những đường dẫn rõ ràng được chỉ ra không có tùy chọn -i cũng không -o; coi "
 "là --only những đường dẫn"
 
-#: builtin/commit.c:1249 builtin/tag.c:728
+#: builtin/commit.c:1213 builtin/tag.c:728
 #, c-format
 msgid "Invalid cleanup mode %s"
 msgstr "Chế độ dọn dẹp không hợp lệ %s"
 
-#: builtin/commit.c:1254
+#: builtin/commit.c:1218
 msgid "Paths with -a does not make sense."
 msgstr "Các đường dẫn với tùy chọn -a không hợp lý."
 
-#: builtin/commit.c:1364 builtin/commit.c:1644
+#: builtin/commit.c:1328 builtin/commit.c:1608
 msgid "show status concisely"
 msgstr "hiển thị trạng thái ở dạng súc tích"
 
-#: builtin/commit.c:1366 builtin/commit.c:1646
+#: builtin/commit.c:1330 builtin/commit.c:1610
 msgid "show branch information"
 msgstr "hiển thị thông tin nhánh"
 
-#: builtin/commit.c:1368 builtin/commit.c:1648 builtin/push.c:500
+#: builtin/commit.c:1332 builtin/commit.c:1612 builtin/push.c:500
 msgid "machine-readable output"
 msgstr "kết xuất dạng máy-có-thể-đọc"
 
-#: builtin/commit.c:1371 builtin/commit.c:1650
+#: builtin/commit.c:1335 builtin/commit.c:1614
 msgid "show status in long format (default)"
 msgstr "hiển thị trạng thái ở định dạng dài (mặc định)"
 
-#: builtin/commit.c:1374 builtin/commit.c:1653
+#: builtin/commit.c:1338 builtin/commit.c:1617
 msgid "terminate entries with NUL"
 msgstr "chấm dứt các mục bằng NUL"
 
-#: builtin/commit.c:1376 builtin/commit.c:1656 builtin/fast-export.c:980
+#: builtin/commit.c:1340 builtin/commit.c:1620 builtin/fast-export.c:980
 #: builtin/fast-export.c:983 builtin/tag.c:603
 msgid "mode"
 msgstr "chế độ"
 
-#: builtin/commit.c:1377 builtin/commit.c:1656
+#: builtin/commit.c:1341 builtin/commit.c:1620
 msgid "show untracked files, optional modes: all, normal, no. (Default: all)"
 msgstr ""
 "hiển thị các tập tin chưa được theo dõi  dấu vết, các chế độ tùy chọn:  all, "
 "normal, no. (Mặc định: all)"
 
-#: builtin/commit.c:1380
+#: builtin/commit.c:1344
 msgid "show ignored files"
 msgstr "hiển thị các tập tin ẩn"
 
-#: builtin/commit.c:1381 parse-options.h:153
+#: builtin/commit.c:1345 parse-options.h:153
 msgid "when"
 msgstr "khi"
 
-#: builtin/commit.c:1382
+#: builtin/commit.c:1346
 msgid ""
 "ignore changes to submodules, optional when: all, dirty, untracked. "
 "(Default: all)"
 msgstr ""
 "bỏ qua các thay đổi trong mô-đun-con, tùy chọn khi: all, dirty, untracked. "
 "(Mặc định: all)"
 
-#: builtin/commit.c:1384
+#: builtin/commit.c:1348
 msgid "list untracked files in columns"
 msgstr "hiển thị danh sách các tập-tin chưa được theo dõi trong các cột"
 
-#: builtin/commit.c:1471
+#: builtin/commit.c:1435
 msgid "couldn't look up newly created commit"
 msgstr "không thể tìm thấy lần chuyển giao mới hơn đã được tạo"
 
-#: builtin/commit.c:1473
+#: builtin/commit.c:1437
 msgid "could not parse newly created commit"
 msgstr ""
 "không thể phân tích cú pháp của đối tượng chuyển giao mới hơn đã được tạo"
 
-#: builtin/commit.c:1518
+#: builtin/commit.c:1482
 msgid "detached HEAD"
 msgstr "đã rời khỏi HEAD"
 
-#: builtin/commit.c:1521
+#: builtin/commit.c:1485
 msgid " (root-commit)"
 msgstr " (root-commit)"
 
-#: builtin/commit.c:1614
+#: builtin/commit.c:1578
 msgid "suppress summary after successful commit"
 msgstr "không hiển thị tổng kết sau khi chuyển giao thành công"
 
-#: builtin/commit.c:1615
+#: builtin/commit.c:1579
 msgid "show diff in commit message template"
 msgstr "hiển thị sự khác biệt trong mẫu tin nhắn chuyển giao"
 
-#: builtin/commit.c:1617
+#: builtin/commit.c:1581
 msgid "Commit message options"
 msgstr "Các tùy chọn ghi chú commit"
 
-#: builtin/commit.c:1618 builtin/tag.c:601
+#: builtin/commit.c:1582 builtin/tag.c:601
 msgid "read message from file"
 msgstr "đọc chú thích từ tập tin"
 
-#: builtin/commit.c:1619
+#: builtin/commit.c:1583
 msgid "author"
 msgstr "tác giả"
 
-#: builtin/commit.c:1619
+#: builtin/commit.c:1583
 msgid "override author for commit"
 msgstr "ghi đè tác giả cho commit"
 
-#: builtin/commit.c:1620 builtin/gc.c:275
+#: builtin/commit.c:1584 builtin/gc.c:275
 msgid "date"
 msgstr "ngày tháng"
 
-#: builtin/commit.c:1620
+#: builtin/commit.c:1584
 msgid "override date for commit"
 msgstr "ghi đè ngày tháng cho lần chuyển giao"
 
-#: builtin/commit.c:1621 builtin/merge.c:217 builtin/notes.c:408
-#: builtin/notes.c:565 builtin/tag.c:599
+#: builtin/commit.c:1585 builtin/merge.c:218 builtin/notes.c:391
+#: builtin/notes.c:554 builtin/tag.c:599
 msgid "message"
 msgstr "chú thích"
 
-#: builtin/commit.c:1621
+#: builtin/commit.c:1585
 msgid "commit message"
 msgstr "chú thích của lần chuyển giao"
 
-#: builtin/commit.c:1622
+#: builtin/commit.c:1586
 msgid "reuse and edit message from specified commit"
 msgstr "dùng lại các ghi chú từ lần chuyển giao đã cho nhưng có cho sửa chữa"
 
-#: builtin/commit.c:1623
+#: builtin/commit.c:1587
 msgid "reuse message from specified commit"
 msgstr "dùng lại các ghi chú từ lần chuyển giao đã cho"
 
-#: builtin/commit.c:1624
+#: builtin/commit.c:1588
 msgid "use autosquash formatted message to fixup specified commit"
 msgstr ""
 "dùng ghi chú có định dạng autosquash để sửa chữa lần chuyển giao đã chỉ ra"
 
-#: builtin/commit.c:1625
+#: builtin/commit.c:1589
 msgid "use autosquash formatted message to squash specified commit"
 msgstr ""
 "dùng lời nhắn có định dạng tự động nén để nén lại các lần chuyển giao đã chỉ "
 "ra"
 
-#: builtin/commit.c:1626
+#: builtin/commit.c:1590
 msgid "the commit is authored by me now (used with -C/-c/--amend)"
 msgstr ""
 "lần chuyển giao nhận tôi là tác giả (được dùng với tùy chọn -C/-c/--amend)"
 
-#: builtin/commit.c:1627 builtin/log.c:1191 builtin/revert.c:86
+#: builtin/commit.c:1591 builtin/log.c:1191 builtin/revert.c:86
 msgid "add Signed-off-by:"
 msgstr "(nên dùng) thêm dòng Signed-off-by:"
 
-#: builtin/commit.c:1628
+#: builtin/commit.c:1592
 msgid "use specified template file"
 msgstr "sử dụng tập tin mẫu đã cho"
 
-#: builtin/commit.c:1629
+#: builtin/commit.c:1593
 msgid "force edit of commit"
 msgstr "ép buộc sửa lần commit"
 
-#: builtin/commit.c:1630
+#: builtin/commit.c:1594
 msgid "default"
 msgstr "mặc định"
 
-#: builtin/commit.c:1630 builtin/tag.c:604
+#: builtin/commit.c:1594 builtin/tag.c:604
 msgid "how to strip spaces and #comments from message"
 msgstr "làm thế nào để cắt bỏ khoảng trắng và #ghichú từ mẩu tin nhắn"
 
-#: builtin/commit.c:1631
+#: builtin/commit.c:1595
 msgid "include status in commit message template"
 msgstr "bao gồm các trạng thái trong mẫu ghi chú chuyển giao"
 
-#: builtin/commit.c:1632 builtin/merge.c:224 builtin/revert.c:92
+#: builtin/commit.c:1596 builtin/merge.c:225 builtin/revert.c:92
 #: builtin/tag.c:605
 msgid "key-id"
 msgstr "mã-số-khóa"
 
-#: builtin/commit.c:1633 builtin/merge.c:225 builtin/revert.c:93
+#: builtin/commit.c:1597 builtin/merge.c:226 builtin/revert.c:93
 msgid "GPG sign commit"
 msgstr "ký lần chuyển giao dùng GPG"
 
-#: builtin/commit.c:1636
+#: builtin/commit.c:1600
 msgid "Commit contents options"
 msgstr "Các tùy nội dung ghi chú commit"
 
-#: builtin/commit.c:1637
+#: builtin/commit.c:1601
 msgid "commit all changed files"
 msgstr "chuyển giao tất cả các tập tin có thay đổi"
 
-#: builtin/commit.c:1638
+#: builtin/commit.c:1602
 msgid "add specified files to index for commit"
 msgstr "thêm các tập tin đã chỉ ra vào bảng mục lục để chuyển giao"
 
-#: builtin/commit.c:1639
+#: builtin/commit.c:1603
 msgid "interactively add files"
 msgstr "thêm các tập-tin bằng tương tác"
 
-#: builtin/commit.c:1640
+#: builtin/commit.c:1604
 msgid "interactively add changes"
 msgstr "thêm các thay đổi bằng tương tác"
 
-#: builtin/commit.c:1641
+#: builtin/commit.c:1605
 msgid "commit only specified files"
 msgstr "chỉ chuyển giao các tập tin đã chỉ ra"
 
-#: builtin/commit.c:1642
+#: builtin/commit.c:1606
 msgid "bypass pre-commit hook"
 msgstr "vòng qua móc (hook) pre-commit"
 
-#: builtin/commit.c:1643
+#: builtin/commit.c:1607
 msgid "show what would be committed"
 msgstr "hiển thị xem cái gì có thể được chuyển giao"
 
-#: builtin/commit.c:1654
+#: builtin/commit.c:1618
 msgid "amend previous commit"
 msgstr "“tu bổ” (amend) lần commit trước"
 
-#: builtin/commit.c:1655
+#: builtin/commit.c:1619
 msgid "bypass post-rewrite hook"
 msgstr "vòng qua móc (hook) post-rewrite"
 
-#: builtin/commit.c:1660
+#: builtin/commit.c:1624
 msgid "ok to record an empty change"
 msgstr "ok để ghi lại một thay đổi trống rỗng"
 
-#: builtin/commit.c:1662
+#: builtin/commit.c:1626
 msgid "ok to record a change with an empty message"
 msgstr "ok để ghi các thay đổi với lời nhắn trống rỗng"
 
-#: builtin/commit.c:1691
+#: builtin/commit.c:1655
 msgid "could not parse HEAD commit"
 msgstr "không thể phân tích commit (lần chuyển giao) HEAD"
 
-#: builtin/commit.c:1730 builtin/merge.c:518
+#: builtin/commit.c:1694 builtin/merge.c:519
 #, c-format
 msgid "could not open '%s' for reading"
 msgstr "không thể mở “%s” để đọc"
 
-#: builtin/commit.c:1737
+#: builtin/commit.c:1701
 #, c-format
 msgid "Corrupt MERGE_HEAD file (%s)"
 msgstr "Tập tin MERGE_HEAD sai hỏng (%s)"
 
-#: builtin/commit.c:1744
+#: builtin/commit.c:1708
 msgid "could not read MERGE_MODE"
 msgstr "không thể đọc MERGE_MODE"
 
-#: builtin/commit.c:1763
+#: builtin/commit.c:1727
 #, c-format
 msgid "could not read commit message: %s"
-msgstr "không thể đọc phần chú thích (message) commit (lần chuyển giao): %s"
+msgstr "không thể đọc phần chú thích (message) của llần chuyển giao: %s"
 
-#: builtin/commit.c:1774
+#: builtin/commit.c:1738
 #, c-format
 msgid "Aborting commit; you did not edit the message.\n"
 msgstr ""
 "Đang bỏ qua việc chuyển giao; bạn đã không biên soạn phần chú thích "
 "(message).\n"
 
-#: builtin/commit.c:1779
+#: builtin/commit.c:1743
 #, c-format
 msgid "Aborting commit due to empty commit message.\n"
 msgstr "Bãi bỏ việc chuyển giao bởi vì phần chú thích của nó trống rỗng.\n"
 
-#: builtin/commit.c:1794 builtin/merge.c:850 builtin/merge.c:875
+#: builtin/commit.c:1758 builtin/merge.c:851 builtin/merge.c:876
 msgid "failed to write commit object"
 msgstr "gặp lỗi khi ghi đối tượng chuyển giao"
 
-#: builtin/commit.c:1827
+#: builtin/commit.c:1791
 msgid ""
 "Repository has been updated, but unable to write\n"
 "new_index file. Check that disk is not full and quota is\n"
 "not exceeded, and then \"git reset HEAD\" to recover."
 msgstr ""
 "Kho chứa đã được cập nhật, nhưng không thể ghi vào\n"
@@ -4909,23 +4879,19 @@
 msgstr "liệt kê tất"
 
 #: builtin/config.c:71
 msgid "open an editor"
 msgstr "mở một trình biên soạn"
 
-#: builtin/config.c:72 builtin/config.c:73
-msgid "slot"
-msgstr "khe"
-
 #: builtin/config.c:72
-msgid "find the color configured: [default]"
-msgstr "tìm cấu hình màu sắc: [mặc định]"
+msgid "find the color configured: slot [default]"
+msgstr "tìm cấu hình màu sắc: slot [mặc định]"
 
 #: builtin/config.c:73
-msgid "find the color setting: [stdout-is-tty]"
-msgstr "tìm các cài đặt về màu sắc: [stdout-là-tty]"
+msgid "find the color setting: slot [stdout-is-tty]"
+msgstr "tìm các cài đặt về màu sắc: slot [stdout-là-tty]"
 
 #: builtin/config.c:74
 msgid "Type"
 msgstr "Kiểu"
 
 #: builtin/config.c:75
@@ -4953,17 +4919,17 @@
 msgstr "chấm dứt giá trị với byte NUL"
 
 #: builtin/config.c:81
 msgid "respect include directives on lookup"
 msgstr "tôn trọng kể cà các hướng trong tìm kiếm"
 
-#: builtin/config.c:315
+#: builtin/config.c:316
 msgid "unable to parse default color value"
 msgstr "không thể phân tích giá trị màu mặc định"
 
-#: builtin/config.c:455
+#: builtin/config.c:457
 #, c-format
 msgid ""
 "# This is Git's per-user configuration file.\n"
 "[core]\n"
 "# Please adapt and uncomment the following lines:\n"
 "#\tuser = %s\n"
@@ -4972,13 +4938,13 @@
 "# Đây là tập tin cấu hình cho từng người dùng Git.\n"
 "[core]\n"
 "# Vui lòng sửa lại cho thích hợp và bỏ dấu ghi chú các dòng sau:\n"
 "#\tuser = %s\n"
 "#\temail = %s\n"
 
-#: builtin/config.c:590
+#: builtin/config.c:589
 #, c-format
 msgid "cannot create configuration file %s"
 msgstr "không thể tạo tập tin cấu hình “%s”"
 
 #: builtin/count-objects.c:55
 msgid "git count-objects [-v] [-H | --human-readable]"
@@ -5095,13 +5061,13 @@
 #: builtin/describe.c:404
 msgid "only output exact matches"
 msgstr "chỉ xuất những gì khớp chính xác"
 
 #: builtin/describe.c:406
 msgid "consider <n> most recent tags (default: 10)"
-msgstr "coi như  <n> thẻ gần đây nhất (mặc định: 10)"
+msgstr "coi như <n> thẻ gần đây nhất (mặc định: 10)"
 
 #: builtin/describe.c:408
 msgid "only consider tags matching <pattern>"
 msgstr "chỉ cân nhắc đến những thẻ khớp với <mẫu>"
 
 #: builtin/describe.c:410 builtin/name-rev.c:318
@@ -5208,21 +5174,21 @@
 #: builtin/fast-export.c:999
 msgid "anonymize output"
 msgstr "kết xuất anonymize"
 
 #: builtin/fetch.c:20
 msgid "git fetch [<options>] [<repository> [<refspec>...]]"
-msgstr "git fetch [<các-tùy-chọn>] [<kho-chứa> [<refspec>...]]"
+msgstr "git fetch [<các-tùy-chọn>] [<kho-chứa> [<refspec>…]]"
 
 #: builtin/fetch.c:21
 msgid "git fetch [<options>] <group>"
 msgstr "git fetch [<các-tùy-chọn>] [<nhóm>"
 
 #: builtin/fetch.c:22
 msgid "git fetch --multiple [<options>] [(<repository> | <group>)...]"
-msgstr "git fetch --multiple [<các-tùy-chọn>] [(<kho> | <nhóm>)...]"
+msgstr "git fetch --multiple [<các-tùy-chọn>] [(<kho> | <nhóm>)…]"
 
 #: builtin/fetch.c:23
 msgid "git fetch --all [<options>]"
 msgstr "git fetch --all [<các-tùy-chọn>]"
 
 #: builtin/fetch.c:90
@@ -5401,13 +5367,13 @@
 msgstr "   (%s đã trở thành không đầu (không được quản lý))"
 
 #: builtin/fetch.c:798
 msgid "[deleted]"
 msgstr "[đã xóa]"
 
-#: builtin/fetch.c:799 builtin/remote.c:1063
+#: builtin/fetch.c:799 builtin/remote.c:1060
 msgid "(none)"
 msgstr "(không)"
 
 #: builtin/fetch.c:818
 #, c-format
 msgid "Refusing to fetch into current branch %s of non-bare repository"
@@ -5479,80 +5445,80 @@
 
 #: builtin/fmt-merge-msg.c:13
 msgid "git fmt-merge-msg [-m <message>] [--log[=<n>]|--no-log] [--file <file>]"
 msgstr ""
 "git fmt-merge-msg [-m <chú_thích>] [--log[=<n>]|--no-log] [--file <tập-tin>]"
 
-#: builtin/fmt-merge-msg.c:663 builtin/fmt-merge-msg.c:666 builtin/grep.c:698
-#: builtin/merge.c:197 builtin/repack.c:179 builtin/repack.c:183
-#: builtin/show-branch.c:654 builtin/show-ref.c:178 builtin/tag.c:590
+#: builtin/fmt-merge-msg.c:662 builtin/fmt-merge-msg.c:665 builtin/grep.c:698
+#: builtin/merge.c:198 builtin/repack.c:178 builtin/repack.c:182
+#: builtin/show-branch.c:657 builtin/show-ref.c:178 builtin/tag.c:590
 #: parse-options.h:132 parse-options.h:239
 msgid "n"
 msgstr "n"
 
-#: builtin/fmt-merge-msg.c:664
+#: builtin/fmt-merge-msg.c:663
 msgid "populate log with at most <n> entries from shortlog"
 msgstr "gắn nhật ký với ít nhất <n> mục từ lệnh “shortlog”"
 
-#: builtin/fmt-merge-msg.c:667
+#: builtin/fmt-merge-msg.c:666
 msgid "alias for --log (deprecated)"
 msgstr "bí danh cho --log (không được dùng)"
 
-#: builtin/fmt-merge-msg.c:670
+#: builtin/fmt-merge-msg.c:669
 msgid "text"
 msgstr "văn bản"
 
-#: builtin/fmt-merge-msg.c:671
+#: builtin/fmt-merge-msg.c:670
 msgid "use <text> as start of message"
 msgstr "dùng <văn bản thường> để bắt đầu ghi chú"
 
-#: builtin/fmt-merge-msg.c:672
+#: builtin/fmt-merge-msg.c:671
 msgid "file to read from"
 msgstr "tập tin để đọc dữ liệu từ đó"
 
 #: builtin/for-each-ref.c:676
 msgid "unable to parse format"
 msgstr "không thể phân tích định dạng"
 
-#: builtin/for-each-ref.c:1057
+#: builtin/for-each-ref.c:1064
 msgid "git for-each-ref [options] [<pattern>]"
 msgstr "git for-each-ref [các-tùy-chọn] [<mẫu>]"
 
-#: builtin/for-each-ref.c:1072
+#: builtin/for-each-ref.c:1079
 msgid "quote placeholders suitably for shells"
 msgstr "trích dẫn để phù hợp cho hệ vỏ (shell)"
 
-#: builtin/for-each-ref.c:1074
+#: builtin/for-each-ref.c:1081
 msgid "quote placeholders suitably for perl"
 msgstr "trích dẫn để phù hợp cho perl"
 
-#: builtin/for-each-ref.c:1076
+#: builtin/for-each-ref.c:1083
 msgid "quote placeholders suitably for python"
 msgstr "trích dẫn để phù hợp cho python"
 
-#: builtin/for-each-ref.c:1078
-msgid "quote placeholders suitably for tcl"
-msgstr "trích dẫn để phù hợp cho tcl"
+#: builtin/for-each-ref.c:1085
+msgid "quote placeholders suitably for Tcl"
+msgstr "trích dẫn để phù hợp cho Tcl"
 
-#: builtin/for-each-ref.c:1081
+#: builtin/for-each-ref.c:1088
 msgid "show only <n> matched refs"
 msgstr "hiển thị chỉ <n> tham chiếu khớp"
 
-#: builtin/for-each-ref.c:1082 builtin/replace.c:438
+#: builtin/for-each-ref.c:1089 builtin/replace.c:438
 msgid "format"
 msgstr "định dạng"
 
-#: builtin/for-each-ref.c:1082
+#: builtin/for-each-ref.c:1089
 msgid "format to use for the output"
 msgstr "định dạng sẽ dùng cho đầu ra"
 
-#: builtin/for-each-ref.c:1083
+#: builtin/for-each-ref.c:1090
 msgid "key"
 msgstr "khóa"
 
-#: builtin/for-each-ref.c:1084
+#: builtin/for-each-ref.c:1091
 msgid "field name to sort on"
 msgstr "tên trường cần sắp xếp"
 
 #: builtin/fsck.c:147 builtin/prune.c:136
 msgid "Checking connectivity"
 msgstr "Đang kiểm tra kết nối"
@@ -5560,13 +5526,13 @@
 #: builtin/fsck.c:540
 msgid "Checking object directories"
 msgstr "Đang kiểm tra các thư mục đối tượng"
 
 #: builtin/fsck.c:603
 msgid "git fsck [options] [<object>...]"
-msgstr "git fsck [các-tùy-chọn] [<đối-tượng>...]"
+msgstr "git fsck [các-tùy-chọn] [<đối-tượng>…]"
 
 #: builtin/fsck.c:609
 msgid "show unreachable objects"
 msgstr "hiển thị các đối tượng không thể đọc được"
 
 #: builtin/fsck.c:610
@@ -5670,13 +5636,13 @@
 msgstr ""
 "Có quá nhiều đối tượng tự do không được dùng đến; hãy chạy lệnh “git prune” "
 "để xóa bỏ chúng đi."
 
 #: builtin/grep.c:23
 msgid "git grep [options] [-e] <pattern> [<rev>...] [[--] <path>...]"
-msgstr "git grep [các-tùy-chọn] [-e] <mẫu> [<rev>...] [[--] <đường-dẫn>...]"
+msgstr "git grep [các-tùy-chọn] [-e] <mẫu> [<rev>…] [[--] <đường-dẫn>…]"
 
 #: builtin/grep.c:218
 #, c-format
 msgid "grep: failed to create thread: %s"
 msgstr "grep: gặp lỗi tạo tuyến (thread): %s"
 
@@ -5902,13 +5868,13 @@
 #: builtin/hash-object.c:82
 msgid ""
 "git hash-object [-t <type>] [-w] [--path=<file>|--no-filters] [--stdin] [--] "
 "<file>..."
 msgstr ""
 "git hash-object [-t <kiểu>] [-w] [--path=<tập-tin>|--no-filters] [--stdin] "
-"[--] <tập-tin>..."
+"[--] <tập-tin>…"
 
 #: builtin/hash-object.c:83
 msgid "git hash-object  --stdin-paths < <list-of-paths>"
 msgstr "git hash-object  --stdin-paths < <danh-sách-đường-dẫn>"
 
 #: builtin/hash-object.c:94 builtin/tag.c:610
@@ -6002,67 +5968,67 @@
 "'%s': cmd for supported man viewer.\n"
 "Please consider using 'man.<tool>.path' instead."
 msgstr ""
 "“%s”: cmd (lệnh) hỗ trợ bộ trình chiếu man.\n"
 "Hãy cân nhắc đến việc sử dụng “man.<tool>.path” để thay thế."
 
-#: builtin/help.c:352
+#: builtin/help.c:354
 #, c-format
 msgid "'%s': unknown man viewer."
 msgstr "“%s”: không rõ chương trình xem man."
 
-#: builtin/help.c:369
+#: builtin/help.c:371
 msgid "no man viewer handled the request"
 msgstr "không có trình xem trợ giúp dạng manpage tiếp hợp với yêu cầu"
 
-#: builtin/help.c:377
+#: builtin/help.c:379
 msgid "no info viewer handled the request"
 msgstr "không có trình xem trợ giúp dạng info tiếp hợp với yêu cầu"
 
-#: builtin/help.c:423
+#: builtin/help.c:428
 msgid "Defining attributes per path"
 msgstr "Định nghĩa các thuộc tính cho mỗi đường dẫn"
 
-#: builtin/help.c:424
+#: builtin/help.c:429
 msgid "Everyday Git With 20 Commands Or So"
 msgstr "Mỗi ngày học 20 lệnh Git hay hơn"
 
-#: builtin/help.c:425
+#: builtin/help.c:430
 msgid "A Git glossary"
 msgstr "Thuật ngữ chuyên môn Git"
 
-#: builtin/help.c:426
+#: builtin/help.c:431
 msgid "Specifies intentionally untracked files to ignore"
 msgstr "Chỉ định các tập tin không cần theo dõi"
 
-#: builtin/help.c:427
+#: builtin/help.c:432
 msgid "Defining submodule properties"
 msgstr "Định nghĩa thuộc tính mô-đun-con"
 
-#: builtin/help.c:428
+#: builtin/help.c:433
 msgid "Specifying revisions and ranges for Git"
 msgstr "Chỉ định điểm xét duyệt và vùng cho Git"
 
-#: builtin/help.c:429
+#: builtin/help.c:434
 msgid "A tutorial introduction to Git (for version 1.5.1 or newer)"
 msgstr "Hướng dẫn cách dùng Git ở mức cơ bản (bản 1.5.1 hay mới hơn)"
 
-#: builtin/help.c:430
+#: builtin/help.c:435
 msgid "An overview of recommended workflows with Git"
 msgstr "Tổng quan về luồng công việc khuyến nghị nên dùng với Git."
 
-#: builtin/help.c:442
+#: builtin/help.c:447
 msgid "The common Git guides are:\n"
 msgstr "Các chỉ dẫn chung về cách dùng Git là:\n"
 
-#: builtin/help.c:463 builtin/help.c:480
+#: builtin/help.c:468 builtin/help.c:485
 #, c-format
 msgid "usage: %s%s"
 msgstr "cách dùng: %s%s"
 
-#: builtin/help.c:496
+#: builtin/help.c:501
 #, c-format
 msgid "`git %s' is aliased to `%s'"
 msgstr "“git %s” được đặt bí danh thành “%s”"
 
 #: builtin/index-pack.c:150
 #, c-format
@@ -6085,14 +6051,13 @@
 msgstr "đối tượng %s: cần kiểu %s nhưng lại nhận được %s"
 
 #: builtin/index-pack.c:265
 #, c-format
 msgid "cannot fill %d byte"
 msgid_plural "cannot fill %d bytes"
-msgstr[0] "không thể điền vào %d byte"
-msgstr[1] "không thể điền vào %d byte"
+msgstr[0] "không thể điền thêm vào %d byte"
 
 #: builtin/index-pack.c:275
 msgid "early EOF"
 msgstr "gặp kết thúc tập tin EOF quá sớm"
 
 #: builtin/index-pack.c:276
@@ -6155,13 +6120,12 @@
 
 #: builtin/index-pack.c:569
 #, c-format
 msgid "premature end of pack file, %lu byte missing"
 msgid_plural "premature end of pack file, %lu bytes missing"
 msgstr[0] "tập tin gói bị kết thúc sớm, thiếu %lu byte"
-msgstr[1] "tập tin gói bị kết thúc sớm, thiếu %lu byte"
 
 #: builtin/index-pack.c:595
 msgid "serious inflate inconsistency"
 msgstr "sự mâu thuẫn xả nén nghiêm trọng"
 
 #: builtin/index-pack.c:686 builtin/index-pack.c:692 builtin/index-pack.c:715
@@ -6253,13 +6217,12 @@
 
 #: builtin/index-pack.c:1195
 #, c-format
 msgid "pack has %d unresolved delta"
 msgid_plural "pack has %d unresolved deltas"
 msgstr[0] "gói có %d delta chưa được giải quyết"
-msgstr[1] "gói có %d delta chưa được giải quyết"
 
 #: builtin/index-pack.c:1220
 #, c-format
 msgid "unable to deflate appended object (%d)"
 msgstr "không thể xả nén đối tượng nối thêm (%d)"
 
@@ -6317,20 +6280,18 @@
 
 #: builtin/index-pack.c:1518
 #, c-format
 msgid "non delta: %d object"
 msgid_plural "non delta: %d objects"
 msgstr[0] "không delta: %d đối tượng"
-msgstr[1] "không delta: %d đối tượng"
 
 #: builtin/index-pack.c:1525
 #, c-format
 msgid "chain length = %d: %lu object"
 msgid_plural "chain length = %d: %lu objects"
 msgstr[0] "chiều dài xích = %d: %lu đối tượng"
-msgstr[1] "chiều dài xích = %d: %lu đối tượng"
 
 #: builtin/index-pack.c:1554
 msgid "Cannot come back to cwd"
 msgstr "Không thể quay lại cwd"
 
 #: builtin/index-pack.c:1602 builtin/index-pack.c:1605
@@ -6399,118 +6360,118 @@
 
 #: builtin/init-db.c:110
 #, c-format
 msgid "ignoring template %s"
 msgstr "đang lờ đi mẫu “%s”"
 
-#: builtin/init-db.c:133
+#: builtin/init-db.c:136
 #, c-format
 msgid "insanely long template path %s"
 msgstr "đường dẫn mẫu “%s” dài một cách điên rồ"
 
-#: builtin/init-db.c:141
+#: builtin/init-db.c:144
 #, c-format
 msgid "templates not found %s"
 msgstr "các mẫu không được tìm thấy %s"
 
-#: builtin/init-db.c:154
+#: builtin/init-db.c:157
 #, c-format
 msgid "not copying templates of a wrong format version %d from '%s'"
 msgstr "không sao chép các mẫu của phiên bản sai định dạng %d từ “%s”"
 
-#: builtin/init-db.c:192
+#: builtin/init-db.c:197
 #, c-format
 msgid "insane git directory %s"
 msgstr "thư mục git điên rồ %s"
 
-#: builtin/init-db.c:323 builtin/init-db.c:326
+#: builtin/init-db.c:331 builtin/init-db.c:334
 #, c-format
 msgid "%s already exists"
 msgstr "%s đã có từ trước rồi"
 
-#: builtin/init-db.c:355
+#: builtin/init-db.c:363
 #, c-format
 msgid "unable to handle file type %d"
 msgstr "không thể xử lý (handle) tập tin kiểu %d"
 
-#: builtin/init-db.c:358
+#: builtin/init-db.c:366
 #, c-format
 msgid "unable to move %s to %s"
 msgstr "không di chuyển được %s vào %s"
 
 #. TRANSLATORS: The first '%s' is either "Reinitialized
 #. existing" or "Initialized empty", the second " shared" or
 #. "", and the last '%s%s' is the verbatim directory name.
-#: builtin/init-db.c:418
+#: builtin/init-db.c:426
 #, c-format
 msgid "%s%s Git repository in %s%s\n"
 msgstr "%s%s kho Git trong %s%s\n"
 
-#: builtin/init-db.c:419
+#: builtin/init-db.c:427
 msgid "Reinitialized existing"
 msgstr "Khởi tạo lại đã sẵn có rồi"
 
-#: builtin/init-db.c:419
+#: builtin/init-db.c:427
 msgid "Initialized empty"
 msgstr "Khởi tạo trống rỗng"
 
-#: builtin/init-db.c:420
+#: builtin/init-db.c:428
 msgid " shared"
 msgstr " đã chia sẻ"
 
-#: builtin/init-db.c:467
+#: builtin/init-db.c:475
 msgid ""
 "git init [-q | --quiet] [--bare] [--template=<template-directory>] [--"
 "shared[=<permissions>]] [directory]"
 msgstr ""
 "git init [-q | --quiet] [--bare] [--template=<thư-mục-tạm>] [--shared[=<các-"
 "quyền>]] [thư-mục]"
 
-#: builtin/init-db.c:490
+#: builtin/init-db.c:498
 msgid "permissions"
 msgstr "các quyền"
 
-#: builtin/init-db.c:491
+#: builtin/init-db.c:499
 msgid "specify that the git repository is to be shared amongst several users"
 msgstr "chỉ ra cái mà kho git được chia sẻ giữa nhiều người dùng"
 
-#: builtin/init-db.c:493 builtin/prune-packed.c:57 builtin/repack.c:172
+#: builtin/init-db.c:501 builtin/prune-packed.c:57 builtin/repack.c:171
 msgid "be quiet"
 msgstr "im lặng"
 
-#: builtin/init-db.c:525 builtin/init-db.c:530
+#: builtin/init-db.c:533 builtin/init-db.c:538
 #, c-format
 msgid "cannot mkdir %s"
 msgstr "không thể mkdir (tạo thư mục): %s"
 
-#: builtin/init-db.c:534
+#: builtin/init-db.c:542
 #, c-format
 msgid "cannot chdir to %s"
 msgstr "không thể chdir (chuyển đổi thư mục) sang %s"
 
-#: builtin/init-db.c:555
+#: builtin/init-db.c:563
 #, c-format
 msgid ""
 "%s (or --work-tree=<directory>) not allowed without specifying %s (or --git-"
 "dir=<directory>)"
 msgstr ""
 "%s (hoặc --work-tree=<thư-mục>) không cho phép không chỉ định %s (hoặc --git-"
 "dir=<thư-mục>)"
 
-#: builtin/init-db.c:583
+#: builtin/init-db.c:591
 #, c-format
 msgid "Cannot access work tree '%s'"
 msgstr "không thể truy cập cây (tree) làm việc “%s”"
 
 #: builtin/interpret-trailers.c:15
 msgid ""
 "git interpret-trailers [--trim-empty] [(--trailer <token>[(=|:)<value>])...] "
 "[<file>...]"
 msgstr ""
-"git interpret-trailers [--trim-empty] [(--trailer <thẻ>[(=|:)<giá-trị>])...] "
-"[<tập-tin>...]"
+"git interpret-trailers [--trim-empty] [(--trailer <thẻ>[(=|:)<giá-trị>])…] "
+"[<tập-tin>…]"
 
 #: builtin/interpret-trailers.c:25
 msgid "trim empty trailers"
 msgstr "bộ dò vết cắt bỏ phần trống rỗng"
 
 #: builtin/interpret-trailers.c:26
@@ -6519,18 +6480,18 @@
 
 #: builtin/interpret-trailers.c:27
 msgid "trailer(s) to add"
 msgstr "bộ dò vết cần thêm"
 
 #: builtin/log.c:41
-msgid "git log [<options>] [<revision range>] [[--] <path>...]\n"
-msgstr "git log [<các-tùy-chọn>] [<vùng xem xét>] [[--] <đường-dẫn>...]\n"
+msgid "git log [<options>] [<revision range>] [[--] <path>...]"
+msgstr "git log [<các-tùy-chọn>] [<vùng xem xét>] [[--] <đường-dẫn>…]"
 
 #: builtin/log.c:42
-msgid "   or: git show [options] <object>..."
-msgstr "  hay: git show [các-tùy-chọn] <đối-tượng>..."
+msgid "git show [options] <object>..."
+msgstr "git show [các-tùy-chọn] <đối-tượng>…"
 
 #: builtin/log.c:81
 #, c-format
 msgid "invalid --decorate option: %s"
 msgstr "tùy chọn--decorate không hợp lệ: %s"
 
@@ -6804,13 +6765,13 @@
 #, c-format
 msgid "Unknown commit %s"
 msgstr "Không hiểu lần chuyển giao %s"
 
 #: builtin/ls-files.c:401
 msgid "git ls-files [options] [<file>...]"
-msgstr "git ls-files [các-tùy-chọn] [<tập-tin>...]"
+msgstr "git ls-files [các-tùy-chọn] [<tập-tin>…]"
 
 #: builtin/ls-files.c:458
 msgid "identify the file status with tags"
 msgstr "nhận dạng các trạng thái tập tin với thẻ"
 
 #: builtin/ls-files.c:460
@@ -6899,222 +6860,222 @@
 #: builtin/ls-files.c:505
 msgid "show debugging data"
 msgstr "hiển thị dữ liệu gỡ lỗi"
 
 #: builtin/ls-tree.c:28
 msgid "git ls-tree [<options>] <tree-ish> [<path>...]"
-msgstr "git ls-tree [<các-tùy-chọn>] <tree-ish> [<đường-dẫn>...]"
+msgstr "git ls-tree [<các-tùy-chọn>] <tree-ish> [<đường-dẫn>…]"
 
-#: builtin/ls-tree.c:126
+#: builtin/ls-tree.c:127
 msgid "only show trees"
 msgstr "chỉ hiển thị các tree"
 
-#: builtin/ls-tree.c:128
+#: builtin/ls-tree.c:129
 msgid "recurse into subtrees"
 msgstr "đệ quy vào các thư mục con"
 
-#: builtin/ls-tree.c:130
+#: builtin/ls-tree.c:131
 msgid "show trees when recursing"
 msgstr "hiển thị cây khi đệ quy"
 
-#: builtin/ls-tree.c:133
+#: builtin/ls-tree.c:134
 msgid "terminate entries with NUL byte"
 msgstr "chấm dứt mục tin với byte NUL"
 
-#: builtin/ls-tree.c:134
+#: builtin/ls-tree.c:135
 msgid "include object size"
 msgstr "gồm cả kích thước đối tượng"
 
-#: builtin/ls-tree.c:136 builtin/ls-tree.c:138
+#: builtin/ls-tree.c:137 builtin/ls-tree.c:139
 msgid "list only filenames"
 msgstr "chỉ liệt kê tên tập tin"
 
-#: builtin/ls-tree.c:141
+#: builtin/ls-tree.c:142
 msgid "use full path names"
 msgstr "dùng tên đường dẫn đầy đủ"
 
-#: builtin/ls-tree.c:143
+#: builtin/ls-tree.c:144
 msgid "list entire tree; not just current directory (implies --full-name)"
 msgstr "liệt kê cây mục tin; không chỉ thư mục hiện hành (ngụ ý --full-name)"
 
-#: builtin/merge.c:44
+#: builtin/merge.c:45
 msgid "git merge [options] [<commit>...]"
-msgstr "git merge [các-tùy-chọn] [<commit>...]"
+msgstr "git merge [các-tùy-chọn] [<commit>…]"
 
-#: builtin/merge.c:45
+#: builtin/merge.c:46
 msgid "git merge [options] <msg> HEAD <commit>"
 msgstr "git merge [các-tùy-chọn] <tin-nhắn> HEAD <commit>"
 
-#: builtin/merge.c:46
+#: builtin/merge.c:47
 msgid "git merge --abort"
 msgstr "git merge --abort"
 
-#: builtin/merge.c:99
+#: builtin/merge.c:100
 msgid "switch `m' requires a value"
 msgstr "switch “m” yêu cầu một giá trị"
 
-#: builtin/merge.c:136
+#: builtin/merge.c:137
 #, c-format
 msgid "Could not find merge strategy '%s'.\n"
 msgstr "Không tìm thấy chiến lược hòa trộn “%s”.\n"
 
-#: builtin/merge.c:137
+#: builtin/merge.c:138
 #, c-format
 msgid "Available strategies are:"
 msgstr "Các chiến lược sẵn sàng là:"
 
-#: builtin/merge.c:142
+#: builtin/merge.c:143
 #, c-format
 msgid "Available custom strategies are:"
 msgstr "Các chiến lược tùy chỉnh sẵn sàng là:"
 
-#: builtin/merge.c:192
+#: builtin/merge.c:193
 msgid "do not show a diffstat at the end of the merge"
 msgstr "không hiển thị thống kê khác biệt tại cuối của lần hòa trộn"
 
-#: builtin/merge.c:195
+#: builtin/merge.c:196
 msgid "show a diffstat at the end of the merge"
 msgstr "hiển thị thống kê khác biệt tại cuối của hòa trộn"
 
-#: builtin/merge.c:196
+#: builtin/merge.c:197
 msgid "(synonym to --stat)"
 msgstr "(đồng nghĩa với --stat)"
 
-#: builtin/merge.c:198
+#: builtin/merge.c:199
 msgid "add (at most <n>) entries from shortlog to merge commit message"
 msgstr "thêm (ít nhất <n>) mục từ shortlog cho ghi chú chuyển giao hòa trộn"
 
-#: builtin/merge.c:201
+#: builtin/merge.c:202
 msgid "create a single commit instead of doing a merge"
 msgstr "tạo một lần chuyển giao đưon thay vì thực hiện việc hòa trộn"
 
-#: builtin/merge.c:203
+#: builtin/merge.c:204
 msgid "perform a commit if the merge succeeds (default)"
 msgstr "thực hiện chuyển giao nếu hòa trộn thành công (mặc định)"
 
-#: builtin/merge.c:205
+#: builtin/merge.c:206
 msgid "edit message before committing"
 msgstr "sửa chú thích trước khi chuyển giao"
 
-#: builtin/merge.c:206
+#: builtin/merge.c:207
 msgid "allow fast-forward (default)"
 msgstr "cho phép fast-forward (mặc định)"
 
-#: builtin/merge.c:208
+#: builtin/merge.c:209
 msgid "abort if fast-forward is not possible"
 msgstr "bỏ qua nếu fast-forward không thể được"
 
-#: builtin/merge.c:212
+#: builtin/merge.c:213
 msgid "Verify that the named commit has a valid GPG signature"
 msgstr "Thẩm tra xem lần chuyển giao có tên đó có chữ ký GPG hợp lệ hay không"
 
-#: builtin/merge.c:213 builtin/notes.c:741 builtin/revert.c:89
+#: builtin/merge.c:214 builtin/notes.c:753 builtin/revert.c:89
 msgid "strategy"
 msgstr "chiến lược"
 
-#: builtin/merge.c:214
+#: builtin/merge.c:215
 msgid "merge strategy to use"
 msgstr "chiến lược hòa trộn sẽ dùng"
 
-#: builtin/merge.c:215
+#: builtin/merge.c:216
 msgid "option=value"
 msgstr "tùy_chọn=giá_trị"
 
-#: builtin/merge.c:216
+#: builtin/merge.c:217
 msgid "option for selected merge strategy"
 msgstr "tùy chọn cho chiến lược hòa trộn đã chọn"
 
-#: builtin/merge.c:218
+#: builtin/merge.c:219
 msgid "merge commit message (for a non-fast-forward merge)"
 msgstr ""
 "hòa trộn ghi chú của lần chuyển giao (dành cho hòa trộn non-fast-forward)"
 
-#: builtin/merge.c:222
+#: builtin/merge.c:223
 msgid "abort the current in-progress merge"
 msgstr "bãi bỏ quá trình hòa trộn hiện tại đang thực hiện"
 
-#: builtin/merge.c:250
+#: builtin/merge.c:251
 msgid "could not run stash."
 msgstr "không thể chạy stash."
 
-#: builtin/merge.c:255
+#: builtin/merge.c:256
 msgid "stash failed"
 msgstr "stash gặp lỗi"
 
-#: builtin/merge.c:260
+#: builtin/merge.c:261
 #, c-format
 msgid "not a valid object: %s"
 msgstr "không phải là một đối tượng hợp lệ: %s"
 
-#: builtin/merge.c:279 builtin/merge.c:296
+#: builtin/merge.c:280 builtin/merge.c:297
 msgid "read-tree failed"
 msgstr "read-tree gặp lỗi"
 
-#: builtin/merge.c:326
+#: builtin/merge.c:327
 msgid " (nothing to squash)"
 msgstr " (không có gì để squash)"
 
-#: builtin/merge.c:339
+#: builtin/merge.c:340
 #, c-format
 msgid "Squash commit -- not updating HEAD\n"
 msgstr "Squash commit -- không cập nhật HEAD\n"
 
-#: builtin/merge.c:371
+#: builtin/merge.c:372
 msgid "Writing SQUASH_MSG"
 msgstr "Đang ghi SQUASH_MSG"
 
-#: builtin/merge.c:373
+#: builtin/merge.c:374
 msgid "Finishing SQUASH_MSG"
 msgstr "Hoàn thành SQUASH_MSG"
 
-#: builtin/merge.c:396
+#: builtin/merge.c:397
 #, c-format
 msgid "No merge message -- not updating HEAD\n"
 msgstr "Không có lời chú thích hòa trộn -- nên không cập nhật HEAD\n"
 
-#: builtin/merge.c:446
+#: builtin/merge.c:447
 #, c-format
 msgid "'%s' does not point to a commit"
 msgstr "“%s” không chỉ đến một lần chuyển giao nào cả"
 
-#: builtin/merge.c:558
+#: builtin/merge.c:559
 #, c-format
 msgid "Bad branch.%s.mergeoptions string: %s"
 msgstr "Chuỗi branch.%s.mergeoptions sai: %s"
 
-#: builtin/merge.c:653
+#: builtin/merge.c:654
 msgid "git write-tree failed to write a tree"
 msgstr "lệnh git write-tree gặp lỗi khi ghi một cây"
 
-#: builtin/merge.c:677
+#: builtin/merge.c:678
 msgid "Not handling anything other than two heads merge."
 msgstr "Không cầm nắm gì ngoài hai head hòa trộn"
 
-#: builtin/merge.c:691
+#: builtin/merge.c:692
 #, c-format
 msgid "Unknown option for merge-recursive: -X%s"
 msgstr "Không hiểu tùy chọn cho merge-recursive: -X%s"
 
-#: builtin/merge.c:704
+#: builtin/merge.c:705
 #, c-format
 msgid "unable to write %s"
 msgstr "không thể ghi %s"
 
-#: builtin/merge.c:793
+#: builtin/merge.c:794
 #, c-format
 msgid "Could not read from '%s'"
 msgstr "Không thể đọc từ “%s”"
 
-#: builtin/merge.c:802
+#: builtin/merge.c:803
 #, c-format
 msgid "Not committing merge; use 'git commit' to complete the merge.\n"
 msgstr ""
 "Vẫn chưa hòa trộn các lần chuyển giao; sử dụng lệnh “git commit” để hoàn tất "
 "việc hòa trộn.\n"
 
-#: builtin/merge.c:808
+#: builtin/merge.c:809
 #, c-format
 msgid ""
 "Please enter a commit message to explain why this merge is necessary,\n"
 "especially if it merges an updated upstream into a topic branch.\n"
 "\n"
 "Lines starting with '%c' will be ignored, and an empty message aborts\n"
@@ -7126,189 +7087,189 @@
 "topic.\n"
 "\n"
 "Những dòng được bắt đầu bằng “%c” sẽ được bỏ qua, và phần chú thích này nếu "
 "rỗng\n"
 "sẽ hủy bỏ lần chuyển giao.\n"
 
-#: builtin/merge.c:832
+#: builtin/merge.c:833
 msgid "Empty commit message."
 msgstr "Chú thích của lần commit (chuyển giao) bị trống rỗng."
 
-#: builtin/merge.c:844
+#: builtin/merge.c:845
 #, c-format
 msgid "Wonderful.\n"
 msgstr "Thần kỳ.\n"
 
-#: builtin/merge.c:907
+#: builtin/merge.c:900
 #, c-format
 msgid "Automatic merge failed; fix conflicts and then commit the result.\n"
 msgstr ""
 "Việc tự động hòa trộn gặp lỗi; hãy sửa các xung đột sau đó chuyển giao kết "
 "quả.\n"
 
-#: builtin/merge.c:923
+#: builtin/merge.c:916
 #, c-format
 msgid "'%s' is not a commit"
 msgstr "%s không phải là một lần commit (chuyển giao)"
 
-#: builtin/merge.c:964
+#: builtin/merge.c:957
 msgid "No current branch."
 msgstr "không phải nhánh hiện hành"
 
-#: builtin/merge.c:966
+#: builtin/merge.c:959
 msgid "No remote for the current branch."
 msgstr "Không có máy chủ cho nhánh hiện hành."
 
-#: builtin/merge.c:968
+#: builtin/merge.c:961
 msgid "No default upstream defined for the current branch."
 msgstr "Không có thượng nguồn mặc định được định nghĩa cho nhánh hiện hành."
 
-#: builtin/merge.c:973
+#: builtin/merge.c:966
 #, c-format
 msgid "No remote-tracking branch for %s from %s"
 msgstr "Không nhánh mạng theo dõi cho %s từ %s"
 
-#: builtin/merge.c:1129
+#: builtin/merge.c:1122
 msgid "There is no merge to abort (MERGE_HEAD missing)."
 msgstr ""
 "Ở đây không có lần hòa trộn nào được hủy bỏ giữa chừng cả (thiếu MERGE_HEAD)."
 
-#: builtin/merge.c:1145
+#: builtin/merge.c:1138
 msgid ""
 "You have not concluded your merge (MERGE_HEAD exists).\n"
 "Please, commit your changes before you merge."
 msgstr ""
 "Bạn chưa kết thúc việc hòa trộn (MERGE_HEAD vẫn tồn tại).\n"
 "Hãy chuyển giao các thay đổi trước khi bạn có thể hòa trộn."
 
-#: builtin/merge.c:1148 git-pull.sh:34
+#: builtin/merge.c:1141 git-pull.sh:34
 msgid "You have not concluded your merge (MERGE_HEAD exists)."
 msgstr "Bạn chưa kết thúc việc hòa trộng (MERGE_HEAD vẫn tồn tại)."
 
-#: builtin/merge.c:1152
+#: builtin/merge.c:1145
 msgid ""
 "You have not concluded your cherry-pick (CHERRY_PICK_HEAD exists).\n"
 "Please, commit your changes before you merge."
 msgstr ""
 "Bạn chưa kết thúc việc cherry-pick (CHERRY_PICK_HEAD vẫn tồn tại).\n"
 "Hãy chuyển giao các thay đổi trước khi bạn có thể hòa trộn."
 
-#: builtin/merge.c:1155
+#: builtin/merge.c:1148
 msgid "You have not concluded your cherry-pick (CHERRY_PICK_HEAD exists)."
 msgstr "Bạn chưa kết thúc việc cherry-pick (CHERRY_PICK_HEAD vẫn tồn tại)."
 
-#: builtin/merge.c:1164
+#: builtin/merge.c:1157
 msgid "You cannot combine --squash with --no-ff."
 msgstr "Bạn không thể kết hợp --squash với --no-ff."
 
-#: builtin/merge.c:1173
+#: builtin/merge.c:1166
 msgid "No commit specified and merge.defaultToUpstream not set."
 msgstr "Không chỉ ra lần chuyển giao và merge.defaultToUpstream chưa được đặt."
 
-#: builtin/merge.c:1205
+#: builtin/merge.c:1198
 msgid "Can merge only exactly one commit into empty head"
 msgstr ""
 "Không thể hòa trộn một cách đúng đắn một lần chuyển giao vào một head rỗng"
 
-#: builtin/merge.c:1208
+#: builtin/merge.c:1201
 msgid "Squash commit into empty head not supported yet"
 msgstr "Squash commit vào một head trống rỗng vẫn chưa được hỗ trợ"
 
-#: builtin/merge.c:1210
+#: builtin/merge.c:1203
 msgid "Non-fast-forward commit does not make sense into an empty head"
 msgstr ""
 "Chuyển giao không-fast-forward không hợp lý ở trong một head trống rỗng"
 
-#: builtin/merge.c:1215
+#: builtin/merge.c:1208
 #, c-format
 msgid "%s - not something we can merge"
 msgstr "%s - không phải là một số thứ chúng tôi có thể hòa trộn"
 
-#: builtin/merge.c:1266
+#: builtin/merge.c:1259
 #, c-format
 msgid "Commit %s has an untrusted GPG signature, allegedly by %s."
 msgstr ""
 "Lần chuyển giao %s có một chữ ký GPG không đáng tin, được cho là bởi %s."
 
-#: builtin/merge.c:1269
+#: builtin/merge.c:1262
 #, c-format
 msgid "Commit %s has a bad GPG signature allegedly by %s."
 msgstr "Lần chuyển giao %s có một chữ ký GPG sai, được cho là bởi %s."
 
-#: builtin/merge.c:1272
+#: builtin/merge.c:1265
 #, c-format
 msgid "Commit %s does not have a GPG signature."
 msgstr "Lần chuyển giao %s không có chữ ký GPG."
 
-#: builtin/merge.c:1275
+#: builtin/merge.c:1268
 #, c-format
 msgid "Commit %s has a good GPG signature by %s\n"
 msgstr "Lần chuyển giao %s có một chữ ký GPG tốt bởi %s\n"
 
-#: builtin/merge.c:1356
+#: builtin/merge.c:1349
 #, c-format
 msgid "Updating %s..%s\n"
 msgstr "Đang cập nhật %s..%s\n"
 
-#: builtin/merge.c:1395
+#: builtin/merge.c:1388
 #, c-format
 msgid "Trying really trivial in-index merge...\n"
-msgstr "Đang thử hòa trộn kiểu “trivial in-index”...\n"
+msgstr "Đang thử hòa trộn kiểu “trivial in-index”…\n"
 
-#: builtin/merge.c:1402
+#: builtin/merge.c:1395
 #, c-format
 msgid "Nope.\n"
 msgstr "Không.\n"
 
-#: builtin/merge.c:1434
+#: builtin/merge.c:1427
 msgid "Not possible to fast-forward, aborting."
 msgstr "Thực hiện lệnh fast-forward là không thể được, đang bỏ qua."
 
-#: builtin/merge.c:1457 builtin/merge.c:1536
+#: builtin/merge.c:1450 builtin/merge.c:1529
 #, c-format
 msgid "Rewinding the tree to pristine...\n"
-msgstr "Đang tua lại cây thành thời xa xưa...\n"
+msgstr "Đang tua lại cây thành thời xa xưa…\n"
 
-#: builtin/merge.c:1461
+#: builtin/merge.c:1454
 #, c-format
 msgid "Trying merge strategy %s...\n"
-msgstr "Đang thử chiến lược hòa trộn %s...\n"
+msgstr "Đang thử chiến lược hòa trộn %s…\n"
 
-#: builtin/merge.c:1527
+#: builtin/merge.c:1520
 #, c-format
 msgid "No merge strategy handled the merge.\n"
 msgstr "Không có chiến lược hòa trộn nào được nắm giữ (handle) sự hòa trộn.\n"
 
-#: builtin/merge.c:1529
+#: builtin/merge.c:1522
 #, c-format
 msgid "Merge with strategy %s failed.\n"
 msgstr "Hòa trộn với chiến lược %s gặp lỗi.\n"
 
-#: builtin/merge.c:1538
+#: builtin/merge.c:1531
 #, c-format
 msgid "Using the %s to prepare resolving by hand.\n"
 msgstr "Sử dụng %s để chuẩn bị giải quyết bằng tay.\n"
 
-#: builtin/merge.c:1550
+#: builtin/merge.c:1543
 #, c-format
 msgid "Automatic merge went well; stopped before committing as requested\n"
 msgstr ""
 "Hòa trộn tự động đã trở nên tốt; bị dừng trước khi việc chuyển giao được yêu "
 "cầu\n"
 
 #: builtin/merge-base.c:29
 msgid "git merge-base [-a|--all] <commit> <commit>..."
-msgstr "git merge-base [-a|--all] <commit> <lần_chuyển_giao>..."
+msgstr "git merge-base [-a|--all] <commit> <lần_chuyển_giao>…"
 
 #: builtin/merge-base.c:30
 msgid "git merge-base [-a|--all] --octopus <commit>..."
-msgstr "git merge-base [-a|--all] --octopus <lần_chuyển_giao>..."
+msgstr "git merge-base [-a|--all] --octopus <lần_chuyển_giao>…"
 
 #: builtin/merge-base.c:31
 msgid "git merge-base --independent <commit>..."
-msgstr "git merge-base --independent <lần_chuyển_giao>..."
+msgstr "git merge-base --independent <lần_chuyển_giao>…"
 
 #: builtin/merge-base.c:32
 msgid "git merge-base --is-ancestor <commit> <commit>"
 msgstr "git merge-base --is-ancestor <commit> <lần_chuyển_giao>"
 
 #: builtin/merge-base.c:33
@@ -7346,13 +7307,13 @@
 #: builtin/merge-file.c:33
 msgid "send results to standard output"
 msgstr "gửi kết quả vào đầu ra tiêu chuẩn"
 
 #: builtin/merge-file.c:34
 msgid "use a diff3 based merge"
-msgstr "dùng kiểu  hòa dựa trên diff3"
+msgstr "dùng kiểu hòa dựa trên diff3"
 
 #: builtin/merge-file.c:35
 msgid "for conflicts, use our version"
 msgstr "để tránh xung đột, sử dụng phiên bản của chúng ta"
 
 #: builtin/merge-file.c:37
@@ -7390,13 +7351,13 @@
 #: builtin/mktree.c:152
 msgid "allow creation of more than one tree"
 msgstr "cho phép tạo nhiều hơn một cây"
 
 #: builtin/mv.c:15
 msgid "git mv [options] <source>... <destination>"
-msgstr "git mv [các-tùy-chọn] <nguồn>... <đích>"
+msgstr "git mv [các-tùy-chọn] <nguồn>… <đích>"
 
 #: builtin/mv.c:69
 #, c-format
 msgid "Directory %s is in index and no submodule?"
 msgstr "Thư mục “%s” có ở trong chỉ mục mà không có mô-đun con?"
 
@@ -7476,20 +7437,20 @@
 
 #: builtin/mv.c:253
 #, c-format
 msgid "Renaming %s to %s\n"
 msgstr "Đổi tên %s thành %s\n"
 
-#: builtin/mv.c:256 builtin/remote.c:726 builtin/repack.c:358
+#: builtin/mv.c:256 builtin/remote.c:728 builtin/repack.c:355
 #, c-format
 msgid "renaming '%s' failed"
 msgstr "gặp lỗi khi đổi tên “%s”"
 
 #: builtin/name-rev.c:255
 msgid "git name-rev [options] <commit>..."
-msgstr "git name-rev [các-tùy-chọn] <commit>..."
+msgstr "git name-rev [các-tùy-chọn] <commit>…"
 
 #: builtin/name-rev.c:256
 msgid "git name-rev [options] --all"
 msgstr "git name-rev [các-tùy-chọn] --all"
 
 #: builtin/name-rev.c:257
@@ -7528,33 +7489,33 @@
 #: builtin/notes.c:24
 msgid "git notes [--ref <notes_ref>] [list [<object>]]"
 msgstr "git notes [--ref <notes_ref>] [list [<đối-tượng>]]"
 
 #: builtin/notes.c:25
 msgid ""
-"git notes [--ref <notes_ref>] add [-f] [-m <msg> | -F <file> | (-c | -C) "
-"<object>] [<object>]"
+"git notes [--ref <notes_ref>] add [-f] [--allow-empty] [-m <msg> | -F <file> "
+"| (-c | -C) <object>] [<object>]"
 msgstr ""
-"git notes [--ref <notes_ref>] add [-f] [-m <lời-nhắn> | -F <tập-tin> | (-c | "
-"-C) <đối-tượng>] [<đối-tượng>]"
+"git notes [--ref <notes_ref>] add [-f] [--allow-empty] [-m <lời-nhắn> | -F "
+"<tập-tin> | (-c | -C) <đối-tượng>] [<đối-tượng>]"
 
 #: builtin/notes.c:26
 msgid "git notes [--ref <notes_ref>] copy [-f] <from-object> <to-object>"
 msgstr "git notes [--ref <notes_ref>] copy [-f] <từ-đối-tượng> <đến-đối-tượng>"
 
 #: builtin/notes.c:27
 msgid ""
-"git notes [--ref <notes_ref>] append [-m <msg> | -F <file> | (-c | -C) "
-"<object>] [<object>]"
+"git notes [--ref <notes_ref>] append [--allow-empty] [-m <msg> | -F <file> | "
+"(-c | -C) <object>] [<object>]"
 msgstr ""
-"git notes [--ref <notes_ref>] append [-m <lời-nhắn> | -F <tập-tin> | (-c | -"
-"C) <đối-tượng>] [<đối-tượng>]"
+"git notes [--ref <notes_ref>] append [--allow-empty] [-m <lời-nhắn> | -F "
+"<tập-tin> | (-c | -C) <đối-tượng>] [<đối-tượng>]"
 
 #: builtin/notes.c:28
-msgid "git notes [--ref <notes_ref>] edit [<object>]"
-msgstr "git notes [--ref <notes_ref>] edit [<đối-tượng>]"
+msgid "git notes [--ref <notes_ref>] edit [--allow-empty] [<object>]"
+msgstr "git notes [--ref <notes_ref>] edit [--allow-empty] [<đối-tượng>]"
 
 #: builtin/notes.c:29
 msgid "git notes [--ref <notes_ref>] show [<object>]"
 msgstr "git notes [--ref <notes_ref>] show [<đối-tượng>]"
 
 #: builtin/notes.c:30
@@ -7570,13 +7531,13 @@
 #: builtin/notes.c:32
 msgid "git notes merge --abort [-v | -q]"
 msgstr "git notes merge --abort [-v | -q]"
 
 #: builtin/notes.c:33
 msgid "git notes [--ref <notes_ref>] remove [<object>...]"
-msgstr "git notes [--ref <notes_ref>] remove [<đối-tượng>...]"
+msgstr "git notes [--ref <notes_ref>] remove [<đối-tượng>…]"
 
 #: builtin/notes.c:34
 msgid "git notes [--ref <notes_ref>] prune [-n | -v]"
 msgstr "git notes [--ref <notes_ref>] prune [-n | -v]"
 
 #: builtin/notes.c:35
@@ -7594,13 +7555,13 @@
 #: builtin/notes.c:50
 msgid "git notes copy [<options>] <from-object> <to-object>"
 msgstr "git notes copy [<các-tùy-chọn>] <từ-đối-tượng> <đến-đối-tượng>"
 
 #: builtin/notes.c:51
 msgid "git notes copy --stdin [<from-object> <to-object>]..."
-msgstr "git notes copy --stdin [<từ-đối-tượng> <đến-đối-tượng>]..."
+msgstr "git notes copy --stdin [<từ-đối-tượng> <đến-đối-tượng>]…"
 
 #: builtin/notes.c:56
 msgid "git notes append [<options>] [<object>]"
 msgstr "git notes append [<các-tùy-chọn>] [<đối-tượng>]"
 
 #: builtin/notes.c:61
@@ -7632,243 +7593,247 @@
 msgstr "git notes prune [<các-tùy-chọn>]"
 
 #: builtin/notes.c:88
 msgid "git notes get-ref"
 msgstr "git notes get-ref"
 
-#: builtin/notes.c:136
+#: builtin/notes.c:146
 #, c-format
 msgid "unable to start 'show' for object '%s'"
 msgstr "không thể khởi chạy “show” cho đối tượng “%s”"
 
-#: builtin/notes.c:140
+#: builtin/notes.c:150
 msgid "could not read 'show' output"
 msgstr "không thể đọc kết xuất “show”"
 
-#: builtin/notes.c:148
+#: builtin/notes.c:158
 #, c-format
 msgid "failed to finish 'show' for object '%s'"
 msgstr "gặp lỗi khi hoàn thành “show” cho đối tượng “%s”"
 
-#: builtin/notes.c:166 builtin/tag.c:477
+#: builtin/notes.c:173 builtin/tag.c:477
 #, c-format
 msgid "could not create file '%s'"
 msgstr "không thể tạo tập tin “%s”"
 
-#: builtin/notes.c:185
+#: builtin/notes.c:192
 msgid "Please supply the note contents using either -m or -F option"
 msgstr ""
 "Xin hãy áp dụng nội dung của ghi chú sử dụng hoặc là tùy chọn -m hoặc là -F"
 
-#: builtin/notes.c:206 builtin/notes.c:847
-#, c-format
-msgid "Removing note for object %s\n"
-msgstr "Đang gỡ bỏ ghi chú (note) cho đối tượng %s\n"
-
-#: builtin/notes.c:211
+#: builtin/notes.c:201
 msgid "unable to write note object"
 msgstr "không thể ghi đối tượng ghi chú (note)"
 
-#: builtin/notes.c:213
+#: builtin/notes.c:203
 #, c-format
 msgid "The note contents have been left in %s"
 msgstr "Nội dung ghi chú còn lại %s"
 
-#: builtin/notes.c:247 builtin/tag.c:693
+#: builtin/notes.c:231 builtin/tag.c:693
 #, c-format
 msgid "cannot read '%s'"
 msgstr "không thể đọc “%s”"
 
-#: builtin/notes.c:249 builtin/tag.c:696
+#: builtin/notes.c:233 builtin/tag.c:696
 #, c-format
 msgid "could not open or read '%s'"
 msgstr "không thể mở hay đọc “%s”"
 
-#: builtin/notes.c:268 builtin/notes.c:319 builtin/notes.c:321
-#: builtin/notes.c:381 builtin/notes.c:435 builtin/notes.c:518
-#: builtin/notes.c:523 builtin/notes.c:598 builtin/notes.c:640
-#: builtin/notes.c:842 builtin/tag.c:709
+#: builtin/notes.c:252 builtin/notes.c:303 builtin/notes.c:305
+#: builtin/notes.c:365 builtin/notes.c:420 builtin/notes.c:506
+#: builtin/notes.c:511 builtin/notes.c:589 builtin/notes.c:652
+#: builtin/notes.c:854 builtin/tag.c:709
 #, c-format
 msgid "Failed to resolve '%s' as a valid ref."
 msgstr "Gặp lỗi khi phân giải “%s” như là một tham chiếu hợp lệ."
 
-#: builtin/notes.c:271
+#: builtin/notes.c:255
 #, c-format
 msgid "Failed to read object '%s'."
 msgstr "Gặp lỗi khi đọc đối tượng “%s”."
 
-#: builtin/notes.c:275
+#: builtin/notes.c:259
 #, c-format
 msgid "Cannot read note data from non-blob object '%s'."
 msgstr "không thể đọc dữ liệu ghi chú từ đối tượng không-blob “%s”."
 
-#: builtin/notes.c:315
+#: builtin/notes.c:299
 #, c-format
 msgid "Malformed input line: '%s'."
 msgstr "Dòng đầu vào dị hình: “%s”."
 
-#: builtin/notes.c:330
+#: builtin/notes.c:314
 #, c-format
 msgid "Failed to copy notes from '%s' to '%s'"
 msgstr "Gặp lỗi khi sao chép ghi chú (note) từ “%s” tới “%s”"
 
-#: builtin/notes.c:374 builtin/notes.c:428 builtin/notes.c:501
-#: builtin/notes.c:513 builtin/notes.c:586 builtin/notes.c:633
-#: builtin/notes.c:907
+#: builtin/notes.c:358 builtin/notes.c:413 builtin/notes.c:489
+#: builtin/notes.c:501 builtin/notes.c:577 builtin/notes.c:645
+#: builtin/notes.c:919
 msgid "too many parameters"
 msgstr "quá nhiều đối số"
 
-#: builtin/notes.c:387 builtin/notes.c:646
+#: builtin/notes.c:371 builtin/notes.c:658
 #, c-format
 msgid "No note found for object %s."
 msgstr "không tìm thấy ghi chú cho đối tượng %s."
 
-#: builtin/notes.c:409 builtin/notes.c:566
+#: builtin/notes.c:392 builtin/notes.c:555
 msgid "note contents as a string"
 msgstr "nội dung ghi chú (note) nằm trong một chuỗi"
 
-#: builtin/notes.c:412 builtin/notes.c:569
+#: builtin/notes.c:395 builtin/notes.c:558
 msgid "note contents in a file"
 msgstr "nội dung ghi chú (note) nằm trong một tập tin"
 
-#: builtin/notes.c:414 builtin/notes.c:417 builtin/notes.c:571
-#: builtin/notes.c:574 builtin/tag.c:628
+#: builtin/notes.c:397 builtin/notes.c:400 builtin/notes.c:560
+#: builtin/notes.c:563 builtin/tag.c:628
 msgid "object"
 msgstr "đối tượng"
 
-#: builtin/notes.c:415 builtin/notes.c:572
+#: builtin/notes.c:398 builtin/notes.c:561
 msgid "reuse and edit specified note object"
 msgstr "dùng lại nhưng có sửa chữa đối tượng note đã chỉ ra"
 
-#: builtin/notes.c:418 builtin/notes.c:575
+#: builtin/notes.c:401 builtin/notes.c:564
 msgid "reuse specified note object"
 msgstr "dùng lại đối tượng ghi chú (note) đã chỉ ra"
 
-#: builtin/notes.c:420 builtin/notes.c:488
+#: builtin/notes.c:404 builtin/notes.c:567
+msgid "allow storing empty note"
+msgstr "cho lưu trữ ghi chú trống rỗng"
+
+#: builtin/notes.c:405 builtin/notes.c:476
 msgid "replace existing notes"
 msgstr "thay thế ghi chú trước"
 
-#: builtin/notes.c:454
+#: builtin/notes.c:430
 #, c-format
 msgid ""
 "Cannot add notes. Found existing notes for object %s. Use '-f' to overwrite "
 "existing notes"
 msgstr ""
 "Không thể thêm các ghi chú. Đã tìm thấy các ghi chú đã có sẵn cho đối tượng "
 "%s. Sử dụng tùy chọn “-f” để ghi đè lên các ghi chú cũ"
 
-#: builtin/notes.c:459 builtin/notes.c:536
+#: builtin/notes.c:445 builtin/notes.c:524
 #, c-format
 msgid "Overwriting existing notes for object %s\n"
 msgstr "Đang ghi đè lên ghi chú cũ cho đối tượng %s\n"
 
-#: builtin/notes.c:489
+#: builtin/notes.c:456 builtin/notes.c:617 builtin/notes.c:859
+#, c-format
+msgid "Removing note for object %s\n"
+msgstr "Đang gỡ bỏ ghi chú (note) cho đối tượng %s\n"
+
+#: builtin/notes.c:477
 msgid "read objects from stdin"
 msgstr "đọc các đối tượng từ đầu vào tiêu chuẩn"
 
-#: builtin/notes.c:491
+#: builtin/notes.c:479
 msgid "load rewriting config for <command> (implies --stdin)"
 msgstr "tải cấu hình chép lại cho <lệnh> (ngầm định là --stdin)"
 
-#: builtin/notes.c:509
+#: builtin/notes.c:497
 msgid "too few parameters"
 msgstr "quá ít đối số"
 
-#: builtin/notes.c:530
+#: builtin/notes.c:518
 #, c-format
 msgid ""
 "Cannot copy notes. Found existing notes for object %s. Use '-f' to overwrite "
 "existing notes"
 msgstr ""
 "Không thể sao chép các ghi chú. Đã tìm thấy các ghi chú đã có sẵn cho đối "
 "tượng %s. Sử dụng tùy chọn “-f” để ghi đè lên các ghi chú cũ"
 
-#: builtin/notes.c:542
+#: builtin/notes.c:530
 #, c-format
 msgid "Missing notes on source object %s. Cannot copy."
 msgstr "Thiếu ghi chú trên đối tượng nguồn %s. Không thể sao chép."
 
-#: builtin/notes.c:591
+#: builtin/notes.c:582
 #, c-format
 msgid ""
 "The -m/-F/-c/-C options have been deprecated for the 'edit' subcommand.\n"
 "Please use 'git notes add -f -m/-F/-c/-C' instead.\n"
 msgstr ""
 "Các tùy chọn -m/-F/-c/-C đã cổ không còn dùng nữa cho lệnh con “edit”.\n"
 "Xin hãy sử dụng lệnh sau để thay thế: “git notes add -f -m/-F/-c/-C”.\n"
 
-#: builtin/notes.c:738
+#: builtin/notes.c:750
 msgid "General options"
 msgstr "Tùy chọn chung"
 
-#: builtin/notes.c:740
+#: builtin/notes.c:752
 msgid "Merge options"
 msgstr "Tùy chọn về hòa trộn"
 
-#: builtin/notes.c:742
+#: builtin/notes.c:754
 msgid ""
 "resolve notes conflicts using the given strategy (manual/ours/theirs/union/"
 "cat_sort_uniq)"
 msgstr ""
 "phân giải các xung đột “notes” sử dụng chiến lược đã đưa ra (manual/ours/"
 "theirs/union/cat_sort_uniq)"
 
-#: builtin/notes.c:744
+#: builtin/notes.c:756
 msgid "Committing unmerged notes"
 msgstr "Chuyển giao các note chưa được hòa trộn"
 
-#: builtin/notes.c:746
+#: builtin/notes.c:758
 msgid "finalize notes merge by committing unmerged notes"
 msgstr ""
 "các note cuối cùng được hòa trộn bởi các note chưa hòa trộn của lần chuyển "
 "giao"
 
-#: builtin/notes.c:748
+#: builtin/notes.c:760
 msgid "Aborting notes merge resolution"
 msgstr "Hủy bỏ phân giải ghi chú (note) hòa trộn"
 
-#: builtin/notes.c:750
+#: builtin/notes.c:762
 msgid "abort notes merge"
 msgstr "bỏ qua hòa trộn các ghi chú (note)"
 
-#: builtin/notes.c:845
+#: builtin/notes.c:857
 #, c-format
 msgid "Object %s has no note\n"
 msgstr "Đối tượng %s không có ghi chú (note)\n"
 
-#: builtin/notes.c:857
+#: builtin/notes.c:869
 msgid "attempt to remove non-existent note is not an error"
 msgstr "cố gắng gỡ bỏ một note chưa từng tồn tại không phải là một lỗi"
 
-#: builtin/notes.c:860
+#: builtin/notes.c:872
 msgid "read object names from the standard input"
 msgstr "đọc tên đối tượng từ thiết bị nhập chuẩn"
 
-#: builtin/notes.c:941
+#: builtin/notes.c:953
 msgid "notes-ref"
 msgstr "notes-ref"
 
-#: builtin/notes.c:942
+#: builtin/notes.c:954
 msgid "use notes from <notes_ref>"
 msgstr "dùng “notes” từ <notes_ref>"
 
-#: builtin/notes.c:977 builtin/remote.c:1624
+#: builtin/notes.c:989 builtin/remote.c:1621
 #, c-format
 msgid "Unknown subcommand: %s"
 msgstr "Không hiểu câu lệnh con: %s"
 
 #: builtin/pack-objects.c:28
 msgid "git pack-objects --stdout [options...] [< ref-list | < object-list]"
 msgstr ""
-"git pack-objects --stdout [các-tùy-chọn...] [< danh-sách-ref | < danh-sách-"
-"đối-tượng]"
+"git pack-objects --stdout [các-tùy-chọn…] [< danh-sách-ref | < danh-sách-đối-"
+"tượng]"
 
 #: builtin/pack-objects.c:29
 msgid "git pack-objects [options...] base-name [< ref-list | < object-list]"
 msgstr ""
-"git pack-objects [các-tùy-chọn...] base-name [< danh-sách-ref | < danh-sách-"
+"git pack-objects [các-tùy-chọn…] base-name [< danh-sách-ref | < danh-sách-"
 "đối-tượng]"
 
 #: builtin/pack-objects.c:177 builtin/pack-objects.c:180
 #, c-format
 msgid "deflate error (%d)"
 msgstr "lỗi giải nén (%d)"
@@ -7902,146 +7867,150 @@
 
 #: builtin/pack-objects.c:2603
 #, c-format
 msgid "unable to parse value '%s' for option %s"
 msgstr "không thể phân tích giá trị “%s” cho tùy chọn %s"
 
-#: builtin/pack-objects.c:2622
+#: builtin/pack-objects.c:2623
 msgid "do not show progress meter"
 msgstr "không hiển thị bộ đo tiến trình"
 
-#: builtin/pack-objects.c:2624
+#: builtin/pack-objects.c:2625
 msgid "show progress meter"
 msgstr "hiển thị bộ đo tiến trình"
 
-#: builtin/pack-objects.c:2626
+#: builtin/pack-objects.c:2627
 msgid "show progress meter during object writing phase"
 msgstr "hiển thị bộ đo tiến triển trong suốt pha ghi đối tượng"
 
-#: builtin/pack-objects.c:2629
+#: builtin/pack-objects.c:2630
 msgid "similar to --all-progress when progress meter is shown"
 msgstr "tương tự --all-progress khi bộ đo tiến trình được xuất hiện"
 
-#: builtin/pack-objects.c:2630
+#: builtin/pack-objects.c:2631
 msgid "version[,offset]"
 msgstr "phiên bản[,offset]"
 
-#: builtin/pack-objects.c:2631
+#: builtin/pack-objects.c:2632
 msgid "write the pack index file in the specified idx format version"
 msgstr "ghi tập tin bảng mục lục gói (pack) ở phiên bản định dạng idx đã cho"
 
-#: builtin/pack-objects.c:2634
+#: builtin/pack-objects.c:2635
 msgid "maximum size of each output pack file"
 msgstr "kcíh thước tối đa cho tập tin gói được tạo"
 
-#: builtin/pack-objects.c:2636
+#: builtin/pack-objects.c:2637
 msgid "ignore borrowed objects from alternate object store"
 msgstr "bỏ qua các đối tượng vay mượn từ kho đối tượng thay thế"
 
-#: builtin/pack-objects.c:2638
+#: builtin/pack-objects.c:2639
 msgid "ignore packed objects"
 msgstr "bỏ qua các đối tượng đóng gói"
 
-#: builtin/pack-objects.c:2640
+#: builtin/pack-objects.c:2641
 msgid "limit pack window by objects"
 msgstr "giới hạn cửa sổ đóng gói theo đối tượng"
 
-#: builtin/pack-objects.c:2642
+#: builtin/pack-objects.c:2643
 msgid "limit pack window by memory in addition to object limit"
 msgstr "giới hạn cửa sổ đóng gói theo bộ nhớ cộng thêm với giới hạn đối tượng"
 
-#: builtin/pack-objects.c:2644
+#: builtin/pack-objects.c:2645
 msgid "maximum length of delta chain allowed in the resulting pack"
 msgstr "độ dài tối đa của chuỗi móc xích “delta” được phép trong gói kết quả"
 
-#: builtin/pack-objects.c:2646
+#: builtin/pack-objects.c:2647
 msgid "reuse existing deltas"
 msgstr "dùng lại các delta sẵn có"
 
-#: builtin/pack-objects.c:2648
+#: builtin/pack-objects.c:2649
 msgid "reuse existing objects"
 msgstr "dùng lại các đối tượng sẵn có"
 
-#: builtin/pack-objects.c:2650
+#: builtin/pack-objects.c:2651
 msgid "use OFS_DELTA objects"
 msgstr "dùng các đối tượng OFS_DELTA"
 
-#: builtin/pack-objects.c:2652
+#: builtin/pack-objects.c:2653
 msgid "use threads when searching for best delta matches"
 msgstr "sử dụng các tuyến trình khi tìm kiếm cho các mẫu khớp delta tốt nhất"
 
-#: builtin/pack-objects.c:2654
+#: builtin/pack-objects.c:2655
 msgid "do not create an empty pack output"
 msgstr "không thể tạo kết xuất gói trống rỗng"
 
-#: builtin/pack-objects.c:2656
+#: builtin/pack-objects.c:2657
 msgid "read revision arguments from standard input"
 msgstr " đọc tham số “revision” từ thiết bị nhập chuẩn"
 
-#: builtin/pack-objects.c:2658
+#: builtin/pack-objects.c:2659
 msgid "limit the objects to those that are not yet packed"
 msgstr "giới hạn các đối tượng thành những cái mà chúng vẫn chưa được đóng gói"
 
-#: builtin/pack-objects.c:2661
+#: builtin/pack-objects.c:2662
 msgid "include objects reachable from any reference"
 msgstr "bao gồm các đối tượng có thể đọc được từ bất kỳ tham chiếu nào"
 
-#: builtin/pack-objects.c:2664
+#: builtin/pack-objects.c:2665
 msgid "include objects referred by reflog entries"
 msgstr "bao gồm các đối tượng được tham chiếu bởi các mục reflog"
 
-#: builtin/pack-objects.c:2667
+#: builtin/pack-objects.c:2668
 msgid "include objects referred to by the index"
 msgstr "bao gồm các đối tượng được tham chiếu bởi mục lục"
 
-#: builtin/pack-objects.c:2670
+#: builtin/pack-objects.c:2671
 msgid "output pack to stdout"
 msgstr "xuất gói ra đầu ra tiêu chuẩn"
 
-#: builtin/pack-objects.c:2672
+#: builtin/pack-objects.c:2673
 msgid "include tag objects that refer to objects to be packed"
 msgstr "bao gồm các đối tượng tham chiếu đến các đối tượng được đóng gói"
 
-#: builtin/pack-objects.c:2674
+#: builtin/pack-objects.c:2675
 msgid "keep unreachable objects"
 msgstr "giữ lại các đối tượng không thể đọc được"
 
-#: builtin/pack-objects.c:2675 parse-options.h:140
+#: builtin/pack-objects.c:2676 parse-options.h:140
 msgid "time"
 msgstr "thời-gian"
 
-#: builtin/pack-objects.c:2676
+#: builtin/pack-objects.c:2677
 msgid "unpack unreachable objects newer than <time>"
 msgstr ""
 "xả nén (gỡ khỏi gói) các đối tượng không thể đọc được mới hơn <thời-gian>"
 
-#: builtin/pack-objects.c:2679
+#: builtin/pack-objects.c:2680
 msgid "create thin packs"
 msgstr "tạo gói nhẹ"
 
-#: builtin/pack-objects.c:2681
+#: builtin/pack-objects.c:2682
+msgid "create packs suitable for shallow fetches"
+msgstr "tạo gói để phù hợp cho lấy về nông (shallow)"
+
+#: builtin/pack-objects.c:2684
 msgid "ignore packs that have companion .keep file"
 msgstr "bỏ qua các gói mà nó có tập tin .keep đi kèm"
 
-#: builtin/pack-objects.c:2683
+#: builtin/pack-objects.c:2686
 msgid "pack compression level"
 msgstr "mức nén gói"
 
-#: builtin/pack-objects.c:2685
+#: builtin/pack-objects.c:2688
 msgid "do not hide commits by grafts"
 msgstr "không ẩn các lần chuyển giao bởi “grafts”"
 
-#: builtin/pack-objects.c:2687
+#: builtin/pack-objects.c:2690
 msgid "use a bitmap index if available to speed up counting objects"
 msgstr "dùng mục lục ánh xạ nếu có thể được để nâng cao tốc độ đếm đối tượng"
 
-#: builtin/pack-objects.c:2689
+#: builtin/pack-objects.c:2692
 msgid "write a bitmap index together with the pack index"
 msgstr "ghi một mục lục ánh xạ cùng với mục lục gói"
 
-#: builtin/pack-objects.c:2778
+#: builtin/pack-objects.c:2783
 msgid "Counting objects"
 msgstr "Đang đếm các đối tượng"
 
 #: builtin/pack-refs.c:6
 msgid "git pack-refs [options]"
 msgstr "git pack-refs [các-tùy-chọn]"
@@ -8061,13 +8030,13 @@
 #: builtin/prune-packed.c:40
 msgid "Removing duplicate objects"
 msgstr "Đang gỡ các đối tượng trùng lặp"
 
 #: builtin/prune.c:12
 msgid "git prune [-n] [-v] [--expire <time>] [--] [<head>...]"
-msgstr "git prune [-n] [-v] [--expire <thời-gian>] [--] [<head>...]"
+msgstr "git prune [-n] [-v] [--expire <thời-gian>] [--] [<head>…]"
 
 #: builtin/prune.c:106
 msgid "do not remove, show only"
 msgstr "không gỡ bỏ, chỉ hiển thị"
 
 #: builtin/prune.c:107
@@ -8077,13 +8046,13 @@
 #: builtin/prune.c:110
 msgid "expire objects older than <time>"
 msgstr "các đối tượng hết hạn cũ hơn khoảng <thời gian>"
 
 #: builtin/push.c:14
 msgid "git push [<options>] [<repository> [<refspec>...]]"
-msgstr "git push [<các-tùy-chọn>] [<kho-chứa> [<refspec>...]]"
+msgstr "git push [<các-tùy-chọn>] [<kho-chứa> [<refspec>…]]"
 
 #: builtin/push.c:85
 msgid "tag shorthand without <tag>"
 msgstr "dùng tốc ký tag không có <thẻ>"
 
 #: builtin/push.c:95
@@ -8111,13 +8080,13 @@
 "To push to the branch of the same name on the remote, use\n"
 "\n"
 "    git push %s %s\n"
 "%s"
 msgstr ""
 "Nhánh thượng nguồn của nhánh hiện tại của bạn không khớp\n"
-"với tên của nhánh hiện tại của bạn.  Để push đến nhánh thượng nguồn\n"
+"với tên của nhánh hiện tại của bạn.  Để đẩy lên đến nhánh thượng nguồn\n"
 "trên máy chủ, sử dụng\n"
 "\n"
 "    git push %s HEAD:%s\n"
 "\n"
 "Để push tới nhánh cùng tên trên máy chủ, sử dụng\n"
 "\n"
@@ -8131,13 +8100,13 @@
 "To push the history leading to the current (detached HEAD)\n"
 "state now, use\n"
 "\n"
 "    git push %s HEAD:<name-of-remote-branch>\n"
 msgstr ""
 "Bạn hiện nay không ở một nhánh.\n"
-"Để push lịch sử hướng tới trạng thái hiện hành (HEAD đã bị tách rời)\n"
+"Để đẩy lịch sử lên trên trạng thái hiện hành (HEAD đã bị tách rời)\n"
 "ngay bây giờ, sử dụng\n"
 "\n"
 "    git push %s HEAD:<tên-của-nhánh-máy-chủ>\n"
 
 #: builtin/push.c:171
 #, c-format
@@ -8217,38 +8186,39 @@
 "“current” thay vì “simple” nếu bạn thỉnh thoảng phải sử dụng bản Git cũ)"
 
 #: builtin/push.c:272
 msgid ""
 "You didn't specify any refspecs to push, and push.default is \"nothing\"."
 msgstr ""
-"Bạn đã không chỉ ra một refspecs nào để push, và push.default là \"không là "
-"gì cả\"."
+"Bạn đã không chỉ ra một refspecs nào để đẩy lên, và push.default là \"không "
+"là gì cả\"."
 
 #: builtin/push.c:279
 msgid ""
 "Updates were rejected because the tip of your current branch is behind\n"
 "its remote counterpart. Integrate the remote changes (e.g.\n"
 "'git pull ...') before pushing again.\n"
 "See the 'Note about fast-forwards' in 'git push --help' for details."
 msgstr ""
 "Việc cập nhật bị từ chối bởi vì đầu mút của nhánh hiện tại của bạn nằm đằng\n"
 "sau bộ phận tương ứng của máy chủ. Hòa trộn với các thay đổi từ máy chủ\n"
-"(v.d. \"git pull ...\") trước khi đẩy lên lần nữa.\n"
+"(v.d. \"git pull …\") trước khi đẩy lên lần nữa.\n"
 "Xem “Note about fast-forwards” trong “git push --help” để có thông tin chi "
 "tiết."
 
 #: builtin/push.c:285
 msgid ""
 "Updates were rejected because a pushed branch tip is behind its remote\n"
 "counterpart. Check out this branch and integrate the remote changes\n"
 "(e.g. 'git pull ...') before pushing again.\n"
 "See the 'Note about fast-forwards' in 'git push --help' for details."
 msgstr ""
-"Việc cập nhật bị từ chối bởi vì đầu mút của nhánh đã push nằm đằng sau bộ\n"
+"Việc cập nhật bị từ chối bởi vì đầu mút của nhánh đã đẩy lên nằm đằng sau "
+"bộ\n"
 "phận tương ứng của máy chủ. Checkou nhánh này và hòa trộn với các thay đổi\n"
-"từ máy chủ (v.d. “git pull ...”) trước khi lại push lần nữa.\n"
+"từ máy chủ (v.d. “git pull …”) trước khi lại push lần nữa.\n"
 "Xem “Note about fast-forwards” trong “git push --help” để có thông tin chi "
 "tiết."
 
 #: builtin/push.c:291
 msgid ""
 "Updates were rejected because the remote contains work that you do\n"
@@ -8257,13 +8227,13 @@
 "(e.g., 'git pull ...') before pushing again.\n"
 "See the 'Note about fast-forwards' in 'git push --help' for details."
 msgstr ""
 "Việc cập nhật bị từ chối bởi vì máy chủ có chứa công việc mà bạn không\n"
 "có ở máy nội bộ của mình. Lỗi này thường có nguyên nhân bởi kho khác đẩy\n"
 "dữ liệu lên cùng một tham chiếu. Bạn có lẽ muốn hòa trộn với các thay đổi\n"
-"từ máy chủ (v.d. “git pull...”) trước khi lại push lần nữa.\n"
+"từ máy chủ (v.d. “git pull…”) trước khi lại push lần nữa.\n"
 "Xem “Note about fast-forwards” trong “git push --help” để có thông tin chi "
 "tiết."
 
 #: builtin/push.c:298
 msgid "Updates were rejected because the tag already exists in the remote."
 msgstr "Việc cập nhật bị từ chối bởi vì thẻ đã sẵn có từ trước trên máy chủ."
@@ -8309,13 +8279,13 @@
 msgstr ""
 "Chưa cấu hình đích để đẩy lên.\n"
 "Hoặc là chỉ ra URL từ dòng lệnh hoặc là cấu hình một kho máy chủ sử dụng\n"
 "\n"
 "    git remote add <tên> <url>\n"
 "\n"
-"và sau đó push sử dụng tên máy chủ\n"
+"và sau đó đẩy lên sử dụng tên máy chủ\n"
 "\n"
 "    git push <tên>\n"
 
 #: builtin/push.c:410
 msgid "--all and --tags are incompatible"
 msgstr "--all và --tags xung khắc nhau"
@@ -8391,13 +8361,13 @@
 #: builtin/push.c:517
 msgid "bypass pre-push hook"
 msgstr "vòng qua móc tiền-đẩy (pre-push)"
 
 #: builtin/push.c:518
 msgid "push missing but relevant tags"
-msgstr "push phần bị thiếu nhưng nhưng các thẻ lại thích hợp"
+msgstr "push phần bị thiếu nhưng các thẻ lại thích hợp"
 
 #: builtin/push.c:520
 msgid "GPG sign the push"
 msgstr "ký lần đẩy dùng GPG"
 
 #: builtin/push.c:529
@@ -8527,17 +8497,17 @@
 msgstr "git remote prune [-n | --dry-run] <tên>"
 
 #: builtin/remote.c:19
 msgid ""
 "git remote [-v | --verbose] update [-p | --prune] [(<group> | <remote>)...]"
 msgstr ""
-"git remote [-v | --verbose] update [-p | --prune] [(<nhóm> | <máy-chủ>)...]"
+"git remote [-v | --verbose] update [-p | --prune] [(<nhóm> | <máy-chủ>)…]"
 
 #: builtin/remote.c:20
 msgid "git remote set-branches [--add] <name> <branch>..."
-msgstr "git remote set-branches [--add] <tên> <nhánh>..."
+msgstr "git remote set-branches [--add] <tên> <nhánh>…"
 
 #: builtin/remote.c:21 builtin/remote.c:69
 msgid "git remote set-url [--push] <name> <newurl> [<oldurl>]"
 msgstr "git remote set-url [--push] <tên> <url-mới> [<url-cũ>]"
 
 #: builtin/remote.c:22 builtin/remote.c:70
@@ -8555,29 +8525,29 @@
 #: builtin/remote.c:43
 msgid "git remote set-head <name> (-a | --auto | -d | --delete | <branch>)"
 msgstr "git remote set-head <tên> (-a | --auto | -d | --delete | <nhánh>)"
 
 #: builtin/remote.c:48
 msgid "git remote set-branches <name> <branch>..."
-msgstr "git remote set-branches <tên> <nhánh>..."
+msgstr "git remote set-branches <tên> <nhánh>…"
 
 #: builtin/remote.c:49
 msgid "git remote set-branches --add <name> <branch>..."
-msgstr "git remote set-branches --add <tên> <nhánh>..."
+msgstr "git remote set-branches --add <tên> <nhánh>…"
 
 #: builtin/remote.c:54
 msgid "git remote show [<options>] <name>"
 msgstr "git remote show [<các-tùy-chọn>] <tên>"
 
 #: builtin/remote.c:59
 msgid "git remote prune [<options>] <name>"
 msgstr "git remote prune [<các-tùy-chọn>] <tên>"
 
 #: builtin/remote.c:64
 msgid "git remote update [<options>] [<group> | <remote>]..."
-msgstr "git remote update [<các-tùy-chọn>] [<nhóm> | <máy-chủ>]..."
+msgstr "git remote update [<các-tùy-chọn>] [<nhóm> | <máy-chủ>]…"
 
 #: builtin/remote.c:88
 #, c-format
 msgid "Updating %s"
 msgstr "Đang cập nhật %s"
 
@@ -8627,439 +8597,433 @@
 msgstr "đang chỉ định một nhánh master không hợp lý với tùy chọn --mirror"
 
 #: builtin/remote.c:177
 msgid "specifying branches to track makes sense only with fetch mirrors"
 msgstr "chỉ định những nhánh để theo dõi chỉ hợp lý với các “fetch mirror”"
 
-#: builtin/remote.c:185 builtin/remote.c:641
+#: builtin/remote.c:187 builtin/remote.c:643
 #, c-format
 msgid "remote %s already exists."
 msgstr "máy chủ %s đã tồn tại rồi."
 
-#: builtin/remote.c:189 builtin/remote.c:645
+#: builtin/remote.c:191 builtin/remote.c:647
 #, c-format
 msgid "'%s' is not a valid remote name"
 msgstr "“%s” không phải tên máy chủ hợp lệ"
 
-#: builtin/remote.c:233
+#: builtin/remote.c:235
 #, c-format
 msgid "Could not setup master '%s'"
 msgstr "Không thể cài đặt nhánh master “%s”"
 
-#: builtin/remote.c:333
+#: builtin/remote.c:335
 #, c-format
 msgid "Could not get fetch map for refspec %s"
 msgstr "Không thể lấy ánh xạ (map) fetch cho đặc tả tham chiếu %s"
 
-#: builtin/remote.c:434 builtin/remote.c:442
+#: builtin/remote.c:436 builtin/remote.c:444
 msgid "(matching)"
 msgstr "(khớp)"
 
-#: builtin/remote.c:446
+#: builtin/remote.c:448
 msgid "(delete)"
 msgstr "(xóa)"
 
-#: builtin/remote.c:590 builtin/remote.c:596 builtin/remote.c:602
+#: builtin/remote.c:592 builtin/remote.c:598 builtin/remote.c:604
 #, c-format
 msgid "Could not append '%s' to '%s'"
 msgstr "Không thể nối thêm “%s” vào “%s”"
 
-#: builtin/remote.c:634 builtin/remote.c:798 builtin/remote.c:898
+#: builtin/remote.c:636 builtin/remote.c:795 builtin/remote.c:895
 #, c-format
 msgid "No such remote: %s"
 msgstr "Không có máy chủ nào như thế: %s"
 
-#: builtin/remote.c:651
+#: builtin/remote.c:653
 #, c-format
 msgid "Could not rename config section '%s' to '%s'"
 msgstr "Không thể đổi tên phần của cấu hình từ “%s” thành “%s”"
 
-#: builtin/remote.c:657 builtin/remote.c:850
+#: builtin/remote.c:659 builtin/remote.c:847
 #, c-format
 msgid "Could not remove config section '%s'"
 msgstr "Không thể gỡ bỏ phần cấu hình “%s”"
 
-#: builtin/remote.c:672
+#: builtin/remote.c:674
 #, c-format
 msgid ""
 "Not updating non-default fetch refspec\n"
 "\t%s\n"
 "\tPlease update the configuration manually if necessary."
 msgstr ""
 "Không cập nhật “non-default fetch respec”\n"
 "\t%s\n"
 "\tXin hãy cập nhật phần cấu hình một cách thủ công nếu thấy cần thiết."
 
-#: builtin/remote.c:678
+#: builtin/remote.c:680
 #, c-format
 msgid "Could not append '%s'"
 msgstr "Không thể nối thêm “%s”"
 
-#: builtin/remote.c:689
+#: builtin/remote.c:691
 #, c-format
 msgid "Could not set '%s'"
 msgstr "Không thể đặt “%s”"
 
-#: builtin/remote.c:711
+#: builtin/remote.c:713
 #, c-format
 msgid "deleting '%s' failed"
-msgstr "gặp lỗi khi xoá “%s”"
+msgstr "gặp lỗi khi xóa “%s”"
 
-#: builtin/remote.c:745
+#: builtin/remote.c:747
 #, c-format
 msgid "creating '%s' failed"
 msgstr "gặp lỗi khi tạo “%s”"
 
-#: builtin/remote.c:769
+#: builtin/remote.c:766
 #, c-format
 msgid "Could not remove branch %s"
 msgstr "Không thể gỡ bỏ nhánh “%s”"
 
-#: builtin/remote.c:836
+#: builtin/remote.c:833
 msgid ""
 "Note: A branch outside the refs/remotes/ hierarchy was not removed;\n"
 "to delete it, use:"
 msgid_plural ""
 "Note: Some branches outside the refs/remotes/ hierarchy were not removed;\n"
 "to delete them, use:"
 msgstr[0] ""
-"Chú ý: Một nhánh nằm ngoài hệ thống refs/remotes/ đã không được gỡ bỏ đi;\n"
-"để xóa đi, sử dụng:"
-msgstr[1] ""
 "Chú ý: Một số nhánh nằm ngoài hệ thống refs/remotes/ đã không được gỡ bỏ "
 "đi;\n"
 "để xóa đi, sử dụng:"
 
-#: builtin/remote.c:951
+#: builtin/remote.c:948
 #, c-format
 msgid " new (next fetch will store in remotes/%s)"
 msgstr " mới (lần lấy về tiếp theo sẽ lưu trong remotes/%s)"
 
-#: builtin/remote.c:954
+#: builtin/remote.c:951
 msgid " tracked"
 msgstr " được theo dõi"
 
-#: builtin/remote.c:956
+#: builtin/remote.c:953
 msgid " stale (use 'git remote prune' to remove)"
 msgstr " cũ rích (dùng “git remote prune” để gỡ bỏ)"
 
-#: builtin/remote.c:958
+#: builtin/remote.c:955
 msgid " ???"
 msgstr " ???"
 
-#: builtin/remote.c:999
+#: builtin/remote.c:996
 #, c-format
 msgid "invalid branch.%s.merge; cannot rebase onto > 1 branch"
 msgstr "branch.%s.merge không hợp lệ; không thể cải tổ về phía > 1 nhánh"
 
-#: builtin/remote.c:1006
+#: builtin/remote.c:1003
 #, c-format
 msgid "rebases onto remote %s"
 msgstr "thực hiện rebase trên máy chủ %s"
 
-#: builtin/remote.c:1009
+#: builtin/remote.c:1006
 #, c-format
 msgid " merges with remote %s"
 msgstr " hòa trộn với máy chủ %s"
 
-#: builtin/remote.c:1010
+#: builtin/remote.c:1007
 msgid "    and with remote"
 msgstr "    và với máy chủ"
 
-#: builtin/remote.c:1012
+#: builtin/remote.c:1009
 #, c-format
 msgid "merges with remote %s"
 msgstr "hòa trộn với máy chủ %s"
 
-#: builtin/remote.c:1013
+#: builtin/remote.c:1010
 msgid "   and with remote"
 msgstr "   và với máy chủ"
 
-#: builtin/remote.c:1059
+#: builtin/remote.c:1056
 msgid "create"
 msgstr "tạo"
 
-#: builtin/remote.c:1062
+#: builtin/remote.c:1059
 msgid "delete"
-msgstr "xoá"
+msgstr "xóa"
 
-#: builtin/remote.c:1066
+#: builtin/remote.c:1063
 msgid "up to date"
 msgstr "đã cập nhật"
 
-#: builtin/remote.c:1069
+#: builtin/remote.c:1066
 msgid "fast-forwardable"
 msgstr "có-thể-fast-forward"
 
-#: builtin/remote.c:1072
+#: builtin/remote.c:1069
 msgid "local out of date"
 msgstr "dữ liệu nội bộ đã cũ"
 
-#: builtin/remote.c:1079
+#: builtin/remote.c:1076
 #, c-format
 msgid "    %-*s forces to %-*s (%s)"
 msgstr "    %-*s ép buộc thành %-*s (%s)"
 
-#: builtin/remote.c:1082
+#: builtin/remote.c:1079
 #, c-format
 msgid "    %-*s pushes to %-*s (%s)"
 msgstr "    %-*s đẩy lên thành %-*s (%s)"
 
-#: builtin/remote.c:1086
+#: builtin/remote.c:1083
 #, c-format
 msgid "    %-*s forces to %s"
 msgstr "    %-*s ép buộc thành %s"
 
-#: builtin/remote.c:1089
+#: builtin/remote.c:1086
 #, c-format
 msgid "    %-*s pushes to %s"
 msgstr "    %-*s đẩy lên thành %s"
 
-#: builtin/remote.c:1157
+#: builtin/remote.c:1154
 msgid "do not query remotes"
 msgstr "không truy vấn các máy chủ"
 
-#: builtin/remote.c:1184
+#: builtin/remote.c:1181
 #, c-format
 msgid "* remote %s"
 msgstr "* máy chủ %s"
 
-#: builtin/remote.c:1185
+#: builtin/remote.c:1182
 #, c-format
 msgid "  Fetch URL: %s"
 msgstr "  URL để lấy về: %s"
 
-#: builtin/remote.c:1186 builtin/remote.c:1333
+#: builtin/remote.c:1183 builtin/remote.c:1334
 msgid "(no URL)"
 msgstr "(không có URL)"
 
-#: builtin/remote.c:1195 builtin/remote.c:1197
+#: builtin/remote.c:1192 builtin/remote.c:1194
 #, c-format
 msgid "  Push  URL: %s"
 msgstr "  URL để đẩy lên: %s"
 
-#: builtin/remote.c:1199 builtin/remote.c:1201 builtin/remote.c:1203
+#: builtin/remote.c:1196 builtin/remote.c:1198 builtin/remote.c:1200
 #, c-format
 msgid "  HEAD branch: %s"
 msgstr "  Nhánh HEAD: %s"
 
-#: builtin/remote.c:1205
+#: builtin/remote.c:1202
 #, c-format
 msgid ""
 "  HEAD branch (remote HEAD is ambiguous, may be one of the following):\n"
 msgstr "  nhánh HEAD (HEAD máy chủ chưa rõ ràng, có lẽ là một trong số sau):\n"
 
-#: builtin/remote.c:1217
+#: builtin/remote.c:1214
 #, c-format
 msgid "  Remote branch:%s"
 msgid_plural "  Remote branches:%s"
-msgstr[0] "  Nhánh trên máy chủ:%s"
-msgstr[1] "  Những nhánh trên máy chủ:%s"
+msgstr[0] "  Những nhánh trên máy chủ:%s"
 
-#: builtin/remote.c:1220 builtin/remote.c:1247
+#: builtin/remote.c:1217 builtin/remote.c:1244
 msgid " (status not queried)"
 msgstr " (trạng thái không được yêu cầu)"
 
-#: builtin/remote.c:1229
+#: builtin/remote.c:1226
 msgid "  Local branch configured for 'git pull':"
 msgid_plural "  Local branches configured for 'git pull':"
-msgstr[0] "  Nhánh nội bộ đã được cấu hình cho lệnh “git pull”:"
-msgstr[1] "  Những nhánh nội bộ đã được cấu hình cho lệnh “git pull”:"
+msgstr[0] "  Những nhánh nội bộ đã được cấu hình cho lệnh “git pull”:"
 
-#: builtin/remote.c:1237
+#: builtin/remote.c:1234
 msgid "  Local refs will be mirrored by 'git push'"
 msgstr "  refs nội bộ sẽ được phản chiếu bởi lệnh “git push”"
 
-#: builtin/remote.c:1244
+#: builtin/remote.c:1241
 #, c-format
 msgid "  Local ref configured for 'git push'%s:"
 msgid_plural "  Local refs configured for 'git push'%s:"
-msgstr[0] "  Tham chiếu nội bộ được cấu hình cho lệnh “git push”%s:"
-msgstr[1] "  Những tham chiếu nội bộ được cấu hình cho lệnh “git push”%s:"
+msgstr[0] "  Những tham chiếu nội bộ được cấu hình cho lệnh “git push”%s:"
 
-#: builtin/remote.c:1265
+#: builtin/remote.c:1262
 msgid "set refs/remotes/<name>/HEAD according to remote"
 msgstr "đặt refs/remotes/<tên>/HEAD cho phù hợp với máy chủ"
 
-#: builtin/remote.c:1267
+#: builtin/remote.c:1264
 msgid "delete refs/remotes/<name>/HEAD"
 msgstr "xóa refs/remotes/<tên>/HEAD"
 
-#: builtin/remote.c:1282
+#: builtin/remote.c:1279
 msgid "Cannot determine remote HEAD"
 msgstr "Không thể xác định được HEAD máy chủ"
 
-#: builtin/remote.c:1284
+#: builtin/remote.c:1281
 msgid "Multiple remote HEAD branches. Please choose one explicitly with:"
 msgstr "Nhiều nhánh HEAD máy chủ. Hãy chọn rõ ràng một:"
 
-#: builtin/remote.c:1294
+#: builtin/remote.c:1291
 #, c-format
 msgid "Could not delete %s"
 msgstr "Không thể xóa bỏ %s"
 
-#: builtin/remote.c:1302
+#: builtin/remote.c:1299
 #, c-format
 msgid "Not a valid ref: %s"
 msgstr "Không phải là tham chiếu hợp lệ: %s"
 
-#: builtin/remote.c:1304
+#: builtin/remote.c:1301
 #, c-format
 msgid "Could not setup %s"
 msgstr "Không thể cài đặt %s"
 
-#: builtin/remote.c:1322
+#: builtin/remote.c:1319
 #, c-format
 msgid " %s will become dangling!"
 msgstr " %s sẽ trở thành không đầu (không được quản lý)!"
 
-#: builtin/remote.c:1323
+#: builtin/remote.c:1320
 #, c-format
 msgid " %s has become dangling!"
 msgstr " %s đã trở thành không đầu (không được quản lý)!"
 
-#: builtin/remote.c:1329
+#: builtin/remote.c:1330
 #, c-format
 msgid "Pruning %s"
 msgstr "Đang xén bớt %s"
 
-#: builtin/remote.c:1330
+#: builtin/remote.c:1331
 #, c-format
 msgid "URL: %s"
 msgstr "URL: %s"
 
-#: builtin/remote.c:1357
+#: builtin/remote.c:1354
 #, c-format
 msgid " * [would prune] %s"
 msgstr " * [nên xén bớt] %s"
 
-#: builtin/remote.c:1360
+#: builtin/remote.c:1357
 #, c-format
 msgid " * [pruned] %s"
-msgstr " *[đã bị xén] %s"
+msgstr " * [đã bị xén] %s"
 
-#: builtin/remote.c:1405
+#: builtin/remote.c:1402
 msgid "prune remotes after fetching"
 msgstr "cắt máy chủ sau khi lấy về"
 
-#: builtin/remote.c:1471 builtin/remote.c:1545
+#: builtin/remote.c:1468 builtin/remote.c:1542
 #, c-format
 msgid "No such remote '%s'"
 msgstr "Không có máy chủ nào có tên “%s”"
 
-#: builtin/remote.c:1491
+#: builtin/remote.c:1488
 msgid "add branch"
 msgstr "thêm nhánh"
 
-#: builtin/remote.c:1498
+#: builtin/remote.c:1495
 msgid "no remote specified"
 msgstr "chưa chỉ ra máy chủ nào"
 
-#: builtin/remote.c:1520
+#: builtin/remote.c:1517
 msgid "manipulate push URLs"
 msgstr "đẩy các “URL” bằng tay"
 
-#: builtin/remote.c:1522
+#: builtin/remote.c:1519
 msgid "add URL"
 msgstr "thêm URL"
 
-#: builtin/remote.c:1524
+#: builtin/remote.c:1521
 msgid "delete URLs"
 msgstr "xóa URLs"
 
-#: builtin/remote.c:1531
+#: builtin/remote.c:1528
 msgid "--add --delete doesn't make sense"
 msgstr "--add --delete không hợp lý"
 
-#: builtin/remote.c:1571
+#: builtin/remote.c:1568
 #, c-format
 msgid "Invalid old URL pattern: %s"
 msgstr "Kiểu mẫu URL cũ không hợp lệ: %s"
 
-#: builtin/remote.c:1579
+#: builtin/remote.c:1576
 #, c-format
 msgid "No such URL found: %s"
 msgstr "Không tìm thấy URL như vậy: %s"
 
-#: builtin/remote.c:1581
+#: builtin/remote.c:1578
 msgid "Will not delete all non-push URLs"
 msgstr "Sẽ không xóa những địa chỉ URL không-push"
 
-#: builtin/remote.c:1595
+#: builtin/remote.c:1592
 msgid "be verbose; must be placed before a subcommand"
 msgstr "chi tiết; phải được đặt trước một lệnh-con"
 
 #: builtin/repack.c:17
 msgid "git repack [options]"
 msgstr "git repack [các-tùy-chọn]"
 
-#: builtin/repack.c:160
+#: builtin/repack.c:159
 msgid "pack everything in a single pack"
 msgstr "đóng gói mọi thứ trong một gói đơn"
 
-#: builtin/repack.c:162
+#: builtin/repack.c:161
 msgid "same as -a, and turn unreachable objects loose"
 msgstr "giống với -a, và chỉnh sửa các đối tượng không đọc được thiếu sót"
 
-#: builtin/repack.c:165
+#: builtin/repack.c:164
 msgid "remove redundant packs, and run git-prune-packed"
 msgstr "xóa bỏ các gói dư thừa, và chạy git-prune-packed"
 
-#: builtin/repack.c:167
+#: builtin/repack.c:166
 msgid "pass --no-reuse-delta to git-pack-objects"
 msgstr "chuyển --no-reuse-delta cho git-pack-objects"
 
-#: builtin/repack.c:169
+#: builtin/repack.c:168
 msgid "pass --no-reuse-object to git-pack-objects"
 msgstr "chuyển --no-reuse-object cho git-pack-objects"
 
-#: builtin/repack.c:171
+#: builtin/repack.c:170
 msgid "do not run git-update-server-info"
 msgstr "không chạy git-update-server-info"
 
-#: builtin/repack.c:174
+#: builtin/repack.c:173
 msgid "pass --local to git-pack-objects"
 msgstr "chuyển --local cho git-pack-objects"
 
-#: builtin/repack.c:176
+#: builtin/repack.c:175
 msgid "write bitmap index"
 msgstr "ghi mục lục ánh xạ"
 
-#: builtin/repack.c:177
+#: builtin/repack.c:176
 msgid "approxidate"
 msgstr "ngày ước tính"
 
-#: builtin/repack.c:178
+#: builtin/repack.c:177
 msgid "with -A, do not loosen objects older than this"
 msgstr "với -A, các đối tượng cũ hơn khoảng thời gian này thì không bị mất"
 
-#: builtin/repack.c:180
+#: builtin/repack.c:179
 msgid "size of the window used for delta compression"
 msgstr "kích thước cửa sổ được dùng cho nén “delta”"
 
-#: builtin/repack.c:181 builtin/repack.c:185
+#: builtin/repack.c:180 builtin/repack.c:184
 msgid "bytes"
 msgstr "byte"
 
-#: builtin/repack.c:182
+#: builtin/repack.c:181
 msgid "same as the above, but limit memory size instead of entries count"
 msgstr "giống như trên, nhưng giới hạn kích thước bộ nhớ hay vì số lượng"
 
-#: builtin/repack.c:184
+#: builtin/repack.c:183
 msgid "limits the maximum delta depth"
 msgstr "giới hạn độ sâu tối đa của “delta”"
 
-#: builtin/repack.c:186
+#: builtin/repack.c:185
 msgid "maximum size of each packfile"
 msgstr "kcíh thước tối đa cho từng tập tin gói"
 
-#: builtin/repack.c:188
+#: builtin/repack.c:187
 msgid "repack objects in packs marked with .keep"
 msgstr "đóng gói lại các đối tượng trong các gói đã đánh dấu bằng .keep"
 
-#: builtin/repack.c:374
+#: builtin/repack.c:371
 #, c-format
 msgid "removing '%s' failed"
 msgstr "gặp lỗi khi xóa bỏ “%s”"
 
 #: builtin/replace.c:19
 msgid "git replace [-f] <object> <replacement>"
@@ -9068,17 +9032,17 @@
 #: builtin/replace.c:20
 msgid "git replace [-f] --edit <object>"
 msgstr "git replace [-f] --edit <đối tượng>"
 
 #: builtin/replace.c:21
 msgid "git replace [-f] --graft <commit> [<parent>...]"
-msgstr "git replace [-f] --graft <lần_chuyển_giao> [<cha_mẹ>...]"
+msgstr "git replace [-f] --graft <lần_chuyển_giao> [<cha_mẹ>…]"
 
 #: builtin/replace.c:22
 msgid "git replace -d <object>..."
-msgstr "git replace -d <đối tượng>..."
+msgstr "git replace -d <đối tượng>…"
 
 #: builtin/replace.c:23
 msgid "git replace [--format=<format>] [-l [<pattern>]]"
 msgstr "git replace [--format=<định_dạng>] [-l [<mẫu>]]"
 
 #: builtin/replace.c:325 builtin/replace.c:363 builtin/replace.c:391
@@ -9146,13 +9110,13 @@
 #: builtin/replace.c:438
 msgid "use this format"
 msgstr "dùng định dạng này"
 
 #: builtin/rerere.c:12
 msgid "git rerere [clear | forget path... | status | remaining | diff | gc]"
-msgstr "git rerere [clear | forget path... | status | remaining | diff | gc]"
+msgstr "git rerere [clear | forget path… | status | remaining | diff | gc]"
 
 #: builtin/rerere.c:57
 msgid "register clean resolutions in index"
 msgstr "sổ ghi dọn sạch các phân giải trong bản mục lục"
 
 #: builtin/reset.c:26
@@ -9160,17 +9124,17 @@
 "git reset [--mixed | --soft | --hard | --merge | --keep] [-q] [<commit>]"
 msgstr ""
 "git reset [--mixed | --soft | --hard | --merge | --keep] [-q] [<commit>]"
 
 #: builtin/reset.c:27
 msgid "git reset [-q] <tree-ish> [--] <paths>..."
-msgstr "git reset [-q] <tree-ish> [--] <đường-dẫn>..."
+msgstr "git reset [-q] <tree-ish> [--] <đường-dẫn>…"
 
 #: builtin/reset.c:28
 msgid "git reset --patch [<tree-ish>] [--] [<paths>...]"
-msgstr "git reset --patch [<tree-ish>] [--] [<các-đường-dẫn>...]"
+msgstr "git reset --patch [<tree-ish>] [--] [<các-đường-dẫn>…]"
 
 #: builtin/reset.c:34
 msgid "mixed"
 msgstr "pha trộn"
 
 #: builtin/reset.c:34
@@ -9287,13 +9251,13 @@
 #: builtin/reset.c:374
 msgid "Could not write new index file."
 msgstr "Không thể ghi tập tin lưu bảng mục lục mới."
 
 #: builtin/rev-parse.c:361
 msgid "git rev-parse --parseopt [options] -- [<args>...]"
-msgstr "git rev-parse --parseopt [các-tùy-chọn] -- [<th.số>...]"
+msgstr "git rev-parse --parseopt [các-tùy-chọn] -- [<th.số>…]"
 
 #: builtin/rev-parse.c:366
 msgid "keep the `--` passed as an arg"
 msgstr "giữ lại “--” chuyển sang làm tham số"
 
 #: builtin/rev-parse.c:368
@@ -9309,29 +9273,29 @@
 "git rev-parse --parseopt [options] -- [<args>...]\n"
 "   or: git rev-parse --sq-quote [<arg>...]\n"
 "   or: git rev-parse [options] [<arg>...]\n"
 "\n"
 "Run \"git rev-parse --parseopt -h\" for more information on the first usage."
 msgstr ""
-"git rev-parse --parseopt [các-tùy-chọn] -- [<đ.số>...]\n"
-"   hoặc: git rev-parse --sq-quote [<đ.số>...]\n"
-"   hoặc: git rev-parse [các-tùy-chọn] [<đ.số>...]\n"
+"git rev-parse --parseopt [các-tùy-chọn] -- [<đ.số>…]\n"
+"   hoặc: git rev-parse --sq-quote [<đ.số>…]\n"
+"   hoặc: git rev-parse [các-tùy-chọn] [<đ.số>…]\n"
 "\n"
 "Chạy lệnh \"git rev-parse --parseopt -h\" để có thêm thông tin về cách dùng."
 
 #: builtin/revert.c:22
 msgid "git revert [options] <commit-ish>..."
-msgstr "git revert [các-tùy-chọn] <commit-ish>..."
+msgstr "git revert [các-tùy-chọn] <commit-ish>…"
 
 #: builtin/revert.c:23
 msgid "git revert <subcommand>"
 msgstr "git revert <lệnh-con>"
 
 #: builtin/revert.c:28
 msgid "git cherry-pick [options] <commit-ish>..."
-msgstr "git cherry-pick [các-tùy-chọn] <commit-ish>..."
+msgstr "git cherry-pick [các-tùy-chọn] <commit-ish>…"
 
 #: builtin/revert.c:29
 msgid "git cherry-pick <subcommand>"
 msgstr "git cherry-pick <lệnh-con>"
 
 #: builtin/revert.c:71
@@ -9406,25 +9370,22 @@
 #: builtin/revert.c:212
 msgid "cherry-pick failed"
 msgstr "cherry-pick gặp lỗi"
 
 #: builtin/rm.c:17
 msgid "git rm [options] [--] <file>..."
-msgstr "git rm [các-tùy-chọn] [--] <tập-tin>..."
+msgstr "git rm [các-tùy-chọn] [--] <tập-tin>…"
 
 #: builtin/rm.c:65
 msgid ""
 "the following submodule (or one of its nested submodules)\n"
 "uses a .git directory:"
 msgid_plural ""
 "the following submodules (or one of their nested submodules)\n"
 "use a .git directory:"
 msgstr[0] ""
-"mô-đun-con sau đây (hay một trong số mô-đun-con bên trong của nó)\n"
-"dùng một thư mục .git:"
-msgstr[1] ""
 "các mô-đun-con sau đây (hay một trong số mô-đun-con bên trong của nó)\n"
 "dùng một thư mục .git:"
 
 #: builtin/rm.c:71
 msgid ""
 "\n"
@@ -9439,15 +9400,12 @@
 "the following file has staged content different from both the\n"
 "file and the HEAD:"
 msgid_plural ""
 "the following files have staged content different from both the\n"
 "file and the HEAD:"
 msgstr[0] ""
-"tập tin sau đây có trạng thái khác biệt nội dung từ cả tập tin\n"
-"và cả HEAD:"
-msgstr[1] ""
 "các tập tin sau đây có trạng thái khác biệt nội dung từ cả tập tin\n"
 "và cả HEAD:"
 
 #: builtin/rm.c:236
 msgid ""
 "\n"
@@ -9456,28 +9414,26 @@
 "\n"
 "(dùng -f để buộc gỡ bỏ)"
 
 #: builtin/rm.c:240
 msgid "the following file has changes staged in the index:"
 msgid_plural "the following files have changes staged in the index:"
-msgstr[0] "tập tin sau đây có thay đổi trạng thái trong bảng mục lục:"
-msgstr[1] "các tập tin sau đây có thay đổi trạng thái trong bảng mục lục:"
+msgstr[0] "các tập tin sau đây có thay đổi trạng thái trong bảng mục lục:"
 
 #: builtin/rm.c:244 builtin/rm.c:255
 msgid ""
 "\n"
 "(use --cached to keep the file, or -f to force removal)"
 msgstr ""
 "\n"
 "(dùng tùy chọn --cached để giữ tập tin, hoặc -f để ép buộc gỡ bỏ)"
 
 #: builtin/rm.c:252
 msgid "the following file has local modifications:"
 msgid_plural "the following files have local modifications:"
-msgstr[0] "tập tin sau đây có những thay đổi nội bộ:"
-msgstr[1] "những tập tin sau đây có những thay đổi nội bộ:"
+msgstr[0] "những tập tin sau đây có những thay đổi nội bộ:"
 
 #: builtin/rm.c:270
 msgid "do not list removed files"
 msgstr "không liệt kê các tập tin đã gỡ bỏ"
 
 #: builtin/rm.c:271
@@ -9511,13 +9467,13 @@
 #, c-format
 msgid "git rm: unable to remove %s"
 msgstr "git rm: không thể gỡ bỏ %s"
 
 #: builtin/shortlog.c:13
 msgid "git shortlog [<options>] [<revision range>] [[--] [<path>...]]"
-msgstr "git shortlog [các-tùy-chọn] [<vùng-xét-duyệt>] [[--] [<đường-dẫn>...]]"
+msgstr "git shortlog [các-tùy-chọn] [<vùng-xét-duyệt>] [[--] [<đường-dẫn>…]]"
 
 #: builtin/shortlog.c:131
 #, c-format
 msgid "Missing author: %s"
 msgstr "Thiếu tên tác giả: %s"
 
@@ -9540,87 +9496,87 @@
 #: builtin/shortlog.c:236
 msgid "Linewrap output"
 msgstr "Ngắt dòng khi quá dài"
 
 #: builtin/show-branch.c:9
 msgid ""
-"git show-branch [-a|--all] [-r|--remotes] [--topo-order | --date-order] [--"
-"current] [--color[=<when>] | --no-color] [--sparse] [--more=<n> | --list | --"
-"independent | --merge-base] [--no-name | --sha1-name] [--topics] [(<rev> | "
-"<glob>)...]"
-msgstr ""
-"git show-branch [-a|--all] [-r|--remotes] [--topo-order | --date-order] [--"
-"current] [--color[=<khi>] | --no-color] [--sparse] [--more=<n> | --list | --"
-"independent | --merge-base] [--no-name | --sha1-name] [--topics] [(<rev> | "
-"<glob>)...]"
+"git show-branch [-a|--all] [-r|--remotes] [--topo-order | --date-order]\n"
+"\t\t[--current] [--color[=<when>] | --no-color] [--sparse]\n"
+"\t\t[--more=<n> | --list | --independent | --merge-base]\n"
+"\t\t[--no-name | --sha1-name] [--topics] [(<rev> | <glob>)...]"
+msgstr ""
+"git show-branch [-a|--all] [-r|--remotes] [--topo-order | --date-order]\n"
+"\t\t[--current] [--color[=<khi>] | --no-color] [--sparse]\n"
+"\t\t[--more=<n> | --list | --independent | --merge-base]\n"
+"\t\t[--no-name | --sha1-name] [--topics] [(<rev> | <glob>)…]"
 
-#: builtin/show-branch.c:10
+#: builtin/show-branch.c:13
 msgid "git show-branch (-g|--reflog)[=<n>[,<base>]] [--list] [<ref>]"
 msgstr "git show-branch (-g|--reflog)[=<n>[,<nền>]] [--list] [<ref>]"
 
-#: builtin/show-branch.c:649
+#: builtin/show-branch.c:652
 msgid "show remote-tracking and local branches"
 msgstr "hiển thị các nhánh remote-tracking và nội bộ"
 
-#: builtin/show-branch.c:651
+#: builtin/show-branch.c:654
 msgid "show remote-tracking branches"
 msgstr "hiển thị các nhánh remote-tracking"
 
-#: builtin/show-branch.c:653
+#: builtin/show-branch.c:656
 msgid "color '*!+-' corresponding to the branch"
 msgstr "màu “*!+-” tương ứng với nhánh"
 
-#: builtin/show-branch.c:655
+#: builtin/show-branch.c:658
 msgid "show <n> more commits after the common ancestor"
 msgstr "hiển thị thêm <n> lần chuyển giao sau cha mẹ chung"
 
-#: builtin/show-branch.c:657
+#: builtin/show-branch.c:660
 msgid "synonym to more=-1"
 msgstr "đồng nghĩa với more=-1"
 
-#: builtin/show-branch.c:658
+#: builtin/show-branch.c:661
 msgid "suppress naming strings"
 msgstr "chặn các chuỗi đặt tên"
 
-#: builtin/show-branch.c:660
+#: builtin/show-branch.c:663
 msgid "include the current branch"
 msgstr "bao gồm nhánh hiện hành"
 
-#: builtin/show-branch.c:662
+#: builtin/show-branch.c:665
 msgid "name commits with their object names"
 msgstr "đặt tên các lần chuyển giao bằng các tên của đối tượng của chúng"
 
-#: builtin/show-branch.c:664
+#: builtin/show-branch.c:667
 msgid "show possible merge bases"
 msgstr "hiển thị mọi cơ sở có thể dùng để hòa trộn"
 
-#: builtin/show-branch.c:666
+#: builtin/show-branch.c:669
 msgid "show refs unreachable from any other ref"
 msgstr "hiển thị các tham chiếu không thể được đọc bởi bất kỳ tham chiếu khác"
 
-#: builtin/show-branch.c:668
+#: builtin/show-branch.c:671
 msgid "show commits in topological order"
 msgstr "hiển thị các lần chuyển giao theo thứ tự tôpô"
 
-#: builtin/show-branch.c:671
+#: builtin/show-branch.c:674
 msgid "show only commits not on the first branch"
 msgstr "chỉ hiển thị các lần chuyển giao không nằm trên nhánh đầu tiên"
 
-#: builtin/show-branch.c:673
+#: builtin/show-branch.c:676
 msgid "show merges reachable from only one tip"
 msgstr "hiển thị các lần hòa trộn có thể đọc được chỉ từ một đầu mút"
 
-#: builtin/show-branch.c:675
+#: builtin/show-branch.c:678
 msgid "topologically sort, maintaining date order where possible"
 msgstr "sắp xếp hình thái học, bảo trì thứ tự ngày nếu có thể"
 
-#: builtin/show-branch.c:678
+#: builtin/show-branch.c:681
 msgid "<n>[,<base>]"
 msgstr "<n>[,<cơ_sở>]"
 
-#: builtin/show-branch.c:679
+#: builtin/show-branch.c:682
 msgid "show <n> most recent ref-log entries starting at base"
 msgstr "hiển thị <n> các mục “ref-log” gần nhất kể từ nền (base)"
 
 #: builtin/show-ref.c:10
 msgid ""
 "git show-ref [-q|--quiet] [--verify] [--head] [-d|--dereference] [-s|--"
@@ -9668,13 +9624,13 @@
 msgstr ""
 "hiển thị các tham chiếu từ đầu vào tiêu chuẩn (stdin) cái mà không ở kho nội "
 "bộ"
 
 #: builtin/symbolic-ref.c:7
 msgid "git symbolic-ref [options] name [ref]"
-msgstr "git symbolic-ref  [các-tùy-chọn] tên [t.chiếu]"
+msgstr "git symbolic-ref [các-tùy-chọn] tên [t.chiếu]"
 
 #: builtin/symbolic-ref.c:8
 msgid "git symbolic-ref -d [-q] name"
 msgstr "git symbolic-ref -d [-q] tên"
 
 #: builtin/symbolic-ref.c:40
@@ -9686,51 +9642,51 @@
 msgstr "xóa tham chiếu mềm"
 
 #: builtin/symbolic-ref.c:42
 msgid "shorten ref output"
 msgstr "làm ngắn kết xuất ref (tham chiếu)"
 
-#: builtin/symbolic-ref.c:43 builtin/update-ref.c:362
+#: builtin/symbolic-ref.c:43 builtin/update-ref.c:358
 msgid "reason"
 msgstr "lý do"
 
-#: builtin/symbolic-ref.c:43 builtin/update-ref.c:362
+#: builtin/symbolic-ref.c:43 builtin/update-ref.c:358
 msgid "reason of the update"
 msgstr "lý do cập nhật"
 
 #: builtin/tag.c:22
 msgid ""
 "git tag [-a|-s|-u <key-id>] [-f] [-m <msg>|-F <file>] <tagname> [<head>]"
 msgstr ""
 "git tag [-a|-s|-u <key-id>] [-f] [-m <msg>|-F <tập-tin>] <tên-thẻ> [<head>]"
 
 #: builtin/tag.c:23
 msgid "git tag -d <tagname>..."
-msgstr "git tag -d <tên-thẻ>..."
+msgstr "git tag -d <tên-thẻ>…"
 
 #: builtin/tag.c:24
 msgid ""
 "git tag -l [-n[<num>]] [--contains <commit>] [--points-at <object>] \n"
 "\t\t[<pattern>...]"
 msgstr ""
 "git tag -l [-n[<num>]] [--contains <commit>] [--points-at <đối-tượng>] \n"
-"\t\t[<mẫu>...]"
+"\t\t[<mẫu>…]"
 
 #: builtin/tag.c:26
 msgid "git tag -v <tagname>..."
-msgstr "git tag -v <tên-thẻ>..."
+msgstr "git tag -v <tên-thẻ>…"
 
 #: builtin/tag.c:69
 #, c-format
 msgid "malformed object at '%s'"
 msgstr "đối tượng dị hình tại “%s”"
 
 #: builtin/tag.c:301
 #, c-format
 msgid "tag name too long: %.*s..."
-msgstr "tên thẻ quá dài: %.*s..."
+msgstr "tên thẻ quá dài: %.*s…"
 
 #: builtin/tag.c:306
 #, c-format
 msgid "tag '%s' not found."
 msgstr "không tìm thấy tìm thấy thẻ “%s”."
 
@@ -9922,13 +9878,13 @@
 #: builtin/unpack-objects.c:489
 msgid "Unpacking objects"
 msgstr "Đang giải nén các đối tượng"
 
 #: builtin/update-index.c:403
 msgid "git update-index [options] [--] [<file>...]"
-msgstr "git update-index [các-tùy-chọn] [<tập-tin>...]"
+msgstr "git update-index [các-tùy-chọn] [<tập-tin>…]"
 
 #: builtin/update-index.c:756
 msgid "continue refresh even when index needs update"
 msgstr "tiếp tục làm mới ngay cả khi bảng mục lục cần được cập nhật"
 
 #: builtin/update-index.c:759
@@ -9979,13 +9935,13 @@
 #: builtin/update-index.c:789
 msgid "mark files as \"not changing\""
 msgstr "Đánh dấu các tập tin là \"không thay đổi\""
 
 #: builtin/update-index.c:792
 msgid "clear assumed-unchanged bit"
-msgstr "xóa bít  assumed-unchanged"
+msgstr "xóa bít assumed-unchanged (giả định là không thay đổi)"
 
 #: builtin/update-index.c:795
 msgid "mark files as \"index-only\""
 msgstr "đánh dấu các tập tin là “chỉ-đọc”"
 
 #: builtin/update-index.c:798
@@ -10052,25 +10008,25 @@
 msgstr "git update-ref [các-tùy-chọn]    <refname> <biến-mới> [<biến-cũ>]"
 
 #: builtin/update-ref.c:11
 msgid "git update-ref [options] --stdin [-z]"
 msgstr "git update-ref [các-tùy-chọn] --stdin [-z]"
 
-#: builtin/update-ref.c:363
+#: builtin/update-ref.c:359
 msgid "delete the reference"
 msgstr "xóa tham chiếu"
 
-#: builtin/update-ref.c:365
+#: builtin/update-ref.c:361
 msgid "update <refname> not the one it points to"
 msgstr "cập nhật <tên-tham-chiếu> không phải cái nó chỉ tới"
 
-#: builtin/update-ref.c:366
+#: builtin/update-ref.c:362
 msgid "stdin has NUL-terminated arguments"
 msgstr "đầu vào tiêu chuẩn có các đối số được chấm dứt bởi NUL"
 
-#: builtin/update-ref.c:367
+#: builtin/update-ref.c:363
 msgid "read updates from stdin"
 msgstr "đọc cập nhật từ đầu vào tiêu chuẩn"
 
 #: builtin/update-server-info.c:6
 msgid "git update-server-info [--force]"
 msgstr "git update-server-info [--force]"
@@ -10078,45 +10034,45 @@
 #: builtin/update-server-info.c:14
 msgid "update the info files from scratch"
 msgstr "cập nhật các tập tin thông tin từ điểm xuất phát"
 
 #: builtin/verify-commit.c:17
 msgid "git verify-commit [-v|--verbose] <commit>..."
-msgstr "git verify-commit [-v|--verbose] <lần_chuyển_giao>..."
+msgstr "git verify-commit [-v|--verbose] <lần_chuyển_giao>…"
 
 #: builtin/verify-commit.c:75
 msgid "print commit contents"
 msgstr "hiển thị nội dung của lần chuyển giao"
 
 #: builtin/verify-pack.c:54
 msgid "git verify-pack [-v|--verbose] [-s|--stat-only] <pack>..."
-msgstr "git verify-pack [-v|--verbose] [-s|--stat-only] <gói>..."
+msgstr "git verify-pack [-v|--verbose] [-s|--stat-only] <gói>…"
 
 #: builtin/verify-pack.c:64
 msgid "verbose"
 msgstr "chi tiết"
 
 #: builtin/verify-pack.c:66
 msgid "show statistics only"
 msgstr "chỉ hiển thị thống kê"
 
 #: builtin/verify-tag.c:17
 msgid "git verify-tag [-v|--verbose] <tag>..."
-msgstr "git verify-tag [-v|--verbose] <thẻ>..."
+msgstr "git verify-tag [-v|--verbose] <thẻ>…"
 
 #: builtin/verify-tag.c:73
 msgid "print tag contents"
 msgstr "hiển thị nội dung của thẻ"
 
 #: builtin/write-tree.c:13
 msgid "git write-tree [--missing-ok] [--prefix=<prefix>/]"
 msgstr "git write-tree [--missing-ok] [--prefix=<tiền-tố>/]"
 
 #: builtin/write-tree.c:26
 msgid "<prefix>/"
-msgstr "<iền tố>/"
+msgstr "<tiền tố>/"
 
 #: builtin/write-tree.c:27
 msgid "write tree object for a subdirectory <prefix>"
 msgstr "ghi đối tượng cây (tree) cho <tiền tố> thư mục con"
 
 #: builtin/write-tree.c:30
@@ -10124,13 +10080,13 @@
 msgstr "chỉ hữu ích khi cần gỡ lỗi"
 
 #: credential-cache--daemon.c:267
 msgid "print debugging messages to stderr"
 msgstr "in thông tin gỡ lỗi ra đầu ra lỗi tiêu chuẩn"
 
-#: git.c:17
+#: git.c:14
 msgid ""
 "'git help -a' and 'git help -g' list available subcommands and some\n"
 "concept guides. See 'git help <command>' or 'git help <concept>'\n"
 "to read about a specific subcommand or concept."
 msgstr ""
 "“git help -a” và “git help -g” liệt kê các câu lệnh con sẵn có và một số\n"
@@ -10246,192 +10202,192 @@
 msgstr "sử dụng <n> chữ số để hiển thị SHA-1s"
 
 #: rerere.h:27
 msgid "update the index with reused conflict resolution if possible"
 msgstr "cập nhật bảng mục lục với phân giải xung đột dùng lại nếu được"
 
-#: git-am.sh:52
+#: git-am.sh:53
 msgid "You need to set your committer info first"
 msgstr "Bạn cần đặt thông tin về người chuyển giao mã nguồn trước đã"
 
-#: git-am.sh:97
+#: git-am.sh:98
 msgid ""
 "You seem to have moved HEAD since the last 'am' failure.\n"
 "Not rewinding to ORIG_HEAD"
 msgstr ""
 "Bạn có lẽ đã có HEAD đã bị di chuyển đi kể từ lần “am” thất bại cuối cùng.\n"
 "Không thể chuyển tới ORIG_HEAD"
 
-#: git-am.sh:107
+#: git-am.sh:108
 #, sh-format
 msgid ""
 "When you have resolved this problem, run \"$cmdline --continue\".\n"
 "If you prefer to skip this patch, run \"$cmdline --skip\" instead.\n"
 "To restore the original branch and stop patching, run \"$cmdline --abort\"."
 msgstr ""
 "Khi bạn cần giải quyết vấn đề này hãy chạy lệnh \"$cmdline --continue\".\n"
 "Nếu bạn có ý định bỏ qua miếng vá, thay vào đó bạn chạy \"$cmdline --skip"
 "\".\n"
 "Để phục hồi lại thành nhánh nguyên thủy và dừng việc vá lại thì chạy "
 "\"$cmdline --abort\"."
 
-#: git-am.sh:123
+#: git-am.sh:124
 msgid "Cannot fall back to three-way merge."
 msgstr "Đang trở lại để hòa trộn kiểu “three-way”."
 
-#: git-am.sh:139
+#: git-am.sh:140
 msgid "Repository lacks necessary blobs to fall back on 3-way merge."
 msgstr "Kho thiếu đối tượng blob cần thiết để trở về trên “3-way merge”."
 
-#: git-am.sh:141
+#: git-am.sh:142
 msgid "Using index info to reconstruct a base tree..."
 msgstr ""
-"Sử dụng thông tin trong bảng mục lục để cấu trúc lại một cây (tree) cơ sở..."
+"Sử dụng thông tin trong bảng mục lục để cấu trúc lại một cây (tree) cơ sở…"
 
-#: git-am.sh:156
+#: git-am.sh:157
 msgid ""
 "Did you hand edit your patch?\n"
 "It does not apply to blobs recorded in its index."
 msgstr ""
 "Bạn đã sửa miếng vá của mình bằng cách thủ công à?\n"
 "Nó không thể áp dụng các blob đã được ghi lại trong bảng mục lục của nó."
 
-#: git-am.sh:165
+#: git-am.sh:166
 msgid "Falling back to patching base and 3-way merge..."
-msgstr "Đang trở lại để vá cơ sở và “3-way merge”..."
+msgstr "Đang trở lại để vá cơ sở và “hòa trộn 3-đường”…"
 
-#: git-am.sh:181
+#: git-am.sh:182
 msgid "Failed to merge in the changes."
 msgstr "Gặp lỗi khi trộn vào các thay đổi."
 
-#: git-am.sh:276
+#: git-am.sh:277
 msgid "Only one StGIT patch series can be applied at once"
 msgstr "Chỉ có một sê-ri miếng vá StGIT được áp dụng một lúc"
 
-#: git-am.sh:363
+#: git-am.sh:364
 #, sh-format
 msgid "Patch format $patch_format is not supported."
 msgstr "Định dạng miếng vá $patch_format không được hỗ trợ."
 
-#: git-am.sh:365
+#: git-am.sh:366
 msgid "Patch format detection failed."
 msgstr "Dò tìm định dạng miếng vá gặp lỗi."
 
-#: git-am.sh:392
+#: git-am.sh:398
 msgid ""
 "The -b/--binary option has been a no-op for long time, and\n"
 "it will be removed. Please do not use it anymore."
 msgstr ""
 "Tùy chọn -b/--binary đã không dùng từ lâu rồi, và\n"
 "nó sẽ được bỏ đi. Xin đừng sử dụng nó thêm nữa."
 
-#: git-am.sh:486
+#: git-am.sh:496
 #, sh-format
 msgid "previous rebase directory $dotest still exists but mbox given."
 msgstr "thư mục rebase trước $dotest vẫn chưa sẵn sàng nhưng mbox được đưa ra."
 
-#: git-am.sh:491
+#: git-am.sh:501
 msgid "Please make up your mind. --skip or --abort?"
 msgstr "Xin hãy rõ ràng. --skip hay --abort?"
 
-#: git-am.sh:527
+#: git-am.sh:537
 #, sh-format
 msgid ""
 "Stray $dotest directory found.\n"
 "Use \"git am --abort\" to remove it."
 msgstr ""
 "Tìm thấy thư mục lạc $dotest.\n"
 "Dùng \"git am --abort\" để loại bỏ nó đi."
 
-#: git-am.sh:535
+#: git-am.sh:545
 msgid "Resolve operation not in progress, we are not resuming."
 msgstr "Thao tác phân giải không được tiến hành, chúng ta không phục hồi lại."
 
-#: git-am.sh:601
+#: git-am.sh:612
 #, sh-format
 msgid "Dirty index: cannot apply patches (dirty: $files)"
 msgstr "Bảng mục lục sai: không thể áp dụng các miếng vá (sai: $files)"
 
-#: git-am.sh:705
+#: git-am.sh:722
 #, sh-format
 msgid ""
 "Patch is empty.  Was it split wrong?\n"
 "If you would prefer to skip this patch, instead run \"$cmdline --skip\".\n"
 "To restore the original branch and stop patching run \"$cmdline --abort\"."
 msgstr ""
 "Miếng vá trống rỗng.  Nó đã bị chia cắt sai phải không?\n"
 "Nếu bạn thích bỏ qua miếng vá này, hãy chạy lệnh sau để thay thế \"$cmdline "
 "--skip\".\n"
 "Để phục hồi lại nhánh nguyên thủy và dừng vá lại hãy chạy lệnh \"$cmdline --"
 "abort\"."
 
-#: git-am.sh:732
+#: git-am.sh:749
 msgid "Patch does not have a valid e-mail address."
 msgstr "Miếng vá không có địa chỉ thư điện tử hợp lệ."
 
-#: git-am.sh:779
+#: git-am.sh:796
 msgid "cannot be interactive without stdin connected to a terminal."
 msgstr ""
 "không thể được tương tác mà không có stdin kết nối với một thiết bị cuối"
 
-#: git-am.sh:783
+#: git-am.sh:800
 msgid "Commit Body is:"
 msgstr "Thân của lần chuyển giao là:"
 
 #. TRANSLATORS: Make sure to include [y], [n], [e], [v] and [a]
 #. in your translation. The program will only accept English
 #. input at this point.
-#: git-am.sh:790
+#: git-am.sh:807
 msgid "Apply? [y]es/[n]o/[e]dit/[v]iew patch/[a]ccept all "
 msgstr ""
 "Áp dụng? đồng ý [y]/khô[n]g/chỉnh sửa [e]/hiển thị miếng [v]á/đồng ý tất cả "
 "[a] "
 
-#: git-am.sh:826
+#: git-am.sh:843
 #, sh-format
 msgid "Applying: $FIRSTLINE"
 msgstr "Đang áp dụng (miếng vá): $FIRSTLINE"
 
-#: git-am.sh:847
+#: git-am.sh:864
 msgid ""
 "No changes - did you forget to use 'git add'?\n"
 "If there is nothing left to stage, chances are that something else\n"
 "already introduced the same changes; you might want to skip this patch."
 msgstr ""
 "Không có thay đổi nào - bạn đã quên sử dụng lệnh “git add” à?\n"
 "Nếu ở đây không có gì còn lại stage, tình cờ là có một số thứ khác\n"
 "đã sẵn được đưa vào với cùng nội dung thay đổi; bạn có lẽ muốn bỏ qua miếng "
 "vá này."
 
-#: git-am.sh:855
+#: git-am.sh:872
 msgid ""
 "You still have unmerged paths in your index\n"
 "did you forget to use 'git add'?"
 msgstr ""
 "Bạn vẫn có những đường dẫn chưa được hòa trộn trong bảng mục lục của mình\n"
 "bạn đã quên sử dụng lệnh “git add” à?"
 
-#: git-am.sh:871
+#: git-am.sh:888
 msgid "No changes -- Patch already applied."
 msgstr "Không thay đổi gì cả -- Miếng vá đã được áp dụng rồi."
 
-#: git-am.sh:881
+#: git-am.sh:898
 #, sh-format
 msgid "Patch failed at $msgnum $FIRSTLINE"
 msgstr "Gặp lỗi khi vá tại $msgnum $FIRSTLINE"
 
-#: git-am.sh:884
+#: git-am.sh:901
 #, sh-format
 msgid ""
 "The copy of the patch that failed is found in:\n"
 "   $dotest/patch"
 msgstr ""
 "Bản sao chép của miếng vá mà nó gặp lỗi thì được tìm thấy trong:\n"
 "   $dotest/patch"
 
-#: git-am.sh:902
+#: git-am.sh:919
 msgid "applying to an empty history"
 msgstr "áp dụng vào một lịch sử trống rỗng"
 
 #: git-bisect.sh:48
 msgid "You need to start by \"git bisect start\""
 msgstr "Bạn cần khởi đầu bằng \"git bisect start\""
@@ -10489,105 +10445,105 @@
 
 #: git-bisect.sh:244
 #, sh-format
 msgid "Bad rev input: $rev"
 msgstr "Đầu vào rev sai: $rev"
 
-#: git-bisect.sh:250
+#: git-bisect.sh:253
 msgid "'git bisect bad' can take only one argument."
 msgstr "“git bisect bad” có thể lấy chỉ một đối số."
 
-#: git-bisect.sh:273
+#: git-bisect.sh:276
 msgid "Warning: bisecting only with a bad commit."
 msgstr "Cảnh báo: chỉ thực hiện việc bisect với một lần chuyển giao sai."
 
 #. TRANSLATORS: Make sure to include [Y] and [n] in your
 #. translation. The program will only accept English input
 #. at this point.
-#: git-bisect.sh:279
+#: git-bisect.sh:282
 msgid "Are you sure [Y/n]? "
 msgstr "Bạn có chắc chắn chưa [Y/n]? "
 
-#: git-bisect.sh:289
+#: git-bisect.sh:292
 msgid ""
 "You need to give me at least one good and one bad revision.\n"
 "(You can use \"git bisect bad\" and \"git bisect good\" for that.)"
 msgstr ""
 "Bạn phải chỉ cho tôi ít nhất một điểm xét duyệt tốt và một điểm sai.\n"
 "(Bạn có thể sử dụng \"git bisect bad\" và \"git bisect good\" cho cái đó.)"
 
-#: git-bisect.sh:292
+#: git-bisect.sh:295
 msgid ""
 "You need to start by \"git bisect start\".\n"
 "You then need to give me at least one good and one bad revision.\n"
 "(You can use \"git bisect bad\" and \"git bisect good\" for that.)"
 msgstr ""
 "Bạn cần bắt đầu bằng lệnh \"git bisect start\".\n"
 "Bạn sau đó cần phải chỉ cho tôi ít nhất một điểm xét duyệt đúng và một điểm "
 "sai.\n"
 "(Bạn có thể sử dụng \"git bisect bad\" và \"git bisect good\" cho chúng.)"
 
-#: git-bisect.sh:363 git-bisect.sh:490
+#: git-bisect.sh:366 git-bisect.sh:493
 msgid "We are not bisecting."
 msgstr "Chúng tôi không bisect."
 
-#: git-bisect.sh:370
+#: git-bisect.sh:373
 #, sh-format
 msgid "'$invalid' is not a valid commit"
 msgstr "”$invalid” không phải là lần chuyển giao hợp lệ"
 
-#: git-bisect.sh:379
+#: git-bisect.sh:382
 #, sh-format
 msgid ""
 "Could not check out original HEAD '$branch'.\n"
 "Try 'git bisect reset <commit>'."
 msgstr ""
 "Không thể check-out HEAD nguyên thủy của “$branch”.\n"
 "Hãy thử “git bisect reset <lần-chuyển-giao>”."
 
-#: git-bisect.sh:406
+#: git-bisect.sh:409
 msgid "No logfile given"
 msgstr "Chưa chỉ ra tập tin ghi nhật ký"
 
-#: git-bisect.sh:407
+#: git-bisect.sh:410
 #, sh-format
 msgid "cannot read $file for replaying"
 msgstr "không thể đọc $file để thao diễn lại"
 
-#: git-bisect.sh:424
+#: git-bisect.sh:427
 msgid "?? what are you talking about?"
 msgstr "?? bạn đang nói gì thế?"
 
-#: git-bisect.sh:436
+#: git-bisect.sh:439
 #, sh-format
 msgid "running $command"
 msgstr "đang chạy lệnh $command"
 
-#: git-bisect.sh:443
+#: git-bisect.sh:446
 #, sh-format
 msgid ""
 "bisect run failed:\n"
 "exit code $res from '$command' is < 0 or >= 128"
 msgstr ""
 "chạy bisect gặp lỗi:\n"
 "mã trả về $res từ lệnh “$command” là < 0 hoặc >= 128"
 
-#: git-bisect.sh:469
+#: git-bisect.sh:472
 msgid "bisect run cannot continue any more"
 msgstr "bisect không thể tiếp tục thêm được nữa"
 
-#: git-bisect.sh:475
+#: git-bisect.sh:478
 #, sh-format
 msgid ""
 "bisect run failed:\n"
 "'bisect_state $state' exited with error code $res"
 msgstr ""
 "chạy bisect gặp lỗi:\n"
 "”bisect_state $state” đã thoát ra với mã lỗi $res"
 
-#: git-bisect.sh:482
+#: git-bisect.sh:485
 msgid "bisect run success"
 msgstr "bisect chạy thành công"
 
 #: git-pull.sh:21
 msgid ""
 "Pull is not possible because you have unmerged files.\n"
@@ -10721,13 +10677,13 @@
 "If that is not the case, please\n"
 "\t$cmd_clear_stale_rebase\n"
 "and run me again.  I am stopping in case you still have something\n"
 "valuable there."
 msgstr ""
 "Hình như là ở đây sẵn có một thư mục $state_dir_base directory, và\n"
-"Tôi tự hỏi có phải bạn đang ở giữa một lệnh rebase khác.  Nếu đúng là\n"
+"Tôi tự hỏi có phải bạn đang ở giữa một lệnh rebase khác. Nếu đúng là\n"
 "như vậy, xin hãy thử\n"
 "\t$cmd_live_rebase\n"
 "Nếu không phải thế, hãy thử\n"
 "\t$cmd_clear_stale_rebase\n"
 "và chạy TÔI lần nữa.  TÔI  dừng lại trong trường hợp bạn vẫn\n"
 "có một số thứ quý giá ở đây.\n"
@@ -10786,14 +10742,13 @@
 #, sh-format
 msgid "Changes from $mb to $onto:"
 msgstr "Thay đổi từ $mb thành $onto:"
 
 #: git-rebase.sh:610
 msgid "First, rewinding head to replay your work on top of it..."
-msgstr ""
-"Trước tiên, di chuyển head để xem lại các công việc trên đỉnh của nó..."
+msgstr "Trước tiên, di chuyển head để xem lại các công việc trên đỉnh của nó…"
 
 #: git-rebase.sh:620
 #, sh-format
 msgid "Fast-forwarded $branch_name to $onto_name."
 msgstr "Fast-forward $branch_name thành $onto_name."
 
@@ -11236,12 +11191,27 @@
 
 #: git-submodule.sh:1331
 #, sh-format
 msgid "Synchronizing submodule url for '$displaypath'"
 msgstr "Url Mô-đun-con đồng bộ hóa cho “$displaypath”"
 
+#~ msgid "no files added"
+#~ msgstr "chưa có tập tin nào được thêm vào"
+
+#~ msgid "force creation (when already exists)"
+#~ msgstr "ép buộc tạo (khi đã có nhánh cùng tên)"
+
+#~ msgid "Malformed ident string: '%s'"
+#~ msgstr "Chuỗi thụt lề đầu dòng dị hình: “%s”"
+
+#~ msgid "slot"
+#~ msgstr "khe"
+
+#~ msgid "check"
+#~ msgstr "kiểm tra"
+
 #~ msgid "Failed to lock ref for update"
 #~ msgstr "Gặp lỗi khi khóa tham chiếu để cập nhật"
 
 #~ msgid "Failed to write ref"
 #~ msgstr "Gặp lỗi khi ghi tham chiếu"
 
@@ -11471,13 +11441,13 @@
 #~ "có thể làm nó nhanh lên, nhưng bạn phải cẩn trọng đừng quên thêm nó vào"
 
 #~ msgid "new files yourself (see 'git help status')."
 #~ msgstr "tập tin mới của chính bạn (xem “git help status”.."
 
 #~ msgid "git shortlog [-n] [-s] [-e] [-w] [rev-opts] [--] [<commit-id>... ]"
-#~ msgstr "git shortlog [-n] [-s] [-e] [-w] [rev-opts] [--] [<commit-id>... ]"
+#~ msgstr "git shortlog [-n] [-s] [-e] [-w] [rev-opts] [--] [<commit-id>… ]"
 
 #~ msgid "See 'git help <command>' for more information on a specific command."
 #~ msgstr ""
 #~ "Chạy lệnh “git help <tên-lệnh>” để có thêm thông tin về lệnh được chỉ ra."
 
 #~ msgid "use any ref in .git/refs"
@@ -11519,23 +11489,20 @@
 #~ msgid " 0 files changed"
 #~ msgstr " 0 có tập tin nào thay đổi cả"
 
 #~ msgid " %d file changed"
 #~ msgid_plural " %d files changed"
 #~ msgstr[0] " %d tập tin thay đổi"
-#~ msgstr[1] " %d tập tin thay đổi"
 
 #~ msgid ", %d insertion(+)"
 #~ msgid_plural ", %d insertions(+)"
 #~ msgstr[0] ", %d thêm(+)"
-#~ msgstr[1] ", %d thêm(+)"
 
 #~ msgid ", %d deletion(-)"
 #~ msgid_plural ", %d deletions(-)"
 #~ msgstr[0] ", %d xóa(-)"
-#~ msgstr[1] ", %d xóa(-)"
 
 #~ msgid " (use \"git add\" to track)"
 #~ msgstr " (dùng \"git add\" để theo dõi dấu vết)"
 
 #~ msgid "--detach cannot be used with -b/-B/--orphan"
 #~ msgstr "--detach không thể được sử dụng với tùy chọn -b/-B/--orphan"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/po/zh_CN.po /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/po/zh_CN.po
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/po/zh_CN.po	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/po/zh_CN.po	2015-02-06 05:40:08.000000000 +0800
@@ -9,14 +9,14 @@
 #   - Lian Cheng <rhythm.mail AT gmail.com>
 #
 msgid ""
 msgstr ""
 "Project-Id-Version: Git\n"
 "Report-Msgid-Bugs-To: Git Mailing List <git@vger.kernel.org>\n"
-"POT-Creation-Date: 2014-11-20 09:42+0800\n"
-"PO-Revision-Date: 2014-11-20 16:10+0800\n"
+"POT-Creation-Date: 2015-01-21 14:21+0800\n"
+"PO-Revision-Date: 2015-01-21 14:58+0800\n"
 "Last-Translator: Jiang Xin <worldhello.net@gmail.com>\n"
 "Language-Team: GitHub <https://github.com/gotgit/git/>\n"
 "Language: zh_CN\n"
 "MIME-Version: 1.0\n"
 "Content-Type: text/plain; charset=UTF-8\n"
 "Content-Transfer-Encoding: 8bit\n"
@@ -29,13 +29,13 @@
 
 #: advice.c:88
 msgid ""
 "Fix them up in the work tree, and then use 'git add/rm <file>'\n"
 "as appropriate to mark resolution and make a commit."
 msgstr ""
-"请在工作区改正文件，然后酌情使用 'git add/rm <file>' 命令标记\n"
+"请在工作区改正文件，然后酌情使用 'git add/rm <文件>' 命令标记\n"
 "解决方案并提交。"
 
 #: archive.c:11
 msgid "git archive [options] <tree-ish> [<path>...]"
 msgstr "git archive [选项] <树或提交> [<路径>...]"
 
@@ -50,82 +50,82 @@
 "git archive --remote <版本库> [--exec <命令>] [选项] <树或提交> [<路径>...]"
 
 #: archive.c:14
 msgid "git archive --remote <repo> [--exec <cmd>] --list"
 msgstr "git archive --remote <版本库> [--exec <命令>] --list"
 
-#: archive.c:334 builtin/add.c:137 builtin/add.c:427 builtin/rm.c:328
+#: archive.c:342 builtin/add.c:137 builtin/add.c:427 builtin/rm.c:328
 #, c-format
 msgid "pathspec '%s' did not match any files"
 msgstr "路径规则 '%s' 未匹配任何文件"
 
-#: archive.c:419
+#: archive.c:427
 msgid "fmt"
 msgstr "格式"
 
-#: archive.c:419
+#: archive.c:427
 msgid "archive format"
 msgstr "归档格式"
 
-#: archive.c:420 builtin/log.c:1204
+#: archive.c:428 builtin/log.c:1204
 msgid "prefix"
 msgstr "前缀"
 
-#: archive.c:421
+#: archive.c:429
 msgid "prepend prefix to each pathname in the archive"
 msgstr "为归档中每个路径名加上前缀"
 
-#: archive.c:422 builtin/archive.c:88 builtin/blame.c:2517
+#: archive.c:430 builtin/archive.c:88 builtin/blame.c:2517
 #: builtin/blame.c:2518 builtin/config.c:57 builtin/fast-export.c:986
 #: builtin/fast-export.c:988 builtin/grep.c:712 builtin/hash-object.c:101
-#: builtin/ls-files.c:489 builtin/ls-files.c:492 builtin/notes.c:411
-#: builtin/notes.c:568 builtin/read-tree.c:109 parse-options.h:151
+#: builtin/ls-files.c:489 builtin/ls-files.c:492 builtin/notes.c:394
+#: builtin/notes.c:557 builtin/read-tree.c:109 parse-options.h:151
 msgid "file"
 msgstr "文件"
 
-#: archive.c:423 builtin/archive.c:89
+#: archive.c:431 builtin/archive.c:89
 msgid "write the archive to this file"
 msgstr "归档写入此文件"
 
-#: archive.c:425
+#: archive.c:433
 msgid "read .gitattributes in working directory"
 msgstr "读取工作区中的 .gitattributes"
 
-#: archive.c:426
+#: archive.c:434
 msgid "report archived files on stderr"
 msgstr "在标准错误上报告归档文件"
 
-#: archive.c:427
+#: archive.c:435
 msgid "store only"
 msgstr "只存储"
 
-#: archive.c:428
+#: archive.c:436
 msgid "compress faster"
 msgstr "压缩速度更快"
 
-#: archive.c:436
+#: archive.c:444
 msgid "compress better"
 msgstr "压缩效果更好"
 
-#: archive.c:439
+#: archive.c:447
 msgid "list supported archive formats"
 msgstr "列出支持的归档格式"
 
-#: archive.c:441 builtin/archive.c:90 builtin/clone.c:85
+#: archive.c:449 builtin/archive.c:90 builtin/clone.c:86
 msgid "repo"
 msgstr "版本库"
 
-#: archive.c:442 builtin/archive.c:91
+#: archive.c:450 builtin/archive.c:91
 msgid "retrieve the archive from remote repository <repo>"
 msgstr "从远程版本库（<版本库>）提取归档文件"
 
-#: archive.c:443 builtin/archive.c:92 builtin/notes.c:490
+#: archive.c:451 builtin/archive.c:92 builtin/notes.c:478
 msgid "command"
 msgstr "命令"
 
-#: archive.c:444 builtin/archive.c:93
+#: archive.c:452 builtin/archive.c:93
 msgid "path to the remote git-upload-archive command"
 msgstr "远程 git-upload-archive 命令的路径"
 
 #: attr.c:258
 msgid ""
 "Negative patterns are ignored in git attributes\n"
@@ -248,24 +248,24 @@
 
 #: bundle.c:61
 #, c-format
 msgid "unrecognized header: %s%s (%d)"
 msgstr "未能识别的包头：%s%s (%d)"
 
-#: bundle.c:87 builtin/commit.c:788
+#: bundle.c:87 builtin/commit.c:770
 #, c-format
 msgid "could not open '%s'"
 msgstr "不能打开 '%s'"
 
 #: bundle.c:139
 msgid "Repository lacks these prerequisite commits:"
 msgstr "版本库缺少这些必备的提交："
 
-#: bundle.c:163 sequencer.c:641 sequencer.c:1096 builtin/blame.c:2706
-#: builtin/branch.c:652 builtin/commit.c:1085 builtin/log.c:330
-#: builtin/log.c:823 builtin/log.c:1432 builtin/log.c:1669 builtin/merge.c:357
+#: bundle.c:163 sequencer.c:645 sequencer.c:1100 builtin/blame.c:2706
+#: builtin/branch.c:652 builtin/commit.c:1049 builtin/log.c:330
+#: builtin/log.c:823 builtin/log.c:1432 builtin/log.c:1669 builtin/merge.c:358
 #: builtin/shortlog.c:158
 msgid "revision walk setup failed"
 msgstr "版本遍历设置失败"
 
 #: bundle.c:185
 #, c-format
@@ -317,13 +317,13 @@
 msgstr "不能创建 '%s'"
 
 #: bundle.c:475
 msgid "index-pack died"
 msgstr "index-pack 终止"
 
-#: color.c:157
+#: color.c:260
 #, c-format
 msgid "invalid color value: %.*s"
 msgstr "无效的颜色值：%.*s"
 
 #: commit.c:40
 #, c-format
@@ -366,31 +366,31 @@
 
 #: config.c:885
 #, c-format
 msgid "invalid mode for object creation: %s"
 msgstr "无效的对象创建模式：%s"
 
-#: config.c:1201
+#: config.c:1211
 msgid "unable to parse command-line config"
 msgstr "无法解析命令行中的配置"
 
-#: config.c:1262
+#: config.c:1272
 msgid "unknown error occured while reading the configuration files"
 msgstr "在读取配置文件时遇到未知错误"
 
-#: config.c:1586
+#: config.c:1596
 #, c-format
 msgid "unable to parse '%s' from command-line config"
 msgstr "无法解析命令行配置中的 '%s'"
 
-#: config.c:1588
+#: config.c:1598
 #, c-format
 msgid "bad config variable '%s' in file '%s' at line %d"
 msgstr "在文件 '%2$s' 的第 %3$d 行发现错误的配置变量 '%1$s'"
 
-#: config.c:1647
+#: config.c:1657
 #, c-format
 msgid "%s has multiple values"
 msgstr "%s 有多个取值"
 
 #: connected.c:69
 msgid "Could not run 'git rev-list'"
@@ -630,26 +630,26 @@
 
 #: help.c:440
 #, c-format
 msgid "%s: %s - %s"
 msgstr "%s：%s - %s"
 
-#: lockfile.c:275
+#: lockfile.c:283
 msgid "BUG: reopen a lockfile that is still open"
 msgstr "BUG: 重新打开一个仍打开着的锁文件"
 
-#: lockfile.c:277
+#: lockfile.c:285
 msgid "BUG: reopen a lockfile that has been committed"
 msgstr "BUG: 重新打开一个已提交的锁文件"
 
 #: merge.c:41
 msgid "failed to read the cache"
 msgstr "无法读取缓存"
 
-#: merge.c:94 builtin/checkout.c:356 builtin/checkout.c:562
-#: builtin/clone.c:659
+#: merge.c:94 builtin/checkout.c:374 builtin/checkout.c:580
+#: builtin/clone.c:662
 msgid "unable to write new index file"
 msgstr "无法写新的索引文件"
 
 #: merge-recursive.c:189
 #, c-format
 msgid "(bad commit)\n"
@@ -661,267 +661,267 @@
 msgstr "为路径 '%s' addinfo_cache 失败"
 
 #: merge-recursive.c:270
 msgid "error building trees"
 msgstr "无法创建树"
 
-#: merge-recursive.c:691
+#: merge-recursive.c:688
 #, c-format
 msgid "failed to create path '%s'%s"
 msgstr "无法创建路径 '%s'%s"
 
-#: merge-recursive.c:702
+#: merge-recursive.c:699
 #, c-format
 msgid "Removing %s to make room for subdirectory\n"
 msgstr "删除 %s 以便为子目录留出空间\n"
 
-#: merge-recursive.c:716 merge-recursive.c:737
+#: merge-recursive.c:713 merge-recursive.c:734
 msgid ": perhaps a D/F conflict?"
 msgstr "：可能是一个目录/文件冲突？"
 
-#: merge-recursive.c:727
+#: merge-recursive.c:724
 #, c-format
 msgid "refusing to lose untracked file at '%s'"
 msgstr "拒绝丢弃 '%s' 中的未跟踪文件"
 
-#: merge-recursive.c:767
+#: merge-recursive.c:764
 #, c-format
 msgid "cannot read object %s '%s'"
 msgstr "不能读取对象 %s '%s'"
 
-#: merge-recursive.c:769
+#: merge-recursive.c:766
 #, c-format
 msgid "blob expected for %s '%s'"
 msgstr "%s '%s' 应为数据（blob）对象"
 
-#: merge-recursive.c:792 builtin/clone.c:318
+#: merge-recursive.c:789 builtin/clone.c:321
 #, c-format
 msgid "failed to open '%s'"
 msgstr "无法打开 '%s'"
 
-#: merge-recursive.c:800
+#: merge-recursive.c:797
 #, c-format
 msgid "failed to symlink '%s'"
 msgstr "无法创建符号链接 '%s'"
 
-#: merge-recursive.c:803
+#: merge-recursive.c:800
 #, c-format
 msgid "do not know what to do with %06o %s '%s'"
 msgstr "不知道如何处理 %06o %s '%s'"
 
-#: merge-recursive.c:941
+#: merge-recursive.c:938
 msgid "Failed to execute internal merge"
 msgstr "无法执行内部合并"
 
-#: merge-recursive.c:945
+#: merge-recursive.c:942
 #, c-format
 msgid "Unable to add %s to database"
 msgstr "不能添加 %s 至对象库"
 
-#: merge-recursive.c:961
+#: merge-recursive.c:958
 msgid "unsupported object type in the tree"
 msgstr "在树中有不支持的对象类型"
 
-#: merge-recursive.c:1036 merge-recursive.c:1050
+#: merge-recursive.c:1033 merge-recursive.c:1047
 #, c-format
 msgid ""
 "CONFLICT (%s/delete): %s deleted in %s and %s in %s. Version %s of %s left "
 "in tree."
 msgstr ""
 "冲突（%1$s/删除）：%2$s 在 %3$s 中被删除，在 %5$s 中被 %4$s。%7$s 在 %6$s 中"
 "的版本被保留。"
 
-#: merge-recursive.c:1042 merge-recursive.c:1055
+#: merge-recursive.c:1039 merge-recursive.c:1052
 #, c-format
 msgid ""
 "CONFLICT (%s/delete): %s deleted in %s and %s in %s. Version %s of %s left "
 "in tree at %s."
 msgstr ""
 "冲突（%1$s/删除）：%2$s 在 %3$s 中被删除，在 %5$s 中被 %4$s。%7$s 在 %6$s 中"
 "的版本保留于 %8$s 中。"
 
-#: merge-recursive.c:1096
+#: merge-recursive.c:1093
 msgid "rename"
 msgstr "重命名"
 
-#: merge-recursive.c:1096
+#: merge-recursive.c:1093
 msgid "renamed"
 msgstr "重命名"
 
-#: merge-recursive.c:1152
+#: merge-recursive.c:1149
 #, c-format
 msgid "%s is a directory in %s adding as %s instead"
 msgstr "%s 是 %s 中的一个目录而以 %s 为名被添加"
 
-#: merge-recursive.c:1174
+#: merge-recursive.c:1171
 #, c-format
 msgid ""
 "CONFLICT (rename/rename): Rename \"%s\"->\"%s\" in branch \"%s\" rename \"%s"
 "\"->\"%s\" in \"%s\"%s"
 msgstr ""
 "冲突（重命名/重命名）：在分支 \"%3$s\" 中重命名 \"%1$s\"->\"%2$s\"，在分支 "
 "\"%6$s\" 中重命名 \"%4$s\"->\"%5$s\"%7$s"
 
-#: merge-recursive.c:1179
+#: merge-recursive.c:1176
 msgid " (left unresolved)"
 msgstr "（留下未解决）"
 
-#: merge-recursive.c:1233
+#: merge-recursive.c:1230
 #, c-format
 msgid "CONFLICT (rename/rename): Rename %s->%s in %s. Rename %s->%s in %s"
 msgstr ""
 "冲突（重命名/重命名）：在 %3$s 中重命名 %1$s->%2$s，在 %6$s 中重命名 %4$s->"
 "%5$s"
 
-#: merge-recursive.c:1263
+#: merge-recursive.c:1260
 #, c-format
 msgid "Renaming %s to %s and %s to %s instead"
 msgstr "而是重命名 %s 至 %s，以及 %s 至 %s"
 
-#: merge-recursive.c:1462
+#: merge-recursive.c:1459
 #, c-format
 msgid "CONFLICT (rename/add): Rename %s->%s in %s. %s added in %s"
 msgstr "冲突（重命名/添加）：在 %3$s 中重命名 %1$s->%2$s。在 %5$s 中添加 %4$s"
 
-#: merge-recursive.c:1472
+#: merge-recursive.c:1469
 #, c-format
 msgid "Adding merged %s"
 msgstr "添加合并后的 %s"
 
-#: merge-recursive.c:1477 merge-recursive.c:1675
+#: merge-recursive.c:1474 merge-recursive.c:1672
 #, c-format
 msgid "Adding as %s instead"
 msgstr "而是以 %s 为名添加"
 
-#: merge-recursive.c:1528
+#: merge-recursive.c:1525
 #, c-format
 msgid "cannot read object %s"
 msgstr "不能读取对象 %s"
 
-#: merge-recursive.c:1531
+#: merge-recursive.c:1528
 #, c-format
 msgid "object %s is not a blob"
 msgstr "对象 %s 不是一个数据（blob）对象"
 
-#: merge-recursive.c:1579
+#: merge-recursive.c:1576
 msgid "modify"
 msgstr "修改"
 
-#: merge-recursive.c:1579
+#: merge-recursive.c:1576
 msgid "modified"
 msgstr "修改"
 
-#: merge-recursive.c:1589
+#: merge-recursive.c:1586
 msgid "content"
 msgstr "内容"
 
-#: merge-recursive.c:1596
+#: merge-recursive.c:1593
 msgid "add/add"
 msgstr "添加/添加"
 
-#: merge-recursive.c:1630
+#: merge-recursive.c:1627
 #, c-format
 msgid "Skipped %s (merged same as existing)"
 msgstr "略过 %s（已经做过相同合并）"
 
-#: merge-recursive.c:1644
+#: merge-recursive.c:1641
 #, c-format
 msgid "Auto-merging %s"
 msgstr "自动合并 %s"
 
-#: merge-recursive.c:1648 git-submodule.sh:1150
+#: merge-recursive.c:1645 git-submodule.sh:1150
 msgid "submodule"
 msgstr "子模组"
 
-#: merge-recursive.c:1649
+#: merge-recursive.c:1646
 #, c-format
 msgid "CONFLICT (%s): Merge conflict in %s"
 msgstr "冲突（%s）：合并冲突于 %s"
 
-#: merge-recursive.c:1735
+#: merge-recursive.c:1732
 #, c-format
 msgid "Removing %s"
 msgstr "删除 %s"
 
-#: merge-recursive.c:1760
+#: merge-recursive.c:1757
 msgid "file/directory"
 msgstr "文件/目录"
 
-#: merge-recursive.c:1766
+#: merge-recursive.c:1763
 msgid "directory/file"
 msgstr "目录/文件"
 
-#: merge-recursive.c:1771
+#: merge-recursive.c:1768
 #, c-format
 msgid "CONFLICT (%s): There is a directory with name %s in %s. Adding %s as %s"
 msgstr "冲突（%1$s）：在 %3$s 中有一个名为 %2$s 的目录。以 %5$s 为名添加 %4$s"
 
-#: merge-recursive.c:1781
+#: merge-recursive.c:1778
 #, c-format
 msgid "Adding %s"
 msgstr "添加 %s"
 
-#: merge-recursive.c:1798
+#: merge-recursive.c:1795
 msgid "Fatal merge failure, shouldn't happen."
 msgstr "严重的合并错误，不应发生。"
 
-#: merge-recursive.c:1817
+#: merge-recursive.c:1814
 msgid "Already up-to-date!"
 msgstr "已经是最新的！"
 
-#: merge-recursive.c:1826
+#: merge-recursive.c:1823
 #, c-format
 msgid "merging of trees %s and %s failed"
 msgstr "无法合并树 %s 和 %s"
 
-#: merge-recursive.c:1856
+#: merge-recursive.c:1853
 #, c-format
 msgid "Unprocessed path??? %s"
 msgstr "未处理的路径??? %s"
 
-#: merge-recursive.c:1901
+#: merge-recursive.c:1898
 msgid "Merging:"
 msgstr "合并："
 
-#: merge-recursive.c:1914
+#: merge-recursive.c:1911
 #, c-format
 msgid "found %u common ancestor:"
 msgid_plural "found %u common ancestors:"
 msgstr[0] "发现 %u 个共同祖先："
 msgstr[1] "发现 %u 个共同祖先："
 
-#: merge-recursive.c:1951
+#: merge-recursive.c:1948
 msgid "merge returned no commit"
 msgstr "合并未返回提交"
 
-#: merge-recursive.c:2008
+#: merge-recursive.c:2005
 #, c-format
 msgid "Could not parse object '%s'"
 msgstr "不能解析对象 '%s'"
 
-#: merge-recursive.c:2019 builtin/merge.c:666
+#: merge-recursive.c:2016 builtin/merge.c:667
 msgid "Unable to write index."
 msgstr "不能写入索引。"
 
 #: notes-utils.c:41
 msgid "Cannot commit uninitialized/unreferenced notes tree"
 msgstr "不能提交未初始化/未引用的注解树"
 
-#: notes-utils.c:83
+#: notes-utils.c:82
 #, c-format
 msgid "Bad notes.rewriteMode value: '%s'"
 msgstr "坏的 notes.rewriteMode 值：'%s'"
 
-#: notes-utils.c:93
+#: notes-utils.c:92
 #, c-format
 msgid "Refusing to rewrite notes in %s (outside of refs/notes/)"
 msgstr "拒绝向 %s（在 refs/notes/ 之外）写入注解"
 
 #. TRANSLATORS: The first %s is the name of the
 #. environment variable, the second %s is its value
-#: notes-utils.c:120
+#: notes-utils.c:119
 #, c-format
 msgid "Bad %s value: '%s'"
 msgstr "坏的 %s 值：'%s'"
 
 #: object.c:241
 #, c-format
@@ -1021,22 +1021,22 @@
 msgstr "不能解析 --pretty 格式"
 
 #: progress.c:225
 msgid "done"
 msgstr "完成"
 
-#: read-cache.c:1261
+#: read-cache.c:1267
 #, c-format
 msgid ""
 "index.version set, but the value is invalid.\n"
 "Using version %i"
 msgstr ""
 "设置了 index.version，但是取值无效。\n"
 "使用版本 %i"
 
-#: read-cache.c:1271
+#: read-cache.c:1277
 #, c-format
 msgid ""
 "GIT_INDEX_VERSION set, but the value is invalid.\n"
 "Using version %i"
 msgstr ""
 "设置了 GIT_INDEX_VERSION，但是取值无效。\n"
@@ -1058,51 +1058,51 @@
 msgstr "%s 同时跟踪 %s 和 %s"
 
 #: remote.c:798
 msgid "Internal error"
 msgstr "内部错误"
 
-#: remote.c:1968
+#: remote.c:1980
 #, c-format
 msgid "Your branch is based on '%s', but the upstream is gone.\n"
 msgstr "您的分支基于 '%s'，但此上游分支已经不存在。\n"
 
-#: remote.c:1972
+#: remote.c:1984
 msgid "  (use \"git branch --unset-upstream\" to fixup)\n"
 msgstr "  （使用 \"git branch --unset-upstream\" 来修复）\n"
 
-#: remote.c:1975
+#: remote.c:1987
 #, c-format
 msgid "Your branch is up-to-date with '%s'.\n"
 msgstr "您的分支与上游分支 '%s' 一致。\n"
 
-#: remote.c:1979
+#: remote.c:1991
 #, c-format
 msgid "Your branch is ahead of '%s' by %d commit.\n"
 msgid_plural "Your branch is ahead of '%s' by %d commits.\n"
 msgstr[0] "您的分支领先 '%s' 共 %d 个提交。\n"
 msgstr[1] "您的分支领先 '%s' 共 %d 个提交。\n"
 
-#: remote.c:1985
+#: remote.c:1997
 msgid "  (use \"git push\" to publish your local commits)\n"
 msgstr "  （使用 \"git push\" 来发布您的本地提交）\n"
 
-#: remote.c:1988
+#: remote.c:2000
 #, c-format
 msgid "Your branch is behind '%s' by %d commit, and can be fast-forwarded.\n"
 msgid_plural ""
 "Your branch is behind '%s' by %d commits, and can be fast-forwarded.\n"
 msgstr[0] "您的分支落后 '%s' 共 %d 个提交，并且可以快进。\n"
 msgstr[1] "您的分支落后 '%s' 共 %d 个提交，并且可以快进。\n"
 
 #  译者：注意保持前导空格
-#: remote.c:1996
+#: remote.c:2008
 msgid "  (use \"git pull\" to update your local branch)\n"
 msgstr "  （使用 \"git pull\" 来更新您的本地分支）\n"
 
-#: remote.c:1999
+#: remote.c:2011
 #, c-format
 msgid ""
 "Your branch and '%s' have diverged,\n"
 "and have %d and %d different commit each, respectively.\n"
 msgid_plural ""
 "Your branch and '%s' have diverged,\n"
@@ -1112,63 +1112,63 @@
 "并且分别有 %d 和 %d 处不同的提交。\n"
 msgstr[1] ""
 "您的分支和 '%s' 出现了偏离，\n"
 "并且分别有 %d 和 %d 处不同的提交。\n"
 
 #  译者：注意保持前导空格
-#: remote.c:2009
+#: remote.c:2021
 msgid "  (use \"git pull\" to merge the remote branch into yours)\n"
 msgstr "  （使用 \"git pull\" 来合并远程分支）\n"
 
 #: run-command.c:87
 msgid "open /dev/null failed"
 msgstr "不能打开 /dev/null"
 
 #: run-command.c:89
 #, c-format
 msgid "dup2(%d,%d) failed"
 msgstr "不能调用 dup2(%d,%d)"
 
-#: send-pack.c:265
+#: send-pack.c:268
 msgid "failed to sign the push certificate"
 msgstr "无法为推送证书签名"
 
-#: send-pack.c:322
+#: send-pack.c:325
 msgid "the receiving end does not support --signed push"
 msgstr "接收端不支持签名推送"
 
-#: sequencer.c:172 builtin/merge.c:781 builtin/merge.c:892
-#: builtin/merge.c:1002 builtin/merge.c:1012
+#: sequencer.c:172 builtin/merge.c:782 builtin/merge.c:893 builtin/merge.c:995
+#: builtin/merge.c:1005
 #, c-format
 msgid "Could not open '%s' for writing"
 msgstr "不能为写入打开 '%s'"
 
-#: sequencer.c:174 builtin/merge.c:343 builtin/merge.c:784
-#: builtin/merge.c:1004 builtin/merge.c:1017
+#: sequencer.c:174 builtin/merge.c:344 builtin/merge.c:785 builtin/merge.c:997
+#: builtin/merge.c:1010
 #, c-format
 msgid "Could not write to '%s'"
 msgstr "不能写入 '%s'"
 
 #: sequencer.c:195
 msgid ""
 "after resolving the conflicts, mark the corrected paths\n"
 "with 'git add <paths>' or 'git rm <paths>'"
 msgstr ""
-"冲突解决完毕后，用 'git add <paths>' 或 'git rm <paths>'\n"
+"冲突解决完毕后，用 'git add <路径>' 或 'git rm <路径>'\n"
 "命令标记修正后的文件"
 
 #: sequencer.c:198
 msgid ""
 "after resolving the conflicts, mark the corrected paths\n"
 "with 'git add <paths>' or 'git rm <paths>'\n"
 "and commit the result with 'git commit'"
 msgstr ""
-"冲突解决完毕后，用 'git add <paths>' 或 'git rm <paths>'\n"
+"冲突解决完毕后，用 'git add <路径>' 或 'git rm <路径>'\n"
 "对修正后的文件做标记，然后用 'git commit' 提交"
 
-#: sequencer.c:211 sequencer.c:852 sequencer.c:935
+#: sequencer.c:211 sequencer.c:856 sequencer.c:939
 #, c-format
 msgid "Could not write to %s"
 msgstr "不能写入 %s"
 
 #: sequencer.c:214
 #, c-format
@@ -1185,203 +1185,203 @@
 
 #: sequencer.c:234
 msgid "Commit your changes or stash them to proceed."
 msgstr "提交您的修改或保存进度后再继续。"
 
 #. TRANSLATORS: %s will be "revert" or "cherry-pick"
-#: sequencer.c:304
+#: sequencer.c:321
 #, c-format
 msgid "%s: Unable to write new index file"
 msgstr "%s：无法写入新索引文件"
 
-#: sequencer.c:335
+#: sequencer.c:339
 msgid "Could not resolve HEAD commit\n"
 msgstr "不能解析 HEAD 提交\n"
 
-#: sequencer.c:355
+#: sequencer.c:359
 msgid "Unable to update cache tree\n"
 msgstr "不能更新缓存\n"
 
-#: sequencer.c:402
+#: sequencer.c:406
 #, c-format
 msgid "Could not parse commit %s\n"
 msgstr "不能解析提交 %s\n"
 
-#: sequencer.c:407
+#: sequencer.c:411
 #, c-format
 msgid "Could not parse parent commit %s\n"
 msgstr "不能解析父提交 %s\n"
 
-#: sequencer.c:473
+#: sequencer.c:477
 msgid "Your index file is unmerged."
 msgstr "您的索引文件未完成合并。"
 
-#: sequencer.c:492
+#: sequencer.c:496
 #, c-format
 msgid "Commit %s is a merge but no -m option was given."
 msgstr "提交 %s 是一个合并提交但未提供 -m 选项。"
 
-#: sequencer.c:500
+#: sequencer.c:504
 #, c-format
 msgid "Commit %s does not have parent %d"
 msgstr "提交 %s 没有父提交 %d"
 
-#: sequencer.c:504
+#: sequencer.c:508
 #, c-format
 msgid "Mainline was specified but commit %s is not a merge."
 msgstr "指定了主线但提交 %s 不是一个合并。"
 
 #. TRANSLATORS: The first %s will be "revert" or
 #. "cherry-pick", the second %s a SHA1
-#: sequencer.c:517
+#: sequencer.c:521
 #, c-format
 msgid "%s: cannot parse parent commit %s"
 msgstr "%s：不能解析父提交 %s"
 
-#: sequencer.c:521
+#: sequencer.c:525
 #, c-format
 msgid "Cannot get commit message for %s"
 msgstr "不能得到 %s 的提交说明"
 
-#: sequencer.c:607
+#: sequencer.c:611
 #, c-format
 msgid "could not revert %s... %s"
 msgstr "不能还原 %s... %s"
 
-#: sequencer.c:608
+#: sequencer.c:612
 #, c-format
 msgid "could not apply %s... %s"
 msgstr "不能应用 %s... %s"
 
-#: sequencer.c:644
+#: sequencer.c:648
 msgid "empty commit set passed"
 msgstr "提供了空的提交集"
 
-#: sequencer.c:652
+#: sequencer.c:656
 #, c-format
 msgid "git %s: failed to read the index"
 msgstr "git %s：无法读取索引"
 
-#: sequencer.c:656
+#: sequencer.c:660
 #, c-format
 msgid "git %s: failed to refresh the index"
 msgstr "git %s：无法刷新索引"
 
-#: sequencer.c:716
+#: sequencer.c:720
 #, c-format
 msgid "Cannot %s during a %s"
 msgstr "无法 %s 在一个 %s 过程中"
 
-#: sequencer.c:738
+#: sequencer.c:742
 #, c-format
 msgid "Could not parse line %d."
 msgstr "不能解析第 %d 行。"
 
-#: sequencer.c:743
+#: sequencer.c:747
 msgid "No commits parsed."
 msgstr "没有提交被解析。"
 
-#: sequencer.c:756
+#: sequencer.c:760
 #, c-format
 msgid "Could not open %s"
 msgstr "不能打开 %s"
 
-#: sequencer.c:760
+#: sequencer.c:764
 #, c-format
 msgid "Could not read %s."
 msgstr "不能读取 %s。"
 
-#: sequencer.c:767
+#: sequencer.c:771
 #, c-format
 msgid "Unusable instruction sheet: %s"
 msgstr "无用的指令表单：%s"
 
-#: sequencer.c:797
+#: sequencer.c:801
 #, c-format
 msgid "Invalid key: %s"
 msgstr "无效键名：%s"
 
-#: sequencer.c:800
+#: sequencer.c:804
 #, c-format
 msgid "Invalid value for %s: %s"
 msgstr "%s 的值无效：%s"
 
-#: sequencer.c:812
+#: sequencer.c:816
 #, c-format
 msgid "Malformed options sheet: %s"
 msgstr "非法的选项表单：%s"
 
-#: sequencer.c:833
+#: sequencer.c:837
 msgid "a cherry-pick or revert is already in progress"
 msgstr "一个拣选或还原操作已在进行"
 
-#: sequencer.c:834
+#: sequencer.c:838
 msgid "try \"git cherry-pick (--continue | --quit | --abort)\""
 msgstr "尝试 \"git cherry-pick (--continue | --quit | --abort)\""
 
-#: sequencer.c:838
+#: sequencer.c:842
 #, c-format
 msgid "Could not create sequencer directory %s"
 msgstr "不能创建序列目录 %s"
 
-#: sequencer.c:854 sequencer.c:939
+#: sequencer.c:858 sequencer.c:943
 #, c-format
 msgid "Error wrapping up %s."
 msgstr "错误收尾 %s。"
 
-#: sequencer.c:873 sequencer.c:1009
+#: sequencer.c:877 sequencer.c:1013
 msgid "no cherry-pick or revert in progress"
 msgstr "拣选或还原操作并未进行"
 
-#: sequencer.c:875
+#: sequencer.c:879
 msgid "cannot resolve HEAD"
 msgstr "不能解析 HEAD"
 
-#: sequencer.c:877
+#: sequencer.c:881
 msgid "cannot abort from a branch yet to be born"
 msgstr "不能从尚未建立的分支终止"
 
-#: sequencer.c:899 builtin/apply.c:4128
+#: sequencer.c:903 builtin/apply.c:4128
 #, c-format
 msgid "cannot open %s: %s"
 msgstr "不能打开 %s：%s"
 
-#: sequencer.c:902
+#: sequencer.c:906
 #, c-format
 msgid "cannot read %s: %s"
 msgstr "不能读取 %s：%s"
 
-#: sequencer.c:903
+#: sequencer.c:907
 msgid "unexpected end of file"
 msgstr "意外的文件结束"
 
-#: sequencer.c:909
+#: sequencer.c:913
 #, c-format
 msgid "stored pre-cherry-pick HEAD file '%s' is corrupt"
 msgstr "保存拣选提交前的 HEAD 文件 '%s' 损坏"
 
-#: sequencer.c:932
+#: sequencer.c:936
 #, c-format
 msgid "Could not format %s."
 msgstr "不能格式化 %s。"
 
-#: sequencer.c:1077
+#: sequencer.c:1081
 #, c-format
 msgid "%s: can't cherry-pick a %s"
 msgstr "%s：不能拣选一个%s"
 
-#: sequencer.c:1080
+#: sequencer.c:1084
 #, c-format
 msgid "%s: bad revision"
 msgstr "%s：错误的版本"
 
-#: sequencer.c:1114
+#: sequencer.c:1118
 msgid "Can't revert as initial commit"
 msgstr "不能作为初始提交还原"
 
-#: sequencer.c:1115
+#: sequencer.c:1119
 msgid "Can't cherry-pick into empty head"
 msgstr "不能拣选到空分支"
 
 #: sha1_name.c:440
 msgid ""
 "Git normally never creates a ref that ends with 40 hex characters\n"
@@ -1442,44 +1442,44 @@
 msgstr "无法移除 %s 的 .gitmodules 条目"
 
 #: submodule.c:120
 msgid "staging updated .gitmodules failed"
 msgstr "将更新后 .gitmodules 添加暂存区失败"
 
-#: submodule.c:1111 builtin/init-db.c:363
+#: submodule.c:1111 builtin/init-db.c:371
 #, c-format
 msgid "Could not create git link %s"
 msgstr "不能创建 git link %s"
 
 #: submodule.c:1122
 #, c-format
 msgid "Could not set core.worktree in %s"
 msgstr "不能在 %s 中设置 core.worktree"
 
-#: trailer.c:499 trailer.c:503 trailer.c:507 trailer.c:561 trailer.c:565
-#: trailer.c:569
+#: trailer.c:500 trailer.c:504 trailer.c:508 trailer.c:562 trailer.c:566
+#: trailer.c:570
 #, c-format
 msgid "unknown value '%s' for key '%s'"
 msgstr "键 '%2$s' 的未知取值 '%1$s'"
 
-#: trailer.c:551 trailer.c:556 builtin/remote.c:288
+#: trailer.c:552 trailer.c:557 builtin/remote.c:290
 #, c-format
 msgid "more than one %s"
 msgstr "多于一个 %s"
 
-#: trailer.c:589
+#: trailer.c:590
 #, c-format
 msgid "empty trailer token in trailer '%.*s'"
 msgstr "签名 '%.*s' 的键为空"
 
-#: trailer.c:709
+#: trailer.c:710
 #, c-format
 msgid "could not read input file '%s'"
 msgstr "不能读取输入文件 '%s'"
 
-#: trailer.c:712
+#: trailer.c:713
 msgid "could not read from stdin"
 msgstr "不能自标准输入读取"
 
 #: unpack-trees.c:202
 msgid "Checking out files"
 msgstr "正在检出文件"
@@ -1541,68 +1541,68 @@
 msgstr "未合并的路径："
 
 #  译者：注意保持前导空格
 #: wt-status.c:177 wt-status.c:204
 #, c-format
 msgid "  (use \"git reset %s <file>...\" to unstage)"
-msgstr "  （使用 \"git reset %s <file>...\" 撤出暂存区）"
+msgstr "  （使用 \"git reset %s <文件>...\" 撤出暂存区）"
 
 #  译者：注意保持前导空格
 #: wt-status.c:179 wt-status.c:206
 msgid "  (use \"git rm --cached <file>...\" to unstage)"
-msgstr "  （使用 \"git rm --cached <file>...\" 撤出暂存区）"
+msgstr "  （使用 \"git rm --cached <文件>...\" 撤出暂存区）"
 
 #  译者：注意保持前导空格
 #: wt-status.c:183
 msgid "  (use \"git add <file>...\" to mark resolution)"
-msgstr "  （使用 \"git add <file>...\" 标记解决方案）"
+msgstr "  （使用 \"git add <文件>...\" 标记解决方案）"
 
 #  译者：注意保持前导空格
 #: wt-status.c:185 wt-status.c:189
 msgid "  (use \"git add/rm <file>...\" as appropriate to mark resolution)"
-msgstr "  （酌情使用 \"git add/rm <file>...\" 标记解决方案）"
+msgstr "  （酌情使用 \"git add/rm <文件>...\" 标记解决方案）"
 
 #  译者：注意保持前导空格
 #: wt-status.c:187
 msgid "  (use \"git rm <file>...\" to mark resolution)"
-msgstr "  （使用 \"git rm <file>...\" 标记解决方案）"
+msgstr "  （使用 \"git rm <文件>...\" 标记解决方案）"
 
 #: wt-status.c:198
 msgid "Changes to be committed:"
 msgstr "要提交的变更："
 
 #: wt-status.c:216
 msgid "Changes not staged for commit:"
 msgstr "尚未暂存以备提交的变更："
 
 #  译者：注意保持前导空格
 #: wt-status.c:220
 msgid "  (use \"git add <file>...\" to update what will be committed)"
-msgstr "  （使用 \"git add <file>...\" 更新要提交的内容）"
+msgstr "  （使用 \"git add <文件>...\" 更新要提交的内容）"
 
 #  译者：注意保持前导空格
 #: wt-status.c:222
 msgid "  (use \"git add/rm <file>...\" to update what will be committed)"
-msgstr "  （使用 \"git add/rm <file>...\" 更新要提交的内容）"
+msgstr "  （使用 \"git add/rm <文件>...\" 更新要提交的内容）"
 
 #  译者：注意保持前导空格
 #: wt-status.c:223
 msgid ""
 "  (use \"git checkout -- <file>...\" to discard changes in working directory)"
-msgstr "  （使用 \"git checkout -- <file>...\" 丢弃工作区的改动）"
+msgstr "  （使用 \"git checkout -- <文件>...\" 丢弃工作区的改动）"
 
 #  译者：注意保持前导空格
 #: wt-status.c:225
 msgid "  (commit or discard the untracked or modified content in submodules)"
 msgstr "  （提交或丢弃子模组中未跟踪或修改的内容）"
 
 #  译者：注意保持前导空格
 #: wt-status.c:237
 #, c-format
 msgid "  (use \"git %s <file>...\" to include in what will be committed)"
-msgstr "  （使用 \"git %s <file>...\" 以包含要提交的内容）"
+msgstr "  （使用 \"git %s <文件>...\" 以包含要提交的内容）"
 
 #: wt-status.c:252
 msgid "both deleted:"
 msgstr "双方删除："
 
 #: wt-status.c:254
@@ -1683,307 +1683,307 @@
 
 #: wt-status.c:391
 #, c-format
 msgid "bug: unhandled diff status %c"
 msgstr "bug：无法处理的差异状态 %c"
 
-#: wt-status.c:761
+#: wt-status.c:758
 msgid "Submodules changed but not updated:"
 msgstr "子模组已修改但尚未更新："
 
-#: wt-status.c:763
+#: wt-status.c:760
 msgid "Submodule changes to be committed:"
 msgstr "要提交的子模组变更："
 
-#: wt-status.c:842
+#: wt-status.c:839
 msgid ""
 "Do not touch the line above.\n"
 "Everything below will be removed."
 msgstr ""
 "不要改动上面的一行。\n"
 "下面的所有内容均将被删除。"
 
-#: wt-status.c:933
+#: wt-status.c:930
 msgid "You have unmerged paths."
 msgstr "您有尚未合并的路径。"
 
 #  译者：注意保持前导空格
-#: wt-status.c:936
+#: wt-status.c:933
 msgid "  (fix conflicts and run \"git commit\")"
 msgstr "  （解决冲突并运行 \"git commit\"）"
 
-#: wt-status.c:939
+#: wt-status.c:936
 msgid "All conflicts fixed but you are still merging."
 msgstr "所有冲突已解决但您仍处于合并中。"
 
 #  译者：注意保持前导空格
-#: wt-status.c:942
+#: wt-status.c:939
 msgid "  (use \"git commit\" to conclude merge)"
 msgstr "  （使用 \"git commit\" 结束合并）"
 
-#: wt-status.c:952
+#: wt-status.c:949
 msgid "You are in the middle of an am session."
 msgstr "您正处于 am 操作过程中。"
 
-#: wt-status.c:955
+#: wt-status.c:952
 msgid "The current patch is empty."
 msgstr "当前的补丁为空。"
 
 #  译者：注意保持前导空格
-#: wt-status.c:959
+#: wt-status.c:956
 msgid "  (fix conflicts and then run \"git am --continue\")"
 msgstr "  （解决冲突，然后运行 \"git am --continue\"）"
 
 #  译者：注意保持前导空格
-#: wt-status.c:961
+#: wt-status.c:958
 msgid "  (use \"git am --skip\" to skip this patch)"
 msgstr "  （使用 \"git am --skip\" 跳过此补丁）"
 
 #  译者：注意保持前导空格
-#: wt-status.c:963
+#: wt-status.c:960
 msgid "  (use \"git am --abort\" to restore the original branch)"
 msgstr "  （使用 \"git am --abort\" 恢复原有分支）"
 
-#: wt-status.c:1023 wt-status.c:1040
+#: wt-status.c:1020 wt-status.c:1037
 #, c-format
 msgid "You are currently rebasing branch '%s' on '%s'."
 msgstr "您在执行将分支 '%s' 变基到 '%s' 的操作。"
 
-#: wt-status.c:1028 wt-status.c:1045
+#: wt-status.c:1025 wt-status.c:1042
 msgid "You are currently rebasing."
 msgstr "您在执行变基操作。"
 
 #  译者：注意保持前导空格
-#: wt-status.c:1031
+#: wt-status.c:1028
 msgid "  (fix conflicts and then run \"git rebase --continue\")"
 msgstr "  （解决冲突，然后运行 \"git rebase --continue\"）"
 
 #  译者：注意保持前导空格
-#: wt-status.c:1033
+#: wt-status.c:1030
 msgid "  (use \"git rebase --skip\" to skip this patch)"
 msgstr "  （使用 \"git rebase --skip\" 跳过此补丁）"
 
 #  译者：注意保持前导空格
-#: wt-status.c:1035
+#: wt-status.c:1032
 msgid "  (use \"git rebase --abort\" to check out the original branch)"
 msgstr "  （使用 \"git rebase --abort\" 以检出原有分支）"
 
 #  译者：注意保持前导空格
-#: wt-status.c:1048
+#: wt-status.c:1045
 msgid "  (all conflicts fixed: run \"git rebase --continue\")"
 msgstr "  （所有冲突已解决：运行 \"git rebase --continue\"）"
 
-#: wt-status.c:1052
+#: wt-status.c:1049
 #, c-format
 msgid ""
 "You are currently splitting a commit while rebasing branch '%s' on '%s'."
 msgstr "您在执行将分支 '%s' 变基到 '%s' 的操作时拆分提交。"
 
-#: wt-status.c:1057
+#: wt-status.c:1054
 msgid "You are currently splitting a commit during a rebase."
 msgstr "您在执行变基操作时拆分提交。"
 
 #  译者：注意保持前导空格
-#: wt-status.c:1060
+#: wt-status.c:1057
 msgid "  (Once your working directory is clean, run \"git rebase --continue\")"
 msgstr "  （一旦您工作目录提交干净后，运行 \"git rebase --continue\"）"
 
-#: wt-status.c:1064
+#: wt-status.c:1061
 #, c-format
 msgid "You are currently editing a commit while rebasing branch '%s' on '%s'."
 msgstr "您在执行将分支 '%s' 变基到 '%s' 的操作时编辑提交。"
 
-#: wt-status.c:1069
+#: wt-status.c:1066
 msgid "You are currently editing a commit during a rebase."
 msgstr "您在执行变基操作时编辑提交。"
 
 #  译者：注意保持前导空格
-#: wt-status.c:1072
+#: wt-status.c:1069
 msgid "  (use \"git commit --amend\" to amend the current commit)"
 msgstr "  （使用 \"git commit --amend\" 修补当前提交）"
 
 #  译者：注意保持前导空格
-#: wt-status.c:1074
+#: wt-status.c:1071
 msgid ""
 "  (use \"git rebase --continue\" once you are satisfied with your changes)"
 msgstr "  （当您对您的修改满意后执行 \"git rebase --continue\"）"
 
-#: wt-status.c:1084
+#: wt-status.c:1081
 #, c-format
 msgid "You are currently cherry-picking commit %s."
 msgstr "您在执行拣选提交 %s 的操作。"
 
 #  译者：注意保持前导空格
-#: wt-status.c:1089
+#: wt-status.c:1086
 msgid "  (fix conflicts and run \"git cherry-pick --continue\")"
 msgstr "  （解决冲突并运行 \"git cherry-pick --continue\"）"
 
 #  译者：注意保持前导空格
-#: wt-status.c:1092
+#: wt-status.c:1089
 msgid "  (all conflicts fixed: run \"git cherry-pick --continue\")"
 msgstr "  （所有冲突已解决：运行 \"git cherry-pick --continue\"）"
 
 #  译者：注意保持前导空格
-#: wt-status.c:1094
+#: wt-status.c:1091
 msgid "  (use \"git cherry-pick --abort\" to cancel the cherry-pick operation)"
 msgstr "  （使用 \"git cherry-pick --abort\" 以取消拣选操作）"
 
-#: wt-status.c:1103
+#: wt-status.c:1100
 #, c-format
 msgid "You are currently reverting commit %s."
 msgstr "您在执行反转提交 %s 的操作。"
 
 #  译者：注意保持前导空格
-#: wt-status.c:1108
+#: wt-status.c:1105
 msgid "  (fix conflicts and run \"git revert --continue\")"
 msgstr "  （解决冲突并运行 \"git revert --continue\"）"
 
 #  译者：注意保持前导空格
-#: wt-status.c:1111
+#: wt-status.c:1108
 msgid "  (all conflicts fixed: run \"git revert --continue\")"
 msgstr "  （所有冲突已解决：运行 \"git revert --continue\"）"
 
 #  译者：注意保持前导空格
-#: wt-status.c:1113
+#: wt-status.c:1110
 msgid "  (use \"git revert --abort\" to cancel the revert operation)"
 msgstr "  （使用 \"git revert --abort\" 以取消反转提交操作）"
 
-#: wt-status.c:1124
+#: wt-status.c:1121
 #, c-format
 msgid "You are currently bisecting, started from branch '%s'."
 msgstr "您在执行从分支 '%s' 开始的二分查找操作。"
 
-#: wt-status.c:1128
+#: wt-status.c:1125
 msgid "You are currently bisecting."
 msgstr "您在执行二分查找操作。"
 
 #  译者：注意保持前导空格
-#: wt-status.c:1131
+#: wt-status.c:1128
 msgid "  (use \"git bisect reset\" to get back to the original branch)"
 msgstr "  （使用 \"git bisect reset\" 以回到原有分支）"
 
-#: wt-status.c:1306
+#: wt-status.c:1303
 msgid "On branch "
 msgstr "位于分支 "
 
-#: wt-status.c:1313
+#: wt-status.c:1310
 msgid "rebase in progress; onto "
 msgstr "变基操作正在进行中；至 "
 
-#: wt-status.c:1320
+#: wt-status.c:1317
 msgid "HEAD detached at "
 msgstr "头指针分离于 "
 
-#: wt-status.c:1322
+#: wt-status.c:1319
 msgid "HEAD detached from "
 msgstr "头指针分离自 "
 
-#: wt-status.c:1325
+#: wt-status.c:1322
 msgid "Not currently on any branch."
 msgstr "当前不在任何分支上。"
 
-#: wt-status.c:1342
+#: wt-status.c:1339
 msgid "Initial commit"
 msgstr "初始提交"
 
-#: wt-status.c:1356
+#: wt-status.c:1353
 msgid "Untracked files"
 msgstr "未跟踪的文件"
 
-#: wt-status.c:1358
+#: wt-status.c:1355
 msgid "Ignored files"
 msgstr "忽略的文件"
 
-#: wt-status.c:1362
+#: wt-status.c:1359
 #, c-format
 msgid ""
 "It took %.2f seconds to enumerate untracked files. 'status -uno'\n"
 "may speed it up, but you have to be careful not to forget to add\n"
 "new files yourself (see 'git help status')."
 msgstr ""
 "耗费了 %.2f 秒以枚举未跟踪的文件。'status -uno' 也许能提高速度，\n"
 "但您需要小心不要忘了添加新文件（参见 'git help status'）。"
 
-#: wt-status.c:1368
+#: wt-status.c:1365
 #, c-format
 msgid "Untracked files not listed%s"
 msgstr "未跟踪的文件没有列出%s"
 
 #  译者：中文字符串拼接，可删除前导空格
-#: wt-status.c:1370
+#: wt-status.c:1367
 msgid " (use -u option to show untracked files)"
 msgstr "（使用 -u 参数显示未跟踪的文件）"
 
-#: wt-status.c:1376
+#: wt-status.c:1373
 msgid "No changes"
 msgstr "没有修改"
 
-#: wt-status.c:1381
+#: wt-status.c:1378
 #, c-format
 msgid "no changes added to commit (use \"git add\" and/or \"git commit -a\")\n"
 msgstr "修改尚未加入提交（使用 \"git add\" 和/或 \"git commit -a\"）\n"
 
-#: wt-status.c:1384
+#: wt-status.c:1381
 #, c-format
 msgid "no changes added to commit\n"
 msgstr "修改尚未加入提交\n"
 
-#: wt-status.c:1387
+#: wt-status.c:1384
 #, c-format
 msgid ""
 "nothing added to commit but untracked files present (use \"git add\" to "
 "track)\n"
 msgstr "提交为空，但是存在尚未跟踪的文件（使用 \"git add\" 建立跟踪）\n"
 
-#: wt-status.c:1390
+#: wt-status.c:1387
 #, c-format
 msgid "nothing added to commit but untracked files present\n"
 msgstr "提交为空，但是存在尚未跟踪的文件\n"
 
 #  译者：中文字符串拼接，可删除前导空格
-#: wt-status.c:1393
+#: wt-status.c:1390
 #, c-format
 msgid "nothing to commit (create/copy files and use \"git add\" to track)\n"
 msgstr "无文件要提交（创建/拷贝文件并使用 \"git add\" 建立跟踪）\n"
 
-#: wt-status.c:1396 wt-status.c:1401
+#: wt-status.c:1393 wt-status.c:1398
 #, c-format
 msgid "nothing to commit\n"
 msgstr "无文件要提交\n"
 
 #  译者：中文字符串拼接，可删除前导空格
-#: wt-status.c:1399
+#: wt-status.c:1396
 #, c-format
 msgid "nothing to commit (use -u to show untracked files)\n"
 msgstr "无文件要提交（使用 -u 显示未跟踪的文件）\n"
 
 #  译者：中文字符串拼接，可删除前导空格
-#: wt-status.c:1403
+#: wt-status.c:1400
 #, c-format
 msgid "nothing to commit, working directory clean\n"
 msgstr "无文件要提交，干净的工作区\n"
 
-#: wt-status.c:1512
+#: wt-status.c:1509
 msgid "HEAD (no branch)"
 msgstr "HEAD（非分支）"
 
 #  译者：注意保持句尾空格
-#: wt-status.c:1518
+#: wt-status.c:1515
 msgid "Initial commit on "
 msgstr "初始提交于 "
 
-#: wt-status.c:1550
+#: wt-status.c:1547
 msgid "gone"
 msgstr "丢失"
 
 #  译者：注意保持句尾空格
-#: wt-status.c:1552 wt-status.c:1560
+#: wt-status.c:1549 wt-status.c:1557
 msgid "behind "
 msgstr "落后 "
 
-#: compat/precompose_utf8.c:55 builtin/clone.c:357
+#: compat/precompose_utf8.c:55 builtin/clone.c:360
 #, c-format
 msgid "failed to unlink '%s'"
 msgstr "无法删除 '%s'"
 
 #: builtin/add.c:22
 msgid "git add [options] [--] <pathspec>..."
@@ -2036,28 +2036,28 @@
 
 #: builtin/add.c:231
 msgid "The following paths are ignored by one of your .gitignore files:\n"
 msgstr "下列路径根据您的一个 .gitignore 文件而被忽略：\n"
 
 #: builtin/add.c:248 builtin/clean.c:875 builtin/fetch.c:108 builtin/mv.c:110
-#: builtin/prune-packed.c:55 builtin/push.c:499 builtin/remote.c:1375
+#: builtin/prune-packed.c:55 builtin/push.c:499 builtin/remote.c:1372
 #: builtin/rm.c:269
 msgid "dry run"
 msgstr "演习"
 
 #: builtin/add.c:249 builtin/apply.c:4415 builtin/check-ignore.c:19
-#: builtin/commit.c:1362 builtin/count-objects.c:63 builtin/fsck.c:608
+#: builtin/commit.c:1326 builtin/count-objects.c:63 builtin/fsck.c:608
 #: builtin/log.c:1617 builtin/mv.c:109 builtin/read-tree.c:114
 msgid "be verbose"
 msgstr "冗长输出"
 
 #: builtin/add.c:251
 msgid "interactive picking"
 msgstr "交互式拣选"
 
-#: builtin/add.c:252 builtin/checkout.c:1108 builtin/reset.c:286
+#: builtin/add.c:252 builtin/checkout.c:1126 builtin/reset.c:286
 msgid "select hunks interactively"
 msgstr "交互式挑选数据块"
 
 #: builtin/add.c:253
 msgid "edit current diff and apply"
 msgstr "编辑当前差异并应用"
@@ -2096,16 +2096,12 @@
 
 #: builtin/add.c:286
 #, c-format
 msgid "Use -f if you really want to add them.\n"
 msgstr "使用 -f 参数如果您确实要添加它们。\n"
 
-#: builtin/add.c:287
-msgid "no files added"
-msgstr "没有文件被添加"
-
 #: builtin/add.c:293
 msgid "adding files failed"
 msgstr "添加文件失败"
 
 #: builtin/add.c:329
 msgid "-A and -u are mutually incompatible"
@@ -2374,13 +2370,13 @@
 
 #: builtin/apply.c:3653
 #, c-format
 msgid "Checking patch %s..."
 msgstr "检查补丁 %s..."
 
-#: builtin/apply.c:3746 builtin/checkout.c:213 builtin/reset.c:135
+#: builtin/apply.c:3746 builtin/checkout.c:231 builtin/reset.c:135
 #, c-format
 msgid "make_cache_entry failed for path '%s'"
 msgstr "对路径 '%s' 的 make_cache_entry 操作失败"
 
 #: builtin/apply.c:3889
 #, c-format
@@ -2453,13 +2449,13 @@
 msgstr "未能识别的输入"
 
 #: builtin/apply.c:4245
 msgid "unable to read index file"
 msgstr "无法读取索引文件"
 
-#: builtin/apply.c:4362 builtin/apply.c:4365 builtin/clone.c:91
+#: builtin/apply.c:4362 builtin/apply.c:4365 builtin/clone.c:92
 #: builtin/fetch.c:93
 msgid "path"
 msgstr "路径"
 
 #: builtin/apply.c:4363
 msgid "don't apply changes matching the given path"
@@ -2718,17 +2714,17 @@
 #: builtin/blame.c:2516
 msgid "Spend extra cycles to find better match"
 msgstr "花费额外的循环来找到更好的匹配"
 
 #: builtin/blame.c:2517
 msgid "Use revisions from <file> instead of calling git-rev-list"
-msgstr "使用来自 <file> 的修订集而不是调用 git-rev-list"
+msgstr "使用来自 <文件> 的修订集而不是调用 git-rev-list"
 
 #: builtin/blame.c:2518
 msgid "Use <file>'s contents as the final image"
-msgstr "使用 <file> 的内容作为最终的图片"
+msgstr "使用 <文件> 的内容作为最终的图片"
 
 #: builtin/blame.c:2519 builtin/blame.c:2520
 msgid "score"
 msgstr "得分"
 
 #: builtin/blame.c:2519
@@ -2994,14 +2990,14 @@
 
 #: builtin/branch.c:824
 msgid "act on remote-tracking branches"
 msgstr "作用于远程跟踪分支"
 
 #: builtin/branch.c:827 builtin/branch.c:833 builtin/branch.c:854
-#: builtin/branch.c:860 builtin/commit.c:1622 builtin/commit.c:1623
-#: builtin/commit.c:1624 builtin/commit.c:1625 builtin/tag.c:616
+#: builtin/branch.c:860 builtin/commit.c:1586 builtin/commit.c:1587
+#: builtin/commit.c:1588 builtin/commit.c:1589 builtin/tag.c:616
 #: builtin/tag.c:622
 msgid "commit"
 msgstr "提交"
 
 #: builtin/branch.c:828 builtin/branch.c:834
 msgid "print only branches that contain the commit"
@@ -3041,14 +3037,14 @@
 
 #: builtin/branch.c:850
 msgid "edit the description for the branch"
 msgstr "标记分支的描述"
 
 #: builtin/branch.c:851
-msgid "force creation (when already exists)"
-msgstr "强制创建（当已经存在）"
+msgid "force creation, move/rename, deletion"
+msgstr "强制创建、移动/重命名、删除"
 
 #: builtin/branch.c:854
 msgid "print only not merged branches"
 msgstr "只打印没有合并的分支"
 
 #: builtin/branch.c:860
@@ -3060,112 +3056,112 @@
 msgstr "以列的方式显示分支"
 
 #: builtin/branch.c:877
 msgid "Failed to resolve HEAD as a valid ref."
 msgstr "无法将 HEAD 解析为有效引用。"
 
-#: builtin/branch.c:881 builtin/clone.c:634
+#: builtin/branch.c:881 builtin/clone.c:637
 msgid "HEAD not found below refs/heads!"
 msgstr "HEAD 没有位于 /refs/heads 之下！"
 
 #: builtin/branch.c:903
 msgid "--column and --verbose are incompatible"
 msgstr "--column 和 --verbose 不兼容"
 
-#: builtin/branch.c:909 builtin/branch.c:948
+#: builtin/branch.c:914 builtin/branch.c:953
 msgid "branch name required"
 msgstr "必须提供分支名"
 
-#: builtin/branch.c:924
+#: builtin/branch.c:929
 msgid "Cannot give description to detached HEAD"
 msgstr "不能向分离头指针提供描述"
 
-#: builtin/branch.c:929
+#: builtin/branch.c:934
 msgid "cannot edit description of more than one branch"
 msgstr "不能为一个以上的分支编辑描述"
 
-#: builtin/branch.c:936
+#: builtin/branch.c:941
 #, c-format
 msgid "No commit on branch '%s' yet."
 msgstr "分支 '%s' 尚无提交。"
 
-#: builtin/branch.c:939
+#: builtin/branch.c:944
 #, c-format
 msgid "No branch named '%s'."
 msgstr "没有分支 '%s'。"
 
-#: builtin/branch.c:954
+#: builtin/branch.c:959
 msgid "too many branches for a rename operation"
 msgstr "为重命名操作提供了太多的分支名"
 
-#: builtin/branch.c:959
+#: builtin/branch.c:964
 msgid "too many branches to set new upstream"
 msgstr "为设置新上游提供了太多的分支名"
 
-#: builtin/branch.c:963
+#: builtin/branch.c:968
 #, c-format
 msgid ""
 "could not set upstream of HEAD to %s when it does not point to any branch."
 msgstr "无法设置 HEAD 的上游为 %s，因为 HEAD 没有指向任何分支。"
 
-#: builtin/branch.c:966 builtin/branch.c:988 builtin/branch.c:1009
+#: builtin/branch.c:971 builtin/branch.c:993 builtin/branch.c:1014
 #, c-format
 msgid "no such branch '%s'"
 msgstr "没有此分支 '%s'"
 
-#: builtin/branch.c:970
+#: builtin/branch.c:975
 #, c-format
 msgid "branch '%s' does not exist"
 msgstr "分支 '%s' 不存在"
 
-#: builtin/branch.c:982
+#: builtin/branch.c:987
 msgid "too many branches to unset upstream"
 msgstr "为取消上游设置操作提供了太多的分支名"
 
-#: builtin/branch.c:986
+#: builtin/branch.c:991
 msgid "could not unset upstream of HEAD when it does not point to any branch."
 msgstr "无法取消 HEAD 的上游设置因为它没有指向一个分支"
 
-#: builtin/branch.c:992
+#: builtin/branch.c:997
 #, c-format
 msgid "Branch '%s' has no upstream information"
 msgstr "分支 '%s' 没有上游信息"
 
-#: builtin/branch.c:1006
+#: builtin/branch.c:1011
 msgid "it does not make sense to create 'HEAD' manually"
 msgstr "手工创建 'HEAD' 没有意义"
 
-#: builtin/branch.c:1012
+#: builtin/branch.c:1017
 msgid "-a and -r options to 'git branch' do not make sense with a branch name"
 msgstr "'git branch' 的 -a 和 -r 选项带一个分支名参数没有意义"
 
-#: builtin/branch.c:1015
+#: builtin/branch.c:1020
 #, c-format
 msgid ""
 "The --set-upstream flag is deprecated and will be removed. Consider using --"
 "track or --set-upstream-to\n"
 msgstr ""
 "选项 --set-upstream 已弃用并将被移除。考虑使用 --track 或 --set-upstream-to\n"
 
-#: builtin/branch.c:1032
+#: builtin/branch.c:1037
 #, c-format
 msgid ""
 "\n"
 "If you wanted to make '%s' track '%s', do this:\n"
 "\n"
 msgstr ""
 "\n"
 "如果你想用 '%s' 跟踪 '%s', 这么做：\n"
 "\n"
 
-#: builtin/branch.c:1033
+#: builtin/branch.c:1038
 #, c-format
 msgid "    git branch -d %s\n"
 msgstr "    git branch -d %s\n"
 
-#: builtin/branch.c:1034
+#: builtin/branch.c:1039
 #, c-format
 msgid "    git branch --set-upstream-to %s\n"
 msgstr "    git branch --set-upstream-to %s\n"
 
 #: builtin/bundle.c:47
 #, c-format
@@ -3177,49 +3173,49 @@
 msgstr "需要一个版本库来创建包。"
 
 #: builtin/bundle.c:60
 msgid "Need a repository to unbundle."
 msgstr "需要一个版本库来解包。"
 
-#: builtin/cat-file.c:332
+#: builtin/cat-file.c:328
 msgid "git cat-file (-t|-s|-e|-p|<type>|--textconv) <object>"
 msgstr "git cat-file (-t|-s|-e|-p|<类型>|--textconv) <对象>"
 
-#: builtin/cat-file.c:333
+#: builtin/cat-file.c:329
 msgid "git cat-file (--batch|--batch-check) < <list_of_objects>"
 msgstr "git cat-file (--batch|--batch-check) < <对象列表>"
 
-#: builtin/cat-file.c:370
+#: builtin/cat-file.c:366
 msgid "<type> can be one of: blob, tree, commit, tag"
 msgstr "<类型> 可以是其中之一：blob、tree、commit、tag"
 
-#: builtin/cat-file.c:371
+#: builtin/cat-file.c:367
 msgid "show object type"
 msgstr "显示对象类型"
 
-#: builtin/cat-file.c:372
+#: builtin/cat-file.c:368
 msgid "show object size"
 msgstr "显示对象大小"
 
-#: builtin/cat-file.c:374
+#: builtin/cat-file.c:370
 msgid "exit with zero when there's no error"
 msgstr "当没有错误时退出并返回零"
 
-#: builtin/cat-file.c:375
+#: builtin/cat-file.c:371
 msgid "pretty-print object's content"
 msgstr "美观地打印对象的内容"
 
-#: builtin/cat-file.c:377
+#: builtin/cat-file.c:373
 msgid "for blob objects, run textconv on object's content"
 msgstr "对于数据（blob）对象，对其内容执行 textconv"
 
-#: builtin/cat-file.c:379
+#: builtin/cat-file.c:375
 msgid "show info and content of objects fed from the standard input"
 msgstr "显示从标准输入提供的对象的信息和内容"
 
-#: builtin/cat-file.c:382
+#: builtin/cat-file.c:378
 msgid "show info about objects fed from the standard input"
 msgstr "显示从标准输入提供的对象的信息"
 
 #: builtin/check-attr.c:11
 msgid "git check-attr [-a | --all | attr...] [--] pathname..."
 msgstr "git check-attr [-a | --all | attr...] [--] 路径名..."
@@ -3241,13 +3237,13 @@
 msgstr "从标准输入读出文件名"
 
 #: builtin/check-attr.c:23 builtin/check-ignore.c:24
 msgid "terminate input and output records by a NUL character"
 msgstr "输入和输出的记录使用 NUL 字符终结"
 
-#: builtin/check-ignore.c:18 builtin/checkout.c:1089 builtin/gc.c:274
+#: builtin/check-ignore.c:18 builtin/checkout.c:1107 builtin/gc.c:274
 msgid "suppress progress reporting"
 msgstr "不显示进度报告"
 
 #: builtin/check-ignore.c:26
 msgid "show non-matching input paths"
 msgstr "显示未匹配的输入路径"
@@ -3346,112 +3342,112 @@
 msgstr "git checkout [选项] <分支>"
 
 #: builtin/checkout.c:26
 msgid "git checkout [options] [<branch>] -- <file>..."
 msgstr "git checkout [选项] [<分支>] -- <文件>..."
 
-#: builtin/checkout.c:114 builtin/checkout.c:147
+#: builtin/checkout.c:132 builtin/checkout.c:165
 #, c-format
 msgid "path '%s' does not have our version"
 msgstr "路径 '%s' 没有我们的版本"
 
-#: builtin/checkout.c:116 builtin/checkout.c:149
+#: builtin/checkout.c:134 builtin/checkout.c:167
 #, c-format
 msgid "path '%s' does not have their version"
 msgstr "路径 '%s' 没有他们的版本"
 
-#: builtin/checkout.c:132
+#: builtin/checkout.c:150
 #, c-format
 msgid "path '%s' does not have all necessary versions"
 msgstr "路径 '%s' 没有全部必须的版本"
 
-#: builtin/checkout.c:176
+#: builtin/checkout.c:194
 #, c-format
 msgid "path '%s' does not have necessary versions"
 msgstr "路径 '%s' 没有必须的版本"
 
-#: builtin/checkout.c:193
+#: builtin/checkout.c:211
 #, c-format
 msgid "path '%s': cannot merge"
 msgstr "path '%s'：无法合并"
 
-#: builtin/checkout.c:210
+#: builtin/checkout.c:228
 #, c-format
 msgid "Unable to add merge result for '%s'"
 msgstr "无法为 '%s' 添加合并结果"
 
-#: builtin/checkout.c:231 builtin/checkout.c:234 builtin/checkout.c:237
-#: builtin/checkout.c:240
+#: builtin/checkout.c:249 builtin/checkout.c:252 builtin/checkout.c:255
+#: builtin/checkout.c:258
 #, c-format
 msgid "'%s' cannot be used with updating paths"
 msgstr "'%s' 不能在更新路径时使用"
 
-#: builtin/checkout.c:243 builtin/checkout.c:246
+#: builtin/checkout.c:261 builtin/checkout.c:264
 #, c-format
 msgid "'%s' cannot be used with %s"
 msgstr "'%s' 不能和 %s 同时使用"
 
-#: builtin/checkout.c:249
+#: builtin/checkout.c:267
 #, c-format
 msgid "Cannot update paths and switch to branch '%s' at the same time."
 msgstr "不能同时更新路径并切换到分支'%s'。"
 
-#: builtin/checkout.c:260 builtin/checkout.c:449
+#: builtin/checkout.c:278 builtin/checkout.c:467
 msgid "corrupt index file"
 msgstr "损坏的索引文件"
 
-#: builtin/checkout.c:320 builtin/checkout.c:327
+#: builtin/checkout.c:338 builtin/checkout.c:345
 #, c-format
 msgid "path '%s' is unmerged"
 msgstr "路径 '%s' 未合并"
 
-#: builtin/checkout.c:471
+#: builtin/checkout.c:489
 msgid "you need to resolve your current index first"
 msgstr "您需要先解决当前索引的冲突"
 
-#: builtin/checkout.c:597
+#: builtin/checkout.c:615
 #, c-format
 msgid "Can not do reflog for '%s'\n"
 msgstr "不能对 '%s' 执行 reflog 操作\n"
 
-#: builtin/checkout.c:635
+#: builtin/checkout.c:653
 msgid "HEAD is now at"
 msgstr "HEAD 目前位于"
 
-#: builtin/checkout.c:642
+#: builtin/checkout.c:660
 #, c-format
 msgid "Reset branch '%s'\n"
 msgstr "重置分支 '%s'\n"
 
-#: builtin/checkout.c:645
+#: builtin/checkout.c:663
 #, c-format
 msgid "Already on '%s'\n"
 msgstr "已经位于 '%s'\n"
 
-#: builtin/checkout.c:649
+#: builtin/checkout.c:667
 #, c-format
 msgid "Switched to and reset branch '%s'\n"
 msgstr "切换并重置分支 '%s'\n"
 
-#: builtin/checkout.c:651 builtin/checkout.c:1032
+#: builtin/checkout.c:669 builtin/checkout.c:1050
 #, c-format
 msgid "Switched to a new branch '%s'\n"
 msgstr "切换到一个新分支 '%s'\n"
 
-#: builtin/checkout.c:653
+#: builtin/checkout.c:671
 #, c-format
 msgid "Switched to branch '%s'\n"
 msgstr "切换到分支 '%s'\n"
 
 #  译者：注意保持前导空格
-#: builtin/checkout.c:705
+#: builtin/checkout.c:723
 #, c-format
 msgid " ... and %d more.\n"
 msgstr " ... 及其它 %d 个。\n"
 
-#: builtin/checkout.c:711
+#: builtin/checkout.c:729
 #, c-format
 msgid ""
 "Warning: you are leaving %d commit behind, not connected to\n"
 "any of your branches:\n"
 "\n"
 "%s\n"
@@ -3466,13 +3462,13 @@
 "%s\n"
 msgstr[1] ""
 "警告：您正丢下 %d 个提交，未和任何分支关联：\n"
 "\n"
 "%s\n"
 
-#: builtin/checkout.c:729
+#: builtin/checkout.c:747
 #, c-format
 msgid ""
 "If you want to keep them by creating a new branch, this may be a good time\n"
 "to do so with:\n"
 "\n"
 " git branch new_branch_name %s\n"
@@ -3481,159 +3477,159 @@
 "如果您想要通过创建新分支保存他们，这可能是一个好时候。\n"
 "如下操作：\n"
 "\n"
 " git branch new_branch_name %s\n"
 "\n"
 
-#: builtin/checkout.c:759
+#: builtin/checkout.c:777
 msgid "internal error in revision walk"
 msgstr "在版本遍历时遇到内部错误"
 
-#: builtin/checkout.c:763
+#: builtin/checkout.c:781
 msgid "Previous HEAD position was"
 msgstr "之前的 HEAD 位置是"
 
-#: builtin/checkout.c:790 builtin/checkout.c:1027
+#: builtin/checkout.c:808 builtin/checkout.c:1045
 msgid "You are on a branch yet to be born"
 msgstr "您位于一个尚未初始化的分支"
 
-#: builtin/checkout.c:934
+#: builtin/checkout.c:952
 #, c-format
 msgid "only one reference expected, %d given."
 msgstr "只要一个引用，却给出了 %d 个"
 
-#: builtin/checkout.c:973
+#: builtin/checkout.c:991
 #, c-format
 msgid "invalid reference: %s"
 msgstr "无效引用：%s"
 
-#: builtin/checkout.c:1002
+#: builtin/checkout.c:1020
 #, c-format
 msgid "reference is not a tree: %s"
 msgstr "引用不是一个树：%s"
 
-#: builtin/checkout.c:1041
+#: builtin/checkout.c:1059
 msgid "paths cannot be used with switching branches"
 msgstr "路径不能和切换分支同时使用"
 
-#: builtin/checkout.c:1044 builtin/checkout.c:1048
+#: builtin/checkout.c:1062 builtin/checkout.c:1066
 #, c-format
 msgid "'%s' cannot be used with switching branches"
 msgstr "'%s' 不能和切换分支同时使用"
 
-#: builtin/checkout.c:1052 builtin/checkout.c:1055 builtin/checkout.c:1060
-#: builtin/checkout.c:1063
+#: builtin/checkout.c:1070 builtin/checkout.c:1073 builtin/checkout.c:1078
+#: builtin/checkout.c:1081
 #, c-format
 msgid "'%s' cannot be used with '%s'"
 msgstr "'%s' 不能和 '%s' 同时使用"
 
-#: builtin/checkout.c:1068
+#: builtin/checkout.c:1086
 #, c-format
 msgid "Cannot switch branch to a non-commit '%s'"
 msgstr "不能切换分支到一个非提交 '%s'"
 
-#: builtin/checkout.c:1090 builtin/checkout.c:1092 builtin/clone.c:89
+#: builtin/checkout.c:1108 builtin/checkout.c:1110 builtin/clone.c:90
 #: builtin/remote.c:159 builtin/remote.c:161
 msgid "branch"
 msgstr "分支"
 
-#: builtin/checkout.c:1091
+#: builtin/checkout.c:1109
 msgid "create and checkout a new branch"
 msgstr "创建并检出一个新的分支"
 
-#: builtin/checkout.c:1093
+#: builtin/checkout.c:1111
 msgid "create/reset and checkout a branch"
 msgstr "创建/重置并检出一个分支"
 
-#: builtin/checkout.c:1094
+#: builtin/checkout.c:1112
 msgid "create reflog for new branch"
 msgstr "为新的分支创建引用日志"
 
-#: builtin/checkout.c:1095
+#: builtin/checkout.c:1113
 msgid "detach the HEAD at named commit"
 msgstr "成为指向该提交的分离头指针"
 
-#: builtin/checkout.c:1096
+#: builtin/checkout.c:1114
 msgid "set upstream info for new branch"
 msgstr "为新的分支设置上游信息"
 
-#: builtin/checkout.c:1098
+#: builtin/checkout.c:1116
 msgid "new-branch"
 msgstr "新分支"
 
-#: builtin/checkout.c:1098
+#: builtin/checkout.c:1116
 msgid "new unparented branch"
 msgstr "新的没有父提交的分支"
 
-#: builtin/checkout.c:1099
+#: builtin/checkout.c:1117
 msgid "checkout our version for unmerged files"
 msgstr "对尚未合并的文件检出我们的版本"
 
-#: builtin/checkout.c:1101
+#: builtin/checkout.c:1119
 msgid "checkout their version for unmerged files"
 msgstr "对尚未合并的文件检出他们的版本"
 
-#: builtin/checkout.c:1103
+#: builtin/checkout.c:1121
 msgid "force checkout (throw away local modifications)"
 msgstr "强制检出（丢弃本地修改）"
 
-#: builtin/checkout.c:1104
+#: builtin/checkout.c:1122
 msgid "perform a 3-way merge with the new branch"
 msgstr "和新的分支执行三路合并"
 
-#: builtin/checkout.c:1105 builtin/merge.c:226
+#: builtin/checkout.c:1123 builtin/merge.c:227
 msgid "update ignored files (default)"
 msgstr "更新忽略的文件（默认）"
 
-#: builtin/checkout.c:1106 builtin/log.c:1239 parse-options.h:245
+#: builtin/checkout.c:1124 builtin/log.c:1239 parse-options.h:245
 msgid "style"
 msgstr "风格"
 
-#: builtin/checkout.c:1107
+#: builtin/checkout.c:1125
 msgid "conflict style (merge or diff3)"
 msgstr "冲突输出风格（merge 或 diff3）"
 
-#: builtin/checkout.c:1110
+#: builtin/checkout.c:1128
 msgid "do not limit pathspecs to sparse entries only"
 msgstr "对路径不做稀疏检出的限制"
 
-#: builtin/checkout.c:1112
+#: builtin/checkout.c:1130
 msgid "second guess 'git checkout no-such-branch'"
 msgstr "再者猜测'git checkout no-such-branch'"
 
-#: builtin/checkout.c:1135
+#: builtin/checkout.c:1153
 msgid "-b, -B and --orphan are mutually exclusive"
 msgstr "-b、-B 和 --orphan 是互斥的"
 
-#: builtin/checkout.c:1152
+#: builtin/checkout.c:1170
 msgid "--track needs a branch name"
 msgstr "--track 需要一个分支名"
 
-#: builtin/checkout.c:1157
+#: builtin/checkout.c:1175
 msgid "Missing branch name; try -b"
 msgstr "缺少分支名；尝试 -b"
 
-#: builtin/checkout.c:1194
+#: builtin/checkout.c:1212
 msgid "invalid path specification"
 msgstr "无效的路径规格"
 
-#: builtin/checkout.c:1201
+#: builtin/checkout.c:1219
 #, c-format
 msgid ""
 "Cannot update paths and switch to branch '%s' at the same time.\n"
 "Did you intend to checkout '%s' which can not be resolved as commit?"
 msgstr ""
 "不能同时更新路径并切换到分支'%s'。\n"
 "您是想要检出 '%s' 但其未能解析为提交么？"
 
-#: builtin/checkout.c:1206
+#: builtin/checkout.c:1224
 #, c-format
 msgid "git checkout: --detach does not take a path argument '%s'"
 msgstr "git checkout：--detach 不能接收路径参数 '%s'"
 
-#: builtin/checkout.c:1210
+#: builtin/checkout.c:1228
 msgid ""
 "git checkout: --ours/--theirs, --force and --merge are incompatible when\n"
 "checking out of the index."
 msgstr ""
 "git checkout：在从索引检出时，--ours/--theirs、--force 和 --merge 不兼容。"
 
@@ -3816,263 +3812,279 @@
 "clean.requireForce 默认为 true 且未提供 -i、-n 或 -f 选项，拒绝执行清理动作"
 
 #: builtin/clone.c:37
 msgid "git clone [options] [--] <repo> [<dir>]"
 msgstr "git clone [选项] [--] <版本库> [<路径>]"
 
-#: builtin/clone.c:65 builtin/fetch.c:112 builtin/merge.c:223
+#: builtin/clone.c:66 builtin/fetch.c:112 builtin/merge.c:224
 #: builtin/push.c:514
 msgid "force progress reporting"
 msgstr "强制显示进度报告"
 
-#: builtin/clone.c:67
+#: builtin/clone.c:68
 msgid "don't create a checkout"
 msgstr "不创建一个检出"
 
-#: builtin/clone.c:68 builtin/clone.c:70 builtin/init-db.c:488
+#: builtin/clone.c:69 builtin/clone.c:71 builtin/init-db.c:496
 msgid "create a bare repository"
 msgstr "创建一个纯版本库"
 
-#: builtin/clone.c:72
+#: builtin/clone.c:73
 msgid "create a mirror repository (implies bare)"
 msgstr "创建一个镜像版本库（也是纯版本库）"
 
-#: builtin/clone.c:74
+#: builtin/clone.c:75
 msgid "to clone from a local repository"
 msgstr "从本地版本库克隆"
 
-#: builtin/clone.c:76
+#: builtin/clone.c:77
 msgid "don't use local hardlinks, always copy"
 msgstr "不使用本地硬链接，始终复制"
 
-#: builtin/clone.c:78
+#: builtin/clone.c:79
 msgid "setup as shared repository"
 msgstr "设置为共享版本库"
 
-#: builtin/clone.c:80 builtin/clone.c:82
+#: builtin/clone.c:81 builtin/clone.c:83
 msgid "initialize submodules in the clone"
 msgstr "在克隆时初始化子模组"
 
-#: builtin/clone.c:83 builtin/init-db.c:485
+#: builtin/clone.c:84 builtin/init-db.c:493
 msgid "template-directory"
 msgstr "模板目录"
 
-#: builtin/clone.c:84 builtin/init-db.c:486
+#: builtin/clone.c:85 builtin/init-db.c:494
 msgid "directory from which templates will be used"
 msgstr "模板目录将被使用"
 
-#: builtin/clone.c:86
+#: builtin/clone.c:87
 msgid "reference repository"
 msgstr "参考版本库"
 
-#: builtin/clone.c:87 builtin/column.c:26 builtin/merge-file.c:44
+#: builtin/clone.c:88 builtin/column.c:26 builtin/merge-file.c:44
 msgid "name"
 msgstr "名称"
 
-#: builtin/clone.c:88
+#: builtin/clone.c:89
 msgid "use <name> instead of 'origin' to track upstream"
 msgstr "使用<名称>而不是 'origin' 去跟踪上游"
 
-#: builtin/clone.c:90
+#: builtin/clone.c:91
 msgid "checkout <branch> instead of the remote's HEAD"
 msgstr "检出<分支>而不是远程HEAD"
 
-#: builtin/clone.c:92
+#: builtin/clone.c:93
 msgid "path to git-upload-pack on the remote"
 msgstr "远程 git-upload-pack 路径"
 
-#: builtin/clone.c:93 builtin/fetch.c:113 builtin/grep.c:659
+#: builtin/clone.c:94 builtin/fetch.c:113 builtin/grep.c:659
 msgid "depth"
 msgstr "深度"
 
-#: builtin/clone.c:94
+#: builtin/clone.c:95
 msgid "create a shallow clone of that depth"
 msgstr "创建一个指定深度的浅克隆"
 
-#: builtin/clone.c:96
+#: builtin/clone.c:97
 msgid "clone only one branch, HEAD or --branch"
 msgstr "只克隆一个分支、HEAD 或 --branch"
 
-#: builtin/clone.c:97 builtin/init-db.c:494
+#: builtin/clone.c:99
+msgid "use --reference only while cloning"
+msgstr "仅在克隆时参考 --reference 指向的本地版本库"
+
+#: builtin/clone.c:100 builtin/init-db.c:502
 msgid "gitdir"
 msgstr "git目录"
 
-#: builtin/clone.c:98 builtin/init-db.c:495
+#: builtin/clone.c:101 builtin/init-db.c:503
 msgid "separate git dir from working tree"
 msgstr "git目录和工作区分离"
 
-#: builtin/clone.c:99
+#: builtin/clone.c:102
 msgid "key=value"
 msgstr "key=value"
 
-#: builtin/clone.c:100
+#: builtin/clone.c:103
 msgid "set config inside the new repository"
 msgstr "在新版本库中设置配置信息"
 
-#: builtin/clone.c:253
+#: builtin/clone.c:256
 #, c-format
 msgid "reference repository '%s' is not a local repository."
 msgstr "参考版本库 '%s' 不是一个本地版本库。"
 
-#: builtin/clone.c:257
+#: builtin/clone.c:260
 #, c-format
 msgid "reference repository '%s' is shallow"
 msgstr "参考版本库 '%s' 是一个浅克隆"
 
-#: builtin/clone.c:260
+#: builtin/clone.c:263
 #, c-format
 msgid "reference repository '%s' is grafted"
 msgstr "参考版本库 '%s' 已被嫁接"
 
-#: builtin/clone.c:322
+#: builtin/clone.c:325
 #, c-format
 msgid "failed to create directory '%s'"
 msgstr "无法创建目录 '%s'"
 
-#: builtin/clone.c:324 builtin/diff.c:84
+#: builtin/clone.c:327 builtin/diff.c:84
 #, c-format
 msgid "failed to stat '%s'"
 msgstr "无法枚举 '%s' 状态"
 
-#: builtin/clone.c:326
+#: builtin/clone.c:329
 #, c-format
 msgid "%s exists and is not a directory"
 msgstr "%s 存在且不是一个目录"
 
-#: builtin/clone.c:340
+#: builtin/clone.c:343
 #, c-format
 msgid "failed to stat %s\n"
 msgstr "无法枚举 %s 状态\n"
 
-#: builtin/clone.c:362
+#: builtin/clone.c:365
 #, c-format
 msgid "failed to create link '%s'"
 msgstr "无法创建链接 '%s'"
 
-#: builtin/clone.c:366
+#: builtin/clone.c:369
 #, c-format
 msgid "failed to copy file to '%s'"
 msgstr "无法拷贝文件至 '%s'"
 
-#: builtin/clone.c:389 builtin/clone.c:563
+#: builtin/clone.c:392 builtin/clone.c:566
 #, c-format
 msgid "done.\n"
 msgstr "完成。\n"
 
-#: builtin/clone.c:401
+#: builtin/clone.c:404
 msgid ""
 "Clone succeeded, but checkout failed.\n"
 "You can inspect what was checked out with 'git status'\n"
 "and retry the checkout with 'git checkout -f HEAD'\n"
 msgstr ""
 "克隆成功，但是检出失败。\n"
 "您可以通过 'git status' 检查哪些已被检出，然后使用命令\n"
 "'git checkout -f HEAD' 重试\n"
 
-#: builtin/clone.c:478
+#: builtin/clone.c:481
 #, c-format
 msgid "Could not find remote branch %s to clone."
 msgstr "不能发现要克隆的远程分支 %s。"
 
-#: builtin/clone.c:558
+#: builtin/clone.c:561
 #, c-format
 msgid "Checking connectivity... "
 msgstr "检查连接... "
 
-#: builtin/clone.c:561
+#: builtin/clone.c:564
 msgid "remote did not send all necessary objects"
 msgstr "远程没有发送所有必须的对象"
 
-#: builtin/clone.c:625
+#: builtin/clone.c:628
 msgid "remote HEAD refers to nonexistent ref, unable to checkout.\n"
 msgstr "远程 HEAD 指向一个不存在的引用，无法检出。\n"
 
-#: builtin/clone.c:656
+#: builtin/clone.c:659
 msgid "unable to checkout working tree"
 msgstr "不能检出工作区"
 
-#: builtin/clone.c:765
+#: builtin/clone.c:746
+msgid "cannot repack to clean up"
+msgstr "无法执行 repack 来清理"
+
+#: builtin/clone.c:748
+msgid "cannot unlink temporary alternates file"
+msgstr "无法删除临时的 alternates 文件"
+
+#: builtin/clone.c:778
 msgid "Too many arguments."
 msgstr "太多参数。"
 
-#: builtin/clone.c:769
+#: builtin/clone.c:782
 msgid "You must specify a repository to clone."
 msgstr "您必须指定一个版本库来克隆。"
 
-#: builtin/clone.c:780
+#: builtin/clone.c:793
 #, c-format
 msgid "--bare and --origin %s options are incompatible."
 msgstr "--bare 和 --origin %s 选项不兼容。"
 
-#: builtin/clone.c:783
+#: builtin/clone.c:796
 msgid "--bare and --separate-git-dir are incompatible."
 msgstr "--bare 和 --separate-git-dir 选项不兼容。"
 
-#: builtin/clone.c:796
+#: builtin/clone.c:809
 #, c-format
 msgid "repository '%s' does not exist"
 msgstr "版本库 '%s' 不存在"
 
-#: builtin/clone.c:802 builtin/fetch.c:1155
+#: builtin/clone.c:815 builtin/fetch.c:1155
 #, c-format
 msgid "depth %s is not a positive number"
 msgstr "深度 %s 不是一个正数"
 
-#: builtin/clone.c:812
+#: builtin/clone.c:825
 #, c-format
 msgid "destination path '%s' already exists and is not an empty directory."
 msgstr "目标路径 '%s' 已经存在，并且不是一个空目录。"
 
-#: builtin/clone.c:822
+#: builtin/clone.c:835
 #, c-format
 msgid "working tree '%s' already exists."
 msgstr "工作区 '%s' 已经存在。"
 
-#: builtin/clone.c:835 builtin/clone.c:847
+#: builtin/clone.c:848 builtin/clone.c:860
 #, c-format
 msgid "could not create leading directories of '%s'"
 msgstr "不能为 '%s' 创建先导目录"
 
-#: builtin/clone.c:838
+#: builtin/clone.c:851
 #, c-format
 msgid "could not create work tree dir '%s'."
 msgstr "不能为 '%s' 创建工作区目录。"
 
-#: builtin/clone.c:857
+#: builtin/clone.c:870
 #, c-format
 msgid "Cloning into bare repository '%s'...\n"
 msgstr "克隆到纯版本库 '%s'...\n"
 
-#: builtin/clone.c:859
+#: builtin/clone.c:872
 #, c-format
 msgid "Cloning into '%s'...\n"
 msgstr "正克隆到 '%s'...\n"
 
-#: builtin/clone.c:895
+#: builtin/clone.c:897
+msgid "--dissociate given, but there is no --reference"
+msgstr "提供了参数 --dissociate，但未提供 --reference"
+
+#: builtin/clone.c:912
 msgid "--depth is ignored in local clones; use file:// instead."
 msgstr "--depth 在本地克隆被忽略，改为 file:// 协议试试。"
 
-#: builtin/clone.c:898
+#: builtin/clone.c:915
 msgid "source repository is shallow, ignoring --local"
 msgstr "源版本库是浅克隆，忽略 --local"
 
-#: builtin/clone.c:903
+#: builtin/clone.c:920
 msgid "--local is ignored"
 msgstr "--local 被忽略"
 
-#: builtin/clone.c:907
+#: builtin/clone.c:924
 #, c-format
 msgid "Don't know how to clone %s"
 msgstr "不知道如何克隆 %s"
 
-#: builtin/clone.c:958 builtin/clone.c:966
+#: builtin/clone.c:975 builtin/clone.c:983
 #, c-format
 msgid "Remote branch %s not found in upstream %s"
 msgstr "远程分支 %s 在上游 %s 未发现"
 
-#: builtin/clone.c:969
+#: builtin/clone.c:986
 msgid "You appear to have cloned an empty repository."
 msgstr "您似乎克隆了一个空版本库。"
 
 #: builtin/column.c:9
 msgid "git column [options]"
 msgstr "git column [选项]"
@@ -4244,79 +4256,74 @@
 msgstr "无法读取索引"
 
 #: builtin/commit.c:473
 msgid "unable to write temporary index file"
 msgstr "无法写临时索引文件"
 
-#: builtin/commit.c:592
+#: builtin/commit.c:584
 #, c-format
 msgid "commit '%s' lacks author header"
 msgstr "提交 '%s' 缺少作者信息"
 
-#: builtin/commit.c:594
+#: builtin/commit.c:586
 #, c-format
 msgid "commit '%s' has malformed author line"
 msgstr "提交 '%s' 有非法的作者信息"
 
-#: builtin/commit.c:613
+#: builtin/commit.c:605
 msgid "malformed --author parameter"
 msgstr "非法的 --author 参数"
 
-#: builtin/commit.c:621
+#: builtin/commit.c:613
 #, c-format
 msgid "invalid date format: %s"
 msgstr "无效的日期格式：%s"
 
-#: builtin/commit.c:642
-#, c-format
-msgid "Malformed ident string: '%s'"
-msgstr "非法的身份字符串：'%s'"
-
-#: builtin/commit.c:675
+#: builtin/commit.c:657
 msgid ""
 "unable to select a comment character that is not used\n"
 "in the current commit message"
 msgstr "无法选择一个未被当前提交说明使用的注释字符"
 
-#: builtin/commit.c:712 builtin/commit.c:745 builtin/commit.c:1120
+#: builtin/commit.c:694 builtin/commit.c:727 builtin/commit.c:1084
 #, c-format
 msgid "could not lookup commit %s"
 msgstr "不能查询提交 %s"
 
-#: builtin/commit.c:724 builtin/shortlog.c:273
+#: builtin/commit.c:706 builtin/shortlog.c:273
 #, c-format
 msgid "(reading log message from standard input)\n"
 msgstr "（正从标准输入中读取日志信息）\n"
 
-#: builtin/commit.c:726
+#: builtin/commit.c:708
 msgid "could not read log from standard input"
 msgstr "不能从标准输入中读取日志信息"
 
-#: builtin/commit.c:730
+#: builtin/commit.c:712
 #, c-format
 msgid "could not read log file '%s'"
 msgstr "不能读取日志文件 '%s'"
 
-#: builtin/commit.c:752
+#: builtin/commit.c:734
 msgid "could not read MERGE_MSG"
 msgstr "不能读取 MERGE_MSG"
 
-#: builtin/commit.c:756
+#: builtin/commit.c:738
 msgid "could not read SQUASH_MSG"
 msgstr "不能读取 SQUASH_MSG"
 
-#: builtin/commit.c:760
+#: builtin/commit.c:742
 #, c-format
 msgid "could not read '%s'"
 msgstr "不能读取 '%s'"
 
-#: builtin/commit.c:831
+#: builtin/commit.c:789
 msgid "could not write commit template"
 msgstr "不能写提交模版"
 
-#: builtin/commit.c:849
+#: builtin/commit.c:807
 #, c-format
 msgid ""
 "\n"
 "It looks like you may be committing a merge.\n"
 "If this is not correct, please remove the file\n"
 "\t%s\n"
@@ -4324,13 +4331,13 @@
 msgstr ""
 "\n"
 "似乎您正在做一个合并提交。如果不对，请删除文件\n"
 "\t%s\n"
 "然后重试。\n"
 
-#: builtin/commit.c:854
+#: builtin/commit.c:812
 #, c-format
 msgid ""
 "\n"
 "It looks like you may be committing a cherry-pick.\n"
 "If this is not correct, please remove the file\n"
 "\t%s\n"
@@ -4338,379 +4345,379 @@
 msgstr ""
 "\n"
 "似乎您正在做一个拣选提交。如果不对，请删除文件\n"
 "\t%s\n"
 "然后重试。\n"
 
-#: builtin/commit.c:867
+#: builtin/commit.c:825
 #, c-format
 msgid ""
 "Please enter the commit message for your changes. Lines starting\n"
 "with '%c' will be ignored, and an empty message aborts the commit.\n"
 msgstr ""
 "请为您的变更输入提交说明。以 '%c' 开始的行将被忽略，而一个空的提交\n"
 "说明将会终止提交。\n"
 
-#: builtin/commit.c:874
+#: builtin/commit.c:832
 #, c-format
 msgid ""
 "Please enter the commit message for your changes. Lines starting\n"
 "with '%c' will be kept; you may remove them yourself if you want to.\n"
 "An empty message aborts the commit.\n"
 msgstr ""
 "请为您的变更输入提交说明。以 '%c' 开始的行将被保留，如果您原意\n"
 "也可以删除它们。一个空的提交说明将会终止提交。\n"
 
 #  译者：为保证在输出中对齐，注意调整句中空格！
-#: builtin/commit.c:888
+#: builtin/commit.c:852
 #, c-format
 msgid "%sAuthor:    %.*s <%.*s>"
 msgstr "%s作者：  %.*s <%.*s>"
 
 #  译者：为保证在输出中对齐，注意调整句中空格！
-#: builtin/commit.c:896
+#: builtin/commit.c:860
 #, c-format
 msgid "%sDate:      %s"
 msgstr "%s日期：  %s"
 
 #  译者：为保证在输出中对齐，注意调整句中空格！
-#: builtin/commit.c:903
+#: builtin/commit.c:867
 #, c-format
 msgid "%sCommitter: %.*s <%.*s>"
 msgstr "%s提交者：%.*s <%.*s>"
 
-#: builtin/commit.c:921
+#: builtin/commit.c:885
 msgid "Cannot read index"
 msgstr "无法读取索引"
 
-#: builtin/commit.c:978
+#: builtin/commit.c:942
 msgid "Error building trees"
 msgstr "无法创建树对象"
 
-#: builtin/commit.c:993 builtin/tag.c:495
+#: builtin/commit.c:957 builtin/tag.c:495
 #, c-format
 msgid "Please supply the message using either -m or -F option.\n"
 msgstr "请使用 -m 或 -F 选项提供提交说明。\n"
 
-#: builtin/commit.c:1095
+#: builtin/commit.c:1059
 #, c-format
 msgid "No existing author found with '%s'"
 msgstr "没有找到匹配 '%s' 的作者"
 
-#: builtin/commit.c:1110 builtin/commit.c:1350
+#: builtin/commit.c:1074 builtin/commit.c:1314
 #, c-format
 msgid "Invalid untracked files mode '%s'"
 msgstr "无效的未追踪文件参数 '%s'"
 
-#: builtin/commit.c:1147
+#: builtin/commit.c:1111
 msgid "--long and -z are incompatible"
 msgstr "--long 和 -z 选项不兼容"
 
-#: builtin/commit.c:1177
+#: builtin/commit.c:1141
 msgid "Using both --reset-author and --author does not make sense"
 msgstr "同时使用 --reset-author 和 --author 没有意义"
 
-#: builtin/commit.c:1186
+#: builtin/commit.c:1150
 msgid "You have nothing to amend."
 msgstr "您没有可修补的提交。"
 
-#: builtin/commit.c:1189
+#: builtin/commit.c:1153
 msgid "You are in the middle of a merge -- cannot amend."
 msgstr "您正处于一个合并过程中 -- 无法修补提交。"
 
-#: builtin/commit.c:1191
+#: builtin/commit.c:1155
 msgid "You are in the middle of a cherry-pick -- cannot amend."
 msgstr "您正处于一个拣选过程中 -- 无法修补提交。"
 
-#: builtin/commit.c:1194
+#: builtin/commit.c:1158
 msgid "Options --squash and --fixup cannot be used together"
 msgstr "选项 --squash 和 --fixup 不能同时使用"
 
-#: builtin/commit.c:1204
+#: builtin/commit.c:1168
 msgid "Only one of -c/-C/-F/--fixup can be used."
 msgstr "只能用一个 -c/-C/-F/--fixup 选项。"
 
-#: builtin/commit.c:1206
+#: builtin/commit.c:1170
 msgid "Option -m cannot be combined with -c/-C/-F/--fixup."
 msgstr "选项 -m 不能和 -c/-C/-F/--fixup 同时使用。"
 
-#: builtin/commit.c:1214
+#: builtin/commit.c:1178
 msgid "--reset-author can be used only with -C, -c or --amend."
 msgstr "--reset-author 只能和 -C、-c 或 --amend 同时使用。"
 
-#: builtin/commit.c:1231
+#: builtin/commit.c:1195
 msgid "Only one of --include/--only/--all/--interactive/--patch can be used."
 msgstr "只能用一个 --include/--only/--all/--interactive/--patch 选项。"
 
-#: builtin/commit.c:1233
+#: builtin/commit.c:1197
 msgid "No paths with --include/--only does not make sense."
 msgstr "参数 --include/--only 不跟路径没有意义。"
 
-#: builtin/commit.c:1235
+#: builtin/commit.c:1199
 msgid "Clever... amending the last one with dirty index."
 msgstr "聪明... 在索引不干净下修补最后的提交。"
 
-#: builtin/commit.c:1237
+#: builtin/commit.c:1201
 msgid "Explicit paths specified without -i or -o; assuming --only paths..."
 msgstr "指定了明确的路径而没有使用 -i 或 -o 选项，认为是 --only paths..."
 
-#: builtin/commit.c:1249 builtin/tag.c:728
+#: builtin/commit.c:1213 builtin/tag.c:728
 #, c-format
 msgid "Invalid cleanup mode %s"
 msgstr "无效的清理模式 %s"
 
-#: builtin/commit.c:1254
+#: builtin/commit.c:1218
 msgid "Paths with -a does not make sense."
 msgstr "路径和 -a 选项同时使用没有意义。"
 
-#: builtin/commit.c:1364 builtin/commit.c:1644
+#: builtin/commit.c:1328 builtin/commit.c:1608
 msgid "show status concisely"
 msgstr "以简洁的格式显示状态"
 
-#: builtin/commit.c:1366 builtin/commit.c:1646
+#: builtin/commit.c:1330 builtin/commit.c:1610
 msgid "show branch information"
 msgstr "显示分支信息"
 
-#: builtin/commit.c:1368 builtin/commit.c:1648 builtin/push.c:500
+#: builtin/commit.c:1332 builtin/commit.c:1612 builtin/push.c:500
 msgid "machine-readable output"
 msgstr "机器可读的输出"
 
-#: builtin/commit.c:1371 builtin/commit.c:1650
+#: builtin/commit.c:1335 builtin/commit.c:1614
 msgid "show status in long format (default)"
 msgstr "以长格式显示状态（默认）"
 
-#: builtin/commit.c:1374 builtin/commit.c:1653
+#: builtin/commit.c:1338 builtin/commit.c:1617
 msgid "terminate entries with NUL"
 msgstr "条目以NUL字符结尾"
 
-#: builtin/commit.c:1376 builtin/commit.c:1656 builtin/fast-export.c:980
+#: builtin/commit.c:1340 builtin/commit.c:1620 builtin/fast-export.c:980
 #: builtin/fast-export.c:983 builtin/tag.c:603
 msgid "mode"
 msgstr "模式"
 
-#: builtin/commit.c:1377 builtin/commit.c:1656
+#: builtin/commit.c:1341 builtin/commit.c:1620
 msgid "show untracked files, optional modes: all, normal, no. (Default: all)"
 msgstr "显示未跟踪的文件，“模式”的可选参数：all、normal、no。（默认：all）"
 
-#: builtin/commit.c:1380
+#: builtin/commit.c:1344
 msgid "show ignored files"
 msgstr "显示忽略的文件"
 
-#: builtin/commit.c:1381 parse-options.h:153
+#: builtin/commit.c:1345 parse-options.h:153
 msgid "when"
 msgstr "何时"
 
-#: builtin/commit.c:1382
+#: builtin/commit.c:1346
 msgid ""
 "ignore changes to submodules, optional when: all, dirty, untracked. "
 "(Default: all)"
 msgstr ""
 "忽略子模组的更改，“何时”的可选参数：all、dirty、untracked。（默认：all）"
 
-#: builtin/commit.c:1384
+#: builtin/commit.c:1348
 msgid "list untracked files in columns"
 msgstr "以列的方式显示未跟踪的文件"
 
-#: builtin/commit.c:1471
+#: builtin/commit.c:1435
 msgid "couldn't look up newly created commit"
 msgstr "无法找到新创建的提交"
 
-#: builtin/commit.c:1473
+#: builtin/commit.c:1437
 msgid "could not parse newly created commit"
 msgstr "不能解析新创建的提交"
 
-#: builtin/commit.c:1518
+#: builtin/commit.c:1482
 msgid "detached HEAD"
 msgstr "分离头指针"
 
 #  译者：中文字符串拼接，可删除前导空格
-#: builtin/commit.c:1521
+#: builtin/commit.c:1485
 msgid " (root-commit)"
 msgstr "（根提交）"
 
-#: builtin/commit.c:1614
+#: builtin/commit.c:1578
 msgid "suppress summary after successful commit"
 msgstr "提交成功后不显示概述信息"
 
-#: builtin/commit.c:1615
+#: builtin/commit.c:1579
 msgid "show diff in commit message template"
 msgstr "在提交说明模板里显示差异"
 
-#: builtin/commit.c:1617
+#: builtin/commit.c:1581
 msgid "Commit message options"
 msgstr "提交说明选项"
 
-#: builtin/commit.c:1618 builtin/tag.c:601
+#: builtin/commit.c:1582 builtin/tag.c:601
 msgid "read message from file"
 msgstr "从文件中读取提交说明"
 
-#: builtin/commit.c:1619
+#: builtin/commit.c:1583
 msgid "author"
 msgstr "作者"
 
-#: builtin/commit.c:1619
+#: builtin/commit.c:1583
 msgid "override author for commit"
 msgstr "提交时覆盖作者"
 
-#: builtin/commit.c:1620 builtin/gc.c:275
+#: builtin/commit.c:1584 builtin/gc.c:275
 msgid "date"
 msgstr "日期"
 
-#: builtin/commit.c:1620
+#: builtin/commit.c:1584
 msgid "override date for commit"
 msgstr "提交时覆盖日期"
 
-#: builtin/commit.c:1621 builtin/merge.c:217 builtin/notes.c:408
-#: builtin/notes.c:565 builtin/tag.c:599
+#: builtin/commit.c:1585 builtin/merge.c:218 builtin/notes.c:391
+#: builtin/notes.c:554 builtin/tag.c:599
 msgid "message"
 msgstr "说明"
 
-#: builtin/commit.c:1621
+#: builtin/commit.c:1585
 msgid "commit message"
 msgstr "提交说明"
 
-#: builtin/commit.c:1622
+#: builtin/commit.c:1586
 msgid "reuse and edit message from specified commit"
 msgstr "重用并编辑指定提交的提交说明"
 
-#: builtin/commit.c:1623
+#: builtin/commit.c:1587
 msgid "reuse message from specified commit"
 msgstr "重用指定提交的提交说明"
 
-#: builtin/commit.c:1624
+#: builtin/commit.c:1588
 msgid "use autosquash formatted message to fixup specified commit"
 msgstr "使用 autosquash 格式的提交说明用以修正指定的提交"
 
-#: builtin/commit.c:1625
+#: builtin/commit.c:1589
 msgid "use autosquash formatted message to squash specified commit"
 msgstr "使用 autosquash 格式的提交说明用以压缩至指定的提交"
 
-#: builtin/commit.c:1626
+#: builtin/commit.c:1590
 msgid "the commit is authored by me now (used with -C/-c/--amend)"
 msgstr "现在将该提交的作者改为我（和 -C/-c/--amend 参数共用）"
 
-#: builtin/commit.c:1627 builtin/log.c:1191 builtin/revert.c:86
+#: builtin/commit.c:1591 builtin/log.c:1191 builtin/revert.c:86
 msgid "add Signed-off-by:"
 msgstr "添加 Signed-off-by: 签名"
 
-#: builtin/commit.c:1628
+#: builtin/commit.c:1592
 msgid "use specified template file"
 msgstr "使用指定的模板文件"
 
-#: builtin/commit.c:1629
+#: builtin/commit.c:1593
 msgid "force edit of commit"
 msgstr "强制编辑提交"
 
 #  译者：可选值，不能翻译（或是原文中笔误，应为 mode）
-#: builtin/commit.c:1630
+#: builtin/commit.c:1594
 msgid "default"
 msgstr "default"
 
-#: builtin/commit.c:1630 builtin/tag.c:604
+#: builtin/commit.c:1594 builtin/tag.c:604
 msgid "how to strip spaces and #comments from message"
 msgstr "设置如何删除提交说明里的空格和#注释"
 
-#: builtin/commit.c:1631
+#: builtin/commit.c:1595
 msgid "include status in commit message template"
 msgstr "在提交说明模板里包含状态信息"
 
-#: builtin/commit.c:1632 builtin/merge.c:224 builtin/revert.c:92
+#: builtin/commit.c:1596 builtin/merge.c:225 builtin/revert.c:92
 #: builtin/tag.c:605
 msgid "key-id"
 msgstr "key-id"
 
-#: builtin/commit.c:1633 builtin/merge.c:225 builtin/revert.c:93
+#: builtin/commit.c:1597 builtin/merge.c:226 builtin/revert.c:93
 msgid "GPG sign commit"
 msgstr "GPG 提交签名"
 
-#: builtin/commit.c:1636
+#: builtin/commit.c:1600
 msgid "Commit contents options"
 msgstr "提交内容选项"
 
-#: builtin/commit.c:1637
+#: builtin/commit.c:1601
 msgid "commit all changed files"
 msgstr "提交所有改动的文件"
 
-#: builtin/commit.c:1638
+#: builtin/commit.c:1602
 msgid "add specified files to index for commit"
 msgstr "添加指定的文件到索引区等待提交"
 
-#: builtin/commit.c:1639
+#: builtin/commit.c:1603
 msgid "interactively add files"
 msgstr "交互式添加文件"
 
-#: builtin/commit.c:1640
+#: builtin/commit.c:1604
 msgid "interactively add changes"
 msgstr "交互式添加变更"
 
-#: builtin/commit.c:1641
+#: builtin/commit.c:1605
 msgid "commit only specified files"
 msgstr "只提交指定的文件"
 
-#: builtin/commit.c:1642
+#: builtin/commit.c:1606
 msgid "bypass pre-commit hook"
 msgstr "绕过 pre-commit 钩子"
 
-#: builtin/commit.c:1643
+#: builtin/commit.c:1607
 msgid "show what would be committed"
 msgstr "显示将要提交的内容"
 
-#: builtin/commit.c:1654
+#: builtin/commit.c:1618
 msgid "amend previous commit"
 msgstr "修改先前的提交"
 
-#: builtin/commit.c:1655
+#: builtin/commit.c:1619
 msgid "bypass post-rewrite hook"
 msgstr "绕过 post-rewrite 钩子"
 
-#: builtin/commit.c:1660
+#: builtin/commit.c:1624
 msgid "ok to record an empty change"
 msgstr "允许一个空提交"
 
-#: builtin/commit.c:1662
+#: builtin/commit.c:1626
 msgid "ok to record a change with an empty message"
 msgstr "允许空的提交说明"
 
-#: builtin/commit.c:1691
+#: builtin/commit.c:1655
 msgid "could not parse HEAD commit"
 msgstr "不能解析 HEAD 提交"
 
-#: builtin/commit.c:1730 builtin/merge.c:518
+#: builtin/commit.c:1694 builtin/merge.c:519
 #, c-format
 msgid "could not open '%s' for reading"
 msgstr "不能为读入打开 '%s'"
 
-#: builtin/commit.c:1737
+#: builtin/commit.c:1701
 #, c-format
 msgid "Corrupt MERGE_HEAD file (%s)"
 msgstr "损坏的 MERGE_HEAD 文件（%s）"
 
-#: builtin/commit.c:1744
+#: builtin/commit.c:1708
 msgid "could not read MERGE_MODE"
 msgstr "不能读取 MERGE_MODE"
 
-#: builtin/commit.c:1763
+#: builtin/commit.c:1727
 #, c-format
 msgid "could not read commit message: %s"
 msgstr "不能读取提交说明：%s"
 
-#: builtin/commit.c:1774
+#: builtin/commit.c:1738
 #, c-format
 msgid "Aborting commit; you did not edit the message.\n"
 msgstr "终止提交；您未更改来自模版的提交说明。\n"
 
-#: builtin/commit.c:1779
+#: builtin/commit.c:1743
 #, c-format
 msgid "Aborting commit due to empty commit message.\n"
 msgstr "终止提交因为提交说明为空。\n"
 
-#: builtin/commit.c:1794 builtin/merge.c:850 builtin/merge.c:875
+#: builtin/commit.c:1758 builtin/merge.c:851 builtin/merge.c:876
 msgid "failed to write commit object"
 msgstr "无法写提交对象"
 
-#: builtin/commit.c:1827
+#: builtin/commit.c:1791
 msgid ""
 "Repository has been updated, but unable to write\n"
 "new_index file. Check that disk is not full and quota is\n"
 "not exceeded, and then \"git reset HEAD\" to recover."
 msgstr ""
 "版本库已更新，但无法写 new_index 文件。检查是否磁盘已满\n"
@@ -4797,23 +4804,19 @@
 msgstr "列出所有"
 
 #: builtin/config.c:71
 msgid "open an editor"
 msgstr "打开一个编辑器"
 
-#: builtin/config.c:72 builtin/config.c:73
-msgid "slot"
-msgstr "slot"
-
 #: builtin/config.c:72
-msgid "find the color configured: [default]"
-msgstr "找到配置的颜色：[默认]"
+msgid "find the color configured: slot [default]"
+msgstr "获得配置的颜色：配置 [默认]"
 
 #: builtin/config.c:73
-msgid "find the color setting: [stdout-is-tty]"
-msgstr "找到颜色设置：[stdout-is-tty]"
+msgid "find the color setting: slot [stdout-is-tty]"
+msgstr "获得颜色设置：配置 [stdout-is-tty]"
 
 #: builtin/config.c:74
 msgid "Type"
 msgstr "类型"
 
 #: builtin/config.c:75
@@ -4841,17 +4844,17 @@
 msgstr "终止值是NUL字节"
 
 #: builtin/config.c:81
 msgid "respect include directives on lookup"
 msgstr "查询时参照 include 指令递归查找"
 
-#: builtin/config.c:315
+#: builtin/config.c:316
 msgid "unable to parse default color value"
 msgstr "不能解析缺省的颜色值"
 
-#: builtin/config.c:455
+#: builtin/config.c:457
 #, c-format
 msgid ""
 "# This is Git's per-user configuration file.\n"
 "[core]\n"
 "# Please adapt and uncomment the following lines:\n"
 "#\tuser = %s\n"
@@ -4860,13 +4863,13 @@
 "# This is Git's per-user configuration file.\n"
 "[core]\n"
 "# Please adapt and uncomment the following lines:\n"
 "#\tuser = %s\n"
 "#\temail = %s\n"
 
-#: builtin/config.c:590
+#: builtin/config.c:589
 #, c-format
 msgid "cannot create configuration file %s"
 msgstr "不能创建配置文件 %s"
 
 #: builtin/count-objects.c:55
 msgid "git count-objects [-v] [-H | --human-readable]"
@@ -5291,13 +5294,13 @@
 msgstr "   （%s 已成为摇摆状态）"
 
 #: builtin/fetch.c:798
 msgid "[deleted]"
 msgstr "[已删除]"
 
-#: builtin/fetch.c:799 builtin/remote.c:1063
+#: builtin/fetch.c:799 builtin/remote.c:1060
 msgid "(none)"
 msgstr "（无）"
 
 #: builtin/fetch.c:818
 #, c-format
 msgid "Refusing to fetch into current branch %s of non-bare repository"
@@ -5362,83 +5365,82 @@
 #: builtin/fetch.c:1189
 msgid "Fetching a group and specifying refspecs does not make sense"
 msgstr "获取组并指定引用规则没有意义"
 
 #: builtin/fmt-merge-msg.c:13
 msgid "git fmt-merge-msg [-m <message>] [--log[=<n>]|--no-log] [--file <file>]"
-msgstr ""
-"git fmt-merge-msg [-m <message>] [--log[=<n>]|--no-log] [--file <file>]"
+msgstr "git fmt-merge-msg [-m <说明>] [--log[=<n>]|--no-log] [--file <文件>]"
 
-#: builtin/fmt-merge-msg.c:663 builtin/fmt-merge-msg.c:666 builtin/grep.c:698
-#: builtin/merge.c:197 builtin/repack.c:179 builtin/repack.c:183
-#: builtin/show-branch.c:654 builtin/show-ref.c:178 builtin/tag.c:590
+#: builtin/fmt-merge-msg.c:662 builtin/fmt-merge-msg.c:665 builtin/grep.c:698
+#: builtin/merge.c:198 builtin/repack.c:178 builtin/repack.c:182
+#: builtin/show-branch.c:657 builtin/show-ref.c:178 builtin/tag.c:590
 #: parse-options.h:132 parse-options.h:239
 msgid "n"
 msgstr "n"
 
-#: builtin/fmt-merge-msg.c:664
+#: builtin/fmt-merge-msg.c:663
 msgid "populate log with at most <n> entries from shortlog"
 msgstr "向提交说明中最多复制指定条目（合并而来的提交）的简短说明"
 
-#: builtin/fmt-merge-msg.c:667
+#: builtin/fmt-merge-msg.c:666
 msgid "alias for --log (deprecated)"
 msgstr "参数 --log 的别名（已弃用）"
 
-#: builtin/fmt-merge-msg.c:670
+#: builtin/fmt-merge-msg.c:669
 msgid "text"
 msgstr "文本"
 
-#: builtin/fmt-merge-msg.c:671
+#: builtin/fmt-merge-msg.c:670
 msgid "use <text> as start of message"
 msgstr "使用 <文本> 作为提交说明的开始"
 
-#: builtin/fmt-merge-msg.c:672
+#: builtin/fmt-merge-msg.c:671
 msgid "file to read from"
 msgstr "从文件中读取"
 
 #: builtin/for-each-ref.c:676
 msgid "unable to parse format"
 msgstr "不能解析格式"
 
-#: builtin/for-each-ref.c:1057
+#: builtin/for-each-ref.c:1064
 msgid "git for-each-ref [options] [<pattern>]"
 msgstr "git for-each-ref [选项] [<模式>]"
 
-#: builtin/for-each-ref.c:1072
+#: builtin/for-each-ref.c:1079
 msgid "quote placeholders suitably for shells"
 msgstr "引用占位符适用于 shells"
 
-#: builtin/for-each-ref.c:1074
+#: builtin/for-each-ref.c:1081
 msgid "quote placeholders suitably for perl"
 msgstr "引用占位符适用于 perl"
 
-#: builtin/for-each-ref.c:1076
+#: builtin/for-each-ref.c:1083
 msgid "quote placeholders suitably for python"
 msgstr "引用占位符适用于 python"
 
-#: builtin/for-each-ref.c:1078
-msgid "quote placeholders suitably for tcl"
-msgstr "引用占位符适用于 tcl"
+#: builtin/for-each-ref.c:1085
+msgid "quote placeholders suitably for Tcl"
+msgstr "引用占位符适用于 Tcl"
 
-#: builtin/for-each-ref.c:1081
+#: builtin/for-each-ref.c:1088
 msgid "show only <n> matched refs"
 msgstr "只显示 <n> 个匹配的引用"
 
-#: builtin/for-each-ref.c:1082 builtin/replace.c:438
+#: builtin/for-each-ref.c:1089 builtin/replace.c:438
 msgid "format"
 msgstr "格式"
 
-#: builtin/for-each-ref.c:1082
+#: builtin/for-each-ref.c:1089
 msgid "format to use for the output"
 msgstr "输出格式"
 
-#: builtin/for-each-ref.c:1083
+#: builtin/for-each-ref.c:1090
 msgid "key"
 msgstr "key"
 
-#: builtin/for-each-ref.c:1084
+#: builtin/for-each-ref.c:1091
 msgid "field name to sort on"
 msgstr "排序的字段名"
 
 #: builtin/fsck.c:147 builtin/prune.c:136
 msgid "Checking connectivity"
 msgstr "检查连接中"
@@ -5551,13 +5553,13 @@
 msgid ""
 "There are too many unreachable loose objects; run 'git prune' to remove them."
 msgstr "有太多不可达的松散对象，运行 'git prune' 删除它们。"
 
 #: builtin/grep.c:23
 msgid "git grep [options] [-e] <pattern> [<rev>...] [[--] <path>...]"
-msgstr "git grep [选项] [-e] <模式> [<修订>...] [[--] <路径>...]"
+msgstr "git grep [选项] [-e] <模式> [<版本>...] [[--] <路径>...]"
 
 #: builtin/grep.c:218
 #, c-format
 msgid "grep: failed to create thread: %s"
 msgstr "grep：无法创建线程：%s"
 
@@ -5870,78 +5872,78 @@
 #, c-format
 msgid ""
 "'%s': path for unsupported man viewer.\n"
 "Please consider using 'man.<tool>.cmd' instead."
 msgstr ""
 "'%s'：不支持的 man 手册查看器的路径。\n"
-"请使用 'man.<tool>.cmd'。"
+"请使用 'man.<工具>.cmd'。"
 
 #: builtin/help.c:227
 #, c-format
 msgid ""
 "'%s': cmd for supported man viewer.\n"
 "Please consider using 'man.<tool>.path' instead."
 msgstr ""
 "'%s': 支持的 man 手册查看器命令。\n"
-"请使用 'man.<tool>.path'。"
+"请使用 'man.<工具>.path'。"
 
-#: builtin/help.c:352
+#: builtin/help.c:354
 #, c-format
 msgid "'%s': unknown man viewer."
 msgstr "'%s'：未知的 man 查看器。"
 
-#: builtin/help.c:369
+#: builtin/help.c:371
 msgid "no man viewer handled the request"
 msgstr "没有 man 查看器处理此请求"
 
-#: builtin/help.c:377
+#: builtin/help.c:379
 msgid "no info viewer handled the request"
 msgstr "没有 info 查看器处理此请求"
 
-#: builtin/help.c:423
+#: builtin/help.c:428
 msgid "Defining attributes per path"
 msgstr "定义路径的属性"
 
-#: builtin/help.c:424
+#: builtin/help.c:429
 msgid "Everyday Git With 20 Commands Or So"
 msgstr "每一天 Git 常用的约 20 条命令"
 
-#: builtin/help.c:425
+#: builtin/help.c:430
 msgid "A Git glossary"
 msgstr "Git 词汇表"
 
-#: builtin/help.c:426
+#: builtin/help.c:431
 msgid "Specifies intentionally untracked files to ignore"
 msgstr "忽略指定的未跟踪文件"
 
-#: builtin/help.c:427
+#: builtin/help.c:432
 msgid "Defining submodule properties"
 msgstr "定义子模组属性"
 
-#: builtin/help.c:428
+#: builtin/help.c:433
 msgid "Specifying revisions and ranges for Git"
 msgstr "指定 Git 的版本和版本范围"
 
-#: builtin/help.c:429
+#: builtin/help.c:434
 msgid "A tutorial introduction to Git (for version 1.5.1 or newer)"
 msgstr "一个 Git 教程（针对 1.5.1 或更新版本）"
 
-#: builtin/help.c:430
+#: builtin/help.c:435
 msgid "An overview of recommended workflows with Git"
 msgstr "Git 推荐的工作流概览"
 
-#: builtin/help.c:442
+#: builtin/help.c:447
 msgid "The common Git guides are:\n"
 msgstr "最常用的 Git 向导有：\n"
 
-#: builtin/help.c:463 builtin/help.c:480
+#: builtin/help.c:468 builtin/help.c:485
 #, c-format
 msgid "usage: %s%s"
 msgstr "用法：%s%s"
 
-#: builtin/help.c:496
+#: builtin/help.c:501
 #, c-format
 msgid "`git %s' is aliased to `%s'"
 msgstr "`git %s' 是 `%s' 的别名"
 
 #: builtin/index-pack.c:150
 #, c-format
@@ -6278,108 +6280,106 @@
 
 #: builtin/init-db.c:110
 #, c-format
 msgid "ignoring template %s"
 msgstr "忽略模版 %s"
 
-#: builtin/init-db.c:133
+#: builtin/init-db.c:136
 #, c-format
 msgid "insanely long template path %s"
 msgstr "太长的模版路径 %s"
 
-#: builtin/init-db.c:141
+#: builtin/init-db.c:144
 #, c-format
 msgid "templates not found %s"
 msgstr "模版未找到 %s"
 
-#: builtin/init-db.c:154
+#: builtin/init-db.c:157
 #, c-format
 msgid "not copying templates of a wrong format version %d from '%s'"
 msgstr "没有从 '%2$s' 复制带有错误版本 %1$d 的模版"
 
-#: builtin/init-db.c:192
+#: builtin/init-db.c:197
 #, c-format
 msgid "insane git directory %s"
 msgstr "不正常的 git 目录 %s"
 
-#: builtin/init-db.c:323 builtin/init-db.c:326
+#: builtin/init-db.c:331 builtin/init-db.c:334
 #, c-format
 msgid "%s already exists"
 msgstr "%s 已经存在"
 
-#: builtin/init-db.c:355
+#: builtin/init-db.c:363
 #, c-format
 msgid "unable to handle file type %d"
 msgstr "不能处理 %d 类型的文件"
 
-#: builtin/init-db.c:358
+#: builtin/init-db.c:366
 #, c-format
 msgid "unable to move %s to %s"
 msgstr "不能移动 %s 至 %s"
 
 #. TRANSLATORS: The first '%s' is either "Reinitialized
 #. existing" or "Initialized empty", the second " shared" or
 #. "", and the last '%s%s' is the verbatim directory name.
-#: builtin/init-db.c:418
+#: builtin/init-db.c:426
 #, c-format
 msgid "%s%s Git repository in %s%s\n"
 msgstr "%s%s Git 版本库于 %s%s\n"
 
-#: builtin/init-db.c:419
+#: builtin/init-db.c:427
 msgid "Reinitialized existing"
 msgstr "重新初始化现存的"
 
-#: builtin/init-db.c:419
+#: builtin/init-db.c:427
 msgid "Initialized empty"
 msgstr "初始化空的"
 
 #  译者：中文字符串拼接，可删除前导空格
-#: builtin/init-db.c:420
+#: builtin/init-db.c:428
 msgid " shared"
 msgstr "共享"
 
-#: builtin/init-db.c:467
+#: builtin/init-db.c:475
 msgid ""
 "git init [-q | --quiet] [--bare] [--template=<template-directory>] [--"
 "shared[=<permissions>]] [directory]"
 msgstr ""
 "git init [-q | --quiet] [--bare] [--template=<模板目录>] [--shared[=<权限>]] "
 "[目录]"
 
-#: builtin/init-db.c:490
+#: builtin/init-db.c:498
 msgid "permissions"
 msgstr "权限"
 
-#: builtin/init-db.c:491
+#: builtin/init-db.c:499
 msgid "specify that the git repository is to be shared amongst several users"
 msgstr "指定 git 版本库是多个用户之间共享的"
 
-#: builtin/init-db.c:493 builtin/prune-packed.c:57 builtin/repack.c:172
+#: builtin/init-db.c:501 builtin/prune-packed.c:57 builtin/repack.c:171
 msgid "be quiet"
 msgstr "保持安静"
 
-#: builtin/init-db.c:525 builtin/init-db.c:530
+#: builtin/init-db.c:533 builtin/init-db.c:538
 #, c-format
 msgid "cannot mkdir %s"
 msgstr "不能创建目录 %s"
 
-#: builtin/init-db.c:534
+#: builtin/init-db.c:542
 #, c-format
 msgid "cannot chdir to %s"
 msgstr "不能切换目录到 %s"
 
-#: builtin/init-db.c:555
+#: builtin/init-db.c:563
 #, c-format
 msgid ""
 "%s (or --work-tree=<directory>) not allowed without specifying %s (or --git-"
 "dir=<directory>)"
-msgstr ""
-"不允许 %s（或 --work-tree=<directory>）而没有指定 %s（或 --git-"
-"dir=<directory>）"
+msgstr "不允许 %s（或 --work-tree=<目录>）而没有指定 %s（或 --git-dir=<目录>）"
 
-#: builtin/init-db.c:583
+#: builtin/init-db.c:591
 #, c-format
 msgid "Cannot access work tree '%s'"
 msgstr "不能访问工作区 '%s'"
 
 #: builtin/interpret-trailers.c:15
 msgid ""
@@ -6399,18 +6399,18 @@
 
 #: builtin/interpret-trailers.c:27
 msgid "trailer(s) to add"
 msgstr "要添加的签名"
 
 #: builtin/log.c:41
-msgid "git log [<options>] [<revision range>] [[--] <path>...]\n"
-msgstr "git log [<选项>] [<版本范围>] [[--] <路径>...]\n"
+msgid "git log [<options>] [<revision range>] [[--] <path>...]"
+msgstr "git log [<选项>] [<版本范围>] [[--] <路径>...]"
 
 #: builtin/log.c:42
-msgid "   or: git show [options] <object>..."
-msgstr "   或者：git show [选项] <对象>..."
+msgid "git show [options] <object>..."
+msgstr "git show [选项] <对象>..."
 
 #: builtin/log.c:81
 #, c-format
 msgid "invalid --decorate option: %s"
 msgstr "无效的 --decorate 选项：%s"
 
@@ -6483,13 +6483,13 @@
 #, c-format
 msgid "insane in-reply-to: %s"
 msgstr "不正常的 in-reply-to：%s"
 
 #: builtin/log.c:1026
 msgid "git format-patch [options] [<since> | <revision range>]"
-msgstr "git format-patch [选项] [<从> | <修订集范围>]"
+msgstr "git format-patch [选项] [<从> | <版本范围>]"
 
 #: builtin/log.c:1071
 msgid "Two output directories?"
 msgstr "两个输出目录？"
 
 #: builtin/log.c:1186
@@ -6531,13 +6531,13 @@
 #: builtin/log.c:1205
 msgid "Use [<prefix>] instead of [PATCH]"
 msgstr "使用 [<前缀>] 代替 [PATCH]"
 
 #: builtin/log.c:1208
 msgid "store resulting files in <dir>"
-msgstr "把结果文件存储在 <dir>"
+msgstr "把结果文件存储在 <目录>"
 
 #: builtin/log.c:1211
 msgid "don't strip/add [PATCH]"
 msgstr "不删除/添加 [PATCH]"
 
 #: builtin/log.c:1214
@@ -6575,25 +6575,25 @@
 #: builtin/log.c:1225
 msgid "add Cc: header"
 msgstr "添加抄送"
 
 #: builtin/log.c:1227
 msgid "ident"
-msgstr "ident"
+msgstr "标识"
 
 #: builtin/log.c:1228
 msgid "set From address to <ident> (or committer ident if absent)"
-msgstr "设置 From 地址为 <ident>（如若不提供，用提交者ID做为地址）"
+msgstr "将 From 地址设置为 <标识>（如若不提供，则用提交者ID做为地址）"
 
 #: builtin/log.c:1230
 msgid "message-id"
-msgstr "message-id"
+msgstr "邮件标识"
 
 #: builtin/log.c:1231
 msgid "make first mail a reply to <message-id>"
-msgstr "使第一封邮件作为对 <message-id> 的回复"
+msgstr "使第一封邮件作为对 <邮件标识> 的回复"
 
 #: builtin/log.c:1232 builtin/log.c:1235
 msgid "boundary"
 msgstr "边界"
 
 #: builtin/log.c:1233
@@ -6672,13 +6672,13 @@
 msgstr "git cherry [-v] [<上游> [<头> [<限制>]]]"
 
 #: builtin/log.c:1638
 #, c-format
 msgid ""
 "Could not find a tracked remote branch, please specify <upstream> manually.\n"
-msgstr "不能找到跟踪的远程分支，请手工指定 <upstream>。\n"
+msgstr "不能找到跟踪的远程分支，请手工指定 <上游>。\n"
 
 #: builtin/log.c:1651 builtin/log.c:1653 builtin/log.c:1665
 #, c-format
 msgid "Unknown commit %s"
 msgstr "未知提交 %s"
 
@@ -6775,218 +6775,218 @@
 msgstr "显示调试数据"
 
 #: builtin/ls-tree.c:28
 msgid "git ls-tree [<options>] <tree-ish> [<path>...]"
 msgstr "git ls-tree [<选项>] <树或提交> [<路径>...]"
 
-#: builtin/ls-tree.c:126
+#: builtin/ls-tree.c:127
 msgid "only show trees"
 msgstr "只显示树"
 
-#: builtin/ls-tree.c:128
+#: builtin/ls-tree.c:129
 msgid "recurse into subtrees"
 msgstr "递归到子树"
 
-#: builtin/ls-tree.c:130
+#: builtin/ls-tree.c:131
 msgid "show trees when recursing"
 msgstr "当递归时显示树"
 
-#: builtin/ls-tree.c:133
+#: builtin/ls-tree.c:134
 msgid "terminate entries with NUL byte"
 msgstr "条目以NUL字符终止"
 
-#: builtin/ls-tree.c:134
+#: builtin/ls-tree.c:135
 msgid "include object size"
 msgstr "包括对象大小"
 
-#: builtin/ls-tree.c:136 builtin/ls-tree.c:138
+#: builtin/ls-tree.c:137 builtin/ls-tree.c:139
 msgid "list only filenames"
 msgstr "只列出文件名"
 
-#: builtin/ls-tree.c:141
+#: builtin/ls-tree.c:142
 msgid "use full path names"
 msgstr "使用文件的全路径"
 
-#: builtin/ls-tree.c:143
+#: builtin/ls-tree.c:144
 msgid "list entire tree; not just current directory (implies --full-name)"
 msgstr "列出整个树；不仅仅当前目录（隐含 --full-name）"
 
-#: builtin/merge.c:44
+#: builtin/merge.c:45
 msgid "git merge [options] [<commit>...]"
 msgstr "git merge [选项] [<提交>...]"
 
-#: builtin/merge.c:45
+#: builtin/merge.c:46
 msgid "git merge [options] <msg> HEAD <commit>"
 msgstr "git merge [选项] <说明> HEAD <提交>"
 
-#: builtin/merge.c:46
+#: builtin/merge.c:47
 msgid "git merge --abort"
 msgstr "git merge --abort"
 
-#: builtin/merge.c:99
+#: builtin/merge.c:100
 msgid "switch `m' requires a value"
 msgstr "开关 `m' 需要一个值"
 
-#: builtin/merge.c:136
+#: builtin/merge.c:137
 #, c-format
 msgid "Could not find merge strategy '%s'.\n"
 msgstr "不能找到合并策略 '%s'。\n"
 
-#: builtin/merge.c:137
+#: builtin/merge.c:138
 #, c-format
 msgid "Available strategies are:"
 msgstr "可用的策略有："
 
-#: builtin/merge.c:142
+#: builtin/merge.c:143
 #, c-format
 msgid "Available custom strategies are:"
 msgstr "可用的自定义策略有："
 
-#: builtin/merge.c:192
+#: builtin/merge.c:193
 msgid "do not show a diffstat at the end of the merge"
 msgstr "在合并的最后不显示差异统计"
 
-#: builtin/merge.c:195
+#: builtin/merge.c:196
 msgid "show a diffstat at the end of the merge"
 msgstr "在合并的最后显示差异统计"
 
-#: builtin/merge.c:196
+#: builtin/merge.c:197
 msgid "(synonym to --stat)"
 msgstr "（和 --stat 同义）"
 
-#: builtin/merge.c:198
+#: builtin/merge.c:199
 msgid "add (at most <n>) entries from shortlog to merge commit message"
 msgstr "在合并提交信息中添加（最多 <n> 条）精简提交记录"
 
-#: builtin/merge.c:201
+#: builtin/merge.c:202
 msgid "create a single commit instead of doing a merge"
 msgstr "创建一个单独的提交而不是做一次合并"
 
-#: builtin/merge.c:203
+#: builtin/merge.c:204
 msgid "perform a commit if the merge succeeds (default)"
 msgstr "如果合并成功，执行一次提交（默认）"
 
-#: builtin/merge.c:205
+#: builtin/merge.c:206
 msgid "edit message before committing"
 msgstr "在提交前编辑提交说明"
 
-#: builtin/merge.c:206
+#: builtin/merge.c:207
 msgid "allow fast-forward (default)"
 msgstr "允许快进（默认）"
 
-#: builtin/merge.c:208
+#: builtin/merge.c:209
 msgid "abort if fast-forward is not possible"
 msgstr "如果不能快进就放弃合并"
 
-#: builtin/merge.c:212
+#: builtin/merge.c:213
 msgid "Verify that the named commit has a valid GPG signature"
 msgstr "验证指定的提交是否包含一个有效的 GPG 签名"
 
-#: builtin/merge.c:213 builtin/notes.c:741 builtin/revert.c:89
+#: builtin/merge.c:214 builtin/notes.c:753 builtin/revert.c:89
 msgid "strategy"
 msgstr "策略"
 
-#: builtin/merge.c:214
+#: builtin/merge.c:215
 msgid "merge strategy to use"
 msgstr "要使用的合并策略"
 
-#: builtin/merge.c:215
+#: builtin/merge.c:216
 msgid "option=value"
 msgstr "option=value"
 
-#: builtin/merge.c:216
+#: builtin/merge.c:217
 msgid "option for selected merge strategy"
 msgstr "所选的合并策略的选项"
 
-#: builtin/merge.c:218
+#: builtin/merge.c:219
 msgid "merge commit message (for a non-fast-forward merge)"
 msgstr "合并的提交说明（针对非快进式合并）"
 
-#: builtin/merge.c:222
+#: builtin/merge.c:223
 msgid "abort the current in-progress merge"
 msgstr "放弃当前正在进行的合并"
 
-#: builtin/merge.c:250
+#: builtin/merge.c:251
 msgid "could not run stash."
 msgstr "不能进行进度保存。"
 
-#: builtin/merge.c:255
+#: builtin/merge.c:256
 msgid "stash failed"
 msgstr "进度保存失败"
 
-#: builtin/merge.c:260
+#: builtin/merge.c:261
 #, c-format
 msgid "not a valid object: %s"
 msgstr "不是一个有效对象：%s"
 
-#: builtin/merge.c:279 builtin/merge.c:296
+#: builtin/merge.c:280 builtin/merge.c:297
 msgid "read-tree failed"
 msgstr "读取树失败"
 
 #  译者：注意保持前导空格
-#: builtin/merge.c:326
+#: builtin/merge.c:327
 msgid " (nothing to squash)"
 msgstr " （无可压缩）"
 
-#: builtin/merge.c:339
+#: builtin/merge.c:340
 #, c-format
 msgid "Squash commit -- not updating HEAD\n"
 msgstr "压缩提交 -- 未更新 HEAD\n"
 
-#: builtin/merge.c:371
+#: builtin/merge.c:372
 msgid "Writing SQUASH_MSG"
 msgstr "写入 SQUASH_MSG"
 
-#: builtin/merge.c:373
+#: builtin/merge.c:374
 msgid "Finishing SQUASH_MSG"
 msgstr "完成 SQUASH_MSG"
 
-#: builtin/merge.c:396
+#: builtin/merge.c:397
 #, c-format
 msgid "No merge message -- not updating HEAD\n"
 msgstr "无合并信息 -- 未更新 HEAD\n"
 
-#: builtin/merge.c:446
+#: builtin/merge.c:447
 #, c-format
 msgid "'%s' does not point to a commit"
 msgstr "'%s' 没有指向一个提交"
 
-#: builtin/merge.c:558
+#: builtin/merge.c:559
 #, c-format
 msgid "Bad branch.%s.mergeoptions string: %s"
 msgstr "坏的 branch.%s.mergeoptions 字符串：%s"
 
-#: builtin/merge.c:653
+#: builtin/merge.c:654
 msgid "git write-tree failed to write a tree"
 msgstr "git write-tree 无法写入一树对象"
 
-#: builtin/merge.c:677
+#: builtin/merge.c:678
 msgid "Not handling anything other than two heads merge."
 msgstr "不能处理两个头合并之外的任何操作。"
 
-#: builtin/merge.c:691
+#: builtin/merge.c:692
 #, c-format
 msgid "Unknown option for merge-recursive: -X%s"
 msgstr "merge-recursive 的未知选项：-X%s"
 
-#: builtin/merge.c:704
+#: builtin/merge.c:705
 #, c-format
 msgid "unable to write %s"
 msgstr "不能写 %s"
 
-#: builtin/merge.c:793
+#: builtin/merge.c:794
 #, c-format
 msgid "Could not read from '%s'"
 msgstr "不能从 '%s' 读取"
 
-#: builtin/merge.c:802
+#: builtin/merge.c:803
 #, c-format
 msgid "Not committing merge; use 'git commit' to complete the merge.\n"
 msgstr "未提交合并，使用 'git commit' 完成此次合并。\n"
 
-#: builtin/merge.c:808
+#: builtin/merge.c:809
 #, c-format
 msgid ""
 "Please enter a commit message to explain why this merge is necessary,\n"
 "especially if it merges an updated upstream into a topic branch.\n"
 "\n"
 "Lines starting with '%c' will be ignored, and an empty message aborts\n"
@@ -6994,166 +6994,166 @@
 msgstr ""
 "请输入一个提交信息以解释此合并的必要性，尤其是将一个更新后的上游分支\n"
 "合并到主题分支。\n"
 "\n"
 "以 '%c' 开头的行将被忽略，而且空提交说明将会终止提交。\n"
 
-#: builtin/merge.c:832
+#: builtin/merge.c:833
 msgid "Empty commit message."
 msgstr "空提交信息。"
 
-#: builtin/merge.c:844
+#: builtin/merge.c:845
 #, c-format
 msgid "Wonderful.\n"
 msgstr "太棒了。\n"
 
-#: builtin/merge.c:907
+#: builtin/merge.c:900
 #, c-format
 msgid "Automatic merge failed; fix conflicts and then commit the result.\n"
 msgstr "自动合并失败，修正冲突然后提交修正的结果。\n"
 
-#: builtin/merge.c:923
+#: builtin/merge.c:916
 #, c-format
 msgid "'%s' is not a commit"
 msgstr "'%s' 不是一个提交"
 
-#: builtin/merge.c:964
+#: builtin/merge.c:957
 msgid "No current branch."
 msgstr "没有当前分支。"
 
-#: builtin/merge.c:966
+#: builtin/merge.c:959
 msgid "No remote for the current branch."
 msgstr "当前分支没有对应的远程版本库。"
 
-#: builtin/merge.c:968
+#: builtin/merge.c:961
 msgid "No default upstream defined for the current branch."
 msgstr "当前分支没有定义默认的上游分支。"
 
-#: builtin/merge.c:973
+#: builtin/merge.c:966
 #, c-format
 msgid "No remote-tracking branch for %s from %s"
 msgstr "对于 %s 没有来自 %s 的远程跟踪分支"
 
-#: builtin/merge.c:1129
+#: builtin/merge.c:1122
 msgid "There is no merge to abort (MERGE_HEAD missing)."
 msgstr "没有要终止的合并（MERGE_HEAD 丢失）。"
 
-#: builtin/merge.c:1145
+#: builtin/merge.c:1138
 msgid ""
 "You have not concluded your merge (MERGE_HEAD exists).\n"
 "Please, commit your changes before you merge."
 msgstr ""
 "您尚未结束您的合并（存在 MERGE_HEAD）。\n"
 "请在合并前先提交您的修改。"
 
-#: builtin/merge.c:1148 git-pull.sh:34
+#: builtin/merge.c:1141 git-pull.sh:34
 msgid "You have not concluded your merge (MERGE_HEAD exists)."
 msgstr "您尚未结束您的合并（存在 MERGE_HEAD）。"
 
-#: builtin/merge.c:1152
+#: builtin/merge.c:1145
 msgid ""
 "You have not concluded your cherry-pick (CHERRY_PICK_HEAD exists).\n"
 "Please, commit your changes before you merge."
 msgstr ""
 "您尚未结束您的拣选（存在 CHERRY_PICK_HEAD）。\n"
 "请在合并前先提交您的修改。"
 
-#: builtin/merge.c:1155
+#: builtin/merge.c:1148
 msgid "You have not concluded your cherry-pick (CHERRY_PICK_HEAD exists)."
 msgstr "您尚未结束您的拣选（存在 CHERRY_PICK_HEAD）。"
 
-#: builtin/merge.c:1164
+#: builtin/merge.c:1157
 msgid "You cannot combine --squash with --no-ff."
 msgstr "您不能将 --squash 与 --no-ff 同时使用。"
 
-#: builtin/merge.c:1173
+#: builtin/merge.c:1166
 msgid "No commit specified and merge.defaultToUpstream not set."
 msgstr "未指定提交并且 merge.defaultToUpstream 未设置。"
 
-#: builtin/merge.c:1205
+#: builtin/merge.c:1198
 msgid "Can merge only exactly one commit into empty head"
 msgstr "只能将一个提交合并到空分支上"
 
-#: builtin/merge.c:1208
+#: builtin/merge.c:1201
 msgid "Squash commit into empty head not supported yet"
 msgstr "尚不支持到空分支的压缩提交"
 
-#: builtin/merge.c:1210
+#: builtin/merge.c:1203
 msgid "Non-fast-forward commit does not make sense into an empty head"
 msgstr "到空分支的非快进式提交没有意义"
 
-#: builtin/merge.c:1215
+#: builtin/merge.c:1208
 #, c-format
 msgid "%s - not something we can merge"
 msgstr "%s - 不能被合并"
 
-#: builtin/merge.c:1266
+#: builtin/merge.c:1259
 #, c-format
 msgid "Commit %s has an untrusted GPG signature, allegedly by %s."
 msgstr "提交 %s 有一个非可信的声称来自 %s 的 GPG 签名。"
 
-#: builtin/merge.c:1269
+#: builtin/merge.c:1262
 #, c-format
 msgid "Commit %s has a bad GPG signature allegedly by %s."
 msgstr "提交 %s 有一个错误的声称来自 %s 的 GPG 签名。"
 
-#: builtin/merge.c:1272
+#: builtin/merge.c:1265
 #, c-format
 msgid "Commit %s does not have a GPG signature."
 msgstr "提交 %s 没有一个 GPG 签名。"
 
-#: builtin/merge.c:1275
+#: builtin/merge.c:1268
 #, c-format
 msgid "Commit %s has a good GPG signature by %s\n"
 msgstr "提交 %s 有一个来自 %s 的好的 GPG 签名。\n"
 
-#: builtin/merge.c:1356
+#: builtin/merge.c:1349
 #, c-format
 msgid "Updating %s..%s\n"
 msgstr "更新 %s..%s\n"
 
-#: builtin/merge.c:1395
+#: builtin/merge.c:1388
 #, c-format
 msgid "Trying really trivial in-index merge...\n"
 msgstr "尝试非常小的索引内合并...\n"
 
-#: builtin/merge.c:1402
+#: builtin/merge.c:1395
 #, c-format
 msgid "Nope.\n"
 msgstr "无。\n"
 
-#: builtin/merge.c:1434
+#: builtin/merge.c:1427
 msgid "Not possible to fast-forward, aborting."
 msgstr "无法快进，终止。"
 
-#: builtin/merge.c:1457 builtin/merge.c:1536
+#: builtin/merge.c:1450 builtin/merge.c:1529
 #, c-format
 msgid "Rewinding the tree to pristine...\n"
 msgstr "将树回滚至原始状态...\n"
 
-#: builtin/merge.c:1461
+#: builtin/merge.c:1454
 #, c-format
 msgid "Trying merge strategy %s...\n"
 msgstr "尝试合并策略 %s...\n"
 
-#: builtin/merge.c:1527
+#: builtin/merge.c:1520
 #, c-format
 msgid "No merge strategy handled the merge.\n"
 msgstr "没有合并策略处理此合并。\n"
 
-#: builtin/merge.c:1529
+#: builtin/merge.c:1522
 #, c-format
 msgid "Merge with strategy %s failed.\n"
 msgstr "使用策略 %s 合并失败。\n"
 
-#: builtin/merge.c:1538
+#: builtin/merge.c:1531
 #, c-format
 msgid "Using the %s to prepare resolving by hand.\n"
 msgstr "使用 %s 以准备手工解决。\n"
 
-#: builtin/merge.c:1550
+#: builtin/merge.c:1543
 #, c-format
 msgid "Automatic merge went well; stopped before committing as requested\n"
 msgstr "自动合并进展顺利，按要求在提交前停止\n"
 
 #: builtin/merge-base.c:29
 msgid "git merge-base [-a|--all] <commit> <commit>..."
@@ -7170,13 +7170,13 @@
 #: builtin/merge-base.c:32
 msgid "git merge-base --is-ancestor <commit> <commit>"
 msgstr "git merge-base --is-ancestor <提交> <提交>"
 
 #: builtin/merge-base.c:33
 msgid "git merge-base --fork-point <ref> [<commit>]"
-msgstr "git merge-base --fork-point <提交> [<提交>]"
+msgstr "git merge-base --fork-point <引用> [<提交>]"
 
 #: builtin/merge-base.c:214
 msgid "output all common ancestors"
 msgstr "输出所有共同的祖先"
 
 #: builtin/merge-base.c:216
@@ -7190,13 +7190,13 @@
 #: builtin/merge-base.c:220
 msgid "is the first one ancestor of the other?"
 msgstr "第一个是其他的祖先提交么？"
 
 #: builtin/merge-base.c:222
 msgid "find where <commit> forked from reflog of <ref>"
-msgstr "查找 <commit> 从<引用>日志的何处分支的"
+msgstr "查找 <提交> 从<引用>日志的何处分支的"
 
 #: builtin/merge-file.c:8
 msgid ""
 "git merge-file [options] [-L name1 [-L orig [-L name2]]] file1 orig_file "
 "file2"
 msgstr ""
@@ -7334,13 +7334,13 @@
 
 #: builtin/mv.c:253
 #, c-format
 msgid "Renaming %s to %s\n"
 msgstr "重命名 %s 至 %s\n"
 
-#: builtin/mv.c:256 builtin/remote.c:726 builtin/repack.c:358
+#: builtin/mv.c:256 builtin/remote.c:728 builtin/repack.c:355
 #, c-format
 msgid "renaming '%s' failed"
 msgstr "重命名 '%s' 失败"
 
 #: builtin/name-rev.c:255
 msgid "git name-rev [options] <commit>..."
@@ -7385,33 +7385,33 @@
 #: builtin/notes.c:24
 msgid "git notes [--ref <notes_ref>] [list [<object>]]"
 msgstr "git notes [--ref <注解引用>] [list [<对象>]]"
 
 #: builtin/notes.c:25
 msgid ""
-"git notes [--ref <notes_ref>] add [-f] [-m <msg> | -F <file> | (-c | -C) "
-"<object>] [<object>]"
+"git notes [--ref <notes_ref>] add [-f] [--allow-empty] [-m <msg> | -F <file> "
+"| (-c | -C) <object>] [<object>]"
 msgstr ""
-"git notes [--ref <注解引用>] add [-f] [-m <说明> | -F <文件> | (-c | -C) <对"
-"象>] [<对象>]"
+"git notes [--ref <注解引用>] add [-f] [--allow-empty] [-m <说明> | -F <文件> "
+"| (-c | -C) <对象>] [<对象>]"
 
 #: builtin/notes.c:26
 msgid "git notes [--ref <notes_ref>] copy [-f] <from-object> <to-object>"
 msgstr "git notes [--ref <注解引用>] copy [-f] <源对象> <目标对象>"
 
 #: builtin/notes.c:27
 msgid ""
-"git notes [--ref <notes_ref>] append [-m <msg> | -F <file> | (-c | -C) "
-"<object>] [<object>]"
+"git notes [--ref <notes_ref>] append [--allow-empty] [-m <msg> | -F <file> | "
+"(-c | -C) <object>] [<object>]"
 msgstr ""
-"git notes [--ref <注解引用>] append [-m <说明> | -F <文件> | (-c | -C) <对象"
-">] [<对象>]"
+"git notes [--ref <注解引用>] append [--allow-empty] [-m <说明> | -F <文件> | "
+"(-c | -C) <对象>] [<对象>]"
 
 #: builtin/notes.c:28
-msgid "git notes [--ref <notes_ref>] edit [<object>]"
-msgstr "git notes [--ref <注解引用>] edit [<对象>]"
+msgid "git notes [--ref <notes_ref>] edit [--allow-empty] [<object>]"
+msgstr "git notes [--ref <注解引用>] edit [--allow-empty] [<对象>]"
 
 #: builtin/notes.c:29
 msgid "git notes [--ref <notes_ref>] show [<object>]"
 msgstr "git notes [--ref <注解引用>] show [<对象>]"
 
 #: builtin/notes.c:30
@@ -7488,220 +7488,224 @@
 msgstr "git notes prune [<选项>]"
 
 #: builtin/notes.c:88
 msgid "git notes get-ref"
 msgstr "git notes get-ref"
 
-#: builtin/notes.c:136
+#: builtin/notes.c:146
 #, c-format
 msgid "unable to start 'show' for object '%s'"
 msgstr "不能为对象 '%s' 开始 'show'"
 
-#: builtin/notes.c:140
+#: builtin/notes.c:150
 msgid "could not read 'show' output"
 msgstr "不能读取 'show' 的输出"
 
-#: builtin/notes.c:148
+#: builtin/notes.c:158
 #, c-format
 msgid "failed to finish 'show' for object '%s'"
 msgstr "无法为对象 '%s' 完成 'show'"
 
-#: builtin/notes.c:166 builtin/tag.c:477
+#: builtin/notes.c:173 builtin/tag.c:477
 #, c-format
 msgid "could not create file '%s'"
 msgstr "不能创建文件 '%s'"
 
-#: builtin/notes.c:185
+#: builtin/notes.c:192
 msgid "Please supply the note contents using either -m or -F option"
 msgstr "请通过 -m 或 -F 选项为注解提供内容"
 
-#: builtin/notes.c:206 builtin/notes.c:847
-#, c-format
-msgid "Removing note for object %s\n"
-msgstr "删除对象 %s 的注解\n"
-
-#: builtin/notes.c:211
+#: builtin/notes.c:201
 msgid "unable to write note object"
 msgstr "不能写注解对象"
 
-#: builtin/notes.c:213
+#: builtin/notes.c:203
 #, c-format
 msgid "The note contents have been left in %s"
 msgstr "注解内容被留在 %s 中"
 
-#: builtin/notes.c:247 builtin/tag.c:693
+#: builtin/notes.c:231 builtin/tag.c:693
 #, c-format
 msgid "cannot read '%s'"
 msgstr "不能读取 '%s'"
 
-#: builtin/notes.c:249 builtin/tag.c:696
+#: builtin/notes.c:233 builtin/tag.c:696
 #, c-format
 msgid "could not open or read '%s'"
 msgstr "不能打开或读取 '%s'"
 
-#: builtin/notes.c:268 builtin/notes.c:319 builtin/notes.c:321
-#: builtin/notes.c:381 builtin/notes.c:435 builtin/notes.c:518
-#: builtin/notes.c:523 builtin/notes.c:598 builtin/notes.c:640
-#: builtin/notes.c:842 builtin/tag.c:709
+#: builtin/notes.c:252 builtin/notes.c:303 builtin/notes.c:305
+#: builtin/notes.c:365 builtin/notes.c:420 builtin/notes.c:506
+#: builtin/notes.c:511 builtin/notes.c:589 builtin/notes.c:652
+#: builtin/notes.c:854 builtin/tag.c:709
 #, c-format
 msgid "Failed to resolve '%s' as a valid ref."
 msgstr "无法解析 '%s' 为一个有效引用。"
 
-#: builtin/notes.c:271
+#: builtin/notes.c:255
 #, c-format
 msgid "Failed to read object '%s'."
 msgstr "无法读取对象 '%s'。"
 
-#: builtin/notes.c:275
+#: builtin/notes.c:259
 #, c-format
 msgid "Cannot read note data from non-blob object '%s'."
 msgstr "不能从非数据对象 '%s' 中读取注解数据"
 
-#: builtin/notes.c:315
+#: builtin/notes.c:299
 #, c-format
 msgid "Malformed input line: '%s'."
 msgstr "非法的输入行：'%s'。"
 
-#: builtin/notes.c:330
+#: builtin/notes.c:314
 #, c-format
 msgid "Failed to copy notes from '%s' to '%s'"
 msgstr "无法从 '%s' 到 '%s' 拷贝注解"
 
-#: builtin/notes.c:374 builtin/notes.c:428 builtin/notes.c:501
-#: builtin/notes.c:513 builtin/notes.c:586 builtin/notes.c:633
-#: builtin/notes.c:907
+#: builtin/notes.c:358 builtin/notes.c:413 builtin/notes.c:489
+#: builtin/notes.c:501 builtin/notes.c:577 builtin/notes.c:645
+#: builtin/notes.c:919
 msgid "too many parameters"
 msgstr "参数太多"
 
-#: builtin/notes.c:387 builtin/notes.c:646
+#: builtin/notes.c:371 builtin/notes.c:658
 #, c-format
 msgid "No note found for object %s."
 msgstr "未发现对象 %s 的注解。"
 
-#: builtin/notes.c:409 builtin/notes.c:566
+#: builtin/notes.c:392 builtin/notes.c:555
 msgid "note contents as a string"
 msgstr "注解内容作为一个字符串"
 
-#: builtin/notes.c:412 builtin/notes.c:569
+#: builtin/notes.c:395 builtin/notes.c:558
 msgid "note contents in a file"
 msgstr "注解内容到一个文件中"
 
-#: builtin/notes.c:414 builtin/notes.c:417 builtin/notes.c:571
-#: builtin/notes.c:574 builtin/tag.c:628
+#: builtin/notes.c:397 builtin/notes.c:400 builtin/notes.c:560
+#: builtin/notes.c:563 builtin/tag.c:628
 msgid "object"
 msgstr "对象"
 
-#: builtin/notes.c:415 builtin/notes.c:572
+#: builtin/notes.c:398 builtin/notes.c:561
 msgid "reuse and edit specified note object"
 msgstr "重用和编辑指定的注解对象"
 
-#: builtin/notes.c:418 builtin/notes.c:575
+#: builtin/notes.c:401 builtin/notes.c:564
 msgid "reuse specified note object"
 msgstr "重用指定的注解对象"
 
-#: builtin/notes.c:420 builtin/notes.c:488
+#: builtin/notes.c:404 builtin/notes.c:567
+msgid "allow storing empty note"
+msgstr "允许保存空白注释"
+
+#: builtin/notes.c:405 builtin/notes.c:476
 msgid "replace existing notes"
 msgstr "替换已存在的注解"
 
-#: builtin/notes.c:454
+#: builtin/notes.c:430
 #, c-format
 msgid ""
 "Cannot add notes. Found existing notes for object %s. Use '-f' to overwrite "
 "existing notes"
 msgstr "不能添加注解。发现对象 %s 已存在注解。使用 '-f' 覆盖现存注解"
 
-#: builtin/notes.c:459 builtin/notes.c:536
+#: builtin/notes.c:445 builtin/notes.c:524
 #, c-format
 msgid "Overwriting existing notes for object %s\n"
 msgstr "覆盖对象 %s 现存注解\n"
 
-#: builtin/notes.c:489
+#: builtin/notes.c:456 builtin/notes.c:617 builtin/notes.c:859
+#, c-format
+msgid "Removing note for object %s\n"
+msgstr "删除对象 %s 的注解\n"
+
+#: builtin/notes.c:477
 msgid "read objects from stdin"
 msgstr "从标准输入读取对象"
 
-#: builtin/notes.c:491
+#: builtin/notes.c:479
 msgid "load rewriting config for <command> (implies --stdin)"
 msgstr "重新加载 <命令> 的配置（隐含 --stdin）"
 
-#: builtin/notes.c:509
+#: builtin/notes.c:497
 msgid "too few parameters"
 msgstr "参数太少"
 
-#: builtin/notes.c:530
+#: builtin/notes.c:518
 #, c-format
 msgid ""
 "Cannot copy notes. Found existing notes for object %s. Use '-f' to overwrite "
 "existing notes"
 msgstr "不能拷贝注解。发现对象 %s 已存在注解。使用 '-f' 覆盖现存注解"
 
-#: builtin/notes.c:542
+#: builtin/notes.c:530
 #, c-format
 msgid "Missing notes on source object %s. Cannot copy."
 msgstr "源对象 %s 缺少注解。不能拷贝。"
 
-#: builtin/notes.c:591
+#: builtin/notes.c:582
 #, c-format
 msgid ""
 "The -m/-F/-c/-C options have been deprecated for the 'edit' subcommand.\n"
 "Please use 'git notes add -f -m/-F/-c/-C' instead.\n"
 msgstr ""
 "子命令 'edit' 的选项 -m/-F/-c/-C 已弃用。\n"
 "请换用 'git notes add -f -m/-F/-c/-C'。\n"
 
-#: builtin/notes.c:738
+#: builtin/notes.c:750
 msgid "General options"
 msgstr "通用选项"
 
-#: builtin/notes.c:740
+#: builtin/notes.c:752
 msgid "Merge options"
 msgstr "合并选项"
 
-#: builtin/notes.c:742
+#: builtin/notes.c:754
 msgid ""
 "resolve notes conflicts using the given strategy (manual/ours/theirs/union/"
 "cat_sort_uniq)"
 msgstr "使用指定的策略解决注解冲突 (manual/ours/theirs/union/cat_sort_uniq)"
 
-#: builtin/notes.c:744
+#: builtin/notes.c:756
 msgid "Committing unmerged notes"
 msgstr "提交未合并的注解"
 
-#: builtin/notes.c:746
+#: builtin/notes.c:758
 msgid "finalize notes merge by committing unmerged notes"
 msgstr "通过提交未合并的注解来完成注解合并"
 
-#: builtin/notes.c:748
+#: builtin/notes.c:760
 msgid "Aborting notes merge resolution"
 msgstr "中止注解合并的方案"
 
-#: builtin/notes.c:750
+#: builtin/notes.c:762
 msgid "abort notes merge"
 msgstr "中止注解合并"
 
-#: builtin/notes.c:845
+#: builtin/notes.c:857
 #, c-format
 msgid "Object %s has no note\n"
 msgstr "对象 %s 没有注解\n"
 
-#: builtin/notes.c:857
+#: builtin/notes.c:869
 msgid "attempt to remove non-existent note is not an error"
 msgstr "尝试删除不存在的注解不是一个错误"
 
-#: builtin/notes.c:860
+#: builtin/notes.c:872
 msgid "read object names from the standard input"
 msgstr "从标准输入读取对象名称"
 
-#: builtin/notes.c:941
+#: builtin/notes.c:953
 msgid "notes-ref"
 msgstr "注解引用"
 
-#: builtin/notes.c:942
+#: builtin/notes.c:954
 msgid "use notes from <notes_ref>"
 msgstr "从 <注解引用> 使用注解"
 
-#: builtin/notes.c:977 builtin/remote.c:1624
+#: builtin/notes.c:989 builtin/remote.c:1621
 #, c-format
 msgid "Unknown subcommand: %s"
 msgstr "未知子命令：%s"
 
 #: builtin/pack-objects.c:28
 msgid "git pack-objects --stdout [options...] [< ref-list | < object-list]"
@@ -7745,145 +7749,149 @@
 
 #: builtin/pack-objects.c:2603
 #, c-format
 msgid "unable to parse value '%s' for option %s"
 msgstr "不能解析选项 %1$s 的值 '%2$s'"
 
-#: builtin/pack-objects.c:2622
+#: builtin/pack-objects.c:2623
 msgid "do not show progress meter"
 msgstr "不显示进度表"
 
-#: builtin/pack-objects.c:2624
+#: builtin/pack-objects.c:2625
 msgid "show progress meter"
 msgstr "显示进度表"
 
-#: builtin/pack-objects.c:2626
+#: builtin/pack-objects.c:2627
 msgid "show progress meter during object writing phase"
 msgstr "在对象写入阶段显示进度表"
 
-#: builtin/pack-objects.c:2629
+#: builtin/pack-objects.c:2630
 msgid "similar to --all-progress when progress meter is shown"
 msgstr "当进度表显示时类似于 --all-progress"
 
-#: builtin/pack-objects.c:2630
+#: builtin/pack-objects.c:2631
 msgid "version[,offset]"
 msgstr "版本[,偏移]"
 
-#: builtin/pack-objects.c:2631
+#: builtin/pack-objects.c:2632
 msgid "write the pack index file in the specified idx format version"
 msgstr "用指定的 idx 格式版本来写包索引文件"
 
-#: builtin/pack-objects.c:2634
+#: builtin/pack-objects.c:2635
 msgid "maximum size of each output pack file"
 msgstr "每个输出包的最大尺寸"
 
-#: builtin/pack-objects.c:2636
+#: builtin/pack-objects.c:2637
 msgid "ignore borrowed objects from alternate object store"
 msgstr "忽略从替代对象存储里借用对象"
 
-#: builtin/pack-objects.c:2638
+#: builtin/pack-objects.c:2639
 msgid "ignore packed objects"
 msgstr "忽略包对象"
 
-#: builtin/pack-objects.c:2640
+#: builtin/pack-objects.c:2641
 msgid "limit pack window by objects"
 msgstr "限制打包窗口的对象数"
 
-#: builtin/pack-objects.c:2642
+#: builtin/pack-objects.c:2643
 msgid "limit pack window by memory in addition to object limit"
 msgstr "除对象数量限制外设置打包窗口的内存限制"
 
-#: builtin/pack-objects.c:2644
+#: builtin/pack-objects.c:2645
 msgid "maximum length of delta chain allowed in the resulting pack"
 msgstr "打包允许的 delta 链的最大长度"
 
-#: builtin/pack-objects.c:2646
+#: builtin/pack-objects.c:2647
 msgid "reuse existing deltas"
 msgstr "重用已存在的 deltas"
 
-#: builtin/pack-objects.c:2648
+#: builtin/pack-objects.c:2649
 msgid "reuse existing objects"
 msgstr "重用已存在的对象"
 
-#: builtin/pack-objects.c:2650
+#: builtin/pack-objects.c:2651
 msgid "use OFS_DELTA objects"
 msgstr "使用 OFS_DELTA 对象"
 
-#: builtin/pack-objects.c:2652
+#: builtin/pack-objects.c:2653
 msgid "use threads when searching for best delta matches"
 msgstr "使用线程查询最佳 delta 匹配"
 
-#: builtin/pack-objects.c:2654
+#: builtin/pack-objects.c:2655
 msgid "do not create an empty pack output"
 msgstr "不创建空的包输出"
 
-#: builtin/pack-objects.c:2656
+#: builtin/pack-objects.c:2657
 msgid "read revision arguments from standard input"
-msgstr "从标准输入读取修订号参数"
+msgstr "从标准输入读取版本号参数"
 
-#: builtin/pack-objects.c:2658
+#: builtin/pack-objects.c:2659
 msgid "limit the objects to those that are not yet packed"
 msgstr "限制那些尚未打包的对象"
 
-#: builtin/pack-objects.c:2661
+#: builtin/pack-objects.c:2662
 msgid "include objects reachable from any reference"
 msgstr "包括可以从任何引用访问到的对象"
 
-#: builtin/pack-objects.c:2664
+#: builtin/pack-objects.c:2665
 msgid "include objects referred by reflog entries"
 msgstr "包括被引用日志引用到的对象"
 
-#: builtin/pack-objects.c:2667
+#: builtin/pack-objects.c:2668
 msgid "include objects referred to by the index"
 msgstr "包括被索引引用到的对象"
 
-#: builtin/pack-objects.c:2670
+#: builtin/pack-objects.c:2671
 msgid "output pack to stdout"
 msgstr "输出包到标准输出"
 
-#: builtin/pack-objects.c:2672
+#: builtin/pack-objects.c:2673
 msgid "include tag objects that refer to objects to be packed"
 msgstr "包括引用了打包对象的 tag"
 
-#: builtin/pack-objects.c:2674
+#: builtin/pack-objects.c:2675
 msgid "keep unreachable objects"
 msgstr "维持不可达的对象"
 
-#: builtin/pack-objects.c:2675 parse-options.h:140
+#: builtin/pack-objects.c:2676 parse-options.h:140
 msgid "time"
 msgstr "时间"
 
-#: builtin/pack-objects.c:2676
+#: builtin/pack-objects.c:2677
 msgid "unpack unreachable objects newer than <time>"
 msgstr "将比给定 <时间> 新的无法访问的对象解包"
 
-#: builtin/pack-objects.c:2679
+#: builtin/pack-objects.c:2680
 msgid "create thin packs"
 msgstr "创建精简包"
 
-#: builtin/pack-objects.c:2681
+#: builtin/pack-objects.c:2682
+msgid "create packs suitable for shallow fetches"
+msgstr "创建适合浅克隆版本库获取的包"
+
+#: builtin/pack-objects.c:2684
 msgid "ignore packs that have companion .keep file"
 msgstr "忽略配有 .keep 文件的包"
 
-#: builtin/pack-objects.c:2683
+#: builtin/pack-objects.c:2686
 msgid "pack compression level"
 msgstr "打包压缩级别"
 
-#: builtin/pack-objects.c:2685
+#: builtin/pack-objects.c:2688
 msgid "do not hide commits by grafts"
 msgstr "显示被嫁接隐藏的提交"
 
-#: builtin/pack-objects.c:2687
+#: builtin/pack-objects.c:2690
 msgid "use a bitmap index if available to speed up counting objects"
 msgstr "使用 bitmap 索引（如果有的话）以提高对象计数时的速度"
 
-#: builtin/pack-objects.c:2689
+#: builtin/pack-objects.c:2692
 msgid "write a bitmap index together with the pack index"
 msgstr "在建立包索引的同时创建 bitmap 索引"
 
-#: builtin/pack-objects.c:2778
+#: builtin/pack-objects.c:2783
 msgid "Counting objects"
 msgstr "对象计数中"
 
 #: builtin/pack-refs.c:6
 msgid "git pack-refs [options]"
 msgstr "git pack-refs [选项]"
@@ -7923,13 +7931,13 @@
 #: builtin/push.c:14
 msgid "git push [<options>] [<repository> [<refspec>...]]"
 msgstr "git push [<选项>] [<版本库> [<引用规则>...]]"
 
 #: builtin/push.c:85
 msgid "tag shorthand without <tag>"
-msgstr "tag 简写没有跟 <tag> 参数"
+msgstr "tag 后面未提供 <标签> 参数"
 
 #: builtin/push.c:95
 msgid "--delete only accepts plain target ref names"
 msgstr "--delete 只接受简单的目标引用名"
 
 #: builtin/push.c:139
@@ -7973,13 +7981,13 @@
 "\n"
 "    git push %s HEAD:<name-of-remote-branch>\n"
 msgstr ""
 "您当前不在一个分支上。\n"
 "现在为推送当前（分离头指针）的历史，使用\n"
 "\n"
-"    git push %s HEAD:<name-of-remote-branch>\n"
+"    git push %s HEAD:<远程分支名字>\n"
 
 #: builtin/push.c:171
 #, c-format
 msgid ""
 "The current branch %s has no upstream branch.\n"
 "To push the current branch and set the remote as upstream, use\n"
@@ -8130,17 +8138,17 @@
 "\n"
 "    git push <name>\n"
 msgstr ""
 "没有配置推送目标。\n"
 "或通过命令行指定URL，或用下面命令配置一个远程版本库\n"
 "\n"
-"    git remote add <name> <url>\n"
+"    git remote add <名称> <地址>\n"
 "\n"
 "然后使用该远程版本库名执行推送\n"
 "\n"
-"    git push <name>\n"
+"    git push <名称>\n"
 
 #: builtin/push.c:410
 msgid "--all and --tags are incompatible"
 msgstr "--all 和 --tags 不兼容"
 
 #: builtin/push.c:411
@@ -8240,13 +8248,13 @@
 "git read-tree [[-m [--trivial] [--aggressive] | --reset | --prefix=<前缀>] [-"
 "u [--exclude-per-directory=<gitignore>] | -i]] [--no-sparse-checkout] [--"
 "index-output=<文件>] (--empty | <树或提交1> [<树或提交2> [<树或提交3>]])"
 
 #: builtin/read-tree.c:110
 msgid "write resulting index to <file>"
-msgstr "将索引结果写入 <file>"
+msgstr "将索引结果写入 <文件>"
 
 #: builtin/read-tree.c:113
 msgid "only empty the index"
 msgstr "只是清空索引"
 
 #: builtin/read-tree.c:115
@@ -8322,13 +8330,13 @@
 #: builtin/remote.c:13
 msgid ""
 "git remote add [-t <branch>] [-m <master>] [-f] [--tags|--no-tags] [--"
 "mirror=<fetch|push>] <name> <url>"
 msgstr ""
 "git remote add [-t <分支>] [-m <master>] [-f] [--tags|--no-tags] [--"
-"mirror=<fetch|push>] <名称> <url>"
+"mirror=<fetch|push>] <名称> <地址>"
 
 #: builtin/remote.c:14 builtin/remote.c:33
 msgid "git remote rename <old> <new>"
 msgstr "git remote rename <旧名称> <新名称>"
 
 #: builtin/remote.c:15 builtin/remote.c:38
@@ -8447,437 +8455,437 @@
 msgstr "指定一个 master 分支并使用 --mirror 选项没有意义"
 
 #: builtin/remote.c:177
 msgid "specifying branches to track makes sense only with fetch mirrors"
 msgstr "指定要跟踪的分支只在与获取镜像同时使用才有意义"
 
-#: builtin/remote.c:185 builtin/remote.c:641
+#: builtin/remote.c:187 builtin/remote.c:643
 #, c-format
 msgid "remote %s already exists."
 msgstr "远程 %s 已经存在。"
 
-#: builtin/remote.c:189 builtin/remote.c:645
+#: builtin/remote.c:191 builtin/remote.c:647
 #, c-format
 msgid "'%s' is not a valid remote name"
 msgstr "'%s' 不是一个有效的远程名称"
 
-#: builtin/remote.c:233
+#: builtin/remote.c:235
 #, c-format
 msgid "Could not setup master '%s'"
 msgstr "无法设置 master '%s'"
 
-#: builtin/remote.c:333
+#: builtin/remote.c:335
 #, c-format
 msgid "Could not get fetch map for refspec %s"
 msgstr "无法得到引用规则 %s 的获取列表"
 
-#: builtin/remote.c:434 builtin/remote.c:442
+#: builtin/remote.c:436 builtin/remote.c:444
 msgid "(matching)"
 msgstr "（匹配）"
 
-#: builtin/remote.c:446
+#: builtin/remote.c:448
 msgid "(delete)"
 msgstr "（删除）"
 
-#: builtin/remote.c:590 builtin/remote.c:596 builtin/remote.c:602
+#: builtin/remote.c:592 builtin/remote.c:598 builtin/remote.c:604
 #, c-format
 msgid "Could not append '%s' to '%s'"
 msgstr "不能添加 '%s' 至 '%s'"
 
-#: builtin/remote.c:634 builtin/remote.c:798 builtin/remote.c:898
+#: builtin/remote.c:636 builtin/remote.c:795 builtin/remote.c:895
 #, c-format
 msgid "No such remote: %s"
 msgstr "没有这样的远程：%s"
 
-#: builtin/remote.c:651
+#: builtin/remote.c:653
 #, c-format
 msgid "Could not rename config section '%s' to '%s'"
 msgstr "不能重命名配置小节 '%s' 到 '%s'"
 
-#: builtin/remote.c:657 builtin/remote.c:850
+#: builtin/remote.c:659 builtin/remote.c:847
 #, c-format
 msgid "Could not remove config section '%s'"
 msgstr "不能移除配置小节 '%s'"
 
-#: builtin/remote.c:672
+#: builtin/remote.c:674
 #, c-format
 msgid ""
 "Not updating non-default fetch refspec\n"
 "\t%s\n"
 "\tPlease update the configuration manually if necessary."
 msgstr ""
 "没有更新非默认的获取引用规则\n"
 "\t%s\n"
 "\t如果必要请手动更新配置。"
 
-#: builtin/remote.c:678
+#: builtin/remote.c:680
 #, c-format
 msgid "Could not append '%s'"
 msgstr "不能追加 '%s'"
 
-#: builtin/remote.c:689
+#: builtin/remote.c:691
 #, c-format
 msgid "Could not set '%s'"
 msgstr "不能设置 '%s'"
 
-#: builtin/remote.c:711
+#: builtin/remote.c:713
 #, c-format
 msgid "deleting '%s' failed"
 msgstr "删除 '%s' 失败"
 
-#: builtin/remote.c:745
+#: builtin/remote.c:747
 #, c-format
 msgid "creating '%s' failed"
 msgstr "创建 '%s' 失败"
 
-#: builtin/remote.c:769
+#: builtin/remote.c:766
 #, c-format
 msgid "Could not remove branch %s"
 msgstr "无法移除分支 %s"
 
-#: builtin/remote.c:836
+#: builtin/remote.c:833
 msgid ""
 "Note: A branch outside the refs/remotes/ hierarchy was not removed;\n"
 "to delete it, use:"
 msgid_plural ""
 "Note: Some branches outside the refs/remotes/ hierarchy were not removed;\n"
 "to delete them, use:"
 msgstr[0] "注意：ref/remotes 层级之外的一个分支未被移除。要删除它，使用："
 msgstr[1] "注意：ref/remotes 层级之外的一些分支未被移除。要删除它们，使用："
 
-#: builtin/remote.c:951
+#: builtin/remote.c:948
 #, c-format
 msgid " new (next fetch will store in remotes/%s)"
 msgstr " 新的（下一次获取将存储于 remotes/%s）"
 
-#: builtin/remote.c:954
+#: builtin/remote.c:951
 msgid " tracked"
 msgstr " 已跟踪"
 
-#: builtin/remote.c:956
+#: builtin/remote.c:953
 msgid " stale (use 'git remote prune' to remove)"
 msgstr " 过时（使用 'git remote prune' 来移除）"
 
-#: builtin/remote.c:958
+#: builtin/remote.c:955
 msgid " ???"
 msgstr " ???"
 
-#: builtin/remote.c:999
+#: builtin/remote.c:996
 #, c-format
 msgid "invalid branch.%s.merge; cannot rebase onto > 1 branch"
 msgstr "无效的 branch.%s.merge，不能变基到一个以上的分支"
 
-#: builtin/remote.c:1006
+#: builtin/remote.c:1003
 #, c-format
 msgid "rebases onto remote %s"
 msgstr "变基到远程 %s"
 
-#: builtin/remote.c:1009
+#: builtin/remote.c:1006
 #, c-format
 msgid " merges with remote %s"
 msgstr " 与远程 %s 合并"
 
-#: builtin/remote.c:1010
+#: builtin/remote.c:1007
 msgid "    and with remote"
 msgstr "    且有远程"
 
-#: builtin/remote.c:1012
+#: builtin/remote.c:1009
 #, c-format
 msgid "merges with remote %s"
 msgstr "与远程 %s 合并"
 
-#: builtin/remote.c:1013
+#: builtin/remote.c:1010
 msgid "   and with remote"
 msgstr "   且有远程"
 
-#: builtin/remote.c:1059
+#: builtin/remote.c:1056
 msgid "create"
 msgstr "创建"
 
-#: builtin/remote.c:1062
+#: builtin/remote.c:1059
 msgid "delete"
 msgstr "删除"
 
-#: builtin/remote.c:1066
+#: builtin/remote.c:1063
 msgid "up to date"
 msgstr "最新"
 
-#: builtin/remote.c:1069
+#: builtin/remote.c:1066
 msgid "fast-forwardable"
 msgstr "可快进"
 
-#: builtin/remote.c:1072
+#: builtin/remote.c:1069
 msgid "local out of date"
 msgstr "本地已过时"
 
-#: builtin/remote.c:1079
+#: builtin/remote.c:1076
 #, c-format
 msgid "    %-*s forces to %-*s (%s)"
 msgstr "    %-*s 强制推送至 %-*s (%s)"
 
-#: builtin/remote.c:1082
+#: builtin/remote.c:1079
 #, c-format
 msgid "    %-*s pushes to %-*s (%s)"
 msgstr "    %-*s 推送至 %-*s (%s)"
 
-#: builtin/remote.c:1086
+#: builtin/remote.c:1083
 #, c-format
 msgid "    %-*s forces to %s"
 msgstr "    %-*s 强制推送至 %s"
 
-#: builtin/remote.c:1089
+#: builtin/remote.c:1086
 #, c-format
 msgid "    %-*s pushes to %s"
 msgstr "    %-*s 推送至 %s"
 
-#: builtin/remote.c:1157
+#: builtin/remote.c:1154
 msgid "do not query remotes"
 msgstr "不查询远程"
 
-#: builtin/remote.c:1184
+#: builtin/remote.c:1181
 #, c-format
 msgid "* remote %s"
 msgstr "* 远程 %s"
 
-#: builtin/remote.c:1185
+#: builtin/remote.c:1182
 #, c-format
 msgid "  Fetch URL: %s"
 msgstr "  获取地址：%s"
 
-#: builtin/remote.c:1186 builtin/remote.c:1333
+#: builtin/remote.c:1183 builtin/remote.c:1334
 msgid "(no URL)"
 msgstr "(无 URL)"
 
-#: builtin/remote.c:1195 builtin/remote.c:1197
+#: builtin/remote.c:1192 builtin/remote.c:1194
 #, c-format
 msgid "  Push  URL: %s"
 msgstr "  推送地址：%s"
 
-#: builtin/remote.c:1199 builtin/remote.c:1201 builtin/remote.c:1203
+#: builtin/remote.c:1196 builtin/remote.c:1198 builtin/remote.c:1200
 #, c-format
 msgid "  HEAD branch: %s"
 msgstr "  HEAD分支：%s"
 
-#: builtin/remote.c:1205
+#: builtin/remote.c:1202
 #, c-format
 msgid ""
 "  HEAD branch (remote HEAD is ambiguous, may be one of the following):\n"
 msgstr "  HEAD 分支（远程 HEAD 模糊，可能是下列中的一个）：\n"
 
-#: builtin/remote.c:1217
+#: builtin/remote.c:1214
 #, c-format
 msgid "  Remote branch:%s"
 msgid_plural "  Remote branches:%s"
 msgstr[0] "  远程分支：%s"
 msgstr[1] "  远程分支：%s"
 
 #  译者：中文字符串拼接，可删除前导空格
-#: builtin/remote.c:1220 builtin/remote.c:1247
+#: builtin/remote.c:1217 builtin/remote.c:1244
 msgid " (status not queried)"
 msgstr "（状态未查询）"
 
-#: builtin/remote.c:1229
+#: builtin/remote.c:1226
 msgid "  Local branch configured for 'git pull':"
 msgid_plural "  Local branches configured for 'git pull':"
 msgstr[0] "  为 'git pull' 配置的本地分支："
 msgstr[1] "  为 'git pull' 配置的本地分支："
 
-#: builtin/remote.c:1237
+#: builtin/remote.c:1234
 msgid "  Local refs will be mirrored by 'git push'"
 msgstr "  本地引用将在 'git push' 时被镜像"
 
-#: builtin/remote.c:1244
+#: builtin/remote.c:1241
 #, c-format
 msgid "  Local ref configured for 'git push'%s:"
 msgid_plural "  Local refs configured for 'git push'%s:"
 msgstr[0] "  为 'git push' 配置的本地引用%s："
 msgstr[1] "  为 'git push' 配置的本地引用%s："
 
-#: builtin/remote.c:1265
+#: builtin/remote.c:1262
 msgid "set refs/remotes/<name>/HEAD according to remote"
 msgstr "根据远程设置 refs/remotes/<名称>/HEAD"
 
-#: builtin/remote.c:1267
+#: builtin/remote.c:1264
 msgid "delete refs/remotes/<name>/HEAD"
 msgstr "删除 refs/remotes/<名称>/HEAD"
 
-#: builtin/remote.c:1282
+#: builtin/remote.c:1279
 msgid "Cannot determine remote HEAD"
 msgstr "无法确定远程 HEAD"
 
-#: builtin/remote.c:1284
+#: builtin/remote.c:1281
 msgid "Multiple remote HEAD branches. Please choose one explicitly with:"
 msgstr "多个远程 HEAD 分支。请明确地选择一个用命令："
 
-#: builtin/remote.c:1294
+#: builtin/remote.c:1291
 #, c-format
 msgid "Could not delete %s"
 msgstr "无法删除 %s"
 
-#: builtin/remote.c:1302
+#: builtin/remote.c:1299
 #, c-format
 msgid "Not a valid ref: %s"
 msgstr "不是一个有效引用：%s"
 
-#: builtin/remote.c:1304
+#: builtin/remote.c:1301
 #, c-format
 msgid "Could not setup %s"
 msgstr "不能设置 %s"
 
 #  译者：注意保持前导空格
-#: builtin/remote.c:1322
+#: builtin/remote.c:1319
 #, c-format
 msgid " %s will become dangling!"
 msgstr " %s 将成为摇摆状态！"
 
 #  译者：注意保持前导空格
-#: builtin/remote.c:1323
+#: builtin/remote.c:1320
 #, c-format
 msgid " %s has become dangling!"
 msgstr " %s 已成为摇摆状态！"
 
-#: builtin/remote.c:1329
+#: builtin/remote.c:1330
 #, c-format
 msgid "Pruning %s"
 msgstr "修剪 %s"
 
-#: builtin/remote.c:1330
+#: builtin/remote.c:1331
 #, c-format
 msgid "URL: %s"
 msgstr "URL：%s"
 
-#: builtin/remote.c:1357
+#: builtin/remote.c:1354
 #, c-format
 msgid " * [would prune] %s"
 msgstr " * [将删除] %s"
 
-#: builtin/remote.c:1360
+#: builtin/remote.c:1357
 #, c-format
 msgid " * [pruned] %s"
 msgstr " * [已删除] %s"
 
-#: builtin/remote.c:1405
+#: builtin/remote.c:1402
 msgid "prune remotes after fetching"
 msgstr "抓取后清除远程"
 
-#: builtin/remote.c:1471 builtin/remote.c:1545
+#: builtin/remote.c:1468 builtin/remote.c:1542
 #, c-format
 msgid "No such remote '%s'"
 msgstr "没有此远程 '%s'"
 
-#: builtin/remote.c:1491
+#: builtin/remote.c:1488
 msgid "add branch"
 msgstr "添加分支"
 
-#: builtin/remote.c:1498
+#: builtin/remote.c:1495
 msgid "no remote specified"
 msgstr "未指定远程"
 
-#: builtin/remote.c:1520
+#: builtin/remote.c:1517
 msgid "manipulate push URLs"
 msgstr "操作推送 URLS"
 
-#: builtin/remote.c:1522
+#: builtin/remote.c:1519
 msgid "add URL"
 msgstr "添加 URL"
 
-#: builtin/remote.c:1524
+#: builtin/remote.c:1521
 msgid "delete URLs"
 msgstr "删除 URLS"
 
-#: builtin/remote.c:1531
+#: builtin/remote.c:1528
 msgid "--add --delete doesn't make sense"
 msgstr "--add --delete 无意义"
 
-#: builtin/remote.c:1571
+#: builtin/remote.c:1568
 #, c-format
 msgid "Invalid old URL pattern: %s"
 msgstr "无效的旧URL匹配模版：%s"
 
-#: builtin/remote.c:1579
+#: builtin/remote.c:1576
 #, c-format
 msgid "No such URL found: %s"
 msgstr "未找到此URL：%s"
 
-#: builtin/remote.c:1581
+#: builtin/remote.c:1578
 msgid "Will not delete all non-push URLs"
 msgstr "将不会删除所有非推送URL地址"
 
-#: builtin/remote.c:1595
+#: builtin/remote.c:1592
 msgid "be verbose; must be placed before a subcommand"
 msgstr "冗长输出；必须置于子命令之前"
 
 #: builtin/repack.c:17
 msgid "git repack [options]"
 msgstr "git repack [选项]"
 
-#: builtin/repack.c:160
+#: builtin/repack.c:159
 msgid "pack everything in a single pack"
 msgstr "所有内容打包到一个包文件中"
 
-#: builtin/repack.c:162
+#: builtin/repack.c:161
 msgid "same as -a, and turn unreachable objects loose"
 msgstr "和 -a 相同，并将不可达的对象设为松散对象"
 
-#: builtin/repack.c:165
+#: builtin/repack.c:164
 msgid "remove redundant packs, and run git-prune-packed"
 msgstr "删除多余的包，运行 git-prune-packed"
 
-#: builtin/repack.c:167
+#: builtin/repack.c:166
 msgid "pass --no-reuse-delta to git-pack-objects"
 msgstr "向 git-pack-objects 传递参数 --no-reuse-delta"
 
-#: builtin/repack.c:169
+#: builtin/repack.c:168
 msgid "pass --no-reuse-object to git-pack-objects"
 msgstr "向 git-pack-objects 传递参数 --no-reuse-object"
 
-#: builtin/repack.c:171
+#: builtin/repack.c:170
 msgid "do not run git-update-server-info"
 msgstr "不运行 git-update-server-info"
 
-#: builtin/repack.c:174
+#: builtin/repack.c:173
 msgid "pass --local to git-pack-objects"
 msgstr "向 git-pack-objects 传递参数 --local"
 
-#: builtin/repack.c:176
+#: builtin/repack.c:175
 msgid "write bitmap index"
 msgstr "写 bitmap 索引"
 
-#: builtin/repack.c:177
+#: builtin/repack.c:176
 msgid "approxidate"
 msgstr "近似日期"
 
-#: builtin/repack.c:178
+#: builtin/repack.c:177
 msgid "with -A, do not loosen objects older than this"
 msgstr "使用 -A，不要将早于给定时间的对象过期"
 
-#: builtin/repack.c:180
+#: builtin/repack.c:179
 msgid "size of the window used for delta compression"
 msgstr "用于增量压缩的窗口值"
 
-#: builtin/repack.c:181 builtin/repack.c:185
+#: builtin/repack.c:180 builtin/repack.c:184
 msgid "bytes"
 msgstr "字节"
 
-#: builtin/repack.c:182
+#: builtin/repack.c:181
 msgid "same as the above, but limit memory size instead of entries count"
 msgstr "和上面的相似，但限制内存大小而非条目数"
 
-#: builtin/repack.c:184
+#: builtin/repack.c:183
 msgid "limits the maximum delta depth"
 msgstr "限制最大增量深度"
 
-#: builtin/repack.c:186
+#: builtin/repack.c:185
 msgid "maximum size of each packfile"
 msgstr "每个包的最大尺寸"
 
-#: builtin/repack.c:188
+#: builtin/repack.c:187
 msgid "repack objects in packs marked with .keep"
 msgstr "对标记为 .keep 的包中的对象重新打包"
 
-#: builtin/repack.c:374
+#: builtin/repack.c:371
 #, c-format
 msgid "removing '%s' failed"
 msgstr "删除 '%s' 失败"
 
 #: builtin/replace.c:19
 msgid "git replace [-f] <object> <replacement>"
@@ -9070,13 +9078,13 @@
 #: builtin/reset.c:322
 msgid "--patch is incompatible with --{hard,mixed,soft}"
 msgstr "--patch 与 --{hard、mixed、soft} 选项不兼容"
 
 #: builtin/reset.c:331
 msgid "--mixed with paths is deprecated; use 'git reset -- <paths>' instead."
-msgstr "--mixed 带路径已弃用，而是用 'git reset -- <paths>'。"
+msgstr "--mixed 带路径已弃用，而是用 'git reset -- <路径>'。"
 
 #  译者：汉字之间无空格，故删除%s前后空格
 #: builtin/reset.c:333
 #, c-format
 msgid "Cannot do %s reset with paths."
 msgstr "不能带路径进行%s重置。"
@@ -9345,87 +9353,87 @@
 #: builtin/shortlog.c:236
 msgid "Linewrap output"
 msgstr "折行输出"
 
 #: builtin/show-branch.c:9
 msgid ""
-"git show-branch [-a|--all] [-r|--remotes] [--topo-order | --date-order] [--"
-"current] [--color[=<when>] | --no-color] [--sparse] [--more=<n> | --list | --"
-"independent | --merge-base] [--no-name | --sha1-name] [--topics] [(<rev> | "
-"<glob>)...]"
-msgstr ""
-"git show-branch [-a|--all] [-r|--remotes] [--topo-order | --date-order] [--"
-"current] [--color[=<when>] | --no-color] [--sparse] [--more=<n> | --list | --"
-"independent | --merge-base] [--no-name | --sha1-name] [--topics] [(<rev> | "
-"<glob>)...]"
+"git show-branch [-a|--all] [-r|--remotes] [--topo-order | --date-order]\n"
+"\t\t[--current] [--color[=<when>] | --no-color] [--sparse]\n"
+"\t\t[--more=<n> | --list | --independent | --merge-base]\n"
+"\t\t[--no-name | --sha1-name] [--topics] [(<rev> | <glob>)...]"
+msgstr ""
+"git show-branch [-a|--all] [-r|--remotes] [--topo-order | --date-order]\n"
+"\t\t[--current] [--color[=<何时>] | --no-color] [--sparse]\n"
+"\t\t[--more=<n> | --list | --independent | --merge-base]\n"
+"\t\t[--no-name | --sha1-name] [--topics] [(<版本> | <通配符>)...]"
 
-#: builtin/show-branch.c:10
+#: builtin/show-branch.c:13
 msgid "git show-branch (-g|--reflog)[=<n>[,<base>]] [--list] [<ref>]"
-msgstr "git show-branch (-g|--reflog)[=<n>[,<base>]] [--list] [<ref>]"
+msgstr "git show-branch (-g|--reflog)[=<n>[,<base>]] [--list] [<引用>]"
 
-#: builtin/show-branch.c:649
+#: builtin/show-branch.c:652
 msgid "show remote-tracking and local branches"
 msgstr "显示远程跟踪的和本地的分支"
 
-#: builtin/show-branch.c:651
+#: builtin/show-branch.c:654
 msgid "show remote-tracking branches"
 msgstr "显示远程跟踪的分支"
 
-#: builtin/show-branch.c:653
+#: builtin/show-branch.c:656
 msgid "color '*!+-' corresponding to the branch"
 msgstr "着色 '*!+-' 到相应的分支"
 
-#: builtin/show-branch.c:655
+#: builtin/show-branch.c:658
 msgid "show <n> more commits after the common ancestor"
 msgstr "显示共同祖先后的 <n> 个提交"
 
-#: builtin/show-branch.c:657
+#: builtin/show-branch.c:660
 msgid "synonym to more=-1"
 msgstr "和 more=-1 同义"
 
-#: builtin/show-branch.c:658
+#: builtin/show-branch.c:661
 msgid "suppress naming strings"
 msgstr "不显示字符串命名"
 
-#: builtin/show-branch.c:660
+#: builtin/show-branch.c:663
 msgid "include the current branch"
 msgstr "包括当前分支"
 
-#: builtin/show-branch.c:662
+#: builtin/show-branch.c:665
 msgid "name commits with their object names"
 msgstr "以对象名字命名提交"
 
-#: builtin/show-branch.c:664
+#: builtin/show-branch.c:667
 msgid "show possible merge bases"
 msgstr "显示可能合并的基线"
 
-#: builtin/show-branch.c:666
+#: builtin/show-branch.c:669
 msgid "show refs unreachable from any other ref"
 msgstr "显示没有任何引用的的引用"
 
-#: builtin/show-branch.c:668
+#: builtin/show-branch.c:671
 msgid "show commits in topological order"
 msgstr "以拓扑顺序显示提交"
 
-#: builtin/show-branch.c:671
+#: builtin/show-branch.c:674
 msgid "show only commits not on the first branch"
 msgstr "只显示不在第一个分支上的提交"
 
-#: builtin/show-branch.c:673
+#: builtin/show-branch.c:676
 msgid "show merges reachable from only one tip"
 msgstr "显示仅一个分支可访问的合并提交"
 
-#: builtin/show-branch.c:675
+#: builtin/show-branch.c:678
 msgid "topologically sort, maintaining date order where possible"
 msgstr "拓扑方式排序，并尽可能地保持日期顺序"
 
-#: builtin/show-branch.c:678
+#: builtin/show-branch.c:681
 msgid "<n>[,<base>]"
 msgstr "<n>[,<base>]"
 
-#: builtin/show-branch.c:679
+#: builtin/show-branch.c:682
 msgid "show <n> most recent ref-log entries starting at base"
 msgstr "显示从 base 开始的 <n> 条最近的引用日志记录"
 
 #: builtin/show-ref.c:10
 msgid ""
 "git show-ref [-q|--quiet] [--verify] [--head] [-d|--dereference] [-s|--"
@@ -9487,17 +9495,17 @@
 msgstr "删除符号引用"
 
 #: builtin/symbolic-ref.c:42
 msgid "shorten ref output"
 msgstr "简短的引用输出"
 
-#: builtin/symbolic-ref.c:43 builtin/update-ref.c:362
+#: builtin/symbolic-ref.c:43 builtin/update-ref.c:358
 msgid "reason"
 msgstr "原因"
 
-#: builtin/symbolic-ref.c:43 builtin/update-ref.c:362
+#: builtin/symbolic-ref.c:43 builtin/update-ref.c:358
 msgid "reason of the update"
 msgstr "更新的原因"
 
 #: builtin/tag.c:22
 msgid ""
 "git tag [-a|-s|-u <key-id>] [-f] [-m <msg>|-F <file>] <tagname> [<head>]"
@@ -9509,13 +9517,13 @@
 
 #: builtin/tag.c:24
 msgid ""
 "git tag -l [-n[<num>]] [--contains <commit>] [--points-at <object>] \n"
 "\t\t[<pattern>...]"
 msgstr ""
-"git tag -l [-n[<num>]] [--contains <提交>] [--points-at <对象>] \n"
+"git tag -l [-n[<数字>]] [--contains <提交>] [--points-at <对象>] \n"
 "\t\t[<模式>...]"
 
 #: builtin/tag.c:26
 msgid "git tag -v <tagname>..."
 msgstr "git tag -v <标签名>..."
 
@@ -9757,13 +9765,13 @@
 #: builtin/update-index.c:775
 msgid "like --refresh, but ignore assume-unchanged setting"
 msgstr "类似于 --refresh，但是忽略 assume-unchanged 设置"
 
 #: builtin/update-index.c:779
 msgid "<mode>,<object>,<path>"
-msgstr "<mode>,<object>,<path>"
+msgstr "<存取模式>,<对象>,<路径>"
 
 #: builtin/update-index.c:780
 msgid "add the specified entry to the index"
 msgstr "添加指定的条目到索引区"
 
 #: builtin/update-index.c:784
@@ -9847,25 +9855,25 @@
 msgstr "git update-ref [选项]    <引用名> <新值> [<旧值>]"
 
 #: builtin/update-ref.c:11
 msgid "git update-ref [options] --stdin [-z]"
 msgstr "git update-ref [选项] --stdin [-z]"
 
-#: builtin/update-ref.c:363
+#: builtin/update-ref.c:359
 msgid "delete the reference"
 msgstr "删除引用"
 
-#: builtin/update-ref.c:365
+#: builtin/update-ref.c:361
 msgid "update <refname> not the one it points to"
 msgstr "更新 <引用名> 本身而不是它指向的引用"
 
-#: builtin/update-ref.c:366
+#: builtin/update-ref.c:362
 msgid "stdin has NUL-terminated arguments"
 msgstr "标准输入有以 NUL 字符终止的参数"
 
-#: builtin/update-ref.c:367
+#: builtin/update-ref.c:363
 msgid "read updates from stdin"
 msgstr "从标准输入读取更新"
 
 #: builtin/update-server-info.c:6
 msgid "git update-server-info [--force]"
 msgstr "git update-server-info [--force]"
@@ -9881,25 +9889,25 @@
 #: builtin/verify-commit.c:75
 msgid "print commit contents"
 msgstr "打印提交内容"
 
 #: builtin/verify-pack.c:54
 msgid "git verify-pack [-v|--verbose] [-s|--stat-only] <pack>..."
-msgstr "git verify-pack [-v|--verbose] [-s|--stat-only] <pack>..."
+msgstr "git verify-pack [-v|--verbose] [-s|--stat-only] <包>..."
 
 #: builtin/verify-pack.c:64
 msgid "verbose"
 msgstr "冗长输出"
 
 #: builtin/verify-pack.c:66
 msgid "show statistics only"
 msgstr "只显示统计"
 
 #: builtin/verify-tag.c:17
 msgid "git verify-tag [-v|--verbose] <tag>..."
-msgstr "git verify-tag [-v|--verbose] <tag>..."
+msgstr "git verify-tag [-v|--verbose] <标签>..."
 
 #: builtin/verify-tag.c:73
 msgid "print tag contents"
 msgstr "打印 tag 内容"
 
 #: builtin/write-tree.c:13
@@ -9919,13 +9927,13 @@
 msgstr "只对调试有用"
 
 #: credential-cache--daemon.c:267
 msgid "print debugging messages to stderr"
 msgstr "调试信息输出到标准错误"
 
-#: git.c:17
+#: git.c:14
 msgid ""
 "'git help -a' and 'git help -g' list available subcommands and some\n"
 "concept guides. See 'git help <command>' or 'git help <concept>'\n"
 "to read about a specific subcommand or concept."
 msgstr ""
 "命令 'git help -a' 和 'git help -g' 显示可用的子命令和一些概念帮助。\n"
@@ -10037,180 +10045,180 @@
 msgstr "用 <n> 位数字显示 SHA-1 哈希值"
 
 #: rerere.h:27
 msgid "update the index with reused conflict resolution if possible"
 msgstr "如果可能，重用冲突解决更新索引"
 
-#: git-am.sh:52
+#: git-am.sh:53
 msgid "You need to set your committer info first"
 msgstr "您需要先设置你的提交者信息"
 
-#: git-am.sh:97
+#: git-am.sh:98
 msgid ""
 "You seem to have moved HEAD since the last 'am' failure.\n"
 "Not rewinding to ORIG_HEAD"
 msgstr "您好像在上一次 'am' 失败后移动了 HEAD。未回退至 ORIG_HEAD"
 
-#: git-am.sh:107
+#: git-am.sh:108
 #, sh-format
 msgid ""
 "When you have resolved this problem, run \"$cmdline --continue\".\n"
 "If you prefer to skip this patch, run \"$cmdline --skip\" instead.\n"
 "To restore the original branch and stop patching, run \"$cmdline --abort\"."
 msgstr ""
 "当您解决了此问题后，执行 \"$cmdline --continue\"。\n"
 "如果您想跳过此补丁，则执行 \"$cmdline --skip\"。\n"
 "要恢复原分支并停止打补丁，执行 \"$cmdline --abort\"。"
 
-#: git-am.sh:123
+#: git-am.sh:124
 msgid "Cannot fall back to three-way merge."
 msgstr "无法求助于三路合并。"
 
-#: git-am.sh:139
+#: git-am.sh:140
 msgid "Repository lacks necessary blobs to fall back on 3-way merge."
 msgstr "版本库缺乏必要的数据（blob）对象以进行三路合并。"
 
-#: git-am.sh:141
+#: git-am.sh:142
 msgid "Using index info to reconstruct a base tree..."
 msgstr "使用索引来重建一个（三路合并的）基础目录树..."
 
-#: git-am.sh:156
+#: git-am.sh:157
 msgid ""
 "Did you hand edit your patch?\n"
 "It does not apply to blobs recorded in its index."
 msgstr ""
 "您是否曾手动编辑过您的补丁？\n"
 "无法应用补丁到索引中的数据（blob）对象上。"
 
-#: git-am.sh:165
+#: git-am.sh:166
 msgid "Falling back to patching base and 3-way merge..."
 msgstr "转而在基础版本上打补丁及进行三路合并..."
 
-#: git-am.sh:181
+#: git-am.sh:182
 msgid "Failed to merge in the changes."
 msgstr "无法合并变更。"
 
-#: git-am.sh:276
+#: git-am.sh:277
 msgid "Only one StGIT patch series can be applied at once"
 msgstr "一次只能有一个 StGIT 补丁队列被应用"
 
-#: git-am.sh:363
+#: git-am.sh:364
 #, sh-format
 msgid "Patch format $patch_format is not supported."
 msgstr "不支持 $patch_format 补丁格式。"
 
-#: git-am.sh:365
+#: git-am.sh:366
 msgid "Patch format detection failed."
 msgstr "补丁格式检测失败。"
 
-#: git-am.sh:392
+#: git-am.sh:398
 msgid ""
 "The -b/--binary option has been a no-op for long time, and\n"
 "it will be removed. Please do not use it anymore."
 msgstr ""
 "参数 -b/--binary 已经很长时间不做任何实质操作了，并且将被删除。\n"
 "请不要再使用它了。"
 
-#: git-am.sh:486
+#: git-am.sh:496
 #, sh-format
 msgid "previous rebase directory $dotest still exists but mbox given."
 msgstr "之前的变基目录 $dotest 仍然存在，但却提供了 mbox。"
 
-#: git-am.sh:491
+#: git-am.sh:501
 msgid "Please make up your mind. --skip or --abort?"
 msgstr "请下决心。--skip 或是 --abort ？"
 
-#: git-am.sh:527
+#: git-am.sh:537
 #, sh-format
 msgid ""
 "Stray $dotest directory found.\n"
 "Use \"git am --abort\" to remove it."
 msgstr ""
 "发现了错误的 $dotest 目录。\n"
 "使用 \"git am --abort\" 删除它。"
 
-#: git-am.sh:535
+#: git-am.sh:545
 msgid "Resolve operation not in progress, we are not resuming."
 msgstr "解决操作未进行，我们不会继续。"
 
-#: git-am.sh:601
+#: git-am.sh:612
 #, sh-format
 msgid "Dirty index: cannot apply patches (dirty: $files)"
 msgstr "脏的索引：不能应用补丁（脏文件：$files）"
 
-#: git-am.sh:705
+#: git-am.sh:722
 #, sh-format
 msgid ""
 "Patch is empty.  Was it split wrong?\n"
 "If you would prefer to skip this patch, instead run \"$cmdline --skip\".\n"
 "To restore the original branch and stop patching run \"$cmdline --abort\"."
 msgstr ""
 "补丁为空。是不是切分错误？\n"
 "如果您想要跳过这个补丁，执行 \"$cmdline --skip\"。\n"
 "要恢复原分支并停止打补丁，执行 \"$cmdline --abort\"。"
 
-#: git-am.sh:732
+#: git-am.sh:749
 msgid "Patch does not have a valid e-mail address."
 msgstr "补丁中没有一个有效的邮件地址。"
 
-#: git-am.sh:779
+#: git-am.sh:796
 msgid "cannot be interactive without stdin connected to a terminal."
 msgstr "标准输入没有和终端关联，不能进行交互式操作。"
 
-#: git-am.sh:783
+#: git-am.sh:800
 msgid "Commit Body is:"
 msgstr "提交内容为："
 
 #  译者：注意保持句尾空格
 #. TRANSLATORS: Make sure to include [y], [n], [e], [v] and [a]
 #. in your translation. The program will only accept English
 #. input at this point.
-#: git-am.sh:790
+#: git-am.sh:807
 msgid "Apply? [y]es/[n]o/[e]dit/[v]iew patch/[a]ccept all "
 msgstr "应用？[y]es/[n]o/[e]dit/[v]iew patch/[a]ccept all "
 
-#: git-am.sh:826
+#: git-am.sh:843
 #, sh-format
 msgid "Applying: $FIRSTLINE"
 msgstr "正应用：$FIRSTLINE"
 
-#: git-am.sh:847
+#: git-am.sh:864
 msgid ""
 "No changes - did you forget to use 'git add'?\n"
 "If there is nothing left to stage, chances are that something else\n"
 "already introduced the same changes; you might want to skip this patch."
 msgstr ""
 "没有变更 —— 您是不是忘了执行 'git add'？\n"
 "如果没有什么要添加到暂存区的，则很可能是其它提交已经引入了相同的变更。\n"
 "您也许想要跳过这个补丁。"
 
-#: git-am.sh:855
+#: git-am.sh:872
 msgid ""
 "You still have unmerged paths in your index\n"
 "did you forget to use 'git add'?"
 msgstr "您的索引中仍有未合并的路径。您是否忘了执行 'git add'？"
 
-#: git-am.sh:871
+#: git-am.sh:888
 msgid "No changes -- Patch already applied."
 msgstr "没有变更 —— 补丁已经应用过。"
 
-#: git-am.sh:881
+#: git-am.sh:898
 #, sh-format
 msgid "Patch failed at $msgnum $FIRSTLINE"
 msgstr "补丁失败于 $msgnum $FIRSTLINE"
 
-#: git-am.sh:884
+#: git-am.sh:901
 #, sh-format
 msgid ""
 "The copy of the patch that failed is found in:\n"
 "   $dotest/patch"
 msgstr ""
 "失败的补丁文件副本位于：\n"
 "   $dotest/patch"
 
-#: git-am.sh:902
+#: git-am.sh:919
 msgid "applying to an empty history"
 msgstr "正应用到一个空历史上"
 
 #: git-bisect.sh:48
 msgid "You need to start by \"git bisect start\""
 msgstr "您需要执行 \"git bisect start\" 来开始"
@@ -10238,13 +10246,13 @@
 msgstr "坏的 HEAD - 我需要一个 HEAD"
 
 #: git-bisect.sh:130
 #, sh-format
 msgid ""
 "Checking out '$start_head' failed. Try 'git bisect reset <validbranch>'."
-msgstr "检出 '$start_head' 失败。尝试 'git bisect reset <validbranch>'。"
+msgstr "检出 '$start_head' 失败。尝试 'git bisect reset <有效分支>'。"
 
 #: git-bisect.sh:140
 msgid "won't bisect on cg-seek'ed tree"
 msgstr "不会在做了 cg-seek 的树上做二分查找"
 
 #: git-bisect.sh:144
@@ -10267,116 +10275,116 @@
 
 #: git-bisect.sh:244
 #, sh-format
 msgid "Bad rev input: $rev"
 msgstr "输入坏的版本：$rev"
 
-#: git-bisect.sh:250
+#: git-bisect.sh:253
 msgid "'git bisect bad' can take only one argument."
 msgstr "'git bisect bad' 只能带一个参数。"
 
-#: git-bisect.sh:273
+#: git-bisect.sh:276
 msgid "Warning: bisecting only with a bad commit."
 msgstr "警告：在仅有一个坏提交下进行二分查找。"
 
 #  译者：注意保持句尾空格
 #. TRANSLATORS: Make sure to include [Y] and [n] in your
 #. translation. The program will only accept English input
 #. at this point.
-#: git-bisect.sh:279
+#: git-bisect.sh:282
 msgid "Are you sure [Y/n]? "
 msgstr "您确认么[Y/n]？ "
 
-#: git-bisect.sh:289
+#: git-bisect.sh:292
 msgid ""
 "You need to give me at least one good and one bad revision.\n"
 "(You can use \"git bisect bad\" and \"git bisect good\" for that.)"
 msgstr ""
 "您需要给我至少一个好版本和一个坏版本。\n"
 "（为此您可以用 \"git bisect bad\" 和 \"git bisect good\" 命令。）"
 
-#: git-bisect.sh:292
+#: git-bisect.sh:295
 msgid ""
 "You need to start by \"git bisect start\".\n"
 "You then need to give me at least one good and one bad revision.\n"
 "(You can use \"git bisect bad\" and \"git bisect good\" for that.)"
 msgstr ""
 "您需要执行 \"git bisect start\" 来开始。\n"
 "然后需要提供我至少一个好版本和一个坏版本。\n"
 "（为此您可以用 \"git bisect bad\" 和 \"git bisect good\" 命令。）"
 
-#: git-bisect.sh:363 git-bisect.sh:490
+#: git-bisect.sh:366 git-bisect.sh:493
 msgid "We are not bisecting."
 msgstr "我们没有在二分查找。"
 
-#: git-bisect.sh:370
+#: git-bisect.sh:373
 #, sh-format
 msgid "'$invalid' is not a valid commit"
 msgstr "'$invalid' 不是一个有效的提交"
 
-#: git-bisect.sh:379
+#: git-bisect.sh:382
 #, sh-format
 msgid ""
 "Could not check out original HEAD '$branch'.\n"
 "Try 'git bisect reset <commit>'."
 msgstr ""
 "不能检出原始 HEAD '$branch'。\n"
 "尝试 'git bisect reset <提交>'。"
 
-#: git-bisect.sh:406
+#: git-bisect.sh:409
 msgid "No logfile given"
 msgstr "未提供日志文件"
 
-#: git-bisect.sh:407
+#: git-bisect.sh:410
 #, sh-format
 msgid "cannot read $file for replaying"
 msgstr "不能读取 $file 来重放"
 
-#: git-bisect.sh:424
+#: git-bisect.sh:427
 msgid "?? what are you talking about?"
 msgstr "?? 您在说什么?"
 
-#: git-bisect.sh:436
+#: git-bisect.sh:439
 #, sh-format
 msgid "running $command"
 msgstr "运行 $command"
 
-#: git-bisect.sh:443
+#: git-bisect.sh:446
 #, sh-format
 msgid ""
 "bisect run failed:\n"
 "exit code $res from '$command' is < 0 or >= 128"
 msgstr ""
 "二分查找运行失败：\n"
 "命令 '$command' 的退出码 $res 小于 0 或大于等于 128"
 
-#: git-bisect.sh:469
+#: git-bisect.sh:472
 msgid "bisect run cannot continue any more"
 msgstr "二分查找不能继续运行"
 
-#: git-bisect.sh:475
+#: git-bisect.sh:478
 #, sh-format
 msgid ""
 "bisect run failed:\n"
 "'bisect_state $state' exited with error code $res"
 msgstr ""
 "二分查找运行失败：\n"
 "'bisect_state $state' 退出码为 $res"
 
-#: git-bisect.sh:482
+#: git-bisect.sh:485
 msgid "bisect run success"
 msgstr "二分查找运行成功"
 
 #: git-pull.sh:21
 msgid ""
 "Pull is not possible because you have unmerged files.\n"
 "Please, fix them up in the work tree, and then use 'git add/rm <file>'\n"
 "as appropriate to mark resolution and make a commit."
 msgstr ""
 "Pull 不可用，因为您尚有未合并的文件。请先在工作区改正文件，\n"
-"然后酌情使用 'git add/rm <file>' 标记解决方案，再做提交。"
+"然后酌情使用 'git add/rm <文件>' 标记解决方案，再做提交。"
 
 #: git-pull.sh:25
 msgid "Pull is not possible because you have unmerged files."
 msgstr "Pull 不可用，因为您尚有未合并的文件。"
 
 #: git-pull.sh:31
@@ -10971,12 +10979,24 @@
 
 #: git-submodule.sh:1331
 #, sh-format
 msgid "Synchronizing submodule url for '$displaypath'"
 msgstr "为 '$displaypath' 同步子模组 url"
 
+#~ msgid "no files added"
+#~ msgstr "没有文件被添加"
+
+#~ msgid "force creation (when already exists)"
+#~ msgstr "强制创建（当已经存在）"
+
+#~ msgid "Malformed ident string: '%s'"
+#~ msgstr "非法的身份字符串：'%s'"
+
+#~ msgid "slot"
+#~ msgstr "slot"
+
 #~ msgid "Failed to lock ref for update"
 #~ msgstr "无法为更新锁定引用"
 
 #~ msgid "Failed to write ref"
 #~ msgstr "不能写引用"
 
@@ -11239,13 +11259,13 @@
 #~ msgstr "无法递归进子模组路径 '$prefix$sm_path'"
 
 #~ msgid "git shortlog [-n] [-s] [-e] [-w] [rev-opts] [--] [<commit-id>... ]"
 #~ msgstr "git shortlog [-n] [-s] [-e] [-w] [版本选项] [--] [<提交号>... ]"
 
 #~ msgid "See 'git help <command>' for more information on a specific command."
-#~ msgstr "参见 'git help <command>' 以获得该特定命令的详细信息。"
+#~ msgstr "参见 'git help <命令>' 以获得该特定命令的详细信息。"
 
 #~ msgid "BUG: impossible combination of %d and %p"
 #~ msgstr "BUG: 无法组合 %d 和 %p"
 
 #  译者：以下三条实际为一个段落
 #~ msgid "It took %.2f seconds to enumerate untracked files.  'status -uno'"
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/preload-index.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/preload-index.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/preload-index.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/preload-index.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pretty.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pretty.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/pretty.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/pretty.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/prio-queue.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/prio-queue.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/prio-queue.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/prio-queue.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/progress.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/progress.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/progress.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/progress.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/prompt.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/prompt.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/prompt.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/prompt.c	2015-02-06 05:40:08.000000000 +0800
@@ -54,17 +54,25 @@
 		if (!askpass)
 			askpass = getenv("SSH_ASKPASS");
 		if (askpass && *askpass)
 			r = do_askpass(askpass, prompt);
 	}
 
-	if (!r)
-		r = git_terminal_prompt(prompt, flags & PROMPT_ECHO);
 	if (!r) {
-		/* prompts already contain ": " at the end */
-		die("could not read %s%s", prompt, strerror(errno));
+		const char *err;
+
+		if (git_env_bool("GIT_TERMINAL_PROMPT", 1)) {
+			r = git_terminal_prompt(prompt, flags & PROMPT_ECHO);
+			err = strerror(errno);
+		} else {
+			err = "terminal prompts disabled";
+		}
+		if (!r) {
+			/* prompts already contain ": " at the end */
+			die("could not read %s%s", prompt, err);
+		}
 	}
 	return r;
 }
 
 char *git_getpass(const char *prompt)
 {
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/prompt.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/prompt.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/prompt.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/prompt.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/quote.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/quote.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/quote.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/quote.c	2015-02-06 05:40:08.000000000 +0800
@@ -271,33 +271,12 @@
 	} else {
 		fputs(name, fp);
 	}
 	fputc(terminator, fp);
 }
 
-void write_name_quotedpfx(const char *pfx, size_t pfxlen,
-			  const char *name, FILE *fp, int terminator)
-{
-	int needquote = 0;
-
-	if (terminator) {
-		needquote = next_quote_pos(pfx, pfxlen) < pfxlen
-			|| name[next_quote_pos(name, -1)];
-	}
-	if (needquote) {
-		fputc('"', fp);
-		quote_c_style_counted(pfx, pfxlen, NULL, fp, 1);
-		quote_c_style(name, NULL, fp, 1);
-		fputc('"', fp);
-	} else {
-		fwrite(pfx, pfxlen, 1, fp);
-		fputs(name, fp);
-	}
-	fputc(terminator, fp);
-}
-
 void write_name_quoted_relative(const char *name, const char *prefix,
 				FILE *fp, int terminator)
 {
 	struct strbuf sb = STRBUF_INIT;
 
 	name = relative_path(name, prefix, &sb);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/quote.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/quote.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/quote.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/quote.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/quote.h	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/quote.h	2015-02-06 05:40:08.000000000 +0800
@@ -53,14 +53,12 @@
 
 extern int unquote_c_style(struct strbuf *, const char *quoted, const char **endp);
 extern size_t quote_c_style(const char *name, struct strbuf *, FILE *, int no_dq);
 extern void quote_two_c_style(struct strbuf *, const char *, const char *, int);
 
 extern void write_name_quoted(const char *name, FILE *, int terminator);
-extern void write_name_quotedpfx(const char *pfx, size_t pfxlen,
-                                 const char *name, FILE *, int terminator);
 extern void write_name_quoted_relative(const char *name, const char *prefix,
 		FILE *fp, int terminator);
 
 /* quote path as relative to the given prefix */
 extern char *quote_path_relative(const char *in, const char *prefix,
 			  struct strbuf *out);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/quote.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/quote.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/reachable.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/reachable.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/reachable.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/reachable.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/read-cache.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/read-cache.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/read-cache.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/read-cache.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/reflog-walk.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/reflog-walk.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/reflog-walk.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/reflog-walk.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/refs.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/refs.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/refs.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/refs.c	2015-02-06 05:40:08.000000000 +0800
@@ -2319,21 +2319,27 @@
 		error("unable to create directory for %s", ref_file);
 		goto error_return;
 	}
 
 	lock->lock_fd = hold_lock_file_for_update(lock->lk, ref_file, lflags);
 	if (lock->lock_fd < 0) {
+		last_errno = errno;
 		if (errno == ENOENT && --attempts_remaining > 0)
 			/*
 			 * Maybe somebody just deleted one of the
 			 * directories leading to ref_file.  Try
 			 * again:
 			 */
 			goto retry;
-		else
-			unable_to_lock_die(ref_file, errno);
+		else {
+			struct strbuf err = STRBUF_INIT;
+			unable_to_lock_message(ref_file, errno, &err);
+			error("%s", err.buf);
+			strbuf_release(&err);
+			goto error_return;
+		}
 	}
 	return old_sha1 ? verify_lock(lock, old_sha1, mustexist) : lock;
 
  error_return:
 	unlock_ref(lock);
 	errno = last_errno;
@@ -2640,39 +2646,42 @@
 		return 0;
 	}
 
 	return 0;
 }
 
-int repack_without_refs(const char **refnames, int n, struct strbuf *err)
+int repack_without_refs(struct string_list *refnames, struct strbuf *err)
 {
 	struct ref_dir *packed;
 	struct string_list refs_to_delete = STRING_LIST_INIT_DUP;
-	struct string_list_item *ref_to_delete;
-	int i, ret, removed = 0;
+	struct string_list_item *refname, *ref_to_delete;
+	int ret, needs_repacking = 0, removed = 0;
 
 	assert(err);
 
 	/* Look for a packed ref */
-	for (i = 0; i < n; i++)
-		if (get_packed_ref(refnames[i]))
+	for_each_string_list_item(refname, refnames) {
+		if (get_packed_ref(refname->string)) {
+			needs_repacking = 1;
 			break;
+		}
+	}
 
 	/* Avoid locking if we have nothing to do */
-	if (i == n)
+	if (!needs_repacking)
 		return 0; /* no refname exists in packed refs */
 
 	if (lock_packed_refs(0)) {
 		unable_to_lock_message(git_path("packed-refs"), errno, err);
 		return -1;
 	}
 	packed = get_packed_refs(&ref_cache);
 
 	/* Remove refnames from the cache */
-	for (i = 0; i < n; i++)
-		if (remove_entry(packed, refnames[i]) != -1)
+	for_each_string_list_item(refname, refnames)
+		if (remove_entry(packed, refname->string) != -1)
 			removed = 1;
 	if (!removed) {
 		/*
 		 * All packed entries disappeared while we were
 		 * acquiring the lock.
 		 */
@@ -3764,30 +3773,28 @@
 	return 0;
 }
 
 int ref_transaction_commit(struct ref_transaction *transaction,
 			   struct strbuf *err)
 {
-	int ret = 0, delnum = 0, i;
-	const char **delnames;
+	int ret = 0, i;
 	int n = transaction->nr;
 	struct ref_update **updates = transaction->updates;
+	struct string_list refs_to_delete = STRING_LIST_INIT_NODUP;
+	struct string_list_item *ref_to_delete;
 
 	assert(err);
 
 	if (transaction->state != REF_TRANSACTION_OPEN)
 		die("BUG: commit called for transaction that is not open");
 
 	if (!n) {
 		transaction->state = REF_TRANSACTION_CLOSED;
 		return 0;
 	}
 
-	/* Allocate work space */
-	delnames = xmalloc(sizeof(*delnames) * n);
-
 	/* Copy, sort, and reject duplicate refs */
 	qsort(updates, n, sizeof(*updates), ref_update_compare);
 	if (ref_update_reject_duplicates(updates, n, err)) {
 		ret = TRANSACTION_GENERIC_ERROR;
 		goto cleanup;
 	}
@@ -3841,31 +3848,32 @@
 			if (delete_ref_loose(update->lock, update->type, err)) {
 				ret = TRANSACTION_GENERIC_ERROR;
 				goto cleanup;
 			}
 
 			if (!(update->flags & REF_ISPRUNING))
-				delnames[delnum++] = update->lock->ref_name;
+				string_list_append(&refs_to_delete,
+						   update->lock->ref_name);
 		}
 	}
 
-	if (repack_without_refs(delnames, delnum, err)) {
+	if (repack_without_refs(&refs_to_delete, err)) {
 		ret = TRANSACTION_GENERIC_ERROR;
 		goto cleanup;
 	}
-	for (i = 0; i < delnum; i++)
-		unlink_or_warn(git_path("logs/%s", delnames[i]));
+	for_each_string_list_item(ref_to_delete, &refs_to_delete)
+		unlink_or_warn(git_path("logs/%s", ref_to_delete->string));
 	clear_loose_ref_cache(&ref_cache);
 
 cleanup:
 	transaction->state = REF_TRANSACTION_CLOSED;
 
 	for (i = 0; i < n; i++)
 		if (updates[i]->lock)
 			unlock_ref(updates[i]->lock);
-	free(delnames);
+	string_list_clear(&refs_to_delete, 0);
 	return ret;
 }
 
 char *shorten_unambiguous_ref(const char *refname, int strict)
 {
 	int i;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/refs.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/refs.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/refs.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/refs.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/refs.h	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/refs.h	2015-02-06 05:40:08.000000000 +0800
@@ -160,13 +160,21 @@
 /*
  * Write a packed-refs file for the current repository.
  * flags: Combination of the above PACK_REFS_* flags.
  */
 int pack_refs(unsigned int flags);
 
-extern int repack_without_refs(const char **refnames, int n,
+/*
+ * Rewrite the packed-refs file, omitting any refs listed in
+ * 'refnames'. On error, packed-refs will be unchanged, the return
+ * value is nonzero, and a message about the error is written to the
+ * 'err' strbuf.
+ *
+ * The refs in 'refnames' needn't be sorted. `err` must not be NULL.
+ */
+extern int repack_without_refs(struct string_list *refnames,
 			       struct strbuf *err);
 
 extern int ref_exists(const char *);
 
 extern int is_branch(const char *refname);
 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/refs.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/refs.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/RelNotes /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/RelNotes
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/RelNotes	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/RelNotes	2015-02-06 05:40:08.000000000 +0800
@@ -1,9 +1,300 @@
-Git v2.2.3 Release Notes
-========================
+Git v2.3 Release Notes
+======================
 
-Fixes since v2.2.2
+This one ended up to be a release with lots of small corrections and
+improvements without big uncomfortably exciting features.  The recent
+security fix that went to 2.2.1 and older maintenance tracks is also
+contained in this update.
+
+
+Updates since v2.2
 ------------------
 
- * A handful of codepaths that used to use fixed-sized arrays to hold
-   pathnames have been corrected to use strbuf and other mechanisms to
-   allow longer pathnames without fearing overflows.
+Ports
+
+ * Recent gcc toolchain on Cygwin started throwing compilation warning,
+   which has been squelched.
+
+ * A few updates to build on platforms that lack tv_nsec,
+   clock_gettime, CLOCK_MONOTONIC and HMAC_CTX_cleanup (e.g. older
+   RHEL) have been added.
+
+
+UI, Workflows & Features
+
+ * It was cumbersome to use "GIT_SSH" mechanism when the user wanted
+   to pass an extra set of arguments to the underlying ssh.  A new
+   environment variable GIT_SSH_COMMAND can be used for this.
+
+ * A request to store an empty note via "git notes" meant to remove
+   note from the object but with --allow-empty we will store a
+   (surprise!)  note that is empty.
+
+ * "git interpret-trailers" learned to properly handle the
+   "Conflicts:" block at the end.
+
+ * "git am" learned "--message-id" option to copy the message ID of
+   the incoming e-mail to the log message of resulting commit.
+
+ * "git clone --reference=<over there>" learned the "--dissociate"
+   option to go with it; it borrows objects from the reference object
+   store while cloning only to reduce network traffic and then
+   dissociates the resulting clone from the reference by performing
+   local copies of borrowed objects.
+
+ * "git send-email" learned "--transfer-encoding" option to force a
+   non-fault Content-Transfer-Encoding header (e.g. base64).
+
+ * "git send-email" normally identifies itself via X-Mailer: header in
+   the message it sends out.  A new command line flag --no-xmailer
+   allows the user to squelch the header.
+
+ * "git push" into a repository with a working tree normally refuses
+   to modify the branch that is checked out.  The command learned to
+   optionally do an equivalent of "git reset --hard" only when there
+   is no change to the working tree and the index instead, which would
+   be useful to "deploy" by pushing into a repository.
+
+ * "git new-workdir" (in contrib/) can be used to populate an empty
+   and existing directory now.
+
+ * Credential helpers are asked in turn until one of them give
+   positive response, which is cumbersome to turn off when you need to
+   run Git in an automated setting.  The credential helper interface
+   learned to allow a helper to say "stop, don't ask other helpers."
+   Also GIT_TERMINAL_PROMPT environment can be set to false to disable
+   our built-in prompt mechanism for passwords.
+
+ * "git branch -d" (delete) and "git branch -m" (move) learned to
+   honor "-f" (force) flag; unlike many other subcommands, the way to
+   force these have been with separate "-D/-M" options, which was
+   inconsistent.
+
+ * "diff-highlight" filter (in contrib/) allows its color output to be
+   customized via configuration variables.
+
+ * "git imap-send" learned to take "-v" (verbose) and "-q" (quiet)
+   command line options.
+
+ * "git remote add $name $URL" is now allowed when "url.$URL.insteadOf"
+   is already defined.
+
+ * "git imap-send" now can be built to use cURL library to talk to
+   IMAP servers (if the library is recent enough, of course).
+   This allows you to use authenticate method other than CRAM-MD5,
+   among other things.
+
+ * "git imap-send" now allows GIT_CURL_VERBOSE environment variable to
+   control the verbosity when talking via the cURL library.
+
+ * The prompt script (in contrib/) learned to optionally hide prompt
+   when in an ignored directory by setting GIT_PS1_HIDE_IF_PWD_IGNORED
+   shell variable.
+
+
+Performance, Internal Implementation, Development Support etc.
+
+ * Earlier we made "rev-list --object-edge" more aggressively list the
+   objects at the edge commits, in order to reduce number of objects　
+   fetched into a shallow repository, but the change affected cases
+   other than "fetching into a shallow repository" and made it
+   unusably slow (e.g. fetching into a normal repository should not
+   have to suffer the overhead from extra processing).  Limit it to a
+   more specific case by introducing --objects-edge-aggressive, a new
+   option to rev-list.
+
+ * Squelched useless compiler warnings on Mac OS X regarding the
+   crypto API.
+
+ * The procedure to generate unicode table has been simplified.
+
+ * Some filesystems assign filemodes in a strange way, fooling then
+   automatic "filemode trustability" check done during a new
+   repository creation.  The initialization codepath has been hardened
+   against this issue.
+
+ * The codepath in "git remote update --prune" to drop many refs has
+   been optimized.
+
+ * The API into get_merge_bases*() family of functions was easy to
+   misuse, which has been corrected to make it harder to do so.
+
+ * Long overdue departure from the assumption that S_IFMT is shared by
+   everybody made in 2005, which was necessary to port to z/OS.
+
+ * "git push" and "git fetch" did not communicate an overlong refname
+   correctly.  Now it uses 64kB sideband to accommodate longer ones.
+
+ * Recent GPG changes the keyring format and drops support for RFC1991
+   formatted signatures, breaking our existing tests.
+
+ * "git-prompt" (in contrib/) used a variable from the global scope,
+   possibly contaminating end-user's namespace.
+
+
+Also contains various documentation updates and code clean-ups.
+
+
+Fixes since v2.2
+----------------
+
+Unless otherwise noted, all the fixes since v2.2 in the maintenance
+track are contained in this release (see the maintenance releases'
+notes for details).
+
+ * "git http-push" over WebDAV (aka dumb http-push) was broken in
+   v2.2.2 when parsing a symbolic ref, resulting in a bogus request
+   that gets rejected by recent versions of cURL library.
+   (merge f6786c8 jk/http-push-symref-fix later to maint).
+
+ * The logic in "git bisect bad HEAD" etc. to avoid forcing the test
+   of the common ancestor of bad and good commits was broken.
+   (merge 07913d5 cc/bisect-rev-parsing later to maint).
+
+ * "git checkout-index --temp=$target $path" did not work correctly
+   for paths outside the current subdirectory in the project.
+   (merge 74c4de5 es/checkout-index-temp later to maint).
+
+ * The report from "git checkout" on a branch that builds on another
+   local branch by setting its branch.*.merge to branch name (not a
+   full refname) incorrectly said that the upstream is gone.
+   (merge 05e7368 jc/checkout-local-track-report later to maint).
+
+ * With The git-prompt support (in contrib/), using the exit status of
+   the last command in the prompt, e.g.  PS1='$(__git_ps1) $? ', did
+   not work well, because the helper function stomped on the exit
+   status.
+   (merge 6babe76 tf/prompt-preserve-exit-status later to maint).
+
+ * Recent update to "git commit" broke amending an existing commit
+   with bogus author/committer lines without a valid e-mail address.
+   (merge c83a509 jk/commit-date-approxidate later to maint).
+
+ * The lockfile API used to get confused which file to clean up when
+   the process moved the $cwd after creating a lockfile.
+   (merge fa137f6 nd/lockfile-absolute later to maint).
+
+ * Traditionally we tried to avoid interpreting date strings given by
+   the user as future dates, e.g. GIT_COMMITTER_DATE=2014-12-10 when
+   used early November 2014 was taken as "October 12, 2014" because it
+   is likely that a date in the future, December 10, is a mistake.
+   This heuristics has been loosened to allow people to express future
+   dates (most notably, --until=<date> may want to be far in the
+   future) and we no longer tiebreak by future-ness of the date when
+
+    (1) ISO-like format is used, and
+    (2) the string can make sense interpreted as both y-m-d and y-d-m.
+
+   Git may still have to use the heuristics to tiebreak between dd/mm/yy
+   and mm/dd/yy, though.
+   (merge d372395 jk/approxidate-avoid-y-d-m-over-future-dates later to maint).
+
+ * Git did not correctly read an overlong refname from a packed refs
+   file.
+   (merge ea41783 jk/read-packed-refs-without-path-max later to maint).
+
+ * "git apply" was described in the documentation to take --ignore-date
+   option, which it does not.
+   (merge 0cef4e7 rw/apply-does-not-take-ignore-date later to maint).
+
+ * "git add -i" did not notice when the interactive command input
+   stream went away and kept asking the same question.
+   (merge a8bec7a jk/add-i-read-error later to maint).
+
+ * "git send-email" did not handle RFC 2047 encoded headers quite
+   right.
+   (merge ab47e2a rd/send-email-2047-fix later to maint).
+
+ * New tag object format validation added in 2.2 showed garbage after
+   a tagname it reported in its error message.
+   (merge a1e920a js/fsck-tag-validation later to maint).
+
+ * The code that reads the reflog from the newer to the older entries
+   did not handle an entry that crosses a boundary of block it uses to
+   read them correctly.
+   (merge 69216bf jk/for-each-reflog-ent-reverse later to maint).
+
+ * "git diff -B -M" after making a new copy B out of an existing file
+   A and then editing A extensively ought to report that B was created
+   by copying A and A was modified, which is what "git diff -C"
+   reports, but it instead said A was renamed to B and A was edited
+   heavily in place.  This was not just incoherent but also failed to
+   apply with "git apply".  The report has been corrected to match what
+   "git diff -C" produces for this case.
+   (merge 6936b58 jc/diff-b-m later to maint).
+
+ * In files we pre-populate for the user to edit with commented hints,
+   a line of hint that is indented with a tab used to show as '#' (or
+   any comment char), ' ' (space), and then the hint text that began
+   with the tab, which some editors flag as an indentation error (tab
+   following space).  We now omit the space after the comment char in
+   such a case.
+   (merge d55aeb7 jc/strbuf-add-lines-avoid-sp-ht-sequence later to maint).
+
+ * "git ls-tree" does not support path selection based on negative
+   pathspecs, but did not error out when negative pathspecs are given.
+   (merge f1f6224 nd/ls-tree-pathspec later to maint).
+
+ * The function sometimes returned a non-freeable memory and some
+   other times returned a piece of memory that must be freed, leading
+   to inevitable leaks.
+   (merge 59362e5 jc/exec-cmd-system-path-leak-fix later to maint).
+
+ * The code to abbreviate an object name to its short unique prefix
+   has been optimized when no abbreviation was requested.
+   (merge 61e704e mh/find-uniq-abbrev later to maint).
+
+ * "git add --ignore-errors ..." did not ignore an error to
+   give a file that did not exist.
+   (merge 1d31e5a mg/add-ignore-errors later to maint).
+
+ * "git checkout $treeish $path", when $path in the index and the
+   working tree already matched what is in $treeish at the $path,
+   still overwrote the $path unnecessarily.
+   (merge c5326bd jk/checkout-from-tree later to maint).
+
+ * "git config --get-color" did not parse its command line arguments
+   carefully.
+   (merge cb35722 jk/colors-fix later to maint).
+
+ * open() emulated on Windows platforms did not give EISDIR upon
+   an attempt to open a directory for writing.
+   (merge ba6fad0 js/windows-open-eisdir-error later to maint).
+
+ * A few code paths used abs() when they should have used labs() on
+   long integers.
+   (merge 83915ba rs/maint-config-use-labs later to maint).
+   (merge 31a8aa1 rs/receive-pack-use-labs later to maint).
+
+ * "gitweb" used to depend on a behaviour recent CGI.pm deprecated.
+   (merge 13dbf46 jk/gitweb-with-newer-cgi-multi-param later to maint).
+
+ * "git init" (hence "git clone") initialized the per-repository
+   configuration file .git/config with x-bit by mistake.
+   (merge 1f32ecf mh/config-flip-xbit-back-after-checking later to maint).
+
+ * Recent update in Git 2.2 started creating objects/info/packs and
+   info/refs files with permission bits tighter than user's umask.
+   (merge d91175b jk/prune-packed-server-info later to maint).
+
+ * Git 2.0 was supposed to make the "simple" mode for the default of
+   "git push", but it didn't.
+   (merge 00a6fa0 jk/push-simple later to maint).
+
+ * "Everyday" document had a broken link.
+   (merge 366c8d4 po/everyday-doc later to maint).
+
+ * A few test fixes.
+   (merge 880ef58 jk/no-perl-tests later to maint).
+
+ * The build procedure did not bother fixing perl and python scripts
+   when NO_PERL and NO_PYTHON build-time configuration changed.
+   (merge ca2051d jk/rebuild-perl-scripts-with-no-perl-seting-change later to maint).
+
+ * The usage string of "git log" command was marked incorrectly for
+   l10n.
+   (merge e66dc0c km/log-usage-string-i18n later to maint).
+
+ * "git for-each-ref" mishandled --format="%(upstream:track)" when a
+   branch is marked to have forked from a non-existing branch.
+   (merge b6160d9 rc/for-each-ref-tracking later to maint).
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/remote.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/remote.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/remote.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/remote.c	2015-02-06 05:40:08.000000000 +0800
@@ -1353,13 +1353,13 @@
 			add_to_tips(&sent_tips, ref->old_sha1);
 		if (starts_with(ref->name, "refs/tags/"))
 			string_list_append(&dst_tag, ref->name);
 	}
 	clear_commit_marks_many(sent_tips.nr, sent_tips.tip, TMP_MARK);
 
-	sort_string_list(&dst_tag);
+	string_list_sort(&dst_tag);
 
 	/* Collect tags they do not have. */
 	for (ref = src; ref; ref = ref->next) {
 		if (!starts_with(ref->name, "refs/tags/"))
 			continue; /* not a tag */
 		if (string_list_has_string(&dst_tag, ref->name))
@@ -1418,13 +1418,13 @@
 
 static void prepare_ref_index(struct string_list *ref_index, struct ref *ref)
 {
 	for ( ; ref; ref = ref->next)
 		string_list_append_nodup(ref_index, ref->name)->util = ref;
 
-	sort_string_list(ref_index);
+	string_list_sort(ref_index);
 }
 
 /*
  * Given only the set of local refs, sanity-check the set of push
  * refspecs. We can't catch all errors that match_push_refs would,
  * but we can catch some errors early before even talking to the
@@ -1628,34 +1628,46 @@
 			ref->status = reject_reason;
 		else if (reject_reason)
 			ref->forced_update = 1;
 	}
 }
 
+static void set_merge(struct branch *ret)
+{
+	char *ref;
+	unsigned char sha1[20];
+	int i;
+
+	ret->merge = xcalloc(ret->merge_nr, sizeof(*ret->merge));
+	for (i = 0; i < ret->merge_nr; i++) {
+		ret->merge[i] = xcalloc(1, sizeof(**ret->merge));
+		ret->merge[i]->src = xstrdup(ret->merge_name[i]);
+		if (!remote_find_tracking(ret->remote, ret->merge[i]) ||
+		    strcmp(ret->remote_name, "."))
+			continue;
+		if (dwim_ref(ret->merge_name[i], strlen(ret->merge_name[i]),
+			     sha1, &ref) == 1)
+			ret->merge[i]->dst = ref;
+		else
+			ret->merge[i]->dst = xstrdup(ret->merge_name[i]);
+	}
+}
+
 struct branch *branch_get(const char *name)
 {
 	struct branch *ret;
 
 	read_config();
 	if (!name || !*name || !strcmp(name, "HEAD"))
 		ret = current_branch;
 	else
 		ret = make_branch(name, 0);
 	if (ret && ret->remote_name) {
 		ret->remote = remote_get(ret->remote_name);
-		if (ret->merge_nr) {
-			int i;
-			ret->merge = xcalloc(ret->merge_nr, sizeof(*ret->merge));
-			for (i = 0; i < ret->merge_nr; i++) {
-				ret->merge[i] = xcalloc(1, sizeof(**ret->merge));
-				ret->merge[i]->src = xstrdup(ret->merge_name[i]);
-				if (remote_find_tracking(ret->remote, ret->merge[i])
-				    && !strcmp(ret->remote_name, "."))
-					ret->merge[i]->dst = xstrdup(ret->merge_name[i]);
-			}
-		}
+		if (ret->merge_nr)
+			set_merge(ret);
 	}
 	return ret;
 }
 
 int branch_has_merge_config(struct branch *branch)
 {
@@ -2132,13 +2144,13 @@
 	info.ref_names = &ref_names;
 	info.stale_refs_tail = &stale_refs;
 	info.refs = refs;
 	info.ref_count = ref_count;
 	for (ref = fetch_map; ref; ref = ref->next)
 		string_list_append(&ref_names, ref->name);
-	sort_string_list(&ref_names);
+	string_list_sort(&ref_names);
 	for_each_ref(get_stale_heads_cb, &info);
 	string_list_clear(&ref_names, 0);
 	return stale_refs;
 }
 
 /*
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/remote.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/remote.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/remote.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/remote.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/remote-testsvn.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/remote-testsvn.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/remote-testsvn.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/remote-testsvn.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/replace_object.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/replace_object.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/replace_object.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/replace_object.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/rerere.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/rerere.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/rerere.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/rerere.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/resolve-undo.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/resolve-undo.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/resolve-undo.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/resolve-undo.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/revision.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/revision.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/revision.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/revision.c	2015-02-06 05:40:08.000000000 +0800
@@ -1438,13 +1438,13 @@
 	head = lookup_commit_or_die(sha1, "HEAD");
 	if (get_sha1("MERGE_HEAD", sha1))
 		die("--merge without MERGE_HEAD?");
 	other = lookup_commit_or_die(sha1, "MERGE_HEAD");
 	add_pending_object(revs, &head->object, "HEAD");
 	add_pending_object(revs, &other->object, "MERGE_HEAD");
-	bases = get_merge_bases(head, other, 1);
+	bases = get_merge_bases(head, other);
 	add_rev_cmdline_list(revs, bases, REV_CMD_MERGE_BASE, UNINTERESTING | BOTTOM);
 	add_pending_commit_list(revs, bases, UNINTERESTING | BOTTOM);
 	free_commit_list(bases);
 	head->object.flags |= SYMMETRIC_LEFT;
 
 	if (!active_nr)
@@ -1543,13 +1543,13 @@
 				     : lookup_commit_reference(a_obj->sha1));
 				b = (b_obj->type == OBJ_COMMIT
 				     ? (struct commit *)b_obj
 				     : lookup_commit_reference(b_obj->sha1));
 				if (!a || !b)
 					goto missing;
-				exclude = get_merge_bases(a, b, 1);
+				exclude = get_merge_bases(a, b);
 				add_rev_cmdline_list(revs, exclude,
 						     REV_CMD_MERGE_BASE,
 						     flags_exclude);
 				add_pending_commit_list(revs, exclude,
 							flags_exclude);
 				free_commit_list(exclude);
@@ -1850,12 +1850,18 @@
 		revs->blob_objects = 1;
 	} else if (!strcmp(arg, "--objects-edge")) {
 		revs->tag_objects = 1;
 		revs->tree_objects = 1;
 		revs->blob_objects = 1;
 		revs->edge_hint = 1;
+	} else if (!strcmp(arg, "--objects-edge-aggressive")) {
+		revs->tag_objects = 1;
+		revs->tree_objects = 1;
+		revs->blob_objects = 1;
+		revs->edge_hint = 1;
+		revs->edge_hint_aggressive = 1;
 	} else if (!strcmp(arg, "--verify-objects")) {
 		revs->tag_objects = 1;
 		revs->tree_objects = 1;
 		revs->blob_objects = 1;
 		revs->verify_objects = 1;
 	} else if (!strcmp(arg, "--unpacked")) {
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/revision.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/revision.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/revision.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/revision.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/revision.h	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/revision.h	2015-02-06 05:40:08.000000000 +0800
@@ -90,12 +90,13 @@
 			simplify_by_decoration:1,
 			tag_objects:1,
 			tree_objects:1,
 			blob_objects:1,
 			verify_objects:1,
 			edge_hint:1,
+			edge_hint_aggressive:1,
 			limited:1,
 			unpacked:1,
 			boundary:2,
 			count:1,
 			left_right:1,
 			left_only:1,
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/revision.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/revision.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/run-command.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/run-command.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/run-command.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/run-command.c	2015-02-06 05:40:08.000000000 +0800
@@ -830,23 +830,6 @@
 	va_start(args, name);
 	ret = run_hook_ve(env, name, args);
 	va_end(args);
 
 	return ret;
 }
-
-int run_hook_with_custom_index(const char *index_file, const char *name, ...)
-{
-	const char *hook_env[3] =  { NULL };
-	char index[PATH_MAX];
-	va_list args;
-	int ret;
-
-	snprintf(index, sizeof(index), "GIT_INDEX_FILE=%s", index_file);
-	hook_env[0] = index;
-
-	va_start(args, name);
-	ret = run_hook_ve(hook_env, name, args);
-	va_end(args);
-
-	return ret;
-}
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/run-command.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/run-command.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/run-command.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/run-command.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/run-command.h	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/run-command.h	2015-02-06 05:40:08.000000000 +0800
@@ -54,16 +54,12 @@
 
 extern char *find_hook(const char *name);
 LAST_ARG_MUST_BE_NULL
 extern int run_hook_le(const char *const *env, const char *name, ...);
 extern int run_hook_ve(const char *const *env, const char *name, va_list args);
 
-LAST_ARG_MUST_BE_NULL
-__attribute__((deprecated))
-extern int run_hook_with_custom_index(const char *index_file, const char *name, ...);
-
 #define RUN_COMMAND_NO_STDIN 1
 #define RUN_GIT_CMD	     2	/*If this is to be git sub-command */
 #define RUN_COMMAND_STDOUT_TO_STDERR 4
 #define RUN_SILENT_EXEC_FAILURE 8
 #define RUN_USING_SHELL 16
 #define RUN_CLEAN_ON_EXIT 32
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/run-command.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/run-command.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/send-pack.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/send-pack.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/send-pack.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/send-pack.c	2015-02-06 05:40:08.000000000 +0800
@@ -44,12 +44,13 @@
 		"--stdout",
 		NULL,
 		NULL,
 		NULL,
 		NULL,
 		NULL,
+		NULL,
 	};
 	struct child_process po = CHILD_PROCESS_INIT;
 	int i;
 
 	i = 4;
 	if (args->use_thin_pack)
@@ -57,12 +58,14 @@
 	if (args->use_ofs_delta)
 		argv[i++] = "--delta-base-offset";
 	if (args->quiet || !args->progress)
 		argv[i++] = "-q";
 	if (args->progress)
 		argv[i++] = "--progress";
+	if (is_repository_shallow())
+		argv[i++] = "--shallow";
 	po.argv = argv;
 	po.in = -1;
 	po.out = args->stateless_rpc ? -1 : fd;
 	po.git_cmd = 1;
 	if (start_command(&po))
 		die_errno("git pack-objects failed");
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/send-pack.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/send-pack.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/send-pack.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/send-pack.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sequencer.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sequencer.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sequencer.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sequencer.c	2015-02-06 05:40:08.000000000 +0800
@@ -264,12 +264,29 @@
 	strbuf_release(&sb);
 	strbuf_release(&err);
 	ref_transaction_free(transaction);
 	return 0;
 }
 
+void append_conflicts_hint(struct strbuf *msgbuf)
+{
+	int i;
+
+	strbuf_addch(msgbuf, '\n');
+	strbuf_commented_addf(msgbuf, "Conflicts:\n");
+	for (i = 0; i < active_nr;) {
+		const struct cache_entry *ce = active_cache[i++];
+		if (ce_stage(ce)) {
+			strbuf_commented_addf(msgbuf, "\t%s\n", ce->name);
+			while (i < active_nr && !strcmp(ce->name,
+							active_cache[i]->name))
+				i++;
+		}
+	}
+}
+
 static int do_recursive_merge(struct commit *base, struct commit *next,
 			      const char *base_label, const char *next_label,
 			      unsigned char *head, struct strbuf *msgbuf,
 			      struct replay_opts *opts)
 {
 	struct merge_options o;
@@ -304,27 +321,14 @@
 		die(_("%s: Unable to write new index file"), action_name(opts));
 	rollback_lock_file(&index_lock);
 
 	if (opts->signoff)
 		append_signoff(msgbuf, 0, 0);
 
-	if (!clean) {
-		int i;
-		strbuf_addstr(msgbuf, "\nConflicts:\n");
-		for (i = 0; i < active_nr;) {
-			const struct cache_entry *ce = active_cache[i++];
-			if (ce_stage(ce)) {
-				strbuf_addch(msgbuf, '\t');
-				strbuf_addstr(msgbuf, ce->name);
-				strbuf_addch(msgbuf, '\n');
-				while (i < active_nr && !strcmp(ce->name,
-						active_cache[i]->name))
-					i++;
-			}
-		}
-	}
+	if (!clean)
+		append_conflicts_hint(msgbuf);
 
 	return !clean;
 }
 
 static int is_index_unchanged(void)
 {
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sequencer.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sequencer.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sequencer.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sequencer.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sequencer.h	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sequencer.h	2015-02-06 05:40:08.000000000 +0800
@@ -50,8 +50,9 @@
 
 int sequencer_pick_revisions(struct replay_opts *opts);
 
 extern const char sign_off_header[];
 
 void append_signoff(struct strbuf *msgbuf, int ignore_footer, unsigned flag);
+void append_conflicts_hint(struct strbuf *msgbuf);
 
 #endif
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sequencer.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sequencer.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/server-info.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/server-info.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/server-info.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/server-info.c	2015-02-06 05:40:08.000000000 +0800
@@ -14,13 +14,13 @@
 	char *tmp = mkpathdup("%s_XXXXXX", path);
 	int ret = -1;
 	int fd = -1;
 	FILE *fp = NULL;
 
 	safe_create_leading_directories(path);
-	fd = mkstemp(tmp);
+	fd = git_mkstemp_mode(tmp, 0666);
 	if (fd < 0)
 		goto out;
 	fp = fdopen(fd, "w");
 	if (!fp)
 		goto out;
 	ret = generate(fp);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/server-info.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/server-info.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/server-info.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/server-info.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/setup.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/setup.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/setup.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/setup.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sha1-array.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sha1-array.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sha1-array.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sha1-array.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sha1_file.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sha1_file.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sha1_file.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sha1_file.c	2015-02-06 05:40:08.000000000 +0800
@@ -374,18 +374,21 @@
 
 void read_info_alternates(const char * relative_base, int depth)
 {
 	char *map;
 	size_t mapsz;
 	struct stat st;
-	char *path;
+	const char alt_file_name[] = "info/alternates";
+	/* Given that relative_base is no longer than PATH_MAX,
+	   ensure that "path" has enough space to append "/", the
+	   file name, "info/alternates", and a trailing NUL.  */
+	char path[PATH_MAX + 1 + sizeof alt_file_name];
 	int fd;
 
-	path = xstrfmt("%s/info/alternates", relative_base);
+	sprintf(path, "%s/%s", relative_base, alt_file_name);
 	fd = git_open_noatime(path);
-	free(path);
 	if (fd < 0)
 		return;
 	if (fstat(fd, &st) || (st.st_size == 0)) {
 		close(fd);
 		return;
 	}
@@ -1192,13 +1195,13 @@
 {
 	int i, baselen = -1, first = 0, seen_bits = 0;
 
 	if (!report_garbage)
 		return;
 
-	sort_string_list(list);
+	string_list_sort(list);
 
 	for (i = 0; i < list->nr; i++) {
 		const char *path = list->items[i].string;
 		if (baselen != -1 &&
 		    strncmp(path, list->items[first].string, baselen)) {
 			report_helper(list, seen_bits, first, i);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sha1_file.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sha1_file.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sha1_file.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sha1_file.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sha1-lookup.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sha1-lookup.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sha1-lookup.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sha1-lookup.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sha1_name.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sha1_name.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sha1_name.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sha1_name.c	2015-02-06 05:40:08.000000000 +0800
@@ -990,13 +990,13 @@
 
 	if (get_sha1_committish(dots[3] ? (dots + 3) : "HEAD", sha1_tmp))
 		return -1;
 	two = lookup_commit_reference_gently(sha1_tmp, 0);
 	if (!two)
 		return -1;
-	mbs = get_merge_bases(one, two, 1);
+	mbs = get_merge_bases(one, two);
 	if (!mbs || mbs->next)
 		st = -1;
 	else {
 		st = 0;
 		hashcpy(sha1, mbs->item->object.sha1);
 	}
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sha1_name.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sha1_name.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sha1_name.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sha1_name.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/shallow.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/shallow.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/shallow.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/shallow.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/shell.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/shell.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/shell.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/shell.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sh-i18n--envsubst.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sh-i18n--envsubst.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sh-i18n--envsubst.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sh-i18n--envsubst.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/show-index.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/show-index.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/show-index.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/show-index.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sideband.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sideband.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sideband.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sideband.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sigchain.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sigchain.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/sigchain.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/sigchain.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/split-index.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/split-index.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/split-index.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/split-index.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/strbuf.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/strbuf.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/strbuf.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/strbuf.c	2015-02-06 05:40:08.000000000 +0800
@@ -226,13 +226,14 @@
 {
 	while (size) {
 		const char *prefix;
 		const char *next = memchr(buf, '\n', size);
 		next = next ? (next + 1) : (buf + size);
 
-		prefix = (prefix2 && buf[0] == '\n') ? prefix2 : prefix1;
+		prefix = ((prefix2 && (buf[0] == '\n' || buf[0] == '\t'))
+			  ? prefix2 : prefix1);
 		strbuf_addstr(out, prefix);
 		strbuf_add(out, buf, next - buf);
 		size -= next - buf;
 		buf = next;
 	}
 	strbuf_complete_line(out);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/strbuf.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/strbuf.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/strbuf.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/strbuf.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/streaming.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/streaming.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/streaming.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/streaming.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/string-list.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/string-list.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/string-list.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/string-list.c	2015-02-06 05:40:08.000000000 +0800
@@ -56,19 +56,13 @@
 
 	return index;
 }
 
 struct string_list_item *string_list_insert(struct string_list *list, const char *string)
 {
-	return string_list_insert_at_index(list, -1, string);
-}
-
-struct string_list_item *string_list_insert_at_index(struct string_list *list,
-						     int insert_at, const char *string)
-{
-	int index = add_entry(insert_at, list, string);
+	int index = add_entry(-1, list, string);
 
 	if (index < 0)
 		index = -1 - index;
 
 	return list->items + index;
 }
@@ -217,21 +211,21 @@
 			list->strdup_strings ? xstrdup(string) : (char *)string);
 }
 
 /* Yuck */
 static compare_strings_fn compare_for_qsort;
 
-/* Only call this from inside sort_string_list! */
+/* Only call this from inside string_list_sort! */
 static int cmp_items(const void *a, const void *b)
 {
 	const struct string_list_item *one = a;
 	const struct string_list_item *two = b;
 	return compare_for_qsort(one->string, two->string);
 }
 
-void sort_string_list(struct string_list *list)
+void string_list_sort(struct string_list *list)
 {
 	compare_for_qsort = list->cmp ? list->cmp : strcmp;
 	qsort(list->items, list->nr, sizeof(*list->items), cmp_items);
 }
 
 struct string_list_item *unsorted_string_list_lookup(struct string_list *list,
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/string-list.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/string-list.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/string-list.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/string-list.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/string-list.h	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/string-list.h	2015-02-06 05:40:08.000000000 +0800
@@ -52,15 +52,23 @@
 void string_list_remove_empty_items(struct string_list *list, int free_util);
 
 /* Use these functions only on sorted lists: */
 int string_list_has_string(const struct string_list *list, const char *string);
 int string_list_find_insert_index(const struct string_list *list, const char *string,
 				  int negative_existing_index);
+/*
+ * Inserts the given string into the sorted list.
+ * If the string already exists, the list is not altered.
+ * Returns the string_list_item, the string is part of.
+ */
 struct string_list_item *string_list_insert(struct string_list *list, const char *string);
-struct string_list_item *string_list_insert_at_index(struct string_list *list,
-						     int insert_at, const char *string);
+
+/*
+ * Checks if the given string is part of a sorted list. If it is part of the list,
+ * return the coresponding string_list_item, NULL otherwise.
+ */
 struct string_list_item *string_list_lookup(struct string_list *list, const char *string);
 
 /*
  * Remove all but the first of consecutive entries with the same
  * string value.  If free_util is true, call free() on the util
  * members of any items that have to be deleted.
@@ -82,13 +90,13 @@
  * list->strdup_strings is set, this function can be used to hand
  * ownership of a malloc()ed string to list without making an extra
  * copy.
  */
 struct string_list_item *string_list_append_nodup(struct string_list *list, char *string);
 
-void sort_string_list(struct string_list *list);
+void string_list_sort(struct string_list *list);
 int unsorted_string_list_has_string(struct string_list *list, const char *string);
 struct string_list_item *unsorted_string_list_lookup(struct string_list *list,
 						     const char *string);
 
 void unsorted_string_list_delete_item(struct string_list *list, int i, int free_util);
 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/string-list.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/string-list.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/submodule.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/submodule.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/submodule.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/submodule.c	2015-02-06 05:40:08.000000000 +0800
@@ -298,13 +298,13 @@
 	setup_revisions(0, NULL, rev, NULL);
 	rev->left_right = 1;
 	rev->first_parent_only = 1;
 	left->object.flags |= SYMMETRIC_LEFT;
 	add_pending_object(rev, &left->object, path);
 	add_pending_object(rev, &right->object, path);
-	merge_bases = get_merge_bases(left, right, 1);
+	merge_bases = get_merge_bases(left, right);
 	if (merge_bases) {
 		if (merge_bases->item == left)
 			*fast_forward = 1;
 		else if (merge_bases->item == right)
 			*fast_backward = 1;
 	}
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/submodule.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/submodule.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/submodule.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/submodule.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/symlinks.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/symlinks.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/symlinks.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/symlinks.o differ
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/lib-gpg: keyring.gpg
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/lib-gpg: ownertrust
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/lib-gpg: pubring.gpg
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/lib-gpg: random_seed
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/lib-gpg: secring.gpg
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/lib-gpg: trustdb.gpg
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/lib-gpg.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/lib-gpg.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/lib-gpg.sh	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/lib-gpg.sh	2015-02-06 05:40:08.000000000 +0800
@@ -9,26 +9,45 @@
 	# that version, creation of signed tags using the generated key fails.
 	case "$gpg_version" in
 	'gpg (GnuPG) 1.0.6'*)
 		say "Your version of gpg (1.0.6) is too buggy for testing"
 		;;
 	*)
-		# key generation info: gpg --homedir t/lib-gpg --gen-key
-		# Type DSA and Elgamal, size 2048 bits, no expiration date.
-		# Name and email: C O Mitter <committer@example.com>
+		# Available key info:
+		# * Type DSA and Elgamal, size 2048 bits, no expiration date,
+		#   name and email: C O Mitter <committer@example.com>
+		# * Type RSA, size 2048 bits, no expiration date,
+		#   name and email: Eris Discordia <discord@example.net>
 		# No password given, to enable non-interactive operation.
-		cp -R "$TEST_DIRECTORY"/lib-gpg ./gpghome
-		chmod 0700 gpghome
-		chmod 0600 gpghome/*
-		GNUPGHOME="$(pwd)/gpghome"
-		export GNUPGHOME
+		# To generate new key:
+		#	gpg --homedir /tmp/gpghome --gen-key
+		# To write armored exported key to keyring:
+		#	gpg --homedir /tmp/gpghome --export-secret-keys \
+		#		--armor 0xDEADBEEF >> lib-gpg/keyring.gpg
+		# To export ownertrust:
+		#	gpg --homedir /tmp/gpghome --export-ownertrust \
+		#		> lib-gpg/ownertrust
+		mkdir ./gpghome &&
+		chmod 0700 ./gpghome &&
+		GNUPGHOME="$(pwd)/gpghome" &&
+		export GNUPGHOME &&
+		gpg --homedir "${GNUPGHOME}" 2>/dev/null --import \
+			"$TEST_DIRECTORY"/lib-gpg/keyring.gpg &&
+		gpg --homedir "${GNUPGHOME}" 2>/dev/null --import-ownertrust \
+			"$TEST_DIRECTORY"/lib-gpg/ownertrust &&
 		test_set_prereq GPG
 		;;
 	esac
 fi
 
+if test_have_prereq GPG &&
+    echo | gpg --homedir "${GNUPGHOME}" -b --rfc1991 >/dev/null 2>&1
+then
+	test_set_prereq RFC1991
+fi
+
 sanitize_pgp() {
 	perl -ne '
 		/^-----END PGP/ and $in_pgp = 0;
 		print unless $in_pgp;
 		/^-----BEGIN PGP/ and $in_pgp = 1;
 	'
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/lib-httpd/apache.conf /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/lib-httpd/apache.conf
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/lib-httpd/apache.conf	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/lib-httpd/apache.conf	2015-02-06 05:40:08.000000000 +0800
@@ -66,12 +66,13 @@
 </IfModule>
 </IfVersion>
 
 PassEnv GIT_VALGRIND
 PassEnv GIT_VALGRIND_OPTIONS
 PassEnv GNUPGHOME
+PassEnv ASAN_OPTIONS
 
 Alias /dumb/ www/
 Alias /auth/dumb/ www/auth/dumb/
 
 <LocationMatch /smart/>
 	SetEnv GIT_EXEC_PATH ${GIT_EXEC_PATH}
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/README /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/README
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/README	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/README	2015-02-06 05:40:08.000000000 +0800
@@ -415,13 +415,14 @@
  - use '! git cmd' when you want to make sure the git command exits
    with failure in a controlled way by calling "die()".  Instead,
    use 'test_must_fail git cmd'.  This will signal a failure if git
    dies in an unexpected way (e.g. segfault).
 
    On the other hand, don't use test_must_fail for running regular
-   platform commands; just use '! cmd'.
+   platform commands; just use '! cmd'.  We are not in the business
+   of verifying that the world given to us sanely works.
 
  - use perl without spelling it as "$PERL_PATH". This is to help our
    friends on Windows where the platform Perl often adds CR before
    the end of line, and they bundle Git with a version of Perl that
    does not do so, whose path is specified with $PERL_PATH. Note that we
    provide a "perl" function which uses $PERL_PATH under the hood, so
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t0027-auto-crlf.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t0027-auto-crlf.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t0027-auto-crlf.sh	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t0027-auto-crlf.sh	2015-02-06 05:40:08.000000000 +0800
@@ -52,22 +52,47 @@
 		echo >&2 invalid attribute: $attr
 		exit 1
 		;;
 	esac
 }
 
+check_warning () {
+	case "$1" in
+	LF_CRLF) grep "LF will be replaced by CRLF" $2;;
+	CRLF_LF) grep "CRLF will be replaced by LF" $2;;
+	'')
+		>expect
+		grep "will be replaced by" $2 >actual
+		test_cmp expect actual
+		;;
+	*) false ;;
+	esac
+}
+
 create_file_in_repo () {
 	crlf=$1
 	attr=$2
+	lfname=$3
+	crlfname=$4
+	lfmixcrlf=$5
+	lfmixcr=$6
+	crlfnul=$7
 	create_gitattributes "$attr" &&
+	pfx=crlf_${crlf}_attr_${attr}
 	for f in LF CRLF LF_mix_CR CRLF_mix_LF CRLF_nul
 	do
-		pfx=crlf_${crlf}_attr_${attr}_$f.txt &&
-		cp $f $pfx && git -c core.autocrlf=$crlf add $pfx
+		fname=${pfx}_$f.txt &&
+		cp $f $fname &&
+		git -c core.autocrlf=$crlf add $fname 2>"${pfx}_$f.err"
 	done &&
-	git commit -m "core.autocrlf $crlf"
+	git commit -m "core.autocrlf $crlf" &&
+	check_warning "$lfname" ${pfx}_LF.err &&
+	check_warning "$crlfname" ${pfx}_CRLF.err &&
+	check_warning "$lfmixcrlf" ${pfx}_CRLF_mix_LF.err &&
+	check_warning "$lfmixcr" ${pfx}_LF_mix_CR.err &&
+	check_warning "$crlfnul" ${pfx}_CRLF_nul.err
 }
 
 check_files_in_repo () {
 	crlf=$1
 	attr=$2
 	lfname=$3
@@ -137,28 +162,53 @@
 	printf "line1\r\nline2\rline3"   >CRLF_mix_CR &&
 	printf "line1Q\r\nline2\r\nline3" | q_to_nul >CRLF_nul &&
 	printf "line1Q\nline2\nline3" | q_to_nul >LF_nul
 '
 
 
-test_expect_success 'create files' '
-	create_file_in_repo false "" &&
-	create_file_in_repo true  "" &&
-	create_file_in_repo input "" &&
-
-	create_file_in_repo false "auto" &&
-	create_file_in_repo true  "auto" &&
-	create_file_in_repo input "auto" &&
-
-	create_file_in_repo false "text" &&
-	create_file_in_repo true  "text" &&
-	create_file_in_repo input "text" &&
-
-	create_file_in_repo false "-text" &&
-	create_file_in_repo true  "-text" &&
-	create_file_in_repo input "-text" &&
+
+warn_LF_CRLF="LF will be replaced by CRLF"
+warn_CRLF_LF="CRLF will be replaced by LF"
+
+test_expect_success 'add files empty attr' '
+	create_file_in_repo false ""     ""        ""        ""        ""        "" &&
+	create_file_in_repo true  ""     "LF_CRLF" ""        "LF_CRLF" ""        "" &&
+	create_file_in_repo input ""     ""        "CRLF_LF" "CRLF_LF" ""        ""
+'
+
+test_expect_success 'add files attr=auto' '
+	create_file_in_repo false "auto" ""        "CRLF_LF" "CRLF_LF" ""        "" &&
+	create_file_in_repo true  "auto" "LF_CRLF" ""        "LF_CRLF" ""        "" &&
+	create_file_in_repo input "auto" ""        "CRLF_LF" "CRLF_LF" ""        ""
+'
+
+test_expect_success 'add files attr=text' '
+	create_file_in_repo false "text" ""        "CRLF_LF" "CRLF_LF" ""        "CRLF_LF" &&
+	create_file_in_repo true  "text" "LF_CRLF" ""        "LF_CRLF" "LF_CRLF" ""        &&
+	create_file_in_repo input "text" ""        "CRLF_LF" "CRLF_LF" ""        "CRLF_LF"
+'
+
+test_expect_success 'add files attr=-text' '
+	create_file_in_repo false "-text" ""       ""        ""        ""        "" &&
+	create_file_in_repo true  "-text" ""       ""        ""        ""        "" &&
+	create_file_in_repo input "-text" ""       ""        ""        ""        ""
+'
+
+test_expect_success 'add files attr=lf' '
+	create_file_in_repo false "lf"    ""       "CRLF_LF" "CRLF_LF"  ""       "CRLF_LF" &&
+	create_file_in_repo true  "lf"    ""       "CRLF_LF" "CRLF_LF"  ""       "CRLF_LF" &&
+	create_file_in_repo input "lf"    ""       "CRLF_LF" "CRLF_LF"  ""       "CRLF_LF"
+'
+
+test_expect_success 'add files attr=crlf' '
+	create_file_in_repo false "crlf" "LF_CRLF" ""        "LF_CRLF" "LF_CRLF" "" &&
+	create_file_in_repo true  "crlf" "LF_CRLF" ""        "LF_CRLF" "LF_CRLF" "" &&
+	create_file_in_repo input "crlf" "LF_CRLF" ""        "LF_CRLF" "LF_CRLF" ""
+'
+
+test_expect_success 'create files cleanup' '
 	rm -f *.txt &&
 	git reset --hard
 '
 
 test_expect_success 'commit empty gitattribues' '
 	check_files_in_repo false ""      LF CRLF CRLF_mix_LF LF_mix_CR CRLF_nul &&
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t0030-stripspace.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t0030-stripspace.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t0030-stripspace.sh	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t0030-stripspace.sh	2015-02-06 05:40:08.000000000 +0800
@@ -429,7 +429,13 @@
 test_expect_success '-c with changed comment char' '
 	printf "; foo\n" >expect &&
 	printf "foo" | git -c core.commentchar=";" stripspace -c >actual &&
 	test_cmp expect actual
 '
 
+test_expect_success 'avoid SP-HT sequence in commented line' '
+	printf "#\tone\n#\n# two\n" >expect &&
+	printf "\tone\n\ntwo\n" | git stripspace -c >actual &&
+	test_cmp expect actual
+'
+
 test_done
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t0050-filesystem.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t0050-filesystem.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t0050-filesystem.sh	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t0050-filesystem.sh	2015-02-06 05:40:08.000000000 +0800
@@ -61,13 +61,13 @@
 	git mv camelcase tmp &&
 	git mv tmp CamelCase &&
 	git commit -m "rename" &&
 	git checkout -f master
 '
 
-$test_case 'rename (case change)' '
+test_expect_success 'rename (case change)' '
 	git mv camelcase CamelCase &&
 	git commit -m "rename"
 '
 
 test_expect_success 'merge (case change)' '
 	rm -f CamelCase &&
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t0090-cache-tree.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t0090-cache-tree.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t0090-cache-tree.sh	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t0090-cache-tree.sh	2015-02-06 05:40:08.000000000 +0800
@@ -19,13 +19,13 @@
 generate_expected_cache_tree_rec () {
 	dir="$1${1:+/}" &&
 	parent="$2" &&
 	# ls-files might have foo/bar, foo/bar/baz, and foo/bar/quux
 	# We want to count only foo because it's the only direct child
 	subtrees=$(git ls-files|grep /|cut -d / -f 1|uniq) &&
-	subtree_count=$(echo "$subtrees"|awk -v c=0 '$1 {++c} END {print c}') &&
+	subtree_count=$(echo "$subtrees"|awk -v c=0 '$1 != "" {++c} END {print c}') &&
 	entries=$(git ls-files|wc -l) &&
 	printf "SHA $dir (%d entries, %d subtrees)\n" "$entries" "$subtree_count" &&
 	for subtree in $subtrees
 	do
 		cd "$subtree"
 		generate_expected_cache_tree_rec "$dir$subtree" "$dir" || return 1
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t0300-credentials.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t0300-credentials.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t0300-credentials.sh	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t0300-credentials.sh	2015-02-06 05:40:08.000000000 +0800
@@ -286,7 +286,16 @@
 	verbatim: protocol=https
 	verbatim: host=example.com
 	verbatim: path=foo.git
 	EOF
 '
 
+test_expect_success 'helpers can abort the process' '
+	test_must_fail git \
+		-c credential.helper="!f() { echo quit=1; }; f" \
+		-c credential.helper="verbatim foo bar" \
+		credential fill >stdout &&
+	>expect &&
+	test_cmp expect stdout
+'
+
 test_done
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t1050-large.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t1050-large.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t1050-large.sh	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t1050-large.sh	2015-02-06 05:40:08.000000000 +0800
@@ -6,16 +6,16 @@
 . ./test-lib.sh
 
 test_expect_success setup '
 	# clone does not allow us to pass core.bigfilethreshold to
 	# new repos, so set core.bigfilethreshold globally
 	git config --global core.bigfilethreshold 200k &&
-	echo X | dd of=large1 bs=1k seek=2000 &&
-	echo X | dd of=large2 bs=1k seek=2000 &&
-	echo X | dd of=large3 bs=1k seek=2000 &&
-	echo Y | dd of=huge bs=1k seek=2500 &&
+	printf "%2000000s" X >large1 &&
+	cp large1 large2 &&
+	cp large1 large3 &&
+	printf "%2500000s" Y >huge &&
 	GIT_ALLOC_LIMIT=1500k &&
 	export GIT_ALLOC_LIMIT
 '
 
 test_expect_success 'add a large file or two' '
 	git add large1 huge large2 &&
@@ -58,13 +58,13 @@
 '
 
 test_expect_success 'checkout a large file' '
 	large1=$(git rev-parse :large1) &&
 	git update-index --add --cacheinfo 100644 $large1 another &&
 	git checkout another &&
-	cmp large1 another ;# this must not be test_cmp
+	test_cmp large1 another
 '
 
 test_expect_success 'packsize limit' '
 	test_create_repo mid &&
 	(
 		cd mid &&
@@ -159,13 +159,13 @@
 	echo $SHA1 | git pack-objects --stdout |
 		GIT_ALLOC_LIMIT=0 GIT_DIR=loose/.git git unpack-objects &&
 	echo $SHA1 | GIT_DIR=loose/.git git pack-objects pack &&
 	test_create_repo packed &&
 	mv pack-* packed/.git/objects/pack &&
 	GIT_DIR=packed/.git git cat-file blob $SHA1 >actual &&
-	cmp huge actual
+	test_cmp huge actual
 '
 
 test_expect_success 'tar achiving' '
 	git archive --format=tar HEAD >/dev/null
 '
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t1301-shared-repo.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t1301-shared-repo.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t1301-shared-repo.sh	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t1301-shared-repo.sh	2015-02-06 05:40:08.000000000 +0800
@@ -108,13 +108,24 @@
 		}
 
 	'
 
 done
 
+test_expect_success POSIXPERM 'info/refs respects umask in unshared repo' '
+	rm -f .git/info/refs &&
+	test_unconfig core.sharedrepository &&
+	umask 002 &&
+	git update-server-info &&
+	echo "-rw-rw-r--" >expect &&
+	modebits .git/info/refs >actual &&
+	test_cmp expect actual
+'
+
 test_expect_success POSIXPERM 'git reflog expire honors core.sharedRepository' '
+	umask 077 &&
 	git config core.sharedRepository group &&
 	git reflog expire --all &&
 	actual="$(ls -l .git/logs/refs/heads/master)" &&
 	case "$actual" in
 	-rw-rw-*)
 		: happy
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t1400-update-ref.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t1400-update-ref.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t1400-update-ref.sh	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t1400-update-ref.sh	2015-02-06 05:40:08.000000000 +0800
@@ -616,12 +616,58 @@
 	test_cmp expect actual &&
 	git rev-parse $b >actual &&
 	test_cmp expect actual &&
 	test_must_fail git rev-parse --verify -q $c
 '
 
+test_expect_success 'stdin verify succeeds for correct value' '
+	git rev-parse $m >expect &&
+	echo "verify $m $m" >stdin &&
+	git update-ref --stdin <stdin &&
+	git rev-parse $m >actual &&
+	test_cmp expect actual
+'
+
+test_expect_success 'stdin verify succeeds for missing reference' '
+	echo "verify refs/heads/missing $Z" >stdin &&
+	git update-ref --stdin <stdin &&
+	test_must_fail git rev-parse --verify -q refs/heads/missing
+'
+
+test_expect_success 'stdin verify treats no value as missing' '
+	echo "verify refs/heads/missing" >stdin &&
+	git update-ref --stdin <stdin &&
+	test_must_fail git rev-parse --verify -q refs/heads/missing
+'
+
+test_expect_success 'stdin verify fails for wrong value' '
+	git rev-parse $m >expect &&
+	echo "verify $m $m~1" >stdin &&
+	test_must_fail git update-ref --stdin <stdin &&
+	git rev-parse $m >actual &&
+	test_cmp expect actual
+'
+
+test_expect_success 'stdin verify fails for mistaken null value' '
+	git rev-parse $m >expect &&
+	echo "verify $m $Z" >stdin &&
+	test_must_fail git update-ref --stdin <stdin &&
+	git rev-parse $m >actual &&
+	test_cmp expect actual
+'
+
+test_expect_success 'stdin verify fails for mistaken empty value' '
+	M=$(git rev-parse $m) &&
+	test_when_finished "git update-ref $m $M" &&
+	git rev-parse $m >expect &&
+	echo "verify $m" >stdin &&
+	test_must_fail git update-ref --stdin <stdin &&
+	git rev-parse $m >actual &&
+	test_cmp expect actual
+'
+
 test_expect_success 'stdin update refs works with identity updates' '
 	cat >stdin <<-EOF &&
 	update $a $m $m
 	update $b $m $m
 	update $c $Z $E
 	EOF
@@ -935,12 +981,58 @@
 	test_cmp expect actual &&
 	git rev-parse $b >actual &&
 	test_cmp expect actual &&
 	test_must_fail git rev-parse --verify -q $c
 '
 
+test_expect_success 'stdin -z verify succeeds for correct value' '
+	git rev-parse $m >expect &&
+	printf $F "verify $m" "$m" >stdin &&
+	git update-ref -z --stdin <stdin &&
+	git rev-parse $m >actual &&
+	test_cmp expect actual
+'
+
+test_expect_success 'stdin -z verify succeeds for missing reference' '
+	printf $F "verify refs/heads/missing" "$Z" >stdin &&
+	git update-ref -z --stdin <stdin &&
+	test_must_fail git rev-parse --verify -q refs/heads/missing
+'
+
+test_expect_success 'stdin -z verify treats no value as missing' '
+	printf $F "verify refs/heads/missing" "" >stdin &&
+	git update-ref -z --stdin <stdin &&
+	test_must_fail git rev-parse --verify -q refs/heads/missing
+'
+
+test_expect_success 'stdin -z verify fails for wrong value' '
+	git rev-parse $m >expect &&
+	printf $F "verify $m" "$m~1" >stdin &&
+	test_must_fail git update-ref -z --stdin <stdin &&
+	git rev-parse $m >actual &&
+	test_cmp expect actual
+'
+
+test_expect_success 'stdin -z verify fails for mistaken null value' '
+	git rev-parse $m >expect &&
+	printf $F "verify $m" "$Z" >stdin &&
+	test_must_fail git update-ref -z --stdin <stdin &&
+	git rev-parse $m >actual &&
+	test_cmp expect actual
+'
+
+test_expect_success 'stdin -z verify fails for mistaken empty value' '
+	M=$(git rev-parse $m) &&
+	test_when_finished "git update-ref $m $M" &&
+	git rev-parse $m >expect &&
+	printf $F "verify $m" "" >stdin &&
+	test_must_fail git update-ref -z --stdin <stdin &&
+	git rev-parse $m >actual &&
+	test_cmp expect actual
+'
+
 test_expect_success 'stdin -z update refs works with identity updates' '
 	printf $F "update $a" "$m" "$m" "update $b" "$m" "$m" "update $c" "$Z" "" >stdin &&
 	git update-ref -z --stdin <stdin &&
 	git rev-parse $m >expect &&
 	git rev-parse $a >actual &&
 	test_cmp expect actual &&
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t1450-fsck.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t1450-fsck.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t1450-fsck.sh	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t1450-fsck.sh	2015-02-06 05:40:08.000000000 +0800
@@ -226,14 +226,18 @@
 
 	tag=$(git hash-object -t tag -w --stdin <wrong-tag) &&
 	test_when_finished "remove_object $tag" &&
 	echo $tag >.git/refs/tags/wrong &&
 	test_when_finished "git update-ref -d refs/tags/wrong" &&
 	git fsck --tags 2>out &&
-	grep "invalid .tag. name" out &&
-	grep "expected .tagger. line" out
+
+	cat >expect <<-EOF &&
+	warning in tag $tag: invalid '\''tag'\'' name: wrong name format
+	warning in tag $tag: invalid format - expected '\''tagger'\'' line
+	EOF
+	test_cmp expect out
 '
 
 test_expect_success 'tag with bad tagger' '
 	sha=$(git rev-parse HEAD) &&
 	cat >wrong-tag <<-EOF &&
 	object $sha
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t2004-checkout-cache-temp.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t2004-checkout-cache-temp.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t2004-checkout-cache-temp.sh	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t2004-checkout-cache-temp.sh	2015-02-06 05:40:08.000000000 +0800
@@ -7,205 +7,215 @@
 
 With --temp flag, git checkout-index writes to temporary merge files
 rather than the tracked path.'
 
 . ./test-lib.sh
 
-test_expect_success \
-'preparation' '
-mkdir asubdir &&
-echo tree1path0 >path0 &&
-echo tree1path1 >path1 &&
-echo tree1path3 >path3 &&
-echo tree1path4 >path4 &&
-echo tree1asubdir/path5 >asubdir/path5 &&
-git update-index --add path0 path1 path3 path4 asubdir/path5 &&
-t1=$(git write-tree) &&
-rm -f path* .merge_* out .git/index &&
-echo tree2path0 >path0 &&
-echo tree2path1 >path1 &&
-echo tree2path2 >path2 &&
-echo tree2path4 >path4 &&
-git update-index --add path0 path1 path2 path4 &&
-t2=$(git write-tree) &&
-rm -f path* .merge_* out .git/index &&
-echo tree2path0 >path0 &&
-echo tree3path1 >path1 &&
-echo tree3path2 >path2 &&
-echo tree3path3 >path3 &&
-git update-index --add path0 path1 path2 path3 &&
-t3=$(git write-tree)'
-
-test_expect_success \
-'checkout one stage 0 to temporary file' '
-rm -f path* .merge_* out .git/index &&
-git read-tree $t1 &&
-git checkout-index --temp -- path1 >out &&
-test_line_count = 1 out &&
-test $(cut "-d	" -f2 out) = path1 &&
-p=$(cut "-d	" -f1 out) &&
-test -f $p &&
-test $(cat $p) = tree1path1'
-
-test_expect_success \
-'checkout all stage 0 to temporary files' '
-rm -f path* .merge_* out .git/index &&
-git read-tree $t1 &&
-git checkout-index -a --temp >out &&
-test_line_count = 5 out &&
-for f in path0 path1 path3 path4 asubdir/path5
-do
-	test $(grep $f out | cut "-d	" -f2) = $f &&
-	p=$(grep $f out | cut "-d	" -f1) &&
+test_expect_success 'setup' '
+	mkdir asubdir &&
+	echo tree1path0 >path0 &&
+	echo tree1path1 >path1 &&
+	echo tree1path3 >path3 &&
+	echo tree1path4 >path4 &&
+	echo tree1asubdir/path5 >asubdir/path5 &&
+	git update-index --add path0 path1 path3 path4 asubdir/path5 &&
+	t1=$(git write-tree) &&
+	rm -f path* .merge_* actual .git/index &&
+	echo tree2path0 >path0 &&
+	echo tree2path1 >path1 &&
+	echo tree2path2 >path2 &&
+	echo tree2path4 >path4 &&
+	git update-index --add path0 path1 path2 path4 &&
+	t2=$(git write-tree) &&
+	rm -f path* .merge_* actual .git/index &&
+	echo tree2path0 >path0 &&
+	echo tree3path1 >path1 &&
+	echo tree3path2 >path2 &&
+	echo tree3path3 >path3 &&
+	git update-index --add path0 path1 path2 path3 &&
+	t3=$(git write-tree)
+'
+
+test_expect_success 'checkout one stage 0 to temporary file' '
+	rm -f path* .merge_* actual .git/index &&
+	git read-tree $t1 &&
+	git checkout-index --temp -- path1 >actual &&
+	test_line_count = 1 actual &&
+	test $(cut "-d	" -f2 actual) = path1 &&
+	p=$(cut "-d	" -f1 actual) &&
 	test -f $p &&
-	test $(cat $p) = tree1$f
-done'
+	test $(cat $p) = tree1path1
+'
 
-test_expect_success \
-'prepare 3-way merge' '
-rm -f path* .merge_* out .git/index &&
-git read-tree -m $t1 $t2 $t3'
-
-test_expect_success \
-'checkout one stage 2 to temporary file' '
-rm -f path* .merge_* out &&
-git checkout-index --stage=2 --temp -- path1 >out &&
-test_line_count = 1 out &&
-test $(cut "-d	" -f2 out) = path1 &&
-p=$(cut "-d	" -f1 out) &&
-test -f $p &&
-test $(cat $p) = tree2path1'
-
-test_expect_success \
-'checkout all stage 2 to temporary files' '
-rm -f path* .merge_* out &&
-git checkout-index --all --stage=2 --temp >out &&
-test_line_count = 3 out &&
-for f in path1 path2 path4
-do
-	test $(grep $f out | cut "-d	" -f2) = $f &&
-	p=$(grep $f out | cut "-d	" -f1) &&
+test_expect_success 'checkout all stage 0 to temporary files' '
+	rm -f path* .merge_* actual .git/index &&
+	git read-tree $t1 &&
+	git checkout-index -a --temp >actual &&
+	test_line_count = 5 actual &&
+	for f in path0 path1 path3 path4 asubdir/path5
+	do
+		test $(grep $f actual | cut "-d	" -f2) = $f &&
+		p=$(grep $f actual | cut "-d	" -f1) &&
+		test -f $p &&
+		test $(cat $p) = tree1$f
+	done
+'
+
+test_expect_success 'setup 3-way merge' '
+	rm -f path* .merge_* actual .git/index &&
+	git read-tree -m $t1 $t2 $t3
+'
+
+test_expect_success 'checkout one stage 2 to temporary file' '
+	rm -f path* .merge_* actual &&
+	git checkout-index --stage=2 --temp -- path1 >actual &&
+	test_line_count = 1 actual &&
+	test $(cut "-d	" -f2 actual) = path1 &&
+	p=$(cut "-d	" -f1 actual) &&
 	test -f $p &&
-	test $(cat $p) = tree2$f
-done'
+	test $(cat $p) = tree2path1
+'
 
-test_expect_success \
-'checkout all stages/one file to nothing' '
-rm -f path* .merge_* out &&
-git checkout-index --stage=all --temp -- path0 >out &&
-test_line_count = 0 out'
-
-test_expect_success \
-'checkout all stages/one file to temporary files' '
-rm -f path* .merge_* out &&
-git checkout-index --stage=all --temp -- path1 >out &&
-test_line_count = 1 out &&
-test $(cut "-d	" -f2 out) = path1 &&
-cut "-d	" -f1 out | (read s1 s2 s3 &&
-test -f $s1 &&
-test -f $s2 &&
-test -f $s3 &&
-test $(cat $s1) = tree1path1 &&
-test $(cat $s2) = tree2path1 &&
-test $(cat $s3) = tree3path1)'
-
-test_expect_success \
-'checkout some stages/one file to temporary files' '
-rm -f path* .merge_* out &&
-git checkout-index --stage=all --temp -- path2 >out &&
-test_line_count = 1 out &&
-test $(cut "-d	" -f2 out) = path2 &&
-cut "-d	" -f1 out | (read s1 s2 s3 &&
-test $s1 = . &&
-test -f $s2 &&
-test -f $s3 &&
-test $(cat $s2) = tree2path2 &&
-test $(cat $s3) = tree3path2)'
-
-test_expect_success \
-'checkout all stages/all files to temporary files' '
-rm -f path* .merge_* out &&
-git checkout-index -a --stage=all --temp >out &&
-test_line_count = 5 out'
-
-test_expect_success \
-'-- path0: no entry' '
-test x$(grep path0 out | cut "-d	" -f2) = x'
-
-test_expect_success \
-'-- path1: all 3 stages' '
-test $(grep path1 out | cut "-d	" -f2) = path1 &&
-grep path1 out | cut "-d	" -f1 | (read s1 s2 s3 &&
-test -f $s1 &&
-test -f $s2 &&
-test -f $s3 &&
-test $(cat $s1) = tree1path1 &&
-test $(cat $s2) = tree2path1 &&
-test $(cat $s3) = tree3path1)'
-
-test_expect_success \
-'-- path2: no stage 1, have stage 2 and 3' '
-test $(grep path2 out | cut "-d	" -f2) = path2 &&
-grep path2 out | cut "-d	" -f1 | (read s1 s2 s3 &&
-test $s1 = . &&
-test -f $s2 &&
-test -f $s3 &&
-test $(cat $s2) = tree2path2 &&
-test $(cat $s3) = tree3path2)'
-
-test_expect_success \
-'-- path3: no stage 2, have stage 1 and 3' '
-test $(grep path3 out | cut "-d	" -f2) = path3 &&
-grep path3 out | cut "-d	" -f1 | (read s1 s2 s3 &&
-test -f $s1 &&
-test $s2 = . &&
-test -f $s3 &&
-test $(cat $s1) = tree1path3 &&
-test $(cat $s3) = tree3path3)'
-
-test_expect_success \
-'-- path4: no stage 3, have stage 1 and 3' '
-test $(grep path4 out | cut "-d	" -f2) = path4 &&
-grep path4 out | cut "-d	" -f1 | (read s1 s2 s3 &&
-test -f $s1 &&
-test -f $s2 &&
-test $s3 = . &&
-test $(cat $s1) = tree1path4 &&
-test $(cat $s2) = tree2path4)'
-
-test_expect_success \
-'-- asubdir/path5: no stage 2 and 3 have stage 1' '
-test $(grep asubdir/path5 out | cut "-d	" -f2) = asubdir/path5 &&
-grep asubdir/path5 out | cut "-d	" -f1 | (read s1 s2 s3 &&
-test -f $s1 &&
-test $s2 = . &&
-test $s3 = . &&
-test $(cat $s1) = tree1asubdir/path5)'
-
-test_expect_success \
-'checkout --temp within subdir' '
-(cd asubdir &&
- git checkout-index -a --stage=all >out &&
- test_line_count = 1 out &&
- test $(grep path5 out | cut "-d	" -f2) = path5 &&
- grep path5 out | cut "-d	" -f1 | (read s1 s2 s3 &&
- test -f ../$s1 &&
- test $s2 = . &&
- test $s3 = . &&
- test $(cat ../$s1) = tree1asubdir/path5)
-)'
-
-test_expect_success \
-'checkout --temp symlink' '
-rm -f path* .merge_* out .git/index &&
-test_ln_s_add b a &&
-t4=$(git write-tree) &&
-rm -f .git/index &&
-git read-tree $t4 &&
-git checkout-index --temp -a >out &&
-test_line_count = 1 out &&
-test $(cut "-d	" -f2 out) = a &&
-p=$(cut "-d	" -f1 out) &&
-test -f $p &&
-test $(cat $p) = b'
+test_expect_success 'checkout all stage 2 to temporary files' '
+	rm -f path* .merge_* actual &&
+	git checkout-index --all --stage=2 --temp >actual &&
+	test_line_count = 3 actual &&
+	for f in path1 path2 path4
+	do
+		test $(grep $f actual | cut "-d	" -f2) = $f &&
+		p=$(grep $f actual | cut "-d	" -f1) &&
+		test -f $p &&
+		test $(cat $p) = tree2$f
+	done
+'
+
+test_expect_success 'checkout all stages/one file to nothing' '
+	rm -f path* .merge_* actual &&
+	git checkout-index --stage=all --temp -- path0 >actual &&
+	test_line_count = 0 actual
+'
+
+test_expect_success 'checkout all stages/one file to temporary files' '
+	rm -f path* .merge_* actual &&
+	git checkout-index --stage=all --temp -- path1 >actual &&
+	test_line_count = 1 actual &&
+	test $(cut "-d	" -f2 actual) = path1 &&
+	cut "-d	" -f1 actual | (read s1 s2 s3 &&
+	test -f $s1 &&
+	test -f $s2 &&
+	test -f $s3 &&
+	test $(cat $s1) = tree1path1 &&
+	test $(cat $s2) = tree2path1 &&
+	test $(cat $s3) = tree3path1)
+'
+
+test_expect_success 'checkout some stages/one file to temporary files' '
+	rm -f path* .merge_* actual &&
+	git checkout-index --stage=all --temp -- path2 >actual &&
+	test_line_count = 1 actual &&
+	test $(cut "-d	" -f2 actual) = path2 &&
+	cut "-d	" -f1 actual | (read s1 s2 s3 &&
+	test $s1 = . &&
+	test -f $s2 &&
+	test -f $s3 &&
+	test $(cat $s2) = tree2path2 &&
+	test $(cat $s3) = tree3path2)
+'
+
+test_expect_success 'checkout all stages/all files to temporary files' '
+	rm -f path* .merge_* actual &&
+	git checkout-index -a --stage=all --temp >actual &&
+	test_line_count = 5 actual
+'
+
+test_expect_success '-- path0: no entry' '
+	test x$(grep path0 actual | cut "-d	" -f2) = x
+'
+
+test_expect_success '-- path1: all 3 stages' '
+	test $(grep path1 actual | cut "-d	" -f2) = path1 &&
+	grep path1 actual | cut "-d	" -f1 | (read s1 s2 s3 &&
+	test -f $s1 &&
+	test -f $s2 &&
+	test -f $s3 &&
+	test $(cat $s1) = tree1path1 &&
+	test $(cat $s2) = tree2path1 &&
+	test $(cat $s3) = tree3path1)
+'
+
+test_expect_success '-- path2: no stage 1, have stage 2 and 3' '
+	test $(grep path2 actual | cut "-d	" -f2) = path2 &&
+	grep path2 actual | cut "-d	" -f1 | (read s1 s2 s3 &&
+	test $s1 = . &&
+	test -f $s2 &&
+	test -f $s3 &&
+	test $(cat $s2) = tree2path2 &&
+	test $(cat $s3) = tree3path2)
+'
+
+test_expect_success '-- path3: no stage 2, have stage 1 and 3' '
+	test $(grep path3 actual | cut "-d	" -f2) = path3 &&
+	grep path3 actual | cut "-d	" -f1 | (read s1 s2 s3 &&
+	test -f $s1 &&
+	test $s2 = . &&
+	test -f $s3 &&
+	test $(cat $s1) = tree1path3 &&
+	test $(cat $s3) = tree3path3)
+'
+
+test_expect_success '-- path4: no stage 3, have stage 1 and 3' '
+	test $(grep path4 actual | cut "-d	" -f2) = path4 &&
+	grep path4 actual | cut "-d	" -f1 | (read s1 s2 s3 &&
+	test -f $s1 &&
+	test -f $s2 &&
+	test $s3 = . &&
+	test $(cat $s1) = tree1path4 &&
+	test $(cat $s2) = tree2path4)
+'
+
+test_expect_success '-- asubdir/path5: no stage 2 and 3 have stage 1' '
+	test $(grep asubdir/path5 actual | cut "-d	" -f2) = asubdir/path5 &&
+	grep asubdir/path5 actual | cut "-d	" -f1 | (read s1 s2 s3 &&
+	test -f $s1 &&
+	test $s2 = . &&
+	test $s3 = . &&
+	test $(cat $s1) = tree1asubdir/path5)
+'
+
+test_expect_success 'checkout --temp within subdir' '
+	(
+		cd asubdir &&
+		git checkout-index -a --stage=all >actual &&
+		test_line_count = 1 actual &&
+		test $(grep path5 actual | cut "-d	" -f2) = path5 &&
+		grep path5 actual | cut "-d	" -f1 | (read s1 s2 s3 &&
+		test -f ../$s1 &&
+		test $s2 = . &&
+		test $s3 = . &&
+		test $(cat ../$s1) = tree1asubdir/path5)
+	)
+'
+
+test_expect_success 'checkout --temp symlink' '
+	rm -f path* .merge_* actual .git/index &&
+	test_ln_s_add path7 path6 &&
+	git checkout-index --temp -a >actual &&
+	test_line_count = 1 actual &&
+	test $(cut "-d	" -f2 actual) = path6 &&
+	p=$(cut "-d	" -f1 actual) &&
+	test -f $p &&
+	test $(cat $p) = path7
+'
+
+test_expect_success 'emit well-formed relative path' '
+	rm -f path* .merge_* actual .git/index &&
+	>path0123456789 &&
+	git update-index --add path0123456789 &&
+	(
+		cd asubdir &&
+		git checkout-index --temp -- ../path0123456789 >actual &&
+		test_line_count = 1 actual &&
+		test $(cut "-d	" -f2 actual) = ../path0123456789
+	)
+'
 
 test_done
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t2024-checkout-dwim.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t2024-checkout-dwim.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t2024-checkout-dwim.sh	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t2024-checkout-dwim.sh	2015-02-06 05:40:08.000000000 +0800
@@ -182,7 +182,25 @@
 	git checkout spam -- &&
 	test_branch spam &&
 	test_cmp_rev refs/remotes/extra_dir/repo_c/extra_dir/spam HEAD &&
 	test_branch_upstream spam repo_c spam
 '
 
+test_expect_success 'loosely defined local base branch is reported correctly' '
+
+	git checkout master &&
+	git branch strict &&
+	git branch loose &&
+	git commit --allow-empty -m "a bit more" &&
+
+	test_config branch.strict.remote . &&
+	test_config branch.loose.remote . &&
+	test_config branch.strict.merge refs/heads/master &&
+	test_config branch.loose.merge master &&
+
+	git checkout strict | sed -e "s/strict/BRANCHNAME/g" >expect &&
+	git checkout loose | sed -e "s/loose/BRANCHNAME/g" >actual &&
+
+	test_cmp expect actual
+'
+
 test_done
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t2107-update-index-basic.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t2107-update-index-basic.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t2107-update-index-basic.sh	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t2107-update-index-basic.sh	2015-02-06 05:40:08.000000000 +0800
@@ -62,7 +62,22 @@
 
 	git update-index --add --cacheinfo "100644,$(cat expect),elif" &&
 	git rev-parse :elif >actual &&
 	test_cmp expect actual
 '
 
+test_expect_success '.lock files cleaned up' '
+	mkdir cleanup &&
+	(
+	cd cleanup &&
+	mkdir worktree &&
+	git init repo &&
+	cd repo &&
+	git config core.worktree ../../worktree &&
+	# --refresh triggers late setup_work_tree,
+	# active_cache_changed is zero, rollback_lock_file fails
+	git update-index --refresh &&
+	! test -f .git/index.lock
+	)
+'
+
 test_done
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t3102-ls-tree-wildcards.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t3102-ls-tree-wildcards.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t3102-ls-tree-wildcards.sh	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t3102-ls-tree-wildcards.sh	2015-02-06 05:40:08.000000000 +0800
@@ -9,14 +9,28 @@
 	touch a/one aa/two "a[a]/three" &&
 	git add a/one aa/two "a[a]/three" &&
 	git commit -m test
 '
 
 test_expect_success 'ls-tree a[a] matches literally' '
-	cat >expected <<EOF &&
-100644 blob e69de29bb2d1d6434b8b29ae775ad8c2e48c5391	a[a]/three
-EOF
+	cat >expect <<-\EOF &&
+	100644 blob e69de29bb2d1d6434b8b29ae775ad8c2e48c5391	a[a]/three
+	EOF
 	git ls-tree -r HEAD "a[a]" >actual &&
-	test_cmp expected actual
+	test_cmp expect actual
+'
+
+test_expect_success 'ls-tree outside prefix' '
+	cat >expect <<-\EOF &&
+	100644 blob e69de29bb2d1d6434b8b29ae775ad8c2e48c5391	../a[a]/three
+	EOF
+	( cd aa && git ls-tree -r HEAD "../a[a]"; ) >actual &&
+	test_cmp expect actual
+'
+
+test_expect_failure 'ls-tree does not yet support negated pathspec' '
+	git ls-files ":(exclude)a" "a*" >expect &&
+	git ls-tree --name-only -r HEAD ":(exclude)a" "a*" >actual &&
+	test_cmp expect actual
 '
 
 test_done
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t3200-branch.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t3200-branch.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t3200-branch.sh	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t3200-branch.sh	2015-02-06 05:40:08.000000000 +0800
@@ -94,12 +94,26 @@
 test_expect_success 'git branch -m o/o o should fail when o/p exists' '
 	git branch o/o &&
 	git branch o/p &&
 	test_must_fail git branch -m o/o o
 '
 
+test_expect_success 'git branch -m o/q o/p should fail when o/p exists' '
+	git branch o/q &&
+	test_must_fail git branch -m o/q o/p
+'
+
+test_expect_success 'git branch -M o/q o/p should work when o/p exists' '
+	git branch -M o/q o/p
+'
+
+test_expect_success 'git branch -m -f o/q o/p should work when o/p exists' '
+	git branch o/q &&
+	git branch -m -f o/q o/p
+'
+
 test_expect_success 'git branch -m q r/q should fail when r exists' '
 	git branch q &&
 	git branch r &&
 	test_must_fail git branch -m q r/q
 '
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t3301-notes.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t3301-notes.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t3301-notes.sh	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t3301-notes.sh	2015-02-06 05:40:08.000000000 +0800
@@ -4,34 +4,28 @@
 #
 
 test_description='Test commit notes'
 
 . ./test-lib.sh
 
-cat > fake_editor.sh << \EOF
-#!/bin/sh
-echo "$MSG" > "$1"
-echo "$MSG" >& 2
+write_script fake_editor <<\EOF
+echo "$MSG" >"$1"
+echo "$MSG" >&2
 EOF
-chmod a+x fake_editor.sh
-GIT_EDITOR=./fake_editor.sh
+GIT_EDITOR=./fake_editor
 export GIT_EDITOR
 
+indent="    "
+
 test_expect_success 'cannot annotate non-existing HEAD' '
 	test_must_fail env MSG=3 git notes add
 '
 
-test_expect_success setup '
-	: > a1 &&
-	git add a1 &&
-	test_tick &&
-	git commit -m 1st &&
-	: > a2 &&
-	git add a2 &&
-	test_tick &&
-	git commit -m 2nd
+test_expect_success 'setup' '
+	test_commit 1st &&
+	test_commit 2nd
 '
 
 test_expect_success 'need valid notes ref' '
 	test_must_fail env MSG=1 GIT_NOTES_REF=/ git notes show &&
 	test_must_fail env MSG=2 GIT_NOTES_REF=/ git notes show
 '
@@ -47,388 +41,338 @@
 # 1 indicates caught gracefully by die, 128 means git-show barked
 test_expect_success 'handle empty notes gracefully' '
 	test_expect_code 1 git notes show
 '
 
 test_expect_success 'show non-existent notes entry with %N' '
-	for l in A B
-	do
-		echo "$l"
-	done >expect &&
-	git show -s --format='A%n%NB' >output &&
-	test_cmp expect output
+	test_write_lines A B >expect &&
+	git show -s --format="A%n%NB" >actual &&
+	test_cmp expect actual
 '
 
 test_expect_success 'create notes' '
-	git config core.notesRef refs/notes/commits &&
 	MSG=b4 git notes add &&
-	test ! -f .git/NOTES_EDITMSG &&
-	test 1 = $(git ls-tree refs/notes/commits | wc -l) &&
-	test b4 = $(git notes show) &&
+	test_path_is_missing .git/NOTES_EDITMSG &&
+	git ls-tree -r refs/notes/commits >actual &&
+	test_line_count = 1 actual &&
+	test "b4" = "$(git notes show)" &&
 	git show HEAD^ &&
 	test_must_fail git notes show HEAD^
 '
 
 test_expect_success 'show notes entry with %N' '
-	for l in A b4 B
-	do
-		echo "$l"
-	done >expect &&
-	git show -s --format='A%n%NB' >output &&
-	test_cmp expect output
+	test_write_lines A b4 B >expect &&
+	git show -s --format="A%n%NB" >actual &&
+	test_cmp expect actual
 '
 
-cat >expect <<EOF
-d423f8c refs/notes/commits@{0}: notes: Notes added by 'git notes add'
-EOF
-
 test_expect_success 'create reflog entry' '
-	git reflog show refs/notes/commits >output &&
-	test_cmp expect output
+	cat <<-EOF >expect &&
+		a1d8fa6 refs/notes/commits@{0}: notes: Notes added by '\''git notes add'\''
+	EOF
+	git reflog show refs/notes/commits >actual &&
+	test_cmp expect actual
 '
 
 test_expect_success 'edit existing notes' '
 	MSG=b3 git notes edit &&
-	test ! -f .git/NOTES_EDITMSG &&
-	test 1 = $(git ls-tree refs/notes/commits | wc -l) &&
-	test b3 = $(git notes show) &&
+	test_path_is_missing .git/NOTES_EDITMSG &&
+	git ls-tree -r refs/notes/commits >actual &&
+	test_line_count = 1 actual &&
+	test "b3" = "$(git notes show)" &&
 	git show HEAD^ &&
 	test_must_fail git notes show HEAD^
 '
 
 test_expect_success 'cannot "git notes add -m" where notes already exists' '
 	test_must_fail git notes add -m "b2" &&
-	test ! -f .git/NOTES_EDITMSG &&
-	test 1 = $(git ls-tree refs/notes/commits | wc -l) &&
-	test b3 = $(git notes show) &&
+	test_path_is_missing .git/NOTES_EDITMSG &&
+	git ls-tree -r refs/notes/commits >actual &&
+	test_line_count = 1 actual &&
+	test "b3" = "$(git notes show)" &&
 	git show HEAD^ &&
 	test_must_fail git notes show HEAD^
 '
 
 test_expect_success 'can overwrite existing note with "git notes add -f -m"' '
 	git notes add -f -m "b1" &&
-	test ! -f .git/NOTES_EDITMSG &&
-	test 1 = $(git ls-tree refs/notes/commits | wc -l) &&
-	test b1 = $(git notes show) &&
+	test_path_is_missing .git/NOTES_EDITMSG &&
+	git ls-tree -r refs/notes/commits >actual &&
+	test_line_count = 1 actual &&
+	test "b1" = "$(git notes show)" &&
 	git show HEAD^ &&
 	test_must_fail git notes show HEAD^
 '
 
 test_expect_success 'add w/no options on existing note morphs into edit' '
 	MSG=b2 git notes add &&
-	test ! -f .git/NOTES_EDITMSG &&
-	test 1 = $(git ls-tree refs/notes/commits | wc -l) &&
-	test b2 = $(git notes show) &&
+	test_path_is_missing .git/NOTES_EDITMSG &&
+	git ls-tree -r refs/notes/commits >actual &&
+	test_line_count = 1 actual &&
+	test "b2" = "$(git notes show)" &&
 	git show HEAD^ &&
 	test_must_fail git notes show HEAD^
 '
 
 test_expect_success 'can overwrite existing note with "git notes add -f"' '
 	MSG=b1 git notes add -f &&
-	test ! -f .git/NOTES_EDITMSG &&
-	test 1 = $(git ls-tree refs/notes/commits | wc -l) &&
-	test b1 = $(git notes show) &&
+	test_path_is_missing .git/NOTES_EDITMSG &&
+	git ls-tree -r refs/notes/commits >actual &&
+	test_line_count = 1 actual &&
+	test "b1" = "$(git notes show)" &&
 	git show HEAD^ &&
 	test_must_fail git notes show HEAD^
 '
 
-cat > expect << EOF
-commit 268048bfb8a1fb38e703baceb8ab235421bf80c5
-Author: A U Thor <author@example.com>
-Date:   Thu Apr 7 15:14:13 2005 -0700
-
-    2nd
-
-Notes:
-    b1
-EOF
-
 test_expect_success 'show notes' '
+	cat >expect <<-EOF &&
+		commit 7a4ca6ee52a974a66cbaa78e33214535dff1d691
+		Author: A U Thor <author@example.com>
+		Date:   Thu Apr 7 15:14:13 2005 -0700
+
+		${indent}2nd
+
+		Notes:
+		${indent}b1
+	EOF
 	! (git cat-file commit HEAD | grep b1) &&
-	git log -1 > output &&
-	test_cmp expect output
+	git log -1 >actual &&
+	test_cmp expect actual
 '
 
-test_expect_success 'create multi-line notes (setup)' '
-	: > a3 &&
-	git add a3 &&
-	test_tick &&
-	git commit -m 3rd &&
-	MSG="b3
-c3c3c3c3
-d3d3d3" git notes add
-'
-
-cat > expect-multiline << EOF
-commit 1584215f1d29c65e99c6c6848626553fdd07fd75
-Author: A U Thor <author@example.com>
-Date:   Thu Apr 7 15:15:13 2005 -0700
-
-    3rd
-
-Notes:
-    b3
-    c3c3c3c3
-    d3d3d3
-EOF
-
-printf "\n" >> expect-multiline
-cat expect >> expect-multiline
-
 test_expect_success 'show multi-line notes' '
-	git log -2 > output &&
-	test_cmp expect-multiline output
+	test_commit 3rd &&
+	MSG="b3${LF}c3c3c3c3${LF}d3d3d3" git notes add &&
+	cat >expect-multiline <<-EOF &&
+		commit d07d62e5208f22eb5695e7eb47667dc8b9860290
+		Author: A U Thor <author@example.com>
+		Date:   Thu Apr 7 15:15:13 2005 -0700
+
+		${indent}3rd
+
+		Notes:
+		${indent}b3
+		${indent}c3c3c3c3
+		${indent}d3d3d3
+
+	EOF
+	cat expect >>expect-multiline &&
+	git log -2 >actual &&
+	test_cmp expect-multiline actual
 '
-test_expect_success 'create -F notes (setup)' '
-	: > a4 &&
-	git add a4 &&
-	test_tick &&
-	git commit -m 4th &&
-	echo "xyzzy" > note5 &&
-	git notes add -F note5
-'
-
-cat > expect-F << EOF
-commit 15023535574ded8b1a89052b32673f84cf9582b8
-Author: A U Thor <author@example.com>
-Date:   Thu Apr 7 15:16:13 2005 -0700
-
-    4th
-
-Notes:
-    xyzzy
-EOF
-
-printf "\n" >> expect-F
-cat expect-multiline >> expect-F
 
 test_expect_success 'show -F notes' '
-	git log -3 > output &&
-	test_cmp expect-F output
+	test_commit 4th &&
+	echo "xyzzy" >note5 &&
+	git notes add -F note5 &&
+	cat >expect-F <<-EOF &&
+		commit 0f7aa3ec6325aeb88b910453bb3eb37c49d75c11
+		Author: A U Thor <author@example.com>
+		Date:   Thu Apr 7 15:16:13 2005 -0700
+
+		${indent}4th
+
+		Notes:
+		${indent}xyzzy
+
+	EOF
+	cat expect-multiline >>expect-F &&
+	git log -3 >actual &&
+	test_cmp expect-F actual
 '
 
 test_expect_success 'Re-adding -F notes without -f fails' '
-	echo "zyxxy" > note5 &&
+	echo "zyxxy" >note5 &&
 	test_must_fail git notes add -F note5 &&
-	git log -3 > output &&
-	test_cmp expect-F output
+	git log -3 >actual &&
+	test_cmp expect-F actual
 '
 
-cat >expect << EOF
-commit 15023535574ded8b1a89052b32673f84cf9582b8
-tree e070e3af51011e47b183c33adf9736736a525709
-parent 1584215f1d29c65e99c6c6848626553fdd07fd75
-author A U Thor <author@example.com> 1112912173 -0700
-committer C O Mitter <committer@example.com> 1112912173 -0700
-
-    4th
-EOF
 test_expect_success 'git log --pretty=raw does not show notes' '
-	git log -1 --pretty=raw >output &&
-	test_cmp expect output
+	cat >expect <<-EOF &&
+		commit 0f7aa3ec6325aeb88b910453bb3eb37c49d75c11
+		tree 05ac65288c4c4b3b709a020ae94b2ece2f2201ae
+		parent d07d62e5208f22eb5695e7eb47667dc8b9860290
+		author A U Thor <author@example.com> 1112912173 -0700
+		committer C O Mitter <committer@example.com> 1112912173 -0700
+
+		${indent}4th
+	EOF
+	git log -1 --pretty=raw >actual &&
+	test_cmp expect actual
 '
 
-cat >>expect <<EOF
-
-Notes:
-    xyzzy
-EOF
 test_expect_success 'git log --show-notes' '
-	git log -1 --pretty=raw --show-notes >output &&
-	test_cmp expect output
+	cat >>expect <<-EOF &&
+
+	Notes:
+	${indent}xyzzy
+	EOF
+	git log -1 --pretty=raw --show-notes >actual &&
+	test_cmp expect actual
 '
 
 test_expect_success 'git log --no-notes' '
-	git log -1 --no-notes >output &&
-	! grep xyzzy output
+	git log -1 --no-notes >actual &&
+	! grep xyzzy actual
 '
 
 test_expect_success 'git format-patch does not show notes' '
-	git format-patch -1 --stdout >output &&
-	! grep xyzzy output
+	git format-patch -1 --stdout >actual &&
+	! grep xyzzy actual
 '
 
 test_expect_success 'git format-patch --show-notes does show notes' '
-	git format-patch --show-notes -1 --stdout >output &&
-	grep xyzzy output
+	git format-patch --show-notes -1 --stdout >actual &&
+	grep xyzzy actual
 '
 
 for pretty in \
 	"" --pretty --pretty=raw --pretty=short --pretty=medium \
 	--pretty=full --pretty=fuller --pretty=format:%s --oneline
 do
 	case "$pretty" in
 	"") p= not= negate="" ;;
 	?*) p="$pretty" not=" not" negate="!" ;;
 	esac
 	test_expect_success "git show $pretty does$not show notes" '
-		git show $p >output &&
-		eval "$negate grep xyzzy output"
+		git show $p >actual &&
+		eval "$negate grep xyzzy actual"
 	'
 done
 
 test_expect_success 'setup alternate notes ref' '
 	git notes --ref=alternate add -m alternate
 '
 
 test_expect_success 'git log --notes shows default notes' '
-	git log -1 --notes >output &&
-	grep xyzzy output &&
-	! grep alternate output
+	git log -1 --notes >actual &&
+	grep xyzzy actual &&
+	! grep alternate actual
 '
 
 test_expect_success 'git log --notes=X shows only X' '
-	git log -1 --notes=alternate >output &&
-	! grep xyzzy output &&
-	grep alternate output
+	git log -1 --notes=alternate >actual &&
+	! grep xyzzy actual &&
+	grep alternate actual
 '
 
 test_expect_success 'git log --notes --notes=X shows both' '
-	git log -1 --notes --notes=alternate >output &&
-	grep xyzzy output &&
-	grep alternate output
+	git log -1 --notes --notes=alternate >actual &&
+	grep xyzzy actual &&
+	grep alternate actual
 '
 
 test_expect_success 'git log --no-notes resets default state' '
 	git log -1 --notes --notes=alternate \
 		--no-notes --notes=alternate \
-		>output &&
-	! grep xyzzy output &&
-	grep alternate output
+		>actual &&
+	! grep xyzzy actual &&
+	grep alternate actual
 '
 
 test_expect_success 'git log --no-notes resets ref list' '
 	git log -1 --notes --notes=alternate \
 		--no-notes --notes \
-		>output &&
-	grep xyzzy output &&
-	! grep alternate output
-'
-
-test_expect_success 'create -m notes (setup)' '
-	: > a5 &&
-	git add a5 &&
-	test_tick &&
-	git commit -m 5th &&
-	git notes add -m spam -m "foo
-bar
-baz"
-'
-
-whitespace="    "
-cat > expect-m << EOF
-commit bd1753200303d0a0344be813e504253b3d98e74d
-Author: A U Thor <author@example.com>
-Date:   Thu Apr 7 15:17:13 2005 -0700
-
-    5th
-
-Notes:
-    spam
-$whitespace
-    foo
-    bar
-    baz
-EOF
-
-printf "\n" >> expect-m
-cat expect-F >> expect-m
-
-test_expect_success 'show -m notes' '
-	git log -4 > output &&
-	test_cmp expect-m output
-'
-
-test_expect_success 'remove note with add -f -F /dev/null (setup)' '
-	git notes add -f -F /dev/null
+		>actual &&
+	grep xyzzy actual &&
+	! grep alternate actual
 '
 
-cat > expect-rm-F << EOF
-commit bd1753200303d0a0344be813e504253b3d98e74d
-Author: A U Thor <author@example.com>
-Date:   Thu Apr 7 15:17:13 2005 -0700
-
-    5th
-EOF
-
-printf "\n" >> expect-rm-F
-cat expect-F >> expect-rm-F
-
-test_expect_success 'verify note removal with -F /dev/null' '
-	git log -4 > output &&
-	test_cmp expect-rm-F output &&
+test_expect_success 'show -m notes' '
+	test_commit 5th &&
+	git notes add -m spam -m "foo${LF}bar${LF}baz" &&
+	cat >expect-m <<-EOF &&
+		commit 7f9ad8836c775acb134c0a055fc55fb4cd1ba361
+		Author: A U Thor <author@example.com>
+		Date:   Thu Apr 7 15:17:13 2005 -0700
+
+		${indent}5th
+
+		Notes:
+		${indent}spam
+		${indent}
+		${indent}foo
+		${indent}bar
+		${indent}baz
+
+	EOF
+	cat expect-F >>expect-m &&
+	git log -4 >actual &&
+	test_cmp expect-m actual
+'
+
+test_expect_success 'remove note with add -f -F /dev/null' '
+	git notes add -f -F /dev/null &&
+	cat >expect-rm-F <<-EOF &&
+		commit 7f9ad8836c775acb134c0a055fc55fb4cd1ba361
+		Author: A U Thor <author@example.com>
+		Date:   Thu Apr 7 15:17:13 2005 -0700
+
+		${indent}5th
+
+	EOF
+	cat expect-F >>expect-rm-F &&
+	git log -4 >actual &&
+	test_cmp expect-rm-F actual &&
 	test_must_fail git notes show
 '
 
-test_expect_success 'do not create empty note with -m "" (setup)' '
-	git notes add -m ""
-'
-
-test_expect_success 'verify non-creation of note with -m ""' '
-	git log -4 > output &&
-	test_cmp expect-rm-F output &&
+test_expect_success 'do not create empty note with -m ""' '
+	git notes add -m "" &&
+	git log -4 >actual &&
+	test_cmp expect-rm-F actual &&
 	test_must_fail git notes show
 '
 
-cat > expect-combine_m_and_F << EOF
-foo
-
-xyzzy
+test_expect_success 'create note with combination of -m and -F' '
+	cat >expect-combine_m_and_F <<-EOF &&
+		foo
 
-bar
+		xyzzy
 
-zyxxy
+		bar
 
-baz
-EOF
+		zyxxy
 
-test_expect_success 'create note with combination of -m and -F' '
-	echo "xyzzy" > note_a &&
-	echo "zyxxy" > note_b &&
+		baz
+	EOF
+	echo "xyzzy" >note_a &&
+	echo "zyxxy" >note_b &&
 	git notes add -m "foo" -F note_a -m "bar" -F note_b -m "baz" &&
-	git notes show > output &&
-	test_cmp expect-combine_m_and_F output
+	git notes show >actual &&
+	test_cmp expect-combine_m_and_F actual
 '
 
-test_expect_success 'remove note with "git notes remove" (setup)' '
+test_expect_success 'remove note with "git notes remove"' '
 	git notes remove HEAD^ &&
-	git notes remove
-'
-
-cat > expect-rm-remove << EOF
-commit bd1753200303d0a0344be813e504253b3d98e74d
-Author: A U Thor <author@example.com>
-Date:   Thu Apr 7 15:17:13 2005 -0700
-
-    5th
-
-commit 15023535574ded8b1a89052b32673f84cf9582b8
-Author: A U Thor <author@example.com>
-Date:   Thu Apr 7 15:16:13 2005 -0700
-
-    4th
-EOF
-
-printf "\n" >> expect-rm-remove
-cat expect-multiline >> expect-rm-remove
-
-test_expect_success 'verify note removal with "git notes remove"' '
-	git log -4 > output &&
-	test_cmp expect-rm-remove output &&
+	git notes remove &&
+	cat >expect-rm-remove <<-EOF &&
+		commit 7f9ad8836c775acb134c0a055fc55fb4cd1ba361
+		Author: A U Thor <author@example.com>
+		Date:   Thu Apr 7 15:17:13 2005 -0700
+
+		${indent}5th
+
+		commit 0f7aa3ec6325aeb88b910453bb3eb37c49d75c11
+		Author: A U Thor <author@example.com>
+		Date:   Thu Apr 7 15:16:13 2005 -0700
+
+		${indent}4th
+
+	EOF
+	cat expect-multiline >>expect-rm-remove &&
+	git log -4 >actual &&
+	test_cmp expect-rm-remove actual &&
 	test_must_fail git notes show HEAD^
 '
 
-cat > expect << EOF
-c18dc024e14f08d18d14eea0d747ff692d66d6a3 1584215f1d29c65e99c6c6848626553fdd07fd75
-c9c6af7f78bc47490dbf3e822cf2f3c24d4b9061 268048bfb8a1fb38e703baceb8ab235421bf80c5
-EOF
-
 test_expect_success 'removing non-existing note should not create new commit' '
-	git rev-parse --verify refs/notes/commits > before_commit &&
+	git rev-parse --verify refs/notes/commits >before_commit &&
 	test_must_fail git notes remove HEAD^ &&
-	git rev-parse --verify refs/notes/commits > after_commit &&
+	git rev-parse --verify refs/notes/commits >after_commit &&
 	test_cmp before_commit after_commit
 '
 
 test_expect_success 'removing more than one' '
 	before=$(git rev-parse --verify refs/notes/commits) &&
 	test_when_finished "git update-ref refs/notes/commits $before" &&
@@ -502,741 +446,746 @@
 	git notes remove --ignore-missing --stdin <input &&
 	git notes list | sed -e "s/ .*//" >actual &&
 	test_cmp after-removal-expect actual
 '
 
 test_expect_success 'list notes with "git notes list"' '
-	git notes list > output &&
-	test_cmp expect output
+	cat >expect <<-EOF &&
+		c9c6af7f78bc47490dbf3e822cf2f3c24d4b9061 7a4ca6ee52a974a66cbaa78e33214535dff1d691
+		c18dc024e14f08d18d14eea0d747ff692d66d6a3 d07d62e5208f22eb5695e7eb47667dc8b9860290
+	EOF
+	git notes list >actual &&
+	test_cmp expect actual
 '
 
 test_expect_success 'list notes with "git notes"' '
-	git notes > output &&
-	test_cmp expect output
+	git notes >actual &&
+	test_cmp expect actual
 '
 
-cat > expect << EOF
-c18dc024e14f08d18d14eea0d747ff692d66d6a3
-EOF
-
 test_expect_success 'list specific note with "git notes list <object>"' '
-	git notes list HEAD^^ > output &&
-	test_cmp expect output
+	cat >expect <<-EOF &&
+		c18dc024e14f08d18d14eea0d747ff692d66d6a3
+	EOF
+	git notes list HEAD^^ >actual &&
+	test_cmp expect actual
 '
 
-cat > expect << EOF
-EOF
-
 test_expect_success 'listing non-existing notes fails' '
-	test_must_fail git notes list HEAD > output &&
-	test_cmp expect output
+	cat >expect <<-EOF &&
+	EOF
+	test_must_fail git notes list HEAD >actual &&
+	test_cmp expect actual
 '
 
-cat > expect << EOF
-Initial set of notes
-
-More notes appended with git notes append
-EOF
-
 test_expect_success 'append to existing note with "git notes append"' '
+	cat >expect <<-EOF &&
+		Initial set of notes
+
+		More notes appended with git notes append
+	EOF
 	git notes add -m "Initial set of notes" &&
 	git notes append -m "More notes appended with git notes append" &&
-	git notes show > output &&
-	test_cmp expect output
+	git notes show >actual &&
+	test_cmp expect actual
 '
 
-cat > expect_list << EOF
-c18dc024e14f08d18d14eea0d747ff692d66d6a3 1584215f1d29c65e99c6c6848626553fdd07fd75
-c9c6af7f78bc47490dbf3e822cf2f3c24d4b9061 268048bfb8a1fb38e703baceb8ab235421bf80c5
-4b6ad22357cc8a1296720574b8d2fbc22fab0671 bd1753200303d0a0344be813e504253b3d98e74d
-EOF
-
 test_expect_success '"git notes list" does not expand to "git notes list HEAD"' '
-	git notes list > output &&
-	test_cmp expect_list output
+	cat >expect_list <<-EOF &&
+		c9c6af7f78bc47490dbf3e822cf2f3c24d4b9061 7a4ca6ee52a974a66cbaa78e33214535dff1d691
+		4b6ad22357cc8a1296720574b8d2fbc22fab0671 7f9ad8836c775acb134c0a055fc55fb4cd1ba361
+		c18dc024e14f08d18d14eea0d747ff692d66d6a3 d07d62e5208f22eb5695e7eb47667dc8b9860290
+	EOF
+	git notes list >actual &&
+	test_cmp expect_list actual
 '
 
 test_expect_success 'appending empty string does not change existing note' '
 	git notes append -m "" &&
-	git notes show > output &&
-	test_cmp expect output
+	git notes show >actual &&
+	test_cmp expect actual
 '
 
 test_expect_success 'git notes append == add when there is no existing note' '
 	git notes remove HEAD &&
 	test_must_fail git notes list HEAD &&
-	git notes append -m "Initial set of notes
-
-More notes appended with git notes append" &&
-	git notes show > output &&
-	test_cmp expect output
+	git notes append -m "Initial set of notes${LF}${LF}More notes appended with git notes append" &&
+	git notes show >actual &&
+	test_cmp expect actual
 '
 
 test_expect_success 'appending empty string to non-existing note does not create note' '
 	git notes remove HEAD &&
 	test_must_fail git notes list HEAD &&
 	git notes append -m "" &&
 	test_must_fail git notes list HEAD
 '
 
 test_expect_success 'create other note on a different notes ref (setup)' '
-	: > a6 &&
-	git add a6 &&
-	test_tick &&
-	git commit -m 6th &&
-	GIT_NOTES_REF="refs/notes/other" git notes add -m "other note"
-'
-
-cat > expect-other << EOF
-commit 387a89921c73d7ed72cd94d179c1c7048ca47756
-Author: A U Thor <author@example.com>
-Date:   Thu Apr 7 15:18:13 2005 -0700
-
-    6th
-
-Notes (other):
-    other note
-EOF
-
-cat > expect-not-other << EOF
-commit 387a89921c73d7ed72cd94d179c1c7048ca47756
-Author: A U Thor <author@example.com>
-Date:   Thu Apr 7 15:18:13 2005 -0700
-
-    6th
-EOF
+	test_commit 6th &&
+	GIT_NOTES_REF="refs/notes/other" git notes add -m "other note" &&
+	cat >expect-not-other <<-EOF &&
+		commit 2c125331118caba0ff8238b7f4958ac6e93fe39c
+		Author: A U Thor <author@example.com>
+		Date:   Thu Apr 7 15:18:13 2005 -0700
+
+		${indent}6th
+	EOF
+	cp expect-not-other expect-other &&
+	cat >>expect-other <<-EOF
+
+		Notes (other):
+		${indent}other note
+	EOF
+'
 
 test_expect_success 'Do not show note on other ref by default' '
-	git log -1 > output &&
-	test_cmp expect-not-other output
+	git log -1 >actual &&
+	test_cmp expect-not-other actual
 '
 
 test_expect_success 'Do show note when ref is given in GIT_NOTES_REF' '
-	GIT_NOTES_REF="refs/notes/other" git log -1 > output &&
-	test_cmp expect-other output
+	GIT_NOTES_REF="refs/notes/other" git log -1 >actual &&
+	test_cmp expect-other actual
 '
 
 test_expect_success 'Do show note when ref is given in core.notesRef config' '
-	git config core.notesRef "refs/notes/other" &&
-	git log -1 > output &&
-	test_cmp expect-other output
+	test_config core.notesRef "refs/notes/other" &&
+	git log -1 >actual &&
+	test_cmp expect-other actual
 '
 
 test_expect_success 'Do not show note when core.notesRef is overridden' '
-	GIT_NOTES_REF="refs/notes/wrong" git log -1 > output &&
-	test_cmp expect-not-other output
+	test_config core.notesRef "refs/notes/other" &&
+	GIT_NOTES_REF="refs/notes/wrong" git log -1 >actual &&
+	test_cmp expect-not-other actual
 '
 
-cat > expect-both << EOF
-commit 387a89921c73d7ed72cd94d179c1c7048ca47756
-Author: A U Thor <author@example.com>
-Date:   Thu Apr 7 15:18:13 2005 -0700
+test_expect_success 'Show all notes when notes.displayRef=refs/notes/*' '
+	cat >expect-both <<-EOF &&
+		commit 2c125331118caba0ff8238b7f4958ac6e93fe39c
+		Author: A U Thor <author@example.com>
+		Date:   Thu Apr 7 15:18:13 2005 -0700
 
-    6th
+		${indent}6th
 
-Notes:
-    order test
+		Notes:
+		${indent}order test
 
-Notes (other):
-    other note
+		Notes (other):
+		${indent}other note
 
-commit bd1753200303d0a0344be813e504253b3d98e74d
-Author: A U Thor <author@example.com>
-Date:   Thu Apr 7 15:17:13 2005 -0700
+		commit 7f9ad8836c775acb134c0a055fc55fb4cd1ba361
+		Author: A U Thor <author@example.com>
+		Date:   Thu Apr 7 15:17:13 2005 -0700
 
-    5th
+		${indent}5th
 
-Notes:
-    replacement for deleted note
-EOF
-
-test_expect_success 'Show all notes when notes.displayRef=refs/notes/*' '
+		Notes:
+		${indent}replacement for deleted note
+	EOF
 	GIT_NOTES_REF=refs/notes/commits git notes add \
 		-m"replacement for deleted note" HEAD^ &&
 	GIT_NOTES_REF=refs/notes/commits git notes add -m"order test" &&
-	git config --unset core.notesRef &&
-	git config notes.displayRef "refs/notes/*" &&
-	git log -2 > output &&
-	test_cmp expect-both output
+	test_unconfig core.notesRef &&
+	test_config notes.displayRef "refs/notes/*" &&
+	git log -2 >actual &&
+	test_cmp expect-both actual
 '
 
 test_expect_success 'core.notesRef is implicitly in notes.displayRef' '
-	git config core.notesRef refs/notes/commits &&
-	git config notes.displayRef refs/notes/other &&
-	git log -2 > output &&
-	test_cmp expect-both output
+	test_config core.notesRef refs/notes/commits &&
+	test_config notes.displayRef refs/notes/other &&
+	git log -2 >actual &&
+	test_cmp expect-both actual
 '
 
 test_expect_success 'notes.displayRef can be given more than once' '
-	git config --unset core.notesRef &&
-	git config notes.displayRef refs/notes/commits &&
+	test_unconfig core.notesRef &&
+	test_config notes.displayRef refs/notes/commits &&
 	git config --add notes.displayRef refs/notes/other &&
-	git log -2 > output &&
-	test_cmp expect-both output
+	git log -2 >actual &&
+	test_cmp expect-both actual
 '
 
-cat > expect-both-reversed << EOF
-commit 387a89921c73d7ed72cd94d179c1c7048ca47756
-Author: A U Thor <author@example.com>
-Date:   Thu Apr 7 15:18:13 2005 -0700
-
-    6th
-
-Notes (other):
-    other note
-
-Notes:
-    order test
-EOF
-
 test_expect_success 'notes.displayRef respects order' '
-	git config core.notesRef refs/notes/other &&
-	git config --unset-all notes.displayRef &&
-	git config notes.displayRef refs/notes/commits &&
-	git log -1 > output &&
-	test_cmp expect-both-reversed output
+	cat >expect-both-reversed <<-EOF &&
+		commit 2c125331118caba0ff8238b7f4958ac6e93fe39c
+		Author: A U Thor <author@example.com>
+		Date:   Thu Apr 7 15:18:13 2005 -0700
+
+		${indent}6th
+
+		Notes (other):
+		${indent}other note
+
+		Notes:
+		${indent}order test
+	EOF
+	test_config core.notesRef refs/notes/other &&
+	test_config notes.displayRef refs/notes/commits &&
+	git log -1 >actual &&
+	test_cmp expect-both-reversed actual
 '
 
 test_expect_success 'GIT_NOTES_DISPLAY_REF works' '
-	git config --unset-all core.notesRef &&
-	git config --unset-all notes.displayRef &&
 	GIT_NOTES_DISPLAY_REF=refs/notes/commits:refs/notes/other \
-		git log -2 > output &&
-	test_cmp expect-both output
+		git log -2 >actual &&
+	test_cmp expect-both actual
 '
 
-cat > expect-none << EOF
-commit 387a89921c73d7ed72cd94d179c1c7048ca47756
-Author: A U Thor <author@example.com>
-Date:   Thu Apr 7 15:18:13 2005 -0700
-
-    6th
-
-commit bd1753200303d0a0344be813e504253b3d98e74d
-Author: A U Thor <author@example.com>
-Date:   Thu Apr 7 15:17:13 2005 -0700
-
-    5th
-EOF
-
 test_expect_success 'GIT_NOTES_DISPLAY_REF overrides config' '
-	git config notes.displayRef "refs/notes/*" &&
-	GIT_NOTES_REF= GIT_NOTES_DISPLAY_REF= git log -2 > output &&
-	test_cmp expect-none output
+	cat >expect-none <<-EOF &&
+		commit 2c125331118caba0ff8238b7f4958ac6e93fe39c
+		Author: A U Thor <author@example.com>
+		Date:   Thu Apr 7 15:18:13 2005 -0700
+
+		${indent}6th
+
+		commit 7f9ad8836c775acb134c0a055fc55fb4cd1ba361
+		Author: A U Thor <author@example.com>
+		Date:   Thu Apr 7 15:17:13 2005 -0700
+
+		${indent}5th
+	EOF
+	test_config notes.displayRef "refs/notes/*" &&
+	GIT_NOTES_REF= GIT_NOTES_DISPLAY_REF= git log -2 >actual &&
+	test_cmp expect-none actual
 '
 
 test_expect_success '--show-notes=* adds to GIT_NOTES_DISPLAY_REF' '
-	GIT_NOTES_REF= GIT_NOTES_DISPLAY_REF= git log --show-notes=* -2 > output &&
-	test_cmp expect-both output
+	GIT_NOTES_REF= GIT_NOTES_DISPLAY_REF= git log --show-notes=* -2 >actual &&
+	test_cmp expect-both actual
 '
 
-cat > expect-commits << EOF
-commit 387a89921c73d7ed72cd94d179c1c7048ca47756
-Author: A U Thor <author@example.com>
-Date:   Thu Apr 7 15:18:13 2005 -0700
-
-    6th
-
-Notes:
-    order test
-EOF
-
 test_expect_success '--no-standard-notes' '
-	git log --no-standard-notes --show-notes=commits -1 > output &&
-	test_cmp expect-commits output
+	cat >expect-commits <<-EOF &&
+		commit 2c125331118caba0ff8238b7f4958ac6e93fe39c
+		Author: A U Thor <author@example.com>
+		Date:   Thu Apr 7 15:18:13 2005 -0700
+
+		${indent}6th
+
+		Notes:
+		${indent}order test
+	EOF
+	git log --no-standard-notes --show-notes=commits -1 >actual &&
+	test_cmp expect-commits actual
 '
 
 test_expect_success '--standard-notes' '
+	test_config notes.displayRef "refs/notes/*" &&
 	git log --no-standard-notes --show-notes=commits \
-		--standard-notes -2 > output &&
-	test_cmp expect-both output
+		--standard-notes -2 >actual &&
+	test_cmp expect-both actual
 '
 
 test_expect_success '--show-notes=ref accumulates' '
 	git log --show-notes=other --show-notes=commits \
-		 --no-standard-notes -1 > output &&
-	test_cmp expect-both-reversed output
+		 --no-standard-notes -1 >actual &&
+	test_cmp expect-both-reversed actual
 '
 
 test_expect_success 'Allow notes on non-commits (trees, blobs, tags)' '
-	git config core.notesRef refs/notes/other &&
-	echo "Note on a tree" > expect &&
+	test_config core.notesRef refs/notes/other &&
+	echo "Note on a tree" >expect &&
 	git notes add -m "Note on a tree" HEAD: &&
-	git notes show HEAD: > actual &&
+	git notes show HEAD: >actual &&
 	test_cmp expect actual &&
-	echo "Note on a blob" > expect &&
+	echo "Note on a blob" >expect &&
 	filename=$(git ls-tree --name-only HEAD | head -n1) &&
 	git notes add -m "Note on a blob" HEAD:$filename &&
-	git notes show HEAD:$filename > actual &&
+	git notes show HEAD:$filename >actual &&
 	test_cmp expect actual &&
-	echo "Note on a tag" > expect &&
+	echo "Note on a tag" >expect &&
 	git tag -a -m "This is an annotated tag" foobar HEAD^ &&
 	git notes add -m "Note on a tag" foobar &&
-	git notes show foobar > actual &&
+	git notes show foobar >actual &&
 	test_cmp expect actual
 '
 
-cat > expect << EOF
-commit 2ede89468182a62d0bde2583c736089bcf7d7e92
-Author: A U Thor <author@example.com>
-Date:   Thu Apr 7 15:19:13 2005 -0700
-
-    7th
-
-Notes (other):
-    other note
-EOF
-
 test_expect_success 'create note from other note with "git notes add -C"' '
-	: > a7 &&
-	git add a7 &&
-	test_tick &&
-	git commit -m 7th &&
+	cat >expect <<-EOF &&
+		commit fb01e0ca8c33b6cc0c6451dde747f97df567cb5c
+		Author: A U Thor <author@example.com>
+		Date:   Thu Apr 7 15:19:13 2005 -0700
+
+		${indent}7th
+
+		Notes:
+		${indent}order test
+	EOF
+	test_commit 7th &&
 	git notes add -C $(git notes list HEAD^) &&
-	git log -1 > actual &&
+	git log -1 >actual &&
 	test_cmp expect actual &&
 	test "$(git notes list HEAD)" = "$(git notes list HEAD^)"
 '
 
 test_expect_success 'create note from non-existing note with "git notes add -C" fails' '
-	: > a8 &&
-	git add a8 &&
-	test_tick &&
-	git commit -m 8th &&
+	test_commit 8th &&
 	test_must_fail git notes add -C deadbeef &&
 	test_must_fail git notes list HEAD
 '
 
 test_expect_success 'create note from non-blob with "git notes add -C" fails' '
 	commit=$(git rev-parse --verify HEAD) &&
 	tree=$(git rev-parse --verify HEAD:) &&
 	test_must_fail git notes add -C $commit &&
 	test_must_fail git notes add -C $tree &&
 	test_must_fail git notes list HEAD
 '
 
-cat > expect << EOF
-commit 80d796defacd5db327b7a4e50099663902fbdc5c
-Author: A U Thor <author@example.com>
-Date:   Thu Apr 7 15:20:13 2005 -0700
-
-    8th
-
-Notes (other):
-    This is a blob object
-EOF
-
 test_expect_success 'create note from blob with "git notes add -C" reuses blob id' '
+	cat >expect <<-EOF &&
+		commit 9a4c31c7f722b5d517e92c64e932dd751e1413bf
+		Author: A U Thor <author@example.com>
+		Date:   Thu Apr 7 15:20:13 2005 -0700
+
+		${indent}8th
+
+		Notes:
+		${indent}This is a blob object
+	EOF
 	blob=$(echo "This is a blob object" | git hash-object -w --stdin) &&
 	git notes add -C $blob &&
-	git log -1 > actual &&
+	git log -1 >actual &&
 	test_cmp expect actual &&
 	test "$(git notes list HEAD)" = "$blob"
 '
 
-cat > expect << EOF
-commit 016e982bad97eacdbda0fcbd7ce5b0ba87c81f1b
-Author: A U Thor <author@example.com>
-Date:   Thu Apr 7 15:21:13 2005 -0700
-
-    9th
-
-Notes (other):
-    yet another note
-EOF
-
 test_expect_success 'create note from other note with "git notes add -c"' '
-	: > a9 &&
-	git add a9 &&
-	test_tick &&
-	git commit -m 9th &&
+	cat >expect <<-EOF &&
+		commit 2e0db4bc649e174d667a1cde19e725cf897a5bd2
+		Author: A U Thor <author@example.com>
+		Date:   Thu Apr 7 15:21:13 2005 -0700
+
+		${indent}9th
+
+		Notes:
+		${indent}yet another note
+	EOF
+	test_commit 9th &&
 	MSG="yet another note" git notes add -c $(git notes list HEAD^^) &&
-	git log -1 > actual &&
+	git log -1 >actual &&
 	test_cmp expect actual
 '
 
 test_expect_success 'create note from non-existing note with "git notes add -c" fails' '
-	: > a10 &&
-	git add a10 &&
-	test_tick &&
-	git commit -m 10th &&
+	test_commit 10th &&
 	test_must_fail env MSG="yet another note" git notes add -c deadbeef &&
 	test_must_fail git notes list HEAD
 '
 
-cat > expect << EOF
-commit 016e982bad97eacdbda0fcbd7ce5b0ba87c81f1b
-Author: A U Thor <author@example.com>
-Date:   Thu Apr 7 15:21:13 2005 -0700
-
-    9th
-
-Notes (other):
-    yet another note
-$whitespace
-    yet another note
-EOF
-
 test_expect_success 'append to note from other note with "git notes append -C"' '
+	cat >expect <<-EOF &&
+		commit 2e0db4bc649e174d667a1cde19e725cf897a5bd2
+		Author: A U Thor <author@example.com>
+		Date:   Thu Apr 7 15:21:13 2005 -0700
+
+		${indent}9th
+
+		Notes:
+		${indent}yet another note
+		${indent}
+		${indent}yet another note
+	EOF
 	git notes append -C $(git notes list HEAD^) HEAD^ &&
-	git log -1 HEAD^ > actual &&
+	git log -1 HEAD^ >actual &&
 	test_cmp expect actual
 '
 
-cat > expect << EOF
-commit ffed603236bfa3891c49644257a83598afe8ae5a
-Author: A U Thor <author@example.com>
-Date:   Thu Apr 7 15:22:13 2005 -0700
-
-    10th
-
-Notes (other):
-    other note
-EOF
-
 test_expect_success 'create note from other note with "git notes append -c"' '
+	cat >expect <<-EOF &&
+		commit 7c3b87ab368f81e11b1ea87b2ab99a71ccd25406
+		Author: A U Thor <author@example.com>
+		Date:   Thu Apr 7 15:22:13 2005 -0700
+
+		${indent}10th
+
+		Notes:
+		${indent}other note
+	EOF
 	MSG="other note" git notes append -c $(git notes list HEAD^) &&
-	git log -1 > actual &&
+	git log -1 >actual &&
 	test_cmp expect actual
 '
 
-cat > expect << EOF
-commit ffed603236bfa3891c49644257a83598afe8ae5a
-Author: A U Thor <author@example.com>
-Date:   Thu Apr 7 15:22:13 2005 -0700
-
-    10th
-
-Notes (other):
-    other note
-$whitespace
-    yet another note
-EOF
-
 test_expect_success 'append to note from other note with "git notes append -c"' '
+	cat >expect <<-EOF &&
+		commit 7c3b87ab368f81e11b1ea87b2ab99a71ccd25406
+		Author: A U Thor <author@example.com>
+		Date:   Thu Apr 7 15:22:13 2005 -0700
+
+		${indent}10th
+
+		Notes:
+		${indent}other note
+		${indent}
+		${indent}yet another note
+	EOF
 	MSG="yet another note" git notes append -c $(git notes list HEAD) &&
-	git log -1 > actual &&
+	git log -1 >actual &&
 	test_cmp expect actual
 '
 
-cat > expect << EOF
-commit 6352c5e33dbcab725fe0579be16aa2ba8eb369be
-Author: A U Thor <author@example.com>
-Date:   Thu Apr 7 15:23:13 2005 -0700
-
-    11th
-
-Notes (other):
-    other note
-$whitespace
-    yet another note
-EOF
-
 test_expect_success 'copy note with "git notes copy"' '
-	: > a11 &&
-	git add a11 &&
-	test_tick &&
-	git commit -m 11th &&
+	cat >expect <<-EOF &&
+		commit a446fff8777efdc6eb8f4b7c8a5ff699484df0d5
+		Author: A U Thor <author@example.com>
+		Date:   Thu Apr 7 15:23:13 2005 -0700
+
+		${indent}11th
+
+		Notes:
+		${indent}other note
+		${indent}
+		${indent}yet another note
+	EOF
+	test_commit 11th &&
 	git notes copy HEAD^ HEAD &&
-	git log -1 > actual &&
+	git log -1 >actual &&
 	test_cmp expect actual &&
 	test "$(git notes list HEAD)" = "$(git notes list HEAD^)"
 '
 
 test_expect_success 'prevent overwrite with "git notes copy"' '
 	test_must_fail git notes copy HEAD~2 HEAD &&
-	git log -1 > actual &&
+	git log -1 >actual &&
 	test_cmp expect actual &&
 	test "$(git notes list HEAD)" = "$(git notes list HEAD^)"
 '
 
-cat > expect << EOF
-commit 6352c5e33dbcab725fe0579be16aa2ba8eb369be
-Author: A U Thor <author@example.com>
-Date:   Thu Apr 7 15:23:13 2005 -0700
-
-    11th
-
-Notes (other):
-    yet another note
-$whitespace
-    yet another note
-EOF
-
 test_expect_success 'allow overwrite with "git notes copy -f"' '
+	cat >expect <<-EOF &&
+		commit a446fff8777efdc6eb8f4b7c8a5ff699484df0d5
+		Author: A U Thor <author@example.com>
+		Date:   Thu Apr 7 15:23:13 2005 -0700
+
+		${indent}11th
+
+		Notes:
+		${indent}yet another note
+		${indent}
+		${indent}yet another note
+	EOF
 	git notes copy -f HEAD~2 HEAD &&
-	git log -1 > actual &&
+	git log -1 >actual &&
 	test_cmp expect actual &&
 	test "$(git notes list HEAD)" = "$(git notes list HEAD~2)"
 '
 
 test_expect_success 'cannot copy note from object without notes' '
-	: > a12 &&
-	git add a12 &&
-	test_tick &&
-	git commit -m 12th &&
-	: > a13 &&
-	git add a13 &&
-	test_tick &&
-	git commit -m 13th &&
+	test_commit 12th &&
+	test_commit 13th &&
 	test_must_fail git notes copy HEAD^ HEAD
 '
 
-cat > expect << EOF
-commit e5d4fb5698d564ab8c73551538ecaf2b0c666185
-Author: A U Thor <author@example.com>
-Date:   Thu Apr 7 15:25:13 2005 -0700
-
-    13th
-
-Notes (other):
-    yet another note
-$whitespace
-    yet another note
-
-commit 7038787dfe22a14c3867ce816dbba39845359719
-Author: A U Thor <author@example.com>
-Date:   Thu Apr 7 15:24:13 2005 -0700
-
-    12th
-
-Notes (other):
-    other note
-$whitespace
-    yet another note
-EOF
-
 test_expect_success 'git notes copy --stdin' '
+	cat >expect <<-EOF &&
+		commit e871aa61182b1d95d0a6fb75445d891722863b6b
+		Author: A U Thor <author@example.com>
+		Date:   Thu Apr 7 15:25:13 2005 -0700
+
+		${indent}13th
+
+		Notes:
+		${indent}yet another note
+		${indent}
+		${indent}yet another note
+
+		commit 65e263ded02ae4e8839bc151095113737579dc12
+		Author: A U Thor <author@example.com>
+		Date:   Thu Apr 7 15:24:13 2005 -0700
+
+		${indent}12th
+
+		Notes:
+		${indent}other note
+		${indent}
+		${indent}yet another note
+	EOF
 	(echo $(git rev-parse HEAD~3) $(git rev-parse HEAD^); \
 	echo $(git rev-parse HEAD~2) $(git rev-parse HEAD)) |
 	git notes copy --stdin &&
-	git log -2 > output &&
-	test_cmp expect output &&
+	git log -2 >actual &&
+	test_cmp expect actual &&
 	test "$(git notes list HEAD)" = "$(git notes list HEAD~2)" &&
 	test "$(git notes list HEAD^)" = "$(git notes list HEAD~3)"
 '
 
-cat > expect << EOF
-commit 37a0d4cba38afef96ba54a3ea567e6dac575700b
-Author: A U Thor <author@example.com>
-Date:   Thu Apr 7 15:27:13 2005 -0700
-
-    15th
-
-commit be28d8b4d9951ad940d229ee3b0b9ee3b1ec273d
-Author: A U Thor <author@example.com>
-Date:   Thu Apr 7 15:26:13 2005 -0700
-
-    14th
-EOF
-
 test_expect_success 'git notes copy --for-rewrite (unconfigured)' '
+	cat >expect <<-EOF &&
+		commit 4acf42e847e7fffbbf89ee365c20ac7caf40de89
+		Author: A U Thor <author@example.com>
+		Date:   Thu Apr 7 15:27:13 2005 -0700
+
+		${indent}15th
+
+		commit 07c85d77059393ed0154b8c96906547a59dfcddd
+		Author: A U Thor <author@example.com>
+		Date:   Thu Apr 7 15:26:13 2005 -0700
+
+		${indent}14th
+	EOF
 	test_commit 14th &&
 	test_commit 15th &&
 	(echo $(git rev-parse HEAD~3) $(git rev-parse HEAD^); \
 	echo $(git rev-parse HEAD~2) $(git rev-parse HEAD)) |
 	git notes copy --for-rewrite=foo &&
-	git log -2 > output &&
-	test_cmp expect output
+	git log -2 >actual &&
+	test_cmp expect actual
 '
 
-cat > expect << EOF
-commit 37a0d4cba38afef96ba54a3ea567e6dac575700b
-Author: A U Thor <author@example.com>
-Date:   Thu Apr 7 15:27:13 2005 -0700
-
-    15th
-
-Notes (other):
-    yet another note
-$whitespace
-    yet another note
-
-commit be28d8b4d9951ad940d229ee3b0b9ee3b1ec273d
-Author: A U Thor <author@example.com>
-Date:   Thu Apr 7 15:26:13 2005 -0700
-
-    14th
-
-Notes (other):
-    other note
-$whitespace
-    yet another note
-EOF
-
 test_expect_success 'git notes copy --for-rewrite (enabled)' '
-	git config notes.rewriteMode overwrite &&
-	git config notes.rewriteRef "refs/notes/*" &&
+	cat >expect <<-EOF &&
+		commit 4acf42e847e7fffbbf89ee365c20ac7caf40de89
+		Author: A U Thor <author@example.com>
+		Date:   Thu Apr 7 15:27:13 2005 -0700
+
+		${indent}15th
+
+		Notes:
+		${indent}yet another note
+		${indent}
+		${indent}yet another note
+
+		commit 07c85d77059393ed0154b8c96906547a59dfcddd
+		Author: A U Thor <author@example.com>
+		Date:   Thu Apr 7 15:26:13 2005 -0700
+
+		${indent}14th
+
+		Notes:
+		${indent}other note
+		${indent}
+		${indent}yet another note
+	EOF
+	test_config notes.rewriteMode overwrite &&
+	test_config notes.rewriteRef "refs/notes/*" &&
 	(echo $(git rev-parse HEAD~3) $(git rev-parse HEAD^); \
 	echo $(git rev-parse HEAD~2) $(git rev-parse HEAD)) |
 	git notes copy --for-rewrite=foo &&
-	git log -2 > output &&
-	test_cmp expect output
+	git log -2 >actual &&
+	test_cmp expect actual
 '
 
 test_expect_success 'git notes copy --for-rewrite (disabled)' '
-	git config notes.rewrite.bar false &&
+	test_config notes.rewrite.bar false &&
 	echo $(git rev-parse HEAD~3) $(git rev-parse HEAD) |
 	git notes copy --for-rewrite=bar &&
-	git log -2 > output &&
-	test_cmp expect output
+	git log -2 >actual &&
+	test_cmp expect actual
 '
 
-cat > expect << EOF
-commit 37a0d4cba38afef96ba54a3ea567e6dac575700b
-Author: A U Thor <author@example.com>
-Date:   Thu Apr 7 15:27:13 2005 -0700
-
-    15th
-
-Notes (other):
-    a fresh note
-EOF
-
 test_expect_success 'git notes copy --for-rewrite (overwrite)' '
+	cat >expect <<-EOF &&
+		commit 4acf42e847e7fffbbf89ee365c20ac7caf40de89
+		Author: A U Thor <author@example.com>
+		Date:   Thu Apr 7 15:27:13 2005 -0700
+
+		${indent}15th
+
+		Notes:
+		${indent}a fresh note
+	EOF
 	git notes add -f -m"a fresh note" HEAD^ &&
+	test_config notes.rewriteMode overwrite &&
+	test_config notes.rewriteRef "refs/notes/*" &&
 	echo $(git rev-parse HEAD^) $(git rev-parse HEAD) |
 	git notes copy --for-rewrite=foo &&
-	git log -1 > output &&
-	test_cmp expect output
+	git log -1 >actual &&
+	test_cmp expect actual
 '
 
 test_expect_success 'git notes copy --for-rewrite (ignore)' '
-	git config notes.rewriteMode ignore &&
+	test_config notes.rewriteMode ignore &&
+	test_config notes.rewriteRef "refs/notes/*" &&
 	echo $(git rev-parse HEAD^) $(git rev-parse HEAD) |
 	git notes copy --for-rewrite=foo &&
-	git log -1 > output &&
-	test_cmp expect output
+	git log -1 >actual &&
+	test_cmp expect actual
 '
 
-cat > expect << EOF
-commit 37a0d4cba38afef96ba54a3ea567e6dac575700b
-Author: A U Thor <author@example.com>
-Date:   Thu Apr 7 15:27:13 2005 -0700
-
-    15th
-
-Notes (other):
-    a fresh note
-$whitespace
-    another fresh note
-EOF
-
 test_expect_success 'git notes copy --for-rewrite (append)' '
+	cat >expect <<-EOF &&
+		commit 4acf42e847e7fffbbf89ee365c20ac7caf40de89
+		Author: A U Thor <author@example.com>
+		Date:   Thu Apr 7 15:27:13 2005 -0700
+
+		${indent}15th
+
+		Notes:
+		${indent}a fresh note
+		${indent}
+		${indent}another fresh note
+	EOF
 	git notes add -f -m"another fresh note" HEAD^ &&
-	git config notes.rewriteMode concatenate &&
+	test_config notes.rewriteMode concatenate &&
+	test_config notes.rewriteRef "refs/notes/*" &&
 	echo $(git rev-parse HEAD^) $(git rev-parse HEAD) |
 	git notes copy --for-rewrite=foo &&
-	git log -1 > output &&
-	test_cmp expect output
+	git log -1 >actual &&
+	test_cmp expect actual
 '
 
-cat > expect << EOF
-commit 37a0d4cba38afef96ba54a3ea567e6dac575700b
-Author: A U Thor <author@example.com>
-Date:   Thu Apr 7 15:27:13 2005 -0700
-
-    15th
-
-Notes (other):
-    a fresh note
-$whitespace
-    another fresh note
-$whitespace
-    append 1
-$whitespace
-    append 2
-EOF
-
 test_expect_success 'git notes copy --for-rewrite (append two to one)' '
+	cat >expect <<-EOF &&
+		commit 4acf42e847e7fffbbf89ee365c20ac7caf40de89
+		Author: A U Thor <author@example.com>
+		Date:   Thu Apr 7 15:27:13 2005 -0700
+
+		${indent}15th
+
+		Notes:
+		${indent}a fresh note
+		${indent}
+		${indent}another fresh note
+		${indent}
+		${indent}append 1
+		${indent}
+		${indent}append 2
+	EOF
 	git notes add -f -m"append 1" HEAD^ &&
 	git notes add -f -m"append 2" HEAD^^ &&
+	test_config notes.rewriteMode concatenate &&
+	test_config notes.rewriteRef "refs/notes/*" &&
 	(echo $(git rev-parse HEAD^) $(git rev-parse HEAD);
 	echo $(git rev-parse HEAD^^) $(git rev-parse HEAD)) |
 	git notes copy --for-rewrite=foo &&
-	git log -1 > output &&
-	test_cmp expect output
+	git log -1 >actual &&
+	test_cmp expect actual
 '
 
 test_expect_success 'git notes copy --for-rewrite (append empty)' '
 	git notes remove HEAD^ &&
+	test_config notes.rewriteMode concatenate &&
+	test_config notes.rewriteRef "refs/notes/*" &&
 	echo $(git rev-parse HEAD^) $(git rev-parse HEAD) |
 	git notes copy --for-rewrite=foo &&
-	git log -1 > output &&
-	test_cmp expect output
+	git log -1 >actual &&
+	test_cmp expect actual
 '
 
-cat > expect << EOF
-commit 37a0d4cba38afef96ba54a3ea567e6dac575700b
-Author: A U Thor <author@example.com>
-Date:   Thu Apr 7 15:27:13 2005 -0700
-
-    15th
-
-Notes (other):
-    replacement note 1
-EOF
-
 test_expect_success 'GIT_NOTES_REWRITE_MODE works' '
+	cat >expect <<-EOF &&
+		commit 4acf42e847e7fffbbf89ee365c20ac7caf40de89
+		Author: A U Thor <author@example.com>
+		Date:   Thu Apr 7 15:27:13 2005 -0700
+
+		${indent}15th
+
+		Notes:
+		${indent}replacement note 1
+	EOF
+	test_config notes.rewriteMode concatenate &&
+	test_config notes.rewriteRef "refs/notes/*" &&
 	git notes add -f -m"replacement note 1" HEAD^ &&
 	echo $(git rev-parse HEAD^) $(git rev-parse HEAD) |
 	GIT_NOTES_REWRITE_MODE=overwrite git notes copy --for-rewrite=foo &&
-	git log -1 > output &&
-	test_cmp expect output
+	git log -1 >actual &&
+	test_cmp expect actual
 '
 
-cat > expect << EOF
-commit 37a0d4cba38afef96ba54a3ea567e6dac575700b
-Author: A U Thor <author@example.com>
-Date:   Thu Apr 7 15:27:13 2005 -0700
-
-    15th
-
-Notes (other):
-    replacement note 2
-EOF
-
 test_expect_success 'GIT_NOTES_REWRITE_REF works' '
-	git config notes.rewriteMode overwrite &&
+	cat >expect <<-EOF &&
+		commit 4acf42e847e7fffbbf89ee365c20ac7caf40de89
+		Author: A U Thor <author@example.com>
+		Date:   Thu Apr 7 15:27:13 2005 -0700
+
+		${indent}15th
+
+		Notes:
+		${indent}replacement note 2
+	EOF
 	git notes add -f -m"replacement note 2" HEAD^ &&
-	git config --unset-all notes.rewriteRef &&
+	test_config notes.rewriteMode overwrite &&
+	test_unconfig notes.rewriteRef &&
 	echo $(git rev-parse HEAD^) $(git rev-parse HEAD) |
 	GIT_NOTES_REWRITE_REF=refs/notes/commits:refs/notes/other \
 		git notes copy --for-rewrite=foo &&
-	git log -1 > output &&
-	test_cmp expect output
+	git log -1 >actual &&
+	test_cmp expect actual
 '
 
 test_expect_success 'GIT_NOTES_REWRITE_REF overrides config' '
-	git config notes.rewriteRef refs/notes/other &&
 	git notes add -f -m"replacement note 3" HEAD^ &&
+	test_config notes.rewriteMode overwrite &&
+	test_config notes.rewriteRef refs/notes/other &&
 	echo $(git rev-parse HEAD^) $(git rev-parse HEAD) |
 	GIT_NOTES_REWRITE_REF= git notes copy --for-rewrite=foo &&
-	git log -1 > output &&
-	test_cmp expect output
+	git log -1 >actual &&
+	test_cmp expect actual
 '
 
 test_expect_success 'git notes copy diagnoses too many or too few parameters' '
 	test_must_fail git notes copy &&
 	test_must_fail git notes copy one two three
 '
 
 test_expect_success 'git notes get-ref (no overrides)' '
-	git config --unset core.notesRef &&
+	test_unconfig core.notesRef &&
 	sane_unset GIT_NOTES_REF &&
 	test "$(git notes get-ref)" = "refs/notes/commits"
 '
 
 test_expect_success 'git notes get-ref (core.notesRef)' '
-	git config core.notesRef refs/notes/foo &&
+	test_config core.notesRef refs/notes/foo &&
 	test "$(git notes get-ref)" = "refs/notes/foo"
 '
 
 test_expect_success 'git notes get-ref (GIT_NOTES_REF)' '
 	test "$(GIT_NOTES_REF=refs/notes/bar git notes get-ref)" = "refs/notes/bar"
 '
 
 test_expect_success 'git notes get-ref (--ref)' '
 	test "$(GIT_NOTES_REF=refs/notes/bar git notes --ref=baz get-ref)" = "refs/notes/baz"
 '
 
+test_expect_success 'setup testing of empty notes' '
+	test_unconfig core.notesRef &&
+	test_commit 16th &&
+	empty_blob=$(git hash-object -w /dev/null) &&
+	echo "$empty_blob" >expect_empty
+'
+
+while read cmd
+do
+	test_expect_success "'git notes $cmd' removes empty note" "
+		test_might_fail git notes remove HEAD &&
+		MSG= git notes $cmd &&
+		test_must_fail git notes list HEAD
+	"
+
+	test_expect_success "'git notes $cmd --allow-empty' stores empty note" "
+		test_might_fail git notes remove HEAD &&
+		MSG= git notes $cmd --allow-empty &&
+		git notes list HEAD >actual &&
+		test_cmp expect_empty actual
+	"
+done <<\EOF
+add
+add -F /dev/null
+add -m ""
+add -c "$empty_blob"
+add -C "$empty_blob"
+append
+append -F /dev/null
+append -m ""
+append -c "$empty_blob"
+append -C "$empty_blob"
+edit
+EOF
+
+test_expect_success 'empty notes are displayed by git log' '
+	test_commit 17th &&
+	git log -1 >expect &&
+	cat >>expect <<-EOF &&
+
+		Notes:
+	EOF
+	git notes add -C "$empty_blob" --allow-empty &&
+	git log -1 >actual &&
+	test_cmp expect actual
+'
+
 test_done
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t3507-cherry-pick-conflict.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t3507-cherry-pick-conflict.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t3507-cherry-pick-conflict.sh	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t3507-cherry-pick-conflict.sh	2015-02-06 05:40:08.000000000 +0800
@@ -348,22 +348,48 @@
 	test $(git show -s |grep -c "Signed-off-by") = 1
 '
 
 test_expect_success 'commit after failed cherry-pick adds -s at the right place' '
 	pristine_detach initial &&
 	test_must_fail git cherry-pick picked &&
+
 	git commit -a -s &&
-	pwd &&
-	cat <<EOF > expected &&
-picked
 
-Signed-off-by: C O Mitter <committer@example.com>
+	# Do S-o-b and Conflicts appear in the right order?
+	cat <<-\EOF >expect &&
+	Signed-off-by: C O Mitter <committer@example.com>
+	# Conflicts:
+	EOF
+	grep -e "^# Conflicts:" -e '^Signed-off-by' <.git/COMMIT_EDITMSG >actual &&
+	test_cmp expect actual &&
+
+	cat <<-\EOF >expected &&
+	picked
 
-Conflicts:
-	foo
-EOF
+	Signed-off-by: C O Mitter <committer@example.com>
+	EOF
 
-	git show -s --pretty=format:%B > actual &&
+	git show -s --pretty=format:%B >actual &&
 	test_cmp expected actual
 '
 
+test_expect_success 'commit --amend -s places the sign-off at the right place' '
+	pristine_detach initial &&
+	test_must_fail git cherry-pick picked &&
+
+	# emulate old-style conflicts block
+	mv .git/MERGE_MSG .git/MERGE_MSG+ &&
+	sed -e "/^# Conflicts:/,\$s/^# *//" <.git/MERGE_MSG+ >.git/MERGE_MSG &&
+
+	git commit -a &&
+	git commit --amend -s &&
+
+	# Do S-o-b and Conflicts appear in the right order?
+	cat <<-\EOF >expect &&
+	Signed-off-by: C O Mitter <committer@example.com>
+	Conflicts:
+	EOF
+	grep -e "^Conflicts:" -e '^Signed-off-by' <.git/COMMIT_EDITMSG >actual &&
+	test_cmp expect actual
+'
+
 test_done
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t4008-diff-break-rewrite.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t4008-diff-break-rewrite.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t4008-diff-break-rewrite.sh	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t4008-diff-break-rewrite.sh	2015-02-06 05:40:08.000000000 +0800
@@ -120,16 +120,16 @@
 
 test_expect_success \
     'run diff with -B -M' \
     'git diff-index -B -M "$tree" >current'
 
 # file0 changed from regular to symlink.  file1 is very close to the preimage of file0.
-# because we break file0, file1 can become a rename of it.
+# the change does not make file0 disappear, so file1 is denoted as a copy of file0
 cat >expected <<\EOF
 :100644 120000 f5deac7be59e7eeab8657fd9ae706fd6a57daed2 67be421f88824578857624f7b3dc75e99a8a1481 T	file0
-:100644 100644 6ff87c4664981e4397625791c8ea3bbb5f2279a3 f5deac7be59e7eeab8657fd9ae706fd6a57daed2 R	file0	file1
+:100644 100644 6ff87c4664981e4397625791c8ea3bbb5f2279a3 f5deac7be59e7eeab8657fd9ae706fd6a57daed2 C	file0	file1
 EOF
 
 test_expect_success \
     'validate result of -B -M (#6)' \
     'compare_diff_raw expected current'
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t4023-diff-rename-typechange.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t4023-diff-rename-typechange.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t4023-diff-rename-typechange.sh	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t4023-diff-rename-typechange.sh	2015-02-06 05:40:08.000000000 +0800
@@ -73,13 +73,14 @@
 '
 
 test_expect_success 'moves and renames' '
 
 	git diff-tree three four -r --name-status -B -M | sort >actual &&
 	{
-		echo "R100	foo	bar"
+		# see -B -M (#6) in t4008
+		echo "C100	foo	bar"
 		echo "T100	foo"
 	} | sort >expect &&
 	test_cmp expect actual
 
 '
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t4026-color.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t4026-color.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t4026-color.sh	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t4026-color.sh	2015-02-06 05:40:08.000000000 +0800
@@ -42,20 +42,39 @@
 '
 
 test_expect_success 'fg bg attr...' '
 	color "blue bold dim ul blink reverse" "[1;2;4;5;7;34m"
 '
 
+# note that nobold and nodim are the same code (22)
+test_expect_success 'attr negation' '
+	color "nobold nodim noul noblink noreverse" "[22;24;25;27m"
+'
+
 test_expect_success 'long color specification' '
 	color "254 255 bold dim ul blink reverse" "[1;2;4;5;7;38;5;254;48;5;255m"
 '
 
+test_expect_success 'absurdly long color specification' '
+	color \
+	  "#ffffff #ffffff bold nobold dim nodim ul noul blink noblink reverse noreverse" \
+	  "[1;2;4;5;7;22;24;25;27;38;2;255;255;255;48;2;255;255;255m"
+'
+
+test_expect_success '0-7 are aliases for basic ANSI color names' '
+	color "0 7" "[30;47m"
+'
+
 test_expect_success '256 colors' '
 	color "254 bold 255" "[1;38;5;254;48;5;255m"
 '
 
+test_expect_success '24-bit colors' '
+	color "#ff00ff black" "[38;2;255;0;255;40m"
+'
+
 test_expect_success '"normal" yields no color at all"' '
 	color "normal black" "[40m"
 '
 
 test_expect_success '-1 is a synonym for "normal"' '
 	color "-1 black" "[40m"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t4150-am.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t4150-am.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t4150-am.sh	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t4150-am.sh	2015-02-06 05:40:08.000000000 +0800
@@ -82,12 +82,13 @@
 	test_tick &&
 	git commit -s -F msg &&
 	git tag second &&
 
 	git format-patch --stdout first >patch1 &&
 	{
+		echo "Message-Id: <1226501681-24923-1-git-send-email-bda@mnsspb.ru>" &&
 		echo "X-Fake-Field: Line One" &&
 		echo "X-Fake-Field: Line Two" &&
 		echo "X-Fake-Field: Line Three" &&
 		git format-patch --stdout first | sed -e "1d"
 	} > patch1.eml &&
 	{
@@ -533,7 +534,29 @@
 	test_tick &&
 	test_must_fail git am empty-file 2>actual &&
 	echo Patch format detection failed. >expected &&
 	test_i18ncmp expected actual
 '
 
+test_expect_success 'am --message-id really adds the message id' '
+	rm -fr .git/rebase-apply &&
+	git reset --hard &&
+	git checkout HEAD^ &&
+	git am --message-id patch1.eml &&
+	test_path_is_missing .git/rebase-apply &&
+	git cat-file commit HEAD | tail -n1 >actual &&
+	grep Message-Id patch1.eml >expected &&
+	test_cmp expected actual
+'
+
+test_expect_success 'am --message-id -s signs off after the message id' '
+	rm -fr .git/rebase-apply &&
+	git reset --hard &&
+	git checkout HEAD^ &&
+	git am -s --message-id patch1.eml &&
+	test_path_is_missing .git/rebase-apply &&
+	git cat-file commit HEAD | tail -n2 | head -n1 >actual &&
+	grep Message-Id patch1.eml >expected &&
+	test_cmp expected actual
+'
+
 test_done
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t5000-tar-tree.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t5000-tar-tree.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t5000-tar-tree.sh	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t5000-tar-tree.sh	2015-02-06 05:40:08.000000000 +0800
@@ -98,13 +98,13 @@
     'populate workdir' \
     'mkdir a &&
      echo simple textfile >a/a &&
      ten=0123456789 && hundred=$ten$ten$ten$ten$ten$ten$ten$ten$ten$ten &&
      echo long filename >a/four$hundred &&
      mkdir a/bin &&
-     cp /bin/sh a/bin &&
+     test-genrandom "frotz" 500000 >a/bin/sh &&
      printf "A\$Format:%s\$O" "$SUBSTFORMAT" >a/substfile1 &&
      printf "A not substituted O" >a/substfile2 &&
      if test_have_prereq SYMLINKS; then
 	ln -s a a/l1
      else
 	printf %s a > a/l1
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t5100: info0012--message-id
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t5100: msg0012--message-id
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t5100: patch0012--message-id
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t5100-mailinfo.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t5100-mailinfo.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t5100-mailinfo.sh	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t5100-mailinfo.sh	2015-02-06 05:40:08.000000000 +0800
@@ -32,12 +32,16 @@
 			check_mailinfo $mail --scissors
 		fi &&
 		if test -f "$TEST_DIRECTORY"/t5100/msg$mail--no-inbody-headers
 		then
 			check_mailinfo $mail --no-inbody-headers
 		fi
+		if test -f "$TEST_DIRECTORY"/t5100/msg$mail--message-id
+		then
+			check_mailinfo $mail --message-id
+		fi
 	'
 done
 
 
 test_expect_success 'split box with rfc2047 samples' \
 	'mkdir rfc2047 &&
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t5400-send-pack.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t5400-send-pack.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t5400-send-pack.sh	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t5400-send-pack.sh	2015-02-06 05:40:08.000000000 +0800
@@ -73,14 +73,13 @@
 	# this should update
 	git send-pack --force ./victim master &&
 	victim_head=$(cd victim && git rev-parse --verify master) &&
 	test "$victim_head" = "$pushed_head"
 '
 
-test_expect_success \
-        'push can be used to delete a ref' '
+test_expect_success 'push can be used to delete a ref' '
 	( cd victim && git branch extra master ) &&
 	git send-pack ./victim :extra master &&
 	( cd victim &&
 	  test_must_fail git rev-parse --verify extra )
 '
 
@@ -193,25 +192,12 @@
 	git clone parent child &&
 	(
 	    cd child && git reset --hard HEAD^
 	)
 }
 
-rewound_push_succeeded() {
-	cmp ../parent/.git/refs/heads/master .git/refs/heads/master
-}
-
-rewound_push_failed() {
-	if rewound_push_succeeded
-	then
-		false
-	else
-		true
-	fi
-}
-
 test_expect_success 'pushing explicit refspecs respects forcing' '
 	rewound_push_setup &&
 	parent_orig=$(cd parent && git rev-parse --verify master) &&
 	(
 	    cd child &&
 	    test_must_fail git send-pack ../parent \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t5505-remote.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t5505-remote.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t5505-remote.sh	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t5505-remote.sh	2015-02-06 05:40:08.000000000 +0800
@@ -1110,7 +1110,12 @@
 # set-branches takes any number of args
 test_extra_arg set-url origin newurl oldurl
 # show takes any number of args
 # prune takes any number of args
 # update takes any number of args
 
+test_expect_success 'add remote matching the "insteadOf" URL' '
+	git config url.xyz@example.com.insteadOf backup &&
+	git remote add backup xyz@example.com
+'
+
 test_done
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t5516-fetch-push.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t5516-fetch-push.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t5516-fetch-push.sh	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t5516-fetch-push.sh	2015-02-06 05:40:08.000000000 +0800
@@ -1327,7 +1327,111 @@
 		echo "two@{0} fetch .. master:two: storing head" >expect &&
 		git log -g --format="%gd %gs" two >actual &&
 		test_cmp expect actual
 	)
 '
 
+test_expect_success 'receive.denyCurrentBranch = updateInstead' '
+	git push testrepo master &&
+	(
+		cd testrepo &&
+		git reset --hard &&
+		git config receive.denyCurrentBranch updateInstead
+	) &&
+	test_commit third path2 &&
+
+	# Try pushing into a repository with pristine working tree
+	git push testrepo master &&
+	(
+		cd testrepo &&
+		git update-index -q --refresh &&
+		git diff-files --quiet -- &&
+		git diff-index --quiet --cached HEAD -- &&
+		test third = "$(cat path2)" &&
+		test $(git -C .. rev-parse HEAD) = $(git rev-parse HEAD)
+	) &&
+
+	# Try pushing into a repository with working tree needing a refresh
+	(
+		cd testrepo &&
+		git reset --hard HEAD^ &&
+		test $(git -C .. rev-parse HEAD^) = $(git rev-parse HEAD) &&
+		test-chmtime +100 path1
+	) &&
+	git push testrepo master &&
+	(
+		cd testrepo &&
+		git update-index -q --refresh &&
+		git diff-files --quiet -- &&
+		git diff-index --quiet --cached HEAD -- &&
+		test_cmp ../path1 path1 &&
+		test third = "$(cat path2)" &&
+		test $(git -C .. rev-parse HEAD) = $(git rev-parse HEAD)
+	) &&
+
+	# Update what is to be pushed
+	test_commit fourth path2 &&
+
+	# Try pushing into a repository with a dirty working tree
+	# (1) the working tree updated
+	(
+		cd testrepo &&
+		echo changed >path1
+	) &&
+	test_must_fail git push testrepo master &&
+	(
+		cd testrepo &&
+		test $(git -C .. rev-parse HEAD^) = $(git rev-parse HEAD) &&
+		git diff --quiet --cached &&
+		test changed = "$(cat path1)"
+	) &&
+
+	# (2) the index updated
+	(
+		cd testrepo &&
+		echo changed >path1 &&
+		git add path1
+	) &&
+	test_must_fail git push testrepo master &&
+	(
+		cd testrepo &&
+		test $(git -C .. rev-parse HEAD^) = $(git rev-parse HEAD) &&
+		git diff --quiet &&
+		test changed = "$(cat path1)"
+	) &&
+
+	# Introduce a new file in the update
+	test_commit fifth path3 &&
+
+	# (3) the working tree has an untracked file that would interfere
+	(
+		cd testrepo &&
+		git reset --hard &&
+		echo changed >path3
+	) &&
+	test_must_fail git push testrepo master &&
+	(
+		cd testrepo &&
+		test $(git -C .. rev-parse HEAD^^) = $(git rev-parse HEAD) &&
+		git diff --quiet &&
+		git diff --quiet --cached &&
+		test changed = "$(cat path3)"
+	) &&
+
+	# (4) the target changes to what gets pushed but it still is a change
+	(
+		cd testrepo &&
+		git reset --hard &&
+		echo fifth >path3 &&
+		git add path3
+	) &&
+	test_must_fail git push testrepo master &&
+	(
+		cd testrepo &&
+		test $(git -C .. rev-parse HEAD^^) = $(git rev-parse HEAD) &&
+		git diff --quiet &&
+		test fifth = "$(cat path3)"
+	)
+
+'
+
 test_done
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t5527-fetch-odd-refs.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t5527-fetch-odd-refs.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t5527-fetch-odd-refs.sh	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t5527-fetch-odd-refs.sh	2015-02-06 05:40:08.000000000 +0800
@@ -23,7 +23,40 @@
 	git clone --bare file://"$PWD" suffix &&
 	echo three >expect &&
 	git --git-dir=suffix log -1 --format=%s refs/heads/master >actual &&
 	test_cmp expect actual
 '
 
+test_expect_success 'try to create repo with absurdly long refname' '
+	ref240=$_z40/$_z40/$_z40/$_z40/$_z40/$_z40 &&
+	ref1440=$ref240/$ref240/$ref240/$ref240/$ref240/$ref240 &&
+	git init long &&
+	(
+		cd long &&
+		test_commit long &&
+		test_commit master
+	) &&
+	if git -C long update-ref refs/heads/$ref1440 long; then
+		test_set_prereq LONG_REF
+	else
+		echo >&2 "long refs not supported"
+	fi
+'
+
+test_expect_success LONG_REF 'fetch handles extremely long refname' '
+	git fetch long refs/heads/*:refs/remotes/long/* &&
+	cat >expect <<-\EOF &&
+	long
+	master
+	EOF
+	git for-each-ref --format="%(subject)" refs/remotes/long >actual &&
+	test_cmp expect actual
+'
+
+test_expect_success LONG_REF 'push handles extremely long refname' '
+	git push long :refs/heads/$ref1440 &&
+	git -C long for-each-ref --format="%(subject)" refs/heads >actual &&
+	echo master >expect &&
+	test_cmp expect actual
+'
+
 test_done
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t5700-clone-reference.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t5700-clone-reference.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t5700-clone-reference.sh	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t5700-clone-reference.sh	2015-02-06 05:40:08.000000000 +0800
@@ -195,7 +195,24 @@
 test_expect_success 'clone using repo pointed at by gitfile as reference' '
 	git clone --reference=M/.git A O &&
 	echo "$base_dir/L/objects" >expected &&
 	test_cmp expected "$base_dir/O/.git/objects/info/alternates"
 '
 
+test_expect_success 'clone and dissociate from reference' '
+	git init P &&
+	(
+		cd P &&	test_commit one
+	) &&
+	git clone P Q &&
+	(
+		cd Q && test_commit two
+	) &&
+	git clone --no-local --reference=P Q R &&
+	git clone --no-local --reference=P --dissociate Q S &&
+	# removing the reference P would corrupt R but not S
+	rm -fr P &&
+	test_must_fail git -C R fsck &&
+	git -C S fsck
+'
+
 test_done
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t6030-bisect-porcelain.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t6030-bisect-porcelain.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t6030-bisect-porcelain.sh	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t6030-bisect-porcelain.sh	2015-02-06 05:40:08.000000000 +0800
@@ -776,7 +776,16 @@
 	test_must_fail git bisect skip &&
 	git bisect log >bisect-skip-log.txt &&
 	test_cmp expected.bisect-skip-log bisect-skip-log.txt &&
 	git bisect reset
 '
 
+test_expect_success '"git bisect bad HEAD" behaves as "git bisect bad"' '
+	git checkout parallel &&
+	git bisect start HEAD $HASH1 &&
+	git bisect good HEAD &&
+	git bisect bad HEAD &&
+	test "$HASH6" = $(git rev-parse --verify HEAD) &&
+	git bisect reset
+'
+
 test_done
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t6300-for-each-ref.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t6300-for-each-ref.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t6300-for-each-ref.sh	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t6300-for-each-ref.sh	2015-02-06 05:40:08.000000000 +0800
@@ -331,12 +331,25 @@
 
 test_expect_success 'Check that :track[short] cannot be used with other atoms' '
 	test_must_fail git for-each-ref --format="%(refname:track)" 2>/dev/null &&
 	test_must_fail git for-each-ref --format="%(refname:trackshort)" 2>/dev/null
 '
 
+test_expect_success 'Check that :track[short] works when upstream is invalid' '
+	cat >expected <<-\EOF &&
+
+
+	EOF
+	test_when_finished "git config branch.master.merge refs/heads/master" &&
+	git config branch.master.merge refs/heads/does-not-exist &&
+	git for-each-ref \
+		--format="%(upstream:track)$LF%(upstream:trackshort)" \
+		refs/heads >actual &&
+	test_cmp expected actual
+'
+
 cat >expected <<EOF
 $(git rev-parse --short HEAD)
 EOF
 
 test_expect_success 'Check short objectname format' '
 	git for-each-ref --format="%(objectname:short)" refs/heads >actual &&
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t7004-tag.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t7004-tag.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t7004-tag.sh	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t7004-tag.sh	2015-02-06 05:40:08.000000000 +0800
@@ -1078,13 +1078,13 @@
 '
 
 # usage with rfc1991 signatures
 get_tag_header rfc1991-signed-tag $commit commit $time >expect
 echo "RFC1991 signed tag" >>expect
 echo '-----BEGIN PGP MESSAGE-----' >>expect
-test_expect_success GPG \
+test_expect_success GPG,RFC1991 \
 	'creating a signed tag with rfc1991' '
 	echo "rfc1991" >gpghome/gpg.conf &&
 	git tag -s -m "RFC1991 signed tag" rfc1991-signed-tag $commit &&
 	get_tag_msg rfc1991-signed-tag >actual &&
 	test_cmp expect actual
 '
@@ -1092,27 +1092,27 @@
 cat >fakeeditor <<'EOF'
 #!/bin/sh
 cp "$1" actual
 EOF
 chmod +x fakeeditor
 
-test_expect_success GPG \
+test_expect_success GPG,RFC1991 \
 	'reediting a signed tag body omits signature' '
 	echo "rfc1991" >gpghome/gpg.conf &&
 	echo "RFC1991 signed tag" >expect &&
 	GIT_EDITOR=./fakeeditor git tag -f -s rfc1991-signed-tag $commit &&
 	test_cmp expect actual
 '
 
-test_expect_success GPG \
+test_expect_success GPG,RFC1991 \
 	'verifying rfc1991 signature' '
 	echo "rfc1991" >gpghome/gpg.conf &&
 	git tag -v rfc1991-signed-tag
 '
 
-test_expect_success GPG \
+test_expect_success GPG,RFC1991 \
 	'list tag with rfc1991 signature' '
 	echo "rfc1991" >gpghome/gpg.conf &&
 	echo "rfc1991-signed-tag RFC1991 signed tag" >expect &&
 	git tag -l -n1 rfc1991-signed-tag >actual &&
 	test_cmp expect actual &&
 	git tag -l -n2 rfc1991-signed-tag >actual &&
@@ -1120,29 +1120,29 @@
 	git tag -l -n999 rfc1991-signed-tag >actual &&
 	test_cmp expect actual
 '
 
 rm -f gpghome/gpg.conf
 
-test_expect_success GPG \
+test_expect_success GPG,RFC1991 \
 	'verifying rfc1991 signature without --rfc1991' '
 	git tag -v rfc1991-signed-tag
 '
 
-test_expect_success GPG \
+test_expect_success GPG,RFC1991 \
 	'list tag with rfc1991 signature without --rfc1991' '
 	echo "rfc1991-signed-tag RFC1991 signed tag" >expect &&
 	git tag -l -n1 rfc1991-signed-tag >actual &&
 	test_cmp expect actual &&
 	git tag -l -n2 rfc1991-signed-tag >actual &&
 	test_cmp expect actual &&
 	git tag -l -n999 rfc1991-signed-tag >actual &&
 	test_cmp expect actual
 '
 
-test_expect_success GPG \
+test_expect_success GPG,RFC1991 \
 	'reediting a signed tag body omits signature' '
 	echo "RFC1991 signed tag" >expect &&
 	GIT_EDITOR=./fakeeditor git tag -f -s rfc1991-signed-tag $commit &&
 	test_cmp expect actual
 '
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t7513-interpret-trailers.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t7513-interpret-trailers.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t7513-interpret-trailers.sh	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t7513-interpret-trailers.sh	2015-02-06 05:40:08.000000000 +0800
@@ -210,13 +210,13 @@
 	cat basic_patch >>expected &&
 	git interpret-trailers complex_message input >actual &&
 	test_cmp expected actual
 '
 
 test_expect_success 'with message that has comments' '
-	cat basic_message >>message_with_comments &&
+	cat basic_message >message_with_comments &&
 	sed -e "s/ Z\$/ /" >>message_with_comments <<-\EOF &&
 		# comment
 
 		# other comment
 		Cc: Z
 		# yet another comment
@@ -229,18 +229,50 @@
 	cat basic_message >expected &&
 	cat >>expected <<-\EOF &&
 		# comment
 
 		Reviewed-by: Johan
 		Cc: Peff
+		# last comment
+
 	EOF
 	cat basic_patch >>expected &&
 	git interpret-trailers --trim-empty --trailer "Cc: Peff" message_with_comments >actual &&
 	test_cmp expected actual
 '
 
+test_expect_success 'with message that has an old style conflict block' '
+	cat basic_message >message_with_comments &&
+	sed -e "s/ Z\$/ /" >>message_with_comments <<-\EOF &&
+		# comment
+
+		# other comment
+		Cc: Z
+		# yet another comment
+		Reviewed-by: Johan
+		Reviewed-by: Z
+		# last comment
+
+		Conflicts:
+
+	EOF
+	cat basic_message >expected &&
+	cat >>expected <<-\EOF &&
+		# comment
+
+		Reviewed-by: Johan
+		Cc: Peff
+		# last comment
+
+		Conflicts:
+
+	EOF
+	git interpret-trailers --trim-empty --trailer "Cc: Peff" message_with_comments >actual &&
+	test_cmp expected actual
+'
+
 test_expect_success 'with commit complex message and trailer args' '
 	cat complex_message_body >expected &&
 	sed -e "s/ Z\$/ /" >>expected <<-\EOF &&
 		Fixes: Z
 		Acked-by= Z
 		Reviewed-by: Z
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t9001-send-email.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t9001-send-email.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t9001-send-email.sh	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t9001-send-email.sh	2015-02-06 05:40:08.000000000 +0800
@@ -3,56 +3,58 @@
 test_description='git send-email'
 . ./test-lib.sh
 
 # May be altered later in the test
 PREREQ="PERL"
 
-test_expect_success $PREREQ \
-    'prepare reference tree' \
-    'echo "1A quick brown fox jumps over the" >file &&
-     echo "lazy dog" >>file &&
-     git add file &&
-     GIT_AUTHOR_NAME="A" git commit -a -m "Initial."'
-
-test_expect_success $PREREQ \
-    'Setup helper tool' \
-    '(echo "#!$SHELL_PATH"
-      echo shift
-      echo output=1
-      echo "while test -f commandline\$output; do output=\$((\$output+1)); done"
-      echo for a
-      echo do
-      echo "  echo \"!\$a!\""
-      echo "done >commandline\$output"
-      echo "cat > msgtxt\$output"
-      ) >fake.sendmail &&
-     chmod +x ./fake.sendmail &&
-     git add fake.sendmail &&
-     GIT_AUTHOR_NAME="A" git commit -a -m "Second."'
+test_expect_success $PREREQ 'prepare reference tree' '
+	echo "1A quick brown fox jumps over the" >file &&
+	echo "lazy dog" >>file &&
+	git add file &&
+	GIT_AUTHOR_NAME="A" git commit -a -m "Initial."
+'
+
+test_expect_success $PREREQ 'Setup helper tool' '
+	write_script fake.sendmail <<-\EOF &&
+	shift
+	output=1
+	while test -f commandline$output
+	do
+		output=$(($output+1))
+	done
+	for a
+	do
+		echo "!$a!"
+	done >commandline$output
+	cat >"msgtxt$output"
+	EOF
+	git add fake.sendmail &&
+	GIT_AUTHOR_NAME="A" git commit -a -m "Second."
+'
 
-clean_fake_sendmail() {
+clean_fake_sendmail () {
 	rm -f commandline* msgtxt*
 }
 
 test_expect_success $PREREQ 'Extract patches' '
-    patches=`git format-patch -s --cc="One <one@example.com>" --cc=two@example.com -n HEAD^1`
+	patches=`git format-patch -s --cc="One <one@example.com>" --cc=two@example.com -n HEAD^1`
 '
 
 # Test no confirm early to ensure remaining tests will not hang
 test_no_confirm () {
 	rm -f no_confirm_okay
 	echo n | \
 		GIT_SEND_EMAIL_NOTTY=1 \
 		git send-email \
 		--from="Example <from@example.com>" \
 		--to=nobody@example.com \
 		--smtp-server="$(pwd)/fake.sendmail" \
 		$@ \
-		$patches > stdout &&
+		$patches >stdout &&
 		test_must_fail grep "Send this email" stdout &&
-		> no_confirm_okay
+		>no_confirm_okay
 }
 
 # Exit immediately to prevent hang if a no-confirm test fails
 check_no_confirm () {
 	if ! test -f no_confirm_okay
 	then
@@ -79,67 +81,67 @@
 	git config sendemail.confirm never &&
 	test_no_confirm --compose --subject=foo &&
 	check_no_confirm
 '
 
 test_expect_success $PREREQ 'Send patches' '
-     git send-email --suppress-cc=sob --from="Example <nobody@example.com>" --to=nobody@example.com --smtp-server="$(pwd)/fake.sendmail" $patches 2>errors
+	git send-email --suppress-cc=sob --from="Example <nobody@example.com>" --to=nobody@example.com --smtp-server="$(pwd)/fake.sendmail" $patches 2>errors
 '
 
 test_expect_success $PREREQ 'setup expect' '
-cat >expected <<\EOF
-!nobody@example.com!
-!author@example.com!
-!one@example.com!
-!two@example.com!
-EOF
+	cat >expected <<-\EOF
+	!nobody@example.com!
+	!author@example.com!
+	!one@example.com!
+	!two@example.com!
+	EOF
 '
 
-test_expect_success $PREREQ \
-    'Verify commandline' \
-    'test_cmp expected commandline1'
+test_expect_success $PREREQ 'Verify commandline' '
+	test_cmp expected commandline1
+'
 
 test_expect_success $PREREQ 'Send patches with --envelope-sender' '
-    clean_fake_sendmail &&
-     git send-email --envelope-sender="Patch Contributor <patch@example.com>" --suppress-cc=sob --from="Example <nobody@example.com>" --to=nobody@example.com --smtp-server="$(pwd)/fake.sendmail" $patches 2>errors
+	clean_fake_sendmail &&
+	git send-email --envelope-sender="Patch Contributor <patch@example.com>" --suppress-cc=sob --from="Example <nobody@example.com>" --to=nobody@example.com --smtp-server="$(pwd)/fake.sendmail" $patches 2>errors
 '
 
 test_expect_success $PREREQ 'setup expect' '
-cat >expected <<\EOF
-!patch@example.com!
-!-i!
-!nobody@example.com!
-!author@example.com!
-!one@example.com!
-!two@example.com!
-EOF
+	cat >expected <<-\EOF
+	!patch@example.com!
+	!-i!
+	!nobody@example.com!
+	!author@example.com!
+	!one@example.com!
+	!two@example.com!
+	EOF
 '
 
-test_expect_success $PREREQ \
-    'Verify commandline' \
-    'test_cmp expected commandline1'
+test_expect_success $PREREQ 'Verify commandline' '
+	test_cmp expected commandline1
+'
 
 test_expect_success $PREREQ 'Send patches with --envelope-sender=auto' '
-    clean_fake_sendmail &&
-     git send-email --envelope-sender=auto --suppress-cc=sob --from="Example <nobody@example.com>" --to=nobody@example.com --smtp-server="$(pwd)/fake.sendmail" $patches 2>errors
+	clean_fake_sendmail &&
+	git send-email --envelope-sender=auto --suppress-cc=sob --from="Example <nobody@example.com>" --to=nobody@example.com --smtp-server="$(pwd)/fake.sendmail" $patches 2>errors
 '
 
 test_expect_success $PREREQ 'setup expect' '
-cat >expected <<\EOF
-!nobody@example.com!
-!-i!
-!nobody@example.com!
-!author@example.com!
-!one@example.com!
-!two@example.com!
-EOF
+	cat >expected <<-\EOF
+	!nobody@example.com!
+	!-i!
+	!nobody@example.com!
+	!author@example.com!
+	!one@example.com!
+	!two@example.com!
+	EOF
 '
 
-test_expect_success $PREREQ \
-    'Verify commandline' \
-    'test_cmp expected commandline1'
+test_expect_success $PREREQ 'Verify commandline' '
+	test_cmp expected commandline1
+'
 
 test_expect_success $PREREQ 'setup expect' "
 cat >expected-show-all-headers <<\EOF
 0001-Second.patch
 (mbox) Adding cc: A <author@example.com> from line 'From: A <author@example.com>'
 (mbox) Adding cc: One <one@example.com> from line 'Cc: One <one@example.com>, two@example.com'
@@ -237,12 +239,19 @@
 
 test_expect_success $PREREQ 'non-ascii self name is suppressed' "
 	test_suppress_self_quoted 'Füñný Nâmé' 'odd_?=mail@example.com' \
 		'non_ascii_self_suppressed'
 "
 
+# This name is long enough to force format-patch to split it into multiple
+# encoded-words, assuming it uses UTF-8 with the "Q" encoding.
+test_expect_success $PREREQ 'long non-ascii self name is suppressed' "
+	test_suppress_self_quoted 'Ƒüñníęř €. Nâṁé' 'odd_?=mail@example.com' \
+		'long_non_ascii_self_suppressed'
+"
+
 test_expect_success $PREREQ 'sanitized self name is suppressed' "
 	test_suppress_self_unquoted '\"A U. Thor\"' 'author@example.com' \
 		'self_name_sanitized_suppressed'
 "
 
 test_expect_success $PREREQ 'Show all headers' '
@@ -304,17 +313,15 @@
 '
 
 test_expect_success $PREREQ 'tocmd works' '
 	clean_fake_sendmail &&
 	cp $patches tocmd.patch &&
 	echo tocmd--tocmd@example.com >>tocmd.patch &&
-	{
-	  echo "#!$SHELL_PATH"
-	  echo sed -n -e s/^tocmd--//p \"\$1\"
-	} > tocmd-sed &&
-	chmod +x tocmd-sed &&
+	write_script tocmd-sed <<-\EOF &&
+	sed -n -e "s/^tocmd--//p" "$1"
+	EOF
 	git send-email \
 		--from="Example <nobody@example.com>" \
 		--to-cmd=./tocmd-sed \
 		--smtp-server="$(pwd)/fake.sendmail" \
 		tocmd.patch \
 		&&
@@ -322,17 +329,15 @@
 '
 
 test_expect_success $PREREQ 'cccmd works' '
 	clean_fake_sendmail &&
 	cp $patches cccmd.patch &&
 	echo "cccmd--  cccmd@example.com" >>cccmd.patch &&
-	{
-	  echo "#!$SHELL_PATH"
-	  echo sed -n -e s/^cccmd--//p \"\$1\"
-	} > cccmd-sed &&
-	chmod +x cccmd-sed &&
+	write_script cccmd-sed <<-\EOF &&
+	sed -n -e "s/^cccmd--//p" "$1"
+	EOF
 	git send-email \
 		--from="Example <nobody@example.com>" \
 		--to=nobody@example.com \
 		--cc-cmd=./cccmd-sed \
 		--smtp-server="$(pwd)/fake.sendmail" \
 		cccmd.patch \
@@ -364,24 +369,24 @@
 	clean_fake_sendmail &&
 	git send-email \
 		--from="Example <nobody@example.com>" \
 		--to=nobody@example.com \
 		--smtp-server="$(pwd)/fake.sendmail" \
 		$patches &&
-	sed "1,/^\$/d" < msgtxt1 > msgbody1 &&
+	sed "1,/^\$/d" <msgtxt1 >msgbody1 &&
 	grep "From: A <author@example.com>" msgbody1
 '
 
 test_expect_success $PREREQ 'Author From: not in message body' '
 	clean_fake_sendmail &&
 	git send-email \
 		--from="A <author@example.com>" \
 		--to=nobody@example.com \
 		--smtp-server="$(pwd)/fake.sendmail" \
 		$patches &&
-	sed "1,/^\$/d" < msgtxt1 > msgbody1 &&
+	sed "1,/^\$/d" <msgtxt1 >msgbody1 &&
 	! grep "From: A <author@example.com>" msgbody1
 '
 
 test_expect_success $PREREQ 'allow long lines with --no-validate' '
 	git send-email \
 		--from="Example <nobody@example.com>" \
@@ -456,16 +461,15 @@
 	sed -n -e "s/^Message-Id: *\(.*\)/\1/p" msgtxt2 >expect &&
 	sed -n -e "s/^In-Reply-To: *\(.*\)/\1/p" msgtxt3 >actual &&
 	test_cmp expect actual
 '
 
 test_expect_success $PREREQ 'setup fake editor' '
-	(echo "#!$SHELL_PATH" &&
-	 echo "echo fake edit >>\"\$1\""
-	) >fake-editor &&
-	chmod +x fake-editor
+	write_script fake-editor <<-\EOF
+	echo fake edit >>"$1"
+	EOF
 '
 
 test_set_editor "$(pwd)/fake-editor"
 
 test_expect_success $PREREQ '--compose works' '
 	clean_fake_sendmail &&
@@ -595,14 +599,15 @@
 
 Result: OK
 EOF
 "
 
 test_expect_success $PREREQ 'sendemail.cccmd' '
-	echo echo cc-cmd@example.com > cccmd &&
-	chmod +x cccmd &&
+	write_script cccmd <<-\EOF &&
+	echo cc-cmd@example.com
+	EOF
 	git config sendemail.cccmd ./cccmd &&
 	test_suppression cccmd
 '
 
 test_expect_success $PREREQ 'setup expect' '
 cat >expected-suppress-all <<\EOF
@@ -789,13 +794,13 @@
 	echo y | \
 		GIT_SEND_EMAIL_NOTTY=1 \
 		git send-email \
 		--from="Example <nobody@example.com>" \
 		--to=nobody@example.com \
 		--smtp-server="$(pwd)/fake.sendmail" \
-		$@ $patches > stdout &&
+		$@ $patches >stdout &&
 	grep "Send this email" stdout
 }
 
 test_expect_success $PREREQ '--confirm=always' '
 	test_confirm --confirm=always --suppress-cc=all
 '
@@ -837,13 +842,13 @@
 	git format-patch -2 -o outdir &&
 	GIT_SEND_EMAIL_NOTTY=1 \
 		git send-email \
 			--from="Example <nobody@example.com>" \
 			--to=nobody@example.com \
 			--smtp-server="$(pwd)/fake.sendmail" \
-			outdir/*.patch < /dev/null
+			outdir/*.patch </dev/null
 	ret="$?"
 	git config sendemail.confirm ${CONFIRM:-never}
 	test $ret = "0"
 '
 
 test_expect_success $PREREQ 'confirm detects EOF (auto causes failure)' '
@@ -852,13 +857,13 @@
 	GIT_SEND_EMAIL_NOTTY=1 &&
 	export GIT_SEND_EMAIL_NOTTY &&
 		test_must_fail git send-email \
 			--from="Example <nobody@example.com>" \
 			--to=nobody@example.com \
 			--smtp-server="$(pwd)/fake.sendmail" \
-			$patches < /dev/null
+			$patches </dev/null
 	ret="$?"
 	git config sendemail.confirm ${CONFIRM:-never}
 	test $ret = "0"
 '
 
 test_expect_success $PREREQ 'confirm does not loop forever' '
@@ -888,175 +893,172 @@
 	grep "^	" msgtxt1 |
 	grep "=?UTF-8?q?=C3=A0=C3=A9=C3=AC=C3=B6=C3=BA?= <utf8@example.com>"
 '
 
 test_expect_success $PREREQ '--compose adds MIME for utf8 body' '
 	clean_fake_sendmail &&
-	(echo "#!$SHELL_PATH" &&
-	 echo "echo utf8 body: àéìöú >>\"\$1\""
-	) >fake-editor-utf8 &&
-	chmod +x fake-editor-utf8 &&
-	  GIT_EDITOR="\"$(pwd)/fake-editor-utf8\"" \
-	  git send-email \
-	  --compose --subject foo \
-	  --from="Example <nobody@example.com>" \
-	  --to=nobody@example.com \
-	  --smtp-server="$(pwd)/fake.sendmail" \
-	  $patches &&
+	write_script fake-editor-utf8 <<-\EOF &&
+	echo "utf8 body: àéìöú" >>"$1"
+	EOF
+	GIT_EDITOR="\"$(pwd)/fake-editor-utf8\"" \
+	git send-email \
+		--compose --subject foo \
+		--from="Example <nobody@example.com>" \
+		--to=nobody@example.com \
+		--smtp-server="$(pwd)/fake.sendmail" \
+		$patches &&
 	grep "^utf8 body" msgtxt1 &&
 	grep "^Content-Type: text/plain; charset=UTF-8" msgtxt1
 '
 
 test_expect_success $PREREQ '--compose respects user mime type' '
 	clean_fake_sendmail &&
-	(echo "#!$SHELL_PATH" &&
-	 echo "(echo MIME-Version: 1.0"
-	 echo " echo Content-Type: text/plain\\; charset=iso-8859-1"
-	 echo " echo Content-Transfer-Encoding: 8bit"
-	 echo " echo Subject: foo"
-	 echo " echo "
-	 echo " echo utf8 body: àéìöú) >\"\$1\""
-	) >fake-editor-utf8-mime &&
-	chmod +x fake-editor-utf8-mime &&
-	  GIT_EDITOR="\"$(pwd)/fake-editor-utf8-mime\"" \
-	  git send-email \
-	  --compose --subject foo \
-	  --from="Example <nobody@example.com>" \
-	  --to=nobody@example.com \
-	  --smtp-server="$(pwd)/fake.sendmail" \
-	  $patches &&
+	write_script fake-editor-utf8-mime <<-\EOF &&
+	cat >"$1" <<-\EOM
+	MIME-Version: 1.0
+	Content-Type: text/plain; charset=iso-8859-1
+	Content-Transfer-Encoding: 8bit
+	Subject: foo
+
+	utf8 body: àéìöú
+	EOM
+	EOF
+	GIT_EDITOR="\"$(pwd)/fake-editor-utf8-mime\"" \
+	git send-email \
+		--compose --subject foo \
+		--from="Example <nobody@example.com>" \
+		--to=nobody@example.com \
+		--smtp-server="$(pwd)/fake.sendmail" \
+		$patches &&
 	grep "^utf8 body" msgtxt1 &&
 	grep "^Content-Type: text/plain; charset=iso-8859-1" msgtxt1 &&
 	! grep "^Content-Type: text/plain; charset=UTF-8" msgtxt1
 '
 
 test_expect_success $PREREQ '--compose adds MIME for utf8 subject' '
 	clean_fake_sendmail &&
-	  GIT_EDITOR="\"$(pwd)/fake-editor\"" \
-	  git send-email \
-	  --compose --subject utf8-sübjëct \
-	  --from="Example <nobody@example.com>" \
-	  --to=nobody@example.com \
-	  --smtp-server="$(pwd)/fake.sendmail" \
-	  $patches &&
+	GIT_EDITOR="\"$(pwd)/fake-editor\"" \
+	git send-email \
+		--compose --subject utf8-sübjëct \
+		--from="Example <nobody@example.com>" \
+		--to=nobody@example.com \
+		--smtp-server="$(pwd)/fake.sendmail" \
+		$patches &&
 	grep "^fake edit" msgtxt1 &&
 	grep "^Subject: =?UTF-8?q?utf8-s=C3=BCbj=C3=ABct?=" msgtxt1
 '
 
 test_expect_success $PREREQ 'utf8 author is correctly passed on' '
 	clean_fake_sendmail &&
 	test_commit weird_author &&
 	test_when_finished "git reset --hard HEAD^" &&
 	git commit --amend --author "Füñný Nâmé <odd_?=mail@example.com>" &&
 	git format-patch --stdout -1 >funny_name.patch &&
 	git send-email --from="Example <nobody@example.com>" \
-	  --to=nobody@example.com \
-	  --smtp-server="$(pwd)/fake.sendmail" \
-	  funny_name.patch &&
+		--to=nobody@example.com \
+		--smtp-server="$(pwd)/fake.sendmail" \
+		funny_name.patch &&
 	grep "^From: Füñný Nâmé <odd_?=mail@example.com>" msgtxt1
 '
 
 test_expect_success $PREREQ 'utf8 sender is not duplicated' '
 	clean_fake_sendmail &&
 	test_commit weird_sender &&
 	test_when_finished "git reset --hard HEAD^" &&
 	git commit --amend --author "Füñný Nâmé <odd_?=mail@example.com>" &&
 	git format-patch --stdout -1 >funny_name.patch &&
 	git send-email --from="Füñný Nâmé <odd_?=mail@example.com>" \
-	  --to=nobody@example.com \
-	  --smtp-server="$(pwd)/fake.sendmail" \
-	  funny_name.patch &&
+		--to=nobody@example.com \
+		--smtp-server="$(pwd)/fake.sendmail" \
+		funny_name.patch &&
 	grep "^From: " msgtxt1 >msgfrom &&
 	test_line_count = 1 msgfrom
 '
 
 test_expect_success $PREREQ 'sendemail.composeencoding works' '
 	clean_fake_sendmail &&
 	git config sendemail.composeencoding iso-8859-1 &&
-	(echo "#!$SHELL_PATH" &&
-	 echo "echo utf8 body: àéìöú >>\"\$1\""
-	) >fake-editor-utf8 &&
-	chmod +x fake-editor-utf8 &&
-	  GIT_EDITOR="\"$(pwd)/fake-editor-utf8\"" \
-	  git send-email \
-	  --compose --subject foo \
-	  --from="Example <nobody@example.com>" \
-	  --to=nobody@example.com \
-	  --smtp-server="$(pwd)/fake.sendmail" \
-	  $patches &&
+	write_script fake-editor-utf8 <<-\EOF &&
+	echo "utf8 body: àéìöú" >>"$1"
+	EOF
+	GIT_EDITOR="\"$(pwd)/fake-editor-utf8\"" \
+	git send-email \
+		--compose --subject foo \
+		--from="Example <nobody@example.com>" \
+		--to=nobody@example.com \
+		--smtp-server="$(pwd)/fake.sendmail" \
+		$patches &&
 	grep "^utf8 body" msgtxt1 &&
 	grep "^Content-Type: text/plain; charset=iso-8859-1" msgtxt1
 '
 
 test_expect_success $PREREQ '--compose-encoding works' '
 	clean_fake_sendmail &&
-	(echo "#!$SHELL_PATH" &&
-	 echo "echo utf8 body: àéìöú >>\"\$1\""
-	) >fake-editor-utf8 &&
-	chmod +x fake-editor-utf8 &&
-	  GIT_EDITOR="\"$(pwd)/fake-editor-utf8\"" \
-	  git send-email \
-	  --compose-encoding iso-8859-1 \
-	  --compose --subject foo \
-	  --from="Example <nobody@example.com>" \
-	  --to=nobody@example.com \
-	  --smtp-server="$(pwd)/fake.sendmail" \
-	  $patches &&
+	write_script fake-editor-utf8 <<-\EOF &&
+	echo "utf8 body: àéìöú" >>"$1"
+	EOF
+	GIT_EDITOR="\"$(pwd)/fake-editor-utf8\"" \
+	git send-email \
+		--compose-encoding iso-8859-1 \
+		--compose --subject foo \
+		--from="Example <nobody@example.com>" \
+		--to=nobody@example.com \
+		--smtp-server="$(pwd)/fake.sendmail" \
+		$patches &&
 	grep "^utf8 body" msgtxt1 &&
 	grep "^Content-Type: text/plain; charset=iso-8859-1" msgtxt1
 '
 
 test_expect_success $PREREQ '--compose-encoding overrides sendemail.composeencoding' '
 	clean_fake_sendmail &&
 	git config sendemail.composeencoding iso-8859-1 &&
-	(echo "#!$SHELL_PATH" &&
-	 echo "echo utf8 body: àéìöú >>\"\$1\""
-	) >fake-editor-utf8 &&
-	chmod +x fake-editor-utf8 &&
-	  GIT_EDITOR="\"$(pwd)/fake-editor-utf8\"" \
-	  git send-email \
-	  --compose-encoding iso-8859-2 \
-	  --compose --subject foo \
-	  --from="Example <nobody@example.com>" \
-	  --to=nobody@example.com \
-	  --smtp-server="$(pwd)/fake.sendmail" \
-	  $patches &&
+	write_script fake-editor-utf8 <<-\EOF &&
+	echo "utf8 body: àéìöú" >>"$1"
+	EOF
+	GIT_EDITOR="\"$(pwd)/fake-editor-utf8\"" \
+	git send-email \
+		--compose-encoding iso-8859-2 \
+		--compose --subject foo \
+		--from="Example <nobody@example.com>" \
+		--to=nobody@example.com \
+		--smtp-server="$(pwd)/fake.sendmail" \
+		$patches &&
 	grep "^utf8 body" msgtxt1 &&
 	grep "^Content-Type: text/plain; charset=iso-8859-2" msgtxt1
 '
 
 test_expect_success $PREREQ '--compose-encoding adds correct MIME for subject' '
 	clean_fake_sendmail &&
-	  GIT_EDITOR="\"$(pwd)/fake-editor\"" \
-	  git send-email \
-	  --compose-encoding iso-8859-2 \
-	  --compose --subject utf8-sübjëct \
-	  --from="Example <nobody@example.com>" \
-	  --to=nobody@example.com \
-	  --smtp-server="$(pwd)/fake.sendmail" \
-	  $patches &&
+	GIT_EDITOR="\"$(pwd)/fake-editor\"" \
+	git send-email \
+		--compose-encoding iso-8859-2 \
+		--compose --subject utf8-sübjëct \
+		--from="Example <nobody@example.com>" \
+		--to=nobody@example.com \
+		--smtp-server="$(pwd)/fake.sendmail" \
+		$patches &&
 	grep "^fake edit" msgtxt1 &&
 	grep "^Subject: =?iso-8859-2?q?utf8-s=C3=BCbj=C3=ABct?=" msgtxt1
 '
 
 test_expect_success $PREREQ 'detects ambiguous reference/file conflict' '
-	echo master > master &&
+	echo master >master &&
 	git add master &&
 	git commit -m"add master" &&
 	test_must_fail git send-email --dry-run master 2>errors &&
 	grep disambiguate errors
 '
 
 test_expect_success $PREREQ 'feed two files' '
 	rm -fr outdir &&
 	git format-patch -2 -o outdir &&
 	git send-email \
-	--dry-run \
-	--from="Example <nobody@example.com>" \
-	--to=nobody@example.com \
-	outdir/000?-*.patch 2>errors >out &&
+		--dry-run \
+		--from="Example <nobody@example.com>" \
+		--to=nobody@example.com \
+		outdir/000?-*.patch 2>errors >out &&
 	grep "^Subject: " out >subjects &&
 	test "z$(sed -n -e 1p subjects)" = "zSubject: [PATCH 1/2] Second." &&
 	test "z$(sed -n -e 2p subjects)" = "zSubject: [PATCH 2/2] add master"
 '
 
 test_expect_success $PREREQ 'in-reply-to but no threading' '
@@ -1194,27 +1196,25 @@
 	test $(grep -c "RCPT TO:<bodies@example.com>" stdout) = 1 &&
 	test $(grep -c "RCPT TO:<nobody@example.com>" stdout) = 2 &&
 	test $(grep -c "RCPT TO:<other@example.com>" stdout) = 1
 '
 
 test_expect_success $PREREQ 'setup expect' '
-cat >email-using-8bit <<EOF
+cat >email-using-8bit <<\EOF
 From fe6ecc66ece37198fe5db91fa2fc41d9f4fe5cc4 Mon Sep 17 00:00:00 2001
 Message-Id: <bogus-message-id@example.com>
 From: author@example.com
 Date: Sat, 12 Jun 2010 15:53:58 +0200
 Subject: subject goes here
 
 Dieser deutsche Text enthält einen Umlaut!
 EOF
 '
 
 test_expect_success $PREREQ 'setup expect' '
-cat >expected <<EOF
-Subject: subject goes here
-EOF
+	echo "Subject: subject goes here" >expected
 '
 
 test_expect_success $PREREQ 'ASCII subject is not RFC2047 quoted' '
 	clean_fake_sendmail &&
 	echo bogus |
 	git send-email --from=author@example.com --to=nobody@example.com \
@@ -1223,17 +1223,17 @@
 			email-using-8bit >stdout &&
 	grep "Subject" msgtxt1 >actual &&
 	test_cmp expected actual
 '
 
 test_expect_success $PREREQ 'setup expect' '
-cat >content-type-decl <<EOF
-MIME-Version: 1.0
-Content-Type: text/plain; charset=UTF-8
-Content-Transfer-Encoding: 8bit
-EOF
+	cat >content-type-decl <<-\EOF
+	MIME-Version: 1.0
+	Content-Type: text/plain; charset=UTF-8
+	Content-Transfer-Encoding: 8bit
+	EOF
 '
 
 test_expect_success $PREREQ 'asks about and fixes 8bit encodings' '
 	clean_fake_sendmail &&
 	echo |
 	git send-email --from=author@example.com --to=nobody@example.com \
@@ -1267,27 +1267,27 @@
 			email-using-8bit >stdout &&
 	egrep "Content|MIME" msgtxt1 >actual &&
 	test_cmp actual content-type-decl
 '
 
 test_expect_success $PREREQ 'setup expect' '
-cat >email-using-8bit <<EOF
-From fe6ecc66ece37198fe5db91fa2fc41d9f4fe5cc4 Mon Sep 17 00:00:00 2001
-Message-Id: <bogus-message-id@example.com>
-From: author@example.com
-Date: Sat, 12 Jun 2010 15:53:58 +0200
-Subject: Dieser Betreff enthält auch einen Umlaut!
+	cat >email-using-8bit <<-\EOF
+	From fe6ecc66ece37198fe5db91fa2fc41d9f4fe5cc4 Mon Sep 17 00:00:00 2001
+	Message-Id: <bogus-message-id@example.com>
+	From: author@example.com
+	Date: Sat, 12 Jun 2010 15:53:58 +0200
+	Subject: Dieser Betreff enthält auch einen Umlaut!
 
-Nothing to see here.
-EOF
+	Nothing to see here.
+	EOF
 '
 
 test_expect_success $PREREQ 'setup expect' '
-cat >expected <<EOF
-Subject: =?UTF-8?q?Dieser=20Betreff=20enth=C3=A4lt=20auch=20einen=20Umlaut!?=
-EOF
+	cat >expected <<-\EOF
+	Subject: =?UTF-8?q?Dieser=20Betreff=20enth=C3=A4lt=20auch=20einen=20Umlaut!?=
+	EOF
 '
 
 test_expect_success $PREREQ '--8bit-encoding also treats subject' '
 	clean_fake_sendmail &&
 	echo bogus |
 	git send-email --from=author@example.com --to=nobody@example.com \
@@ -1295,44 +1295,201 @@
 			--8bit-encoding=UTF-8 \
 			email-using-8bit >stdout &&
 	grep "Subject" msgtxt1 >actual &&
 	test_cmp expected actual
 '
 
+test_expect_success $PREREQ 'setup expect' '
+	cat >email-using-8bit <<-\EOF
+	From fe6ecc66ece37198fe5db91fa2fc41d9f4fe5cc4 Mon Sep 17 00:00:00 2001
+	Message-Id: <bogus-message-id@example.com>
+	From: A U Thor <author@example.com>
+	Date: Sat, 12 Jun 2010 15:53:58 +0200
+	Content-Type: text/plain; charset=UTF-8
+	Subject: Nothing to see here.
+
+	Dieser Betreff enthält auch einen Umlaut!
+	EOF
+'
+
+test_expect_success $PREREQ 'sendemail.transferencoding=7bit fails on 8bit data' '
+	clean_fake_sendmail &&
+	git config sendemail.transferEncoding 7bit &&
+	test_must_fail git send-email \
+		--transfer-encoding=7bit \
+		--smtp-server="$(pwd)/fake.sendmail" \
+		email-using-8bit \
+		2>errors >out &&
+	grep "cannot send message as 7bit" errors &&
+	test -z "$(ls msgtxt*)"
+'
+
+test_expect_success $PREREQ '--transfer-encoding overrides sendemail.transferEncoding' '
+	clean_fake_sendmail &&
+	git config sendemail.transferEncoding 8bit
+	test_must_fail git send-email \
+		--transfer-encoding=7bit \
+		--smtp-server="$(pwd)/fake.sendmail" \
+		email-using-8bit \
+		2>errors >out &&
+	grep "cannot send message as 7bit" errors &&
+	test -z "$(ls msgtxt*)"
+'
+
+test_expect_success $PREREQ 'sendemail.transferencoding=8bit' '
+	clean_fake_sendmail &&
+	git send-email \
+		--transfer-encoding=8bit \
+		--smtp-server="$(pwd)/fake.sendmail" \
+		email-using-8bit \
+		2>errors >out &&
+	sed '1,/^$/d' msgtxt1 >actual &&
+	sed '1,/^$/d' email-using-8bit >expected &&
+	test_cmp expected actual
+'
+
+test_expect_success $PREREQ 'setup expect' '
+	cat >expected <<-\EOF
+	Dieser Betreff enth=C3=A4lt auch einen Umlaut!
+	EOF
+'
+
+test_expect_success $PREREQ '8-bit and sendemail.transferencoding=quoted-printable' '
+	clean_fake_sendmail &&
+	git send-email \
+		--transfer-encoding=quoted-printable \
+		--smtp-server="$(pwd)/fake.sendmail" \
+		email-using-8bit \
+		2>errors >out &&
+	sed '1,/^$/d' msgtxt1 >actual &&
+	test_cmp expected actual
+'
+
+test_expect_success $PREREQ 'setup expect' '
+	cat >expected <<-\EOF
+	RGllc2VyIEJldHJlZmYgZW50aMOkbHQgYXVjaCBlaW5lbiBVbWxhdXQhCg==
+	EOF
+'
+
+test_expect_success $PREREQ '8-bit and sendemail.transferencoding=base64' '
+	clean_fake_sendmail &&
+	git send-email \
+		--transfer-encoding=base64 \
+		--smtp-server="$(pwd)/fake.sendmail" \
+		email-using-8bit \
+		2>errors >out &&
+	sed '1,/^$/d' msgtxt1 >actual &&
+	test_cmp expected actual
+'
+
+test_expect_success $PREREQ 'setup expect' '
+	cat >email-using-qp <<-\EOF
+	From fe6ecc66ece37198fe5db91fa2fc41d9f4fe5cc4 Mon Sep 17 00:00:00 2001
+	Message-Id: <bogus-message-id@example.com>
+	From: A U Thor <author@example.com>
+	Date: Sat, 12 Jun 2010 15:53:58 +0200
+	MIME-Version: 1.0
+	Content-Transfer-Encoding: quoted-printable
+	Content-Type: text/plain; charset=UTF-8
+	Subject: Nothing to see here.
+
+	Dieser Betreff enth=C3=A4lt auch einen Umlaut!
+	EOF
+'
+
+test_expect_success $PREREQ 'convert from quoted-printable to base64' '
+	clean_fake_sendmail &&
+	git send-email \
+		--transfer-encoding=base64 \
+		--smtp-server="$(pwd)/fake.sendmail" \
+		email-using-qp \
+		2>errors >out &&
+	sed '1,/^$/d' msgtxt1 >actual &&
+	test_cmp expected actual
+'
+
+test_expect_success $PREREQ 'setup expect' "
+tr -d '\\015' | tr '%' '\\015' >email-using-crlf <<EOF
+From fe6ecc66ece37198fe5db91fa2fc41d9f4fe5cc4 Mon Sep 17 00:00:00 2001
+Message-Id: <bogus-message-id@example.com>
+From: A U Thor <author@example.com>
+Date: Sat, 12 Jun 2010 15:53:58 +0200
+Content-Type: text/plain; charset=UTF-8
+Subject: Nothing to see here.
+
+Look, I have a CRLF and an = sign!%
+EOF
+"
+
+test_expect_success $PREREQ 'setup expect' '
+	cat >expected <<-\EOF
+	Look, I have a CRLF and an =3D sign!=0D
+	EOF
+'
+
+test_expect_success $PREREQ 'CRLF and sendemail.transferencoding=quoted-printable' '
+	clean_fake_sendmail &&
+	git send-email \
+		--transfer-encoding=quoted-printable \
+		--smtp-server="$(pwd)/fake.sendmail" \
+		email-using-crlf \
+		2>errors >out &&
+	sed '1,/^$/d' msgtxt1 >actual &&
+	test_cmp expected actual
+'
+
+test_expect_success $PREREQ 'setup expect' '
+	cat >expected <<-\EOF
+	TG9vaywgSSBoYXZlIGEgQ1JMRiBhbmQgYW4gPSBzaWduIQ0K
+	EOF
+'
+
+test_expect_success $PREREQ 'CRLF and sendemail.transferencoding=base64' '
+	clean_fake_sendmail &&
+	git send-email \
+		--transfer-encoding=base64 \
+		--smtp-server="$(pwd)/fake.sendmail" \
+		email-using-crlf \
+		2>errors >out &&
+	sed '1,/^$/d' msgtxt1 >actual &&
+	test_cmp expected actual
+'
+
+
 # Note that the patches in this test are deliberately out of order; we
 # want to make sure it works even if the cover-letter is not in the
 # first mail.
 test_expect_success $PREREQ 'refusing to send cover letter template' '
 	clean_fake_sendmail &&
 	rm -fr outdir &&
 	git format-patch --cover-letter -2 -o outdir &&
 	test_must_fail git send-email \
-	  --from="Example <nobody@example.com>" \
-	  --to=nobody@example.com \
-	  --smtp-server="$(pwd)/fake.sendmail" \
-	  outdir/0002-*.patch \
-	  outdir/0000-*.patch \
-	  outdir/0001-*.patch \
-	  2>errors >out &&
+		--from="Example <nobody@example.com>" \
+		--to=nobody@example.com \
+		--smtp-server="$(pwd)/fake.sendmail" \
+		outdir/0002-*.patch \
+		outdir/0000-*.patch \
+		outdir/0001-*.patch \
+		2>errors >out &&
 	grep "SUBJECT HERE" errors &&
 	test -z "$(ls msgtxt*)"
 '
 
 test_expect_success $PREREQ '--force sends cover letter template anyway' '
 	clean_fake_sendmail &&
 	rm -fr outdir &&
 	git format-patch --cover-letter -2 -o outdir &&
 	git send-email \
-	  --force \
-	  --from="Example <nobody@example.com>" \
-	  --to=nobody@example.com \
-	  --smtp-server="$(pwd)/fake.sendmail" \
-	  outdir/0002-*.patch \
-	  outdir/0000-*.patch \
-	  outdir/0001-*.patch \
-	  2>errors >out &&
+		--force \
+		--from="Example <nobody@example.com>" \
+		--to=nobody@example.com \
+		--smtp-server="$(pwd)/fake.sendmail" \
+		outdir/0002-*.patch \
+		outdir/0000-*.patch \
+		outdir/0001-*.patch \
+		2>errors >out &&
 	! grep "SUBJECT HERE" errors &&
 	test -n "$(ls msgtxt*)"
 '
 
 test_cover_addresses () {
 	header="$1"
@@ -1341,21 +1498,21 @@
 	rm -fr outdir &&
 	git format-patch --cover-letter -2 -o outdir &&
 	cover=`echo outdir/0000-*.patch` &&
 	mv $cover cover-to-edit.patch &&
 	perl -pe "s/^From:/$header: extra\@address.com\nFrom:/" cover-to-edit.patch >"$cover" &&
 	git send-email \
-	  --force \
-	  --from="Example <nobody@example.com>" \
-	  --no-to --no-cc \
-	  "$@" \
-	  --smtp-server="$(pwd)/fake.sendmail" \
-	  outdir/0000-*.patch \
-	  outdir/0001-*.patch \
-	  outdir/0002-*.patch \
-	  2>errors >out &&
+		--force \
+		--from="Example <nobody@example.com>" \
+		--no-to --no-cc \
+		"$@" \
+		--smtp-server="$(pwd)/fake.sendmail" \
+		outdir/0000-*.patch \
+		outdir/0001-*.patch \
+		outdir/0002-*.patch \
+		2>errors >out &&
 	grep "^$header: extra@address.com" msgtxt1 >to1 &&
 	grep "^$header: extra@address.com" msgtxt2 >to2 &&
 	grep "^$header: extra@address.com" msgtxt3 >to3 &&
 	test_line_count = 1 to1 &&
 	test_line_count = 1 to2 &&
 	test_line_count = 1 to3
@@ -1382,29 +1539,62 @@
 test_expect_success $PREREQ 'sendemail.aliasfiletype=mailrc' '
 	clean_fake_sendmail &&
 	echo "alias sbd  somebody@example.org" >.mailrc &&
 	git config --replace-all sendemail.aliasesfile "$(pwd)/.mailrc" &&
 	git config sendemail.aliasfiletype mailrc &&
 	git send-email \
-	  --from="Example <nobody@example.com>" \
-	  --to=sbd \
-	  --smtp-server="$(pwd)/fake.sendmail" \
-	  outdir/0001-*.patch \
-	  2>errors >out &&
+		--from="Example <nobody@example.com>" \
+		--to=sbd \
+		--smtp-server="$(pwd)/fake.sendmail" \
+		outdir/0001-*.patch \
+		2>errors >out &&
 	grep "^!somebody@example\.org!$" commandline1
 '
 
 test_expect_success $PREREQ 'sendemail.aliasfile=~/.mailrc' '
 	clean_fake_sendmail &&
 	echo "alias sbd  someone@example.org" >~/.mailrc &&
 	git config --replace-all sendemail.aliasesfile "~/.mailrc" &&
 	git config sendemail.aliasfiletype mailrc &&
 	git send-email \
-	  --from="Example <nobody@example.com>" \
-	  --to=sbd \
-	  --smtp-server="$(pwd)/fake.sendmail" \
-	  outdir/0001-*.patch \
-	  2>errors >out &&
+		--from="Example <nobody@example.com>" \
+		--to=sbd \
+		--smtp-server="$(pwd)/fake.sendmail" \
+		outdir/0001-*.patch \
+		2>errors >out &&
 	grep "^!someone@example\.org!$" commandline1
 '
 
+do_xmailer_test () {
+	expected=$1 params=$2 &&
+	git format-patch -1 &&
+	git send-email \
+		--from="Example <nobody@example.com>" \
+		--to=someone@example.com \
+		--smtp-server="$(pwd)/fake.sendmail" \
+		$params \
+		0001-*.patch \
+		2>errors >out &&
+	{ grep '^X-Mailer:' out || :; } >mailer &&
+	test_line_count = $expected mailer
+}
+
+test_expect_success $PREREQ '--[no-]xmailer without any configuration' '
+	do_xmailer_test 1 "--xmailer" &&
+	do_xmailer_test 0 "--no-xmailer"
+'
+
+test_expect_success $PREREQ '--[no-]xmailer with sendemail.xmailer=true' '
+	test_config sendemail.xmailer true &&
+	do_xmailer_test 1 "" &&
+	do_xmailer_test 0 "--no-xmailer" &&
+	do_xmailer_test 1 "--xmailer"
+'
+
+test_expect_success $PREREQ '--[no-]xmailer with sendemail.xmailer=false' '
+	test_config sendemail.xmailer false &&
+	do_xmailer_test 0 "" &&
+	do_xmailer_test 0 "--no-xmailer" &&
+	do_xmailer_test 1 "--xmailer"
+'
+
 test_done
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t: t9148-git-svn-propset.sh
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t9903-bash-prompt.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t9903-bash-prompt.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/t9903-bash-prompt.sh	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/t9903-bash-prompt.sh	2015-02-06 05:40:08.000000000 +0800
@@ -32,12 +32,14 @@
 	echo 0 >file &&
 	git commit -m "second b2" file &&
 	echo 00 >file &&
 	git commit -m "another b2" file &&
 	echo 000 >file &&
 	git commit -m "yet another b2" file &&
+	mkdir ignored_dir &&
+	echo "ignored_dir/" >>.gitignore &&
 	git checkout master
 '
 
 test_expect_success 'prompt - branch name' '
 	printf " (master)" >expected &&
 	__git_ps1 >"$actual" &&
@@ -585,7 +587,111 @@
 		__git_ps1 "BEFORE:" ":AFTER" &&
 		printf "%s" "$PS1" >"$actual"
 	) &&
 	test_cmp expected "$actual"
 '
 
+test_expect_success 'prompt - hide if pwd ignored - env var unset, config disabled' '
+	printf " (master)" >expected &&
+	test_config bash.hideIfPwdIgnored false &&
+	(
+		cd ignored_dir &&
+		__git_ps1 >"$actual"
+	) &&
+	test_cmp expected "$actual"
+'
+
+test_expect_success 'prompt - hide if pwd ignored - env var unset, config disabled, pc mode' '
+	printf "BEFORE: (\${__git_ps1_branch_name}):AFTER" >expected &&
+	test_config bash.hideIfPwdIgnored false &&
+	(
+		cd ignored_dir &&
+		__git_ps1 "BEFORE:" ":AFTER" &&
+		printf "%s" "$PS1" >"$actual"
+	) &&
+	test_cmp expected "$actual"
+'
+
+test_expect_success 'prompt - hide if pwd ignored - env var unset, config unset' '
+	printf " (master)" >expected &&
+	(
+		cd ignored_dir &&
+		__git_ps1 >"$actual"
+	) &&
+	test_cmp expected "$actual"
+'
+
+test_expect_success 'prompt - hide if pwd ignored - env var unset, config unset, pc mode' '
+	printf "BEFORE: (\${__git_ps1_branch_name}):AFTER" >expected &&
+	(
+		cd ignored_dir &&
+		__git_ps1 "BEFORE:" ":AFTER" &&
+		printf "%s" "$PS1" >"$actual"
+	) &&
+	test_cmp expected "$actual"
+'
+
+test_expect_success 'prompt - hide if pwd ignored - env var set, config disabled' '
+	printf " (master)" >expected &&
+	test_config bash.hideIfPwdIgnored false &&
+	(
+		cd ignored_dir &&
+		GIT_PS1_HIDE_IF_PWD_IGNORED=y &&
+		__git_ps1 >"$actual"
+	) &&
+	test_cmp expected "$actual"
+'
+
+test_expect_success 'prompt - hide if pwd ignored - env var set, config disabled, pc mode' '
+	printf "BEFORE: (\${__git_ps1_branch_name}):AFTER" >expected &&
+	test_config bash.hideIfPwdIgnored false &&
+	(
+		cd ignored_dir &&
+		GIT_PS1_HIDE_IF_PWD_IGNORED=y &&
+		__git_ps1 "BEFORE:" ":AFTER" &&
+		printf "%s" "$PS1" >"$actual"
+	) &&
+	test_cmp expected "$actual"
+'
+
+test_expect_success 'prompt - hide if pwd ignored - env var set, config unset' '
+	printf "" >expected &&
+	(
+		cd ignored_dir &&
+		GIT_PS1_HIDE_IF_PWD_IGNORED=y &&
+		__git_ps1 >"$actual"
+	) &&
+	test_cmp expected "$actual"
+'
+
+test_expect_success 'prompt - hide if pwd ignored - env var set, config unset, pc mode' '
+	printf "BEFORE::AFTER" >expected &&
+	(
+		cd ignored_dir &&
+		GIT_PS1_HIDE_IF_PWD_IGNORED=y &&
+		__git_ps1 "BEFORE:" ":AFTER" &&
+		printf "%s" "$PS1" >"$actual"
+	) &&
+	test_cmp expected "$actual"
+'
+
+test_expect_success 'prompt - hide if pwd ignored - inside gitdir (stdout)' '
+	printf " (GIT_DIR!)" >expected &&
+	(
+		GIT_PS1_HIDE_IF_PWD_IGNORED=y &&
+		cd .git &&
+		__git_ps1 >"$actual" 2>/dev/null
+	) &&
+	test_cmp expected "$actual"
+'
+
+test_expect_success 'prompt - hide if pwd ignored - inside gitdir (stderr)' '
+	printf "" >expected &&
+	(
+		GIT_PS1_HIDE_IF_PWD_IGNORED=y &&
+		cd .git &&
+		__git_ps1 >/dev/null 2>"$actual"
+	) &&
+	test_cmp expected "$actual"
+'
+
 test_done
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/test-lib.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/test-lib.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/t/test-lib.sh	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/t/test-lib.sh	2015-02-06 05:40:08.000000000 +0800
@@ -137,12 +137,15 @@
 	}
 	teardown_malloc_check () {
 		unset MALLOC_CHECK_ MALLOC_PERTURB_
 	}
 fi
 
+: ${ASAN_OPTIONS=detect_leaks=0}
+export ASAN_OPTIONS
+
 # Protect ourselves from common misconfiguration to export
 # CDPATH into the environment
 unset CDPATH
 
 unset GREP_OPTIONS
 unset UNZIP
@@ -178,22 +181,14 @@
 # Each test should start with something like this, after copyright notices:
 #
 # test_description='Description of this test...
 # This test checks if command xyzzy does the right thing...
 # '
 # . ./test-lib.sh
-[ "x$ORIGINAL_TERM" != "xdumb" ] && (
-		TERM=$ORIGINAL_TERM &&
-		export TERM &&
-		[ -t 1 ] &&
-		tput bold >/dev/null 2>&1 &&
-		tput setaf 1 >/dev/null 2>&1 &&
-		tput sgr0 >/dev/null 2>&1
-	) &&
-	color=t
 
+unset color
 while test "$#" -ne 0
 do
 	case "$1" in
 	-d|--d|--de|--deb|--debu|--debug)
 		debug=t; shift ;;
 	-i|--i|--im|--imm|--imme|--immed|--immedi|--immedia|--immediat|--immediate)
@@ -252,46 +247,12 @@
 	test -z "$verbose" && verbose_only="$valgrind_only"
 elif test -n "$valgrind"
 then
 	verbose=t
 fi
 
-if test -n "$color"
-then
-	say_color () {
-		(
-		TERM=$ORIGINAL_TERM
-		export TERM
-		case "$1" in
-		error)
-			tput bold; tput setaf 1;; # bold red
-		skip)
-			tput setaf 4;; # blue
-		warn)
-			tput setaf 3;; # brown/yellow
-		pass)
-			tput setaf 2;; # green
-		info)
-			tput setaf 6;; # cyan
-		*)
-			test -n "$quiet" && return;;
-		esac
-		shift
-		printf "%s" "$*"
-		tput sgr0
-		echo
-		)
-	}
-else
-	say_color() {
-		test -z "$1" && test -n "$quiet" && return
-		shift
-		printf "%s\n" "$*"
-	}
-fi
-
 error () {
 	say_color error "error: $*"
 	GIT_EXIT_OK=t
 	exit 1
 }
 
@@ -678,13 +639,13 @@
 	0)
 		# Maybe print SKIP message
 		if test -n "$skip_all" && test $test_count -gt 0
 		then
 			error "Can't use skip_all after running some tests"
 		fi
-		[ -z "$skip_all" ] || skip_all=" # SKIP $skip_all"
+		test -z "$skip_all" || skip_all=" # SKIP $skip_all"
 
 		if test $test_external_has_tap -eq 0
 		then
 			if test $test_remaining -gt 0
 			then
 				say_color pass "# passed all $msg"
@@ -851,12 +812,58 @@
 }
 
 HOME="$TRASH_DIRECTORY"
 GNUPGHOME="$HOME/gnupg-home-not-used"
 export HOME GNUPGHOME
 
+# run the tput tests *after* changing HOME (in case ncurses needs
+# ~/.terminfo for $TERM)
+test -n "${color+set}" || test "x$ORIGINAL_TERM" != "xdumb" && (
+		TERM=$ORIGINAL_TERM &&
+		export TERM &&
+		test -t 1 &&
+		tput bold >/dev/null 2>&1 &&
+		tput setaf 1 >/dev/null 2>&1 &&
+		tput sgr0 >/dev/null 2>&1
+	) &&
+	color=t
+
+if test -n "$color"
+then
+	say_color () {
+		(
+		TERM=$ORIGINAL_TERM
+		export TERM
+		case "$1" in
+		error)
+			tput bold; tput setaf 1;; # bold red
+		skip)
+			tput setaf 4;; # blue
+		warn)
+			tput setaf 3;; # brown/yellow
+		pass)
+			tput setaf 2;; # green
+		info)
+			tput setaf 6;; # cyan
+		*)
+			test -n "$quiet" && return;;
+		esac
+		shift
+		printf "%s" "$*"
+		tput sgr0
+		echo
+		)
+	}
+else
+	say_color() {
+		test -z "$1" && test -n "$quiet" && return
+		shift
+		printf "%s\n" "$*"
+	}
+fi
+
 if test -z "$TEST_NO_CREATE_REPO"
 then
 	test_create_repo "$TRASH_DIRECTORY"
 else
 	mkdir -p "$TRASH_DIRECTORY"
 fi
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/tag.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/tag.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/tag.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/tag.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/templates/blt/hooks/pre-push.sample /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/templates/blt/hooks/pre-push.sample
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/templates/blt/hooks/pre-push.sample	2017-10-10 12:21:09.950655319 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/templates/blt/hooks/pre-push.sample	2017-10-10 12:24:45.682647413 +0800
@@ -21,13 +21,12 @@
 
 remote="$1"
 url="$2"
 
 z40=0000000000000000000000000000000000000000
 
-IFS=' '
 while read local_ref local_sha remote_ref remote_sha
 do
 	if [ "$local_sha" = $z40 ]
 	then
 		# Handle delete
 		:
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/templates/boilerplates.made /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/templates/boilerplates.made
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/templates/boilerplates.made	2017-10-10 12:21:09.962655319 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/templates/boilerplates.made	2017-10-10 12:24:45.694647412 +0800
@@ -1 +1 @@
-Tue Oct 10 12:21:09 CST 2017
+Tue Oct 10 12:24:45 CST 2017
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/templates/hooks--pre-push.sample /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/templates/hooks--pre-push.sample
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/templates/hooks--pre-push.sample	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/templates/hooks--pre-push.sample	2015-02-06 05:40:08.000000000 +0800
@@ -21,13 +21,12 @@
 
 remote="$1"
 url="$2"
 
 z40=0000000000000000000000000000000000000000
 
-IFS=' '
 while read local_ref local_sha remote_ref remote_sha
 do
 	if [ "$local_sha" = $z40 ]
 	then
 		# Handle delete
 		:
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-chmtime and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-chmtime differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-chmtime.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-chmtime.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-chmtime.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-chmtime.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-config and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-config differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-config.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-config.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-config.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-config.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-ctype and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-ctype differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-ctype.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-ctype.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-ctype.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-ctype.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-date and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-date differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-date.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-date.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-date.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-date.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-delta and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-delta differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-delta.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-delta.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-delta.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-delta.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-dump-cache-tree and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-dump-cache-tree differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-dump-cache-tree.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-dump-cache-tree.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-dump-cache-tree.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-dump-cache-tree.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-dump-split-index and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-dump-split-index differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-dump-split-index.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-dump-split-index.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-dump-split-index.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-dump-split-index.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-genrandom and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-genrandom differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-genrandom.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-genrandom.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-genrandom.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-genrandom.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-hashmap and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-hashmap differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-hashmap.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-hashmap.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-hashmap.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-hashmap.c	2015-02-06 05:40:08.000000000 +0800
@@ -44,13 +44,13 @@
 #define TEST_SPARSE 8
 #define TEST_ADD 16
 #define TEST_SIZE 100000
 
 static unsigned int hash(unsigned int method, unsigned int i, const char *key)
 {
-	unsigned int hash;
+	unsigned int hash = 0;
 	switch (method & 3)
 	{
 	case HASH_METHOD_FNV:
 		hash = strhash(key);
 		break;
 	case HASH_METHOD_I:
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-hashmap.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-hashmap.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-hashmap.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-hashmap.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-index-version and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-index-version differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-index-version.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-index-version.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-index-version.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-index-version.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-line-buffer and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-line-buffer differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-line-buffer.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-line-buffer.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-line-buffer.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-line-buffer.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-match-trees and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-match-trees differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-match-trees.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-match-trees.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-match-trees.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-match-trees.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-mergesort and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-mergesort differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-mergesort.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-mergesort.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-mergesort.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-mergesort.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-mktemp and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-mktemp differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-mktemp.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-mktemp.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-mktemp.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-mktemp.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-parse-options and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-parse-options differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-parse-options.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-parse-options.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-parse-options.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-parse-options.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-path-utils and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-path-utils differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-path-utils.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-path-utils.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-path-utils.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-path-utils.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-prio-queue and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-prio-queue differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-prio-queue.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-prio-queue.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-prio-queue.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-prio-queue.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-read-cache and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-read-cache differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-read-cache.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-read-cache.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-read-cache.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-read-cache.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-regex and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-regex differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-regex.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-regex.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-regex.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-regex.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-revision-walking and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-revision-walking differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-revision-walking.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-revision-walking.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-revision-walking.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-revision-walking.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-run-command and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-run-command differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-run-command.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-run-command.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-run-command.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-run-command.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-scrap-cache-tree and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-scrap-cache-tree differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-scrap-cache-tree.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-scrap-cache-tree.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-scrap-cache-tree.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-scrap-cache-tree.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-sha1 and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-sha1 differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-sha1-array and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-sha1-array differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-sha1-array.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-sha1-array.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-sha1-array.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-sha1-array.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-sha1.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-sha1.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-sha1.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-sha1.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-sigchain and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-sigchain differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-sigchain.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-sigchain.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-sigchain.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-sigchain.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-string-list and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-string-list differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-string-list.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-string-list.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-string-list.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-string-list.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-subprocess and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-subprocess differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-subprocess.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-subprocess.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-subprocess.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-subprocess.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-svn-fe and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-svn-fe differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-svn-fe.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-svn-fe.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-svn-fe.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-svn-fe.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-urlmatch-normalization and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-urlmatch-normalization differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-urlmatch-normalization.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-urlmatch-normalization.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-urlmatch-normalization.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-urlmatch-normalization.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-wildmatch and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-wildmatch differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-wildmatch.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-wildmatch.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/test-wildmatch.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/test-wildmatch.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/thread-utils.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/thread-utils.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/thread-utils.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/thread-utils.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/trace.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/trace.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/trace.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/trace.c	2015-02-06 05:40:08.000000000 +0800
@@ -119,15 +119,13 @@
 
 	return 1;
 }
 
 static void print_trace_line(struct trace_key *key, struct strbuf *buf)
 {
-	/* append newline if missing */
-	if (buf->len && buf->buf[buf->len - 1] != '\n')
-		strbuf_addch(buf, '\n');
+	strbuf_complete_line(buf);
 
 	write_or_whine_pipe(get_trace_fd(key), buf->buf, buf->len, err_msg);
 	strbuf_release(buf);
 }
 
 static void trace_vprintf_fl(const char *file, int line, struct trace_key *key,
@@ -321,13 +319,13 @@
 
 int trace_want(struct trace_key *key)
 {
 	return !!get_trace_fd(key);
 }
 
-#ifdef HAVE_CLOCK_GETTIME
+#if defined(HAVE_CLOCK_GETTIME) && defined(HAVE_CLOCK_MONOTONIC)
 
 static inline uint64_t highres_nanos(void)
 {
 	struct timespec ts;
 	if (clock_gettime(CLOCK_MONOTONIC, &ts))
 		return 0;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/trace.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/trace.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/trace.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/trace.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/trailer.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/trailer.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/trailer.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/trailer.c	2015-02-06 05:40:08.000000000 +0800
@@ -1,10 +1,11 @@
 #include "cache.h"
 #include "string-list.h"
 #include "run-command.h"
 #include "string-list.h"
+#include "commit.h"
 #include "trailer.h"
 /*
  * Copyright (c) 2013, 2014 Christian Couder <chriscool@tuxfamily.org>
  */
 
 enum action_where { WHERE_END, WHERE_AFTER, WHERE_BEFORE, WHERE_START };
@@ -765,12 +766,28 @@
 		return count;
 	}
 
 	return only_spaces ? count : 0;
 }
 
+/* Get the index of the end of the trailers */
+static int find_trailer_end(struct strbuf **lines, int patch_start)
+{
+	struct strbuf sb = STRBUF_INIT;
+	int i, ignore_bytes;
+
+	for (i = 0; i < patch_start; i++)
+		strbuf_addbuf(&sb, lines[i]);
+	ignore_bytes = ignore_non_trailer(&sb);
+	strbuf_release(&sb);
+	for (i = patch_start - 1; i >= 0 && ignore_bytes > 0; i--)
+		ignore_bytes -= lines[i]->len;
+
+	return i + 1;
+}
+
 static int has_blank_line_before(struct strbuf **lines, int start)
 {
 	for (;start >= 0; start--) {
 		if (lines[start]->buf[0] == comment_line_char)
 			continue;
 		return contains_only_spaces(lines[start]->buf);
@@ -787,36 +804,37 @@
 
 static int process_input_file(struct strbuf **lines,
 			      struct trailer_item **in_tok_first,
 			      struct trailer_item **in_tok_last)
 {
 	int count = 0;
-	int patch_start, trailer_start, i;
+	int patch_start, trailer_start, trailer_end, i;
 
 	/* Get the line count */
 	while (lines[count])
 		count++;
 
 	patch_start = find_patch_start(lines, count);
-	trailer_start = find_trailer_start(lines, patch_start);
+	trailer_end = find_trailer_end(lines, patch_start);
+	trailer_start = find_trailer_start(lines, trailer_end);
 
 	/* Print lines before the trailers as is */
 	print_lines(lines, 0, trailer_start);
 
 	if (!has_blank_line_before(lines, trailer_start - 1))
 		printf("\n");
 
 	/* Parse trailer lines */
-	for (i = trailer_start; i < patch_start; i++) {
+	for (i = trailer_start; i < trailer_end; i++) {
 		if (lines[i]->buf[0] != comment_line_char) {
 			struct trailer_item *new = create_trailer_item(lines[i]->buf);
 			add_trailer_item(in_tok_first, in_tok_last, new);
 		}
 	}
 
-	return patch_start;
+	return trailer_end;
 }
 
 static void free_all(struct trailer_item **first)
 {
 	while (*first) {
 		struct trailer_item *item = remove_first(first);
@@ -827,30 +845,30 @@
 void process_trailers(const char *file, int trim_empty, struct string_list *trailers)
 {
 	struct trailer_item *in_tok_first = NULL;
 	struct trailer_item *in_tok_last = NULL;
 	struct trailer_item *arg_tok_first;
 	struct strbuf **lines;
-	int patch_start;
+	int trailer_end;
 
 	/* Default config must be setup first */
 	git_config(git_trailer_default_config, NULL);
 	git_config(git_trailer_config, NULL);
 
 	lines = read_input_file(file);
 
 	/* Print the lines before the trailers */
-	patch_start = process_input_file(lines, &in_tok_first, &in_tok_last);
+	trailer_end = process_input_file(lines, &in_tok_first, &in_tok_last);
 
 	arg_tok_first = process_command_line_args(trailers);
 
 	process_trailers_lists(&in_tok_first, &in_tok_last, &arg_tok_first);
 
 	print_all(in_tok_first, trim_empty);
 
 	free_all(&in_tok_first);
 
 	/* Print the lines after the trailers as is */
-	print_lines(lines, patch_start, INT_MAX);
+	print_lines(lines, trailer_end, INT_MAX);
 
 	strbuf_list_free(lines);
 }
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/trailer.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/trailer.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/trailer.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/trailer.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/transport.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/transport.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/transport.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/transport.c	2015-02-06 05:40:08.000000000 +0800
@@ -968,15 +968,13 @@
 
 		data->conn = NULL;
 		data->got_remote_heads = 0;
 	} else {
 		/* Unknown protocol in URL. Pass to external handler. */
 		int len = external_specification_len(url);
-		char *handler = xmalloc(len + 1);
-		handler[len] = 0;
-		strncpy(handler, url, len);
+		char *handler = xmemdupz(url, len);
 		transport_helper_init(ret, handler);
 	}
 
 	if (ret->smart_options) {
 		ret->smart_options->thin = 1;
 		ret->smart_options->uploadpack = "git-upload-pack";
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/transport.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/transport.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/transport-helper.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/transport-helper.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/transport-helper.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/transport-helper.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/transport.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/transport.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/tree.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/tree.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/tree.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/tree.c	2015-02-06 05:40:08.000000000 +0800
@@ -27,25 +27,31 @@
 	memcpy(ce->name, base, baselen);
 	memcpy(ce->name + baselen, pathname, len+1);
 	hashcpy(ce->sha1, sha1);
 	return add_cache_entry(ce, opt);
 }
 
-static int read_one_entry(const unsigned char *sha1, const char *base, int baselen, const char *pathname, unsigned mode, int stage, void *context)
+static int read_one_entry(const unsigned char *sha1, struct strbuf *base,
+			  const char *pathname, unsigned mode, int stage,
+			  void *context)
 {
-	return read_one_entry_opt(sha1, base, baselen, pathname, mode, stage,
+	return read_one_entry_opt(sha1, base->buf, base->len, pathname,
+				  mode, stage,
 				  ADD_CACHE_OK_TO_ADD|ADD_CACHE_SKIP_DFCHECK);
 }
 
 /*
  * This is used when the caller knows there is no existing entries at
  * the stage that will conflict with the entry being added.
  */
-static int read_one_entry_quick(const unsigned char *sha1, const char *base, int baselen, const char *pathname, unsigned mode, int stage, void *context)
+static int read_one_entry_quick(const unsigned char *sha1, struct strbuf *base,
+				const char *pathname, unsigned mode, int stage,
+				void *context)
 {
-	return read_one_entry_opt(sha1, base, baselen, pathname, mode, stage,
+	return read_one_entry_opt(sha1, base->buf, base->len, pathname,
+				  mode, stage,
 				  ADD_CACHE_JUST_APPEND);
 }
 
 static int read_tree_1(struct tree *tree, struct strbuf *base,
 		       int stage, const struct pathspec *pathspec,
 		       read_tree_fn_t fn, void *context)
@@ -67,13 +73,13 @@
 			if (retval == all_entries_not_interesting)
 				break;
 			if (retval == entry_not_interesting)
 				continue;
 		}
 
-		switch (fn(entry.sha1, base->buf, base->len,
+		switch (fn(entry.sha1, base,
 			   entry.path, entry.mode, stage, context)) {
 		case 0:
 			continue;
 		case READ_TREE_RECURSIVE:
 			break;
 		default:
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/tree.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/tree.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/tree-diff.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/tree-diff.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/tree-diff.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/tree-diff.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/tree.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/tree.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/tree.h	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/tree.h	2015-02-06 05:40:08.000000000 +0800
@@ -1,12 +1,13 @@
 #ifndef TREE_H
 #define TREE_H
 
 #include "object.h"
 
 extern const char *tree_type;
+struct strbuf;
 
 struct tree {
 	struct object object;
 	void *buffer;
 	unsigned long size;
 };
@@ -19,13 +20,13 @@
 void free_tree_buffer(struct tree *tree);
 
 /* Parses and returns the tree in the given ent, chasing tags and commits. */
 struct tree *parse_tree_indirect(const unsigned char *sha1);
 
 #define READ_TREE_RECURSIVE 1
-typedef int (*read_tree_fn_t)(const unsigned char *, const char *, int, const char *, unsigned int, int, void *);
+typedef int (*read_tree_fn_t)(const unsigned char *, struct strbuf *, const char *, unsigned int, int, void *);
 
 extern int read_tree_recursive(struct tree *tree,
 			       const char *base, int baselen,
 			       int stage, const struct pathspec *pathspec,
 			       read_tree_fn_t fn, void *context);
 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/tree.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/tree.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/tree-walk.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/tree-walk.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/tree-walk.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/tree-walk.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/unix-socket.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/unix-socket.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/unix-socket.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/unix-socket.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/unpack-trees.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/unpack-trees.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/unpack-trees.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/unpack-trees.c	2015-02-06 05:40:08.000000000 +0800
@@ -1154,12 +1154,14 @@
 
 	o->src_index = NULL;
 	ret = check_updates(o) ? (-2) : 0;
 	if (o->dst_index) {
 		discard_index(o->dst_index);
 		*o->dst_index = o->result;
+	} else {
+		discard_index(&o->result);
 	}
 
 done:
 	clear_exclude_list(&el);
 	return ret;
 
@@ -1429,24 +1431,21 @@
 		return 0;
 
 	len = check_leading_path(ce->name, ce_namelen(ce));
 	if (!len)
 		return 0;
 	else if (len > 0) {
-		char *path;
-		int ret;
-
-		path = xmemdupz(ce->name, len);
+		char path[PATH_MAX + 1];
+		memcpy(path, ce->name, len);
+		path[len] = 0;
 		if (lstat(path, &st))
-			ret = error("cannot stat '%s': %s", path,
+			return error("cannot stat '%s': %s", path,
 					strerror(errno));
-		else
-			ret = check_ok_to_remove(path, len, DT_UNKNOWN, NULL,
-						 &st, error_type, o);
-		free(path);
-		return ret;
+
+		return check_ok_to_remove(path, len, DT_UNKNOWN, NULL, &st,
+				error_type, o);
 	} else if (lstat(ce->name, &st)) {
 		if (errno != ENOENT)
 			return error("cannot stat '%s': %s", ce->name,
 				     strerror(errno));
 		return 0;
 	} else {
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/unpack-trees.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/unpack-trees.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/unpack-trees.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/unpack-trees.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/update_unicode.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/update_unicode.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/update_unicode.sh	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/update_unicode.sh	2015-02-06 05:40:08.000000000 +0800
@@ -24,14 +24,17 @@
 		if ! test -x uniset; then
 			autoreconf -i &&
 			./configure --enable-warnings=-Werror CFLAGS='-O0 -ggdb'
 		fi &&
 		make
 	) &&
-	echo "static const struct interval zero_width[] = {" >$UNICODEWIDTH_H &&
-	UNICODE_DIR=. ./uniset/uniset --32 cat:Me,Mn,Cf + U+1160..U+11FF - U+00AD |
-	grep -v plane >>$UNICODEWIDTH_H &&
-	echo "};" >>$UNICODEWIDTH_H &&
-	echo "static const struct interval double_width[] = {" >>$UNICODEWIDTH_H &&
-	UNICODE_DIR=. ./uniset/uniset --32 eaw:F,W >>$UNICODEWIDTH_H &&
-	echo "};" >>$UNICODEWIDTH_H
+	UNICODE_DIR=. && export UNICODE_DIR &&
+	cat >$UNICODEWIDTH_H <<-EOF
+	static const struct interval zero_width[] = {
+		$(uniset/uniset --32 cat:Me,Mn,Cf + U+1160..U+11FF - U+00AD |
+		  grep -v plane)
+	};
+	static const struct interval double_width[] = {
+		$(uniset/uniset --32 eaw:F,W)
+	};
+	EOF
 )
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/upload-pack.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/upload-pack.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/upload-pack.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/upload-pack.c	2015-02-06 05:40:08.000000000 +0800
@@ -83,13 +83,13 @@
 	struct child_process pack_objects = CHILD_PROCESS_INIT;
 	char data[8193], progress[128];
 	char abort_msg[] = "aborting due to possible repository "
 		"corruption on the remote side.";
 	int buffered = -1;
 	ssize_t sz;
-	const char *argv[12];
+	const char *argv[13];
 	int i, arg = 0;
 	FILE *pipe_fd;
 
 	if (shallow_nr) {
 		argv[arg++] = "--shallow-file";
 		argv[arg++] = "";
@@ -97,12 +97,14 @@
 	argv[arg++] = "pack-objects";
 	argv[arg++] = "--revs";
 	if (use_thin_pack)
 		argv[arg++] = "--thin";
 
 	argv[arg++] = "--stdout";
+	if (shallow_nr)
+		argv[arg++] = "--shallow";
 	if (!no_progress)
 		argv[arg++] = "--progress";
 	if (use_ofs_delta)
 		argv[arg++] = "--delta-base-offset";
 	if (use_include_tag)
 		argv[arg++] = "--include-tag";
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/upload-pack.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/upload-pack.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/upload-pack.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/upload-pack.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/url.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/url.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/urlmatch.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/urlmatch.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/urlmatch.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/urlmatch.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/url.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/url.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/usage.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/usage.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/usage.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/usage.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/userdiff.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/userdiff.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/userdiff.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/userdiff.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/utf8.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/utf8.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/utf8.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/utf8.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/varint.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/varint.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/varint.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/varint.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/vcs-svn/fast_export.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/vcs-svn/fast_export.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/vcs-svn/fast_export.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/vcs-svn/fast_export.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/vcs-svn/lib.a and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/vcs-svn/lib.a differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/vcs-svn/line_buffer.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/vcs-svn/line_buffer.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/vcs-svn/line_buffer.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/vcs-svn/line_buffer.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/vcs-svn/repo_tree.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/vcs-svn/repo_tree.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/vcs-svn/repo_tree.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/vcs-svn/repo_tree.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/vcs-svn/sliding_window.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/vcs-svn/sliding_window.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/vcs-svn/sliding_window.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/vcs-svn/sliding_window.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/vcs-svn/svndiff.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/vcs-svn/svndiff.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/vcs-svn/svndiff.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/vcs-svn/svndiff.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/vcs-svn/svndump.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/vcs-svn/svndump.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/vcs-svn/svndump.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/vcs-svn/svndump.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/version /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/version
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/version	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/version	2015-02-06 05:40:08.000000000 +0800
@@ -1 +1 @@
-2.2.3
+2.3.0
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/version.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/version.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/versioncmp.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/versioncmp.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/versioncmp.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/versioncmp.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/version.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/version.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/walker.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/walker.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/walker.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/walker.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/wildmatch.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/wildmatch.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/wildmatch.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/wildmatch.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/wrapper.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/wrapper.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/wrapper.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/wrapper.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/write_or_die.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/write_or_die.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/write_or_die.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/write_or_die.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/ws.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/ws.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/ws.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/ws.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/wt-status.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/wt-status.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/wt-status.c	2015-09-05 02:12:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/wt-status.c	2015-02-06 05:40:08.000000000 +0800
@@ -723,38 +723,35 @@
 	wt_status_print_trailer(s);
 }
 
 static void wt_status_print_submodule_summary(struct wt_status *s, int uncommitted)
 {
 	struct child_process sm_summary = CHILD_PROCESS_INIT;
-	struct argv_array argv = ARGV_ARRAY_INIT;
 	struct strbuf cmd_stdout = STRBUF_INIT;
 	struct strbuf summary = STRBUF_INIT;
 	char *summary_content;
 	size_t len;
 
 	argv_array_pushf(&sm_summary.env_array, "GIT_INDEX_FILE=%s",
 			 s->index_file);
 
-	argv_array_push(&argv, "submodule");
-	argv_array_push(&argv, "summary");
-	argv_array_push(&argv, uncommitted ? "--files" : "--cached");
-	argv_array_push(&argv, "--for-status");
-	argv_array_push(&argv, "--summary-limit");
-	argv_array_pushf(&argv, "%d", s->submodule_summary);
+	argv_array_push(&sm_summary.args, "submodule");
+	argv_array_push(&sm_summary.args, "summary");
+	argv_array_push(&sm_summary.args, uncommitted ? "--files" : "--cached");
+	argv_array_push(&sm_summary.args, "--for-status");
+	argv_array_push(&sm_summary.args, "--summary-limit");
+	argv_array_pushf(&sm_summary.args, "%d", s->submodule_summary);
 	if (!uncommitted)
-		argv_array_push(&argv, s->amend ? "HEAD^" : "HEAD");
+		argv_array_push(&sm_summary.args, s->amend ? "HEAD^" : "HEAD");
 
-	sm_summary.argv = argv.argv;
 	sm_summary.git_cmd = 1;
 	sm_summary.no_stdin = 1;
 	fflush(s->fp);
 	sm_summary.out = -1;
 
 	run_command(&sm_summary);
-	argv_array_clear(&argv);
 
 	len = strbuf_read(&cmd_stdout, sm_summary.out, 1024);
 
 	/* prepend header, only if there's an actual output */
 	if (len) {
 		if (uncommitted)
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/wt-status.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/wt-status.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/wt-status.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/wt-status.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/xdiff/lib.a and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/xdiff/lib.a differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/xdiff/xdiffi.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/xdiff/xdiffi.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/xdiff/xdiffi.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/xdiff/xdiffi.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/xdiff/xemit.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/xdiff/xemit.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/xdiff/xemit.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/xdiff/xemit.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/xdiff/xhistogram.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/xdiff/xhistogram.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/xdiff/xhistogram.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/xdiff/xhistogram.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/xdiff/xmerge.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/xdiff/xmerge.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/xdiff/xmerge.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/xdiff/xmerge.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/xdiff/xpatience.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/xdiff/xpatience.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/xdiff/xpatience.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/xdiff/xpatience.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/xdiff/xprepare.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/xdiff/xprepare.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/xdiff/xprepare.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/xdiff/xprepare.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/xdiff/xutils.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/xdiff/xutils.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/xdiff/xutils.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/xdiff/xutils.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/xdiff-interface.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/xdiff-interface.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/xdiff-interface.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/xdiff-interface.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/zlib.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/zlib.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.2.3/zlib.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.3.0/zlib.o differ
